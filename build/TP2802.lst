ARM GAS  /tmp/ccSTfybG.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"TP2802.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.tp2824_reset_default,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	tp2824_reset_default:
  23              	.LFB79:
  24              		.file 1 "TP2824/TP2802.c"
   1:TP2824/TP2802.c **** // *****************************************************
   2:TP2824/TP2802.c **** // Company : Techpoint Inc
   3:TP2824/TP2802.c **** // $Date: 2014-03-10
   4:TP2824/TP2802.c **** // $Log:  $
   5:TP2824/TP2802.c **** // ******************************************************
   6:TP2824/TP2802.c **** #include "VXIS_Extern_Define.h"
   7:TP2824/TP2802.c **** #include "stdlib.h"
   8:TP2824/TP2802.c **** //#include "tpinc/Device_Rx.h"
   9:TP2824/TP2802.c **** #include "tpinc/TP2802.h"
  10:TP2824/TP2802.c **** 
  11:TP2824/TP2802.c **** #include "VX_swi2c.h"
  12:TP2824/TP2802.c **** #include "VS4210.h"
  13:TP2824/TP2802.c **** #include "etc_eep.h"
  14:TP2824/TP2802.c **** #include "keyremo.h"
  15:TP2824/TP2802.c **** #include "Printf.h"
  16:TP2824/TP2802.c **** #include "stm32f1xx_hal.h"
  17:TP2824/TP2802.c **** 
  18:TP2824/TP2802.c **** //extern tByte ManVidResRx;
  19:TP2824/TP2802.c **** 
  20:TP2824/TP2802.c **** tByte ManVidResRx;
  21:TP2824/TP2802.c **** extern tByte ManSelCh;
  22:TP2824/TP2802.c **** extern tByte gRxLoopFlg;
  23:TP2824/TP2802.c **** 
  24:TP2824/TP2802.c **** #ifndef TRUE
  25:TP2824/TP2802.c **** #define TRUE 1
  26:TP2824/TP2802.c **** #endif
  27:TP2824/TP2802.c **** 
  28:TP2824/TP2802.c **** #ifndef FALSE
  29:TP2824/TP2802.c **** #define FALSE 0
  30:TP2824/TP2802.c **** #endif
  31:TP2824/TP2802.c **** 
  32:TP2824/TP2802.c **** //TP2802D EQ for short cable option
  33:TP2824/TP2802.c **** #define TP2802D_EQ_SHORT 0x0d
  34:TP2824/TP2802.c **** #define TP2802D_CGAIN_SHORT 0x74
ARM GAS  /tmp/ccSTfybG.s 			page 2


  35:TP2824/TP2802.c **** //#define TP2802D_EQ_SHORT 0x01
  36:TP2824/TP2802.c **** //#define TP2802D_CGAIN_SHORT 0x70
  37:TP2824/TP2802.c **** 
  38:TP2824/TP2802.c **** //#define CVI_TEST 0
  39:TP2824/TP2802.c **** //#define AHD_TEST 1
  40:TP2824/TP2802.c **** 
  41:TP2824/TP2802.c **** #define CH_PER_CHIP 1//0x04
  42:TP2824/TP2802.c **** #define MAX_COUNT 	0xff
  43:TP2824/TP2802.c **** 
  44:TP2824/TP2802.c **** //extern void CreateMDIN340VideoInstance(void);
  45:TP2824/TP2802.c **** 
  46:TP2824/TP2802.c **** tByte newInRes[4] = {7,7,7,7} ;
  47:TP2824/TP2802.c **** 
  48:TP2824/TP2802.c **** extern bit DetAutoRes;
  49:TP2824/TP2802.c **** tByte	state[CH_PER_CHIP];
  50:TP2824/TP2802.c **** tByte	count[CH_PER_CHIP];
  51:TP2824/TP2802.c **** tByte	mode[CH_PER_CHIP];
  52:TP2824/TP2802.c **** tByte	std[CH_PER_CHIP];
  53:TP2824/TP2802.c **** tByte	egain[CH_PER_CHIP][4];
  54:TP2824/TP2802.c **** tByte	VideoSave[CH_PER_CHIP];
  55:TP2824/TP2802.c **** //tByte	ch_boot_reset[CH_PER_CHIP]={0,0,0,0};
  56:TP2824/TP2802.c **** tByte	revision;
  57:TP2824/TP2802.c **** tByte	chip;
  58:TP2824/TP2802.c **** tByte	flag_LOCKED;
  59:TP2824/TP2802.c **** tByte   TVII2CAddress;
  60:TP2824/TP2802.c **** tByte	PTZ_buf[16];
  61:TP2824/TP2802.c **** tWord   PTZ_pelco;
  62:TP2824/TP2802.c **** tByte   CurRes;
  63:TP2824/TP2802.c **** tByte   CurCH;
  64:TP2824/TP2802.c **** tByte crc;
  65:TP2824/TP2802.c **** bit sywd;
  66:TP2824/TP2802.c **** bit flag_CVBS;
  67:TP2824/TP2802.c **** bit flag_AUDIO;
  68:TP2824/TP2802.c **** bit flag_MEGA;
  69:TP2824/TP2802.c **** 
  70:TP2824/TP2802.c **** tcByte SYS_MODE[]= {0x01,0x02,0x04,0x08,0x0f};
  71:TP2824/TP2802.c **** tcByte SYS_AND[] = {0xfe,0xfd,0xfb,0xf7,0xf0};
  72:TP2824/TP2802.c **** 
  73:TP2824/TP2802.c **** tcByte REG_F6[4]= {0x00,0x11,0x22,0x33};
  74:TP2824/TP2802.c **** tcByte REG_F7[4]= {0x44,0x55,0x66,0x77};
  75:TP2824/TP2802.c **** tcByte REG_FA[4]= {0xBB,0xCC,0xDD,0xEE};
  76:TP2824/TP2802.c **** 
  77:TP2824/TP2802.c **** //cocrx
  78:TP2824/TP2802.c **** tByte     tpRxD[26];
  79:TP2824/TP2802.c **** BYTE COCRX1[12];
  80:TP2824/TP2802.c **** BYTE COCRX2[12];
  81:TP2824/TP2802.c **** BYTE COCRX3[12];
  82:TP2824/TP2802.c **** BYTE COCRX4[12];
  83:TP2824/TP2802.c **** /*
  84:TP2824/TP2802.c **** extern BYTE AHDcmd1,AHDcmd2,AHDcmd3,AHDcmd4;
  85:TP2824/TP2802.c **** extern BYTE TVI_Command;
  86:TP2824/TP2802.c **** extern BYTE presetNum;
  87:TP2824/TP2802.c **** extern BYTE TVI_Chksum;
  88:TP2824/TP2802.c **** extern BYTE TVI_speed;
  89:TP2824/TP2802.c **** extern bit ptztxflag;
  90:TP2824/TP2802.c **** */
  91:TP2824/TP2802.c **** BYTE AHDcmd1,AHDcmd2,AHDcmd3,AHDcmd4;
ARM GAS  /tmp/ccSTfybG.s 			page 3


  92:TP2824/TP2802.c **** BYTE TVI_Command;
  93:TP2824/TP2802.c **** BYTE presetNum;
  94:TP2824/TP2802.c **** BYTE TVI_Chksum;
  95:TP2824/TP2802.c **** BYTE TVI_speed;
  96:TP2824/TP2802.c **** bit ptztxflag;
  97:TP2824/TP2802.c **** BYTE Flisheye_CAM[4]={0};
  98:TP2824/TP2802.c **** BYTE Flisheye_COC;
  99:TP2824/TP2802.c **** tByte TP_InputMode=7;
 100:TP2824/TP2802.c **** 
 101:TP2824/TP2802.c **** WORD Flisheye_VLOSS_Count[4]={0};
 102:TP2824/TP2802.c **** 
 103:TP2824/TP2802.c **** //BYTE Flisheye_CAM[4]={1,1,1,1};
 104:TP2824/TP2802.c **** BYTE	COCSelectModeType[4]={5,5,5,5};
 105:TP2824/TP2802.c **** BYTE	PreCOCSelectModeType[4]={5,5,5,5};
 106:TP2824/TP2802.c **** 
 107:TP2824/TP2802.c **** //extern BYTE PtzTxChNum;//0:ch1 / 1:ch2 / 2:ch3 / 3:ch4
 108:TP2824/TP2802.c **** 
 109:TP2824/TP2802.c **** BYTE PtzTxChNum=0;//0:ch1 / 1:ch2 / 2:ch3 / 3:ch4
 110:TP2824/TP2802.c **** //extern BYTE QuadBoxId;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
 111:TP2824/TP2802.c **** BYTE QuadBoxId=0;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
 112:TP2824/TP2802.c **** BYTE QuadBoxMode=0;
 113:TP2824/TP2802.c **** 
 114:TP2824/TP2802.c **** extern BYTE SelectInputMode;
 115:TP2824/TP2802.c **** extern BYTE BOOT_ISSUE;
 116:TP2824/TP2802.c **** extern tByte  OSDSecCount;
 117:TP2824/TP2802.c **** extern tByte  OSDStateFlg;
 118:TP2824/TP2802.c **** 
 119:TP2824/TP2802.c **** 
 120:TP2824/TP2802.c **** extern BYTE	SelectModeType;
 121:TP2824/TP2802.c **** extern volatile BYTE MainSetSelectMode[13];
 122:TP2824/TP2802.c **** extern BYTE BOOT_ISSUE;
 123:TP2824/TP2802.c **** extern  BYTE CURRENT_CH;
 124:TP2824/TP2802.c **** extern BYTE BOX_ISSUE;
 125:TP2824/TP2802.c **** extern BYTE TriggerStatus;
 126:TP2824/TP2802.c **** extern BYTE TriggerFlag;
 127:TP2824/TP2802.c **** extern BYTE TriggerMode;
 128:TP2824/TP2802.c **** extern BYTE	PowerFlag;
 129:TP2824/TP2802.c **** 
 130:TP2824/TP2802.c **** 
 131:TP2824/TP2802.c **** enum
 132:TP2824/TP2802.c **** {
 133:TP2824/TP2802.c ****     TP2802C=0x02,
 134:TP2824/TP2802.c ****     TP2804 =0x04,
 135:TP2824/TP2802.c ****     TP2802D=0x05,
 136:TP2824/TP2802.c ****     TP2822 =0x22,
 137:TP2824/TP2802.c ****     TP2823 =0x23,
 138:TP2824/TP2802.c ****     TP2834 =0x24,
 139:TP2824/TP2802.c ****     TP2833 =0x25,
 140:TP2824/TP2802.c ****     TP2853C=0x26,
 141:TP2824/TP2802.c ****     TP2824C=0x27,
 142:TP2824/TP2802.c ****     TP2826 =0x2f
 143:TP2824/TP2802.c **** };
 144:TP2824/TP2802.c **** 
 145:TP2824/TP2802.c **** tcByte TP2824C_DataSet[] =
 146:TP2824/TP2802.c **** {
 147:TP2824/TP2802.c ****     0x40, 0x04,
 148:TP2824/TP2802.c ****     0x07, 0xC0,
ARM GAS  /tmp/ccSTfybG.s 			page 4


 149:TP2824/TP2802.c ****     0x0B, 0xC0,
 150:TP2824/TP2802.c ****     0x21, 0x84,
 151:TP2824/TP2802.c ****     0x38, 0x00,
 152:TP2824/TP2802.c ****     0x3A, 0x22,
 153:TP2824/TP2802.c ****     0x3B, 0x05,
 154:TP2824/TP2802.c ****     0x26, 0x04,
 155:TP2824/TP2802.c ****     //0x4d, 0x07,
 156:TP2824/TP2802.c ****     //0x4e, 0x05,
 157:TP2824/TP2802.c ****     0x4d, 0x0F,
 158:TP2824/TP2802.c ****     0x4e, 0x0F,  //chunyu
 159:TP2824/TP2802.c ****     0xf1, 0x00,//different with TP2826
 160:TP2824/TP2802.c **** //    0x10,0x67,//ryan@20210611 TOA changes the Brighness=0x67
 161:TP2824/TP2802.c **** //    0x12,0x70,//ryan@20210611 TOA changes the UVGAIN=0x70	
 162:TP2824/TP2802.c **** 
 163:TP2824/TP2802.c **** //    0x10,0x50,//ryan@20210629 TOA changes the Brighness=0x50  ///NTSC
 164:TP2824/TP2802.c **** //    0x11,0x58,//ryan@20210629 TOA changes the Contrast=0x58  ///NTSC
 165:TP2824/TP2802.c **** //    0x12,0x40,//ryan@20210629 TOA changes the UVGAME=0x40  ///NTSC
 166:TP2824/TP2802.c ****         
 167:TP2824/TP2802.c **** /*cocrx
 168:TP2824/TP2802.c **** //PTZ RX
 169:TP2824/TP2802.c **** //	0xc6, 0x1F,//0x19,	//TXBITCNNUM
 170:TP2824/TP2802.c **** //	0xc7, 0x78,		//TXHST
 171:TP2824/TP2802.c **** 	0xcb, 0x07,		//RXLINE1
 172:TP2824/TP2802.c **** 	0xcc, 0x08,		//RXLINE2
 173:TP2824/TP2802.c **** 	0xcd, 0x00,//0x09,		//RXLINE3
 174:TP2824/TP2802.c **** 	0xce, 0x00,//0x0a,		//RXLINE4
 175:TP2824/TP2802.c **** 	0xcf, 0x04,		//RXFREQ
 176:TP2824/TP2802.c **** 	0xd0, 0x00,		//RXFREQ
 177:TP2824/TP2802.c **** 	0xd1, 0x00,		//RXFREQ
 178:TP2824/TP2802.c **** 	0xd2, 0x60,		//RXTHLEVEL
 179:TP2824/TP2802.c **** 	0xd3, 0x10,		//RXHINUM
 180:TP2824/TP2802.c **** 	0xd4, 0x06,		//RXHST / RXHEND
 181:TP2824/TP2802.c **** 	0xd5, 0xbe,		//RXHST
 182:TP2824/TP2802.c **** 	0xd6, 0x39,		//RXHEND
 183:TP2824/TP2802.c **** 	0xd7, 0x27,		//RXBITNUM
 184:TP2824/TP2802.c **** */	
 185:TP2824/TP2802.c ****     0xff, 0xff
 186:TP2824/TP2802.c **** };
 187:TP2824/TP2802.c **** 
 188:TP2824/TP2802.c **** tcByte TP2826_DataSet[] =
 189:TP2824/TP2802.c **** {
 190:TP2824/TP2802.c ****     0x40, 0x04,
 191:TP2824/TP2802.c ****     0x07, 0xC0,
 192:TP2824/TP2802.c ****     0x0B, 0xC0,
 193:TP2824/TP2802.c ****     0x21, 0x84,
 194:TP2824/TP2802.c ****     0x38, 0x00,
 195:TP2824/TP2802.c ****     0x3A, 0x22,
 196:TP2824/TP2802.c ****     0x3B, 0x05,
 197:TP2824/TP2802.c ****     0x26, 0x04,
 198:TP2824/TP2802.c ****     0x4d, 0x07,
 199:TP2824/TP2802.c ****     0x4e, 0x05,
 200:TP2824/TP2802.c ****     0xf1, 0x07,
 201:TP2824/TP2802.c ****     0xff, 0xff
 202:TP2824/TP2802.c **** };
 203:TP2824/TP2802.c **** 
 204:TP2824/TP2802.c **** 
 205:TP2824/TP2802.c **** tcByte TP2826_MODE_DataSet[5][20]=
ARM GAS  /tmp/ccSTfybG.s 			page 5


 206:TP2824/TP2802.c **** {
 207:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0x2c,0x21,0x22,0x23,0x25,0x27,0x28
 208:TP2824/TP2802.c ****     {0x03,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x1c,0x0a,0x84,0x36,0x3c,0xff,0x2d,0x00
 209:TP2824/TP2802.c ****     {0x13,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x18,0x0a,0x84,0x36,0x3c,0xff,0x2d,0x00
 210:TP2824/TP2802.c ****     {0x13,0x50,0x40,0x05,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x04,0x2a,0x84,0x36,0x3c,0xff,0x2d,0x00
 211:TP2824/TP2802.c ****     {0x13,0x51,0x48,0x05,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x04,0x2a,0x84,0x37,0x3f,0xff,0x2d,0x00
 212:TP2824/TP2802.c **** };
 213:TP2824/TP2802.c **** tcByte TP2824C_MODE_DataSet[5][20+3]=
 214:TP2824/TP2802.c **** {
 215:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0x2c,0x21,0x22,0x23,0x25,0x27,0x28
 216:TP2824/TP2802.c ****     {0x03,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x1c,0x0a,0x84,0x36,0x3c,0xff,0x2d,0x00
 217:TP2824/TP2802.c ****     {0x13,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x18,0x0a,0x84,0x36,0x3c,0xff,0x2d,0x00
 218:TP2824/TP2802.c ****     {0x13,0x50,0x40,0x05,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x04,0x2a,0x84,0x36,0x3c,0xff,0x2d,0x00
 219:TP2824/TP2802.c ****     {0x13,0x51,0x48,0x05,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x04,0x2a,0x84,0x37,0x3f,0xff,0x2d,0x00
 220:TP2824/TP2802.c **** };
 221:TP2824/TP2802.c **** 
 222:TP2824/TP2802.c **** tcByte TP2826_HDA_DataSet[5][12]=
 223:TP2824/TP2802.c **** {
 224:TP2824/TP2802.c ****     {0x0c,0x20,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x21,0x25,0xff}, //ADDR
 225:TP2824/TP2802.c ****     {0x03,0x40,0x60,0x48,0x40,0x27,0x72,0x80,0x77,0x46,0xfe,0xff}, //720p30
 226:TP2824/TP2802.c ****     {0x03,0x40,0x60,0x48,0x40,0x27,0x88,0x04,0x23,0x46,0xfe,0xff}, //720p25
 227:TP2824/TP2802.c ****     {0x03,0x38,0x60,0x44,0x40,0x29,0x65,0x78,0x16,0x46,0xfe,0xff}, //1080p30
 228:TP2824/TP2802.c ****     {0x03,0x3c,0x60,0x44,0x40,0x29,0x61,0x78,0x16,0x46,0xfe,0xff}, //1080p25
 229:TP2824/TP2802.c **** };
 230:TP2824/TP2802.c **** tcByte TP2824C_HDA_DataSet[5][12+4]=
 231:TP2824/TP2802.c **** {
 232:TP2824/TP2802.c ****     {0x0c,0x20,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x21,0x25,0x10,0x11,0x12,0x14,0xff}, //ADDR
 233:TP2824/TP2802.c ****     {0x03,0x40,0x60,0x48,0x40,0x27,0x72,0x80,0x77,0x46,0xfe,0x50,0x50,0x40,0x4A,0xff}, //720p30
 234:TP2824/TP2802.c ****     {0x03,0x40,0x60,0x48,0x40,0x27,0x88,0x04,0x23,0x46,0xfe,0x50,0x50,0x40,0x4A,0xff}, //720p25
 235:TP2824/TP2802.c ****     {0x03,0x38,0x60,0x44,0x40,0x29,0x65,0x78,0x16,0x46,0xfe,0x50,0x50,0x40,0x4A,0xff}, //1080p30
 236:TP2824/TP2802.c ****     {0x03,0x3c,0x60,0x44,0x40,0x29,0x61,0x78,0x16,0x46,0xfe,0x50,0x50,0x40,0x4A,0xff}, //1080p25
 237:TP2824/TP2802.c **** };
 238:TP2824/TP2802.c **** tcByte TP2826_HDC_DataSet[5][20]=
 239:TP2824/TP2802.c **** {
 240:TP2824/TP2802.c ****     {0x0c,0x15,0x16,0x17,0x18,0x19,0x1a,0x1c,0x1d,0x20,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x27,0x28
 241:TP2824/TP2802.c ****     {0x03,0x13,0x08,0x00,0x19,0xd0,0x25,0x06,0x72,0x30,0x60,0x37,0x40,0x48,0x67,0x6f,0x30,0x5a,0x04
 242:TP2824/TP2802.c ****     {0x03,0x13,0x0a,0x00,0x19,0xd0,0x25,0x06,0x7a,0x3a,0x60,0x42,0x40,0x48,0x67,0x6f,0x33,0x5a,0x04
 243:TP2824/TP2802.c ****     {0x03,0x13,0x60,0x80,0x29,0x38,0x47,0x09,0x60,0x3c,0x60,0x47,0x40,0x41,0x82,0x27,0xa4,0x5a,0x04
 244:TP2824/TP2802.c ****     {0x03,0x13,0x60,0x80,0x29,0x38,0x47,0x09,0x60,0x50,0x60,0x54,0x40,0x41,0x82,0x27,0xa2,0x5a,0x04
 245:TP2824/TP2802.c **** };
 246:TP2824/TP2802.c **** tcByte TP2824C_HDC_DataSet[5][20]=
 247:TP2824/TP2802.c **** {
 248:TP2824/TP2802.c ****     {0x0c,0x15,0x16,0x17,0x18,0x19,0x1a,0x1c,0x1d,0x20,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x27,0x28
 249:TP2824/TP2802.c ****     {0x03,0x13,0x08,0x00,0x19,0xd0,0x25,0x06,0x72,0x30,0x60,0x37,0x40,0x48,0x67,0x6f,0x30,0x5a,0x04
 250:TP2824/TP2802.c ****     {0x03,0x13,0x0a,0x00,0x19,0xd0,0x25,0x06,0x7a,0x3a,0x60,0x42,0x40,0x48,0x67,0x6f,0x33,0x5a,0x04
 251:TP2824/TP2802.c ****     {0x03,0x13,0x60,0x80,0x29,0x38,0x47,0x09,0x60,0x3c,0x60,0x47,0x40,0x41,0x82,0x27,0xa4,0x5a,0x04
 252:TP2824/TP2802.c ****     {0x03,0x13,0x60,0x80,0x29,0x38,0x47,0x09,0x60,0x50,0x60,0x54,0x40,0x41,0x82,0x27,0xa2,0x5a,0x04
 253:TP2824/TP2802.c **** };
 254:TP2824/TP2802.c **** tcByte TP2853C_DataSet[] =
 255:TP2824/TP2802.c **** {
 256:TP2824/TP2802.c ****     0x40, 0x04,
 257:TP2824/TP2802.c ****     0x07, 0xC0,
 258:TP2824/TP2802.c ****     0x0B, 0xC0,
 259:TP2824/TP2802.c ****     0x21, 0x84,
 260:TP2824/TP2802.c ****     0x38, 0x00,
 261:TP2824/TP2802.c ****     0x3A, 0x32,
 262:TP2824/TP2802.c ****     0x3B, 0x05,
ARM GAS  /tmp/ccSTfybG.s 			page 6


 263:TP2824/TP2802.c ****     0x26, 0x04,
 264:TP2824/TP2802.c ****     0x4d, 0x03,
 265:TP2824/TP2802.c ****     0x4e, 0x03,
 266:TP2824/TP2802.c ****     0x4f, 0x01,
 267:TP2824/TP2802.c ****     0xf5, 0xf0,
 268:TP2824/TP2802.c ****     0xf1,0x07,//tp2826c
 269:TP2824/TP2802.c **** 
 270:TP2824/TP2802.c ****     0xff, 0xff
 271:TP2824/TP2802.c **** };
 272:TP2824/TP2802.c **** tcByte TP2853C_MODE_DataSet[5][18]=
 273:TP2824/TP2802.c **** {
 274:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0x2c,0x21,0x25,0x27,0x28,0xff}, //
 275:TP2824/TP2802.c ****     {0x03,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x0c,0x0a,0x84,0xf0,0x2d,0x00,0xff}, //
 276:TP2824/TP2802.c ****     {0x13,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x08,0x0a,0x84,0xf0,0x2d,0x00,0xff},	//
 277:TP2824/TP2802.c ****     {0x13,0x50,0x40,0x05,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x04,0x2a,0x84,0xf0,0x2d,0x00,0xff}, //
 278:TP2824/TP2802.c ****     {0x13,0x51,0x48,0x05,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x04,0x2a,0x84,0xf0,0x2d,0x00,0xff}  //
 279:TP2824/TP2802.c **** };
 280:TP2824/TP2802.c **** tcByte TP2853C_HDA_DataSet[5][10]=
 281:TP2824/TP2802.c **** {
 282:TP2824/TP2802.c ****     {0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x21,0x25,0xff}, //ADDR
 283:TP2824/TP2802.c ****     {0x70,0x48,0x5e,0x27,0x72,0x80,0x77,0x44,0xf0,0xff}, //720p30
 284:TP2824/TP2802.c ****     {0x70,0x48,0x5e,0x27,0x88,0x04,0x23,0x44,0xf0,0xff}, //720p25
 285:TP2824/TP2802.c ****     {0x58,0x45,0x50,0x29,0x65,0x78,0x16,0x44,0xf0,0xff}, //1080p30
 286:TP2824/TP2802.c ****     {0x58,0x45,0x40,0x29,0x61,0x78,0x16,0x44,0xf0,0xff}, //1080p25
 287:TP2824/TP2802.c **** };
 288:TP2824/TP2802.c **** tcByte TP2853C_HDC_DataSet[5][13]=
 289:TP2824/TP2802.c **** {
 290:TP2824/TP2802.c ****     {0x15,0x16,0x20,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x27,0x28,0xff}, //ADDR
 291:TP2824/TP2802.c ****     {0x13,0x40,0x50,0x60,0x42,0x40,0x48,0x67,0x2e,0x90,0x5a,0x04,0xff}, //720p30
 292:TP2824/TP2802.c ****     {0x13,0x40,0x50,0x60,0x42,0x40,0x48,0x67,0x2e,0x90,0x5a,0x04,0xff}, //720p25
 293:TP2824/TP2802.c ****     {0x13,0x20,0x48,0x60,0x45,0x40,0x41,0x83,0x2e,0x90,0x5a,0x04,0xff}, //1080p30
 294:TP2824/TP2802.c ****     {0x13,0x84,0x48,0x60,0x45,0x40,0x41,0x83,0x2e,0x90,0x5a,0x04,0xff}, //1080p25
 295:TP2824/TP2802.c **** };
 296:TP2824/TP2802.c **** 
 297:TP2824/TP2802.c **** tcByte TP2834_Audio_DataSet[]=
 298:TP2824/TP2802.c **** {
 299:TP2824/TP2802.c **** //audio
 300:TP2824/TP2802.c ****     0x40, 0x40, //audio page
 301:TP2824/TP2802.c ****     0x00, 0x01, //A1
 302:TP2824/TP2802.c ****     0x01, 0x02, //A2
 303:TP2824/TP2802.c ****     0x02, 0x03, //A3
 304:TP2824/TP2802.c ****     0x03, 0x04, //A4
 305:TP2824/TP2802.c ****     0x04, 0x11, //AUX
 306:TP2824/TP2802.c ****     0x17, 0x00,
 307:TP2824/TP2802.c ****     0x18, 0x10, //5ch mode
 308:TP2824/TP2802.c ****     0x19, 0x0f,
 309:TP2824/TP2802.c ****     0x1A, 0x15, //PB to DAC
 310:TP2824/TP2802.c ****     0x1b, 0x01, //PB master
 311:TP2824/TP2802.c ****     0x37, 0x20,
 312:TP2824/TP2802.c **** 
 313:TP2824/TP2802.c ****     0x1d, 0x08,
 314:TP2824/TP2802.c ****     0x1d, 0x00,
 315:TP2824/TP2802.c **** 
 316:TP2824/TP2802.c ****     0x3c, 0x3f,
 317:TP2824/TP2802.c ****     0x3c, 0x00,
 318:TP2824/TP2802.c **** 
 319:TP2824/TP2802.c ****     0x3d, 0x01, //ADC reset
ARM GAS  /tmp/ccSTfybG.s 			page 7


 320:TP2824/TP2802.c ****     0xff, 0xff
 321:TP2824/TP2802.c **** };
 322:TP2824/TP2802.c **** 
 323:TP2824/TP2802.c **** tcByte TP2833_DataSet[] =
 324:TP2824/TP2802.c **** {
 325:TP2824/TP2802.c **** 
 326:TP2824/TP2802.c ****     0x40, 0x04,
 327:TP2824/TP2802.c ****     0x07, 0xC0,
 328:TP2824/TP2802.c ****     0x0B, 0xC0,
 329:TP2824/TP2802.c ****     0x22, 0x36,
 330:TP2824/TP2802.c ****     0x38, 0x40,
 331:TP2824/TP2802.c ****     0x26, 0x04,
 332:TP2824/TP2802.c ****     0x4d, 0x03,
 333:TP2824/TP2802.c ****     0x4e, 0x03,
 334:TP2824/TP2802.c ****     0x4f, 0x01,
 335:TP2824/TP2802.c ****     0xff, 0xff
 336:TP2824/TP2802.c **** };
 337:TP2824/TP2802.c **** tcByte TP2833_MODE_DataSet[5][14]=
 338:TP2824/TP2802.c **** {
 339:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0x18,0xff},
 340:TP2824/TP2802.c ****     {0x03,0x50,0x30,0x05,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x0c,0x12,0xff},
 341:TP2824/TP2802.c ****     {0x13,0x50,0x30,0x05,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x08,0x12,0xff},
 342:TP2824/TP2802.c ****     {0x13,0x50,0x40,0x05,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x04,0x11,0xff},
 343:TP2824/TP2802.c ****     {0x13,0x51,0x48,0x05,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x04,0x11,0xff}
 344:TP2824/TP2802.c **** };
 345:TP2824/TP2802.c **** tcByte TP2833_HDA_DataSet[5][8]=
 346:TP2824/TP2802.c **** {
 347:TP2824/TP2802.c ****     {0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0xff}, //ADDR
 348:TP2824/TP2802.c ****     {0x70,0x48,0x5e,0x27,0x72,0x80,0x77,0xff}, //720p30
 349:TP2824/TP2802.c ****     {0x70,0x48,0x5e,0x27,0x88,0x04,0x23,0xff}, //720p25
 350:TP2824/TP2802.c ****     {0x58,0x45,0x50,0x29,0x65,0x78,0x16,0xff}, //1080p30
 351:TP2824/TP2802.c ****     {0x58,0x45,0x40,0x29,0x61,0x78,0x16,0xff}, //1080p25
 352:TP2824/TP2802.c **** };
 353:TP2824/TP2802.c **** 
 354:TP2824/TP2802.c **** tcByte TP2834_DataSet[] =
 355:TP2824/TP2802.c **** {
 356:TP2824/TP2802.c **** 
 357:TP2824/TP2802.c ****     //video
 358:TP2824/TP2802.c ****     0x40, 0x04,
 359:TP2824/TP2802.c ****     0x07, 0xc0,
 360:TP2824/TP2802.c ****     0x0b, 0xc0,
 361:TP2824/TP2802.c ****     0x3a, 0x70,
 362:TP2824/TP2802.c ****     0x26, 0x01,
 363:TP2824/TP2802.c **** 
 364:TP2824/TP2802.c ****     0x4d, 0x0f,
 365:TP2824/TP2802.c ****     0x4e, 0x0f,
 366:TP2824/TP2802.c **** 
 367:TP2824/TP2802.c ****     0xff, 0xff
 368:TP2824/TP2802.c **** };
 369:TP2824/TP2802.c **** tcByte TP2834_MODE_DataSet[5][13]=
 370:TP2824/TP2802.c **** {
 371:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0xff},
 372:TP2824/TP2802.c ****     {0x03,0x10,0x60,0x02,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x8c,0xff},
 373:TP2824/TP2802.c ****     {0x03,0x10,0x60,0x02,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x88,0xff},
 374:TP2824/TP2802.c ****     {0x43,0x10,0xa0,0x12,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x84,0xff},
 375:TP2824/TP2802.c ****     {0x43,0x11,0xb0,0x02,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x84,0xff}
 376:TP2824/TP2802.c **** };
ARM GAS  /tmp/ccSTfybG.s 			page 8


 377:TP2824/TP2802.c **** 
 378:TP2824/TP2802.c **** //////////////////////////////////////////////////////
 379:TP2824/TP2802.c **** ////
 380:TP2824/TP2802.c **** /////////////////////////////////////////////////////
 381:TP2824/TP2802.c **** 
 382:TP2824/TP2802.c **** tcByte TP2823_DataSet[] =
 383:TP2824/TP2802.c **** {
 384:TP2824/TP2802.c **** 
 385:TP2824/TP2802.c ****     //video
 386:TP2824/TP2802.c ****     0x40, 0x04,
 387:TP2824/TP2802.c ****     0x0b, 0x60,
 388:TP2824/TP2802.c ****     0x22, 0x34,
 389:TP2824/TP2802.c ****     0x23, 0x44,
 390:TP2824/TP2802.c ****     0x26, 0x01,
 391:TP2824/TP2802.c ****     0x38, 0x40,
 392:TP2824/TP2802.c ****     0x3f, 0x08,
 393:TP2824/TP2802.c **** 
 394:TP2824/TP2802.c ****     0x4d, 0x03,
 395:TP2824/TP2802.c ****     0x4e, 0x33,
 396:TP2824/TP2802.c ****     0xfa, 0x00,
 397:TP2824/TP2802.c **** 
 398:TP2824/TP2802.c ****     0xff, 0xff
 399:TP2824/TP2802.c **** };
 400:TP2824/TP2802.c **** tcByte TP2823_MODE_DataSet[5][13]=
 401:TP2824/TP2802.c **** {
 402:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0xff},
 403:TP2824/TP2802.c ****     {0x43,0x10,0x60,0x02,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x30,0xff},
 404:TP2824/TP2802.c ****     {0x53,0x10,0x60,0x02,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x20,0xff},
 405:TP2824/TP2802.c ****     {0x53,0x10,0xa0,0x12,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x10,0xff},
 406:TP2824/TP2802.c ****     {0x53,0x11,0xb0,0x02,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x10,0xff}
 407:TP2824/TP2802.c **** };
 408:TP2824/TP2802.c **** tcByte TP2822_DataSet[] =
 409:TP2824/TP2802.c **** {
 410:TP2824/TP2802.c **** 
 411:TP2824/TP2802.c ****     0x40, 0x04,
 412:TP2824/TP2802.c ****     0x39, 0x00,
 413:TP2824/TP2802.c ****     0x3d, 0x08,
 414:TP2824/TP2802.c ****     0x3a, 0x01,
 415:TP2824/TP2802.c **** 
 416:TP2824/TP2802.c ****     0x30, 0x48,
 417:TP2824/TP2802.c ****     0x31, 0xbb,
 418:TP2824/TP2802.c ****     0x32, 0x2e,
 419:TP2824/TP2802.c ****     0x33, 0x90,
 420:TP2824/TP2802.c **** 
 421:TP2824/TP2802.c ****     0x4d, 0x03,
 422:TP2824/TP2802.c ****     0x4e, 0x33,
 423:TP2824/TP2802.c ****     0x3d, 0x00,
 424:TP2824/TP2802.c **** 
 425:TP2824/TP2802.c ****     0xff, 0xff
 426:TP2824/TP2802.c **** };
 427:TP2824/TP2802.c **** 
 428:TP2824/TP2802.c **** tcByte TP2802D_DataSet[] =
 429:TP2824/TP2802.c **** {
 430:TP2824/TP2802.c ****     0x40, 0x04,
 431:TP2824/TP2802.c **** //		0x07, 0xc0,
 432:TP2824/TP2802.c **** //		0x0b, 0xc0,
 433:TP2824/TP2802.c ****     0x2b, 0x44,
ARM GAS  /tmp/ccSTfybG.s 			page 9


 434:TP2824/TP2802.c ****     0x23, 0x50,
 435:TP2824/TP2802.c ****     0x39, 0x42,
 436:TP2824/TP2802.c ****     0x3a, 0x01,
 437:TP2824/TP2802.c **** 
 438:TP2824/TP2802.c ****     0x30, 0x48,
 439:TP2824/TP2802.c ****     0x31, 0xbb,
 440:TP2824/TP2802.c ****     0x32, 0x2e,
 441:TP2824/TP2802.c ****     0x33, 0x90,
 442:TP2824/TP2802.c **** 
 443:TP2824/TP2802.c ****     0x4d, 0x0f,
 444:TP2824/TP2802.c ****     0x4e, 0xff,
 445:TP2824/TP2802.c **** 
 446:TP2824/TP2802.c ****     //now TP2801A just support 2 lines, to disable line3&4, else IRQ is in trouble.
 447:TP2824/TP2802.c ****     0x40, 0x01,
 448:TP2824/TP2802.c ****     0x50, 0x00,
 449:TP2824/TP2802.c ****     0x51, 0x00,
 450:TP2824/TP2802.c ****     0x52, 0x00,
 451:TP2824/TP2802.c ****     0x7F, 0x00,
 452:TP2824/TP2802.c ****     0x80, 0x00,
 453:TP2824/TP2802.c ****     0x81, 0x00,
 454:TP2824/TP2802.c **** 
 455:TP2824/TP2802.c ****     //0x50~0xb2 need bank switch
 456:TP2824/TP2802.c ****     0x40, 0x00,
 457:TP2824/TP2802.c ****     //TX total 34bit, valid load 32bit
 458:TP2824/TP2802.c ****     0x50, 0x00,
 459:TP2824/TP2802.c ****     0x51, 0x0b,
 460:TP2824/TP2802.c ****     0x52, 0x0c,
 461:TP2824/TP2802.c ****     0x53, 0x19,
 462:TP2824/TP2802.c ****     0x54, 0x78,
 463:TP2824/TP2802.c ****     0x55, 0x21,
 464:TP2824/TP2802.c ****     0x7e, 0x0f,   //
 465:TP2824/TP2802.c **** 
 466:TP2824/TP2802.c ****     // RX total 40bit, valid load 39bit
 467:TP2824/TP2802.c ****     0x7F, 0x00,
 468:TP2824/TP2802.c ****     0x80, 0x07,
 469:TP2824/TP2802.c ****     0x81, 0x08,
 470:TP2824/TP2802.c ****     0x82, 0x04,
 471:TP2824/TP2802.c ****     0x83, 0x00,
 472:TP2824/TP2802.c ****     0x84, 0x00,
 473:TP2824/TP2802.c ****     0x85, 0x60,
 474:TP2824/TP2802.c ****     0x86, 0x10,
 475:TP2824/TP2802.c ****     0x87, 0x06,
 476:TP2824/TP2802.c ****     0x88, 0xBE,
 477:TP2824/TP2802.c ****     0x89, 0x39,
 478:TP2824/TP2802.c ****     0x8A, 0x27,   //
 479:TP2824/TP2802.c ****     0xB9, 0x0F,   //RX channel enable
 480:TP2824/TP2802.c ****     0xff, 0xff
 481:TP2824/TP2802.c **** };
 482:TP2824/TP2802.c **** 
 483:TP2824/TP2802.c **** /*
 484:TP2824/TP2802.c **** //total 34bit, valid load 32bit
 485:TP2824/TP2802.c **** tcByte TP2822_PTZ_DataSet[] = {
 486:TP2824/TP2802.c **** 
 487:TP2824/TP2802.c **** 		//PTZ
 488:TP2824/TP2802.c **** 		0x40, 0x10,
 489:TP2824/TP2802.c **** 		0xc8, 0x21,
 490:TP2824/TP2802.c **** 		0xe0, 0x21,
ARM GAS  /tmp/ccSTfybG.s 			page 10


 491:TP2824/TP2802.c **** 		0x40, 0x00,
 492:TP2824/TP2802.c **** 		0xc8, 0x21,
 493:TP2824/TP2802.c **** 		0xe0, 0x21,
 494:TP2824/TP2802.c **** 		0x7e, 0x0f,
 495:TP2824/TP2802.c **** 		0xb9, 0x0f,
 496:TP2824/TP2802.c **** 
 497:TP2824/TP2802.c **** 	0xff, 0xff
 498:TP2824/TP2802.c **** };
 499:TP2824/TP2802.c **** */
 500:TP2824/TP2802.c **** 
 501:TP2824/TP2802.c **** #if 1
 502:TP2824/TP2802.c **** tcByte TP2824C_TVI_FHD_PTZ_DataSet[] = {//1080P30/25 TVI
 503:TP2824/TP2802.c **** 
 504:TP2824/TP2802.c **** 		//PTZ COC
 505:TP2824/TP2802.c **** //TX		
 506:TP2824/TP2802.c **** 	 0xc0, 0x00,
 507:TP2824/TP2802.c **** 	 0xc2, 0x0B,
 508:TP2824/TP2802.c **** 	 0xc3, 0x0C,
 509:TP2824/TP2802.c **** 	 0xc1, 0x00,
 510:TP2824/TP2802.c **** 	 0xc4, 0x00,
 511:TP2824/TP2802.c **** 	 0xc5, 0x00,
 512:TP2824/TP2802.c **** 	 0xc6, 0x33,
 513:TP2824/TP2802.c **** 	 0xc7, 0x78,
 514:TP2824/TP2802.c **** 	 0xc8, 0x21,
 515:TP2824/TP2802.c **** 	 0x6f, 0x40,
 516:TP2824/TP2802.c ****         0x70, 0x00,
 517:TP2824/TP2802.c ****         
 518:TP2824/TP2802.c **** 	 0x55, 0x00,
 519:TP2824/TP2802.c **** 	 0x56, 0x02,
 520:TP2824/TP2802.c **** 	 0x57, 0xB5,
 521:TP2824/TP2802.c **** 	 0x58, 0x01,
 522:TP2824/TP2802.c **** 	 0x59, 0x17,
 523:TP2824/TP2802.c **** 	 0x5a, 0x01,
 524:TP2824/TP2802.c **** 	 0x5b, 0x00,
 525:TP2824/TP2802.c **** 	 0x5c, 0x02,
 526:TP2824/TP2802.c **** 	 0x5d, 0x00,
 527:TP2824/TP2802.c **** 	 0x5e, 0x00,
 528:TP2824/TP2802.c **** 	 0x5f, 0x00,
 529:TP2824/TP2802.c **** 	 0x60, 0xCE,
 530:TP2824/TP2802.c **** 	
 531:TP2824/TP2802.c ****  //RX
 532:TP2824/TP2802.c **** 	0xcb, 0x07,
 533:TP2824/TP2802.c **** 	0xcc, 0x08,
 534:TP2824/TP2802.c **** 	0xcd, 0x00,
 535:TP2824/TP2802.c **** 	0xce, 0x00,
 536:TP2824/TP2802.c **** 	0xcf, 0x04,
 537:TP2824/TP2802.c **** 	0xd0, 0x00,
 538:TP2824/TP2802.c **** 	0xd1, 0x00,
 539:TP2824/TP2802.c **** 	0xd2, 0x60,
 540:TP2824/TP2802.c **** 	0xd3, 0x10,
 541:TP2824/TP2802.c **** 	0xd4, 0x06,
 542:TP2824/TP2802.c **** 	0xd5, 0xbe,
 543:TP2824/TP2802.c **** 	0xd6, 0x39,
 544:TP2824/TP2802.c **** 	0xd7, 0x21,
 545:TP2824/TP2802.c **** 	0xa7, 0x00,
 546:TP2824/TP2802.c **** 	0xff, 0xff
 547:TP2824/TP2802.c **** };
ARM GAS  /tmp/ccSTfybG.s 			page 11


 548:TP2824/TP2802.c **** 
 549:TP2824/TP2802.c **** tcByte TP2824C_AHD_FHD_PTZ_DataSet[] = {//1080P30/25 AHD
 550:TP2824/TP2802.c **** 
 551:TP2824/TP2802.c **** 		//PTZ COC
 552:TP2824/TP2802.c **** //TX		
 553:TP2824/TP2802.c **** 	 0xc0, 0x00,
 554:TP2824/TP2802.c **** 	 0xc2, 0x0E,	
 555:TP2824/TP2802.c **** 	 0xc3, 0x0F,
 556:TP2824/TP2802.c **** 	 0xc1, 0x00, 
 557:TP2824/TP2802.c **** 	 0xc4, 0x10,
 558:TP2824/TP2802.c **** 	 0xc5, 0x11,
 559:TP2824/TP2802.c **** //	 0xc6, 0x2c,////pulse of cap  500->600ns 0x24, 
 560:TP2824/TP2802.c ****  	 0xc6, 0x27,////pulse of cap  600->520ns  //ryan@20210630 TOA require this
 561:TP2824/TP2802.c **** 	 0xc7, 0x15,
 562:TP2824/TP2802.c **** 	 0xc8, 0x97,		
 563:TP2824/TP2802.c **** 	0x6f, 0x44,
 564:TP2824/TP2802.c ****         0x70, 0x00,
 565:TP2824/TP2802.c **** 	 0x55, 0x00,
 566:TP2824/TP2802.c **** 	 0x56, 0x00,
 567:TP2824/TP2802.c **** 	 0x57, 0x00,
 568:TP2824/TP2802.c **** 	 0x58, 0x00,
 569:TP2824/TP2802.c **** 	 0x59, 0x00,
 570:TP2824/TP2802.c **** 	 0x5a, 0x00,
 571:TP2824/TP2802.c **** 	 0x5b, 0x00,
 572:TP2824/TP2802.c **** 	 0x5c, 0x00,
 573:TP2824/TP2802.c **** 	 0x5d, 0x00,
 574:TP2824/TP2802.c **** 	 0x5e, 0x00,
 575:TP2824/TP2802.c **** 	 0x5f, 0x00,
 576:TP2824/TP2802.c **** 	 0x60, 0x00,
 577:TP2824/TP2802.c **** 	 0x62, 0x00,
 578:TP2824/TP2802.c **** 	 0x63, 0x00,
 579:TP2824/TP2802.c **** 	 0x64, 0x00,
 580:TP2824/TP2802.c **** 	 0x65, 0x00,
 581:TP2824/TP2802.c **** 	 0x66, 0x00,
 582:TP2824/TP2802.c **** 	 0x68, 0x00,
 583:TP2824/TP2802.c **** 	 0x69, 0x00,
 584:TP2824/TP2802.c **** 	 0x6a, 0x00,
 585:TP2824/TP2802.c **** 	 0x6b, 0x00,
 586:TP2824/TP2802.c **** 	 0x6c, 0x00,
 587:TP2824/TP2802.c ****  	
 588:TP2824/TP2802.c ****  //RX
 589:TP2824/TP2802.c **** 	0xcb, 0x07,
 590:TP2824/TP2802.c **** 	0xcc, 0x08,
 591:TP2824/TP2802.c **** 	0xcd, 0x00,
 592:TP2824/TP2802.c **** 	0xce, 0x00,
 593:TP2824/TP2802.c **** 	0xcf, 0x04,
 594:TP2824/TP2802.c **** 	0xd0, 0x00,	
 595:TP2824/TP2802.c **** 	0xd1, 0x00,		
 596:TP2824/TP2802.c **** 	0xd2, 0x60,		
 597:TP2824/TP2802.c **** 	0xd3, 0x10,		
 598:TP2824/TP2802.c **** 	0xd4, 0x06,		
 599:TP2824/TP2802.c **** 	0xd5, 0xbe,		
 600:TP2824/TP2802.c **** 	0xd6, 0x39,		
 601:TP2824/TP2802.c **** 	0xd7, 0x27,	
 602:TP2824/TP2802.c **** 	
 603:TP2824/TP2802.c **** 	0xa7, 0x24,
 604:TP2824/TP2802.c **** 	
ARM GAS  /tmp/ccSTfybG.s 			page 12


 605:TP2824/TP2802.c **** 	0xff, 0xff
 606:TP2824/TP2802.c **** };
 607:TP2824/TP2802.c **** 
 608:TP2824/TP2802.c **** tcByte TP2824C_CVBS_PTZ_DataSet[] = {//CVBS NTSC/PAL
 609:TP2824/TP2802.c **** 
 610:TP2824/TP2802.c **** 		//PTZ COC
 611:TP2824/TP2802.c **** //TX		
 612:TP2824/TP2802.c **** 	 0xc0, 0x00,
 613:TP2824/TP2802.c **** 	 0xc2, 0x0F,	
 614:TP2824/TP2802.c **** 	 0xc3, 0x10,	
 615:TP2824/TP2802.c **** 	 0xc1, 0x00,	
 616:TP2824/TP2802.c **** 	 0xc4, 0x00,	
 617:TP2824/TP2802.c **** 	 0xc5, 0x00,	
 618:TP2824/TP2802.c **** 	 0xc6, 0x49,	
 619:TP2824/TP2802.c **** 	 0xc7, 0x14,	
 620:TP2824/TP2802.c **** 	 0xc8, 0xAF,	
 621:TP2824/TP2802.c **** 	 0x6f, 0x60,	
 622:TP2824/TP2802.c ****         0x70, 0x00,   
 623:TP2824/TP2802.c ****         
 624:TP2824/TP2802.c **** 	 0x55, 0x00,
 625:TP2824/TP2802.c **** 	 0x56, 0x00,
 626:TP2824/TP2802.c **** 	 0x57, 0x00,
 627:TP2824/TP2802.c **** 	 0x58, 0x00,
 628:TP2824/TP2802.c **** 	 0x59, 0x00,
 629:TP2824/TP2802.c **** 	 0x5a, 0x00,
 630:TP2824/TP2802.c **** 	 0x5b, 0x00,
 631:TP2824/TP2802.c **** 	 0x5c, 0x00,
 632:TP2824/TP2802.c **** 	 0x5d, 0x00,
 633:TP2824/TP2802.c **** 	 0x5e, 0x00,
 634:TP2824/TP2802.c **** 	 0x5f, 0x00,
 635:TP2824/TP2802.c **** 	 0x60, 0x00,
 636:TP2824/TP2802.c **** 	 0x62, 0x00,
 637:TP2824/TP2802.c **** 	 0x63, 0x00,
 638:TP2824/TP2802.c **** 	 0x64, 0x00,
 639:TP2824/TP2802.c **** 	 0x65, 0x00,
 640:TP2824/TP2802.c **** 	 0x66, 0x00,
 641:TP2824/TP2802.c **** 	 0x68, 0x00,
 642:TP2824/TP2802.c **** 	 0x69, 0x00,
 643:TP2824/TP2802.c **** 	 0x6a, 0x00,
 644:TP2824/TP2802.c **** 	 0x6b, 0x00,
 645:TP2824/TP2802.c **** 	 0x6c, 0x00,
 646:TP2824/TP2802.c **** 
 647:TP2824/TP2802.c **** 	0xff, 0xff
 648:TP2824/TP2802.c **** };
 649:TP2824/TP2802.c **** 
 650:TP2824/TP2802.c **** tcByte TP2824C_CVIHD_PTZ_DataSet[] = {//CVI CHD
 651:TP2824/TP2802.c **** 
 652:TP2824/TP2802.c **** 		//PTZ COC
 653:TP2824/TP2802.c **** //TX	
 654:TP2824/TP2802.c **** 	 0x70, 0x1D,
 655:TP2824/TP2802.c **** 	 0xc0, 0x00,	
 656:TP2824/TP2802.c **** 	 0xc2, 0x10,	
 657:TP2824/TP2802.c **** 	 0xc3, 0x00,	
 658:TP2824/TP2802.c **** 	 0xc1, 0x00,	
 659:TP2824/TP2802.c **** 	 0xc4, 0x00,	
 660:TP2824/TP2802.c **** 	 0xc5, 0x00,	
 661:TP2824/TP2802.c **** 	 0xc6, 0x15,	
ARM GAS  /tmp/ccSTfybG.s 			page 13


 662:TP2824/TP2802.c **** 	 0xc7, 0x5B,	
 663:TP2824/TP2802.c **** 	 0xc8, 0xa4,
 664:TP2824/TP2802.c **** 	 0x6f, 0x48,
 665:TP2824/TP2802.c **** 
 666:TP2824/TP2802.c **** 	 0x55, 0x00,
 667:TP2824/TP2802.c **** 	 0x56, 0x00,
 668:TP2824/TP2802.c **** 	 0x57, 0x00,
 669:TP2824/TP2802.c **** 	 0x58, 0x00,
 670:TP2824/TP2802.c **** 	 0x59, 0x00,
 671:TP2824/TP2802.c **** 	 0x5a, 0x00,
 672:TP2824/TP2802.c **** 	 0x5b, 0x00,
 673:TP2824/TP2802.c **** 	 0x5c, 0x00,
 674:TP2824/TP2802.c **** 	 0x5d, 0x00,
 675:TP2824/TP2802.c **** 	 0x5e, 0x00,
 676:TP2824/TP2802.c **** 	 0x5f, 0x00,
 677:TP2824/TP2802.c **** 	 0x60, 0x00,
 678:TP2824/TP2802.c **** 	 0x62, 0x00,
 679:TP2824/TP2802.c **** 	 0x63, 0x00,
 680:TP2824/TP2802.c **** 	 0x64, 0x00,
 681:TP2824/TP2802.c **** 	 0x65, 0x00,
 682:TP2824/TP2802.c **** 	 0x66, 0x00,
 683:TP2824/TP2802.c **** 	 0x68, 0x00,
 684:TP2824/TP2802.c **** 	 0x69, 0x00,
 685:TP2824/TP2802.c **** 	 0x6a, 0x00,
 686:TP2824/TP2802.c **** 	 0x6b, 0x00,
 687:TP2824/TP2802.c **** 	 0x6c, 0x00,
 688:TP2824/TP2802.c **** 	
 689:TP2824/TP2802.c **** 	0xff, 0xff
 690:TP2824/TP2802.c **** };
 691:TP2824/TP2802.c **** 
 692:TP2824/TP2802.c **** #else
 693:TP2824/TP2802.c **** tcByte TP2824C_TVI_FHD_PTZ_DataSet[] = {//1080P30/25 TVI
 694:TP2824/TP2802.c **** 
 695:TP2824/TP2802.c **** 		//PTZ COC
 696:TP2824/TP2802.c **** //TX		
 697:TP2824/TP2802.c **** 	 0xc0, 0x00,	//TXLINE2  / TXLINE1
 698:TP2824/TP2802.c **** 	 0xc2, 0x0B,	//TXLINE1
 699:TP2824/TP2802.c **** 	 0xc3, 0x0C,	//TXLINE2
 700:TP2824/TP2802.c **** 	 0xc1, 0x00,	//TXLINE4  / TXLINE3
 701:TP2824/TP2802.c **** 	 0xc4, 0x00,	//TXLINE3
 702:TP2824/TP2802.c **** 	 0xc5, 0x00,	//TXLINE4
 703:TP2824/TP2802.c **** 	 0xc6, 0x33,	//TXBITCKNUM  0x19  0x1F  //0x19 for 1080P  ;  0x33 for 720P   // TVI 720P ptz 202005
 704:TP2824/TP2802.c **** 	 0xc7, 0x78,	//TXHST
 705:TP2824/TP2802.c **** 	 0xc8, 0x21,	//TXBITNUM  //0x21  0x27
 706:TP2824/TP2802.c **** 	 0x6f, 0x40,	//TXn pin enable
 707:TP2824/TP2802.c ****         0x70, 0x00,   //TXLMD[3]=0 / TXLNUM[2:0]=0
 708:TP2824/TP2802.c ****         
 709:TP2824/TP2802.c **** //PRESET 1
 710:TP2824/TP2802.c **** 	 //TXLINE1DATA
 711:TP2824/TP2802.c **** 	 0x55, 0x00,
 712:TP2824/TP2802.c **** 	 0x56, 0x02,
 713:TP2824/TP2802.c **** 	 0x57, 0xB5,
 714:TP2824/TP2802.c **** 	 0x58, 0x01,
 715:TP2824/TP2802.c **** 	 0x59, 0x17,
 716:TP2824/TP2802.c **** 	 0x5a, 0x01,
 717:TP2824/TP2802.c **** 	 //TXLINE2DATA
 718:TP2824/TP2802.c **** 	 0x5b, 0x00,
ARM GAS  /tmp/ccSTfybG.s 			page 14


 719:TP2824/TP2802.c **** 	 0x5c, 0x02,
 720:TP2824/TP2802.c **** 	 0x5d, 0x00,
 721:TP2824/TP2802.c **** 	 0x5e, 0x00,
 722:TP2824/TP2802.c **** 	 0x5f, 0x00,
 723:TP2824/TP2802.c **** 	 0x60, 0xCE,
 724:TP2824/TP2802.c **** 	
 725:TP2824/TP2802.c ****  //RX
 726:TP2824/TP2802.c **** 	0xcb, 0x07,		//RXLINE1
 727:TP2824/TP2802.c **** 	0xcc, 0x08,		//RXLINE2
 728:TP2824/TP2802.c **** 	0xcd, 0x00,//0x09,		//RXLINE3
 729:TP2824/TP2802.c **** 	0xce, 0x00,//0x0a,		//RXLINE4
 730:TP2824/TP2802.c **** 	0xcf, 0x04,		//RXFREQ
 731:TP2824/TP2802.c **** 	0xd0, 0x00,		//RXFREQ
 732:TP2824/TP2802.c **** 	0xd1, 0x00,		//RXFREQ
 733:TP2824/TP2802.c **** 	0xd2, 0x60,		//RXTHLEVEL
 734:TP2824/TP2802.c **** 	0xd3, 0x10,		//RXHINUM
 735:TP2824/TP2802.c **** 	0xd4, 0x06,		//RXHST / RXHEND
 736:TP2824/TP2802.c **** 	0xd5, 0xbe,		//RXHST
 737:TP2824/TP2802.c **** 	0xd6, 0x39,		//RXHEND
 738:TP2824/TP2802.c **** 	0xd7, 0x21,//0x27,		//RXBITNUM
 739:TP2824/TP2802.c **** 	0xa7, 0x00,//
 740:TP2824/TP2802.c **** 	0xff, 0xff
 741:TP2824/TP2802.c **** };
 742:TP2824/TP2802.c **** 
 743:TP2824/TP2802.c **** tcByte TP2824C_AHD_FHD_PTZ_DataSet[] = {//1080P30/25 AHD
 744:TP2824/TP2802.c **** 
 745:TP2824/TP2802.c **** 		//PTZ COC
 746:TP2824/TP2802.c **** //TX		
 747:TP2824/TP2802.c **** 	 0xc0, 0x00,	//TXLINE2  / TXLINE1
 748:TP2824/TP2802.c **** 	 0xc2, 0x0E,	//TXLINE1
 749:TP2824/TP2802.c **** 	 0xc3, 0x0F,	//TXLINE2
 750:TP2824/TP2802.c **** 	 0xc1, 0x00,	//TXLINE4  / TXLINE3
 751:TP2824/TP2802.c **** 	 0xc4, 0x10,	//TXLINE3
 752:TP2824/TP2802.c **** 	 0xc5, 0x11,	//TXLINE4
 753:TP2824/TP2802.c **** 	 0xc6, 0x24,	//TXBITCKNUM
 754:TP2824/TP2802.c **** 	 0xc7, 0x15,	//TXHST[7:0]		//TXHST=0x215
 755:TP2824/TP2802.c **** 	 0xc8, 0x97,	//TXHST[9:8] / TXBITNUM:0x17
 756:TP2824/TP2802.c **** 	 0x6f, 0x44,	//TXn pin enable / TXACP
 757:TP2824/TP2802.c ****         0x70, 0x00,   //TXLMD[3]=0 / TXLNUM[2:0]=0
 758:TP2824/TP2802.c ****         
 759:TP2824/TP2802.c **** 	 //TXLINE1DATA
 760:TP2824/TP2802.c **** 	 0x55, 0x00,
 761:TP2824/TP2802.c **** 	 0x56, 0x00,
 762:TP2824/TP2802.c **** 	 0x57, 0x00,
 763:TP2824/TP2802.c **** 	 0x58, 0x00,
 764:TP2824/TP2802.c **** 	 0x59, 0x00,
 765:TP2824/TP2802.c **** 	 0x5a, 0x00,
 766:TP2824/TP2802.c **** 	 //TXLINE2DATA
 767:TP2824/TP2802.c **** 	 0x5b, 0x00,
 768:TP2824/TP2802.c **** 	 0x5c, 0x00,
 769:TP2824/TP2802.c **** 	 0x5d, 0x00,
 770:TP2824/TP2802.c **** 	 0x5e, 0x00,
 771:TP2824/TP2802.c **** 	 0x5f, 0x00,
 772:TP2824/TP2802.c **** 	 0x60, 0x00,
 773:TP2824/TP2802.c **** 	 //TXLINE3DATA
 774:TP2824/TP2802.c **** 	 0x62, 0x00,
 775:TP2824/TP2802.c **** 	 0x63, 0x00,
ARM GAS  /tmp/ccSTfybG.s 			page 15


 776:TP2824/TP2802.c **** 	 0x64, 0x00,
 777:TP2824/TP2802.c **** 	 0x65, 0x00,
 778:TP2824/TP2802.c **** 	 0x66, 0x00,
 779:TP2824/TP2802.c ****  	 //TXLINE4DATA
 780:TP2824/TP2802.c **** 	 0x68, 0x00,
 781:TP2824/TP2802.c **** 	 0x69, 0x00,
 782:TP2824/TP2802.c **** 	 0x6a, 0x00,
 783:TP2824/TP2802.c **** 	 0x6b, 0x00,
 784:TP2824/TP2802.c **** 	 0x6c, 0x00,
 785:TP2824/TP2802.c ****  	
 786:TP2824/TP2802.c ****  //RX
 787:TP2824/TP2802.c **** 	0xcb, 0x07,		//RXLINE1
 788:TP2824/TP2802.c **** 	0xcc, 0x08,		//RXLINE2
 789:TP2824/TP2802.c **** 	0xcd, 0x00,//0x09,		//RXLINE3
 790:TP2824/TP2802.c **** 	0xce, 0x00,//0x0a,		//RXLINE4
 791:TP2824/TP2802.c **** 	0xcf, 0x04,		//RXFREQ
 792:TP2824/TP2802.c **** 	0xd0, 0x00,		//RXFREQ
 793:TP2824/TP2802.c **** 	0xd1, 0x00,		//RXFREQ
 794:TP2824/TP2802.c **** 	0xd2, 0x60,		//RXTHLEVEL
 795:TP2824/TP2802.c **** 	0xd3, 0x10,		//RXHINUM
 796:TP2824/TP2802.c **** 	0xd4, 0x06,		//RXHST / RXHEND
 797:TP2824/TP2802.c **** 	0xd5, 0xbe,		//RXHST
 798:TP2824/TP2802.c **** 	0xd6, 0x39,		//RXHEND
 799:TP2824/TP2802.c **** 	0xd7, 0x27,		//RXBITNUM
 800:TP2824/TP2802.c **** 	
 801:TP2824/TP2802.c **** 	0xa7, 0x24,//RXPWM / RXACP
 802:TP2824/TP2802.c **** 	
 803:TP2824/TP2802.c **** 	0xff, 0xff
 804:TP2824/TP2802.c **** };
 805:TP2824/TP2802.c **** 
 806:TP2824/TP2802.c **** tcByte TP2824C_CVBS_PTZ_DataSet[] = {//CVBS NTSC/PAL
 807:TP2824/TP2802.c **** 
 808:TP2824/TP2802.c **** 		//PTZ COC
 809:TP2824/TP2802.c **** //TX		
 810:TP2824/TP2802.c **** 	 0xc0, 0x00,	//TXLINE2  / TXLINE1
 811:TP2824/TP2802.c **** 	 0xc2, 0x0F,	//TXLINE1		//line18
 812:TP2824/TP2802.c **** 	 0xc3, 0x10,	//TXLINE2		//line19
 813:TP2824/TP2802.c **** 	 0xc1, 0x00,	//TXLINE4  / TXLINE3
 814:TP2824/TP2802.c **** 	 0xc4, 0x00,	//TXLINE3
 815:TP2824/TP2802.c **** 	 0xc5, 0x00,	//TXLINE4
 816:TP2824/TP2802.c **** 	 0xc6, 0x49,	//TXBITCKNUM
 817:TP2824/TP2802.c **** 	 0xc7, 0x14,	//TXHST[7:0]		//TXHST=0x214
 818:TP2824/TP2802.c **** 	 0xc8, 0xAF,	//TXHST[9:8] / TXBITNUM:0x2F
 819:TP2824/TP2802.c **** 	 0x6f, 0x60,	//TXn pin enable / TXPELCO2
 820:TP2824/TP2802.c ****         0x70, 0x00,   //TXLMD[3]=0 / TXLNUM[2:0]=0
 821:TP2824/TP2802.c ****         
 822:TP2824/TP2802.c **** 	 //TXLINE1DATA
 823:TP2824/TP2802.c **** 	 0x55, 0x00,
 824:TP2824/TP2802.c **** 	 0x56, 0x00,
 825:TP2824/TP2802.c **** 	 0x57, 0x00,
 826:TP2824/TP2802.c **** 	 0x58, 0x00,
 827:TP2824/TP2802.c **** 	 0x59, 0x00,//cmd2 [LSB first]
 828:TP2824/TP2802.c **** 	 0x5a, 0x00,//cmd1 [LSB first]
 829:TP2824/TP2802.c **** 	 //TXLINE2DATA
 830:TP2824/TP2802.c **** 	 0x5b, 0x00,
 831:TP2824/TP2802.c **** 	 0x5c, 0x00,
 832:TP2824/TP2802.c **** 	 0x5d, 0x00,
ARM GAS  /tmp/ccSTfybG.s 			page 16


 833:TP2824/TP2802.c **** 	 0x5e, 0x00,
 834:TP2824/TP2802.c **** 	 0x5f, 0x00,//data2 [LSB first]
 835:TP2824/TP2802.c **** 	 0x60, 0x00,//data1 [LSB first]
 836:TP2824/TP2802.c **** 	 //TXLINE3DATA
 837:TP2824/TP2802.c **** 	 0x62, 0x00,
 838:TP2824/TP2802.c **** 	 0x63, 0x00,
 839:TP2824/TP2802.c **** 	 0x64, 0x00,
 840:TP2824/TP2802.c **** 	 0x65, 0x00,
 841:TP2824/TP2802.c **** 	 0x66, 0x00,
 842:TP2824/TP2802.c ****  	 //TXLINE4DATA
 843:TP2824/TP2802.c **** 	 0x68, 0x00,
 844:TP2824/TP2802.c **** 	 0x69, 0x00,
 845:TP2824/TP2802.c **** 	 0x6a, 0x00,
 846:TP2824/TP2802.c **** 	 0x6b, 0x00,
 847:TP2824/TP2802.c **** 	 0x6c, 0x00,
 848:TP2824/TP2802.c **** /* 	
 849:TP2824/TP2802.c ****  //RX
 850:TP2824/TP2802.c **** 	0xcb, 0x07,		//RXLINE1
 851:TP2824/TP2802.c **** 	0xcc, 0x08,		//RXLINE2
 852:TP2824/TP2802.c **** 	0xcd, 0x00,//0x09,		//RXLINE3
 853:TP2824/TP2802.c **** 	0xce, 0x00,//0x0a,		//RXLINE4
 854:TP2824/TP2802.c **** 	0xcf, 0x04,		//RXFREQ
 855:TP2824/TP2802.c **** 	0xd0, 0x00,		//RXFREQ
 856:TP2824/TP2802.c **** 	0xd1, 0x00,		//RXFREQ
 857:TP2824/TP2802.c **** 	0xd2, 0x60,		//RXTHLEVEL
 858:TP2824/TP2802.c **** 	0xd3, 0x10,		//RXHINUM
 859:TP2824/TP2802.c **** 	0xd4, 0x06,		//RXHST / RXHEND
 860:TP2824/TP2802.c **** 	0xd5, 0xbe,		//RXHST
 861:TP2824/TP2802.c **** 	0xd6, 0x39,		//RXHEND
 862:TP2824/TP2802.c **** 	0xd7, 0x27,		//RXBITNUM
 863:TP2824/TP2802.c **** 	
 864:TP2824/TP2802.c **** 	0xa7, 0x24,//RXPWM / RXACP
 865:TP2824/TP2802.c **** */	
 866:TP2824/TP2802.c **** 	0xff, 0xff
 867:TP2824/TP2802.c **** };
 868:TP2824/TP2802.c **** 
 869:TP2824/TP2802.c **** tcByte TP2824C_CVIHD_PTZ_DataSet[] = {//CVI CHD
 870:TP2824/TP2802.c **** 
 871:TP2824/TP2802.c **** 		//PTZ COC
 872:TP2824/TP2802.c **** //TX	
 873:TP2824/TP2802.c **** 	 0x70, 0x1D,   //TCMFR[4]=1 / TXLMD[3]=1 / TXLNUM[2:0]=5
 874:TP2824/TP2802.c **** 	 0xc0, 0x00,	//TXLINE2  / TXLINE1
 875:TP2824/TP2802.c **** 	 0xc2, 0x10,	//TXLINE1		//line18
 876:TP2824/TP2802.c **** 	 0xc3, 0x00,	//TXLINE2		//line19
 877:TP2824/TP2802.c **** 	 0xc1, 0x00,	//TXLINE4  / TXLINE3
 878:TP2824/TP2802.c **** 	 0xc4, 0x00,	//TXLINE3
 879:TP2824/TP2802.c **** 	 0xc5, 0x00,	//TXLINE4
 880:TP2824/TP2802.c **** 	 0xc6, 0x15,	//TXBITCKNUM
 881:TP2824/TP2802.c **** 	 0xc7, 0x5B,	//TXHST[7:0]		//TXHST=0x25B
 882:TP2824/TP2802.c **** 	 0xc8, 0xa4,//0x97,	//TXHST[9:8]0b10xx xxxx / TXBITNUM:0x17=>0x24
 883:TP2824/TP2802.c **** 	 0x6f, 0x48,	//TXn pin enable / TXDAH
 884:TP2824/TP2802.c **** 
 885:TP2824/TP2802.c **** 	 //TXLINE1DATA
 886:TP2824/TP2802.c **** 	 0x55, 0x00,
 887:TP2824/TP2802.c **** 	 0x56, 0x00,
 888:TP2824/TP2802.c **** 	 0x57, 0x00,
 889:TP2824/TP2802.c **** 	 0x58, 0x00,
ARM GAS  /tmp/ccSTfybG.s 			page 17


 890:TP2824/TP2802.c **** 	 0x59, 0x00,//cmd2 [LSB first]
 891:TP2824/TP2802.c **** 	 0x5a, 0x00,//cmd1 [LSB first]
 892:TP2824/TP2802.c **** 	 //TXLINE2DATA
 893:TP2824/TP2802.c **** 	 0x5b, 0x00,
 894:TP2824/TP2802.c **** 	 0x5c, 0x00,
 895:TP2824/TP2802.c **** 	 0x5d, 0x00,
 896:TP2824/TP2802.c **** 	 0x5e, 0x00,
 897:TP2824/TP2802.c **** 	 0x5f, 0x00,//data2 [LSB first]
 898:TP2824/TP2802.c **** 	 0x60, 0x00,//data1 [LSB first]
 899:TP2824/TP2802.c **** 	 //TXLINE3DATA
 900:TP2824/TP2802.c **** 	 0x62, 0x00,
 901:TP2824/TP2802.c **** 	 0x63, 0x00,
 902:TP2824/TP2802.c **** 	 0x64, 0x00,
 903:TP2824/TP2802.c **** 	 0x65, 0x00,
 904:TP2824/TP2802.c **** 	 0x66, 0x00,
 905:TP2824/TP2802.c ****  	 //TXLINE4DATA
 906:TP2824/TP2802.c **** 	 0x68, 0x00,
 907:TP2824/TP2802.c **** 	 0x69, 0x00,
 908:TP2824/TP2802.c **** 	 0x6a, 0x00,
 909:TP2824/TP2802.c **** 	 0x6b, 0x00,
 910:TP2824/TP2802.c **** 	 0x6c, 0x00,
 911:TP2824/TP2802.c **** /* 	
 912:TP2824/TP2802.c ****  //RX
 913:TP2824/TP2802.c **** 	0xcb, 0x07,		//RXLINE1
 914:TP2824/TP2802.c **** 	0xcc, 0x08,		//RXLINE2
 915:TP2824/TP2802.c **** 	0xcd, 0x00,//0x09,		//RXLINE3
 916:TP2824/TP2802.c **** 	0xce, 0x00,//0x0a,		//RXLINE4
 917:TP2824/TP2802.c **** 	0xcf, 0x04,		//RXFREQ
 918:TP2824/TP2802.c **** 	0xd0, 0x00,		//RXFREQ
 919:TP2824/TP2802.c **** 	0xd1, 0x00,		//RXFREQ
 920:TP2824/TP2802.c **** 	0xd2, 0x60,		//RXTHLEVEL
 921:TP2824/TP2802.c **** 	0xd3, 0x10,		//RXHINUM
 922:TP2824/TP2802.c **** 	0xd4, 0x06,		//RXHST / RXHEND
 923:TP2824/TP2802.c **** 	0xd5, 0xbe,		//RXHST
 924:TP2824/TP2802.c **** 	0xd6, 0x39,		//RXHEND
 925:TP2824/TP2802.c **** 	0xd7, 0x27,		//RXBITNUM
 926:TP2824/TP2802.c **** 	
 927:TP2824/TP2802.c **** 	0xa7, 0x24,//RXPWM / RXACP
 928:TP2824/TP2802.c **** */	
 929:TP2824/TP2802.c **** 	0xff, 0xff
 930:TP2824/TP2802.c **** };
 931:TP2824/TP2802.c **** #endif
 932:TP2824/TP2802.c **** 	 
 933:TP2824/TP2802.c **** //chunyu
 934:TP2824/TP2802.c **** void I2CDeviceSet1( tcByte *RegSet)
 935:TP2824/TP2802.c **** {
 936:TP2824/TP2802.c **** 	int	cnt=0;
 937:TP2824/TP2802.c **** 	tByte index, val;
 938:TP2824/TP2802.c **** 
 939:TP2824/TP2802.c **** 	// Output discription
 940:TP2824/TP2802.c **** 	#ifdef TASKING
 941:TP2824/TP2802.c **** 	while( *RegSet ) 
 942:TP2824/TP2802.c **** 		RS_tx( *RegSet++ );
 943:TP2824/TP2802.c **** 	RegSet++;
 944:TP2824/TP2802.c **** 	#endif
 945:TP2824/TP2802.c **** 
 946:TP2824/TP2802.c **** 	while ( *RegSet != 0xFF ) {
ARM GAS  /tmp/ccSTfybG.s 			page 18


 947:TP2824/TP2802.c **** 
 948:TP2824/TP2802.c **** 		index = *RegSet;
 949:TP2824/TP2802.c **** 		val = *(RegSet+1);
 950:TP2824/TP2802.c **** //		MonWriteI2C(addr, index, val);
 951:TP2824/TP2802.c **** 		tp28xx_byte_write(index, val);
 952:TP2824/TP2802.c **** 
 953:TP2824/TP2802.c **** //		Puts("\r\n");
 954:TP2824/TP2802.c **** 
 955:TP2824/TP2802.c **** 		RegSet+=2;
 956:TP2824/TP2802.c **** 
 957:TP2824/TP2802.c **** 		cnt--;
 958:TP2824/TP2802.c **** 	}	
 959:TP2824/TP2802.c ****     delay(50); //50*5 =250ms
 960:TP2824/TP2802.c **** }
 961:TP2824/TP2802.c **** 
 962:TP2824/TP2802.c **** 
 963:TP2824/TP2802.c **** void I2CDeviceSet2( tcByte *RegSet, tcByte *DatSet)
 964:TP2824/TP2802.c **** {
 965:TP2824/TP2802.c **** 	int	cnt=0;
 966:TP2824/TP2802.c **** 	tByte index, val;
 967:TP2824/TP2802.c **** 
 968:TP2824/TP2802.c **** 	while ( *RegSet != 0xFF ) {
 969:TP2824/TP2802.c **** 
 970:TP2824/TP2802.c **** 		index = *RegSet;
 971:TP2824/TP2802.c **** 		val = *DatSet;
 972:TP2824/TP2802.c **** //		MonWriteI2C(addr, index, val);
 973:TP2824/TP2802.c **** 		tp28xx_byte_write(index, val);
 974:TP2824/TP2802.c **** 
 975:TP2824/TP2802.c **** //		Puts("\r\n");
 976:TP2824/TP2802.c **** 
 977:TP2824/TP2802.c **** 		RegSet++;
 978:TP2824/TP2802.c **** 		DatSet++;
 979:TP2824/TP2802.c **** 
 980:TP2824/TP2802.c **** 		cnt--;
 981:TP2824/TP2802.c **** 	}
 982:TP2824/TP2802.c ****     delay(50); //50*5 =250ms
 983:TP2824/TP2802.c **** }
 984:TP2824/TP2802.c **** 
 985:TP2824/TP2802.c **** void SetRegPage(tByte channel)
 986:TP2824/TP2802.c **** {
 987:TP2824/TP2802.c ****     //tByte tmp;
 988:TP2824/TP2802.c ****     //tmp = tp28xx_byte_read(tByte index);
 989:TP2824/TP2802.c ****     tp28xx_byte_write(0x40,channel);
 990:TP2824/TP2802.c ****     //tp28xx_byte_write(0x40,0x04); //chunyu
 991:TP2824/TP2802.c ****  //  printf("\r\nChannel-%02x ",(tWord)channel);
 992:TP2824/TP2802.c **** }
 993:TP2824/TP2802.c **** 
 994:TP2824/TP2802.c **** /*
 995:TP2824/TP2802.c **** void Write_AllRegPage(tByte addr, tByte bitpos, tByte bitval){
 996:TP2824/TP2802.c **** 	tByte ch;
 997:TP2824/TP2802.c **** 	tByte val;
 998:TP2824/TP2802.c **** 	tByte mask=0x00;
 999:TP2824/TP2802.c **** 	tByte maskb;
1000:TP2824/TP2802.c **** 	tByte Reg40;
1001:TP2824/TP2802.c **** 
1002:TP2824/TP2802.c **** 	Reg40 = tp28xx_byte_read(TVII2CAddress,0x40);
1003:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccSTfybG.s 			page 19


1004:TP2824/TP2802.c **** 	mask = 0x01 << bitpos;
1005:TP2824/TP2802.c **** 	maskb = ~mask;
1006:TP2824/TP2802.c **** 
1007:TP2824/TP2802.c **** 	for(ch=CH1;ch<=CH4;ch++){
1008:TP2824/TP2802.c **** 		tp28xx_byte_write(TVII2CAddress,0x40,ch);
1009:TP2824/TP2802.c **** 		val = tp28xx_byte_read(TVII2CAddress,addr);
1010:TP2824/TP2802.c **** 		if(bitval)
1011:TP2824/TP2802.c **** 			tp28xx_byte_write(TVII2CAddress,addr,(val|mask));
1012:TP2824/TP2802.c **** 		else
1013:TP2824/TP2802.c **** 			tp28xx_byte_write(TVII2CAddress,addr,(val&maskb));
1014:TP2824/TP2802.c **** 	}
1015:TP2824/TP2802.c **** 
1016:TP2824/TP2802.c **** 	tp28xx_byte_write(TVII2CAddress,0x40,Reg40);
1017:TP2824/TP2802.c **** }
1018:TP2824/TP2802.c **** */
1019:TP2824/TP2802.c **** 
1020:TP2824/TP2802.c **** /*
1021:TP2824/TP2802.c **** void Set_16Bits_VDCLK_Out(){
1022:TP2824/TP2802.c **** 
1023:TP2824/TP2802.c **** 	Write_AllRegPage(0x02,7,0);
1024:TP2824/TP2802.c **** 	tp28xx_byte_write(TVII2CAddress,0x4b,0x40);
1025:TP2824/TP2802.c **** }
1026:TP2824/TP2802.c **** 
1027:TP2824/TP2802.c **** void Set_16Bits_VD_Out(tByte channel){
1028:TP2824/TP2802.c **** 	tByte Reg02,Reg4b;
1029:TP2824/TP2802.c **** 	tByte VD2SEL;
1030:TP2824/TP2802.c **** 	tByte VD1SEL;
1031:TP2824/TP2802.c **** 	tByte dat;
1032:TP2824/TP2802.c **** 
1033:TP2824/TP2802.c **** 	Reg02 = tp28xx_byte_read(TVII2CAddress,0x02);
1034:TP2824/TP2802.c **** 	Reg4b = tp28xx_byte_read(TVII2CAddress,0x4b);
1035:TP2824/TP2802.c **** 
1036:TP2824/TP2802.c **** 
1037:TP2824/TP2802.c **** 	tp28xx_byte_write(TVII2CAddress,0x02,(Reg02&0x7f));
1038:TP2824/TP2802.c **** 
1039:TP2824/TP2802.c **** 	switch (channel){
1040:TP2824/TP2802.c **** 		case CH1:
1041:TP2824/TP2802.c **** 			VD2SEL = VIN1_C;
1042:TP2824/TP2802.c **** 			VD1SEL = VIN1_Y;
1043:TP2824/TP2802.c **** 			break;
1044:TP2824/TP2802.c **** 		case CH2:
1045:TP2824/TP2802.c **** 			VD2SEL = VIN2_C;
1046:TP2824/TP2802.c **** 			VD1SEL = VIN2_Y;
1047:TP2824/TP2802.c **** 			break;
1048:TP2824/TP2802.c **** 		case CH3:
1049:TP2824/TP2802.c **** 			VD2SEL = VIN3_C;
1050:TP2824/TP2802.c **** 			VD1SEL = VIN3_Y;
1051:TP2824/TP2802.c **** 			break;
1052:TP2824/TP2802.c **** 		case CH4:
1053:TP2824/TP2802.c **** 			VD2SEL = VIN4_C;
1054:TP2824/TP2802.c **** 			VD1SEL = VIN4_Y;
1055:TP2824/TP2802.c **** 			break;
1056:TP2824/TP2802.c **** 		}
1057:TP2824/TP2802.c **** 	dat = (VD2SEL<<4)|VD1SEL;
1058:TP2824/TP2802.c **** 	tp28xx_byte_write(TVII2CAddress,0x4b,dat);
1059:TP2824/TP2802.c **** 
1060:TP2824/TP2802.c **** }
ARM GAS  /tmp/ccSTfybG.s 			page 20


1061:TP2824/TP2802.c **** */
1062:TP2824/TP2802.c **** 
1063:TP2824/TP2802.c **** tcByte TP2802_FORMAT_DataSet[][12+1] =
1064:TP2824/TP2802.c **** {
1065:TP2824/TP2802.c ****     {0x02,0x15,0x16,0x17,0x18,0x19,0x1a,0x1c,0x1d,0x35,0x36,0x14,0xff}, //reg
1066:TP2824/TP2802.c ****     {0x48,0x03,0xd3,0x80,0x29,0x38,0x47,0x08,0x98,0x05,0xdc,0x0A,0xff}, //1080p30
1067:TP2824/TP2802.c ****     {0x48,0x03,0xd3,0x80,0x29,0x38,0x47,0x0a,0x50,0x05,0xdc,0x0A,0xff}, //1080p25
1068:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x06,0x72,0x05,0xdc,0x0A,0xff}, //720p60 720p30V2
1069:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x07,0xbc,0x05,0xdc,0x0A,0xff}, //720p50 720p25V2
1070:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x0c,0xe4,0x05,0xdc,0x0A,0xff}, //720p30    //5
1071:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x0f,0x78,0x05,0xdc,0x0A,0xff}, //720p25
1072:TP2824/TP2802.c ****     {0x4f,0x13,0x4e,0xbc,0x15,0xf0,0x07,0x09,0x38,0x25,0xdc,0x0A,0xff}, //NTSC
1073:TP2824/TP2802.c ****     {0x4f,0x13,0x5f,0xbc,0x17,0x20,0x17,0x09,0x48,0x25,0xdc,0x0A,0xff}, //PAL
1074:TP2824/TP2802.c ****     {0x48,0x13,0x6c,0x00,0x2c,0x00,0x68,0x09,0xc4,0x16,0x30,0x0A,0xff}, //3M18
1075:TP2824/TP2802.c ****     {0x48,0x13,0x1f,0x20,0x34,0x98,0x7a,0x0b,0x9a,0x17,0xd0,0x0A,0xff}, //5M12      //10
1076:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x06,0x72,0x25,0xdc,0x0A,0xff}, //720p30V2
1077:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x07,0xbc,0x25,0xdc,0x0A,0xff}, //720p25V2
1078:TP2824/TP2802.c ****     {0x48,0x13,0x1f,0x80,0x7d,0xf0,0x5a,0x0b,0xb8,0x16,0x72,0x0A,0xff}, //4M15
1079:TP2824/TP2802.c ****     {0x48,0x13,0x6c,0x00,0x2c,0x00,0x68,0x09,0xc4,0x16,0x72,0x0A,0xff}, //3M20
1080:TP2824/TP2802.c ****     {0x48,0x23,0x34,0x78,0x8c,0xf0,0x5a,0x0c,0xe4,0x17,0x08,0x0A,0xff}, //4M12
1081:TP2824/TP2802.c ****     {0x48,0x13,0xec,0x80,0xb0,0x08,0x7c,0x0e,0xa6,0x17,0xbc,0x0A,0xff}, //6M10
1082:TP2824/TP2802.c ****     {0x48,0x13,0x0f,0x00,0x32,0xa0,0x55,0x06,0x72,0x15,0xdc,0x0A,0xff}, //4M30
1083:TP2824/TP2802.c ****     {0x48,0x13,0x20,0x00,0x20,0xa0,0x55,0x07,0xbc,0x15,0xdc,0x0A,0xff}  //4M25
1084:TP2824/TP2802.c **** 
1085:TP2824/TP2802.c ****     //{0xc8,0x13,0x6c,0x20,0x2c,0xf0,0x5a,0x0b,0xb8,0x16,0x72,0xff}, //2592x1520p15
1086:TP2824/TP2802.c **** };
1087:TP2824/TP2802.c **** 
1088:TP2824/TP2802.c **** static void tp28xx_SYSCLK_V2(unsigned char ch)
1089:TP2824/TP2802.c **** {
1090:TP2824/TP2802.c ****     unsigned char tmp;
1091:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0xf5);
1092:TP2824/TP2802.c ****     tmp |= SYS_MODE[ch];
1093:TP2824/TP2802.c ****     tp28xx_byte_write(0xf5, tmp);
1094:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x35);
1095:TP2824/TP2802.c ****     tmp |= 0x20;
1096:TP2824/TP2802.c ****     tp28xx_byte_write(0x35, tmp);
1097:TP2824/TP2802.c **** }
1098:TP2824/TP2802.c **** static void tp28xx_SYSCLK_V1(unsigned char ch)
1099:TP2824/TP2802.c **** {
1100:TP2824/TP2802.c ****     unsigned char tmp;
1101:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0xf5);
1102:TP2824/TP2802.c ****     tmp &= SYS_AND[ch];
1103:TP2824/TP2802.c ****     tp28xx_byte_write(0xf5, tmp);
1104:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x35);
1105:TP2824/TP2802.c ****     tmp &= 0xdf;
1106:TP2824/TP2802.c ****     tp28xx_byte_write(0x35, tmp);
1107:TP2824/TP2802.c **** }
1108:TP2824/TP2802.c **** 
1109:TP2824/TP2802.c **** void Set_VidRes(tByte ch)
1110:TP2824/TP2802.c **** {
1111:TP2824/TP2802.c ****     tByte index, sys, tmp;
1112:TP2824/TP2802.c **** 	sys = 1;  //V1
1113:TP2824/TP2802.c ****     //printf("Set_VidRes");
1114:TP2824/TP2802.c ****     switch(mode[ch])
1115:TP2824/TP2802.c ****     {
1116:TP2824/TP2802.c ****     case R1080P30:
1117:TP2824/TP2802.c ****         index=1;//1080p30
ARM GAS  /tmp/ccSTfybG.s 			page 21


1118:TP2824/TP2802.c ****         sys=1;//V1
1119:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1120:TP2824/TP2802.c ****         printf("1080p30");
1121:TP2824/TP2802.c ****         break;
1122:TP2824/TP2802.c **** 
1123:TP2824/TP2802.c ****     case R1080P25:
1124:TP2824/TP2802.c ****         index=2;//1080p25
1125:TP2824/TP2802.c ****         sys=1;//V1
1126:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1127:TP2824/TP2802.c ****         printf("1080p25");
1128:TP2824/TP2802.c ****         break;
1129:TP2824/TP2802.c **** 
1130:TP2824/TP2802.c ****     case R720P60:
1131:TP2824/TP2802.c ****         index=3;//720p60 720p30V2
1132:TP2824/TP2802.c ****         sys=1;//V1
1133:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1134:TP2824/TP2802.c ****         printf("720p60");
1135:TP2824/TP2802.c ****         break;
1136:TP2824/TP2802.c **** 
1137:TP2824/TP2802.c ****     case R720P30V2:
1138:TP2824/TP2802.c ****         index=11;//720p30V2 
1139:TP2824/TP2802.c ****         sys=2;//V2
1140:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1141:TP2824/TP2802.c ****         printf("720p30V2");
1142:TP2824/TP2802.c ****         break;
1143:TP2824/TP2802.c **** 
1144:TP2824/TP2802.c ****     case R720P50:
1145:TP2824/TP2802.c ****         index=4;//720p50 720p25V2
1146:TP2824/TP2802.c ****         sys=1;//V1
1147:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1148:TP2824/TP2802.c ****         printf("720p50");
1149:TP2824/TP2802.c ****         break;
1150:TP2824/TP2802.c **** 
1151:TP2824/TP2802.c ****     case R720P25V2:
1152:TP2824/TP2802.c ****         index=12;//720p25V2 
1153:TP2824/TP2802.c ****         sys=2;//V2
1154:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1155:TP2824/TP2802.c ****         printf("720p25V2");
1156:TP2824/TP2802.c ****         break;
1157:TP2824/TP2802.c **** 
1158:TP2824/TP2802.c ****     case R720P30:
1159:TP2824/TP2802.c ****         index=5;//720p30
1160:TP2824/TP2802.c ****         sys=1;//V1
1161:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1162:TP2824/TP2802.c ****         printf("720p30");
1163:TP2824/TP2802.c ****         break;
1164:TP2824/TP2802.c **** 
1165:TP2824/TP2802.c ****     case R720P25:
1166:TP2824/TP2802.c ****         index=6;//720p25
1167:TP2824/TP2802.c ****         sys=1;//V1
1168:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1169:TP2824/TP2802.c ****         printf("720p25");
1170:TP2824/TP2802.c ****         break;
1171:TP2824/TP2802.c **** 
1172:TP2824/TP2802.c ****     case PAL:
1173:TP2824/TP2802.c ****         index=8;
1174:TP2824/TP2802.c ****         sys=4;
ARM GAS  /tmp/ccSTfybG.s 			page 22


1175:TP2824/TP2802.c ****         ManVidResRx=RES1920X576;
1176:TP2824/TP2802.c ****         printf("PAL");
1177:TP2824/TP2802.c ****         break;
1178:TP2824/TP2802.c **** 
1179:TP2824/TP2802.c ****     case NTSC:
1180:TP2824/TP2802.c ****         index=7;
1181:TP2824/TP2802.c ****         sys=3;
1182:TP2824/TP2802.c ****         ManVidResRx=RES1920X480;
1183:TP2824/TP2802.c ****         printf("NTSC");
1184:TP2824/TP2802.c ****         break;
1185:TP2824/TP2802.c **** 
1186:TP2824/TP2802.c ****     case R3M18:
1187:TP2824/TP2802.c ****         index=9;//3M18           
1188:TP2824/TP2802.c ****         sys=1;//V1
1189:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1190:TP2824/TP2802.c ****         printf("3M18");
1191:TP2824/TP2802.c ****         break;
1192:TP2824/TP2802.c **** 
1193:TP2824/TP2802.c ****     case R5M12:
1194:TP2824/TP2802.c ****         index=10;//5M12 
1195:TP2824/TP2802.c ****         sys=1;//V1
1196:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1197:TP2824/TP2802.c ****         printf("5M12");
1198:TP2824/TP2802.c ****         break;
1199:TP2824/TP2802.c **** 
1200:TP2824/TP2802.c ****     case R4M15:
1201:TP2824/TP2802.c ****         index=13;//4M15
1202:TP2824/TP2802.c ****         sys=1;//V1
1203:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1204:TP2824/TP2802.c ****         printf("4M15");
1205:TP2824/TP2802.c ****         break;
1206:TP2824/TP2802.c **** 
1207:TP2824/TP2802.c ****     case R3M20:
1208:TP2824/TP2802.c ****         index=14;//3M20
1209:TP2824/TP2802.c ****         sys=1;//V1
1210:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1211:TP2824/TP2802.c ****         printf("3M20");
1212:TP2824/TP2802.c ****         break;
1213:TP2824/TP2802.c **** 
1214:TP2824/TP2802.c ****     case R4M12:
1215:TP2824/TP2802.c ****         index=15;//4M12
1216:TP2824/TP2802.c ****         sys=1;//V1
1217:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1218:TP2824/TP2802.c ****         printf("4M12");
1219:TP2824/TP2802.c ****         break;
1220:TP2824/TP2802.c **** 
1221:TP2824/TP2802.c ****     case R6M10:
1222:TP2824/TP2802.c ****         index=16;//6M10
1223:TP2824/TP2802.c ****         sys=1;//V1
1224:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1225:TP2824/TP2802.c ****         printf("6M10");
1226:TP2824/TP2802.c ****         break;
1227:TP2824/TP2802.c **** 
1228:TP2824/TP2802.c ****     case R4M30:
1229:TP2824/TP2802.c ****         index=17;//4M30
1230:TP2824/TP2802.c ****         sys=1;//V1
1231:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
ARM GAS  /tmp/ccSTfybG.s 			page 23


1232:TP2824/TP2802.c ****         printf("4M30");
1233:TP2824/TP2802.c ****         break;
1234:TP2824/TP2802.c **** 
1235:TP2824/TP2802.c ****     default:
1236:TP2824/TP2802.c ****         index=1;//1080p30
1237:TP2824/TP2802.c ****         break;
1238:TP2824/TP2802.c ****     }
1239:TP2824/TP2802.c ****     printf("...\r\n");
1240:TP2824/TP2802.c **** 
1241:TP2824/TP2802.c ****     //I2CDeviceSet(TVII2CAddress, ptr_TP2802_Res );
1242:TP2824/TP2802.c ****     I2CDeviceSet2( TP2802_FORMAT_DataSet[0],TP2802_FORMAT_DataSet[index] );
1243:TP2824/TP2802.c ****     //	printf("chip= 0x%4x\r\n",chip);
1244:TP2824/TP2802.c **** if( mode[ch]==R1080P30)
1245:TP2824/TP2802.c **** {
1246:TP2824/TP2802.c ****     tp28xx_byte_write(0x16, 0xCE);
1247:TP2824/TP2802.c **** }
1248:TP2824/TP2802.c **** 
1249:TP2824/TP2802.c ****     if(TP2853C == chip)
1250:TP2824/TP2802.c ****     {
1251:TP2824/TP2802.c ****         I2CDeviceSet2( TP2853C_MODE_DataSet[0],TP2853C_MODE_DataSet[sys] );
1252:TP2824/TP2802.c ****     }
1253:TP2824/TP2802.c ****     else if(TP2833 == chip)
1254:TP2824/TP2802.c ****     {
1255:TP2824/TP2802.c ****         I2CDeviceSet2( TP2833_MODE_DataSet[0],TP2833_MODE_DataSet[sys] );
1256:TP2824/TP2802.c ****     }
1257:TP2824/TP2802.c ****     else if(TP2834 == chip)
1258:TP2824/TP2802.c ****     {
1259:TP2824/TP2802.c ****         I2CDeviceSet2( TP2834_MODE_DataSet[0],TP2834_MODE_DataSet[sys] );
1260:TP2824/TP2802.c ****     }
1261:TP2824/TP2802.c ****     if(TP2826 == chip)
1262:TP2824/TP2802.c ****     {
1263:TP2824/TP2802.c ****         printf("tp2826MODEDATASET\r\n");
1264:TP2824/TP2802.c ****         I2CDeviceSet2( TP2826_MODE_DataSet[0],TP2826_MODE_DataSet[sys] );
1265:TP2824/TP2802.c ****     }
1266:TP2824/TP2802.c ****     if(TP2824C == chip)
1267:TP2824/TP2802.c ****     {
1268:TP2824/TP2802.c ****         printf("tp2824C MODEDATASET\r\n");
1269:TP2824/TP2802.c ****         I2CDeviceSet2( TP2824C_MODE_DataSet[0],TP2824C_MODE_DataSet[sys] );
1270:TP2824/TP2802.c ****     }
1271:TP2824/TP2802.c **** 
1272:TP2824/TP2802.c ****     if(1 == sys)
1273:TP2824/TP2802.c ****         tp28xx_SYSCLK_V1(ch);
1274:TP2824/TP2802.c ****     else
1275:TP2824/TP2802.c ****         tp28xx_SYSCLK_V2(ch);
1276:TP2824/TP2802.c **** 
1277:TP2824/TP2802.c ****     tp28xx_byte_write(0x13, 0x00);
1278:TP2824/TP2802.c ****     tmp=tp28xx_byte_read(0x14);
1279:TP2824/TP2802.c ****     tmp &= 0x9f;
1280:TP2824/TP2802.c ****     tp28xx_byte_write(0x14, tmp);
1281:TP2824/TP2802.c **** 
1282:TP2824/TP2802.c **** #if(OUTPUT == Bits16out)
1283:TP2824/TP2802.c ****     tmp=tp28xx_byte_read(0x02);
1284:TP2824/TP2802.c ****     tmp &= 0x7f;
1285:TP2824/TP2802.c ****     tp28xx_byte_write(0x02, tmp);
1286:TP2824/TP2802.c **** #else
1287:TP2824/TP2802.c ****     tmp=tp28xx_byte_read(0x02);
1288:TP2824/TP2802.c ****     tmp |= 0x80;
ARM GAS  /tmp/ccSTfybG.s 			page 24


1289:TP2824/TP2802.c ****     tp28xx_byte_write(0x02, tmp);
1290:TP2824/TP2802.c **** #endif
1291:TP2824/TP2802.c **** }
1292:TP2824/TP2802.c **** 
1293:TP2824/TP2802.c **** tByte Set_HDA(tByte ch)
1294:TP2824/TP2802.c **** {
1295:TP2824/TP2802.c **** 
1296:TP2824/TP2802.c ****     tByte index,tmp;
1297:TP2824/TP2802.c ****     index=0;
1298:TP2824/TP2802.c **** 
1299:TP2824/TP2802.c ****     switch(mode[ch])
1300:TP2824/TP2802.c ****     {
1301:TP2824/TP2802.c ****     case R1080P30:
1302:TP2824/TP2802.c ****         index=3;
1303:TP2824/TP2802.c ****         break;
1304:TP2824/TP2802.c **** 
1305:TP2824/TP2802.c ****     case R1080P25:
1306:TP2824/TP2802.c ****         index=4;
1307:TP2824/TP2802.c ****         break;
1308:TP2824/TP2802.c **** 		
1309:TP2824/TP2802.c ****     case R720P60://20200507    
1310:TP2824/TP2802.c ****     case R720P30V2:
1311:TP2824/TP2802.c ****         index=1;
1312:TP2824/TP2802.c ****         break;
1313:TP2824/TP2802.c **** 		
1314:TP2824/TP2802.c ****     case R720P50://20200507    
1315:TP2824/TP2802.c ****     case R720P25V2:
1316:TP2824/TP2802.c ****         index=2;
1317:TP2824/TP2802.c ****         break;
1318:TP2824/TP2802.c ****     }
1319:TP2824/TP2802.c ****     if(index)
1320:TP2824/TP2802.c ****     {
1321:TP2824/TP2802.c ****         Set_VidRes(ch);
1322:TP2824/TP2802.c **** 
1323:TP2824/TP2802.c ****         if(TP2853C == chip)
1324:TP2824/TP2802.c ****         {
1325:TP2824/TP2802.c ****             I2CDeviceSet2(TP2853C_HDA_DataSet[0],TP2853C_HDA_DataSet[index] );
1326:TP2824/TP2802.c ****         }
1327:TP2824/TP2802.c ****         else if(TP2833 == chip || TP2834 == chip )
1328:TP2824/TP2802.c ****         {
1329:TP2824/TP2802.c ****             I2CDeviceSet2(TP2833_HDA_DataSet[0],TP2833_HDA_DataSet[index] );
1330:TP2824/TP2802.c ****         }
1331:TP2824/TP2802.c ****         else if(TP2826 == chip)
1332:TP2824/TP2802.c ****         {
1333:TP2824/TP2802.c ****             I2CDeviceSet2(TP2826_HDA_DataSet[0],TP2826_HDA_DataSet[index] );
1334:TP2824/TP2802.c ****         }
1335:TP2824/TP2802.c ****         else if(TP2824C == chip)
1336:TP2824/TP2802.c ****         {
1337:TP2824/TP2802.c ****             I2CDeviceSet2(TP2824C_HDA_DataSet[0],TP2824C_HDA_DataSet[index] );
1338:TP2824/TP2802.c **** 
1339:TP2824/TP2802.c **** 		//if(mode[ch]==R1080P30)
1340:TP2824/TP2802.c **** 		//	    tp28xx_byte_write(0x19, 0x3A);
1341:TP2824/TP2802.c **** 			
1342:TP2824/TP2802.c ****         }
1343:TP2824/TP2802.c ****         tmp=tp28xx_byte_read(0x14);
1344:TP2824/TP2802.c ****         tmp |= 0x40;
1345:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccSTfybG.s 			page 25


1346:TP2824/TP2802.c **** 		
1347:TP2824/TP2802.c **** //   	tmp|=0x0a;//0x14 sharpness   =0x0a ryan@20210317
1348:TP2824/TP2802.c **** //   	tmp=0x0a;//0x14 sharpness   =0x0a ryan@20210629
1349:TP2824/TP2802.c ****    
1350:TP2824/TP2802.c ****  //       tp28xx_byte_write(0x14, tmp);
1351:TP2824/TP2802.c **** 
1352:TP2824/TP2802.c ****     }
1353:TP2824/TP2802.c ****     return index;
1354:TP2824/TP2802.c **** }
1355:TP2824/TP2802.c **** 
1356:TP2824/TP2802.c **** tByte Set_HDC(tByte ch)
1357:TP2824/TP2802.c **** {
1358:TP2824/TP2802.c **** 
1359:TP2824/TP2802.c ****     tByte index;
1360:TP2824/TP2802.c **** 
1361:TP2824/TP2802.c ****     index=0;
1362:TP2824/TP2802.c **** 
1363:TP2824/TP2802.c ****     switch(mode[ch])
1364:TP2824/TP2802.c ****     {
1365:TP2824/TP2802.c **** 
1366:TP2824/TP2802.c ****     case R1080P30:
1367:TP2824/TP2802.c ****         index=3;
1368:TP2824/TP2802.c ****         break;
1369:TP2824/TP2802.c **** 
1370:TP2824/TP2802.c ****     case R1080P25:
1371:TP2824/TP2802.c ****         index=4;
1372:TP2824/TP2802.c ****         break;
1373:TP2824/TP2802.c **** 
1374:TP2824/TP2802.c ****     case R720P60://20200507    
1375:TP2824/TP2802.c ****     case R720P30V2:
1376:TP2824/TP2802.c ****         index=1;
1377:TP2824/TP2802.c ****         break;
1378:TP2824/TP2802.c **** 
1379:TP2824/TP2802.c ****     case R720P50://20200507    
1380:TP2824/TP2802.c ****     case R720P25V2:
1381:TP2824/TP2802.c ****         index=2;
1382:TP2824/TP2802.c ****         break;
1383:TP2824/TP2802.c ****     }
1384:TP2824/TP2802.c ****     if(index)
1385:TP2824/TP2802.c ****     {
1386:TP2824/TP2802.c ****         Set_VidRes(ch);
1387:TP2824/TP2802.c **** 
1388:TP2824/TP2802.c ****         if(TP2853C == chip)
1389:TP2824/TP2802.c ****         {
1390:TP2824/TP2802.c ****             I2CDeviceSet2( TP2853C_HDC_DataSet[0],TP2853C_HDC_DataSet[index] );
1391:TP2824/TP2802.c ****         }
1392:TP2824/TP2802.c ****         else if(TP2833 == chip || TP2834 == chip )
1393:TP2824/TP2802.c ****         {
1394:TP2824/TP2802.c ****             I2CDeviceSet2( TP2853C_HDC_DataSet[0],TP2853C_HDC_DataSet[index] );
1395:TP2824/TP2802.c ****         }
1396:TP2824/TP2802.c ****         else if(TP2826 == chip)
1397:TP2824/TP2802.c ****         {
1398:TP2824/TP2802.c ****             I2CDeviceSet2( TP2826_HDC_DataSet[0],TP2826_HDC_DataSet[index] );
1399:TP2824/TP2802.c ****         }
1400:TP2824/TP2802.c ****         else if(TP2824C == chip)
1401:TP2824/TP2802.c ****         {
1402:TP2824/TP2802.c ****             I2CDeviceSet2( TP2824C_HDC_DataSet[0],TP2824C_HDC_DataSet[index] );
ARM GAS  /tmp/ccSTfybG.s 			page 26


1403:TP2824/TP2802.c ****         }
1404:TP2824/TP2802.c ****         tp28xx_byte_write(0x13, 0x40);
1405:TP2824/TP2802.c ****     }
1406:TP2824/TP2802.c ****     return index;
1407:TP2824/TP2802.c **** }
1408:TP2824/TP2802.c **** 
1409:TP2824/TP2802.c **** tByte Det_VidRes()
1410:TP2824/TP2802.c **** {
1411:TP2824/TP2802.c ****     tByte CVSTD;
1412:TP2824/TP2802.c ****     tByte RES;
1413:TP2824/TP2802.c **** 
1414:TP2824/TP2802.c ****     CVSTD = tp28xx_byte_read(0x03) & 0x07;
1415:TP2824/TP2802.c **** 
1416:TP2824/TP2802.c ****     switch (CVSTD)
1417:TP2824/TP2802.c ****     {
1418:TP2824/TP2802.c **** 
1419:TP2824/TP2802.c ****     case 0x00:
1420:TP2824/TP2802.c ****         RES = R720P60;
1421:TP2824/TP2802.c ****         break;
1422:TP2824/TP2802.c ****     case 0x01:
1423:TP2824/TP2802.c ****         RES = R720P50;
1424:TP2824/TP2802.c ****         break;
1425:TP2824/TP2802.c ****     case 0x02:
1426:TP2824/TP2802.c ****         RES = R1080P30;
1427:TP2824/TP2802.c ****         break;
1428:TP2824/TP2802.c ****     case 0x03:
1429:TP2824/TP2802.c ****         RES = R1080P25;
1430:TP2824/TP2802.c ****         break;
1431:TP2824/TP2802.c ****     case 0x04:
1432:TP2824/TP2802.c ****         RES = R720P30;
1433:TP2824/TP2802.c ****         break;
1434:TP2824/TP2802.c ****     case 0x05:
1435:TP2824/TP2802.c ****         RES = R720P25;
1436:TP2824/TP2802.c ****         break;
1437:TP2824/TP2802.c ****     case 0x06:
1438:TP2824/TP2802.c ****         printf("\r\nN/P detected");
1439:TP2824/TP2802.c ****         RES = NTPAL;
1440:TP2824/TP2802.c ****         break;
1441:TP2824/TP2802.c ****     default:
1442:TP2824/TP2802.c ****         printf("\r\nNo res detect...");
1443:TP2824/TP2802.c ****         RES = NoDet;
1444:TP2824/TP2802.c ****         break;
1445:TP2824/TP2802.c ****     }
1446:TP2824/TP2802.c **** 
1447:TP2824/TP2802.c ****     return RES;
1448:TP2824/TP2802.c **** 
1449:TP2824/TP2802.c **** }
1450:TP2824/TP2802.c **** tByte Det_VideoLoss(tByte ch)
1451:TP2824/TP2802.c **** {
1452:TP2824/TP2802.c **** 
1453:TP2824/TP2802.c ****     tByte VDLOSS;
1454:TP2824/TP2802.c **** 
1455:TP2824/TP2802.c ****     tp28xx_byte_write(0x40,ch&0x03);
1456:TP2824/TP2802.c ****     VDLOSS = tp28xx_byte_read(0x01);
1457:TP2824/TP2802.c **** //	printf("video status 0x%02x on ch%01x\r\n",(tWord)VDLOSS,(tWord)ch);
1458:TP2824/TP2802.c **** 
1459:TP2824/TP2802.c ****     if(VDLOSS)	printf("No ");
ARM GAS  /tmp/ccSTfybG.s 			page 27


1460:TP2824/TP2802.c **** 
1461:TP2824/TP2802.c ****     printf("video detected");
1462:TP2824/TP2802.c **** 
1463:TP2824/TP2802.c **** 
1464:TP2824/TP2802.c ****     VDLOSS = VDLOSS>>7;
1465:TP2824/TP2802.c ****     return VDLOSS;
1466:TP2824/TP2802.c **** }
1467:TP2824/TP2802.c **** 
1468:TP2824/TP2802.c **** void ManualAGC(unsigned char ch)
1469:TP2824/TP2802.c **** {
1470:TP2824/TP2802.c ****     unsigned int agc;
1471:TP2824/TP2802.c ****     unsigned char tmp;
1472:TP2824/TP2802.c ****     //unsigned int i;
1473:TP2824/TP2802.c **** 
1474:TP2824/TP2802.c ****     tp28xx_byte_write(0x2F, 0x02);
1475:TP2824/TP2802.c ****     agc = tp28xx_byte_read(0x04);
1476:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
1477:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
1478:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
1479:TP2824/TP2802.c ****     agc &= 0x3f0;
1480:TP2824/TP2802.c ****     agc >>=1;
1481:TP2824/TP2802.c ****     if(agc > 0x1ff) agc = 0x1ff;
1482:TP2824/TP2802.c **** 
1483:TP2824/TP2802.c ****     printf("result AGC=0X%04x ch%02X\r\n", (tWord)agc, (tWord)ch);
1484:TP2824/TP2802.c ****     tp28xx_byte_write(0x08, agc&0xff);
1485:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x06);
1486:TP2824/TP2802.c ****     tmp &=0xf9;
1487:TP2824/TP2802.c ****     tmp |=(agc>>7)&0x02;
1488:TP2824/TP2802.c ****     tmp |=0x04;
1489:TP2824/TP2802.c ****     tp28xx_byte_write(0x06,tmp);
1490:TP2824/TP2802.c ****     
1491:TP2824/TP2802.c **** //test Dump Reg 
1492:TP2824/TP2802.c **** /*
1493:TP2824/TP2802.c ****     printf("DumpReg@strat\r\n") ;  
1494:TP2824/TP2802.c ****     tp28xx_byte_write(0x40,01); //
1495:TP2824/TP2802.c ****     for (i = 2 ; i< 255 ;i++)
1496:TP2824/TP2802.c ****     {
1497:TP2824/TP2802.c ****         tmp = tp28xx_byte_read((tByte)i);
1498:TP2824/TP2802.c ****         printf("88,%02X,%02X\r\n", i , (int)tmp ) ; 
1499:TP2824/TP2802.c ****     }
1500:TP2824/TP2802.c ****     printf("DumpReg@end\r\n") ; 
1501:TP2824/TP2802.c **** */
1502:TP2824/TP2802.c ****     
1503:TP2824/TP2802.c **** }
1504:TP2824/TP2802.c **** 
1505:TP2824/TP2802.c **** 
1506:TP2824/TP2802.c **** /*
1507:TP2824/TP2802.c **** static void tp2802D_reset_default(unsigned char ch)
1508:TP2824/TP2802.c **** {
1509:TP2824/TP2802.c ****     unsigned char tmp;
1510:TP2824/TP2802.c ****     tp28xx_byte_write(0x3A, 0x01);
1511:TP2824/TP2802.c ****     tp28xx_byte_write(0x0B, 0xC0);
1512:TP2824/TP2802.c ****     tp28xx_byte_write(0x07, 0xC0);
1513:TP2824/TP2802.c ****     tp28xx_byte_write(0x2e, 0x70);
1514:TP2824/TP2802.c ****     tp28xx_byte_write(0x39, 0x42);
1515:TP2824/TP2802.c ****     tp28xx_byte_write(0x09, 0x24);
1516:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x06);   // soft reset and auto agc when cable is unplug
ARM GAS  /tmp/ccSTfybG.s 			page 28


1517:TP2824/TP2802.c ****     tmp &= 0x7b;
1518:TP2824/TP2802.c ****     tp28xx_byte_write(0x06, tmp);
1519:TP2824/TP2802.c **** 
1520:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0xf5);
1521:TP2824/TP2802.c ****     if( tmp & SYS_MODE[ch])
1522:TP2824/TP2802.c ****     {
1523:TP2824/TP2802.c ****         tmp &= SYS_AND[ch];
1524:TP2824/TP2802.c ****         tp28xx_byte_write(0xf5, tmp);
1525:TP2824/TP2802.c ****     }
1526:TP2824/TP2802.c **** }
1527:TP2824/TP2802.c **** */
1528:TP2824/TP2802.c **** /*  //chunyu
1529:TP2824/TP2802.c **** static void tp282x_reset_AGC_CLK(unsigned char ch)
1530:TP2824/TP2802.c **** {
1531:TP2824/TP2802.c ****     unsigned char tmp;
1532:TP2824/TP2802.c **** 
1533:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x06);
1534:TP2824/TP2802.c ****     tmp &= 0xfb;
1535:TP2824/TP2802.c ****     tp28xx_byte_write(0x06, tmp);
1536:TP2824/TP2802.c **** 
1537:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0xf5);
1538:TP2824/TP2802.c ****     tmp &= SYS_AND[ch];
1539:TP2824/TP2802.c ****     tp28xx_byte_write(0xf5, tmp);
1540:TP2824/TP2802.c **** 
1541:TP2824/TP2802.c ****     tp28xx_byte_write(0x35, 0x05);
1542:TP2824/TP2802.c ****     tp28xx_byte_write(0x26, 0x01);
1543:TP2824/TP2802.c **** }
1544:TP2824/TP2802.c **** */
1545:TP2824/TP2802.c **** static void tp2824_reset_default(void)
1546:TP2824/TP2802.c **** {
  25              		.loc 1 1546 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29 0000 08B5     		push	{r3, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 3, -8
  33              		.cfi_offset 14, -4
1547:TP2824/TP2802.c ****     //unsigned char tmp;
1548:TP2824/TP2802.c ****     //tp28xx_byte_write(addr, 0x07, 0x40);
1549:TP2824/TP2802.c ****     //tp28xx_byte_write(addr, 0x0b, 0x40);
1550:TP2824/TP2802.c ****     //tp28xx_byte_write(addr, 0x3A, 0x88);
1551:TP2824/TP2802.c ****     tp28xx_byte_write(0x26, 0x01);
  34              		.loc 1 1551 0
  35 0002 0121     		movs	r1, #1
  36 0004 2620     		movs	r0, #38
  37 0006 FFF7FEFF 		bl	tp28xx_byte_write
  38              	.LVL0:
1552:TP2824/TP2802.c **** }
  39              		.loc 1 1552 0
  40 000a 08BD     		pop	{r3, pc}
  41              		.cfi_endproc
  42              	.LFE79:
  44              		.section	.text.tp28xx_SYSCLK_V1,"ax",%progbits
  45              		.align	1
  46              		.syntax unified
ARM GAS  /tmp/ccSTfybG.s 			page 29


  47              		.thumb
  48              		.thumb_func
  49              		.fpu softvfp
  51              	tp28xx_SYSCLK_V1:
  52              	.LFB72:
1099:TP2824/TP2802.c ****     unsigned char tmp;
  53              		.loc 1 1099 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              	.LVL1:
  58 0000 10B5     		push	{r4, lr}
  59              	.LCFI1:
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 4, -8
  62              		.cfi_offset 14, -4
  63 0002 0446     		mov	r4, r0
1101:TP2824/TP2802.c ****     tmp &= SYS_AND[ch];
  64              		.loc 1 1101 0
  65 0004 F520     		movs	r0, #245
  66              	.LVL2:
  67 0006 FFF7FEFF 		bl	tp28xx_byte_read
  68              	.LVL3:
1102:TP2824/TP2802.c ****     tp28xx_byte_write(0xf5, tmp);
  69              		.loc 1 1102 0
  70 000a 074B     		ldr	r3, .L5
  71 000c 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
  72              	.LVL4:
1103:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x35);
  73              		.loc 1 1103 0
  74 000e 0140     		ands	r1, r1, r0
  75              	.LVL5:
  76 0010 F520     		movs	r0, #245
  77 0012 FFF7FEFF 		bl	tp28xx_byte_write
  78              	.LVL6:
1104:TP2824/TP2802.c ****     tmp &= 0xdf;
  79              		.loc 1 1104 0
  80 0016 3520     		movs	r0, #53
  81 0018 FFF7FEFF 		bl	tp28xx_byte_read
  82              	.LVL7:
1106:TP2824/TP2802.c **** }
  83              		.loc 1 1106 0
  84 001c 00F0DF01 		and	r1, r0, #223
  85 0020 3520     		movs	r0, #53
  86              	.LVL8:
  87 0022 FFF7FEFF 		bl	tp28xx_byte_write
  88              	.LVL9:
1107:TP2824/TP2802.c **** 
  89              		.loc 1 1107 0
  90 0026 10BD     		pop	{r4, pc}
  91              	.L6:
  92              		.align	2
  93              	.L5:
  94 0028 00000000 		.word	.LANCHOR0
  95              		.cfi_endproc
  96              	.LFE72:
  98              		.section	.text.tp28xx_SYSCLK_V2,"ax",%progbits
ARM GAS  /tmp/ccSTfybG.s 			page 30


  99              		.align	1
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 103              		.fpu softvfp
 105              	tp28xx_SYSCLK_V2:
 106              	.LFB71:
1089:TP2824/TP2802.c ****     unsigned char tmp;
 107              		.loc 1 1089 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              	.LVL10:
 112 0000 10B5     		push	{r4, lr}
 113              	.LCFI2:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
 117 0002 0446     		mov	r4, r0
1091:TP2824/TP2802.c ****     tmp |= SYS_MODE[ch];
 118              		.loc 1 1091 0
 119 0004 F520     		movs	r0, #245
 120              	.LVL11:
 121 0006 FFF7FEFF 		bl	tp28xx_byte_read
 122              	.LVL12:
1092:TP2824/TP2802.c ****     tp28xx_byte_write(0xf5, tmp);
 123              		.loc 1 1092 0
 124 000a 084B     		ldr	r3, .L9
 125 000c 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 126 000e 0143     		orrs	r1, r1, r0
 127              	.LVL13:
1093:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x35);
 128              		.loc 1 1093 0
 129 0010 C9B2     		uxtb	r1, r1
 130 0012 F520     		movs	r0, #245
 131 0014 FFF7FEFF 		bl	tp28xx_byte_write
 132              	.LVL14:
1094:TP2824/TP2802.c ****     tmp |= 0x20;
 133              		.loc 1 1094 0
 134 0018 3520     		movs	r0, #53
 135 001a FFF7FEFF 		bl	tp28xx_byte_read
 136              	.LVL15:
1095:TP2824/TP2802.c ****     tp28xx_byte_write(0x35, tmp);
 137              		.loc 1 1095 0
 138 001e 40F02001 		orr	r1, r0, #32
 139              	.LVL16:
1096:TP2824/TP2802.c **** }
 140              		.loc 1 1096 0
 141 0022 C9B2     		uxtb	r1, r1
 142 0024 3520     		movs	r0, #53
 143 0026 FFF7FEFF 		bl	tp28xx_byte_write
 144              	.LVL17:
1097:TP2824/TP2802.c **** static void tp28xx_SYSCLK_V1(unsigned char ch)
 145              		.loc 1 1097 0
 146 002a 10BD     		pop	{r4, pc}
 147              	.L10:
 148              		.align	2
ARM GAS  /tmp/ccSTfybG.s 			page 31


 149              	.L9:
 150 002c 00000000 		.word	.LANCHOR1
 151              		.cfi_endproc
 152              	.LFE71:
 154              		.section	.text.tp2853C_reset_default,"ax",%progbits
 155              		.align	1
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu softvfp
 161              	tp2853C_reset_default:
 162              	.LFB80:
1553:TP2824/TP2802.c **** static void tp2853C_reset_default(void)
1554:TP2824/TP2802.c **** {
 163              		.loc 1 1554 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 08B5     		push	{r3, lr}
 168              	.LCFI3:
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 3, -8
 171              		.cfi_offset 14, -4
1555:TP2824/TP2802.c ****     unsigned char tmp;
1556:TP2824/TP2802.c ****     tp28xx_byte_write(0x07, 0xC0);
 172              		.loc 1 1556 0
 173 0002 C021     		movs	r1, #192
 174 0004 0720     		movs	r0, #7
 175 0006 FFF7FEFF 		bl	tp28xx_byte_write
 176              	.LVL18:
1557:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x14);
 177              		.loc 1 1557 0
 178 000a 1420     		movs	r0, #20
 179 000c FFF7FEFF 		bl	tp28xx_byte_read
 180              	.LVL19:
1558:TP2824/TP2802.c ****     tmp &= 0x9f;
1559:TP2824/TP2802.c ****     tp28xx_byte_write(0x14, tmp);
 181              		.loc 1 1559 0
 182 0010 00F09F01 		and	r1, r0, #159
 183 0014 1420     		movs	r0, #20
 184              	.LVL20:
 185 0016 FFF7FEFF 		bl	tp28xx_byte_write
 186              	.LVL21:
1560:TP2824/TP2802.c ****     tp28xx_byte_write(0x13, 0x00);
 187              		.loc 1 1560 0
 188 001a 0021     		movs	r1, #0
 189 001c 1320     		movs	r0, #19
 190 001e FFF7FEFF 		bl	tp28xx_byte_write
 191              	.LVL22:
1561:TP2824/TP2802.c ****     tp28xx_byte_write(0x26, 0x04);
 192              		.loc 1 1561 0
 193 0022 0421     		movs	r1, #4
 194 0024 2620     		movs	r0, #38
 195 0026 FFF7FEFF 		bl	tp28xx_byte_write
 196              	.LVL23:
1562:TP2824/TP2802.c ****     tp28xx_byte_write(0x06, 0xb2);
 197              		.loc 1 1562 0
ARM GAS  /tmp/ccSTfybG.s 			page 32


 198 002a B221     		movs	r1, #178
 199 002c 0620     		movs	r0, #6
 200 002e FFF7FEFF 		bl	tp28xx_byte_write
 201              	.LVL24:
1563:TP2824/TP2802.c **** }
 202              		.loc 1 1563 0
 203 0032 08BD     		pop	{r3, pc}
 204              		.cfi_endproc
 205              	.LFE80:
 207              		.section	.text.TP28xx_reset_default,"ax",%progbits
 208              		.align	1
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 212              		.fpu softvfp
 214              	TP28xx_reset_default:
 215              	.LFB81:
1564:TP2824/TP2802.c **** static void TP28xx_reset_default(int chip, unsigned char ch)
1565:TP2824/TP2802.c **** {
 216              		.loc 1 1565 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              	.LVL25:
 221 0000 08B5     		push	{r3, lr}
 222              	.LCFI4:
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 3, -8
 225              		.cfi_offset 14, -4
1566:TP2824/TP2802.c ****     /*    if(TP2823 == chip )
1567:TP2824/TP2802.c ****     	{
1568:TP2824/TP2802.c ****                tp282x_reset_AGC_CLK(ch);
1569:TP2824/TP2802.c ****     	}
1570:TP2824/TP2802.c ****         else if(TP2822 == chip )
1571:TP2824/TP2802.c ****     	{
1572:TP2824/TP2802.c ****                tp282x_reset_AGC_CLK(ch);
1573:TP2824/TP2802.c ****     		   tp28xx_byte_write(0x07, 0x40);
1574:TP2824/TP2802.c ****     	}
1575:TP2824/TP2802.c ****         else if(TP2802D == chip )
1576:TP2824/TP2802.c ****         {
1577:TP2824/TP2802.c ****                tp2802D_reset_default( ch);
1578:TP2824/TP2802.c ****         }
1579:TP2824/TP2802.c ****     */
1580:TP2824/TP2802.c ****     if(TP2834 == chip )
 226              		.loc 1 1580 0
 227 0002 2428     		cmp	r0, #36
 228 0004 06D0     		beq	.L19
1581:TP2824/TP2802.c ****     {
1582:TP2824/TP2802.c ****         tp2824_reset_default();
1583:TP2824/TP2802.c ****     }
1584:TP2824/TP2802.c ****     else if(TP2833 == chip )
 229              		.loc 1 1584 0
 230 0006 2528     		cmp	r0, #37
 231 0008 07D0     		beq	.L20
1585:TP2824/TP2802.c ****     {
1586:TP2824/TP2802.c ****         tp2853C_reset_default();
1587:TP2824/TP2802.c ****     }
ARM GAS  /tmp/ccSTfybG.s 			page 33


1588:TP2824/TP2802.c ****     else if(TP2853C == chip )
 232              		.loc 1 1588 0
 233 000a 2628     		cmp	r0, #38
 234 000c 08D0     		beq	.L21
1589:TP2824/TP2802.c ****     {
1590:TP2824/TP2802.c ****         tp2853C_reset_default();
1591:TP2824/TP2802.c ****     }
1592:TP2824/TP2802.c **** 	else  //chunyu
1593:TP2824/TP2802.c **** 	{	
1594:TP2824/TP2802.c ****         tp2824_reset_default() ;   //chunyu
 235              		.loc 1 1594 0
 236 000e FFF7FEFF 		bl	tp2824_reset_default
 237              	.LVL26:
 238              	.L13:
1595:TP2824/TP2802.c **** 	}
1596:TP2824/TP2802.c **** }
 239              		.loc 1 1596 0
 240 0012 08BD     		pop	{r3, pc}
 241              	.LVL27:
 242              	.L19:
1582:TP2824/TP2802.c ****     }
 243              		.loc 1 1582 0
 244 0014 FFF7FEFF 		bl	tp2824_reset_default
 245              	.LVL28:
 246 0018 FBE7     		b	.L13
 247              	.LVL29:
 248              	.L20:
1586:TP2824/TP2802.c ****     }
 249              		.loc 1 1586 0
 250 001a FFF7FEFF 		bl	tp2853C_reset_default
 251              	.LVL30:
 252 001e F8E7     		b	.L13
 253              	.LVL31:
 254              	.L21:
1590:TP2824/TP2802.c ****     }
 255              		.loc 1 1590 0
 256 0020 FFF7FEFF 		bl	tp2853C_reset_default
 257              	.LVL32:
 258 0024 F5E7     		b	.L13
 259              		.cfi_endproc
 260              	.LFE81:
 262              		.section	.text.I2CDeviceSet1,"ax",%progbits
 263              		.align	1
 264              		.global	I2CDeviceSet1
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu softvfp
 270              	I2CDeviceSet1:
 271              	.LFB68:
 935:TP2824/TP2802.c **** 	int	cnt=0;
 272              		.loc 1 935 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              	.LVL33:
 277 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccSTfybG.s 			page 34


 278              	.LCFI5:
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 4, -8
 281              		.cfi_offset 14, -4
 282 0002 0446     		mov	r4, r0
 283              	.LVL34:
 946:TP2824/TP2802.c **** 
 284              		.loc 1 946 0
 285 0004 03E0     		b	.L23
 286              	.LVL35:
 287              	.L24:
 951:TP2824/TP2802.c **** 
 288              		.loc 1 951 0
 289 0006 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 290 0008 FFF7FEFF 		bl	tp28xx_byte_write
 291              	.LVL36:
 955:TP2824/TP2802.c **** 
 292              		.loc 1 955 0
 293 000c 0234     		adds	r4, r4, #2
 294              	.LVL37:
 295              	.L23:
 946:TP2824/TP2802.c **** 
 296              		.loc 1 946 0
 297 000e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 298 0010 FF28     		cmp	r0, #255
 299 0012 F8D1     		bne	.L24
 959:TP2824/TP2802.c **** }
 300              		.loc 1 959 0
 301 0014 3220     		movs	r0, #50
 302 0016 FFF7FEFF 		bl	delay
 303              	.LVL38:
 960:TP2824/TP2802.c **** 
 304              		.loc 1 960 0
 305 001a 10BD     		pop	{r4, pc}
 306              		.cfi_endproc
 307              	.LFE68:
 309              		.section	.text.I2CDeviceSet2,"ax",%progbits
 310              		.align	1
 311              		.global	I2CDeviceSet2
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu softvfp
 317              	I2CDeviceSet2:
 318              	.LFB69:
 964:TP2824/TP2802.c **** 	int	cnt=0;
 319              		.loc 1 964 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              	.LVL39:
 324 0000 38B5     		push	{r3, r4, r5, lr}
 325              	.LCFI6:
 326              		.cfi_def_cfa_offset 16
 327              		.cfi_offset 3, -16
 328              		.cfi_offset 4, -12
 329              		.cfi_offset 5, -8
ARM GAS  /tmp/ccSTfybG.s 			page 35


 330              		.cfi_offset 14, -4
 331 0002 0446     		mov	r4, r0
 332 0004 0D46     		mov	r5, r1
 333              	.LVL40:
 968:TP2824/TP2802.c **** 
 334              		.loc 1 968 0
 335 0006 04E0     		b	.L27
 336              	.LVL41:
 337              	.L28:
 973:TP2824/TP2802.c **** 
 338              		.loc 1 973 0
 339 0008 15F8011B 		ldrb	r1, [r5], #1	@ zero_extendqisi2
 340              	.LVL42:
 341 000c FFF7FEFF 		bl	tp28xx_byte_write
 342              	.LVL43:
 977:TP2824/TP2802.c **** 		DatSet++;
 343              		.loc 1 977 0
 344 0010 0134     		adds	r4, r4, #1
 345              	.LVL44:
 346              	.L27:
 968:TP2824/TP2802.c **** 
 347              		.loc 1 968 0
 348 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 349 0014 FF28     		cmp	r0, #255
 350 0016 F7D1     		bne	.L28
 982:TP2824/TP2802.c **** }
 351              		.loc 1 982 0
 352 0018 3220     		movs	r0, #50
 353 001a FFF7FEFF 		bl	delay
 354              	.LVL45:
 983:TP2824/TP2802.c **** 
 355              		.loc 1 983 0
 356 001e 38BD     		pop	{r3, r4, r5, pc}
 357              		.cfi_endproc
 358              	.LFE69:
 360              		.section	.text.SetRegPage,"ax",%progbits
 361              		.align	1
 362              		.global	SetRegPage
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 366              		.fpu softvfp
 368              	SetRegPage:
 369              	.LFB70:
 986:TP2824/TP2802.c ****     //tByte tmp;
 370              		.loc 1 986 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              	.LVL46:
 375 0000 08B5     		push	{r3, lr}
 376              	.LCFI7:
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 3, -8
 379              		.cfi_offset 14, -4
 989:TP2824/TP2802.c ****     //tp28xx_byte_write(0x40,0x04); //chunyu
 380              		.loc 1 989 0
ARM GAS  /tmp/ccSTfybG.s 			page 36


 381 0002 0146     		mov	r1, r0
 382 0004 4020     		movs	r0, #64
 383              	.LVL47:
 384 0006 FFF7FEFF 		bl	tp28xx_byte_write
 385              	.LVL48:
 992:TP2824/TP2802.c **** 
 386              		.loc 1 992 0
 387 000a 08BD     		pop	{r3, pc}
 388              		.cfi_endproc
 389              	.LFE70:
 391              		.section	.text.Set_VidRes,"ax",%progbits
 392              		.align	1
 393              		.global	Set_VidRes
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 397              		.fpu softvfp
 399              	Set_VidRes:
 400              	.LFB73:
1110:TP2824/TP2802.c ****     tByte index, sys, tmp;
 401              		.loc 1 1110 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              	.LVL49:
 406 0000 70B5     		push	{r4, r5, r6, lr}
 407              	.LCFI8:
 408              		.cfi_def_cfa_offset 16
 409              		.cfi_offset 4, -16
 410              		.cfi_offset 5, -12
 411              		.cfi_offset 6, -8
 412              		.cfi_offset 14, -4
 413 0002 0646     		mov	r6, r0
 414              	.LVL50:
1114:TP2824/TP2802.c ****     {
 415              		.loc 1 1114 0
 416 0004 9C4B     		ldr	r3, .L69
 417 0006 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 418 0008 262B     		cmp	r3, #38
 419 000a 00F2F980 		bhi	.L60
 420 000e DFE813F0 		tbh	[pc, r3, lsl #1]
 421              	.L35:
 422 0012 7600     		.2byte	(.L34-.L35)/2
 423 0014 8800     		.2byte	(.L36-.L35)/2
 424 0016 2700     		.2byte	(.L37-.L35)/2
 425 0018 6E00     		.2byte	(.L38-.L35)/2
 426 001a 9A00     		.2byte	(.L39-.L35)/2
 427 001c A300     		.2byte	(.L40-.L35)/2
 428 001e F700     		.2byte	(.L60-.L35)/2
 429 0020 F700     		.2byte	(.L60-.L35)/2
 430 0022 B500     		.2byte	(.L41-.L35)/2
 431 0024 AC00     		.2byte	(.L42-.L35)/2
 432 0026 F700     		.2byte	(.L60-.L35)/2
 433 0028 F700     		.2byte	(.L60-.L35)/2
 434 002a 7F00     		.2byte	(.L43-.L35)/2
 435 002c 9100     		.2byte	(.L44-.L35)/2
 436 002e F700     		.2byte	(.L60-.L35)/2
ARM GAS  /tmp/ccSTfybG.s 			page 37


 437 0030 F700     		.2byte	(.L60-.L35)/2
 438 0032 F700     		.2byte	(.L60-.L35)/2
 439 0034 F700     		.2byte	(.L60-.L35)/2
 440 0036 F700     		.2byte	(.L60-.L35)/2
 441 0038 F700     		.2byte	(.L60-.L35)/2
 442 003a F700     		.2byte	(.L60-.L35)/2
 443 003c F700     		.2byte	(.L60-.L35)/2
 444 003e F700     		.2byte	(.L60-.L35)/2
 445 0040 F700     		.2byte	(.L60-.L35)/2
 446 0042 F700     		.2byte	(.L60-.L35)/2
 447 0044 F700     		.2byte	(.L60-.L35)/2
 448 0046 F700     		.2byte	(.L60-.L35)/2
 449 0048 F700     		.2byte	(.L60-.L35)/2
 450 004a F700     		.2byte	(.L60-.L35)/2
 451 004c F700     		.2byte	(.L60-.L35)/2
 452 004e F700     		.2byte	(.L60-.L35)/2
 453 0050 F700     		.2byte	(.L60-.L35)/2
 454 0052 BE00     		.2byte	(.L45-.L35)/2
 455 0054 C600     		.2byte	(.L46-.L35)/2
 456 0056 CE00     		.2byte	(.L47-.L35)/2
 457 0058 D600     		.2byte	(.L48-.L35)/2
 458 005a DE00     		.2byte	(.L49-.L35)/2
 459 005c E600     		.2byte	(.L50-.L35)/2
 460 005e EE00     		.2byte	(.L51-.L35)/2
 461              		.p2align 1
 462              	.L37:
 463              	.LVL51:
1119:TP2824/TP2802.c ****         printf("1080p30");
 464              		.loc 1 1119 0
 465 0060 0124     		movs	r4, #1
 466 0062 864B     		ldr	r3, .L69+4
 467 0064 1C70     		strb	r4, [r3]
1120:TP2824/TP2802.c ****         break;
 468              		.loc 1 1120 0
 469 0066 8648     		ldr	r0, .L69+8
 470              	.LVL52:
 471 0068 FFF7FEFF 		bl	printf
 472              	.LVL53:
1118:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
 473              		.loc 1 1118 0
 474 006c 2546     		mov	r5, r4
 475              	.LVL54:
 476              	.L33:
1239:TP2824/TP2802.c **** 
 477              		.loc 1 1239 0
 478 006e 8548     		ldr	r0, .L69+12
 479 0070 FFF7FEFF 		bl	puts
 480              	.LVL55:
1242:TP2824/TP2802.c ****     //	printf("chip= 0x%4x\r\n",chip);
 481              		.loc 1 1242 0
 482 0074 8448     		ldr	r0, .L69+16
 483 0076 04EB4401 		add	r1, r4, r4, lsl #1
 484 007a 04EB8101 		add	r1, r4, r1, lsl #2
 485 007e 0144     		add	r1, r1, r0
 486 0080 FFF7FEFF 		bl	I2CDeviceSet2
 487              	.LVL56:
1244:TP2824/TP2802.c **** {
ARM GAS  /tmp/ccSTfybG.s 			page 38


 488              		.loc 1 1244 0
 489 0084 7C4B     		ldr	r3, .L69
 490 0086 9B5D     		ldrb	r3, [r3, r6]	@ zero_extendqisi2
 491 0088 022B     		cmp	r3, #2
 492 008a 00F0BC80 		beq	.L62
 493              	.L52:
1249:TP2824/TP2802.c ****     {
 494              		.loc 1 1249 0
 495 008e 7F4B     		ldr	r3, .L69+20
 496 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 497 0092 262B     		cmp	r3, #38
 498 0094 00F0BC80 		beq	.L63
1253:TP2824/TP2802.c ****     {
 499              		.loc 1 1253 0
 500 0098 252B     		cmp	r3, #37
 501 009a 00F0C180 		beq	.L64
1257:TP2824/TP2802.c ****     {
 502              		.loc 1 1257 0
 503 009e 242B     		cmp	r3, #36
 504 00a0 00F0C680 		beq	.L65
 505              	.L54:
1261:TP2824/TP2802.c ****     {
 506              		.loc 1 1261 0
 507 00a4 794B     		ldr	r3, .L69+20
 508 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 509 00a8 2F2B     		cmp	r3, #47
 510 00aa 00F0CA80 		beq	.L66
 511              	.L56:
1266:TP2824/TP2802.c ****     {
 512              		.loc 1 1266 0
 513 00ae 774B     		ldr	r3, .L69+20
 514 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 515 00b2 272B     		cmp	r3, #39
 516 00b4 00F0D080 		beq	.L67
 517              	.L57:
1272:TP2824/TP2802.c ****         tp28xx_SYSCLK_V1(ch);
 518              		.loc 1 1272 0
 519 00b8 012D     		cmp	r5, #1
 520 00ba 00F0D980 		beq	.L68
1275:TP2824/TP2802.c **** 
 521              		.loc 1 1275 0
 522 00be 3046     		mov	r0, r6
 523 00c0 FFF7FEFF 		bl	tp28xx_SYSCLK_V2
 524              	.LVL57:
 525              	.L59:
1277:TP2824/TP2802.c ****     tmp=tp28xx_byte_read(0x14);
 526              		.loc 1 1277 0
 527 00c4 0021     		movs	r1, #0
 528 00c6 1320     		movs	r0, #19
 529 00c8 FFF7FEFF 		bl	tp28xx_byte_write
 530              	.LVL58:
1278:TP2824/TP2802.c ****     tmp &= 0x9f;
 531              		.loc 1 1278 0
 532 00cc 1420     		movs	r0, #20
 533 00ce FFF7FEFF 		bl	tp28xx_byte_read
 534              	.LVL59:
1280:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccSTfybG.s 			page 39


 535              		.loc 1 1280 0
 536 00d2 00F09F01 		and	r1, r0, #159
 537 00d6 1420     		movs	r0, #20
 538              	.LVL60:
 539 00d8 FFF7FEFF 		bl	tp28xx_byte_write
 540              	.LVL61:
1283:TP2824/TP2802.c ****     tmp &= 0x7f;
 541              		.loc 1 1283 0
 542 00dc 0220     		movs	r0, #2
 543 00de FFF7FEFF 		bl	tp28xx_byte_read
 544              	.LVL62:
1285:TP2824/TP2802.c **** #else
 545              		.loc 1 1285 0
 546 00e2 00F07F01 		and	r1, r0, #127
 547 00e6 0220     		movs	r0, #2
 548              	.LVL63:
 549 00e8 FFF7FEFF 		bl	tp28xx_byte_write
 550              	.LVL64:
1291:TP2824/TP2802.c **** 
 551              		.loc 1 1291 0
 552 00ec 70BD     		pop	{r4, r5, r6, pc}
 553              	.LVL65:
 554              	.L38:
1126:TP2824/TP2802.c ****         printf("1080p25");
 555              		.loc 1 1126 0
 556 00ee 0125     		movs	r5, #1
 557 00f0 624B     		ldr	r3, .L69+4
 558 00f2 1D70     		strb	r5, [r3]
1127:TP2824/TP2802.c ****         break;
 559              		.loc 1 1127 0
 560 00f4 6648     		ldr	r0, .L69+24
 561              	.LVL66:
 562 00f6 FFF7FEFF 		bl	printf
 563              	.LVL67:
1124:TP2824/TP2802.c ****         sys=1;//V1
 564              		.loc 1 1124 0
 565 00fa 0224     		movs	r4, #2
1128:TP2824/TP2802.c **** 
 566              		.loc 1 1128 0
 567 00fc B7E7     		b	.L33
 568              	.LVL68:
 569              	.L34:
1133:TP2824/TP2802.c ****         printf("720p60");
 570              		.loc 1 1133 0
 571 00fe 5F4B     		ldr	r3, .L69+4
 572 0100 0022     		movs	r2, #0
 573 0102 1A70     		strb	r2, [r3]
1134:TP2824/TP2802.c ****         break;
 574              		.loc 1 1134 0
 575 0104 6348     		ldr	r0, .L69+28
 576              	.LVL69:
 577 0106 FFF7FEFF 		bl	printf
 578              	.LVL70:
1132:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 579              		.loc 1 1132 0
 580 010a 0125     		movs	r5, #1
1131:TP2824/TP2802.c ****         sys=1;//V1
ARM GAS  /tmp/ccSTfybG.s 			page 40


 581              		.loc 1 1131 0
 582 010c 0324     		movs	r4, #3
1135:TP2824/TP2802.c **** 
 583              		.loc 1 1135 0
 584 010e AEE7     		b	.L33
 585              	.LVL71:
 586              	.L43:
1140:TP2824/TP2802.c ****         printf("720p30V2");
 587              		.loc 1 1140 0
 588 0110 5A4B     		ldr	r3, .L69+4
 589 0112 0022     		movs	r2, #0
 590 0114 1A70     		strb	r2, [r3]
1141:TP2824/TP2802.c ****         break;
 591              		.loc 1 1141 0
 592 0116 6048     		ldr	r0, .L69+32
 593              	.LVL72:
 594 0118 FFF7FEFF 		bl	printf
 595              	.LVL73:
1139:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 596              		.loc 1 1139 0
 597 011c 0225     		movs	r5, #2
1138:TP2824/TP2802.c ****         sys=2;//V2
 598              		.loc 1 1138 0
 599 011e 0B24     		movs	r4, #11
1142:TP2824/TP2802.c **** 
 600              		.loc 1 1142 0
 601 0120 A5E7     		b	.L33
 602              	.LVL74:
 603              	.L36:
1147:TP2824/TP2802.c ****         printf("720p50");
 604              		.loc 1 1147 0
 605 0122 564B     		ldr	r3, .L69+4
 606 0124 0022     		movs	r2, #0
 607 0126 1A70     		strb	r2, [r3]
1148:TP2824/TP2802.c ****         break;
 608              		.loc 1 1148 0
 609 0128 5C48     		ldr	r0, .L69+36
 610              	.LVL75:
 611 012a FFF7FEFF 		bl	printf
 612              	.LVL76:
1146:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 613              		.loc 1 1146 0
 614 012e 0125     		movs	r5, #1
1145:TP2824/TP2802.c ****         sys=1;//V1
 615              		.loc 1 1145 0
 616 0130 0424     		movs	r4, #4
1149:TP2824/TP2802.c **** 
 617              		.loc 1 1149 0
 618 0132 9CE7     		b	.L33
 619              	.LVL77:
 620              	.L44:
1154:TP2824/TP2802.c ****         printf("720p25V2");
 621              		.loc 1 1154 0
 622 0134 514B     		ldr	r3, .L69+4
 623 0136 0022     		movs	r2, #0
 624 0138 1A70     		strb	r2, [r3]
1155:TP2824/TP2802.c ****         break;
ARM GAS  /tmp/ccSTfybG.s 			page 41


 625              		.loc 1 1155 0
 626 013a 5948     		ldr	r0, .L69+40
 627              	.LVL78:
 628 013c FFF7FEFF 		bl	printf
 629              	.LVL79:
1153:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 630              		.loc 1 1153 0
 631 0140 0225     		movs	r5, #2
1152:TP2824/TP2802.c ****         sys=2;//V2
 632              		.loc 1 1152 0
 633 0142 0C24     		movs	r4, #12
1156:TP2824/TP2802.c **** 
 634              		.loc 1 1156 0
 635 0144 93E7     		b	.L33
 636              	.LVL80:
 637              	.L39:
1161:TP2824/TP2802.c ****         printf("720p30");
 638              		.loc 1 1161 0
 639 0146 4D4B     		ldr	r3, .L69+4
 640 0148 0022     		movs	r2, #0
 641 014a 1A70     		strb	r2, [r3]
1162:TP2824/TP2802.c ****         break;
 642              		.loc 1 1162 0
 643 014c 5548     		ldr	r0, .L69+44
 644              	.LVL81:
 645 014e FFF7FEFF 		bl	printf
 646              	.LVL82:
1160:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 647              		.loc 1 1160 0
 648 0152 0125     		movs	r5, #1
1159:TP2824/TP2802.c ****         sys=1;//V1
 649              		.loc 1 1159 0
 650 0154 0524     		movs	r4, #5
1163:TP2824/TP2802.c **** 
 651              		.loc 1 1163 0
 652 0156 8AE7     		b	.L33
 653              	.LVL83:
 654              	.L40:
1168:TP2824/TP2802.c ****         printf("720p25");
 655              		.loc 1 1168 0
 656 0158 484B     		ldr	r3, .L69+4
 657 015a 0022     		movs	r2, #0
 658 015c 1A70     		strb	r2, [r3]
1169:TP2824/TP2802.c ****         break;
 659              		.loc 1 1169 0
 660 015e 5248     		ldr	r0, .L69+48
 661              	.LVL84:
 662 0160 FFF7FEFF 		bl	printf
 663              	.LVL85:
1167:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 664              		.loc 1 1167 0
 665 0164 0125     		movs	r5, #1
1166:TP2824/TP2802.c ****         sys=1;//V1
 666              		.loc 1 1166 0
 667 0166 0624     		movs	r4, #6
1170:TP2824/TP2802.c **** 
 668              		.loc 1 1170 0
ARM GAS  /tmp/ccSTfybG.s 			page 42


 669 0168 81E7     		b	.L33
 670              	.LVL86:
 671              	.L42:
1175:TP2824/TP2802.c ****         printf("PAL");
 672              		.loc 1 1175 0
 673 016a 444B     		ldr	r3, .L69+4
 674 016c 0322     		movs	r2, #3
 675 016e 1A70     		strb	r2, [r3]
1176:TP2824/TP2802.c ****         break;
 676              		.loc 1 1176 0
 677 0170 4E48     		ldr	r0, .L69+52
 678              	.LVL87:
 679 0172 FFF7FEFF 		bl	printf
 680              	.LVL88:
1174:TP2824/TP2802.c ****         ManVidResRx=RES1920X576;
 681              		.loc 1 1174 0
 682 0176 0425     		movs	r5, #4
1173:TP2824/TP2802.c ****         sys=4;
 683              		.loc 1 1173 0
 684 0178 0824     		movs	r4, #8
1177:TP2824/TP2802.c **** 
 685              		.loc 1 1177 0
 686 017a 78E7     		b	.L33
 687              	.LVL89:
 688              	.L41:
1182:TP2824/TP2802.c ****         printf("NTSC");
 689              		.loc 1 1182 0
 690 017c 3F4B     		ldr	r3, .L69+4
 691 017e 0222     		movs	r2, #2
 692 0180 1A70     		strb	r2, [r3]
1183:TP2824/TP2802.c ****         break;
 693              		.loc 1 1183 0
 694 0182 4B48     		ldr	r0, .L69+56
 695              	.LVL90:
 696 0184 FFF7FEFF 		bl	printf
 697              	.LVL91:
1181:TP2824/TP2802.c ****         ManVidResRx=RES1920X480;
 698              		.loc 1 1181 0
 699 0188 0325     		movs	r5, #3
1180:TP2824/TP2802.c ****         sys=3;
 700              		.loc 1 1180 0
 701 018a 0724     		movs	r4, #7
1184:TP2824/TP2802.c **** 
 702              		.loc 1 1184 0
 703 018c 6FE7     		b	.L33
 704              	.LVL92:
 705              	.L45:
1189:TP2824/TP2802.c ****         printf("3M18");
 706              		.loc 1 1189 0
 707 018e 0125     		movs	r5, #1
 708 0190 3A4B     		ldr	r3, .L69+4
 709 0192 1D70     		strb	r5, [r3]
1190:TP2824/TP2802.c ****         break;
 710              		.loc 1 1190 0
 711 0194 4748     		ldr	r0, .L69+60
 712              	.LVL93:
 713 0196 FFF7FEFF 		bl	printf
ARM GAS  /tmp/ccSTfybG.s 			page 43


 714              	.LVL94:
1187:TP2824/TP2802.c ****         sys=1;//V1
 715              		.loc 1 1187 0
 716 019a 0924     		movs	r4, #9
1191:TP2824/TP2802.c **** 
 717              		.loc 1 1191 0
 718 019c 67E7     		b	.L33
 719              	.LVL95:
 720              	.L46:
1196:TP2824/TP2802.c ****         printf("5M12");
 721              		.loc 1 1196 0
 722 019e 0125     		movs	r5, #1
 723 01a0 364B     		ldr	r3, .L69+4
 724 01a2 1D70     		strb	r5, [r3]
1197:TP2824/TP2802.c ****         break;
 725              		.loc 1 1197 0
 726 01a4 4448     		ldr	r0, .L69+64
 727              	.LVL96:
 728 01a6 FFF7FEFF 		bl	printf
 729              	.LVL97:
1194:TP2824/TP2802.c ****         sys=1;//V1
 730              		.loc 1 1194 0
 731 01aa 0A24     		movs	r4, #10
1198:TP2824/TP2802.c **** 
 732              		.loc 1 1198 0
 733 01ac 5FE7     		b	.L33
 734              	.LVL98:
 735              	.L47:
1203:TP2824/TP2802.c ****         printf("4M15");
 736              		.loc 1 1203 0
 737 01ae 0125     		movs	r5, #1
 738 01b0 324B     		ldr	r3, .L69+4
 739 01b2 1D70     		strb	r5, [r3]
1204:TP2824/TP2802.c ****         break;
 740              		.loc 1 1204 0
 741 01b4 4148     		ldr	r0, .L69+68
 742              	.LVL99:
 743 01b6 FFF7FEFF 		bl	printf
 744              	.LVL100:
1201:TP2824/TP2802.c ****         sys=1;//V1
 745              		.loc 1 1201 0
 746 01ba 0D24     		movs	r4, #13
1205:TP2824/TP2802.c **** 
 747              		.loc 1 1205 0
 748 01bc 57E7     		b	.L33
 749              	.LVL101:
 750              	.L48:
1210:TP2824/TP2802.c ****         printf("3M20");
 751              		.loc 1 1210 0
 752 01be 0125     		movs	r5, #1
 753 01c0 2E4B     		ldr	r3, .L69+4
 754 01c2 1D70     		strb	r5, [r3]
1211:TP2824/TP2802.c ****         break;
 755              		.loc 1 1211 0
 756 01c4 3E48     		ldr	r0, .L69+72
 757              	.LVL102:
 758 01c6 FFF7FEFF 		bl	printf
ARM GAS  /tmp/ccSTfybG.s 			page 44


 759              	.LVL103:
1208:TP2824/TP2802.c ****         sys=1;//V1
 760              		.loc 1 1208 0
 761 01ca 0E24     		movs	r4, #14
1212:TP2824/TP2802.c **** 
 762              		.loc 1 1212 0
 763 01cc 4FE7     		b	.L33
 764              	.LVL104:
 765              	.L49:
1217:TP2824/TP2802.c ****         printf("4M12");
 766              		.loc 1 1217 0
 767 01ce 0125     		movs	r5, #1
 768 01d0 2A4B     		ldr	r3, .L69+4
 769 01d2 1D70     		strb	r5, [r3]
1218:TP2824/TP2802.c ****         break;
 770              		.loc 1 1218 0
 771 01d4 3B48     		ldr	r0, .L69+76
 772              	.LVL105:
 773 01d6 FFF7FEFF 		bl	printf
 774              	.LVL106:
1215:TP2824/TP2802.c ****         sys=1;//V1
 775              		.loc 1 1215 0
 776 01da 0F24     		movs	r4, #15
1219:TP2824/TP2802.c **** 
 777              		.loc 1 1219 0
 778 01dc 47E7     		b	.L33
 779              	.LVL107:
 780              	.L50:
1224:TP2824/TP2802.c ****         printf("6M10");
 781              		.loc 1 1224 0
 782 01de 0125     		movs	r5, #1
 783 01e0 264B     		ldr	r3, .L69+4
 784 01e2 1D70     		strb	r5, [r3]
1225:TP2824/TP2802.c ****         break;
 785              		.loc 1 1225 0
 786 01e4 3848     		ldr	r0, .L69+80
 787              	.LVL108:
 788 01e6 FFF7FEFF 		bl	printf
 789              	.LVL109:
1222:TP2824/TP2802.c ****         sys=1;//V1
 790              		.loc 1 1222 0
 791 01ea 1024     		movs	r4, #16
1226:TP2824/TP2802.c **** 
 792              		.loc 1 1226 0
 793 01ec 3FE7     		b	.L33
 794              	.LVL110:
 795              	.L51:
1231:TP2824/TP2802.c ****         printf("4M30");
 796              		.loc 1 1231 0
 797 01ee 234B     		ldr	r3, .L69+4
 798 01f0 0022     		movs	r2, #0
 799 01f2 1A70     		strb	r2, [r3]
1232:TP2824/TP2802.c ****         break;
 800              		.loc 1 1232 0
 801 01f4 3548     		ldr	r0, .L69+84
 802              	.LVL111:
 803 01f6 FFF7FEFF 		bl	printf
ARM GAS  /tmp/ccSTfybG.s 			page 45


 804              	.LVL112:
1230:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 805              		.loc 1 1230 0
 806 01fa 0125     		movs	r5, #1
1229:TP2824/TP2802.c ****         sys=1;//V1
 807              		.loc 1 1229 0
 808 01fc 1124     		movs	r4, #17
1233:TP2824/TP2802.c **** 
 809              		.loc 1 1233 0
 810 01fe 36E7     		b	.L33
 811              	.LVL113:
 812              	.L60:
1112:TP2824/TP2802.c ****     //printf("Set_VidRes");
 813              		.loc 1 1112 0
 814 0200 0125     		movs	r5, #1
1236:TP2824/TP2802.c ****         break;
 815              		.loc 1 1236 0
 816 0202 2C46     		mov	r4, r5
 817 0204 33E7     		b	.L33
 818              	.LVL114:
 819              	.L62:
1246:TP2824/TP2802.c **** }
 820              		.loc 1 1246 0
 821 0206 CE21     		movs	r1, #206
 822 0208 1620     		movs	r0, #22
 823 020a FFF7FEFF 		bl	tp28xx_byte_write
 824              	.LVL115:
 825 020e 3EE7     		b	.L52
 826              	.L63:
1251:TP2824/TP2802.c ****     }
 827              		.loc 1 1251 0
 828 0210 2F48     		ldr	r0, .L69+88
 829 0212 05EBC503 		add	r3, r5, r5, lsl #3
 830 0216 5900     		lsls	r1, r3, #1
 831 0218 0144     		add	r1, r1, r0
 832 021a FFF7FEFF 		bl	I2CDeviceSet2
 833              	.LVL116:
 834 021e 41E7     		b	.L54
 835              	.L64:
1255:TP2824/TP2802.c ****     }
 836              		.loc 1 1255 0
 837 0220 2C48     		ldr	r0, .L69+92
 838 0222 C5EBC503 		rsb	r3, r5, r5, lsl #3
 839 0226 5900     		lsls	r1, r3, #1
 840 0228 0144     		add	r1, r1, r0
 841 022a FFF7FEFF 		bl	I2CDeviceSet2
 842              	.LVL117:
 843 022e 39E7     		b	.L54
 844              	.L65:
1259:TP2824/TP2802.c ****     }
 845              		.loc 1 1259 0
 846 0230 2948     		ldr	r0, .L69+96
 847 0232 05EB4501 		add	r1, r5, r5, lsl #1
 848 0236 05EB8101 		add	r1, r5, r1, lsl #2
 849 023a 0144     		add	r1, r1, r0
 850 023c FFF7FEFF 		bl	I2CDeviceSet2
 851              	.LVL118:
ARM GAS  /tmp/ccSTfybG.s 			page 46


 852 0240 30E7     		b	.L54
 853              	.L66:
1263:TP2824/TP2802.c ****         I2CDeviceSet2( TP2826_MODE_DataSet[0],TP2826_MODE_DataSet[sys] );
 854              		.loc 1 1263 0
 855 0242 2648     		ldr	r0, .L69+100
 856 0244 FFF7FEFF 		bl	puts
 857              	.LVL119:
1264:TP2824/TP2802.c ****     }
 858              		.loc 1 1264 0
 859 0248 2548     		ldr	r0, .L69+104
 860 024a 05EB8503 		add	r3, r5, r5, lsl #2
 861 024e 9900     		lsls	r1, r3, #2
 862 0250 0144     		add	r1, r1, r0
 863 0252 FFF7FEFF 		bl	I2CDeviceSet2
 864              	.LVL120:
 865 0256 2AE7     		b	.L56
 866              	.L67:
1268:TP2824/TP2802.c ****         I2CDeviceSet2( TP2824C_MODE_DataSet[0],TP2824C_MODE_DataSet[sys] );
 867              		.loc 1 1268 0
 868 0258 2248     		ldr	r0, .L69+108
 869 025a FFF7FEFF 		bl	puts
 870              	.LVL121:
1269:TP2824/TP2802.c ****     }
 871              		.loc 1 1269 0
 872 025e 2248     		ldr	r0, .L69+112
 873 0260 05EB4501 		add	r1, r5, r5, lsl #1
 874 0264 C5EBC101 		rsb	r1, r5, r1, lsl #3
 875 0268 0144     		add	r1, r1, r0
 876 026a FFF7FEFF 		bl	I2CDeviceSet2
 877              	.LVL122:
 878 026e 23E7     		b	.L57
 879              	.L68:
1273:TP2824/TP2802.c ****     else
 880              		.loc 1 1273 0
 881 0270 3046     		mov	r0, r6
 882 0272 FFF7FEFF 		bl	tp28xx_SYSCLK_V1
 883              	.LVL123:
 884 0276 25E7     		b	.L59
 885              	.L70:
 886              		.align	2
 887              	.L69:
 888 0278 00000000 		.word	mode
 889 027c 00000000 		.word	ManVidResRx
 890 0280 00000000 		.word	.LC0
 891 0284 8C000000 		.word	.LC17
 892 0288 00000000 		.word	.LANCHOR2
 893 028c 00000000 		.word	chip
 894 0290 08000000 		.word	.LC1
 895 0294 10000000 		.word	.LC2
 896 0298 18000000 		.word	.LC3
 897 029c 24000000 		.word	.LC4
 898 02a0 2C000000 		.word	.LC5
 899 02a4 38000000 		.word	.LC6
 900 02a8 40000000 		.word	.LC7
 901 02ac 48000000 		.word	.LC8
 902 02b0 4C000000 		.word	.LC9
 903 02b4 54000000 		.word	.LC10
ARM GAS  /tmp/ccSTfybG.s 			page 47


 904 02b8 5C000000 		.word	.LC11
 905 02bc 64000000 		.word	.LC12
 906 02c0 6C000000 		.word	.LC13
 907 02c4 74000000 		.word	.LC14
 908 02c8 7C000000 		.word	.LC15
 909 02cc 84000000 		.word	.LC16
 910 02d0 00000000 		.word	.LANCHOR3
 911 02d4 00000000 		.word	.LANCHOR4
 912 02d8 00000000 		.word	.LANCHOR5
 913 02dc 94000000 		.word	.LC18
 914 02e0 00000000 		.word	.LANCHOR6
 915 02e4 A8000000 		.word	.LC19
 916 02e8 00000000 		.word	.LANCHOR7
 917              		.cfi_endproc
 918              	.LFE73:
 920              		.section	.text.Set_HDA,"ax",%progbits
 921              		.align	1
 922              		.global	Set_HDA
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 926              		.fpu softvfp
 928              	Set_HDA:
 929              	.LFB74:
1294:TP2824/TP2802.c **** 
 930              		.loc 1 1294 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934              	.LVL124:
 935 0000 10B5     		push	{r4, lr}
 936              	.LCFI9:
 937              		.cfi_def_cfa_offset 8
 938              		.cfi_offset 4, -8
 939              		.cfi_offset 14, -4
 940              	.LVL125:
1299:TP2824/TP2802.c ****     {
 941              		.loc 1 1299 0
 942 0002 234B     		ldr	r3, .L89
 943 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 944 0006 0D2B     		cmp	r3, #13
 945 0008 3FD8     		bhi	.L82
 946 000a DFE803F0 		tbb	[pc, r3]
 947              	.L74:
 948 000e 0D       		.byte	(.L83-.L74)/2
 949 000f 07       		.byte	(.L75-.L74)/2
 950 0010 0B       		.byte	(.L76-.L74)/2
 951 0011 09       		.byte	(.L77-.L74)/2
 952 0012 3E       		.byte	(.L82-.L74)/2
 953 0013 3E       		.byte	(.L82-.L74)/2
 954 0014 3E       		.byte	(.L82-.L74)/2
 955 0015 3E       		.byte	(.L82-.L74)/2
 956 0016 3E       		.byte	(.L82-.L74)/2
 957 0017 3E       		.byte	(.L82-.L74)/2
 958 0018 3E       		.byte	(.L82-.L74)/2
 959 0019 3E       		.byte	(.L82-.L74)/2
 960 001a 0D       		.byte	(.L83-.L74)/2
ARM GAS  /tmp/ccSTfybG.s 			page 48


 961 001b 07       		.byte	(.L75-.L74)/2
 962              		.p2align 1
 963              	.L75:
1316:TP2824/TP2802.c ****         break;
 964              		.loc 1 1316 0
 965 001c 0224     		movs	r4, #2
 966 001e 04E0     		b	.L73
 967              	.L77:
 968              	.LVL126:
1306:TP2824/TP2802.c ****         break;
 969              		.loc 1 1306 0
 970 0020 0424     		movs	r4, #4
 971 0022 02E0     		b	.L73
 972              	.LVL127:
 973              	.L76:
1302:TP2824/TP2802.c ****         break;
 974              		.loc 1 1302 0
 975 0024 0324     		movs	r4, #3
 976 0026 00E0     		b	.L73
 977              	.LVL128:
 978              	.L83:
1311:TP2824/TP2802.c ****         break;
 979              		.loc 1 1311 0
 980 0028 0124     		movs	r4, #1
 981              	.LVL129:
 982              	.L73:
1321:TP2824/TP2802.c **** 
 983              		.loc 1 1321 0
 984 002a FFF7FEFF 		bl	Set_VidRes
 985              	.LVL130:
1323:TP2824/TP2802.c ****         {
 986              		.loc 1 1323 0
 987 002e 194B     		ldr	r3, .L89+4
 988 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 989 0032 262B     		cmp	r3, #38
 990 0034 0DD0     		beq	.L85
1327:TP2824/TP2802.c ****         {
 991              		.loc 1 1327 0
 992 0036 A3F12402 		sub	r2, r3, #36
 993 003a D2B2     		uxtb	r2, r2
 994 003c 012A     		cmp	r2, #1
 995 003e 10D9     		bls	.L86
1331:TP2824/TP2802.c ****         {
 996              		.loc 1 1331 0
 997 0040 2F2B     		cmp	r3, #47
 998 0042 14D0     		beq	.L87
1335:TP2824/TP2802.c ****         {
 999              		.loc 1 1335 0
 1000 0044 272B     		cmp	r3, #39
 1001 0046 1AD0     		beq	.L88
 1002              	.L79:
1343:TP2824/TP2802.c ****         tmp |= 0x40;
 1003              		.loc 1 1343 0
 1004 0048 1420     		movs	r0, #20
 1005 004a FFF7FEFF 		bl	tp28xx_byte_read
 1006              	.LVL131:
 1007              	.L72:
ARM GAS  /tmp/ccSTfybG.s 			page 49


1354:TP2824/TP2802.c **** 
 1008              		.loc 1 1354 0
 1009 004e 2046     		mov	r0, r4
 1010 0050 10BD     		pop	{r4, pc}
 1011              	.L85:
1325:TP2824/TP2802.c ****         }
 1012              		.loc 1 1325 0
 1013 0052 1148     		ldr	r0, .L89+8
 1014 0054 04EB8403 		add	r3, r4, r4, lsl #2
 1015 0058 5900     		lsls	r1, r3, #1
 1016 005a 0144     		add	r1, r1, r0
 1017 005c FFF7FEFF 		bl	I2CDeviceSet2
 1018              	.LVL132:
 1019 0060 F2E7     		b	.L79
 1020              	.L86:
1329:TP2824/TP2802.c ****         }
 1021              		.loc 1 1329 0
 1022 0062 0E48     		ldr	r0, .L89+12
 1023 0064 00EBC401 		add	r1, r0, r4, lsl #3
 1024 0068 FFF7FEFF 		bl	I2CDeviceSet2
 1025              	.LVL133:
 1026 006c ECE7     		b	.L79
 1027              	.L87:
1333:TP2824/TP2802.c ****         }
 1028              		.loc 1 1333 0
 1029 006e 0C48     		ldr	r0, .L89+16
 1030 0070 04EB4403 		add	r3, r4, r4, lsl #1
 1031 0074 9900     		lsls	r1, r3, #2
 1032 0076 0144     		add	r1, r1, r0
 1033 0078 FFF7FEFF 		bl	I2CDeviceSet2
 1034              	.LVL134:
 1035 007c E4E7     		b	.L79
 1036              	.L88:
1337:TP2824/TP2802.c **** 
 1037              		.loc 1 1337 0
 1038 007e 0948     		ldr	r0, .L89+20
 1039 0080 00EB0411 		add	r1, r0, r4, lsl #4
 1040 0084 FFF7FEFF 		bl	I2CDeviceSet2
 1041              	.LVL135:
 1042 0088 DEE7     		b	.L79
 1043              	.LVL136:
 1044              	.L82:
1297:TP2824/TP2802.c **** 
 1045              		.loc 1 1297 0
 1046 008a 0024     		movs	r4, #0
 1047 008c DFE7     		b	.L72
 1048              	.L90:
 1049 008e 00BF     		.align	2
 1050              	.L89:
 1051 0090 00000000 		.word	mode
 1052 0094 00000000 		.word	chip
 1053 0098 00000000 		.word	.LANCHOR8
 1054 009c 00000000 		.word	.LANCHOR9
 1055 00a0 00000000 		.word	.LANCHOR10
 1056 00a4 00000000 		.word	.LANCHOR11
 1057              		.cfi_endproc
 1058              	.LFE74:
ARM GAS  /tmp/ccSTfybG.s 			page 50


 1060              		.section	.text.Set_HDC,"ax",%progbits
 1061              		.align	1
 1062              		.global	Set_HDC
 1063              		.syntax unified
 1064              		.thumb
 1065              		.thumb_func
 1066              		.fpu softvfp
 1068              	Set_HDC:
 1069              	.LFB75:
1357:TP2824/TP2802.c **** 
 1070              		.loc 1 1357 0
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 0
 1073              		@ frame_needed = 0, uses_anonymous_args = 0
 1074              	.LVL137:
 1075 0000 10B5     		push	{r4, lr}
 1076              	.LCFI10:
 1077              		.cfi_def_cfa_offset 8
 1078              		.cfi_offset 4, -8
 1079              		.cfi_offset 14, -4
 1080              	.LVL138:
1363:TP2824/TP2802.c ****     {
 1081              		.loc 1 1363 0
 1082 0002 264B     		ldr	r3, .L109
 1083 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 1084 0006 0D2B     		cmp	r3, #13
 1085 0008 46D8     		bhi	.L102
 1086 000a DFE803F0 		tbb	[pc, r3]
 1087              	.L94:
 1088 000e 0D       		.byte	(.L103-.L94)/2
 1089 000f 07       		.byte	(.L95-.L94)/2
 1090 0010 0B       		.byte	(.L96-.L94)/2
 1091 0011 09       		.byte	(.L97-.L94)/2
 1092 0012 45       		.byte	(.L102-.L94)/2
 1093 0013 45       		.byte	(.L102-.L94)/2
 1094 0014 45       		.byte	(.L102-.L94)/2
 1095 0015 45       		.byte	(.L102-.L94)/2
 1096 0016 45       		.byte	(.L102-.L94)/2
 1097 0017 45       		.byte	(.L102-.L94)/2
 1098 0018 45       		.byte	(.L102-.L94)/2
 1099 0019 45       		.byte	(.L102-.L94)/2
 1100 001a 0D       		.byte	(.L103-.L94)/2
 1101 001b 07       		.byte	(.L95-.L94)/2
 1102              		.p2align 1
 1103              	.L95:
1381:TP2824/TP2802.c ****         break;
 1104              		.loc 1 1381 0
 1105 001c 0224     		movs	r4, #2
 1106 001e 04E0     		b	.L93
 1107              	.L97:
 1108              	.LVL139:
1371:TP2824/TP2802.c ****         break;
 1109              		.loc 1 1371 0
 1110 0020 0424     		movs	r4, #4
 1111 0022 02E0     		b	.L93
 1112              	.LVL140:
 1113              	.L96:
ARM GAS  /tmp/ccSTfybG.s 			page 51


1367:TP2824/TP2802.c ****         break;
 1114              		.loc 1 1367 0
 1115 0024 0324     		movs	r4, #3
 1116 0026 00E0     		b	.L93
 1117              	.LVL141:
 1118              	.L103:
1376:TP2824/TP2802.c ****         break;
 1119              		.loc 1 1376 0
 1120 0028 0124     		movs	r4, #1
 1121              	.LVL142:
 1122              	.L93:
1386:TP2824/TP2802.c **** 
 1123              		.loc 1 1386 0
 1124 002a FFF7FEFF 		bl	Set_VidRes
 1125              	.LVL143:
1388:TP2824/TP2802.c ****         {
 1126              		.loc 1 1388 0
 1127 002e 1C4B     		ldr	r3, .L109+4
 1128 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1129 0032 262B     		cmp	r3, #38
 1130 0034 0ED0     		beq	.L105
1392:TP2824/TP2802.c ****         {
 1131              		.loc 1 1392 0
 1132 0036 A3F12402 		sub	r2, r3, #36
 1133 003a D2B2     		uxtb	r2, r2
 1134 003c 012A     		cmp	r2, #1
 1135 003e 12D9     		bls	.L106
1396:TP2824/TP2802.c ****         {
 1136              		.loc 1 1396 0
 1137 0040 2F2B     		cmp	r3, #47
 1138 0042 19D0     		beq	.L107
1400:TP2824/TP2802.c ****         {
 1139              		.loc 1 1400 0
 1140 0044 272B     		cmp	r3, #39
 1141 0046 1FD0     		beq	.L108
 1142              	.L99:
1404:TP2824/TP2802.c ****     }
 1143              		.loc 1 1404 0
 1144 0048 4021     		movs	r1, #64
 1145 004a 1320     		movs	r0, #19
 1146 004c FFF7FEFF 		bl	tp28xx_byte_write
 1147              	.LVL144:
 1148              	.L92:
1407:TP2824/TP2802.c **** 
 1149              		.loc 1 1407 0
 1150 0050 2046     		mov	r0, r4
 1151 0052 10BD     		pop	{r4, pc}
 1152              	.L105:
1390:TP2824/TP2802.c ****         }
 1153              		.loc 1 1390 0
 1154 0054 1348     		ldr	r0, .L109+8
 1155 0056 04EB4401 		add	r1, r4, r4, lsl #1
 1156 005a 04EB8101 		add	r1, r4, r1, lsl #2
 1157 005e 0144     		add	r1, r1, r0
 1158 0060 FFF7FEFF 		bl	I2CDeviceSet2
 1159              	.LVL145:
 1160 0064 F0E7     		b	.L99
ARM GAS  /tmp/ccSTfybG.s 			page 52


 1161              	.L106:
1394:TP2824/TP2802.c ****         }
 1162              		.loc 1 1394 0
 1163 0066 0F48     		ldr	r0, .L109+8
 1164 0068 04EB4401 		add	r1, r4, r4, lsl #1
 1165 006c 04EB8101 		add	r1, r4, r1, lsl #2
 1166 0070 0144     		add	r1, r1, r0
 1167 0072 FFF7FEFF 		bl	I2CDeviceSet2
 1168              	.LVL146:
 1169 0076 E7E7     		b	.L99
 1170              	.L107:
1398:TP2824/TP2802.c ****         }
 1171              		.loc 1 1398 0
 1172 0078 0B48     		ldr	r0, .L109+12
 1173 007a 04EB8403 		add	r3, r4, r4, lsl #2
 1174 007e 9900     		lsls	r1, r3, #2
 1175 0080 0144     		add	r1, r1, r0
 1176 0082 FFF7FEFF 		bl	I2CDeviceSet2
 1177              	.LVL147:
 1178 0086 DFE7     		b	.L99
 1179              	.L108:
1402:TP2824/TP2802.c ****         }
 1180              		.loc 1 1402 0
 1181 0088 0848     		ldr	r0, .L109+16
 1182 008a 04EB8403 		add	r3, r4, r4, lsl #2
 1183 008e 9900     		lsls	r1, r3, #2
 1184 0090 0144     		add	r1, r1, r0
 1185 0092 FFF7FEFF 		bl	I2CDeviceSet2
 1186              	.LVL148:
 1187 0096 D7E7     		b	.L99
 1188              	.LVL149:
 1189              	.L102:
1361:TP2824/TP2802.c **** 
 1190              		.loc 1 1361 0
 1191 0098 0024     		movs	r4, #0
 1192 009a D9E7     		b	.L92
 1193              	.L110:
 1194              		.align	2
 1195              	.L109:
 1196 009c 00000000 		.word	mode
 1197 00a0 00000000 		.word	chip
 1198 00a4 00000000 		.word	.LANCHOR12
 1199 00a8 00000000 		.word	.LANCHOR13
 1200 00ac 00000000 		.word	.LANCHOR14
 1201              		.cfi_endproc
 1202              	.LFE75:
 1204              		.section	.text.Det_VidRes,"ax",%progbits
 1205              		.align	1
 1206              		.global	Det_VidRes
 1207              		.syntax unified
 1208              		.thumb
 1209              		.thumb_func
 1210              		.fpu softvfp
 1212              	Det_VidRes:
 1213              	.LFB76:
1410:TP2824/TP2802.c ****     tByte CVSTD;
 1214              		.loc 1 1410 0
ARM GAS  /tmp/ccSTfybG.s 			page 53


 1215              		.cfi_startproc
 1216              		@ args = 0, pretend = 0, frame = 0
 1217              		@ frame_needed = 0, uses_anonymous_args = 0
 1218 0000 10B5     		push	{r4, lr}
 1219              	.LCFI11:
 1220              		.cfi_def_cfa_offset 8
 1221              		.cfi_offset 4, -8
 1222              		.cfi_offset 14, -4
1414:TP2824/TP2802.c **** 
 1223              		.loc 1 1414 0
 1224 0002 0320     		movs	r0, #3
 1225 0004 FFF7FEFF 		bl	tp28xx_byte_read
 1226              	.LVL150:
 1227 0008 00F00704 		and	r4, r0, #7
 1228              	.LVL151:
1416:TP2824/TP2802.c ****     {
 1229              		.loc 1 1416 0
 1230 000c 052C     		cmp	r4, #5
 1231 000e 01D8     		bhi	.L117
 1232              	.LVL152:
 1233              	.L113:
1449:TP2824/TP2802.c **** tByte Det_VideoLoss(tByte ch)
 1234              		.loc 1 1449 0
 1235 0010 2046     		mov	r0, r4
 1236 0012 10BD     		pop	{r4, pc}
 1237              	.LVL153:
 1238              	.L117:
1416:TP2824/TP2802.c ****     {
 1239              		.loc 1 1416 0
 1240 0014 062C     		cmp	r4, #6
 1241 0016 03D1     		bne	.L115
1438:TP2824/TP2802.c ****         RES = NTPAL;
 1242              		.loc 1 1438 0
 1243 0018 0448     		ldr	r0, .L118
 1244 001a FFF7FEFF 		bl	printf
 1245              	.LVL154:
1440:TP2824/TP2802.c ****     default:
 1246              		.loc 1 1440 0
 1247 001e F7E7     		b	.L113
 1248              	.LVL155:
 1249              	.L115:
1442:TP2824/TP2802.c ****         RES = NoDet;
 1250              		.loc 1 1442 0
 1251 0020 0348     		ldr	r0, .L118+4
 1252 0022 FFF7FEFF 		bl	printf
 1253              	.LVL156:
1443:TP2824/TP2802.c ****         break;
 1254              		.loc 1 1443 0
 1255 0026 0724     		movs	r4, #7
 1256              	.LVL157:
1444:TP2824/TP2802.c ****     }
 1257              		.loc 1 1444 0
 1258 0028 F2E7     		b	.L113
 1259              	.L119:
 1260 002a 00BF     		.align	2
 1261              	.L118:
 1262 002c 00000000 		.word	.LC20
ARM GAS  /tmp/ccSTfybG.s 			page 54


 1263 0030 10000000 		.word	.LC21
 1264              		.cfi_endproc
 1265              	.LFE76:
 1267              		.section	.text.Det_VideoLoss,"ax",%progbits
 1268              		.align	1
 1269              		.global	Det_VideoLoss
 1270              		.syntax unified
 1271              		.thumb
 1272              		.thumb_func
 1273              		.fpu softvfp
 1275              	Det_VideoLoss:
 1276              	.LFB77:
1451:TP2824/TP2802.c **** 
 1277              		.loc 1 1451 0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 0
 1280              		@ frame_needed = 0, uses_anonymous_args = 0
 1281              	.LVL158:
 1282 0000 10B5     		push	{r4, lr}
 1283              	.LCFI12:
 1284              		.cfi_def_cfa_offset 8
 1285              		.cfi_offset 4, -8
 1286              		.cfi_offset 14, -4
1455:TP2824/TP2802.c ****     VDLOSS = tp28xx_byte_read(0x01);
 1287              		.loc 1 1455 0
 1288 0002 00F00301 		and	r1, r0, #3
 1289 0006 4020     		movs	r0, #64
 1290              	.LVL159:
 1291 0008 FFF7FEFF 		bl	tp28xx_byte_write
 1292              	.LVL160:
1456:TP2824/TP2802.c **** //	printf("video status 0x%02x on ch%01x\r\n",(tWord)VDLOSS,(tWord)ch);
 1293              		.loc 1 1456 0
 1294 000c 0120     		movs	r0, #1
 1295 000e FFF7FEFF 		bl	tp28xx_byte_read
 1296              	.LVL161:
1459:TP2824/TP2802.c **** 
 1297              		.loc 1 1459 0
 1298 0012 0446     		mov	r4, r0
 1299 0014 28B9     		cbnz	r0, .L123
 1300              	.LVL162:
 1301              	.L121:
1461:TP2824/TP2802.c **** 
 1302              		.loc 1 1461 0
 1303 0016 0548     		ldr	r0, .L124
 1304 0018 FFF7FEFF 		bl	printf
 1305              	.LVL163:
1466:TP2824/TP2802.c **** 
 1306              		.loc 1 1466 0
 1307 001c C4F3C710 		ubfx	r0, r4, #7, #8
 1308 0020 10BD     		pop	{r4, pc}
 1309              	.LVL164:
 1310              	.L123:
1459:TP2824/TP2802.c **** 
 1311              		.loc 1 1459 0 discriminator 1
 1312 0022 0348     		ldr	r0, .L124+4
 1313              	.LVL165:
 1314 0024 FFF7FEFF 		bl	printf
ARM GAS  /tmp/ccSTfybG.s 			page 55


 1315              	.LVL166:
 1316 0028 F5E7     		b	.L121
 1317              	.L125:
 1318 002a 00BF     		.align	2
 1319              	.L124:
 1320 002c 04000000 		.word	.LC23
 1321 0030 00000000 		.word	.LC22
 1322              		.cfi_endproc
 1323              	.LFE77:
 1325              		.section	.text.ManualAGC,"ax",%progbits
 1326              		.align	1
 1327              		.global	ManualAGC
 1328              		.syntax unified
 1329              		.thumb
 1330              		.thumb_func
 1331              		.fpu softvfp
 1333              	ManualAGC:
 1334              	.LFB78:
1469:TP2824/TP2802.c ****     unsigned int agc;
 1335              		.loc 1 1469 0
 1336              		.cfi_startproc
 1337              		@ args = 0, pretend = 0, frame = 0
 1338              		@ frame_needed = 0, uses_anonymous_args = 0
 1339              	.LVL167:
 1340 0000 38B5     		push	{r3, r4, r5, lr}
 1341              	.LCFI13:
 1342              		.cfi_def_cfa_offset 16
 1343              		.cfi_offset 3, -16
 1344              		.cfi_offset 4, -12
 1345              		.cfi_offset 5, -8
 1346              		.cfi_offset 14, -4
 1347 0002 0546     		mov	r5, r0
1474:TP2824/TP2802.c ****     agc = tp28xx_byte_read(0x04);
 1348              		.loc 1 1474 0
 1349 0004 0221     		movs	r1, #2
 1350 0006 2F20     		movs	r0, #47
 1351              	.LVL168:
 1352 0008 FFF7FEFF 		bl	tp28xx_byte_write
 1353              	.LVL169:
1475:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
 1354              		.loc 1 1475 0
 1355 000c 0420     		movs	r0, #4
 1356 000e FFF7FEFF 		bl	tp28xx_byte_read
 1357              	.LVL170:
 1358 0012 0446     		mov	r4, r0
 1359              	.LVL171:
1476:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
 1360              		.loc 1 1476 0
 1361 0014 0420     		movs	r0, #4
 1362              	.LVL172:
 1363 0016 FFF7FEFF 		bl	tp28xx_byte_read
 1364              	.LVL173:
 1365 001a 0444     		add	r4, r4, r0
 1366              	.LVL174:
1477:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
 1367              		.loc 1 1477 0
 1368 001c 0420     		movs	r0, #4
ARM GAS  /tmp/ccSTfybG.s 			page 56


 1369 001e FFF7FEFF 		bl	tp28xx_byte_read
 1370              	.LVL175:
 1371 0022 0444     		add	r4, r4, r0
 1372              	.LVL176:
1478:TP2824/TP2802.c ****     agc &= 0x3f0;
 1373              		.loc 1 1478 0
 1374 0024 0420     		movs	r0, #4
 1375 0026 FFF7FEFF 		bl	tp28xx_byte_read
 1376              	.LVL177:
 1377 002a 0444     		add	r4, r4, r0
 1378              	.LVL178:
 1379 002c 6408     		lsrs	r4, r4, #1
 1380              	.LVL179:
1480:TP2824/TP2802.c ****     if(agc > 0x1ff) agc = 0x1ff;
 1381              		.loc 1 1480 0
 1382 002e 04F4FC74 		and	r4, r4, #504
 1383              	.LVL180:
1483:TP2824/TP2802.c ****     tp28xx_byte_write(0x08, agc&0xff);
 1384              		.loc 1 1483 0
 1385 0032 2A46     		mov	r2, r5
 1386 0034 2146     		mov	r1, r4
 1387 0036 0B48     		ldr	r0, .L130
 1388 0038 FFF7FEFF 		bl	printf
 1389              	.LVL181:
1484:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x06);
 1390              		.loc 1 1484 0
 1391 003c 04F0F801 		and	r1, r4, #248
 1392 0040 0820     		movs	r0, #8
 1393 0042 FFF7FEFF 		bl	tp28xx_byte_write
 1394              	.LVL182:
1485:TP2824/TP2802.c ****     tmp &=0xf9;
 1395              		.loc 1 1485 0
 1396 0046 0620     		movs	r0, #6
 1397 0048 FFF7FEFF 		bl	tp28xx_byte_read
 1398              	.LVL183:
1486:TP2824/TP2802.c ****     tmp |=(agc>>7)&0x02;
 1399              		.loc 1 1486 0
 1400 004c 00F0F900 		and	r0, r0, #249
 1401              	.LVL184:
1487:TP2824/TP2802.c ****     tmp |=0x04;
 1402              		.loc 1 1487 0
 1403 0050 E109     		lsrs	r1, r4, #7
 1404 0052 01F00201 		and	r1, r1, #2
 1405 0056 0143     		orrs	r1, r1, r0
 1406              	.LVL185:
1489:TP2824/TP2802.c ****     
 1407              		.loc 1 1489 0
 1408 0058 41F00401 		orr	r1, r1, #4
 1409              	.LVL186:
 1410 005c 0620     		movs	r0, #6
 1411              	.LVL187:
 1412 005e FFF7FEFF 		bl	tp28xx_byte_write
 1413              	.LVL188:
1503:TP2824/TP2802.c **** 
 1414              		.loc 1 1503 0
 1415 0062 38BD     		pop	{r3, r4, r5, pc}
 1416              	.LVL189:
ARM GAS  /tmp/ccSTfybG.s 			page 57


 1417              	.L131:
 1418              		.align	2
 1419              	.L130:
 1420 0064 00000000 		.word	.LC24
 1421              		.cfi_endproc
 1422              	.LFE78:
 1424              		.section	.text.ReadGain,"ax",%progbits
 1425              		.align	1
 1426              		.global	ReadGain
 1427              		.syntax unified
 1428              		.thumb
 1429              		.thumb_func
 1430              		.fpu softvfp
 1432              	ReadGain:
 1433              	.LFB82:
1597:TP2824/TP2802.c **** ////////////////////////////////////////
1598:TP2824/TP2802.c **** tByte ReadGain(void)
1599:TP2824/TP2802.c **** {
 1434              		.loc 1 1599 0
 1435              		.cfi_startproc
 1436              		@ args = 0, pretend = 0, frame = 0
 1437              		@ frame_needed = 0, uses_anonymous_args = 0
 1438 0000 08B5     		push	{r3, lr}
 1439              	.LCFI14:
 1440              		.cfi_def_cfa_offset 8
 1441              		.cfi_offset 3, -8
 1442              		.cfi_offset 14, -4
1600:TP2824/TP2802.c ****     tp28xx_byte_write(0x2f, 0x00);
 1443              		.loc 1 1600 0
 1444 0002 0021     		movs	r1, #0
 1445 0004 2F20     		movs	r0, #47
 1446 0006 FFF7FEFF 		bl	tp28xx_byte_write
 1447              	.LVL190:
1601:TP2824/TP2802.c ****     return tp28xx_byte_read(0x04);
 1448              		.loc 1 1601 0
 1449 000a 0420     		movs	r0, #4
 1450 000c FFF7FEFF 		bl	tp28xx_byte_read
 1451              	.LVL191:
1602:TP2824/TP2802.c **** }
 1452              		.loc 1 1602 0
 1453 0010 08BD     		pop	{r3, pc}
 1454              		.cfi_endproc
 1455              	.LFE82:
 1457              		.section	.text.SetCGain,"ax",%progbits
 1458              		.align	1
 1459              		.global	SetCGain
 1460              		.syntax unified
 1461              		.thumb
 1462              		.thumb_func
 1463              		.fpu softvfp
 1465              	SetCGain:
 1466              	.LFB83:
1603:TP2824/TP2802.c **** ////////////////////////////////////////
1604:TP2824/TP2802.c **** void SetCGain(unsigned char CGAIN_STD)
1605:TP2824/TP2802.c **** {
 1467              		.loc 1 1605 0
 1468              		.cfi_startproc
ARM GAS  /tmp/ccSTfybG.s 			page 58


 1469              		@ args = 0, pretend = 0, frame = 0
 1470              		@ frame_needed = 0, uses_anonymous_args = 0
 1471              	.LVL192:
 1472 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1473              	.LCFI15:
 1474              		.cfi_def_cfa_offset 24
 1475              		.cfi_offset 3, -24
 1476              		.cfi_offset 4, -20
 1477              		.cfi_offset 5, -16
 1478              		.cfi_offset 6, -12
 1479              		.cfi_offset 7, -8
 1480              		.cfi_offset 14, -4
 1481 0002 0646     		mov	r6, r0
 1482              	.LVL193:
1606:TP2824/TP2802.c ****     unsigned char tmp, cgain;
1607:TP2824/TP2802.c ****     unsigned char retry = 30;
1608:TP2824/TP2802.c **** 
1609:TP2824/TP2802.c ****     tp28xx_byte_write(0x2f, 0x06);
 1483              		.loc 1 1609 0
 1484 0004 0621     		movs	r1, #6
 1485 0006 2F20     		movs	r0, #47
 1486              	.LVL194:
 1487 0008 FFF7FEFF 		bl	tp28xx_byte_write
 1488              	.LVL195:
1610:TP2824/TP2802.c ****     cgain = tp28xx_byte_read(0x04);
 1489              		.loc 1 1610 0
 1490 000c 0420     		movs	r0, #4
 1491 000e FFF7FEFF 		bl	tp28xx_byte_read
 1492              	.LVL196:
1611:TP2824/TP2802.c **** 
1612:TP2824/TP2802.c ****     if(cgain < CGAIN_STD )
 1493              		.loc 1 1612 0
 1494 0012 B042     		cmp	r0, r6
 1495 0014 43D2     		bcs	.L134
 1496 0016 0446     		mov	r4, r0
1607:TP2824/TP2802.c **** 
 1497              		.loc 1 1607 0
 1498 0018 1E27     		movs	r7, #30
 1499 001a 17E0     		b	.L135
 1500              	.LVL197:
 1501              	.L138:
1613:TP2824/TP2802.c ****     {
1614:TP2824/TP2802.c ****         while(retry)
1615:TP2824/TP2802.c ****         {
1616:TP2824/TP2802.c ****             retry--;
1617:TP2824/TP2802.c **** 
1618:TP2824/TP2802.c ****             tmp = tp28xx_byte_read(0x07);
1619:TP2824/TP2802.c ****             tmp &=0x3f;
1620:TP2824/TP2802.c ****             while(abs(CGAIN_STD-cgain))
1621:TP2824/TP2802.c ****             {
1622:TP2824/TP2802.c ****                 if(tmp) tmp--;
1623:TP2824/TP2802.c ****                 else break;
1624:TP2824/TP2802.c ****                 cgain++;
1625:TP2824/TP2802.c ****             }
1626:TP2824/TP2802.c **** 
1627:TP2824/TP2802.c ****             tp28xx_byte_write(0x07, 0x80|tmp);
 1502              		.loc 1 1627 0
ARM GAS  /tmp/ccSTfybG.s 			page 59


 1503 001c 45F08001 		orr	r1, r5, #128
 1504 0020 0720     		movs	r0, #7
 1505 0022 FFF7FEFF 		bl	tp28xx_byte_write
 1506              	.LVL198:
1628:TP2824/TP2802.c ****             if(0 == tmp) break;
 1507              		.loc 1 1628 0
 1508 0026 D5B3     		cbz	r5, .L134
1629:TP2824/TP2802.c ****             delay(8); //delay 40ms
 1509              		.loc 1 1629 0
 1510 0028 0820     		movs	r0, #8
 1511 002a FFF7FEFF 		bl	delay
 1512              	.LVL199:
1630:TP2824/TP2802.c ****             tp28xx_byte_write(0x2f, 0x06);
 1513              		.loc 1 1630 0
 1514 002e 0621     		movs	r1, #6
 1515 0030 2F20     		movs	r0, #47
 1516 0032 FFF7FEFF 		bl	tp28xx_byte_write
 1517              	.LVL200:
1631:TP2824/TP2802.c ****             cgain = tp28xx_byte_read(0x04);
 1518              		.loc 1 1631 0
 1519 0036 0420     		movs	r0, #4
 1520 0038 FFF7FEFF 		bl	tp28xx_byte_read
 1521              	.LVL201:
 1522 003c 0446     		mov	r4, r0
 1523              	.LVL202:
1632:TP2824/TP2802.c **** 
1633:TP2824/TP2802.c ****             if(cgain > (CGAIN_STD+1))
 1524              		.loc 1 1633 0
 1525 003e 731C     		adds	r3, r6, #1
 1526 0040 9842     		cmp	r0, r3
 1527 0042 14DC     		bgt	.L146
 1528              	.LVL203:
 1529              	.L140:
1634:TP2824/TP2802.c ****             {
1635:TP2824/TP2802.c ****                 tmp = tp28xx_byte_read(0x07);
1636:TP2824/TP2802.c ****                 tmp &=0x3f;
1637:TP2824/TP2802.c ****                 //tmp +=0x02;
1638:TP2824/TP2802.c ****                 tmp++;
1639:TP2824/TP2802.c ****                 tmp++;
1640:TP2824/TP2802.c ****                 if(tmp > 0x3f) tmp = 0x3f;
1641:TP2824/TP2802.c ****                 tp28xx_byte_write(0x07, 0x80|tmp);
1642:TP2824/TP2802.c ****                 if(0x3f == tmp) break;
1643:TP2824/TP2802.c ****                 delay(8); //delay 40ms
1644:TP2824/TP2802.c ****                 cgain = tp28xx_byte_read(0x04);
1645:TP2824/TP2802.c **** 
1646:TP2824/TP2802.c ****             }
1647:TP2824/TP2802.c ****             if(abs(cgain-CGAIN_STD) < 2)  break;
 1530              		.loc 1 1647 0
 1531 0044 A31B     		subs	r3, r4, r6
 1532 0046 0133     		adds	r3, r3, #1
 1533 0048 022B     		cmp	r3, #2
 1534 004a 28D9     		bls	.L134
 1535              	.LVL204:
 1536              	.L135:
1614:TP2824/TP2802.c ****         {
 1537              		.loc 1 1614 0
 1538 004c 3FB3     		cbz	r7, .L134
ARM GAS  /tmp/ccSTfybG.s 			page 60


1616:TP2824/TP2802.c **** 
 1539              		.loc 1 1616 0
 1540 004e 013F     		subs	r7, r7, #1
 1541              	.LVL205:
 1542 0050 FFB2     		uxtb	r7, r7
 1543              	.LVL206:
1618:TP2824/TP2802.c ****             tmp &=0x3f;
 1544              		.loc 1 1618 0
 1545 0052 0720     		movs	r0, #7
 1546 0054 FFF7FEFF 		bl	tp28xx_byte_read
 1547              	.LVL207:
1619:TP2824/TP2802.c ****             while(abs(CGAIN_STD-cgain))
 1548              		.loc 1 1619 0
 1549 0058 00F03F05 		and	r5, r0, #63
 1550              	.LVL208:
 1551              	.L137:
1620:TP2824/TP2802.c ****             {
 1552              		.loc 1 1620 0
 1553 005c B442     		cmp	r4, r6
 1554 005e DDD0     		beq	.L138
1622:TP2824/TP2802.c ****                 else break;
 1555              		.loc 1 1622 0
 1556 0060 002D     		cmp	r5, #0
 1557 0062 DBD0     		beq	.L138
1622:TP2824/TP2802.c ****                 else break;
 1558              		.loc 1 1622 0 is_stmt 0 discriminator 1
 1559 0064 013D     		subs	r5, r5, #1
 1560              	.LVL209:
 1561 0066 EDB2     		uxtb	r5, r5
 1562              	.LVL210:
1624:TP2824/TP2802.c ****             }
 1563              		.loc 1 1624 0 is_stmt 1 discriminator 1
 1564 0068 0134     		adds	r4, r4, #1
 1565              	.LVL211:
 1566 006a E4B2     		uxtb	r4, r4
 1567              	.LVL212:
 1568 006c F6E7     		b	.L137
 1569              	.LVL213:
 1570              	.L146:
1635:TP2824/TP2802.c ****                 tmp &=0x3f;
 1571              		.loc 1 1635 0
 1572 006e 0720     		movs	r0, #7
 1573              	.LVL214:
 1574 0070 FFF7FEFF 		bl	tp28xx_byte_read
 1575              	.LVL215:
1636:TP2824/TP2802.c ****                 //tmp +=0x02;
 1576              		.loc 1 1636 0
 1577 0074 00F03F00 		and	r0, r0, #63
 1578              	.LVL216:
1639:TP2824/TP2802.c ****                 if(tmp > 0x3f) tmp = 0x3f;
 1579              		.loc 1 1639 0
 1580 0078 841C     		adds	r4, r0, #2
 1581              	.LVL217:
1640:TP2824/TP2802.c ****                 tp28xx_byte_write(0x07, 0x80|tmp);
 1582              		.loc 1 1640 0
 1583 007a 3F2C     		cmp	r4, #63
 1584 007c 00D9     		bls	.L141
ARM GAS  /tmp/ccSTfybG.s 			page 61


 1585 007e 3F24     		movs	r4, #63
 1586              	.LVL218:
 1587              	.L141:
1641:TP2824/TP2802.c ****                 if(0x3f == tmp) break;
 1588              		.loc 1 1641 0
 1589 0080 44F08001 		orr	r1, r4, #128
 1590 0084 0720     		movs	r0, #7
 1591 0086 FFF7FEFF 		bl	tp28xx_byte_write
 1592              	.LVL219:
1642:TP2824/TP2802.c ****                 delay(8); //delay 40ms
 1593              		.loc 1 1642 0
 1594 008a 3F2C     		cmp	r4, #63
 1595 008c 07D0     		beq	.L134
1643:TP2824/TP2802.c ****                 cgain = tp28xx_byte_read(0x04);
 1596              		.loc 1 1643 0
 1597 008e 0820     		movs	r0, #8
 1598 0090 FFF7FEFF 		bl	delay
 1599              	.LVL220:
1644:TP2824/TP2802.c **** 
 1600              		.loc 1 1644 0
 1601 0094 0420     		movs	r0, #4
 1602 0096 FFF7FEFF 		bl	tp28xx_byte_read
 1603              	.LVL221:
 1604 009a 0446     		mov	r4, r0
 1605              	.LVL222:
 1606 009c D2E7     		b	.L140
 1607              	.LVL223:
 1608              	.L134:
1648:TP2824/TP2802.c ****         }
1649:TP2824/TP2802.c **** 
1650:TP2824/TP2802.c ****     }
1651:TP2824/TP2802.c **** }
 1609              		.loc 1 1651 0
 1610 009e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1611              		.cfi_endproc
 1612              	.LFE83:
 1614              		.section	.text.INPUT_VIDEO_CHECK,"ax",%progbits
 1615              		.align	1
 1616              		.global	INPUT_VIDEO_CHECK
 1617              		.syntax unified
 1618              		.thumb
 1619              		.thumb_func
 1620              		.fpu softvfp
 1622              	INPUT_VIDEO_CHECK:
 1623              	.LFB84:
1652:TP2824/TP2802.c **** ////////////////////////////////////////
1653:TP2824/TP2802.c **** 
1654:TP2824/TP2802.c **** BYTE INPUT_VIDEO_CHECK(BYTE ch)
1655:TP2824/TP2802.c **** {
 1624              		.loc 1 1655 0
 1625              		.cfi_startproc
 1626              		@ args = 0, pretend = 0, frame = 0
 1627              		@ frame_needed = 0, uses_anonymous_args = 0
 1628              		@ link register save eliminated.
 1629              	.LVL224:
1656:TP2824/TP2802.c **** 
1657:TP2824/TP2802.c **** 	  BYTE ret=0;
ARM GAS  /tmp/ccSTfybG.s 			page 62


1658:TP2824/TP2802.c **** 	
1659:TP2824/TP2802.c **** 	 switch(CURRENT_CH)
 1630              		.loc 1 1659 0
 1631 0000 444B     		ldr	r3, .L186
 1632 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1633 0004 222B     		cmp	r3, #34
 1634 0006 5ED8     		bhi	.L164
 1635 0008 DFE803F0 		tbb	[pc, r3]
 1636              	.L150:
 1637 000c 12       		.byte	(.L149-.L150)/2
 1638 000d 18       		.byte	(.L151-.L150)/2
 1639 000e 20       		.byte	(.L152-.L150)/2
 1640 000f 26       		.byte	(.L153-.L150)/2
 1641 0010 5D       		.byte	(.L164-.L150)/2
 1642 0011 5D       		.byte	(.L164-.L150)/2
 1643 0012 36       		.byte	(.L154-.L150)/2
 1644 0013 36       		.byte	(.L154-.L150)/2
 1645 0014 36       		.byte	(.L154-.L150)/2
 1646 0015 2A       		.byte	(.L155-.L150)/2
 1647 0016 40       		.byte	(.L156-.L150)/2
 1648 0017 30       		.byte	(.L157-.L150)/2
 1649 0018 4A       		.byte	(.L158-.L150)/2
 1650 0019 40       		.byte	(.L156-.L150)/2
 1651 001a 2A       		.byte	(.L155-.L150)/2
 1652 001b 3A       		.byte	(.L159-.L150)/2
 1653 001c 4A       		.byte	(.L158-.L150)/2
 1654 001d 44       		.byte	(.L160-.L150)/2
 1655 001e 44       		.byte	(.L160-.L150)/2
 1656 001f 3A       		.byte	(.L159-.L150)/2
 1657 0020 50       		.byte	(.L161-.L150)/2
 1658 0021 36       		.byte	(.L154-.L150)/2
 1659 0022 50       		.byte	(.L161-.L150)/2
 1660 0023 54       		.byte	(.L162-.L150)/2
 1661 0024 36       		.byte	(.L154-.L150)/2
 1662 0025 50       		.byte	(.L161-.L150)/2
 1663 0026 58       		.byte	(.L163-.L150)/2
 1664 0027 36       		.byte	(.L154-.L150)/2
 1665 0028 54       		.byte	(.L162-.L150)/2
 1666 0029 58       		.byte	(.L163-.L150)/2
 1667 002a 50       		.byte	(.L161-.L150)/2
 1668 002b 54       		.byte	(.L162-.L150)/2
 1669 002c 58       		.byte	(.L163-.L150)/2
 1670 002d 54       		.byte	(.L162-.L150)/2
 1671 002e 58       		.byte	(.L163-.L150)/2
 1672 002f 00       		.p2align 1
 1673              	.L149:
1660:TP2824/TP2802.c ****  	{
1661:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE0_w0: 
1662:TP2824/TP2802.c **** 			if((ch==CH2)||(ch==CH3)||(ch==CH4))
 1674              		.loc 1 1662 0
 1675 0030 0138     		subs	r0, r0, #1
 1676              	.LVL225:
 1677 0032 C0B2     		uxtb	r0, r0
 1678 0034 0228     		cmp	r0, #2
 1679 0036 48D9     		bls	.L165
1657:TP2824/TP2802.c **** 	
 1680              		.loc 1 1657 0
ARM GAS  /tmp/ccSTfybG.s 			page 63


 1681 0038 0020     		movs	r0, #0
 1682 003a 7047     		bx	lr
 1683              	.LVL226:
 1684              	.L151:
1663:TP2824/TP2802.c **** 		           ret=_TRUE;		
1664:TP2824/TP2802.c **** 		break;
1665:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE0_w1: 
1666:TP2824/TP2802.c **** 			if((ch==CH1)||(ch==CH3)||(ch==CH4))
 1685              		.loc 1 1666 0
 1686 003c 0028     		cmp	r0, #0
 1687 003e 46D0     		beq	.L166
 1688              		.loc 1 1666 0 is_stmt 0 discriminator 1
 1689 0040 0228     		cmp	r0, #2
 1690 0042 46D0     		beq	.L167
 1691              		.loc 1 1666 0 discriminator 2
 1692 0044 0328     		cmp	r0, #3
 1693 0046 46D0     		beq	.L168
1657:TP2824/TP2802.c **** 	
 1694              		.loc 1 1657 0 is_stmt 1
 1695 0048 0020     		movs	r0, #0
 1696              	.LVL227:
 1697 004a 7047     		bx	lr
 1698              	.LVL228:
 1699              	.L152:
1667:TP2824/TP2802.c **** 							   ret=_TRUE;	
1668:TP2824/TP2802.c **** 		break;
1669:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE0_w2: 
1670:TP2824/TP2802.c **** 			if((ch==CH1)||(ch==CH2)||(ch==CH4))
 1700              		.loc 1 1670 0
 1701 004c 0128     		cmp	r0, #1
 1702 004e 44D9     		bls	.L169
 1703              		.loc 1 1670 0 is_stmt 0 discriminator 1
 1704 0050 0328     		cmp	r0, #3
 1705 0052 44D0     		beq	.L170
1657:TP2824/TP2802.c **** 	
 1706              		.loc 1 1657 0 is_stmt 1
 1707 0054 0020     		movs	r0, #0
 1708              	.LVL229:
 1709 0056 7047     		bx	lr
 1710              	.LVL230:
 1711              	.L153:
1671:TP2824/TP2802.c **** 							   ret=_TRUE;	
1672:TP2824/TP2802.c **** 					break;
1673:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE0_w3: 
1674:TP2824/TP2802.c **** 			if((ch==CH1)||(ch==CH2)||(ch==CH3))
 1712              		.loc 1 1674 0
 1713 0058 0228     		cmp	r0, #2
 1714 005a 42D9     		bls	.L171
1657:TP2824/TP2802.c **** 	
 1715              		.loc 1 1657 0
 1716 005c 0020     		movs	r0, #0
 1717              	.LVL231:
 1718 005e 7047     		bx	lr
 1719              	.LVL232:
 1720              	.L155:
1675:TP2824/TP2802.c **** 		           ret=_TRUE;	
1676:TP2824/TP2802.c **** 				break;
ARM GAS  /tmp/ccSTfybG.s 			page 64


1677:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE12_12: 
1678:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE12_21:			
1679:TP2824/TP2802.c **** 			if((ch==CH3)||(ch==CH4))
 1721              		.loc 1 1679 0
 1722 0060 0238     		subs	r0, r0, #2
 1723              	.LVL233:
 1724 0062 C0B2     		uxtb	r0, r0
 1725 0064 0128     		cmp	r0, #1
 1726 0066 3ED9     		bls	.L172
1657:TP2824/TP2802.c **** 	
 1727              		.loc 1 1657 0
 1728 0068 0020     		movs	r0, #0
 1729 006a 7047     		bx	lr
 1730              	.LVL234:
 1731              	.L157:
1680:TP2824/TP2802.c **** 		           ret=_TRUE;	
1681:TP2824/TP2802.c **** 		break;
1682:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE12_14:
1683:TP2824/TP2802.c **** 			if((ch==CH2)||(ch==CH3))
 1732              		.loc 1 1683 0
 1733 006c 0138     		subs	r0, r0, #1
 1734              	.LVL235:
 1735 006e C0B2     		uxtb	r0, r0
 1736 0070 0128     		cmp	r0, #1
 1737 0072 3AD9     		bls	.L173
1657:TP2824/TP2802.c **** 	
 1738              		.loc 1 1657 0
 1739 0074 0020     		movs	r0, #0
 1740 0076 7047     		bx	lr
 1741              	.LVL236:
 1742              	.L154:
1684:TP2824/TP2802.c **** 		           ret=_TRUE;	
1685:TP2824/TP2802.c **** 			break;
1686:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE10_123:
1687:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8:		
1688:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_123:
1689:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_213:
1690:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_312:
1691:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE9:		
1692:TP2824/TP2802.c **** 		if(ch==CH4)
 1743              		.loc 1 1692 0
 1744 0078 0328     		cmp	r0, #3
 1745 007a 38D0     		beq	.L174
1657:TP2824/TP2802.c **** 	
 1746              		.loc 1 1657 0
 1747 007c 0020     		movs	r0, #0
 1748              	.LVL237:
 1749 007e 7047     		bx	lr
 1750              	.LVL238:
 1751              	.L159:
1693:TP2824/TP2802.c **** 		   ret=_TRUE;	
1694:TP2824/TP2802.c **** 		break;
1695:TP2824/TP2802.c **** 
1696:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_23:
1697:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_32:
1698:TP2824/TP2802.c **** 		if((ch==CH1)||(ch==CH4))
 1752              		.loc 1 1698 0
ARM GAS  /tmp/ccSTfybG.s 			page 65


 1753 0080 0028     		cmp	r0, #0
 1754 0082 36D0     		beq	.L175
 1755              		.loc 1 1698 0 is_stmt 0 discriminator 1
 1756 0084 0328     		cmp	r0, #3
 1757 0086 36D0     		beq	.L176
1657:TP2824/TP2802.c **** 	
 1758              		.loc 1 1657 0 is_stmt 1
 1759 0088 0020     		movs	r0, #0
 1760              	.LVL239:
 1761 008a 7047     		bx	lr
 1762              	.LVL240:
 1763              	.L156:
1699:TP2824/TP2802.c **** 			   ret=_TRUE;	
1700:TP2824/TP2802.c **** 					break;
1701:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_34:
1702:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_43:
1703:TP2824/TP2802.c **** 		if((ch==CH1)||(ch==CH2))
 1764              		.loc 1 1703 0
 1765 008c 0128     		cmp	r0, #1
 1766 008e 34D9     		bls	.L177
1657:TP2824/TP2802.c **** 	
 1767              		.loc 1 1657 0
 1768 0090 0020     		movs	r0, #0
 1769              	.LVL241:
 1770 0092 7047     		bx	lr
 1771              	.LVL242:
 1772              	.L160:
1704:TP2824/TP2802.c **** 			   ret=_TRUE;	
1705:TP2824/TP2802.c **** 				break;
1706:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_31:
1707:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_13:	
1708:TP2824/TP2802.c **** 		if((ch==CH2)||(ch==CH4))
 1773              		.loc 1 1708 0
 1774 0094 0128     		cmp	r0, #1
 1775 0096 32D0     		beq	.L178
 1776              		.loc 1 1708 0 is_stmt 0 discriminator 1
 1777 0098 0328     		cmp	r0, #3
 1778 009a 32D0     		beq	.L179
1657:TP2824/TP2802.c **** 	
 1779              		.loc 1 1657 0 is_stmt 1
 1780 009c 0020     		movs	r0, #0
 1781              	.LVL243:
 1782 009e 7047     		bx	lr
 1783              	.LVL244:
 1784              	.L158:
1709:TP2824/TP2802.c **** 				   ret=_TRUE;			
1710:TP2824/TP2802.c **** 					break;
1711:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE1:
1712:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE2:
1713:TP2824/TP2802.c **** 		ret=_FALSE;
1714:TP2824/TP2802.c **** 		break;
1715:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_42:
1716:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_24:
1717:TP2824/TP2802.c **** 		if((ch==CH1)||(ch==CH3))
 1785              		.loc 1 1717 0
 1786 00a0 0028     		cmp	r0, #0
 1787 00a2 30D0     		beq	.L180
ARM GAS  /tmp/ccSTfybG.s 			page 66


 1788              		.loc 1 1717 0 is_stmt 0 discriminator 1
 1789 00a4 0228     		cmp	r0, #2
 1790 00a6 30D0     		beq	.L181
1657:TP2824/TP2802.c **** 	
 1791              		.loc 1 1657 0 is_stmt 1
 1792 00a8 0020     		movs	r0, #0
 1793              	.LVL245:
 1794 00aa 7047     		bx	lr
 1795              	.LVL246:
 1796              	.L161:
1718:TP2824/TP2802.c **** 				   ret=_TRUE;		
1719:TP2824/TP2802.c **** 		break;
1720:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_412:	
1721:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_124:
1722:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_214: 
1723:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE10_412:
1724:TP2824/TP2802.c **** 			if(ch==CH3)
 1797              		.loc 1 1724 0
 1798 00ac 0228     		cmp	r0, #2
 1799 00ae 2ED0     		beq	.L182
1657:TP2824/TP2802.c **** 	
 1800              		.loc 1 1657 0
 1801 00b0 0020     		movs	r0, #0
 1802              	.LVL247:
 1803 00b2 7047     		bx	lr
 1804              	.LVL248:
 1805              	.L162:
1725:TP2824/TP2802.c **** 			   ret=_TRUE;		
1726:TP2824/TP2802.c **** 		break;
1727:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_134:
1728:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_314:
1729:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE10_413:
1730:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_413: 
1731:TP2824/TP2802.c **** 			if(ch==CH2)
 1806              		.loc 1 1731 0
 1807 00b4 0128     		cmp	r0, #1
 1808 00b6 03D0     		beq	.L148
1657:TP2824/TP2802.c **** 	
 1809              		.loc 1 1657 0
 1810 00b8 0020     		movs	r0, #0
 1811              	.LVL249:
 1812 00ba 7047     		bx	lr
 1813              	.LVL250:
 1814              	.L163:
1732:TP2824/TP2802.c **** 			   ret=_TRUE;		
1733:TP2824/TP2802.c **** 		break;
1734:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_234:
1735:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_324: 
1736:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE10_423:
1737:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_423:			
1738:TP2824/TP2802.c **** 		if(ch==CH1)
 1815              		.loc 1 1738 0
 1816 00bc 08B9     		cbnz	r0, .L185
1739:TP2824/TP2802.c **** 		   ret=_TRUE;		
 1817              		.loc 1 1739 0
 1818 00be 0120     		movs	r0, #1
 1819              	.LVL251:
ARM GAS  /tmp/ccSTfybG.s 			page 67


 1820              	.L148:
1740:TP2824/TP2802.c **** 				break;
1741:TP2824/TP2802.c **** 	default:
1742:TP2824/TP2802.c **** 		ret=0;
1743:TP2824/TP2802.c **** 		break;
1744:TP2824/TP2802.c ****  	}
1745:TP2824/TP2802.c **** 	 
1746:TP2824/TP2802.c **** 	 return ret;
1747:TP2824/TP2802.c **** }
 1821              		.loc 1 1747 0
 1822 00c0 7047     		bx	lr
 1823              	.LVL252:
 1824              	.L185:
1657:TP2824/TP2802.c **** 	
 1825              		.loc 1 1657 0
 1826 00c2 0020     		movs	r0, #0
 1827              	.LVL253:
 1828 00c4 7047     		bx	lr
 1829              	.LVL254:
 1830              	.L164:
1713:TP2824/TP2802.c **** 		break;
 1831              		.loc 1 1713 0
 1832 00c6 0020     		movs	r0, #0
 1833              	.LVL255:
 1834 00c8 7047     		bx	lr
 1835              	.L165:
1663:TP2824/TP2802.c **** 		break;
 1836              		.loc 1 1663 0
 1837 00ca 0120     		movs	r0, #1
 1838 00cc 7047     		bx	lr
 1839              	.LVL256:
 1840              	.L166:
1667:TP2824/TP2802.c **** 		break;
 1841              		.loc 1 1667 0
 1842 00ce 0120     		movs	r0, #1
 1843              	.LVL257:
 1844 00d0 7047     		bx	lr
 1845              	.LVL258:
 1846              	.L167:
 1847 00d2 0120     		movs	r0, #1
 1848              	.LVL259:
 1849 00d4 7047     		bx	lr
 1850              	.LVL260:
 1851              	.L168:
 1852 00d6 0120     		movs	r0, #1
 1853              	.LVL261:
 1854 00d8 7047     		bx	lr
 1855              	.LVL262:
 1856              	.L169:
1671:TP2824/TP2802.c **** 					break;
 1857              		.loc 1 1671 0
 1858 00da 0120     		movs	r0, #1
 1859              	.LVL263:
 1860 00dc 7047     		bx	lr
 1861              	.LVL264:
 1862              	.L170:
 1863 00de 0120     		movs	r0, #1
ARM GAS  /tmp/ccSTfybG.s 			page 68


 1864              	.LVL265:
 1865 00e0 7047     		bx	lr
 1866              	.LVL266:
 1867              	.L171:
1675:TP2824/TP2802.c **** 				break;
 1868              		.loc 1 1675 0
 1869 00e2 0120     		movs	r0, #1
 1870              	.LVL267:
 1871 00e4 7047     		bx	lr
 1872              	.L172:
1680:TP2824/TP2802.c **** 		break;
 1873              		.loc 1 1680 0
 1874 00e6 0120     		movs	r0, #1
 1875 00e8 7047     		bx	lr
 1876              	.L173:
1684:TP2824/TP2802.c **** 			break;
 1877              		.loc 1 1684 0
 1878 00ea 0120     		movs	r0, #1
 1879 00ec 7047     		bx	lr
 1880              	.LVL268:
 1881              	.L174:
1693:TP2824/TP2802.c **** 		break;
 1882              		.loc 1 1693 0
 1883 00ee 0120     		movs	r0, #1
 1884              	.LVL269:
 1885 00f0 7047     		bx	lr
 1886              	.LVL270:
 1887              	.L175:
1699:TP2824/TP2802.c **** 					break;
 1888              		.loc 1 1699 0
 1889 00f2 0120     		movs	r0, #1
 1890              	.LVL271:
 1891 00f4 7047     		bx	lr
 1892              	.LVL272:
 1893              	.L176:
 1894 00f6 0120     		movs	r0, #1
 1895              	.LVL273:
 1896 00f8 7047     		bx	lr
 1897              	.LVL274:
 1898              	.L177:
1704:TP2824/TP2802.c **** 				break;
 1899              		.loc 1 1704 0
 1900 00fa 0120     		movs	r0, #1
 1901              	.LVL275:
 1902 00fc 7047     		bx	lr
 1903              	.LVL276:
 1904              	.L178:
1709:TP2824/TP2802.c **** 					break;
 1905              		.loc 1 1709 0
 1906 00fe 0120     		movs	r0, #1
 1907              	.LVL277:
 1908 0100 7047     		bx	lr
 1909              	.LVL278:
 1910              	.L179:
 1911 0102 0120     		movs	r0, #1
 1912              	.LVL279:
 1913 0104 7047     		bx	lr
ARM GAS  /tmp/ccSTfybG.s 			page 69


 1914              	.LVL280:
 1915              	.L180:
1718:TP2824/TP2802.c **** 		break;
 1916              		.loc 1 1718 0
 1917 0106 0120     		movs	r0, #1
 1918              	.LVL281:
 1919 0108 7047     		bx	lr
 1920              	.LVL282:
 1921              	.L181:
 1922 010a 0120     		movs	r0, #1
 1923              	.LVL283:
 1924 010c 7047     		bx	lr
 1925              	.LVL284:
 1926              	.L182:
1725:TP2824/TP2802.c **** 		break;
 1927              		.loc 1 1725 0
 1928 010e 0120     		movs	r0, #1
 1929              	.LVL285:
 1930 0110 7047     		bx	lr
 1931              	.L187:
 1932 0112 00BF     		.align	2
 1933              	.L186:
 1934 0114 00000000 		.word	CURRENT_CH
 1935              		.cfi_endproc
 1936              	.LFE84:
 1938              		.section	.text.Det_HLock,"ax",%progbits
 1939              		.align	1
 1940              		.global	Det_HLock
 1941              		.syntax unified
 1942              		.thumb
 1943              		.thumb_func
 1944              		.fpu softvfp
 1946              	Det_HLock:
 1947              	.LFB86:
1748:TP2824/TP2802.c **** 
1749:TP2824/TP2802.c **** void EQ_Detect()
1750:TP2824/TP2802.c **** {
1751:TP2824/TP2802.c ****     //tByte tmpval;
1752:TP2824/TP2802.c ****     tByte cvstd,status,i;
1753:TP2824/TP2802.c ****     tByte gain, tmp, fmt/*, tmpab*/;
1754:TP2824/TP2802.c **** 	
1755:TP2824/TP2802.c ****     for(i = 0; i < CH_PER_CHIP; i++)//scan four inputs:
1756:TP2824/TP2802.c ****     {
1757:TP2824/TP2802.c **** 	//	if((INPUT_VIDEO_CHECK(i))&&(BOOT_ISSUE==ON))
1758:TP2824/TP2802.c ****           //      continue;
1759:TP2824/TP2802.c **** 
1760:TP2824/TP2802.c **** 		
1761:TP2824/TP2802.c ****         SetRegPage(i);
1762:TP2824/TP2802.c ****         status = tp28xx_byte_read(0x01);
1763:TP2824/TP2802.c **** 
1764:TP2824/TP2802.c ****         //state machine for video checking
1765:TP2824/TP2802.c ****         if(status & FLAG_LOSS)
1766:TP2824/TP2802.c ****         {
1767:TP2824/TP2802.c **** 	
1768:TP2824/TP2802.c **** 		
1769:TP2824/TP2802.c ****             if(VIDEO_UNPLUG == state[i])
1770:TP2824/TP2802.c ****             {
ARM GAS  /tmp/ccSTfybG.s 			page 70


1771:TP2824/TP2802.c ****                 if(count[i] < MAX_COUNT) count[i]++;
1772:TP2824/TP2802.c ****                 continue;
1773:TP2824/TP2802.c ****             }
1774:TP2824/TP2802.c ****             else
1775:TP2824/TP2802.c ****             {
1776:TP2824/TP2802.c **** 
1777:TP2824/TP2802.c **** 
1778:TP2824/TP2802.c **** 				 if(SelectInputMode==_AHD_Input)
1779:TP2824/TP2802.c **** 				 	{
1780:TP2824/TP2802.c **** 					 Set_Video_Loss_OSD(1,ON);	 
1781:TP2824/TP2802.c **** 					VXISI2CWrite( 0x32, 0x00 );
1782:TP2824/TP2802.c **** 				 	}
1783:TP2824/TP2802.c **** 
1784:TP2824/TP2802.c **** 				
1785:TP2824/TP2802.c **** 				 
1786:TP2824/TP2802.c **** 				 Init_TP280x_RegSet();
1787:TP2824/TP2802.c **** 
1788:TP2824/TP2802.c **** 				 if(SelectInputMode==_AHD_Input)
1789:TP2824/TP2802.c **** 				 	{
1790:TP2824/TP2802.c **** 
1791:TP2824/TP2802.c **** 				  HS_Select_Win(1);
1792:TP2824/TP2802.c **** 				 	}
1793:TP2824/TP2802.c **** 			#if 0
1794:TP2824/TP2802.c ****                  state[i] = VIDEO_UNPLUG;
1795:TP2824/TP2802.c ****                 count[i] = 0;
1796:TP2824/TP2802.c ****                 mode[i] = NoDet;
1797:TP2824/TP2802.c ****                 TP28xx_reset_default(chip, i);
1798:TP2824/TP2802.c ****                 printf("video loss ch%02x \r\n", (tWord)i);                
1799:TP2824/TP2802.c ****               	VS4210_Rx_NoSignal(1/*i*/) ; //chunyu
1800:TP2824/TP2802.c **** 		TP_InputMode=7;
1801:TP2824/TP2802.c **** 		    newInRes[0] = _OSD_No_Signal; 
1802:TP2824/TP2802.c **** 				
1803:TP2824/TP2802.c **** 		if(SelectInputMode==_AHD_Input)
1804:TP2824/TP2802.c **** 		Set_Video_Loss_OSD(1,ON);	
1805:TP2824/TP2802.c **** 		//MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);
1806:TP2824/TP2802.c **** 		//MCUTimerActiveTimerEvent(SEC(3), _SYSTEM_TIMER_EVENT_VIDEO_RESET);
1807:TP2824/TP2802.c **** 
1808:TP2824/TP2802.c **** 		OSDSecCount = 0 ;
1809:TP2824/TP2802.c **** 		 OSDStateFlg = 1 ;	
1810:TP2824/TP2802.c **** 			#endif
1811:TP2824/TP2802.c ****             }
1812:TP2824/TP2802.c **** 			
1813:TP2824/TP2802.c ****         }
1814:TP2824/TP2802.c ****         else
1815:TP2824/TP2802.c ****         {
1816:TP2824/TP2802.c ****             if(PAL == mode[i] || NTSC == mode[i])
1817:TP2824/TP2802.c ****                 flag_LOCKED = CVBS_FLAG_LOCKED;
1818:TP2824/TP2802.c ****             else
1819:TP2824/TP2802.c ****                 flag_LOCKED = TVI_FLAG_LOCKED;
1820:TP2824/TP2802.c **** 
1821:TP2824/TP2802.c ****             if( flag_LOCKED == (status & flag_LOCKED) ) //video locked
1822:TP2824/TP2802.c ****             {
1823:TP2824/TP2802.c ****                 if(VIDEO_LOCKED == state[i])
1824:TP2824/TP2802.c ****                 {
1825:TP2824/TP2802.c ****                     if(count[i] < MAX_COUNT) count[i]++;
1826:TP2824/TP2802.c **** 				#if 0
1827:TP2824/TP2802.c **** 				if(VideoSave[i]==_TRUE)
ARM GAS  /tmp/ccSTfybG.s 			page 71


1828:TP2824/TP2802.c **** 				{
1829:TP2824/TP2802.c **** 			 		if((count[i]==1)&&((mode[i] == NTSC) ||( mode[i] == PAL)))
1830:TP2824/TP2802.c **** 			 		count[i]=20;//ryan@20200903
1831:TP2824/TP2802.c **** 			 		else if((count[i]==1)/*&&(ReadEEP(EEP_TP2824_STD0+(i*3))==HDA)*/)
1832:TP2824/TP2802.c **** 			 			{
1833:TP2824/TP2802.c **** 			 			std[i]=ReadEEP(EEP_TP2824_STD0+(i*3));
1834:TP2824/TP2802.c **** 						
1835:TP2824/TP2802.c **** 		 			 		if(std[i]==HDC)
1836:TP2824/TP2802.c **** 							{
1837:TP2824/TP2802.c **** 							Set_HDC(i);
1838:TP2824/TP2802.c **** 							printf("(Set_HDC)");
1839:TP2824/TP2802.c **** 							}
1840:TP2824/TP2802.c **** 							 if(std[i]==HDA)
1841:TP2824/TP2802.c **** 						 	{
1842:TP2824/TP2802.c **** 						 	Set_HDA(i);
1843:TP2824/TP2802.c **** 							printf("(Set_HDA)");
1844:TP2824/TP2802.c **** 						 	}
1845:TP2824/TP2802.c **** 							 
1846:TP2824/TP2802.c **** 						count[i]=20;
1847:TP2824/TP2802.c **** 			 			}
1848:TP2824/TP2802.c **** 					
1849:TP2824/TP2802.c **** 				}	
1850:TP2824/TP2802.c **** 				#endif
1851:TP2824/TP2802.c ****                 }
1852:TP2824/TP2802.c ****                 else if(VIDEO_UNPLUG == state[i])
1853:TP2824/TP2802.c ****                 {
1854:TP2824/TP2802.c ****                     state[i] = VIDEO_IN;
1855:TP2824/TP2802.c ****                     count[i] = 0;
1856:TP2824/TP2802.c ****                     printf("1video in ch%02x \r\n", (tWord)i);
1857:TP2824/TP2802.c ****                 }
1858:TP2824/TP2802.c ****                 else
1859:TP2824/TP2802.c ****                 {
1860:TP2824/TP2802.c ****                     state[i] = VIDEO_LOCKED;
1861:TP2824/TP2802.c ****                     count[i] = 0;
1862:TP2824/TP2802.c ****                     printf("video locked ch%02x \r\n", (tWord)i);
1863:TP2824/TP2802.c ****                 }
1864:TP2824/TP2802.c ****             }
1865:TP2824/TP2802.c ****             else  //video in but unlocked
1866:TP2824/TP2802.c ****             {
1867:TP2824/TP2802.c ****          
1868:TP2824/TP2802.c ****                 if(VIDEO_UNPLUG == state[i])
1869:TP2824/TP2802.c ****                 {
1870:TP2824/TP2802.c ****                     state[i] = VIDEO_IN;
1871:TP2824/TP2802.c ****                     count[i] = 0;
1872:TP2824/TP2802.c ****                     printf("video in ch%02x \r\n", (tWord)i);
1873:TP2824/TP2802.c ****                 }
1874:TP2824/TP2802.c ****                 else if(VIDEO_LOCKED == state[i])
1875:TP2824/TP2802.c ****                 {
1876:TP2824/TP2802.c **** /*
1877:TP2824/TP2802.c **** 			if(Flisheye_VLOSS_Count[i]<100)
1878:TP2824/TP2802.c **** 			{
1879:TP2824/TP2802.c **** 			Flisheye_VLOSS_Count[i]++;
1880:TP2824/TP2802.c **** 			}
1881:TP2824/TP2802.c **** 		else
1882:TP2824/TP2802.c **** 			*/
1883:TP2824/TP2802.c **** 			{
1884:TP2824/TP2802.c ****                     state[i] = VIDEO_UNLOCK;
ARM GAS  /tmp/ccSTfybG.s 			page 72


1885:TP2824/TP2802.c ****                     count[i] = 0;
1886:TP2824/TP2802.c ****                     printf("video unstable ch%02x \r\n", (tWord)i);
1887:TP2824/TP2802.c **** 			}		
1888:TP2824/TP2802.c ****                 }
1889:TP2824/TP2802.c ****                 else
1890:TP2824/TP2802.c ****                 {
1891:TP2824/TP2802.c ****                     if(count[i] < MAX_COUNT) count[i]++;
1892:TP2824/TP2802.c ****                     if(VIDEO_UNLOCK == state[i] && count[i] > 2)
1893:TP2824/TP2802.c ****                     {
1894:TP2824/TP2802.c ****                         state[i] = VIDEO_IN;
1895:TP2824/TP2802.c ****                         count[i] = 0;
1896:TP2824/TP2802.c ****                         TP28xx_reset_default(chip, i);
1897:TP2824/TP2802.c ****                         printf("video unlocked ch%02x \r\n", (tWord)i);                        
1898:TP2824/TP2802.c ****                         VS4210_Rx_NoSignal(i) ;//chunyu
1899:TP2824/TP2802.c ****                     }
1900:TP2824/TP2802.c ****                 }
1901:TP2824/TP2802.c **** 				
1902:TP2824/TP2802.c ****             }
1903:TP2824/TP2802.c **** 			
1904:TP2824/TP2802.c ****         }
1905:TP2824/TP2802.c **** 
1906:TP2824/TP2802.c ****         if( VIDEO_IN == state[i])
1907:TP2824/TP2802.c ****         {
1908:TP2824/TP2802.c ****             cvstd = tp28xx_byte_read(0x03);
1909:TP2824/TP2802.c ****             sywd = cvstd & 0x08;
1910:TP2824/TP2802.c ****             cvstd &= 0x07;
1911:TP2824/TP2802.c ****             fmt = mode[i];
1912:TP2824/TP2802.c ****             if(NTPAL == cvstd && flag_CVBS)
1913:TP2824/TP2802.c ****             {
1914:TP2824/TP2802.c ****                 //if(count[i] & 0x01)
1915:TP2824/TP2802.c ****                 if(status & 0x04)
1916:TP2824/TP2802.c ****                     fmt = PAL;
1917:TP2824/TP2802.c ****                 else
1918:TP2824/TP2802.c ****                     fmt = NTSC;
1919:TP2824/TP2802.c ****             }
1920:TP2824/TP2802.c ****             else if(cvstd == R720P30 )
1921:TP2824/TP2802.c ****             {
1922:TP2824/TP2802.c ****                 if( flag_MEGA && (count[i]&0x02) )// 3M auto detect test
1923:TP2824/TP2802.c ****                     fmt = R4M12;
1924:TP2824/TP2802.c ****                 else
1925:TP2824/TP2802.c ****                     fmt = R720P30V2;
1926:TP2824/TP2802.c ****             }
1927:TP2824/TP2802.c ****             else if(cvstd == R720P25 )
1928:TP2824/TP2802.c ****             {
1929:TP2824/TP2802.c ****                 fmt = R720P25V2;
1930:TP2824/TP2802.c ****             }
1931:TP2824/TP2802.c ****             else if(cvstd == R1080P30 )
1932:TP2824/TP2802.c ****             {
1933:TP2824/TP2802.c ****                 if( flag_MEGA && (count[i]&0x02) )//TP2853C 3M auto detect test
1934:TP2824/TP2802.c ****                     fmt = R3M20;
1935:TP2824/TP2802.c ****                 else
1936:TP2824/TP2802.c ****                     fmt = R1080P30;
1937:TP2824/TP2802.c ****             }
1938:TP2824/TP2802.c ****             else if(cvstd == R720P60 )
1939:TP2824/TP2802.c ****             {
1940:TP2824/TP2802.c ****                 if( flag_MEGA && (count[i]&0x02) )//TP2853C 3M auto detect test
1941:TP2824/TP2802.c ****                     fmt = R4M30;
ARM GAS  /tmp/ccSTfybG.s 			page 73


1942:TP2824/TP2802.c ****                 else
1943:TP2824/TP2802.c ****                     fmt = R720P60;
1944:TP2824/TP2802.c ****             }
1945:TP2824/TP2802.c ****             else if(cvstd < 4 )
1946:TP2824/TP2802.c ****             {
1947:TP2824/TP2802.c ****                 fmt = cvstd;
1948:TP2824/TP2802.c ****             }
1949:TP2824/TP2802.c ****             else
1950:TP2824/TP2802.c ****             {
1951:TP2824/TP2802.c ****                 if( flag_MEGA )//TP2853C 3M auto detect test
1952:TP2824/TP2802.c ****                 {
1953:TP2824/TP2802.c ****                     tp28xx_byte_write(0x2f, 0x09);
1954:TP2824/TP2802.c ****                     tmp = tp28xx_byte_read(0x04);
1955:TP2824/TP2802.c ****                     if((tmp > 0x48) && (tmp < 0x55))
1956:TP2824/TP2802.c ****                     {
1957:TP2824/TP2802.c ****                         fmt = R3M18;
1958:TP2824/TP2802.c ****                     }
1959:TP2824/TP2802.c ****                     else if((tmp > 0x55) && (tmp < 0x62))
1960:TP2824/TP2802.c ****                     {
1961:TP2824/TP2802.c ****                         fmt = R4M15;
1962:TP2824/TP2802.c ****                     }
1963:TP2824/TP2802.c ****                     else if((tmp > 0x70) && (tmp < 0x80))
1964:TP2824/TP2802.c ****                     {
1965:TP2824/TP2802.c ****                         fmt = R6M10;
1966:TP2824/TP2802.c ****                     }
1967:TP2824/TP2802.c ****                 }
1968:TP2824/TP2802.c ****             }
1969:TP2824/TP2802.c **** /*
1970:TP2824/TP2802.c **** 		if(VideoSave[i]==_TRUE)
1971:TP2824/TP2802.c **** 		{
1972:TP2824/TP2802.c **** 		printf("(B)");
1973:TP2824/TP2802.c **** 		Set_VidRes(i);      
1974:TP2824/TP2802.c **** 		}
1975:TP2824/TP2802.c **** 		else
1976:TP2824/TP2802.c **** 			*/
1977:TP2824/TP2802.c **** 		{
1978:TP2824/TP2802.c **** 		   	if( mode[i] != fmt )
1979:TP2824/TP2802.c **** 		            {
1980:TP2824/TP2802.c **** 		                mode[i] = fmt;
1981:TP2824/TP2802.c **** 		                printf("Set_VidResmode[%d] =%d\r\n",(int)i, (int)fmt);
1982:TP2824/TP2802.c **** 		                Set_VidRes(i);
1983:TP2824/TP2802.c **** 		            }
1984:TP2824/TP2802.c **** 		}
1985:TP2824/TP2802.c ****         }
1986:TP2824/TP2802.c **** 
1987:TP2824/TP2802.c ****         if( VIDEO_LOCKED == state[i]) //check signal lock
1988:TP2824/TP2802.c ****         {
1989:TP2824/TP2802.c ****             if(0 == count[i])
1990:TP2824/TP2802.c ****             {
1991:TP2824/TP2802.c ****                 std[i] = TVI;
1992:TP2824/TP2802.c ****                 CurCH = i;
1993:TP2824/TP2802.c ****                 if( (R720P30V2 == mode[i]) || (R720P25V2 == mode[i]) )
1994:TP2824/TP2802.c ****                 {
1995:TP2824/TP2802.c ****                     if( 0x00 == (0x08 & tp28xx_byte_read(0x03)))
1996:TP2824/TP2802.c ****                     {
1997:TP2824/TP2802.c ****                         mode[i] &= 0xf7;
1998:TP2824/TP2802.c ****                         Set_VidRes(i);
ARM GAS  /tmp/ccSTfybG.s 			page 74


1999:TP2824/TP2802.c ****                         //printf("TVI_Set_VidRes\r\n");
2000:TP2824/TP2802.c ****                     }
2001:TP2824/TP2802.c ****                 }
2002:TP2824/TP2802.c **** 
2003:TP2824/TP2802.c ****                 //tp28xx_byte_write(0xf6  , REG_F6[i]);
2004:TP2824/TP2802.c ****                 tp28xx_byte_write(0xf6 +i  , REG_F6[i]);  //chunyu
2005:TP2824/TP2802.c **** 
2006:TP2824/TP2802.c **** #if(OUTPUT == Bits16out)
2007:TP2824/TP2802.c ****                 if( TP2826 == chip )
2008:TP2824/TP2802.c ****                 {
2009:TP2824/TP2802.c ****                     tp28xx_byte_write(0xf8, REG_F7[i]);
2010:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfa, REG_FA[i]);
2011:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfb, REG_FA[i]);
2012:TP2824/TP2802.c ****                 }
2013:TP2824/TP2802.c ****                 else
2014:TP2824/TP2802.c ****                 {                    
2015:TP2824/TP2802.c ****                     tp28xx_byte_write(0xf7, REG_F7[i]);
2016:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfa, REG_FA[i]);
2017:TP2824/TP2802.c ****                     //printf("set output ch%02x \r\n", (tWord)CH[i]);
2018:TP2824/TP2802.c ****                 }
2019:TP2824/TP2802.c **** #else //BT656																				
2020:TP2824/TP2802.c **** 
2021:TP2824/TP2802.c ****                 tmp=tp28xx_byte_read(0xf5);
2022:TP2824/TP2802.c ****                 if( tmp &= SYS_MODE[i])
2023:TP2824/TP2802.c ****                 {
2024:TP2824/TP2802.c ****                     printf("//75.25M output\r\n") ;
2025:TP2824/TP2802.c **** 
2026:TP2824/TP2802.c ****                     if (i == 0)
2027:TP2824/TP2802.c ****                     {
2028:TP2824/TP2802.c ****                         tmpab = tp28xx_byte_read(0xfa) ;
2029:TP2824/TP2802.c ****                         tmpab = (tmpab & 0xF0) | 0x0A ;
2030:TP2824/TP2802.c ****                         tp28xx_byte_write(0xfa, tmpab);
2031:TP2824/TP2802.c ****                     }
2032:TP2824/TP2802.c ****                     else if (i == 1)
2033:TP2824/TP2802.c ****                     {
2034:TP2824/TP2802.c ****                         tmpab = tp28xx_byte_read(0xfa) ;
2035:TP2824/TP2802.c ****                         tmpab = (tmpab & 0x0F) | 0xA0 ;
2036:TP2824/TP2802.c ****                         tp28xx_byte_write(0xfa, tmpab);
2037:TP2824/TP2802.c ****                     }
2038:TP2824/TP2802.c **** 
2039:TP2824/TP2802.c ****                     if (i == 2)
2040:TP2824/TP2802.c ****                     {
2041:TP2824/TP2802.c ****                         tmpab = tp28xx_byte_read(0xfb) ;
2042:TP2824/TP2802.c ****                         tmpab = (tmpab & 0xF0) | 0x0A ;
2043:TP2824/TP2802.c ****                         tp28xx_byte_write(0xfb, tmpab);
2044:TP2824/TP2802.c ****                     }
2045:TP2824/TP2802.c ****                     else if (i == 3)
2046:TP2824/TP2802.c ****                     {
2047:TP2824/TP2802.c ****                         tmpab = tp28xx_byte_read(0xfb) ;
2048:TP2824/TP2802.c ****                         tmpab = (tmpab & 0x0F) | 0xA0 ;
2049:TP2824/TP2802.c ****                         tp28xx_byte_write(0xfb, tmpab);
2050:TP2824/TP2802.c ****                     }
2051:TP2824/TP2802.c ****                 }
2052:TP2824/TP2802.c ****                 else
2053:TP2824/TP2802.c ****                 {
2054:TP2824/TP2802.c ****                     extern tByte half_scaler;
2055:TP2824/TP2802.c ****                     if(half_scaler) //down scaler output
ARM GAS  /tmp/ccSTfybG.s 			page 75


2056:TP2824/TP2802.c ****                     {
2057:TP2824/TP2802.c ****                         tmp=tp28xx_byte_read(0x35);
2058:TP2824/TP2802.c ****                         tmp |= 0x40;
2059:TP2824/TP2802.c ****                         tp28xx_byte_write(0x35, tmp);                        
2060:TP2824/TP2802.c **** 
2061:TP2824/TP2802.c ****                         if (i == 0)
2062:TP2824/TP2802.c ****                         {
2063:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfa) ;
2064:TP2824/TP2802.c ****                             tmpab = (tmpab & 0xF0) | 0x0A ;
2065:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfa, tmpab);
2066:TP2824/TP2802.c ****                         }
2067:TP2824/TP2802.c ****                         else if (i == 1)
2068:TP2824/TP2802.c ****                         {
2069:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfa) ;
2070:TP2824/TP2802.c ****                             tmpab = (tmpab & 0x0F) | 0xA0 ;
2071:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfa, tmpab);
2072:TP2824/TP2802.c ****                         }
2073:TP2824/TP2802.c **** 
2074:TP2824/TP2802.c **** 
2075:TP2824/TP2802.c ****                         if (i == 2)
2076:TP2824/TP2802.c ****                         {
2077:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfb) ;
2078:TP2824/TP2802.c ****                             tmpab = (tmpab & 0xF0) | 0x0A ;
2079:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfb, tmpab);
2080:TP2824/TP2802.c ****                         }
2081:TP2824/TP2802.c ****                         else if (i == 3)
2082:TP2824/TP2802.c ****                         {
2083:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfb) ;
2084:TP2824/TP2802.c ****                             tmpab = (tmpab & 0x0F) | 0xA0 ;
2085:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfb, tmpab);
2086:TP2824/TP2802.c ****                         }
2087:TP2824/TP2802.c **** 
2088:TP2824/TP2802.c ****                     }
2089:TP2824/TP2802.c ****                     else
2090:TP2824/TP2802.c ****                     {
2091:TP2824/TP2802.c ****                         tmp=tp28xx_byte_read(0x35);
2092:TP2824/TP2802.c ****                         tmp &= 0xbf;
2093:TP2824/TP2802.c ****                         tp28xx_byte_write(0x35, tmp);
2094:TP2824/TP2802.c **** 
2095:TP2824/TP2802.c **** 
2096:TP2824/TP2802.c ****                         if (i == 0)
2097:TP2824/TP2802.c ****                         {
2098:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfa) ;
2099:TP2824/TP2802.c ****                             tmpab = (tmpab & 0xF0) | 0x08 ;
2100:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfa, tmpab);
2101:TP2824/TP2802.c ****                         }
2102:TP2824/TP2802.c ****                         else if (i == 1)
2103:TP2824/TP2802.c ****                         {
2104:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfa) ;
2105:TP2824/TP2802.c ****                             tmpab = (tmpab & 0x0F) | 0x80 ;
2106:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfa, tmpab);
2107:TP2824/TP2802.c ****                         }
2108:TP2824/TP2802.c **** 
2109:TP2824/TP2802.c **** 
2110:TP2824/TP2802.c ****                         if (i == 2)
2111:TP2824/TP2802.c ****                         {
2112:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfb) ;
ARM GAS  /tmp/ccSTfybG.s 			page 76


2113:TP2824/TP2802.c ****                             tmpab = (tmpab & 0xF0) | 0x08 ;
2114:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfb, tmpab);
2115:TP2824/TP2802.c ****                         }
2116:TP2824/TP2802.c ****                         else if (i == 3)
2117:TP2824/TP2802.c ****                         {
2118:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfb) ;
2119:TP2824/TP2802.c ****                             tmpab = (tmpab & 0x0F) | 0x80 ;
2120:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfb, tmpab);
2121:TP2824/TP2802.c ****                         }
2122:TP2824/TP2802.c ****                     }
2123:TP2824/TP2802.c ****                 }
2124:TP2824/TP2802.c **** #endif
2125:TP2824/TP2802.c ****                 if( CurRes != ManVidResRx)
2126:TP2824/TP2802.c ****                 {
2127:TP2824/TP2802.c ****                     CurRes = ManVidResRx;
2128:TP2824/TP2802.c ****                     //CreateMDIN340VideoInstance();  //chunyu
2129:TP2824/TP2802.c ****                     printf("ManVidResRx=0x%02x\r\n",ManVidResRx ) ;
2130:TP2824/TP2802.c **** 
2131:TP2824/TP2802.c ****                 }
2132:TP2824/TP2802.c ****             }
2133:TP2824/TP2802.c ****             else if(1 == count[i])
2134:TP2824/TP2802.c ****             {
2135:TP2824/TP2802.c ****                 if( chip > TP2823 )
2136:TP2824/TP2802.c ****                 {
2137:TP2824/TP2802.c ****                     tmp = tp28xx_byte_read(0x01);
2138:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
2139:TP2824/TP2802.c ****                     if(mode[i] == NTSC || mode[i] == PAL)
2140:TP2824/TP2802.c ****                              printf("CVBS  mode:%d\r\n", (tWord)mode[i]);
2141:TP2824/TP2802.c **** //                 if( 0x60 == (0x64 & tmp))
2142:TP2824/TP2802.c ****                     else if((0x60 == (0x64 & tmp)) &&
2143:TP2824/TP2802.c ****             			   (mode[i] != R720P30 && mode[i] != R720P25 && mode[i] != R720P30V2 && mode[i] != R
2144:TP2824/TP2802.c ****                     {
2145:TP2824/TP2802.c ****                         //if(Set_HDA(mode[i])) printf("turn to A ch%02x\r\n", (tWord)i);
2146:TP2824/TP2802.c ****                         if(Set_HDC(i))
2147:TP2824/TP2802.c ****                         {
2148:TP2824/TP2802.c ****                             std[i] = HDC;
2149:TP2824/TP2802.c ****                             printf("turn to C ch%02x\r\n", (tWord)i);
2150:TP2824/TP2802.c ****                         }
2151:TP2824/TP2802.c ****                     }
2152:TP2824/TP2802.c ****                 }
2153:TP2824/TP2802.c ****             }
2154:TP2824/TP2802.c ****             else if(2 == count[i])
2155:TP2824/TP2802.c ****             {
2156:TP2824/TP2802.c ****                 if( chip > TP2823 )
2157:TP2824/TP2802.c ****                 {
2158:TP2824/TP2802.c ****                     tmp = tp28xx_byte_read(0x01);
2159:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
2160:TP2824/TP2802.c **** 			if(mode[i] == NTSC || mode[i] == PAL)
2161:TP2824/TP2802.c ****                              printf("CVBS  mode:%d\r\n", (tWord)mode[i]);
2162:TP2824/TP2802.c **** //                 if( 0x10 != (0x11 & tmp) && HDC == std[i])
2163:TP2824/TP2802.c **** 		      else if((0x10 != (0x11 & tmp) && HDC == std[i]) ||
2164:TP2824/TP2802.c **** 		                 (0x00 == (0x04 & tmp) && 
2165:TP2824/TP2802.c **** 		                 (mode[i] == R720P30 || mode[i] == R720P25 || mode[i] == R720P30V2 || mode[i] == 
2166:TP2824/TP2802.c ****                     {
2167:TP2824/TP2802.c ****                         if(Set_HDA(i))
2168:TP2824/TP2802.c ****                         {
2169:TP2824/TP2802.c ****                             std[i] = HDA;
ARM GAS  /tmp/ccSTfybG.s 			page 77


2170:TP2824/TP2802.c ****                             printf("turn to A ch%02x\r\n", (tWord)i);
2171:TP2824/TP2802.c ****                         }
2172:TP2824/TP2802.c ****                     }
2173:TP2824/TP2802.c **** 
2174:TP2824/TP2802.c ****                 }
2175:TP2824/TP2802.c **** 
2176:TP2824/TP2802.c ****             }
2177:TP2824/TP2802.c ****             else if(3 == count[i])
2178:TP2824/TP2802.c ****             {
2179:TP2824/TP2802.c ****                 if( chip > TP2823 )
2180:TP2824/TP2802.c ****                 {
2181:TP2824/TP2802.c ****                     tmp = tp28xx_byte_read(0x01);
2182:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
2183:TP2824/TP2802.c **** 
2184:TP2824/TP2802.c ****                     if((mode[i] == R1080P30 || mode[i] == R1080P25)&& 0x00 == (0x04 & tmp))
2185:TP2824/TP2802.c ****                         printf("AHD 1080P30/P25  mode:%d\r\n", (tWord)mode[i]);
2186:TP2824/TP2802.c **** 		      else if((mode[i] == R1080P30 || mode[i] == R1080P25) && 0x04 == (0x04 & tmp) && std[i] == T
2187:TP2824/TP2802.c ****                         printf("TVI 1080P30/P25   mode:%d\r\n", (tWord)mode[i]);
2188:TP2824/TP2802.c **** 		      else if((mode[i] == R720P30 || mode[i] == R720P25 || mode[i] == R720P30V2 || mode[i] == R72
2189:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
2190:TP2824/TP2802.c ****                         printf("AHD 720P30/P25/P60/P50   mode:%d\r\n", (tWord)mode[i]);
2191:TP2824/TP2802.c **** 		      else if(mode[i] == NTSC || mode[i] == PAL)
2192:TP2824/TP2802.c ****                              printf("CVBS    mode:%d\r\n", (tWord)mode[i]);
2193:TP2824/TP2802.c **** //		      if( 0x00 != (0x01 & tmp))
2194:TP2824/TP2802.c **** 		      else if( 0x00 != (0x01 & tmp)) 
2195:TP2824/TP2802.c ****                     {
2196:TP2824/TP2802.c ****                       //  Set_VidRes(mode[i]); //chunyu
2197:TP2824/TP2802.c ****                         Set_VidRes(i); //is it right? ryan@20200904
2198:TP2824/TP2802.c ****                         printf("back to T ch%02x\r\n", (tWord)i); //chunyu
2199:TP2824/TP2802.c ****                     }
2200:TP2824/TP2802.c ****                 }
2201:TP2824/TP2802.c ****             }
2202:TP2824/TP2802.c ****             else if(count[i] < 7) //skip first 3 second
2203:TP2824/TP2802.c ****             {
2204:TP2824/TP2802.c ****                 egain[i][3] = egain[i][2];
2205:TP2824/TP2802.c ****                 egain[i][2] = egain[i][1];
2206:TP2824/TP2802.c ****                 egain[i][1] = egain[i][0];
2207:TP2824/TP2802.c **** 
2208:TP2824/TP2802.c ****                 gain = ReadGain();
2209:TP2824/TP2802.c ****                 egain[i][0] = gain;
2210:TP2824/TP2802.c ****             }
2211:TP2824/TP2802.c ****             else if( count[i] < EQ_COUNT)
2212:TP2824/TP2802.c ****             {
2213:TP2824/TP2802.c ****                 egain[i][3] = egain[i][2];
2214:TP2824/TP2802.c ****                 egain[i][2] = egain[i][1];
2215:TP2824/TP2802.c ****                 egain[i][1] = egain[i][0];
2216:TP2824/TP2802.c **** 
2217:TP2824/TP2802.c ****                 gain = ReadGain();
2218:TP2824/TP2802.c ****                 egain[i][0] = gain;
2219:TP2824/TP2802.c **** 
2220:TP2824/TP2802.c ****                 if(abs(egain[i][3] - egain[i][0])< EQ_DIFF && abs(egain[i][2] - egain[i][0])< EQ_DI
2221:TP2824/TP2802.c ****                 {
2222:TP2824/TP2802.c ****                     count[i] = EQ_COUNT-1;
2223:TP2824/TP2802.c ****                 }
2224:TP2824/TP2802.c ****             }
2225:TP2824/TP2802.c ****             else if(EQ_COUNT == count[i])
2226:TP2824/TP2802.c ****             {
ARM GAS  /tmp/ccSTfybG.s 			page 78


2227:TP2824/TP2802.c ****                 gain = ReadGain();
2228:TP2824/TP2802.c ****                 printf("Egain=0x%02x ch%02x,std=%d,mode=0x%02X\r\n", (tWord)gain, (tWord)i, (tWord)
2229:TP2824/TP2802.c **** 
2230:TP2824/TP2802.c ****                 if ((mode[i] == R1080P30 ) || (mode[i] == R1080P25 ))
2231:TP2824/TP2802.c ****                 {
2232:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1920X1080P ;
2233:TP2824/TP2802.c ****                 }
2234:TP2824/TP2802.c ****                 else if ((mode[i] == R720P50 ) || (mode[i] == R720P60 ))
2235:TP2824/TP2802.c ****                 {
2236:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
2237:TP2824/TP2802.c ****                 }
2238:TP2824/TP2802.c ****                 else if ((mode[i] == R720P25 ) || (mode[i] == R720P30 ))
2239:TP2824/TP2802.c ****                 {
2240:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
2241:TP2824/TP2802.c ****                 }
2242:TP2824/TP2802.c ****                 else if ((mode[i] == R720P30V2 ) || (mode[i] == R720P25V2 ))
2243:TP2824/TP2802.c ****                 {
2244:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
2245:TP2824/TP2802.c ****                 }
2246:TP2824/TP2802.c ****                 else if (mode[i] == NTSC )
2247:TP2824/TP2802.c ****                 {
2248:TP2824/TP2802.c ****                     newInRes[i] = _OSD_720X480I60 ;
2249:TP2824/TP2802.c ****                 }
2250:TP2824/TP2802.c ****                 else if (mode[i] == PAL )
2251:TP2824/TP2802.c ****                 {
2252:TP2824/TP2802.c ****                     newInRes[i] = _OSD_720X576I50 ;
2253:TP2824/TP2802.c ****                 }
2254:TP2824/TP2802.c ****                 else
2255:TP2824/TP2802.c ****                 {
2256:TP2824/TP2802.c ****                     newInRes[i] = _OSD_No_Signal ;
2257:TP2824/TP2802.c ****                 }
2258:TP2824/TP2802.c **** 
2259:TP2824/TP2802.c **** 				TP_InputMode=newInRes[i] ;
2260:TP2824/TP2802.c **** 				   if(SelectInputMode==1)
2261:TP2824/TP2802.c **** 					   {
2262:TP2824/TP2802.c **** 					   MCUTimerActiveTimerEvent(SEC(1), _SYSTEM_TIMER_EVENT_VIDEO_RESET);
2263:TP2824/TP2802.c **** 				   //MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);
2264:TP2824/TP2802.c **** 					   }
2265:TP2824/TP2802.c **** 
2266:TP2824/TP2802.c ****                 if (newInRes[i] != gbVXIS_InputMode[i] )
2267:TP2824/TP2802.c ****                 {
2268:TP2824/TP2802.c ****                  //   VS4210_SetInModeOutMode(i,newInRes[i] ,gbVXIS_OuputModeflg )  ;
2269:TP2824/TP2802.c **** 
2270:TP2824/TP2802.c **** /*
2271:TP2824/TP2802.c **** 		//save tp2824 data
2272:TP2824/TP2802.c **** 			if( ReadEEP(EEP_TP2824_STD0+(i*3)+2)==0)
2273:TP2824/TP2802.c **** 			{
2274:TP2824/TP2802.c **** 			 WriteEEP(EEP_TP2824_STD0+(i*3),std[i]);
2275:TP2824/TP2802.c **** 			 WriteEEP(EEP_TP2824_STD0+(i*3)+1,mode[i]);		
2276:TP2824/TP2802.c **** 		    	  WriteEEP(EEP_TP2824_STD0+(i*3)+2,1);
2277:TP2824/TP2802.c **** 			  VideoSave[i]=1;
2278:TP2824/TP2802.c **** 
2279:TP2824/TP2802.c **** 			 printf("\r\n(WriteModeDataToEEPROM ch=%02x)",(WORD)i) ;
2280:TP2824/TP2802.c **** 			}
2281:TP2824/TP2802.c **** */
2282:TP2824/TP2802.c **** 			
2283:TP2824/TP2802.c ****         printf("VS4210_SetInModeOutMode(),i=%d,newInRes=%d,OuputModeflg=%d\r\n",(int)i ,(int)newInR
ARM GAS  /tmp/ccSTfybG.s 			page 79


2284:TP2824/TP2802.c **** 
2285:TP2824/TP2802.c **** //                    tp28xx_byte_write(0xF6,0x00);
2286:TP2824/TP2802.c **** //
2287:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x40);
2288:TP2824/TP2802.c **** //                    printf("0x40=0x%02x\r\n",tmpval ) ;
2289:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x4d);
2290:TP2824/TP2802.c **** //                    printf("0x4D=0x%02x\r\n",tmpval ) ;
2291:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x4E);
2292:TP2824/TP2802.c **** //                    printf("0x4E=0x%02x\r\n",tmpval ) ;
2293:TP2824/TP2802.c **** //
2294:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x50);
2295:TP2824/TP2802.c **** //                    printf("0x50=0x%02x\r\n",tmpval ) ;
2296:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x51);
2297:TP2824/TP2802.c **** //                    printf("0x51=0x%02x\r\n",tmpval ) ;
2298:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x52);
2299:TP2824/TP2802.c **** //                    printf("0x52=0x%02x\r\n",tmpval ) ;
2300:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x53);
2301:TP2824/TP2802.c **** //                    printf("0x53=0x%02x\r\n",tmpval ) ;
2302:TP2824/TP2802.c **** //
2303:TP2824/TP2802.c **** //
2304:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xF6);
2305:TP2824/TP2802.c **** //                    printf("0xF6=0x%02x\r\n",tmpval ) ;
2306:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xF7);
2307:TP2824/TP2802.c **** //                    printf("0xF7=0x%02x\r\n",tmpval ) ;
2308:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xF8);
2309:TP2824/TP2802.c **** //                    printf("0xF8=0x%02x\r\n",tmpval ) ;
2310:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xF9);
2311:TP2824/TP2802.c **** //                    printf("0xF9=0x%02x\r\n",tmpval ) ;
2312:TP2824/TP2802.c **** //
2313:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xFA);
2314:TP2824/TP2802.c **** //                    printf("0xFA=0x%02x\r\n",tmpval ) ;
2315:TP2824/TP2802.c **** //
2316:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xFB);
2317:TP2824/TP2802.c **** //                    printf("0xFB=0x%02x\r\n",tmpval ) ;
2318:TP2824/TP2802.c **** 
2319:TP2824/TP2802.c ****                 }
2320:TP2824/TP2802.c **** 
2321:TP2824/TP2802.c ****                 if( TVI != std[i] )
2322:TP2824/TP2802.c ****                 {
2323:TP2824/TP2802.c ****                     tp28xx_byte_write(0x07, 0x80|(gain>>2));  // manual mode
2324:TP2824/TP2802.c ****                     if (std[i]== HDA )
2325:TP2824/TP2802.c ****                     {
2326:TP2824/TP2802.c ****                         printf("AHD Mode\r\n");
2327:TP2824/TP2802.c ****                     }
2328:TP2824/TP2802.c ****                     else
2329:TP2824/TP2802.c ****                     {
2330:TP2824/TP2802.c ****                         printf("CVI Mode\r\n");
2331:TP2824/TP2802.c ****                     }
2332:TP2824/TP2802.c ****                 }
2333:TP2824/TP2802.c ****                 else //TVI
2334:TP2824/TP2802.c ****                 {
2335:TP2824/TP2802.c ****                     if( TP2833 == chip || TP2834 == chip)
2336:TP2824/TP2802.c ****                     {
2337:TP2824/TP2802.c ****                         if( mode[i] & FLAG_MEGA_MODE )
2338:TP2824/TP2802.c ****                         {
2339:TP2824/TP2802.c ****                             tp28xx_byte_write(0x07, 0x80|(gain/3));  // manual mode
2340:TP2824/TP2802.c ****                         }
ARM GAS  /tmp/ccSTfybG.s 			page 80


2341:TP2824/TP2802.c ****                     }
2342:TP2824/TP2802.c **** 		      if(mode[i] == NTSC) //20200408 cvbs night no burst
2343:TP2824/TP2802.c **** 			  	printf("CVBS NTSC   mode\r\n");
2344:TP2824/TP2802.c **** 		      else if(mode[i] == PAL) //20200408 cvbs night no burst
2345:TP2824/TP2802.c **** 			  	printf("CVBS PAL   mode\r\n");
2346:TP2824/TP2802.c **** 		      else
2347:TP2824/TP2802.c ****                     printf("LINE=%d,TVI Mode\r\n",__LINE__ );
2348:TP2824/TP2802.c ****                     //gRxLoopFlg = 0 ;
2349:TP2824/TP2802.c ****                 }
2350:TP2824/TP2802.c ****             }
2351:TP2824/TP2802.c ****             else if(EQ_COUNT+1 == count[i])
2352:TP2824/TP2802.c ****             {
2353:TP2824/TP2802.c ****                 if( TVI != std[i] )
2354:TP2824/TP2802.c ****                 {
2355:TP2824/TP2802.c ****                     ManualAGC(i);
2356:TP2824/TP2802.c ****                     SetCGain(0x0c);
2357:TP2824/TP2802.c ****                 }
2358:TP2824/TP2802.c ****                 else //TVI
2359:TP2824/TP2802.c ****                 {
2360:TP2824/TP2802.c ****                     if( TP2833 == chip || TP2834 == chip)
2361:TP2824/TP2802.c ****                     {
2362:TP2824/TP2802.c ****                         if( mode[i] & FLAG_MEGA_MODE )
2363:TP2824/TP2802.c ****                         {
2364:TP2824/TP2802.c ****                             SetCGain(0x16);
2365:TP2824/TP2802.c ****                         }
2366:TP2824/TP2802.c ****                     }
2367:TP2824/TP2802.c ****                 }
2368:TP2824/TP2802.c ****             }
2369:TP2824/TP2802.c **** 	     else if(EQ_COUNT+2 == count[i])//cocrx
2370:TP2824/TP2802.c ****             {	
2371:TP2824/TP2802.c ****             		if(state[i] == VIDEO_LOCKED)
2372:TP2824/TP2802.c ****             		{
2373:TP2824/TP2802.c **** 	            		tcByte *ptr_TP2824C;
2374:TP2824/TP2802.c **** 				if( TVI == std[i] )
2375:TP2824/TP2802.c **** 				{
2376:TP2824/TP2802.c **** 					if(mode[i]==NTSC || mode[i]==PAL)
2377:TP2824/TP2802.c **** 					{
2378:TP2824/TP2802.c **** 						ptr_TP2824C=TP2824C_CVBS_PTZ_DataSet;
2379:TP2824/TP2802.c **** 					}
2380:TP2824/TP2802.c **** 					else
2381:TP2824/TP2802.c **** 					{
2382:TP2824/TP2802.c **** 						ptr_TP2824C=TP2824C_TVI_FHD_PTZ_DataSet;
2383:TP2824/TP2802.c **** 					}
2384:TP2824/TP2802.c **** 					
2385:TP2824/TP2802.c **** 					I2CDeviceSet1( ptr_TP2824C );
2386:TP2824/TP2802.c **** 					
2387:TP2824/TP2802.c **** 					if(mode[i] == R1080P30 || mode[i] == R1080P25)
2388:TP2824/TP2802.c **** 					{
2389:TP2824/TP2802.c **** 						tp28xx_byte_write(0xc6, 0x19);
2390:TP2824/TP2802.c **** 					}
2391:TP2824/TP2802.c **** 					
2392:TP2824/TP2802.c **** 					tp28xx_byte_write(0x40, i);
2393:TP2824/TP2802.c **** 					
2394:TP2824/TP2802.c **** 					tp28xx_byte_write(0xbe, 0x80);
2395:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB6);
2396:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB5);
2397:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB4);
ARM GAS  /tmp/ccSTfybG.s 			page 81


2398:TP2824/TP2802.c **** 
2399:TP2824/TP2802.c **** 				
2400:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x00);
2401:TP2824/TP2802.c **** 					delay(1);//5ms
2402:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x83);
2403:TP2824/TP2802.c **** 					
2404:TP2824/TP2802.c **** 					if(mode[i]==R1080P30 || mode[i]==R1080P25)
2405:TP2824/TP2802.c **** 					{
2406:TP2824/TP2802.c **** 						PtzTxChNum=i;
2407:TP2824/TP2802.c **** 						printf("EQdet %d\r\n",  PtzTxChNum);
2408:TP2824/TP2802.c **** 					}
2409:TP2824/TP2802.c **** 					
2410:TP2824/TP2802.c **** 				}
2411:TP2824/TP2802.c **** 
2412:TP2824/TP2802.c **** 				if( HDA == std[i] )
2413:TP2824/TP2802.c **** 				{
2414:TP2824/TP2802.c **** 					#if 1
2415:TP2824/TP2802.c **** 						#if 1
2416:TP2824/TP2802.c **** 						Init_COC_PTZOUT1();
2417:TP2824/TP2802.c **** 						//#else
2418:TP2824/TP2802.c **** 						ptr_TP2824C=TP2824C_AHD_FHD_PTZ_DataSet;
2419:TP2824/TP2802.c **** 						I2CDeviceSet1( ptr_TP2824C );
2420:TP2824/TP2802.c **** 					
2421:TP2824/TP2802.c **** 						tp28xx_byte_write(0x40, i);
2422:TP2824/TP2802.c **** 							tp28xx_byte_write(0x40,0x04);
2423:TP2824/TP2802.c **** 						tp28xx_byte_write(0xbe, 0x80);
2424:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB6);
2425:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB5);
2426:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB4);
2427:TP2824/TP2802.c **** 
2428:TP2824/TP2802.c **** 					
2429:TP2824/TP2802.c **** 						tp28xx_byte_write(0xa7, 0x24);
2430:TP2824/TP2802.c **** 						delay(1);//5ms
2431:TP2824/TP2802.c **** 						tp28xx_byte_write(0xa7, 0xA7);
2432:TP2824/TP2802.c **** 						#endif
2433:TP2824/TP2802.c **** 				
2434:TP2824/TP2802.c **** 					#else
2435:TP2824/TP2802.c **** 
2436:TP2824/TP2802.c **** 					TP2824_PTZ_init();
2437:TP2824/TP2802.c **** 					 TP2824C_RX_init(0, 0);
2438:TP2824/TP2802.c **** 					//TP2824_PTZ_mode(0,0);
2439:TP2824/TP2802.c **** 					TP2824C_PTZ_mode(0,0,0);
2440:TP2824/TP2802.c **** 					
2441:TP2824/TP2802.c **** 					
2442:TP2824/TP2802.c **** 					#endif
2443:TP2824/TP2802.c **** 					
2444:TP2824/TP2802.c **** 					printf("\r\nAHD COC Ready CH=%d\r\n",  PtzTxChNum);
2445:TP2824/TP2802.c **** 				}
2446:TP2824/TP2802.c **** 
2447:TP2824/TP2802.c **** 				if( HDC == std[i] )
2448:TP2824/TP2802.c **** 				{
2449:TP2824/TP2802.c **** 					ptr_TP2824C=TP2824C_CVIHD_PTZ_DataSet;
2450:TP2824/TP2802.c **** 					I2CDeviceSet1( ptr_TP2824C );
2451:TP2824/TP2802.c **** 				
2452:TP2824/TP2802.c **** 					tp28xx_byte_write(0x40, i);
2453:TP2824/TP2802.c **** 					tp28xx_byte_write(0xbe, 0x80);
2454:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB6);
ARM GAS  /tmp/ccSTfybG.s 			page 82


2455:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB5);
2456:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB4);
2457:TP2824/TP2802.c **** 
2458:TP2824/TP2802.c **** 				
2459:TP2824/TP2802.c **** 					tp28xx_byte_read(0xA4);
2460:TP2824/TP2802.c **** 					tp28xx_byte_read(0xA2);
2461:TP2824/TP2802.c **** 					tp28xx_byte_read(0xA3);
2462:TP2824/TP2802.c **** 					
2463:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x00);
2464:TP2824/TP2802.c **** 					delay(1);//5ms
2465:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x83);
2466:TP2824/TP2802.c **** 
2467:TP2824/TP2802.c **** 
2468:TP2824/TP2802.c **** 					
2469:TP2824/TP2802.c **** 				}
2470:TP2824/TP2802.c **** 
2471:TP2824/TP2802.c **** 			#if 0
2472:TP2824/TP2802.c **** 		if((std[i]==TVI)&&(mode[i]!=NTSC) &&( mode[i]!=PAL)&& (state[i]==VIDEO_LOCKED))
2473:TP2824/TP2802.c **** 			   {
2474:TP2824/TP2802.c **** 
2475:TP2824/TP2802.c **** 			/*
2476:TP2824/TP2802.c **** 				   
2477:TP2824/TP2802.c **** 		 	SetCOCCom(_COCOSD_BOX_Sel,i);  
2478:TP2824/TP2802.c **** 	 	 	SetCOCCom(_COCOSD_BOXONLINE,0); 
2479:TP2824/TP2802.c **** 			 Get_2824cIrq();
2480:TP2824/TP2802.c **** 
2481:TP2824/TP2802.c **** 			 msleep(50);
2482:TP2824/TP2802.c **** 			 
2483:TP2824/TP2802.c **** 			 SetCOCCom(_COCOSD_BOX_Channel_Sel,5); 
2484:TP2824/TP2802.c **** 			// COCSelectModeType=5;
2485:TP2824/TP2802.c **** 			 Get_2824cIrq();
2486:TP2824/TP2802.c **** 			msleep(50);
2487:TP2824/TP2802.c **** */		
2488:TP2824/TP2802.c **** 
2489:TP2824/TP2802.c **** 			 BOX_ISSUE=0;
2490:TP2824/TP2802.c **** 
2491:TP2824/TP2802.c **** 			 MCUTimerCancelTimerEvent( _SYSTEM_TIMER_EVENT_TVI_BOX_Set);		 
2492:TP2824/TP2802.c **** 			MCUTimerActiveTimerEvent(SEC(0.5), _SYSTEM_TIMER_EVENT_TVI_BOX_Set);
2493:TP2824/TP2802.c **** 			
2494:TP2824/TP2802.c **** 		
2495:TP2824/TP2802.c **** 			   }
2496:TP2824/TP2802.c **** 			#endif
2497:TP2824/TP2802.c ****      			}
2498:TP2824/TP2802.c ****             }	
2499:TP2824/TP2802.c ****         }
2500:TP2824/TP2802.c ****     }
2501:TP2824/TP2802.c **** }
2502:TP2824/TP2802.c **** #if 0
2503:TP2824/TP2802.c **** void TVI_BOX_Set(void)
2504:TP2824/TP2802.c **** {
2505:TP2824/TP2802.c **** BYTE i;
2506:TP2824/TP2802.c **** 
2507:TP2824/TP2802.c **** 	//TriggerHandler(CheckTrigger());
2508:TP2824/TP2802.c **** 
2509:TP2824/TP2802.c **** 	for(i=0;i<4;i++)
2510:TP2824/TP2802.c **** 	{
2511:TP2824/TP2802.c **** 			
ARM GAS  /tmp/ccSTfybG.s 			page 83


2512:TP2824/TP2802.c **** 					if((std[i]==TVI)&&(mode[i]!=NTSC) &&( mode[i]!=PAL)&& (state[i] == VIDEO_LOCKED))
2513:TP2824/TP2802.c **** 					   {
2514:TP2824/TP2802.c **** 					  
2515:TP2824/TP2802.c **** 				 	SetCOCCom(_COCOSD_BOX_Sel,i);  
2516:TP2824/TP2802.c **** 			 	 	SetCOCCom(_COCOSD_BOXONLINE,0); 
2517:TP2824/TP2802.c **** 					 Get_2824cIrq();
2518:TP2824/TP2802.c **** 								 
2519:TP2824/TP2802.c **** 					 SetCOCCom(_COCOSD_BOX_Channel_Sel,5); 
2520:TP2824/TP2802.c **** 					 COCSelectModeType[SelectModeType]=5;
2521:TP2824/TP2802.c **** 					 Get_2824cIrq();		 
2522:TP2824/TP2802.c **** 					
2523:TP2824/TP2802.c **** 						}
2524:TP2824/TP2802.c **** 		
2525:TP2824/TP2802.c **** 	}
2526:TP2824/TP2802.c **** }
2527:TP2824/TP2802.c **** #endif
2528:TP2824/TP2802.c **** tByte Det_HLock()
2529:TP2824/TP2802.c **** {
 1948              		.loc 1 2529 0
 1949              		.cfi_startproc
 1950              		@ args = 0, pretend = 0, frame = 0
 1951              		@ frame_needed = 0, uses_anonymous_args = 0
 1952 0000 08B5     		push	{r3, lr}
 1953              	.LCFI16:
 1954              		.cfi_def_cfa_offset 8
 1955              		.cfi_offset 3, -8
 1956              		.cfi_offset 14, -4
2530:TP2824/TP2802.c ****     tByte Reg01;
2531:TP2824/TP2802.c ****     tByte HLOCK;
2532:TP2824/TP2802.c **** 
2533:TP2824/TP2802.c ****     Reg01 = tp28xx_byte_read(0x01);
 1957              		.loc 1 2533 0
 1958 0002 0120     		movs	r0, #1
 1959 0004 FFF7FEFF 		bl	tp28xx_byte_read
 1960              	.LVL286:
2534:TP2824/TP2802.c ****     HLOCK = (Reg01>>5)&0x01;
2535:TP2824/TP2802.c **** 
2536:TP2824/TP2802.c ****     if(HLOCK==1)
 1961              		.loc 1 2536 0
 1962 0008 10F0200F 		tst	r0, #32
 1963 000c 01D1     		bne	.L192
2537:TP2824/TP2802.c ****         return TRUE;
2538:TP2824/TP2802.c ****     else
2539:TP2824/TP2802.c ****         return FALSE;
 1964              		.loc 1 2539 0
 1965 000e 0020     		movs	r0, #0
 1966              	.LVL287:
 1967              	.L189:
2540:TP2824/TP2802.c **** }
 1968              		.loc 1 2540 0
 1969 0010 08BD     		pop	{r3, pc}
 1970              	.LVL288:
 1971              	.L192:
2537:TP2824/TP2802.c ****         return TRUE;
 1972              		.loc 1 2537 0
 1973 0012 0120     		movs	r0, #1
 1974              	.LVL289:
ARM GAS  /tmp/ccSTfybG.s 			page 84


 1975 0014 FCE7     		b	.L189
 1976              		.cfi_endproc
 1977              	.LFE86:
 1979              		.section	.text.Set_ResWithAutoDet,"ax",%progbits
 1980              		.align	1
 1981              		.global	Set_ResWithAutoDet
 1982              		.syntax unified
 1983              		.thumb
 1984              		.thumb_func
 1985              		.fpu softvfp
 1987              	Set_ResWithAutoDet:
 1988              	.LFB87:
2541:TP2824/TP2802.c **** 
2542:TP2824/TP2802.c **** tByte Set_ResWithAutoDet(tByte ch)
2543:TP2824/TP2802.c **** {
 1989              		.loc 1 2543 0
 1990              		.cfi_startproc
 1991              		@ args = 0, pretend = 0, frame = 0
 1992              		@ frame_needed = 0, uses_anonymous_args = 0
 1993              	.LVL290:
 1994 0000 38B5     		push	{r3, r4, r5, lr}
 1995              	.LCFI17:
 1996              		.cfi_def_cfa_offset 16
 1997              		.cfi_offset 3, -16
 1998              		.cfi_offset 4, -12
 1999              		.cfi_offset 5, -8
 2000              		.cfi_offset 14, -4
 2001 0002 0546     		mov	r5, r0
 2002              	.LVL291:
2544:TP2824/TP2802.c ****     tByte VidRes = R1080P30 ;
2545:TP2824/TP2802.c ****     tByte cnt=5;
2546:TP2824/TP2802.c ****     SetRegPage(ch);
 2003              		.loc 1 2546 0
 2004 0004 FFF7FEFF 		bl	SetRegPage
 2005              	.LVL292:
2545:TP2824/TP2802.c ****     SetRegPage(ch);
 2006              		.loc 1 2545 0
 2007 0008 0522     		movs	r2, #5
2547:TP2824/TP2802.c ****     //	printf("\r\nReg40=%02x, Reg01=%02x",(tWord)tp28xx_byte_read(TVII2CAddress,0x40),(tWord)tp28x
2548:TP2824/TP2802.c ****     while(cnt--)
 2008              		.loc 1 2548 0
 2009 000a 00E0     		b	.L194
 2010              	.LVL293:
 2011              	.L195:
2543:TP2824/TP2802.c ****     tByte VidRes = R1080P30 ;
 2012              		.loc 1 2543 0
 2013 000c 2246     		mov	r2, r4
 2014              	.LVL294:
 2015              	.L194:
 2016              		.loc 1 2548 0
 2017 000e 531E     		subs	r3, r2, #1
 2018 0010 DCB2     		uxtb	r4, r3
 2019              	.LVL295:
 2020 0012 8AB1     		cbz	r2, .L200
2549:TP2824/TP2802.c ****     {
2550:TP2824/TP2802.c ****         if(!Det_VideoLoss(ch))
 2021              		.loc 1 2550 0
ARM GAS  /tmp/ccSTfybG.s 			page 85


 2022 0014 2846     		mov	r0, r5
 2023 0016 FFF7FEFF 		bl	Det_VideoLoss
 2024              	.LVL296:
 2025 001a 0028     		cmp	r0, #0
 2026 001c F6D1     		bne	.L195
2551:TP2824/TP2802.c ****         {
2552:TP2824/TP2802.c ****             //for(VidRes=R720P60; VidRes<=R720P25; VidRes++)
2553:TP2824/TP2802.c **** 			//{
2554:TP2824/TP2802.c ****                 Set_VidRes(ch);
 2027              		.loc 1 2554 0
 2028 001e 2846     		mov	r0, r5
 2029 0020 FFF7FEFF 		bl	Set_VidRes
 2030              	.LVL297:
2555:TP2824/TP2802.c ****                 //printf("\r\nVidRes=%02x, Reg01=%02x, Reg03=%02x",(tWord)VidRes,(tWord)tp28xx_byte
2556:TP2824/TP2802.c ****                 if((Det_HLock()== TRUE)&&(Det_VidRes()==VidRes))
 2031              		.loc 1 2556 0
 2032 0024 FFF7FEFF 		bl	Det_HLock
 2033              	.LVL298:
 2034 0028 0128     		cmp	r0, #1
 2035 002a EFD1     		bne	.L195
 2036              		.loc 1 2556 0 is_stmt 0 discriminator 1
 2037 002c FFF7FEFF 		bl	Det_VidRes
 2038              	.LVL299:
 2039 0030 0228     		cmp	r0, #2
 2040 0032 EBD1     		bne	.L195
2557:TP2824/TP2802.c ****                     return TRUE;
 2041              		.loc 1 2557 0 is_stmt 1
 2042 0034 0120     		movs	r0, #1
 2043 0036 03E0     		b	.L196
 2044              	.L200:
2558:TP2824/TP2802.c **** 			//}
2559:TP2824/TP2802.c ****         }
2560:TP2824/TP2802.c ****     }
2561:TP2824/TP2802.c ****     printf("H/V is not locked\r\n");
 2045              		.loc 1 2561 0
 2046 0038 0248     		ldr	r0, .L201
 2047 003a FFF7FEFF 		bl	puts
 2048              	.LVL300:
2562:TP2824/TP2802.c ****     return FALSE;
 2049              		.loc 1 2562 0
 2050 003e 0020     		movs	r0, #0
 2051              	.L196:
2563:TP2824/TP2802.c **** }
 2052              		.loc 1 2563 0
 2053 0040 38BD     		pop	{r3, r4, r5, pc}
 2054              	.LVL301:
 2055              	.L202:
 2056 0042 00BF     		.align	2
 2057              	.L201:
 2058 0044 00000000 		.word	.LC25
 2059              		.cfi_endproc
 2060              	.LFE87:
 2062              		.section	.text.Scan_Channels,"ax",%progbits
 2063              		.align	1
 2064              		.global	Scan_Channels
 2065              		.syntax unified
 2066              		.thumb
ARM GAS  /tmp/ccSTfybG.s 			page 86


 2067              		.thumb_func
 2068              		.fpu softvfp
 2070              	Scan_Channels:
 2071              	.LFB88:
2564:TP2824/TP2802.c **** 
2565:TP2824/TP2802.c **** 
2566:TP2824/TP2802.c **** tByte Scan_Channels()
2567:TP2824/TP2802.c **** {
 2072              		.loc 1 2567 0
 2073              		.cfi_startproc
 2074              		@ args = 0, pretend = 0, frame = 0
 2075              		@ frame_needed = 0, uses_anonymous_args = 0
 2076 0000 70B5     		push	{r4, r5, r6, lr}
 2077              	.LCFI18:
 2078              		.cfi_def_cfa_offset 16
 2079              		.cfi_offset 4, -16
 2080              		.cfi_offset 5, -12
 2081              		.cfi_offset 6, -8
 2082              		.cfi_offset 14, -4
 2083              	.LVL302:
2568:TP2824/TP2802.c ****     tByte ch;
2569:TP2824/TP2802.c ****     tByte Det_ch=0;
2570:TP2824/TP2802.c ****     tByte Sel_ch=0xff;
 2084              		.loc 1 2570 0
 2085 0002 FF26     		movs	r6, #255
2569:TP2824/TP2802.c ****     tByte Sel_ch=0xff;
 2086              		.loc 1 2569 0
 2087 0004 0025     		movs	r5, #0
2571:TP2824/TP2802.c **** 
2572:TP2824/TP2802.c ****     for(ch = CH1; ch<=CH4; ch++)
 2088              		.loc 1 2572 0
 2089 0006 2C46     		mov	r4, r5
 2090 0008 01E0     		b	.L204
 2091              	.LVL303:
 2092              	.L205:
 2093              		.loc 1 2572 0 is_stmt 0 discriminator 2
 2094 000a 0134     		adds	r4, r4, #1
 2095              	.LVL304:
 2096 000c E4B2     		uxtb	r4, r4
 2097              	.LVL305:
 2098              	.L204:
 2099              		.loc 1 2572 0 discriminator 1
 2100 000e 032C     		cmp	r4, #3
 2101 0010 09D8     		bhi	.L209
2573:TP2824/TP2802.c ****     {
2574:TP2824/TP2802.c ****         if(Set_ResWithAutoDet(ch)&&!Det_ch)
 2102              		.loc 1 2574 0 is_stmt 1
 2103 0012 2046     		mov	r0, r4
 2104 0014 FFF7FEFF 		bl	Set_ResWithAutoDet
 2105              	.LVL306:
 2106 0018 0028     		cmp	r0, #0
 2107 001a F6D0     		beq	.L205
 2108              		.loc 1 2574 0 is_stmt 0 discriminator 1
 2109 001c 002D     		cmp	r5, #0
 2110 001e F4D1     		bne	.L205
2575:TP2824/TP2802.c ****         {
2576:TP2824/TP2802.c ****             //Sel_VD_Out(ch);
ARM GAS  /tmp/ccSTfybG.s 			page 87


2577:TP2824/TP2802.c ****             Sel_ch = ch;
 2111              		.loc 1 2577 0 is_stmt 1
 2112 0020 2646     		mov	r6, r4
 2113              	.LVL307:
2578:TP2824/TP2802.c ****             Det_ch = 1;
 2114              		.loc 1 2578 0
 2115 0022 0125     		movs	r5, #1
 2116              	.LVL308:
 2117 0024 F1E7     		b	.L205
 2118              	.LVL309:
 2119              	.L209:
2579:TP2824/TP2802.c ****         }
2580:TP2824/TP2802.c ****     }
2581:TP2824/TP2802.c **** 
2582:TP2824/TP2802.c ****     return Sel_ch;
2583:TP2824/TP2802.c **** }
 2120              		.loc 1 2583 0
 2121 0026 3046     		mov	r0, r6
 2122 0028 70BD     		pop	{r4, r5, r6, pc}
 2123              		.cfi_endproc
 2124              	.LFE88:
 2126              		.section	.text.Set_PLL_StartUp,"ax",%progbits
 2127              		.align	1
 2128              		.global	Set_PLL_StartUp
 2129              		.syntax unified
 2130              		.thumb
 2131              		.thumb_func
 2132              		.fpu softvfp
 2134              	Set_PLL_StartUp:
 2135              	.LFB89:
2584:TP2824/TP2802.c **** 
2585:TP2824/TP2802.c **** void Set_PLL_StartUp()
2586:TP2824/TP2802.c **** {
 2136              		.loc 1 2586 0
 2137              		.cfi_startproc
 2138              		@ args = 0, pretend = 0, frame = 0
 2139              		@ frame_needed = 0, uses_anonymous_args = 0
 2140 0000 10B5     		push	{r4, lr}
 2141              	.LCFI19:
 2142              		.cfi_def_cfa_offset 8
 2143              		.cfi_offset 4, -8
 2144              		.cfi_offset 14, -4
2587:TP2824/TP2802.c ****     tByte PLL_con;
2588:TP2824/TP2802.c ****     PLL_con = tp28xx_byte_read(0x44);
 2145              		.loc 1 2588 0
 2146 0002 4420     		movs	r0, #68
 2147 0004 FFF7FEFF 		bl	tp28xx_byte_read
 2148              	.LVL310:
 2149 0008 0446     		mov	r4, r0
 2150              	.LVL311:
2589:TP2824/TP2802.c ****     tp28xx_byte_write(0x44,(PLL_con|0x40));
 2151              		.loc 1 2589 0
 2152 000a 40F04001 		orr	r1, r0, #64
 2153 000e C9B2     		uxtb	r1, r1
 2154 0010 4420     		movs	r0, #68
 2155              	.LVL312:
 2156 0012 FFF7FEFF 		bl	tp28xx_byte_write
ARM GAS  /tmp/ccSTfybG.s 			page 88


 2157              	.LVL313:
2590:TP2824/TP2802.c ****     tp28xx_byte_write(0x44,(PLL_con&0xbf));
 2158              		.loc 1 2590 0
 2159 0016 04F0BF01 		and	r1, r4, #191
 2160 001a 4420     		movs	r0, #68
 2161 001c FFF7FEFF 		bl	tp28xx_byte_write
 2162              	.LVL314:
2591:TP2824/TP2802.c **** 
2592:TP2824/TP2802.c **** }
 2163              		.loc 1 2592 0
 2164 0020 10BD     		pop	{r4, pc}
 2165              		.cfi_endproc
 2166              	.LFE89:
 2168              		.section	.text.Init_TP280x_RegSet,"ax",%progbits
 2169              		.align	1
 2170              		.global	Init_TP280x_RegSet
 2171              		.syntax unified
 2172              		.thumb
 2173              		.thumb_func
 2174              		.fpu softvfp
 2176              	Init_TP280x_RegSet:
 2177              	.LFB90:
2593:TP2824/TP2802.c **** #if 0
2594:TP2824/TP2802.c **** void Boot_Trigger_Function(BYTE ch)
2595:TP2824/TP2802.c **** {
2596:TP2824/TP2802.c **** 	
2597:TP2824/TP2802.c **** 		Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_std,ch);
2598:TP2824/TP2802.c **** 		 Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_output,ch);
2599:TP2824/TP2802.c **** 		 Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_COC,ch); 
2600:TP2824/TP2802.c **** 		// delay(100);//5ms
2601:TP2824/TP2802.c **** 
2602:TP2824/TP2802.c **** 			count[ch]=23;
2603:TP2824/TP2802.c **** 
2604:TP2824/TP2802.c **** 		 //	SetCOCCom(_COCOSD_BOX_Sel,ch);  
2605:TP2824/TP2802.c **** 	 	 //	SetCOCCom(_COCOSD_BOXONLINE,0); 
2606:TP2824/TP2802.c **** 		//	 Get_2824cIrq();
2607:TP2824/TP2802.c **** }
2608:TP2824/TP2802.c **** #endif
2609:TP2824/TP2802.c **** void Init_TP280x_RegSet()
2610:TP2824/TP2802.c **** {
 2178              		.loc 1 2610 0
 2179              		.cfi_startproc
 2180              		@ args = 0, pretend = 0, frame = 0
 2181              		@ frame_needed = 0, uses_anonymous_args = 0
 2182 0000 38B5     		push	{r3, r4, r5, lr}
 2183              	.LCFI20:
 2184              		.cfi_def_cfa_offset 16
 2185              		.cfi_offset 3, -16
 2186              		.cfi_offset 4, -12
 2187              		.cfi_offset 5, -8
 2188              		.cfi_offset 14, -4
2611:TP2824/TP2802.c **** 
2612:TP2824/TP2802.c ****     tcByte *ptr_TP2802;
2613:TP2824/TP2802.c ****     tByte i/*,val*/;
2614:TP2824/TP2802.c **** 
2615:TP2824/TP2802.c ****     TVII2CAddress = 0x88;
 2189              		.loc 1 2615 0
ARM GAS  /tmp/ccSTfybG.s 			page 89


 2190 0002 644B     		ldr	r3, .L238
 2191 0004 8822     		movs	r2, #136
 2192 0006 1A70     		strb	r2, [r3]
 2193              	.LVL315:
2616:TP2824/TP2802.c ****     //TVII2CAddress = 0x8A;
2617:TP2824/TP2802.c ****     //TVII2CAddress = 0x8C;
2618:TP2824/TP2802.c ****     //TVII2CAddress = 0x8E;
2619:TP2824/TP2802.c **** 
2620:TP2824/TP2802.c ****     for(i=0; i<4; i++)
 2194              		.loc 1 2620 0
 2195 0008 0024     		movs	r4, #0
 2196              	.LVL316:
 2197              	.L213:
 2198              		.loc 1 2620 0 is_stmt 0 discriminator 1
 2199 000a 032C     		cmp	r4, #3
 2200 000c 0DD8     		bhi	.L214
2621:TP2824/TP2802.c ****     {
2622:TP2824/TP2802.c ****         if(0x28 == tp28xx_byte_read(0xfe)) break;
 2201              		.loc 1 2622 0 is_stmt 1
 2202 000e FE20     		movs	r0, #254
 2203 0010 FFF7FEFF 		bl	tp28xx_byte_read
 2204              	.LVL317:
 2205 0014 2828     		cmp	r0, #40
 2206 0016 08D0     		beq	.L214
2623:TP2824/TP2802.c ****         TVII2CAddress++;
 2207              		.loc 1 2623 0 discriminator 2
 2208 0018 5E4A     		ldr	r2, .L238
 2209 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2210 001c 0133     		adds	r3, r3, #1
 2211 001e DBB2     		uxtb	r3, r3
2624:TP2824/TP2802.c ****         TVII2CAddress++;
 2212              		.loc 1 2624 0 discriminator 2
 2213 0020 0133     		adds	r3, r3, #1
 2214 0022 1370     		strb	r3, [r2]
2620:TP2824/TP2802.c ****     {
 2215              		.loc 1 2620 0 discriminator 2
 2216 0024 0134     		adds	r4, r4, #1
 2217              	.LVL318:
 2218 0026 E4B2     		uxtb	r4, r4
 2219              	.LVL319:
 2220 0028 EFE7     		b	.L213
 2221              	.L214:
2625:TP2824/TP2802.c ****     }
2626:TP2824/TP2802.c **** 
2627:TP2824/TP2802.c ****     chip = tp28xx_byte_read(0xff);
 2222              		.loc 1 2627 0
 2223 002a FF20     		movs	r0, #255
 2224 002c FFF7FEFF 		bl	tp28xx_byte_read
 2225              	.LVL320:
 2226 0030 594C     		ldr	r4, .L238+4
 2227              	.LVL321:
 2228 0032 2070     		strb	r0, [r4]
2628:TP2824/TP2802.c **** 
2629:TP2824/TP2802.c ****     revision = tp28xx_byte_read(0xfd);
 2229              		.loc 1 2629 0
 2230 0034 FD20     		movs	r0, #253
 2231 0036 FFF7FEFF 		bl	tp28xx_byte_read
ARM GAS  /tmp/ccSTfybG.s 			page 90


 2232              	.LVL322:
2630:TP2824/TP2802.c ****     revision &= 0x07;
 2233              		.loc 1 2630 0
 2234 003a 00F00702 		and	r2, r0, #7
 2235 003e 574B     		ldr	r3, .L238+8
 2236 0040 1A70     		strb	r2, [r3]
2631:TP2824/TP2802.c **** 
2632:TP2824/TP2802.c ****     printf("\r\nchip %02x revision %02x\r\n", (tWord)chip,(tWord)revision);
 2237              		.loc 1 2632 0
 2238 0042 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 2239 0044 5648     		ldr	r0, .L238+12
 2240 0046 FFF7FEFF 		bl	printf
 2241              	.LVL323:
2633:TP2824/TP2802.c ****     flag_CVBS = 0;
 2242              		.loc 1 2633 0
 2243 004a 0023     		movs	r3, #0
 2244 004c 554A     		ldr	r2, .L238+16
 2245 004e 1360     		str	r3, [r2]
2634:TP2824/TP2802.c ****     flag_AUDIO = 0;
 2246              		.loc 1 2634 0
 2247 0050 554A     		ldr	r2, .L238+20
 2248 0052 1360     		str	r3, [r2]
2635:TP2824/TP2802.c ****     flag_MEGA = 0;
 2249              		.loc 1 2635 0
 2250 0054 554A     		ldr	r2, .L238+24
 2251 0056 1360     		str	r3, [r2]
 2252              	.LVL324:
2636:TP2824/TP2802.c **** 	ptr_TP2802 = TP2824C_DataSet; //def  chunyu
2637:TP2824/TP2802.c ****     switch(chip)
 2253              		.loc 1 2637 0
 2254 0058 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2255 005a 023B     		subs	r3, r3, #2
 2256 005c 252B     		cmp	r3, #37
 2257 005e 70D8     		bhi	.L216
 2258 0060 DFE803F0 		tbb	[pc, r3]
 2259              	.L218:
 2260 0064 13       		.byte	(.L217-.L218)/2
 2261 0065 6F       		.byte	(.L216-.L218)/2
 2262 0066 13       		.byte	(.L217-.L218)/2
 2263 0067 6F       		.byte	(.L216-.L218)/2
 2264 0068 6F       		.byte	(.L216-.L218)/2
 2265 0069 6F       		.byte	(.L216-.L218)/2
 2266 006a 6F       		.byte	(.L216-.L218)/2
 2267 006b 6F       		.byte	(.L216-.L218)/2
 2268 006c 6F       		.byte	(.L216-.L218)/2
 2269 006d 6F       		.byte	(.L216-.L218)/2
 2270 006e 6F       		.byte	(.L216-.L218)/2
 2271 006f 6F       		.byte	(.L216-.L218)/2
 2272 0070 6F       		.byte	(.L216-.L218)/2
 2273 0071 6F       		.byte	(.L216-.L218)/2
 2274 0072 6F       		.byte	(.L216-.L218)/2
 2275 0073 6F       		.byte	(.L216-.L218)/2
 2276 0074 6F       		.byte	(.L216-.L218)/2
 2277 0075 6F       		.byte	(.L216-.L218)/2
 2278 0076 6F       		.byte	(.L216-.L218)/2
 2279 0077 6F       		.byte	(.L216-.L218)/2
 2280 0078 6F       		.byte	(.L216-.L218)/2
ARM GAS  /tmp/ccSTfybG.s 			page 91


 2281 0079 6F       		.byte	(.L216-.L218)/2
 2282 007a 6F       		.byte	(.L216-.L218)/2
 2283 007b 6F       		.byte	(.L216-.L218)/2
 2284 007c 6F       		.byte	(.L216-.L218)/2
 2285 007d 6F       		.byte	(.L216-.L218)/2
 2286 007e 6F       		.byte	(.L216-.L218)/2
 2287 007f 6F       		.byte	(.L216-.L218)/2
 2288 0080 6F       		.byte	(.L216-.L218)/2
 2289 0081 6F       		.byte	(.L216-.L218)/2
 2290 0082 6F       		.byte	(.L216-.L218)/2
 2291 0083 6F       		.byte	(.L216-.L218)/2
 2292 0084 13       		.byte	(.L217-.L218)/2
 2293 0085 34       		.byte	(.L219-.L218)/2
 2294 0086 44       		.byte	(.L220-.L218)/2
 2295 0087 6F       		.byte	(.L216-.L218)/2
 2296 0088 4B       		.byte	(.L221-.L218)/2
 2297 0089 5F       		.byte	(.L222-.L218)/2
 2298              		.p2align 1
 2299              	.L217:
2638:TP2824/TP2802.c ****     {
2639:TP2824/TP2802.c **** 
2640:TP2824/TP2802.c ****     case TP2802C:
2641:TP2824/TP2802.c ****     case TP2804:
2642:TP2824/TP2802.c ****     case TP2822:
2643:TP2824/TP2802.c ****         printf("EOL ID\r\n");
 2300              		.loc 1 2643 0
 2301 008a 4948     		ldr	r0, .L238+28
 2302 008c FFF7FEFF 		bl	puts
 2303              	.LVL325:
2636:TP2824/TP2802.c **** 	ptr_TP2802 = TP2824C_DataSet; //def  chunyu
 2304              		.loc 1 2636 0
 2305 0090 484C     		ldr	r4, .L238+32
 2306              	.LVL326:
 2307              	.L223:
2644:TP2824/TP2802.c ****         break;
2645:TP2824/TP2802.c **** 
2646:TP2824/TP2802.c ****     case TP2823:
2647:TP2824/TP2802.c ****         flag_CVBS = 1;
2648:TP2824/TP2802.c ****         flag_AUDIO = 1;
2649:TP2824/TP2802.c ****         if(0x01 == revision)
2650:TP2824/TP2802.c ****         {
2651:TP2824/TP2802.c ****             chip=TP2833;
2652:TP2824/TP2802.c ****             ptr_TP2802 = TP2833_DataSet;
2653:TP2824/TP2802.c ****         }
2654:TP2824/TP2802.c ****         else
2655:TP2824/TP2802.c ****         {
2656:TP2824/TP2802.c ****             ptr_TP2802 = TP2823_DataSet;
2657:TP2824/TP2802.c ****         }
2658:TP2824/TP2802.c ****         break;
2659:TP2824/TP2802.c **** 
2660:TP2824/TP2802.c ****     case TP2834:
2661:TP2824/TP2802.c ****         flag_CVBS = 1;
2662:TP2824/TP2802.c ****         flag_AUDIO = 1;
2663:TP2824/TP2802.c ****         ptr_TP2802 = TP2834_DataSet;
2664:TP2824/TP2802.c ****         break;
2665:TP2824/TP2802.c **** 
2666:TP2824/TP2802.c ****     case TP2853C:
ARM GAS  /tmp/ccSTfybG.s 			page 92


2667:TP2824/TP2802.c ****         flag_CVBS = 1;
2668:TP2824/TP2802.c ****         flag_AUDIO = 1;
2669:TP2824/TP2802.c **** 
2670:TP2824/TP2802.c ****         if(0x01 == revision)
2671:TP2824/TP2802.c ****         {
2672:TP2824/TP2802.c ****             chip=TP2826;
2673:TP2824/TP2802.c ****             //flag_MEGA = 1;
2674:TP2824/TP2802.c **** 			flag_MEGA = 0;  //chunyu 
2675:TP2824/TP2802.c ****             ptr_TP2802 = TP2826_DataSet;
2676:TP2824/TP2802.c ****         }
2677:TP2824/TP2802.c ****         else if(0x00 == revision)
2678:TP2824/TP2802.c ****         {
2679:TP2824/TP2802.c ****             flag_MEGA = 1;
2680:TP2824/TP2802.c ****             ptr_TP2802 = TP2853C_DataSet;
2681:TP2824/TP2802.c ****         }
2682:TP2824/TP2802.c ****         else
2683:TP2824/TP2802.c ****         {
2684:TP2824/TP2802.c ****             ptr_TP2802 = TP2853C_DataSet;
2685:TP2824/TP2802.c ****         }
2686:TP2824/TP2802.c ****         break;
2687:TP2824/TP2802.c **** 
2688:TP2824/TP2802.c ****     case TP2824C:
2689:TP2824/TP2802.c ****         flag_CVBS = 1;
2690:TP2824/TP2802.c ****         flag_AUDIO = 1;
2691:TP2824/TP2802.c **** 
2692:TP2824/TP2802.c ****         if(0x04 == revision)
2693:TP2824/TP2802.c ****         {
2694:TP2824/TP2802.c ****             //flag_MEGA = 1;
2695:TP2824/TP2802.c **** 			flag_MEGA = 0 ; //chunyu
2696:TP2824/TP2802.c ****             ptr_TP2802 = TP2824C_DataSet;
2697:TP2824/TP2802.c ****             printf("TP2824C test\r\n");
2698:TP2824/TP2802.c ****         }
2699:TP2824/TP2802.c ****         break;
2700:TP2824/TP2802.c **** 
2701:TP2824/TP2802.c ****     default:		
2702:TP2824/TP2802.c ****         printf("unknown ID\r\n");
2703:TP2824/TP2802.c ****         break;
2704:TP2824/TP2802.c ****     }
2705:TP2824/TP2802.c **** 
2706:TP2824/TP2802.c ****     Set_PLL_StartUp();
 2308              		.loc 1 2706 0
 2309 0092 FFF7FEFF 		bl	Set_PLL_StartUp
 2310              	.LVL327:
2707:TP2824/TP2802.c **** 
2708:TP2824/TP2802.c ****     I2CDeviceSet1( ptr_TP2802 );
 2311              		.loc 1 2708 0
 2312 0096 2046     		mov	r0, r4
 2313 0098 FFF7FEFF 		bl	I2CDeviceSet1
 2314              	.LVL328:
2709:TP2824/TP2802.c **** 
2710:TP2824/TP2802.c ****     if(flag_AUDIO)	I2CDeviceSet1( TP2834_Audio_DataSet );
 2315              		.loc 1 2710 0
 2316 009c 424B     		ldr	r3, .L238+20
 2317 009e 1B68     		ldr	r3, [r3]
 2318 00a0 002B     		cmp	r3, #0
 2319 00a2 55D1     		bne	.L233
 2320              	.L225:
ARM GAS  /tmp/ccSTfybG.s 			page 93


2711:TP2824/TP2802.c **** /*
2712:TP2824/TP2802.c ****     mode[CH1]= R1080P25;	//chunyu
2713:TP2824/TP2802.c ****     mode[CH2]= R1080P25;
2714:TP2824/TP2802.c ****     mode[CH3]= R1080P25;
2715:TP2824/TP2802.c ****     mode[CH4]= R1080P25;
2716:TP2824/TP2802.c **** 	
2717:TP2824/TP2802.c **** 
2718:TP2824/TP2802.c **** 	//mode[CH1]= R720P25;	
2719:TP2824/TP2802.c **** 	//mode[CH1]= R1080P25;	
2720:TP2824/TP2802.c ****    Set_VidRes(CH1);
2721:TP2824/TP2802.c **** */
2722:TP2824/TP2802.c **** //    Set_VidRes(CH2);
2723:TP2824/TP2802.c **** //    Set_VidRes(CH3);
2724:TP2824/TP2802.c **** //    Set_VidRes(CH4);
2725:TP2824/TP2802.c **** //	mode[CH3]= NoDet;	//chunyu
2726:TP2824/TP2802.c **** //	Set_VidRes(CH3);	
2727:TP2824/TP2802.c **** //msleep(2000);//ryan@20200622
2728:TP2824/TP2802.c **** 	
2729:TP2824/TP2802.c ****     //CurRes=RES1920X1080;
2730:TP2824/TP2802.c **** 	//CurRes=RES1280X720;
2731:TP2824/TP2802.c **** #if  0
2732:TP2824/TP2802.c **** 
2733:TP2824/TP2802.c **** 	CurRes=RES1920X1080;
2734:TP2824/TP2802.c **** 
2735:TP2824/TP2802.c **** 		val=CheckTrigger();
2736:TP2824/TP2802.c **** 
2737:TP2824/TP2802.c **** 		if(val)
2738:TP2824/TP2802.c **** 		{
2739:TP2824/TP2802.c **** 			TriggerHandler(CheckTrigger());
2740:TP2824/TP2802.c **** 
2741:TP2824/TP2802.c **** 			if((VideoSave[(TriggerStatus-1)] ==_TRUE))
2742:TP2824/TP2802.c **** 			{
2743:TP2824/TP2802.c **** 			Boot_Trigger_Function((TriggerStatus-1));
2744:TP2824/TP2802.c **** 
2745:TP2824/TP2802.c **** 				if(Flisheye_CAM[(TriggerStatus-1)]==TRUE)
2746:TP2824/TP2802.c **** 				{
2747:TP2824/TP2802.c **** 				TriggerMode=0;
2748:TP2824/TP2802.c **** 				TriggerHandler(CheckTrigger());
2749:TP2824/TP2802.c **** 				}
2750:TP2824/TP2802.c **** 			}
2751:TP2824/TP2802.c **** 			// if(PowerFlag==ON)///power on
2752:TP2824/TP2802.c **** 			BackLightON(); 
2753:TP2824/TP2802.c **** 		}
2754:TP2824/TP2802.c **** 
2755:TP2824/TP2802.c **** 
2756:TP2824/TP2802.c ****   	for( i = 0; i < CH_PER_CHIP; i++)
2757:TP2824/TP2802.c ****   {
2758:TP2824/TP2802.c **** 
2759:TP2824/TP2802.c ****   		if(INPUT_VIDEO_CHECK(i)||(TriggerStatus==(i+1)))
2760:TP2824/TP2802.c **** 		{
2761:TP2824/TP2802.c ****         	continue;
2762:TP2824/TP2802.c **** 		}
2763:TP2824/TP2802.c **** 
2764:TP2824/TP2802.c **** 	  
2765:TP2824/TP2802.c **** 	if( VideoSave[i] ==_TRUE)
2766:TP2824/TP2802.c **** 	{
2767:TP2824/TP2802.c **** 	/*
ARM GAS  /tmp/ccSTfybG.s 			page 94


2768:TP2824/TP2802.c **** 	  count[i] =0;
2769:TP2824/TP2802.c **** 	  state[i] =VIDEO_IN;//VIDEO_IN;//VIDEO_IN;//VIDEO_LOCKED;
2770:TP2824/TP2802.c **** //	  std[i] = 0x02;///ReadEEP(EEP_TP2824_STD0+(i*2));
2771:TP2824/TP2802.c **** //	  mode[i] = NTSC;///ReadEEP(EEP_TP2824_STD0+(i*2)+1);
2772:TP2824/TP2802.c **** 	  std[i] = ReadEEP(EEP_TP2824_STD0+(i*3));
2773:TP2824/TP2802.c **** 	  mode[i] = ReadEEP(EEP_TP2824_STD0+(i*3)+1);
2774:TP2824/TP2802.c **** 	  */
2775:TP2824/TP2802.c **** 	  Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_std,i);
2776:TP2824/TP2802.c **** 	 Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_output,i);
2777:TP2824/TP2802.c **** 
2778:TP2824/TP2802.c **** /*
2779:TP2824/TP2802.c **** 	if(std[i]==HDC)
2780:TP2824/TP2802.c **** 		{
2781:TP2824/TP2802.c **** 		Set_HDC(i);
2782:TP2824/TP2802.c **** 		printf("(Set_HDC)");
2783:TP2824/TP2802.c **** 		}
2784:TP2824/TP2802.c **** 	 if(std[i]==HDA)
2785:TP2824/TP2802.c **** 	 	{
2786:TP2824/TP2802.c **** 	 	Set_HDA(i);
2787:TP2824/TP2802.c **** 		printf("(Set_HDA)");
2788:TP2824/TP2802.c **** 	 	}
2789:TP2824/TP2802.c **** */
2790:TP2824/TP2802.c **** 	 // SetRegPage(i);
2791:TP2824/TP2802.c **** 	//  Set_VidRes(i);
2792:TP2824/TP2802.c **** 
2793:TP2824/TP2802.c ****   		}
2794:TP2824/TP2802.c **** 	else
2795:TP2824/TP2802.c **** 		{		
2796:TP2824/TP2802.c **** 		count[i] = 0;
2797:TP2824/TP2802.c **** 		state[i] = VIDEO_UNPLUG;
2798:TP2824/TP2802.c **** 		std[i] = TVI;
2799:TP2824/TP2802.c **** 		mode[i] = NoDet;///R1080P30/*NoDet*/;
2800:TP2824/TP2802.c **** 		//Set_VidRes(i);
2801:TP2824/TP2802.c **** 		// TP28xx_reset_default(chip, i);
2802:TP2824/TP2802.c **** 		}
2803:TP2824/TP2802.c **** 	 // newInRes[i] = _OSD_720X480P60 ;
2804:TP2824/TP2802.c **** 					
2805:TP2824/TP2802.c ****   }
2806:TP2824/TP2802.c **** 
2807:TP2824/TP2802.c ****  for( i = 0; i <CH_PER_CHIP; i++)
2808:TP2824/TP2802.c ****   {
2809:TP2824/TP2802.c **** 
2810:TP2824/TP2802.c ****   		if((INPUT_VIDEO_CHECK(i)==0))
2811:TP2824/TP2802.c **** 		{
2812:TP2824/TP2802.c ****         	continue;
2813:TP2824/TP2802.c **** 		}
2814:TP2824/TP2802.c ****   
2815:TP2824/TP2802.c **** 	if( VideoSave[i] ==_TRUE)
2816:TP2824/TP2802.c **** 	{
2817:TP2824/TP2802.c **** 	/*
2818:TP2824/TP2802.c **** 	  count[i] =0;
2819:TP2824/TP2802.c **** 	  state[i] =VIDEO_IN;//VIDEO_IN;//VIDEO_IN;//VIDEO_LOCKED;
2820:TP2824/TP2802.c **** //	  std[i] = 0x02;///ReadEEP(EEP_TP2824_STD0+(i*2));
2821:TP2824/TP2802.c **** //	  mode[i] = NTSC;///ReadEEP(EEP_TP2824_STD0+(i*2)+1);
2822:TP2824/TP2802.c **** 	  std[i] = ReadEEP(EEP_TP2824_STD0+(i*3));
2823:TP2824/TP2802.c **** 	  mode[i] = ReadEEP(EEP_TP2824_STD0+(i*3)+1);
2824:TP2824/TP2802.c **** 	  */
ARM GAS  /tmp/ccSTfybG.s 			page 95


2825:TP2824/TP2802.c **** 	  Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_std,i);
2826:TP2824/TP2802.c **** 	 Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_output,i);
2827:TP2824/TP2802.c **** /*
2828:TP2824/TP2802.c **** 	if(std[i]==HDC)
2829:TP2824/TP2802.c **** 		{
2830:TP2824/TP2802.c **** 		Set_HDC(i);
2831:TP2824/TP2802.c **** 		printf("(Set_HDC)");
2832:TP2824/TP2802.c **** 		}
2833:TP2824/TP2802.c **** 	 if(std[i]==HDA)
2834:TP2824/TP2802.c **** 	 	{
2835:TP2824/TP2802.c **** 	 	Set_HDA(i);
2836:TP2824/TP2802.c **** 		printf("(Set_HDA)");
2837:TP2824/TP2802.c **** 	 	}
2838:TP2824/TP2802.c **** */
2839:TP2824/TP2802.c **** 	 // SetRegPage(i);
2840:TP2824/TP2802.c **** 	//  Set_VidRes(i);
2841:TP2824/TP2802.c **** 
2842:TP2824/TP2802.c ****   		}
2843:TP2824/TP2802.c **** 	else
2844:TP2824/TP2802.c **** 		{		
2845:TP2824/TP2802.c **** 		count[i] = 0;
2846:TP2824/TP2802.c **** 		state[i] = VIDEO_UNPLUG;
2847:TP2824/TP2802.c **** 		std[i] = TVI;
2848:TP2824/TP2802.c **** 		mode[i] = NoDet;///R1080P30/*NoDet*/;
2849:TP2824/TP2802.c **** 		//Set_VidRes(i);
2850:TP2824/TP2802.c **** 		// TP28xx_reset_default(chip, i);
2851:TP2824/TP2802.c **** 		}
2852:TP2824/TP2802.c **** 	 // newInRes[i] = _OSD_720X480P60 ;
2853:TP2824/TP2802.c ****   }
2854:TP2824/TP2802.c **** /*
2855:TP2824/TP2802.c ****    for( i = 0; i <CH_PER_CHIP; i++)
2856:TP2824/TP2802.c ****   {
2857:TP2824/TP2802.c **** 	if( VideoSave[i] ==_TRUE)
2858:TP2824/TP2802.c **** 	{
2859:TP2824/TP2802.c **** 	Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_output,i);
2860:TP2824/TP2802.c **** 	}
2861:TP2824/TP2802.c **** 
2862:TP2824/TP2802.c ****    }
2863:TP2824/TP2802.c ****    */
2864:TP2824/TP2802.c ****  
2865:TP2824/TP2802.c **** 
2866:TP2824/TP2802.c **** #else
2867:TP2824/TP2802.c **** 
2868:TP2824/TP2802.c **** 		mode[CH1]= R1080P25;	//chunyu
 2321              		.loc 1 2868 0
 2322 00a4 444B     		ldr	r3, .L238+36
 2323 00a6 0322     		movs	r2, #3
 2324 00a8 1A70     		strb	r2, [r3]
2869:TP2824/TP2802.c **** 		mode[CH2]= R1080P25;
 2325              		.loc 1 2869 0
 2326 00aa 5A70     		strb	r2, [r3, #1]
2870:TP2824/TP2802.c **** 		mode[CH3]= R1080P25;
 2327              		.loc 1 2870 0
 2328 00ac 9A70     		strb	r2, [r3, #2]
2871:TP2824/TP2802.c **** 		mode[CH4]= R1080P25;
 2329              		.loc 1 2871 0
 2330 00ae DA70     		strb	r2, [r3, #3]
ARM GAS  /tmp/ccSTfybG.s 			page 96


2872:TP2824/TP2802.c **** 		
2873:TP2824/TP2802.c **** 	
2874:TP2824/TP2802.c **** 		//mode[CH1]= R720P25;	
2875:TP2824/TP2802.c **** 		//mode[CH1]= R1080P25;	
2876:TP2824/TP2802.c **** 	  tp28xx_byte_write(0x40,0x04);
 2331              		.loc 1 2876 0
 2332 00b0 0421     		movs	r1, #4
 2333 00b2 4020     		movs	r0, #64
 2334 00b4 FFF7FEFF 		bl	tp28xx_byte_write
 2335              	.LVL329:
2877:TP2824/TP2802.c **** 	   Set_VidRes(CH1);
 2336              		.loc 1 2877 0
 2337 00b8 0020     		movs	r0, #0
 2338 00ba FFF7FEFF 		bl	Set_VidRes
 2339              	.LVL330:
2878:TP2824/TP2802.c **** //		  Set_VidRes(CH2);
2879:TP2824/TP2802.c **** //		  Set_VidRes(CH3);
2880:TP2824/TP2802.c **** //		  Set_VidRes(CH4);
2881:TP2824/TP2802.c **** 		
2882:TP2824/TP2802.c **** 		//msleep(2000);//ryan@20200622
2883:TP2824/TP2802.c **** 		
2884:TP2824/TP2802.c **** 		CurRes=RES1920X1080;
 2340              		.loc 1 2884 0
 2341 00be 3F4B     		ldr	r3, .L238+40
 2342 00c0 0122     		movs	r2, #1
 2343 00c2 1A70     		strb	r2, [r3]
 2344              	.LVL331:
2885:TP2824/TP2802.c **** 		//CurRes=RES1280X720;
2886:TP2824/TP2802.c **** 
2887:TP2824/TP2802.c **** 
2888:TP2824/TP2802.c ****     for( i = 0; i < CH_PER_CHIP; i++)
 2345              		.loc 1 2888 0
 2346 00c4 0024     		movs	r4, #0
 2347              	.LVL332:
 2348              	.L226:
 2349              		.loc 1 2888 0 is_stmt 0 discriminator 1
 2350 00c6 002C     		cmp	r4, #0
 2351 00c8 46D0     		beq	.L228
2889:TP2824/TP2802.c ****     {
2890:TP2824/TP2802.c ****         count[i] = 0;
2891:TP2824/TP2802.c ****         state[i] = VIDEO_UNPLUG;
2892:TP2824/TP2802.c ****         std[i] = TVI;
2893:TP2824/TP2802.c ****         mode[i] = NoDet;
2894:TP2824/TP2802.c **** 
2895:TP2824/TP2802.c **** 
2896:TP2824/TP2802.c **** 	VS4210_Rx_NoSignal(1/*i*/) ; //chunyu
2897:TP2824/TP2802.c **** 	TP_InputMode=7;
2898:TP2824/TP2802.c **** 	newInRes[0] = _OSD_No_Signal; 
2899:TP2824/TP2802.c **** 			
2900:TP2824/TP2802.c **** 	if(SelectInputMode==_AHD_Input)
2901:TP2824/TP2802.c **** 	Set_Video_Loss_OSD(1,ON);	
2902:TP2824/TP2802.c ****     }
2903:TP2824/TP2802.c **** 
2904:TP2824/TP2802.c **** 
2905:TP2824/TP2802.c **** 	#endif
2906:TP2824/TP2802.c **** }
 2352              		.loc 1 2906 0 is_stmt 1
ARM GAS  /tmp/ccSTfybG.s 			page 97


 2353 00ca 38BD     		pop	{r3, r4, r5, pc}
 2354              	.LVL333:
 2355              	.L219:
2647:TP2824/TP2802.c ****         flag_AUDIO = 1;
 2356              		.loc 1 2647 0
 2357 00cc 0123     		movs	r3, #1
 2358 00ce 354A     		ldr	r2, .L238+16
 2359 00d0 1360     		str	r3, [r2]
2648:TP2824/TP2802.c ****         if(0x01 == revision)
 2360              		.loc 1 2648 0
 2361 00d2 354A     		ldr	r2, .L238+20
 2362 00d4 1360     		str	r3, [r2]
2649:TP2824/TP2802.c ****         {
 2363              		.loc 1 2649 0
 2364 00d6 314B     		ldr	r3, .L238+8
 2365 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2366 00da 012B     		cmp	r3, #1
 2367 00dc 01D0     		beq	.L234
2656:TP2824/TP2802.c ****         }
 2368              		.loc 1 2656 0
 2369 00de 384C     		ldr	r4, .L238+44
 2370 00e0 D7E7     		b	.L223
 2371              	.L234:
2651:TP2824/TP2802.c ****             ptr_TP2802 = TP2833_DataSet;
 2372              		.loc 1 2651 0
 2373 00e2 2D4B     		ldr	r3, .L238+4
 2374 00e4 2522     		movs	r2, #37
 2375 00e6 1A70     		strb	r2, [r3]
 2376              	.LVL334:
2652:TP2824/TP2802.c ****         }
 2377              		.loc 1 2652 0
 2378 00e8 364C     		ldr	r4, .L238+48
 2379 00ea D2E7     		b	.L223
 2380              	.LVL335:
 2381              	.L220:
2661:TP2824/TP2802.c ****         flag_AUDIO = 1;
 2382              		.loc 1 2661 0
 2383 00ec 0123     		movs	r3, #1
 2384 00ee 2D4A     		ldr	r2, .L238+16
 2385 00f0 1360     		str	r3, [r2]
2662:TP2824/TP2802.c ****         ptr_TP2802 = TP2834_DataSet;
 2386              		.loc 1 2662 0
 2387 00f2 2D4A     		ldr	r2, .L238+20
 2388 00f4 1360     		str	r3, [r2]
 2389              	.LVL336:
2663:TP2824/TP2802.c ****         break;
 2390              		.loc 1 2663 0
 2391 00f6 344C     		ldr	r4, .L238+52
2664:TP2824/TP2802.c **** 
 2392              		.loc 1 2664 0
 2393 00f8 CBE7     		b	.L223
 2394              	.LVL337:
 2395              	.L221:
2667:TP2824/TP2802.c ****         flag_AUDIO = 1;
 2396              		.loc 1 2667 0
 2397 00fa 0123     		movs	r3, #1
 2398 00fc 294A     		ldr	r2, .L238+16
ARM GAS  /tmp/ccSTfybG.s 			page 98


 2399 00fe 1360     		str	r3, [r2]
2668:TP2824/TP2802.c **** 
 2400              		.loc 1 2668 0
 2401 0100 294A     		ldr	r2, .L238+20
 2402 0102 1360     		str	r3, [r2]
2670:TP2824/TP2802.c ****         {
 2403              		.loc 1 2670 0
 2404 0104 254B     		ldr	r3, .L238+8
 2405 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2406 0108 012B     		cmp	r3, #1
 2407 010a 05D0     		beq	.L235
2677:TP2824/TP2802.c ****         {
 2408              		.loc 1 2677 0
 2409 010c F3B9     		cbnz	r3, .L230
2679:TP2824/TP2802.c ****             ptr_TP2802 = TP2853C_DataSet;
 2410              		.loc 1 2679 0
 2411 010e 274B     		ldr	r3, .L238+24
 2412 0110 0122     		movs	r2, #1
 2413 0112 1A60     		str	r2, [r3]
 2414              	.LVL338:
2680:TP2824/TP2802.c ****         }
 2415              		.loc 1 2680 0
 2416 0114 2D4C     		ldr	r4, .L238+56
 2417 0116 BCE7     		b	.L223
 2418              	.LVL339:
 2419              	.L235:
2672:TP2824/TP2802.c ****             //flag_MEGA = 1;
 2420              		.loc 1 2672 0
 2421 0118 1F4B     		ldr	r3, .L238+4
 2422 011a 2F22     		movs	r2, #47
 2423 011c 1A70     		strb	r2, [r3]
 2424              	.LVL340:
2675:TP2824/TP2802.c ****         }
 2425              		.loc 1 2675 0
 2426 011e 2C4C     		ldr	r4, .L238+60
 2427 0120 B7E7     		b	.L223
 2428              	.LVL341:
 2429              	.L222:
2689:TP2824/TP2802.c ****         flag_AUDIO = 1;
 2430              		.loc 1 2689 0
 2431 0122 0123     		movs	r3, #1
 2432 0124 1F4A     		ldr	r2, .L238+16
 2433 0126 1360     		str	r3, [r2]
2690:TP2824/TP2802.c **** 
 2434              		.loc 1 2690 0
 2435 0128 1F4A     		ldr	r2, .L238+20
 2436 012a 1360     		str	r3, [r2]
2692:TP2824/TP2802.c ****         {
 2437              		.loc 1 2692 0
 2438 012c 1B4B     		ldr	r3, .L238+8
 2439 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2440 0130 042B     		cmp	r3, #4
 2441 0132 01D0     		beq	.L236
2636:TP2824/TP2802.c ****     switch(chip)
 2442              		.loc 1 2636 0
 2443 0134 1F4C     		ldr	r4, .L238+32
 2444 0136 ACE7     		b	.L223
ARM GAS  /tmp/ccSTfybG.s 			page 99


 2445              	.L236:
2697:TP2824/TP2802.c ****         }
 2446              		.loc 1 2697 0
 2447 0138 2648     		ldr	r0, .L238+64
 2448 013a FFF7FEFF 		bl	puts
 2449              	.LVL342:
2696:TP2824/TP2802.c ****             printf("TP2824C test\r\n");
 2450              		.loc 1 2696 0
 2451 013e 1D4C     		ldr	r4, .L238+32
 2452 0140 A7E7     		b	.L223
 2453              	.L216:
2702:TP2824/TP2802.c ****         break;
 2454              		.loc 1 2702 0
 2455 0142 2548     		ldr	r0, .L238+68
 2456 0144 FFF7FEFF 		bl	puts
 2457              	.LVL343:
2636:TP2824/TP2802.c ****     switch(chip)
 2458              		.loc 1 2636 0
 2459 0148 1A4C     		ldr	r4, .L238+32
2703:TP2824/TP2802.c ****     }
 2460              		.loc 1 2703 0
 2461 014a A2E7     		b	.L223
 2462              	.L230:
2684:TP2824/TP2802.c ****         }
 2463              		.loc 1 2684 0
 2464 014c 1F4C     		ldr	r4, .L238+56
 2465 014e A0E7     		b	.L223
 2466              	.LVL344:
 2467              	.L233:
2710:TP2824/TP2802.c **** /*
 2468              		.loc 1 2710 0 discriminator 1
 2469 0150 2248     		ldr	r0, .L238+72
 2470 0152 FFF7FEFF 		bl	I2CDeviceSet1
 2471              	.LVL345:
 2472 0156 A5E7     		b	.L225
 2473              	.LVL346:
 2474              	.L228:
2890:TP2824/TP2802.c ****         state[i] = VIDEO_UNPLUG;
 2475              		.loc 1 2890 0
 2476 0158 0023     		movs	r3, #0
 2477 015a 214A     		ldr	r2, .L238+76
 2478 015c 1355     		strb	r3, [r2, r4]
2891:TP2824/TP2802.c ****         std[i] = TVI;
 2479              		.loc 1 2891 0
 2480 015e 214A     		ldr	r2, .L238+80
 2481 0160 1355     		strb	r3, [r2, r4]
2892:TP2824/TP2802.c ****         mode[i] = NoDet;
 2482              		.loc 1 2892 0
 2483 0162 214A     		ldr	r2, .L238+84
 2484 0164 1355     		strb	r3, [r2, r4]
2893:TP2824/TP2802.c **** 
 2485              		.loc 1 2893 0
 2486 0166 0725     		movs	r5, #7
 2487 0168 134B     		ldr	r3, .L238+36
 2488 016a 1D55     		strb	r5, [r3, r4]
2896:TP2824/TP2802.c **** 	TP_InputMode=7;
 2489              		.loc 1 2896 0
ARM GAS  /tmp/ccSTfybG.s 			page 100


 2490 016c 0120     		movs	r0, #1
 2491 016e FFF7FEFF 		bl	VS4210_Rx_NoSignal
 2492              	.LVL347:
2897:TP2824/TP2802.c **** 	newInRes[0] = _OSD_No_Signal; 
 2493              		.loc 1 2897 0
 2494 0172 1E4B     		ldr	r3, .L238+88
 2495 0174 1D70     		strb	r5, [r3]
2898:TP2824/TP2802.c **** 			
 2496              		.loc 1 2898 0
 2497 0176 1E4B     		ldr	r3, .L238+92
 2498 0178 1422     		movs	r2, #20
 2499 017a 1A70     		strb	r2, [r3]
2900:TP2824/TP2802.c **** 	Set_Video_Loss_OSD(1,ON);	
 2500              		.loc 1 2900 0
 2501 017c 1D4B     		ldr	r3, .L238+96
 2502 017e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2503 0180 012B     		cmp	r3, #1
 2504 0182 02D0     		beq	.L237
 2505              	.L227:
2888:TP2824/TP2802.c ****     {
 2506              		.loc 1 2888 0 discriminator 2
 2507 0184 0134     		adds	r4, r4, #1
 2508              	.LVL348:
 2509 0186 E4B2     		uxtb	r4, r4
 2510              	.LVL349:
 2511 0188 9DE7     		b	.L226
 2512              	.L237:
2901:TP2824/TP2802.c ****     }
 2513              		.loc 1 2901 0
 2514 018a 0121     		movs	r1, #1
 2515 018c 0846     		mov	r0, r1
 2516 018e FFF7FEFF 		bl	Set_Video_Loss_OSD
 2517              	.LVL350:
 2518 0192 F7E7     		b	.L227
 2519              	.L239:
 2520              		.align	2
 2521              	.L238:
 2522 0194 00000000 		.word	TVII2CAddress
 2523 0198 00000000 		.word	chip
 2524 019c 00000000 		.word	revision
 2525 01a0 00000000 		.word	.LC26
 2526 01a4 00000000 		.word	flag_CVBS
 2527 01a8 00000000 		.word	flag_AUDIO
 2528 01ac 00000000 		.word	flag_MEGA
 2529 01b0 1C000000 		.word	.LC27
 2530 01b4 00000000 		.word	.LANCHOR15
 2531 01b8 00000000 		.word	mode
 2532 01bc 00000000 		.word	CurRes
 2533 01c0 00000000 		.word	.LANCHOR16
 2534 01c4 00000000 		.word	.LANCHOR19
 2535 01c8 00000000 		.word	.LANCHOR17
 2536 01cc 00000000 		.word	.LANCHOR18
 2537 01d0 00000000 		.word	.LANCHOR20
 2538 01d4 24000000 		.word	.LC28
 2539 01d8 34000000 		.word	.LC29
 2540 01dc 00000000 		.word	.LANCHOR21
 2541 01e0 00000000 		.word	count
ARM GAS  /tmp/ccSTfybG.s 			page 101


 2542 01e4 00000000 		.word	state
 2543 01e8 00000000 		.word	std
 2544 01ec 00000000 		.word	.LANCHOR22
 2545 01f0 00000000 		.word	.LANCHOR23
 2546 01f4 00000000 		.word	SelectInputMode
 2547              		.cfi_endproc
 2548              	.LFE90:
 2550              		.section	.text.ConvertData,"ax",%progbits
 2551              		.align	1
 2552              		.global	ConvertData
 2553              		.syntax unified
 2554              		.thumb
 2555              		.thumb_func
 2556              		.fpu softvfp
 2558              	ConvertData:
 2559              	.LFB91:
2907:TP2824/TP2802.c **** #if 0
2908:TP2824/TP2802.c **** void Init_TP280x_CHx_RegSet(BYTE Action,BYTE index)
2909:TP2824/TP2802.c **** {
2910:TP2824/TP2802.c **** 	
2911:TP2824/TP2802.c **** 		tByte /*cvstd,status,*/i=index;
2912:TP2824/TP2802.c **** 		 tByte gain, tmp, /*fmt,*/ tmpab;
2913:TP2824/TP2802.c **** 
2914:TP2824/TP2802.c **** 		  count[i] =20;
2915:TP2824/TP2802.c **** 		  state[i] =VIDEO_LOCKED;//VIDEO_IN;//VIDEO_IN;//VIDEO_LOCKED;
2916:TP2824/TP2802.c **** 	//	  std[i] = 0x02;///ReadEEP(EEP_TP2824_STD0+(i*2));
2917:TP2824/TP2802.c **** 	//	  mode[i] = NTSC;///ReadEEP(EEP_TP2824_STD0+(i*2)+1);
2918:TP2824/TP2802.c **** 		  std[i] = ReadEEP(EEP_TP2824_STD0+(i*3));
2919:TP2824/TP2802.c **** 		  mode[i] = ReadEEP(EEP_TP2824_STD0+(i*3)+1);
2920:TP2824/TP2802.c **** 
2921:TP2824/TP2802.c **** 		printf("Init_TP280x_CHx_RegSet in ch%02x \r\n", (tWord)i);
2922:TP2824/TP2802.c **** 		SetRegPage(i);
2923:TP2824/TP2802.c **** 
2924:TP2824/TP2802.c **** 		//Set_VidRes(i);      
2925:TP2824/TP2802.c **** 
2926:TP2824/TP2802.c **** 		//msleep(200) ;
2927:TP2824/TP2802.c **** switch(Action)
2928:TP2824/TP2802.c **** {
2929:TP2824/TP2802.c **** case Tp2802_Boot_Set_std:
2930:TP2824/TP2802.c **** 	if(std[i] ==TVI)
2931:TP2824/TP2802.c **** 	{
2932:TP2824/TP2802.c **** 					Set_VidRes(i); 
2933:TP2824/TP2802.c **** 					//if((mode[i]==NTSC)||(mode[i]==PAL))
2934:TP2824/TP2802.c **** 					//msleep(300) ;
2935:TP2824/TP2802.c **** 					//std[i] = TVI;
2936:TP2824/TP2802.c **** 					CurCH = i;
2937:TP2824/TP2802.c **** 					if( (R720P30V2 == mode[i]) || (R720P25V2 == mode[i]) )
2938:TP2824/TP2802.c **** 					{
2939:TP2824/TP2802.c **** 						if( 0x00 == (0x08 & tp28xx_byte_read(0x03)))
2940:TP2824/TP2802.c **** 						{
2941:TP2824/TP2802.c **** 							mode[i] &= 0xf7;
2942:TP2824/TP2802.c **** 							Set_VidRes(i);
2943:TP2824/TP2802.c **** 							printf("(A)");
2944:TP2824/TP2802.c **** 							//printf("TVI_Set_VidRes\r\n");
2945:TP2824/TP2802.c **** 						}
2946:TP2824/TP2802.c **** 					}
2947:TP2824/TP2802.c **** 	
ARM GAS  /tmp/ccSTfybG.s 			page 102


2948:TP2824/TP2802.c **** 					//tp28xx_byte_write(0xf6  , REG_F6[i]);
2949:TP2824/TP2802.c **** 					tp28xx_byte_write(0xf6 +i  , REG_F6[i]);  //chunyu
2950:TP2824/TP2802.c **** 	
2951:TP2824/TP2802.c **** #if(OUTPUT == Bits16out)
2952:TP2824/TP2802.c **** 					if( TP2826 == chip )
2953:TP2824/TP2802.c **** 					{
2954:TP2824/TP2802.c **** 						tp28xx_byte_write(0xf8, REG_F7[i]);
2955:TP2824/TP2802.c **** 						tp28xx_byte_write(0xfa, REG_FA[i]);
2956:TP2824/TP2802.c **** 						tp28xx_byte_write(0xfb, REG_FA[i]);
2957:TP2824/TP2802.c **** 					}
2958:TP2824/TP2802.c **** 					else
2959:TP2824/TP2802.c **** 					{					 
2960:TP2824/TP2802.c **** 						tp28xx_byte_write(0xf7, REG_F7[i]);
2961:TP2824/TP2802.c **** 						tp28xx_byte_write(0xfa, REG_FA[i]);
2962:TP2824/TP2802.c **** 						//printf("set output ch%02x \r\n", (tWord)CH[i]);
2963:TP2824/TP2802.c **** 					}
2964:TP2824/TP2802.c **** #else //BT656																				
2965:TP2824/TP2802.c **** 	
2966:TP2824/TP2802.c **** 					tmp=tp28xx_byte_read(0xf5);
2967:TP2824/TP2802.c **** 					if( tmp &= SYS_MODE[i])
2968:TP2824/TP2802.c **** 					{
2969:TP2824/TP2802.c **** 						printf("//75.25M output\r\n") ;
2970:TP2824/TP2802.c **** 	
2971:TP2824/TP2802.c **** 						if (i == 0)
2972:TP2824/TP2802.c **** 						{
2973:TP2824/TP2802.c **** 							tmpab = tp28xx_byte_read(0xfa) ;
2974:TP2824/TP2802.c **** 							tmpab = (tmpab & 0xF0) | 0x0A ;
2975:TP2824/TP2802.c **** 							tp28xx_byte_write(0xfa, tmpab);
2976:TP2824/TP2802.c **** 						}
2977:TP2824/TP2802.c **** 						else if (i == 1)
2978:TP2824/TP2802.c **** 						{
2979:TP2824/TP2802.c **** 							tmpab = tp28xx_byte_read(0xfa) ;
2980:TP2824/TP2802.c **** 							tmpab = (tmpab & 0x0F) | 0xA0 ;
2981:TP2824/TP2802.c **** 							tp28xx_byte_write(0xfa, tmpab);
2982:TP2824/TP2802.c **** 						}
2983:TP2824/TP2802.c **** 	
2984:TP2824/TP2802.c **** 						if (i == 2)
2985:TP2824/TP2802.c **** 						{
2986:TP2824/TP2802.c **** 							tmpab = tp28xx_byte_read(0xfb) ;
2987:TP2824/TP2802.c **** 							tmpab = (tmpab & 0xF0) | 0x0A ;
2988:TP2824/TP2802.c **** 							tp28xx_byte_write(0xfb, tmpab);
2989:TP2824/TP2802.c **** 						}
2990:TP2824/TP2802.c **** 						else if (i == 3)
2991:TP2824/TP2802.c **** 						{
2992:TP2824/TP2802.c **** 							tmpab = tp28xx_byte_read(0xfb) ;
2993:TP2824/TP2802.c **** 							tmpab = (tmpab & 0x0F) | 0xA0 ;
2994:TP2824/TP2802.c **** 							tp28xx_byte_write(0xfb, tmpab);
2995:TP2824/TP2802.c **** 						}
2996:TP2824/TP2802.c **** 					}
2997:TP2824/TP2802.c **** 					else
2998:TP2824/TP2802.c **** 					{
2999:TP2824/TP2802.c **** 						extern tByte half_scaler;
3000:TP2824/TP2802.c **** 						if(half_scaler) //down scaler output
3001:TP2824/TP2802.c **** 						{
3002:TP2824/TP2802.c **** 							tmp=tp28xx_byte_read(0x35);
3003:TP2824/TP2802.c **** 							tmp |= 0x40;
3004:TP2824/TP2802.c **** 							tp28xx_byte_write(0x35, tmp);						 
ARM GAS  /tmp/ccSTfybG.s 			page 103


3005:TP2824/TP2802.c **** 	
3006:TP2824/TP2802.c **** 							if (i == 0)
3007:TP2824/TP2802.c **** 							{
3008:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfa) ;
3009:TP2824/TP2802.c **** 								tmpab = (tmpab & 0xF0) | 0x0A ;
3010:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfa, tmpab);
3011:TP2824/TP2802.c **** 							}
3012:TP2824/TP2802.c **** 							else if (i == 1)
3013:TP2824/TP2802.c **** 							{
3014:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfa) ;
3015:TP2824/TP2802.c **** 								tmpab = (tmpab & 0x0F) | 0xA0 ;
3016:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfa, tmpab);
3017:TP2824/TP2802.c **** 							}
3018:TP2824/TP2802.c **** 	
3019:TP2824/TP2802.c **** 	
3020:TP2824/TP2802.c **** 							if (i == 2)
3021:TP2824/TP2802.c **** 							{
3022:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfb) ;
3023:TP2824/TP2802.c **** 								tmpab = (tmpab & 0xF0) | 0x0A ;
3024:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfb, tmpab);
3025:TP2824/TP2802.c **** 							}
3026:TP2824/TP2802.c **** 							else if (i == 3)
3027:TP2824/TP2802.c **** 							{
3028:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfb) ;
3029:TP2824/TP2802.c **** 								tmpab = (tmpab & 0x0F) | 0xA0 ;
3030:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfb, tmpab);
3031:TP2824/TP2802.c **** 							}
3032:TP2824/TP2802.c **** 	
3033:TP2824/TP2802.c **** 						}
3034:TP2824/TP2802.c **** 						else
3035:TP2824/TP2802.c **** 						{
3036:TP2824/TP2802.c **** 							tmp=tp28xx_byte_read(0x35);
3037:TP2824/TP2802.c **** 							tmp &= 0xbf;
3038:TP2824/TP2802.c **** 							tp28xx_byte_write(0x35, tmp);
3039:TP2824/TP2802.c **** 	
3040:TP2824/TP2802.c **** 	
3041:TP2824/TP2802.c **** 							if (i == 0)
3042:TP2824/TP2802.c **** 							{
3043:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfa) ;
3044:TP2824/TP2802.c **** 								tmpab = (tmpab & 0xF0) | 0x08 ;
3045:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfa, tmpab);
3046:TP2824/TP2802.c **** 							}
3047:TP2824/TP2802.c **** 							else if (i == 1)
3048:TP2824/TP2802.c **** 							{
3049:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfa) ;
3050:TP2824/TP2802.c **** 								tmpab = (tmpab & 0x0F) | 0x80 ;
3051:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfa, tmpab);
3052:TP2824/TP2802.c **** 							}
3053:TP2824/TP2802.c **** 	
3054:TP2824/TP2802.c **** 	
3055:TP2824/TP2802.c **** 							if (i == 2)
3056:TP2824/TP2802.c **** 							{
3057:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfb) ;
3058:TP2824/TP2802.c **** 								tmpab = (tmpab & 0xF0) | 0x08 ;
3059:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfb, tmpab);
3060:TP2824/TP2802.c **** 							}
3061:TP2824/TP2802.c **** 							else if (i == 3)
ARM GAS  /tmp/ccSTfybG.s 			page 104


3062:TP2824/TP2802.c **** 							{
3063:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfb) ;
3064:TP2824/TP2802.c **** 								tmpab = (tmpab & 0x0F) | 0x80 ;
3065:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfb, tmpab);
3066:TP2824/TP2802.c **** 							}
3067:TP2824/TP2802.c **** 						}
3068:TP2824/TP2802.c **** 					}
3069:TP2824/TP2802.c **** #endif
3070:TP2824/TP2802.c **** 				
3071:TP2824/TP2802.c **** 
3072:TP2824/TP2802.c **** 					if( CurRes != ManVidResRx)
3073:TP2824/TP2802.c **** 					{
3074:TP2824/TP2802.c **** 						CurRes = ManVidResRx;
3075:TP2824/TP2802.c **** 						//CreateMDIN340VideoInstance();  //chunyu
3076:TP2824/TP2802.c **** 						printf("ManVidResRx=0x%02x\r\n",ManVidResRx ) ;
3077:TP2824/TP2802.c **** 					}
3078:TP2824/TP2802.c **** 			}
3079:TP2824/TP2802.c **** 	else if(std[i] ==HDC)
3080:TP2824/TP2802.c **** 		{
3081:TP2824/TP2802.c **** 		Set_HDC(i);
3082:TP2824/TP2802.c **** 		printf("(Set_HDC)");
3083:TP2824/TP2802.c **** 		}
3084:TP2824/TP2802.c **** 	else if(std[i] ==HDA)
3085:TP2824/TP2802.c **** 		{
3086:TP2824/TP2802.c **** 		Set_HDA(i);
3087:TP2824/TP2802.c **** 		printf("(Set_HDA)");
3088:TP2824/TP2802.c **** 		}
3089:TP2824/TP2802.c **** 		break;
3090:TP2824/TP2802.c **** case Tp2802_Boot_Set_output:
3091:TP2824/TP2802.c **** //{
3092:TP2824/TP2802.c ****                 gain = ReadGain();
3093:TP2824/TP2802.c ****                 printf("Egain=0x%02x ch%02x,std=%d,mode=0x%02X\r\n", (tWord)gain, (tWord)i, (tWord)
3094:TP2824/TP2802.c **** 
3095:TP2824/TP2802.c ****                 if ((mode[i] == R1080P30 ) || (mode[i] == R1080P25 ))
3096:TP2824/TP2802.c ****                 {
3097:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1920X1080P ;
3098:TP2824/TP2802.c ****                 }
3099:TP2824/TP2802.c ****                 else if ((mode[i] == R720P50 ) || (mode[i] == R720P60 ))
3100:TP2824/TP2802.c ****                 {
3101:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
3102:TP2824/TP2802.c ****                 }
3103:TP2824/TP2802.c ****                 else if ((mode[i] == R720P25 ) || (mode[i] == R720P30 ))
3104:TP2824/TP2802.c ****                 {
3105:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
3106:TP2824/TP2802.c ****                 }
3107:TP2824/TP2802.c ****                 else if ((mode[i] == R720P30V2 ) || (mode[i] == R720P25V2 ))
3108:TP2824/TP2802.c ****                 {
3109:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
3110:TP2824/TP2802.c ****                 }
3111:TP2824/TP2802.c ****                 else if (mode[i] == NTSC )
3112:TP2824/TP2802.c ****                 {
3113:TP2824/TP2802.c ****                     newInRes[i] = _OSD_720X480I60 ;
3114:TP2824/TP2802.c ****                 }
3115:TP2824/TP2802.c ****                 else if (mode[i] == PAL )
3116:TP2824/TP2802.c ****                 {
3117:TP2824/TP2802.c ****                     newInRes[i] = _OSD_720X576I50 ;
3118:TP2824/TP2802.c ****                 }
ARM GAS  /tmp/ccSTfybG.s 			page 105


3119:TP2824/TP2802.c ****                 else
3120:TP2824/TP2802.c ****                 {
3121:TP2824/TP2802.c ****                     newInRes[i] = _OSD_No_Signal ;
3122:TP2824/TP2802.c ****                 }
3123:TP2824/TP2802.c **** 
3124:TP2824/TP2802.c ****               //  if (newInRes[i] != gbVXIS_InputMode[i] )
3125:TP2824/TP2802.c ****                 {
3126:TP2824/TP2802.c ****                     VS4210_SetInModeOutMode(i,newInRes[i] ,gbVXIS_OuputModeflg )  ;
3127:TP2824/TP2802.c **** 
3128:TP2824/TP2802.c **** 		//save tp2824 data
3129:TP2824/TP2802.c **** 		/*
3130:TP2824/TP2802.c **** 			if( ReadEEP(EEP_TP2824_STD0+(i*3)+2)==0)
3131:TP2824/TP2802.c **** 			{
3132:TP2824/TP2802.c **** 			 WriteEEP(EEP_TP2824_STD0+(i*3),std[i]);
3133:TP2824/TP2802.c **** 			 WriteEEP(EEP_TP2824_STD0+(i*3)+1,mode[i]);		
3134:TP2824/TP2802.c **** 		    	  WriteEEP(EEP_TP2824_STD0+(i*3)+2,1);
3135:TP2824/TP2802.c **** 			  VideoSave[i]=1;
3136:TP2824/TP2802.c **** 
3137:TP2824/TP2802.c **** 			 printf("\r\n(WriteModeDataToEEPROM ch=%02x)",(WORD)i) ;
3138:TP2824/TP2802.c **** 			}
3139:TP2824/TP2802.c **** 			*/
3140:TP2824/TP2802.c **** 	 
3141:TP2824/TP2802.c ****                 }
3142:TP2824/TP2802.c **** 
3143:TP2824/TP2802.c ****                 if( TVI != std[i] )
3144:TP2824/TP2802.c ****                 {
3145:TP2824/TP2802.c ****                     tp28xx_byte_write(0x07, 0x80|(gain>>2));  // manual mode
3146:TP2824/TP2802.c ****                     if (std[i]== HDA )
3147:TP2824/TP2802.c ****                     {
3148:TP2824/TP2802.c ****                         printf("AHD Mode\r\n");
3149:TP2824/TP2802.c ****                     }
3150:TP2824/TP2802.c ****                     else
3151:TP2824/TP2802.c ****                     {
3152:TP2824/TP2802.c ****                         printf("CVI Mode\r\n");
3153:TP2824/TP2802.c ****                     }
3154:TP2824/TP2802.c ****                 }
3155:TP2824/TP2802.c ****                 else //TVI
3156:TP2824/TP2802.c ****                 {
3157:TP2824/TP2802.c ****                     if( TP2833 == chip || TP2834 == chip)
3158:TP2824/TP2802.c ****                     {
3159:TP2824/TP2802.c ****                         if( mode[i] & FLAG_MEGA_MODE )
3160:TP2824/TP2802.c ****                         {
3161:TP2824/TP2802.c ****                             tp28xx_byte_write(0x07, 0x80|(gain/3));  // manual mode
3162:TP2824/TP2802.c ****                         }
3163:TP2824/TP2802.c ****                     }
3164:TP2824/TP2802.c **** 		      if(mode[i] == NTSC) //20200408 cvbs night no burst
3165:TP2824/TP2802.c **** 			  	printf("CVBS NTSC   mode\r\n");
3166:TP2824/TP2802.c **** 		      else if(mode[i] == PAL) //20200408 cvbs night no burst
3167:TP2824/TP2802.c **** 			  	printf("CVBS PAL   mode\r\n");
3168:TP2824/TP2802.c **** 		      else
3169:TP2824/TP2802.c ****                     printf("LINE=%d,TVI Mode\r\n",__LINE__ );
3170:TP2824/TP2802.c ****                     //gRxLoopFlg = 0 ;
3171:TP2824/TP2802.c ****                 }
3172:TP2824/TP2802.c ****            // }
3173:TP2824/TP2802.c ****  break;
3174:TP2824/TP2802.c **** 		   case Tp2802_Boot_Set_COC:
3175:TP2824/TP2802.c **** 		   //	{
ARM GAS  /tmp/ccSTfybG.s 			page 106


3176:TP2824/TP2802.c ****                 if( TVI != std[i] )
3177:TP2824/TP2802.c ****                 {
3178:TP2824/TP2802.c ****                     ManualAGC(i);
3179:TP2824/TP2802.c ****                     SetCGain(0x0c);
3180:TP2824/TP2802.c ****                 }
3181:TP2824/TP2802.c ****                 else //TVI
3182:TP2824/TP2802.c ****                 {
3183:TP2824/TP2802.c ****                     if( TP2833 == chip || TP2834 == chip)
3184:TP2824/TP2802.c ****                     {
3185:TP2824/TP2802.c ****                         if( mode[i] & FLAG_MEGA_MODE )
3186:TP2824/TP2802.c ****                         {
3187:TP2824/TP2802.c ****                             SetCGain(0x16);
3188:TP2824/TP2802.c ****                         }
3189:TP2824/TP2802.c ****                     }
3190:TP2824/TP2802.c ****                 }
3191:TP2824/TP2802.c ****             //}
3192:TP2824/TP2802.c **** 			   if(state[i] == VIDEO_LOCKED)
3193:TP2824/TP2802.c **** 						   {
3194:TP2824/TP2802.c **** 							   tcByte *ptr_TP2824C;
3195:TP2824/TP2802.c **** 					   if( TVI == std[i] )
3196:TP2824/TP2802.c **** 					   {
3197:TP2824/TP2802.c **** 						   if(mode[i]==NTSC || mode[i]==PAL)
3198:TP2824/TP2802.c **** 						   {
3199:TP2824/TP2802.c **** 							   ptr_TP2824C=TP2824C_CVBS_PTZ_DataSet;
3200:TP2824/TP2802.c **** 						   }
3201:TP2824/TP2802.c **** 						   else
3202:TP2824/TP2802.c **** 						   {
3203:TP2824/TP2802.c **** 							   ptr_TP2824C=TP2824C_TVI_FHD_PTZ_DataSet;
3204:TP2824/TP2802.c **** 						   }
3205:TP2824/TP2802.c **** 						   
3206:TP2824/TP2802.c **** 						   I2CDeviceSet1( ptr_TP2824C );
3207:TP2824/TP2802.c **** 						   
3208:TP2824/TP2802.c **** 						   if(mode[i] == R1080P30 || mode[i] == R1080P25)
3209:TP2824/TP2802.c **** 						   {
3210:TP2824/TP2802.c **** 							   tp28xx_byte_write(0xc6, 0x19);
3211:TP2824/TP2802.c **** 						   }
3212:TP2824/TP2802.c **** 						   
3213:TP2824/TP2802.c **** 						   tp28xx_byte_write(0x40, i);
3214:TP2824/TP2802.c **** 						   
3215:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xbe, 0x80);
3216:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB6);
3217:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB5);
3218:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB4);
3219:TP2824/TP2802.c **** 			   
3220:TP2824/TP2802.c **** 					   
3221:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0x00);
3222:TP2824/TP2802.c **** 						   delay(1);//5ms
3223:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0x83);
3224:TP2824/TP2802.c **** 						   
3225:TP2824/TP2802.c **** 						   if(mode[i]==R1080P30 || mode[i]==R1080P25)
3226:TP2824/TP2802.c **** 						   {
3227:TP2824/TP2802.c **** 							   PtzTxChNum=i;
3228:TP2824/TP2802.c **** 							   printf("EQdet %d\r\n",  PtzTxChNum);
3229:TP2824/TP2802.c **** 						   }
3230:TP2824/TP2802.c **** 						   
3231:TP2824/TP2802.c **** 					   }
3232:TP2824/TP2802.c **** 			   
ARM GAS  /tmp/ccSTfybG.s 			page 107


3233:TP2824/TP2802.c **** 					   if( HDA == std[i] )
3234:TP2824/TP2802.c **** 					   {
3235:TP2824/TP2802.c **** 						   ptr_TP2824C=TP2824C_AHD_FHD_PTZ_DataSet;
3236:TP2824/TP2802.c **** 						   I2CDeviceSet1( ptr_TP2824C );
3237:TP2824/TP2802.c **** 					   
3238:TP2824/TP2802.c **** 						   tp28xx_byte_write(0x40, i);
3239:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xbe, 0x80);
3240:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB6);
3241:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB5);
3242:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB4);
3243:TP2824/TP2802.c **** 			   
3244:TP2824/TP2802.c **** 					   
3245:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0x24);
3246:TP2824/TP2802.c **** 						   delay(1);//5ms
3247:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0xA7);
3248:TP2824/TP2802.c **** 					   }
3249:TP2824/TP2802.c **** 			   
3250:TP2824/TP2802.c **** 					   if( HDC == std[i] )
3251:TP2824/TP2802.c **** 					   {
3252:TP2824/TP2802.c **** 						   ptr_TP2824C=TP2824C_CVIHD_PTZ_DataSet;
3253:TP2824/TP2802.c **** 						   I2CDeviceSet1( ptr_TP2824C );
3254:TP2824/TP2802.c **** 					   
3255:TP2824/TP2802.c **** 						   tp28xx_byte_write(0x40, i);
3256:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xbe, 0x80);
3257:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB6);
3258:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB5);
3259:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB4);
3260:TP2824/TP2802.c **** 			   
3261:TP2824/TP2802.c **** 					   
3262:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xA4);
3263:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xA2);
3264:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xA3);
3265:TP2824/TP2802.c **** 						   
3266:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0x00);
3267:TP2824/TP2802.c **** 						   delay(1);//5ms
3268:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0x83);
3269:TP2824/TP2802.c **** 					   }
3270:TP2824/TP2802.c **** 
3271:TP2824/TP2802.c **** 			   	}
3272:TP2824/TP2802.c **** 			break;
3273:TP2824/TP2802.c **** 			//#endif
3274:TP2824/TP2802.c **** }
3275:TP2824/TP2802.c **** 
3276:TP2824/TP2802.c **** }
3277:TP2824/TP2802.c **** #endif
3278:TP2824/TP2802.c **** void ConvertData(unsigned char dat, unsigned char buf_index)
3279:TP2824/TP2802.c **** {
 2560              		.loc 1 3279 0
 2561              		.cfi_startproc
 2562              		@ args = 0, pretend = 0, frame = 0
 2563              		@ frame_needed = 0, uses_anonymous_args = 0
 2564              		@ link register save eliminated.
 2565              	.LVL351:
 2566 0000 10B4     		push	{r4}
 2567              	.LCFI21:
 2568              		.cfi_def_cfa_offset 4
 2569              		.cfi_offset 4, -4
ARM GAS  /tmp/ccSTfybG.s 			page 108


3280:TP2824/TP2802.c ****     unsigned char i;
3281:TP2824/TP2802.c **** 
3282:TP2824/TP2802.c ****     PTZ_pelco=0;
 2570              		.loc 1 3282 0
 2571 0002 0022     		movs	r2, #0
 2572 0004 124B     		ldr	r3, .L248
 2573 0006 1A80     		strh	r2, [r3]	@ movhi
 2574              	.LVL352:
3283:TP2824/TP2802.c **** 
3284:TP2824/TP2802.c ****     for(i = 0; i < 8; i++)
 2575              		.loc 1 3284 0
 2576 0008 07E0     		b	.L241
 2577              	.LVL353:
 2578              	.L247:
3285:TP2824/TP2802.c ****     {
3286:TP2824/TP2802.c ****         PTZ_pelco <<= 3;
3287:TP2824/TP2802.c **** 
3288:TP2824/TP2802.c ****         if(0x80 & dat) PTZ_pelco |= 0x06;
 2579              		.loc 1 3288 0 discriminator 1
 2580 000a 43F00603 		orr	r3, r3, #6
 2581 000e 104C     		ldr	r4, .L248
 2582 0010 2380     		strh	r3, [r4]	@ movhi
 2583              	.L243:
3289:TP2824/TP2802.c ****         else PTZ_pelco |= 0x04;
3290:TP2824/TP2802.c **** 
3291:TP2824/TP2802.c ****         dat <<= 1;
 2584              		.loc 1 3291 0 discriminator 2
 2585 0012 4000     		lsls	r0, r0, #1
 2586              	.LVL354:
 2587 0014 C0B2     		uxtb	r0, r0
 2588              	.LVL355:
3284:TP2824/TP2802.c ****     {
 2589              		.loc 1 3284 0 discriminator 2
 2590 0016 0132     		adds	r2, r2, #1
 2591              	.LVL356:
 2592 0018 D2B2     		uxtb	r2, r2
 2593              	.LVL357:
 2594              	.L241:
3284:TP2824/TP2802.c ****     {
 2595              		.loc 1 3284 0 is_stmt 0 discriminator 1
 2596 001a 072A     		cmp	r2, #7
 2597 001c 0BD8     		bhi	.L246
3286:TP2824/TP2802.c **** 
 2598              		.loc 1 3286 0 is_stmt 1
 2599 001e 0C4B     		ldr	r3, .L248
 2600 0020 1B88     		ldrh	r3, [r3]
 2601 0022 DB00     		lsls	r3, r3, #3
 2602 0024 9BB2     		uxth	r3, r3
3288:TP2824/TP2802.c ****         else PTZ_pelco |= 0x04;
 2603              		.loc 1 3288 0
 2604 0026 10F0800F 		tst	r0, #128
 2605 002a EED1     		bne	.L247
3289:TP2824/TP2802.c **** 
 2606              		.loc 1 3289 0
 2607 002c 43F00403 		orr	r3, r3, #4
 2608 0030 074C     		ldr	r4, .L248
 2609 0032 2380     		strh	r3, [r4]	@ movhi
ARM GAS  /tmp/ccSTfybG.s 			page 109


 2610 0034 EDE7     		b	.L243
 2611              	.L246:
3292:TP2824/TP2802.c ****     }
3293:TP2824/TP2802.c ****     PTZ_buf[buf_index]= (PTZ_pelco>>16)&0xff;
 2612              		.loc 1 3293 0
 2613 0036 074B     		ldr	r3, .L248+4
 2614 0038 0022     		movs	r2, #0
 2615              	.LVL358:
 2616 003a 5A54     		strb	r2, [r3, r1]
3294:TP2824/TP2802.c ****     PTZ_buf[buf_index+1]= (PTZ_pelco>>8)&0xff;
 2617              		.loc 1 3294 0
 2618 003c 044A     		ldr	r2, .L248
 2619 003e 1288     		ldrh	r2, [r2]
 2620 0040 481C     		adds	r0, r1, #1
 2621              	.LVL359:
 2622 0042 140A     		lsrs	r4, r2, #8
 2623 0044 1C54     		strb	r4, [r3, r0]
3295:TP2824/TP2802.c ****     PTZ_buf[buf_index+2]= (PTZ_pelco)&0xff;
 2624              		.loc 1 3295 0
 2625 0046 0231     		adds	r1, r1, #2
 2626              	.LVL360:
 2627 0048 5A54     		strb	r2, [r3, r1]
3296:TP2824/TP2802.c **** }
 2628              		.loc 1 3296 0
 2629 004a 10BC     		pop	{r4}
 2630              	.LCFI22:
 2631              		.cfi_restore 4
 2632              		.cfi_def_cfa_offset 0
 2633 004c 7047     		bx	lr
 2634              	.L249:
 2635 004e 00BF     		.align	2
 2636              	.L248:
 2637 0050 00000000 		.word	PTZ_pelco
 2638 0054 00000000 		.word	PTZ_buf
 2639              		.cfi_endproc
 2640              	.LFE91:
 2642              		.section	.text.SwapBit,"ax",%progbits
 2643              		.align	1
 2644              		.global	SwapBit
 2645              		.syntax unified
 2646              		.thumb
 2647              		.thumb_func
 2648              		.fpu softvfp
 2650              	SwapBit:
 2651              	.LFB92:
3297:TP2824/TP2802.c **** unsigned char SwapBit(unsigned char dat, unsigned char buf_index)
3298:TP2824/TP2802.c **** {
 2652              		.loc 1 3298 0
 2653              		.cfi_startproc
 2654              		@ args = 0, pretend = 0, frame = 0
 2655              		@ frame_needed = 0, uses_anonymous_args = 0
 2656              		@ link register save eliminated.
 2657              	.LVL361:
 2658 0000 30B4     		push	{r4, r5}
 2659              	.LCFI23:
 2660              		.cfi_def_cfa_offset 8
 2661              		.cfi_offset 4, -8
ARM GAS  /tmp/ccSTfybG.s 			page 110


 2662              		.cfi_offset 5, -4
 2663 0002 0246     		mov	r2, r0
 2664              	.LVL362:
3299:TP2824/TP2802.c ****     unsigned char i;
3300:TP2824/TP2802.c ****     unsigned char ret=0;
3301:TP2824/TP2802.c ****     crc=0;
 2665              		.loc 1 3301 0
 2666 0004 0023     		movs	r3, #0
 2667 0006 1448     		ldr	r0, .L256
 2668              	.LVL363:
 2669 0008 0370     		strb	r3, [r0]
 2670              	.LVL364:
3300:TP2824/TP2802.c ****     crc=0;
 2671              		.loc 1 3300 0
 2672 000a 1846     		mov	r0, r3
3302:TP2824/TP2802.c ****     for(i = 0; i < 8; i++ )
 2673              		.loc 1 3302 0
 2674 000c 03E0     		b	.L251
 2675              	.LVL365:
 2676              	.L252:
3303:TP2824/TP2802.c ****     {
3304:TP2824/TP2802.c ****         ret >>= 1;
3305:TP2824/TP2802.c ****         if(0x80 & dat)
3306:TP2824/TP2802.c ****         {
3307:TP2824/TP2802.c ****             ret |= 0x80;
3308:TP2824/TP2802.c ****             crc +=0x80;
3309:TP2824/TP2802.c ****         }
3310:TP2824/TP2802.c ****         dat <<= 1;
 2677              		.loc 1 3310 0 discriminator 2
 2678 000e 5200     		lsls	r2, r2, #1
 2679              	.LVL366:
 2680 0010 D2B2     		uxtb	r2, r2
 2681              	.LVL367:
3302:TP2824/TP2802.c ****     for(i = 0; i < 8; i++ )
 2682              		.loc 1 3302 0 discriminator 2
 2683 0012 0133     		adds	r3, r3, #1
 2684              	.LVL368:
 2685 0014 DBB2     		uxtb	r3, r3
 2686              	.LVL369:
 2687              	.L251:
3302:TP2824/TP2802.c ****     for(i = 0; i < 8; i++ )
 2688              		.loc 1 3302 0 is_stmt 0 discriminator 1
 2689 0016 072B     		cmp	r3, #7
 2690 0018 0BD8     		bhi	.L255
3304:TP2824/TP2802.c ****         if(0x80 & dat)
 2691              		.loc 1 3304 0 is_stmt 1
 2692 001a 4008     		lsrs	r0, r0, #1
 2693              	.LVL370:
3305:TP2824/TP2802.c ****         {
 2694              		.loc 1 3305 0
 2695 001c 12F0800F 		tst	r2, #128
 2696 0020 F5D0     		beq	.L252
3307:TP2824/TP2802.c ****             crc +=0x80;
 2697              		.loc 1 3307 0
 2698 0022 60F07F00 		orn	r0, r0, #127
 2699              	.LVL371:
 2700 0026 C0B2     		uxtb	r0, r0
ARM GAS  /tmp/ccSTfybG.s 			page 111


 2701              	.LVL372:
3308:TP2824/TP2802.c ****         }
 2702              		.loc 1 3308 0
 2703 0028 0B4D     		ldr	r5, .L256
 2704 002a 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 2705 002c 803C     		subs	r4, r4, #128
 2706 002e 2C70     		strb	r4, [r5]
 2707 0030 EDE7     		b	.L252
 2708              	.L255:
3311:TP2824/TP2802.c ****     }
3312:TP2824/TP2802.c ****     PTZ_buf[buf_index]= 0x02;
 2709              		.loc 1 3312 0
 2710 0032 0A4B     		ldr	r3, .L256+4
 2711              	.LVL373:
 2712 0034 0222     		movs	r2, #2
 2713              	.LVL374:
 2714 0036 5A54     		strb	r2, [r3, r1]
3313:TP2824/TP2802.c ****     PTZ_buf[buf_index+1]= ret;
 2715              		.loc 1 3313 0
 2716 0038 4A1C     		adds	r2, r1, #1
 2717 003a 9854     		strb	r0, [r3, r2]
3314:TP2824/TP2802.c ****     PTZ_buf[buf_index+2]= 0x7f|crc;
 2718              		.loc 1 3314 0
 2719 003c 8C1C     		adds	r4, r1, #2
 2720 003e 064A     		ldr	r2, .L256
 2721 0040 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2722 0042 42F07F02 		orr	r2, r2, #127
 2723 0046 1A55     		strb	r2, [r3, r4]
3315:TP2824/TP2802.c ****     PTZ_buf[buf_index+3]= 0xff;
 2724              		.loc 1 3315 0
 2725 0048 CA1C     		adds	r2, r1, #3
 2726 004a FF24     		movs	r4, #255
 2727 004c 9C54     		strb	r4, [r3, r2]
3316:TP2824/TP2802.c ****     PTZ_buf[buf_index+4]= 0xfc;
 2728              		.loc 1 3316 0
 2729 004e 0431     		adds	r1, r1, #4
 2730              	.LVL375:
 2731 0050 FC22     		movs	r2, #252
 2732 0052 5A54     		strb	r2, [r3, r1]
3317:TP2824/TP2802.c ****     return ret;
3318:TP2824/TP2802.c **** }
 2733              		.loc 1 3318 0
 2734 0054 30BC     		pop	{r4, r5}
 2735              	.LCFI24:
 2736              		.cfi_restore 5
 2737              		.cfi_restore 4
 2738              		.cfi_def_cfa_offset 0
 2739 0056 7047     		bx	lr
 2740              	.L257:
 2741              		.align	2
 2742              	.L256:
 2743 0058 00000000 		.word	crc
 2744 005c 00000000 		.word	PTZ_buf
 2745              		.cfi_endproc
 2746              	.LFE92:
 2748              		.section	.text.AHDBitsReverse,"ax",%progbits
 2749              		.align	1
ARM GAS  /tmp/ccSTfybG.s 			page 112


 2750              		.global	AHDBitsReverse
 2751              		.syntax unified
 2752              		.thumb
 2753              		.thumb_func
 2754              		.fpu softvfp
 2756              	AHDBitsReverse:
 2757              	.LFB93:
3319:TP2824/TP2802.c **** 
3320:TP2824/TP2802.c **** BYTE AHDBitsReverse(BYTE val)
3321:TP2824/TP2802.c **** {
 2758              		.loc 1 3321 0
 2759              		.cfi_startproc
 2760              		@ args = 0, pretend = 0, frame = 0
 2761              		@ frame_needed = 0, uses_anonymous_args = 0
 2762              		@ link register save eliminated.
 2763              	.LVL376:
 2764 0000 30B4     		push	{r4, r5}
 2765              	.LCFI25:
 2766              		.cfi_def_cfa_offset 8
 2767              		.cfi_offset 4, -8
 2768              		.cfi_offset 5, -4
 2769 0002 0446     		mov	r4, r0
 2770              	.LVL377:
3322:TP2824/TP2802.c **** 	BYTE i;
3323:TP2824/TP2802.c **** 	BYTE cnt=7;
3324:TP2824/TP2802.c **** 	BYTE bitflag=0x01;
3325:TP2824/TP2802.c **** 	BYTE rval=0x00;
 2771              		.loc 1 3325 0
 2772 0004 0020     		movs	r0, #0
 2773              	.LVL378:
3324:TP2824/TP2802.c **** 	BYTE rval=0x00;
 2774              		.loc 1 3324 0
 2775 0006 0125     		movs	r5, #1
3323:TP2824/TP2802.c **** 	BYTE bitflag=0x01;
 2776              		.loc 1 3323 0
 2777 0008 0721     		movs	r1, #7
3326:TP2824/TP2802.c **** 	for(i=0;i<4;i++){
 2778              		.loc 1 3326 0
 2779 000a 0246     		mov	r2, r0
 2780 000c 0BE0     		b	.L259
 2781              	.LVL379:
 2782              	.L260:
3327:TP2824/TP2802.c **** 		rval|=((val>>cnt)&bitflag);
 2783              		.loc 1 3327 0 discriminator 3
 2784 000e 44FA01F3 		asr	r3, r4, r1
 2785 0012 2B40     		ands	r3, r3, r5
 2786 0014 5BB2     		sxtb	r3, r3
 2787 0016 0343     		orrs	r3, r3, r0
 2788 0018 D8B2     		uxtb	r0, r3
 2789              	.LVL380:
3328:TP2824/TP2802.c **** 		bitflag<<=1;
 2790              		.loc 1 3328 0 discriminator 3
 2791 001a 6D00     		lsls	r5, r5, #1
 2792              	.LVL381:
 2793 001c EDB2     		uxtb	r5, r5
 2794              	.LVL382:
3329:TP2824/TP2802.c **** 		cnt-=2;
ARM GAS  /tmp/ccSTfybG.s 			page 113


 2795              		.loc 1 3329 0 discriminator 3
 2796 001e 0239     		subs	r1, r1, #2
 2797              	.LVL383:
 2798 0020 C9B2     		uxtb	r1, r1
 2799              	.LVL384:
3326:TP2824/TP2802.c **** 		rval|=((val>>cnt)&bitflag);
 2800              		.loc 1 3326 0 discriminator 3
 2801 0022 0132     		adds	r2, r2, #1
 2802              	.LVL385:
 2803 0024 D2B2     		uxtb	r2, r2
 2804              	.LVL386:
 2805              	.L259:
3326:TP2824/TP2802.c **** 		rval|=((val>>cnt)&bitflag);
 2806              		.loc 1 3326 0 is_stmt 0 discriminator 1
 2807 0026 032A     		cmp	r2, #3
 2808 0028 F1D9     		bls	.L260
3330:TP2824/TP2802.c **** 	}
3331:TP2824/TP2802.c **** 	cnt=7;
3332:TP2824/TP2802.c **** 	bitflag=0x80;
 2809              		.loc 1 3332 0 is_stmt 1
 2810 002a 8025     		movs	r5, #128
 2811              	.LVL387:
3331:TP2824/TP2802.c **** 	bitflag=0x80;
 2812              		.loc 1 3331 0
 2813 002c 0721     		movs	r1, #7
 2814              	.LVL388:
3333:TP2824/TP2802.c **** 	for(i=0;i<4;i++){
 2815              		.loc 1 3333 0
 2816 002e 0022     		movs	r2, #0
 2817              	.LVL389:
 2818 0030 0AE0     		b	.L261
 2819              	.LVL390:
 2820              	.L262:
3334:TP2824/TP2802.c **** 		rval|=((val<<cnt)&bitflag);
 2821              		.loc 1 3334 0 discriminator 3
 2822 0032 04FA01F3 		lsl	r3, r4, r1
 2823 0036 2B40     		ands	r3, r3, r5
 2824 0038 5BB2     		sxtb	r3, r3
 2825 003a 0343     		orrs	r3, r3, r0
 2826 003c D8B2     		uxtb	r0, r3
 2827              	.LVL391:
3335:TP2824/TP2802.c **** 		bitflag>>=1;
 2828              		.loc 1 3335 0 discriminator 3
 2829 003e 6D08     		lsrs	r5, r5, #1
 2830              	.LVL392:
3336:TP2824/TP2802.c **** 		cnt-=2;
 2831              		.loc 1 3336 0 discriminator 3
 2832 0040 0239     		subs	r1, r1, #2
 2833              	.LVL393:
 2834 0042 C9B2     		uxtb	r1, r1
 2835              	.LVL394:
3333:TP2824/TP2802.c **** 		rval|=((val<<cnt)&bitflag);
 2836              		.loc 1 3333 0 discriminator 3
 2837 0044 0132     		adds	r2, r2, #1
 2838              	.LVL395:
 2839 0046 D2B2     		uxtb	r2, r2
 2840              	.LVL396:
ARM GAS  /tmp/ccSTfybG.s 			page 114


 2841              	.L261:
3333:TP2824/TP2802.c **** 		rval|=((val<<cnt)&bitflag);
 2842              		.loc 1 3333 0 is_stmt 0 discriminator 1
 2843 0048 032A     		cmp	r2, #3
 2844 004a F2D9     		bls	.L262
3337:TP2824/TP2802.c **** 	}
3338:TP2824/TP2802.c **** 	return rval;
3339:TP2824/TP2802.c **** }
 2845              		.loc 1 3339 0 is_stmt 1
 2846 004c 30BC     		pop	{r4, r5}
 2847              	.LCFI26:
 2848              		.cfi_restore 5
 2849              		.cfi_restore 4
 2850              		.cfi_def_cfa_offset 0
 2851              	.LVL397:
 2852 004e 7047     		bx	lr
 2853              		.cfi_endproc
 2854              	.LFE93:
 2856              		.section	.text.HDC_SetData,"ax",%progbits
 2857              		.align	1
 2858              		.global	HDC_SetData
 2859              		.syntax unified
 2860              		.thumb
 2861              		.thumb_func
 2862              		.fpu softvfp
 2864              	HDC_SetData:
 2865              	.LFB94:
3340:TP2824/TP2802.c **** 
3341:TP2824/TP2802.c **** void HDC_SetData(tByte reg,tByte dat)
3342:TP2824/TP2802.c **** {
 2866              		.loc 1 3342 0
 2867              		.cfi_startproc
 2868              		@ args = 0, pretend = 0, frame = 0
 2869              		@ frame_needed = 0, uses_anonymous_args = 0
 2870              	.LVL398:
 2871 0000 38B5     		push	{r3, r4, r5, lr}
 2872              	.LCFI27:
 2873              		.cfi_def_cfa_offset 16
 2874              		.cfi_offset 3, -16
 2875              		.cfi_offset 4, -12
 2876              		.cfi_offset 5, -8
 2877              		.cfi_offset 14, -4
 2878 0002 0446     		mov	r4, r0
 2879 0004 0D46     		mov	r5, r1
3343:TP2824/TP2802.c ****     //line1
3344:TP2824/TP2802.c ****     //tp28xx_byte_write(reg + 0 , 0x00);
3345:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 0 , 0x02);
 2880              		.loc 1 3345 0
 2881 0006 0221     		movs	r1, #2
 2882              	.LVL399:
 2883 0008 FFF7FEFF 		bl	tp28xx_byte_write
 2884              	.LVL400:
3346:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 1 , SwapBit(dat,1));
 2885              		.loc 1 3346 0
 2886 000c 0121     		movs	r1, #1
 2887 000e 2846     		mov	r0, r5
 2888 0010 FFF7FEFF 		bl	SwapBit
ARM GAS  /tmp/ccSTfybG.s 			page 115


 2889              	.LVL401:
 2890 0014 631C     		adds	r3, r4, #1
 2891 0016 0146     		mov	r1, r0
 2892 0018 D8B2     		uxtb	r0, r3
 2893 001a FFF7FEFF 		bl	tp28xx_byte_write
 2894              	.LVL402:
3347:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 2 , 0x7f|crc);
 2895              		.loc 1 3347 0
 2896 001e 094B     		ldr	r3, .L266
 2897 0020 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2898 0022 A01C     		adds	r0, r4, #2
 2899 0024 41F07F01 		orr	r1, r1, #127
 2900 0028 C0B2     		uxtb	r0, r0
 2901 002a FFF7FEFF 		bl	tp28xx_byte_write
 2902              	.LVL403:
3348:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 3 , 0xff);
 2903              		.loc 1 3348 0
 2904 002e E01C     		adds	r0, r4, #3
 2905 0030 FF21     		movs	r1, #255
 2906 0032 C0B2     		uxtb	r0, r0
 2907 0034 FFF7FEFF 		bl	tp28xx_byte_write
 2908              	.LVL404:
3349:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 4 , 0xfc);
 2909              		.loc 1 3349 0
 2910 0038 201D     		adds	r0, r4, #4
 2911 003a FC21     		movs	r1, #252
 2912 003c C0B2     		uxtb	r0, r0
 2913 003e FFF7FEFF 		bl	tp28xx_byte_write
 2914              	.LVL405:
3350:TP2824/TP2802.c **** }
 2915              		.loc 1 3350 0
 2916 0042 38BD     		pop	{r3, r4, r5, pc}
 2917              	.L267:
 2918              		.align	2
 2919              	.L266:
 2920 0044 00000000 		.word	crc
 2921              		.cfi_endproc
 2922              	.LFE94:
 2924              		.section	.text.HDA_SetData,"ax",%progbits
 2925              		.align	1
 2926              		.global	HDA_SetData
 2927              		.syntax unified
 2928              		.thumb
 2929              		.thumb_func
 2930              		.fpu softvfp
 2932              	HDA_SetData:
 2933              	.LFB95:
3351:TP2824/TP2802.c **** 
3352:TP2824/TP2802.c **** void HDA_SetData(tByte reg,tByte dat)
3353:TP2824/TP2802.c **** {
 2934              		.loc 1 3353 0
 2935              		.cfi_startproc
 2936              		@ args = 0, pretend = 0, frame = 0
 2937              		@ frame_needed = 0, uses_anonymous_args = 0
 2938              	.LVL406:
 2939 0000 38B5     		push	{r3, r4, r5, lr}
 2940              	.LCFI28:
ARM GAS  /tmp/ccSTfybG.s 			page 116


 2941              		.cfi_def_cfa_offset 16
 2942              		.cfi_offset 3, -16
 2943              		.cfi_offset 4, -12
 2944              		.cfi_offset 5, -8
 2945              		.cfi_offset 14, -4
 2946 0002 0446     		mov	r4, r0
 2947 0004 0846     		mov	r0, r1
 2948              	.LVL407:
3354:TP2824/TP2802.c ****     ConvertData(dat, 0);
 2949              		.loc 1 3354 0
 2950 0006 0021     		movs	r1, #0
 2951              	.LVL408:
 2952 0008 FFF7FEFF 		bl	ConvertData
 2953              	.LVL409:
3355:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 0 , PTZ_buf[0]);
 2954              		.loc 1 3355 0
 2955 000c 074D     		ldr	r5, .L270
 2956 000e 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 2957 0010 2046     		mov	r0, r4
 2958 0012 FFF7FEFF 		bl	tp28xx_byte_write
 2959              	.LVL410:
3356:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 1 , PTZ_buf[1]);
 2960              		.loc 1 3356 0
 2961 0016 601C     		adds	r0, r4, #1
 2962 0018 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 2963 001a C0B2     		uxtb	r0, r0
 2964 001c FFF7FEFF 		bl	tp28xx_byte_write
 2965              	.LVL411:
3357:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 2 , PTZ_buf[2]);
 2966              		.loc 1 3357 0
 2967 0020 A01C     		adds	r0, r4, #2
 2968 0022 A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 2969 0024 C0B2     		uxtb	r0, r0
 2970 0026 FFF7FEFF 		bl	tp28xx_byte_write
 2971              	.LVL412:
3358:TP2824/TP2802.c **** }
 2972              		.loc 1 3358 0
 2973 002a 38BD     		pop	{r3, r4, r5, pc}
 2974              	.L271:
 2975              		.align	2
 2976              	.L270:
 2977 002c 00000000 		.word	PTZ_buf
 2978              		.cfi_endproc
 2979              	.LFE95:
 2981              		.section	.text.TVICommandToAHData,"ax",%progbits
 2982              		.align	1
 2983              		.global	TVICommandToAHData
 2984              		.syntax unified
 2985              		.thumb
 2986              		.thumb_func
 2987              		.fpu softvfp
 2989              	TVICommandToAHData:
 2990              	.LFB96:
3359:TP2824/TP2802.c **** 			
3360:TP2824/TP2802.c **** //20200511 COC  >>
3361:TP2824/TP2802.c **** void TVICommandToAHData(void)
3362:TP2824/TP2802.c **** {
ARM GAS  /tmp/ccSTfybG.s 			page 117


 2991              		.loc 1 3362 0
 2992              		.cfi_startproc
 2993              		@ args = 0, pretend = 0, frame = 0
 2994              		@ frame_needed = 0, uses_anonymous_args = 0
 2995              		@ link register save eliminated.
3363:TP2824/TP2802.c **** 	AHDcmd3=TVI_speed;
 2996              		.loc 1 3363 0
 2997 0000 6D4B     		ldr	r3, .L317
 2998 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2999 0004 6D4B     		ldr	r3, .L317+4
 3000 0006 1A70     		strb	r2, [r3]
3364:TP2824/TP2802.c **** 	AHDcmd4=presetNum;
 3001              		.loc 1 3364 0
 3002 0008 6D4B     		ldr	r3, .L317+8
 3003 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3004 000c 6D4B     		ldr	r3, .L317+12
 3005 000e 1A70     		strb	r2, [r3]
3365:TP2824/TP2802.c **** 	
3366:TP2824/TP2802.c **** 	if(TVI_Command==0x17)//KEY_PRESET_CALL//"preset xx"
 3006              		.loc 1 3366 0
 3007 0010 6D4B     		ldr	r3, .L317+16
 3008 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3009 0014 172B     		cmp	r3, #23
 3010 0016 30D0     		beq	.L295
3367:TP2824/TP2802.c **** 	{
3368:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3369:TP2824/TP2802.c **** 		AHDcmd2=0x07;
3370:TP2824/TP2802.c **** 		AHDcmd3=0;
3371:TP2824/TP2802.c **** 	}
3372:TP2824/TP2802.c **** 	else if(TVI_Command==0x06)//KEY_TILT_UP
 3011              		.loc 1 3372 0
 3012 0018 062B     		cmp	r3, #6
 3013 001a 37D0     		beq	.L296
3373:TP2824/TP2802.c **** 	{
3374:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3375:TP2824/TP2802.c **** 		AHDcmd2=0x08;
3376:TP2824/TP2802.c **** 	}
3377:TP2824/TP2802.c **** 	else if(TVI_Command==0x07)//KEY_TILT_DOWN
 3014              		.loc 1 3377 0
 3015 001c 072B     		cmp	r3, #7
 3016 001e 3CD0     		beq	.L297
3378:TP2824/TP2802.c **** 	{
3379:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3380:TP2824/TP2802.c **** 		AHDcmd2=0x10;
3381:TP2824/TP2802.c **** 	}
3382:TP2824/TP2802.c **** 	else if(TVI_Command==0x09)//KEY_PAN_LEFT
 3017              		.loc 1 3382 0
 3018 0020 092B     		cmp	r3, #9
 3019 0022 41D0     		beq	.L298
3383:TP2824/TP2802.c **** 	{
3384:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3385:TP2824/TP2802.c **** 		AHDcmd2=0x04;
3386:TP2824/TP2802.c **** 	}
3387:TP2824/TP2802.c **** 	else if(TVI_Command==0x08)//KEY_PAN_RIGHT
 3020              		.loc 1 3387 0
 3021 0024 082B     		cmp	r3, #8
 3022 0026 46D0     		beq	.L299
ARM GAS  /tmp/ccSTfybG.s 			page 118


3388:TP2824/TP2802.c **** 	{
3389:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3390:TP2824/TP2802.c **** 		AHDcmd2=0x02;
3391:TP2824/TP2802.c **** 	}		
3392:TP2824/TP2802.c **** 	else if(TVI_Command==0x0A)//KEY_TILT_UP + KEY_PAN_LEFT
 3023              		.loc 1 3392 0
 3024 0028 0A2B     		cmp	r3, #10
 3025 002a 4BD0     		beq	.L300
3393:TP2824/TP2802.c **** 	{
3394:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3395:TP2824/TP2802.c **** 		AHDcmd2=0x0c;
3396:TP2824/TP2802.c **** 	}
3397:TP2824/TP2802.c **** 	else if(TVI_Command==0x0C)//KEY_TILT_UP + KEY_PAN_RIGHT
 3026              		.loc 1 3397 0
 3027 002c 0C2B     		cmp	r3, #12
 3028 002e 50D0     		beq	.L301
3398:TP2824/TP2802.c **** 	{
3399:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3400:TP2824/TP2802.c **** 		AHDcmd2=0x0a;
3401:TP2824/TP2802.c **** 	}
3402:TP2824/TP2802.c **** 	else if(TVI_Command==0x0B)//KEY_TILT_DOWN + KEY_PAN_LEFT
 3029              		.loc 1 3402 0
 3030 0030 0B2B     		cmp	r3, #11
 3031 0032 55D0     		beq	.L302
3403:TP2824/TP2802.c **** 	{
3404:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3405:TP2824/TP2802.c **** 		AHDcmd2=0x14;
3406:TP2824/TP2802.c **** 	}
3407:TP2824/TP2802.c **** 	else if(TVI_Command==0x0D)//KEY_TILT_DOWN + KEY_PAN_RIGHT
 3032              		.loc 1 3407 0
 3033 0034 0D2B     		cmp	r3, #13
 3034 0036 5AD0     		beq	.L303
3408:TP2824/TP2802.c **** 	{
3409:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3410:TP2824/TP2802.c **** 		AHDcmd2=0x12;
3411:TP2824/TP2802.c **** 	}		
3412:TP2824/TP2802.c **** 	else if(TVI_Command==0x0F)//KEY_IRIS_OPEN / OSD_MENU
 3035              		.loc 1 3412 0
 3036 0038 0F2B     		cmp	r3, #15
 3037 003a 5FD0     		beq	.L304
3413:TP2824/TP2802.c **** 	{
3414:TP2824/TP2802.c **** 		AHDcmd1=0x02;
3415:TP2824/TP2802.c **** 		AHDcmd2=0x00;
3416:TP2824/TP2802.c **** 	}
3417:TP2824/TP2802.c **** 	else if(TVI_Command==0x0E)//KEY_IRIS_CLOSE
 3038              		.loc 1 3417 0
 3039 003c 0E2B     		cmp	r3, #14
 3040 003e 64D0     		beq	.L305
3418:TP2824/TP2802.c **** 	{
3419:TP2824/TP2802.c **** 		AHDcmd1=0x04;
3420:TP2824/TP2802.c **** 		AHDcmd2=0x00;
3421:TP2824/TP2802.c **** 	}
3422:TP2824/TP2802.c **** 	else if(TVI_Command==0x11)//KEY_FOCUS_FAR
 3041              		.loc 1 3422 0
 3042 0040 112B     		cmp	r3, #17
 3043 0042 69D0     		beq	.L306
3423:TP2824/TP2802.c **** 	{
ARM GAS  /tmp/ccSTfybG.s 			page 119


3424:TP2824/TP2802.c **** 		AHDcmd1=0x01;
3425:TP2824/TP2802.c **** 		AHDcmd2=0x00;
3426:TP2824/TP2802.c **** 	}
3427:TP2824/TP2802.c **** 	else if(TVI_Command==0x10)//KEY_FOCUS_NEAR
 3044              		.loc 1 3427 0
 3045 0044 102B     		cmp	r3, #16
 3046 0046 6ED0     		beq	.L307
3428:TP2824/TP2802.c **** 	{
3429:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3430:TP2824/TP2802.c **** 		AHDcmd2=0x80;
3431:TP2824/TP2802.c **** 	}
3432:TP2824/TP2802.c **** 	else if(TVI_Command==0x13)//KEY_ZOOM_TELE
 3047              		.loc 1 3432 0
 3048 0048 132B     		cmp	r3, #19
 3049 004a 73D0     		beq	.L308
3433:TP2824/TP2802.c **** 	{
3434:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3435:TP2824/TP2802.c **** 		AHDcmd2=0x20;
3436:TP2824/TP2802.c **** 	}
3437:TP2824/TP2802.c **** 	else if(TVI_Command==0x12)//KEY_ZOOM_WIDE
 3050              		.loc 1 3437 0
 3051 004c 122B     		cmp	r3, #18
 3052 004e 78D0     		beq	.L309
3438:TP2824/TP2802.c **** 	{
3439:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3440:TP2824/TP2802.c **** 		AHDcmd2=0x40;
3441:TP2824/TP2802.c **** 	}
3442:TP2824/TP2802.c **** 	else if(TVI_Command==0x14)//KEY_MOTOR_STOP
 3053              		.loc 1 3442 0
 3054 0050 142B     		cmp	r3, #20
 3055 0052 7DD0     		beq	.L310
3443:TP2824/TP2802.c **** 	{
3444:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3445:TP2824/TP2802.c **** 		AHDcmd2=0x00;
3446:TP2824/TP2802.c **** 		AHDcmd3=0x00;
3447:TP2824/TP2802.c **** 		AHDcmd4=0x00;
3448:TP2824/TP2802.c **** 	}
3449:TP2824/TP2802.c **** 	else if(TVI_Command==0x21)//TOA  PRESET SAVE
 3056              		.loc 1 3449 0
 3057 0054 212B     		cmp	r3, #33
 3058 0056 00F08580 		beq	.L311
3450:TP2824/TP2802.c **** 	{
3451:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3452:TP2824/TP2802.c **** 		AHDcmd2=0x03;
3453:TP2824/TP2802.c **** 	}
3454:TP2824/TP2802.c **** 	else if(TVI_Command==0x22)//TOA  PRESET LOAD
 3059              		.loc 1 3454 0
 3060 005a 222B     		cmp	r3, #34
 3061 005c 00F08980 		beq	.L312
3455:TP2824/TP2802.c **** 	{
3456:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3457:TP2824/TP2802.c **** 		AHDcmd2=0x07;
3458:TP2824/TP2802.c **** 	}
3459:TP2824/TP2802.c **** 	else if(TVI_Command==0x23)//TOA  Auto Scan
 3062              		.loc 1 3459 0
 3063 0060 232B     		cmp	r3, #35
 3064 0062 00F08D80 		beq	.L313
ARM GAS  /tmp/ccSTfybG.s 			page 120


3460:TP2824/TP2802.c **** 	{
3461:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3462:TP2824/TP2802.c **** 		AHDcmd2=0x07;
3463:TP2824/TP2802.c **** 	}
3464:TP2824/TP2802.c **** 	else if(TVI_Command==0x24)//TOA  Group Tour
 3065              		.loc 1 3464 0
 3066 0066 242B     		cmp	r3, #36
 3067 0068 00F09180 		beq	.L314
3465:TP2824/TP2802.c **** 	{
3466:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3467:TP2824/TP2802.c **** 		AHDcmd2=0x07;
3468:TP2824/TP2802.c **** 	}
3469:TP2824/TP2802.c **** 	else if(TVI_Command==0x25)//TOA  OSD MENU
 3068              		.loc 1 3469 0
 3069 006c 252B     		cmp	r3, #37
 3070 006e 00F09580 		beq	.L315
3470:TP2824/TP2802.c **** 	{
3471:TP2824/TP2802.c **** //		AHDcmd1=0x00;
3472:TP2824/TP2802.c **** //		AHDcmd2=0x07;
3473:TP2824/TP2802.c **** 
3474:TP2824/TP2802.c **** 		AHDcmd1=0x02;
3475:TP2824/TP2802.c **** 		AHDcmd2=0x00;
3476:TP2824/TP2802.c **** 	}
3477:TP2824/TP2802.c **** 	else if(TVI_Command==0x26)//TOA  Focus Adjust
 3071              		.loc 1 3477 0
 3072 0072 262B     		cmp	r3, #38
 3073 0074 00F09980 		beq	.L316
 3074              	.L272:
3478:TP2824/TP2802.c **** 	{
3479:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3480:TP2824/TP2802.c **** 		AHDcmd2=0x07;
3481:TP2824/TP2802.c **** 	}
3482:TP2824/TP2802.c **** 
3483:TP2824/TP2802.c **** }
 3075              		.loc 1 3483 0
 3076 0078 7047     		bx	lr
 3077              	.L295:
3368:TP2824/TP2802.c **** 		AHDcmd2=0x07;
 3078              		.loc 1 3368 0
 3079 007a 0023     		movs	r3, #0
 3080 007c 534A     		ldr	r2, .L317+20
 3081 007e 1370     		strb	r3, [r2]
3369:TP2824/TP2802.c **** 		AHDcmd3=0;
 3082              		.loc 1 3369 0
 3083 0080 534A     		ldr	r2, .L317+24
 3084 0082 0721     		movs	r1, #7
 3085 0084 1170     		strb	r1, [r2]
3370:TP2824/TP2802.c **** 	}
 3086              		.loc 1 3370 0
 3087 0086 4D4A     		ldr	r2, .L317+4
 3088 0088 1370     		strb	r3, [r2]
 3089 008a 7047     		bx	lr
 3090              	.L296:
3374:TP2824/TP2802.c **** 		AHDcmd2=0x08;
 3091              		.loc 1 3374 0
 3092 008c 4F4B     		ldr	r3, .L317+20
 3093 008e 0022     		movs	r2, #0
ARM GAS  /tmp/ccSTfybG.s 			page 121


 3094 0090 1A70     		strb	r2, [r3]
3375:TP2824/TP2802.c **** 	}
 3095              		.loc 1 3375 0
 3096 0092 4F4B     		ldr	r3, .L317+24
 3097 0094 0822     		movs	r2, #8
 3098 0096 1A70     		strb	r2, [r3]
 3099 0098 7047     		bx	lr
 3100              	.L297:
3379:TP2824/TP2802.c **** 		AHDcmd2=0x10;
 3101              		.loc 1 3379 0
 3102 009a 4C4B     		ldr	r3, .L317+20
 3103 009c 0022     		movs	r2, #0
 3104 009e 1A70     		strb	r2, [r3]
3380:TP2824/TP2802.c **** 	}
 3105              		.loc 1 3380 0
 3106 00a0 4B4B     		ldr	r3, .L317+24
 3107 00a2 1022     		movs	r2, #16
 3108 00a4 1A70     		strb	r2, [r3]
 3109 00a6 7047     		bx	lr
 3110              	.L298:
3384:TP2824/TP2802.c **** 		AHDcmd2=0x04;
 3111              		.loc 1 3384 0
 3112 00a8 484B     		ldr	r3, .L317+20
 3113 00aa 0022     		movs	r2, #0
 3114 00ac 1A70     		strb	r2, [r3]
3385:TP2824/TP2802.c **** 	}
 3115              		.loc 1 3385 0
 3116 00ae 484B     		ldr	r3, .L317+24
 3117 00b0 0422     		movs	r2, #4
 3118 00b2 1A70     		strb	r2, [r3]
 3119 00b4 7047     		bx	lr
 3120              	.L299:
3389:TP2824/TP2802.c **** 		AHDcmd2=0x02;
 3121              		.loc 1 3389 0
 3122 00b6 454B     		ldr	r3, .L317+20
 3123 00b8 0022     		movs	r2, #0
 3124 00ba 1A70     		strb	r2, [r3]
3390:TP2824/TP2802.c **** 	}		
 3125              		.loc 1 3390 0
 3126 00bc 444B     		ldr	r3, .L317+24
 3127 00be 0222     		movs	r2, #2
 3128 00c0 1A70     		strb	r2, [r3]
 3129 00c2 7047     		bx	lr
 3130              	.L300:
3394:TP2824/TP2802.c **** 		AHDcmd2=0x0c;
 3131              		.loc 1 3394 0
 3132 00c4 414B     		ldr	r3, .L317+20
 3133 00c6 0022     		movs	r2, #0
 3134 00c8 1A70     		strb	r2, [r3]
3395:TP2824/TP2802.c **** 	}
 3135              		.loc 1 3395 0
 3136 00ca 414B     		ldr	r3, .L317+24
 3137 00cc 0C22     		movs	r2, #12
 3138 00ce 1A70     		strb	r2, [r3]
 3139 00d0 7047     		bx	lr
 3140              	.L301:
3399:TP2824/TP2802.c **** 		AHDcmd2=0x0a;
ARM GAS  /tmp/ccSTfybG.s 			page 122


 3141              		.loc 1 3399 0
 3142 00d2 3E4B     		ldr	r3, .L317+20
 3143 00d4 0022     		movs	r2, #0
 3144 00d6 1A70     		strb	r2, [r3]
3400:TP2824/TP2802.c **** 	}
 3145              		.loc 1 3400 0
 3146 00d8 3D4B     		ldr	r3, .L317+24
 3147 00da 0A22     		movs	r2, #10
 3148 00dc 1A70     		strb	r2, [r3]
 3149 00de 7047     		bx	lr
 3150              	.L302:
3404:TP2824/TP2802.c **** 		AHDcmd2=0x14;
 3151              		.loc 1 3404 0
 3152 00e0 3A4B     		ldr	r3, .L317+20
 3153 00e2 0022     		movs	r2, #0
 3154 00e4 1A70     		strb	r2, [r3]
3405:TP2824/TP2802.c **** 	}
 3155              		.loc 1 3405 0
 3156 00e6 3A4B     		ldr	r3, .L317+24
 3157 00e8 1422     		movs	r2, #20
 3158 00ea 1A70     		strb	r2, [r3]
 3159 00ec 7047     		bx	lr
 3160              	.L303:
3409:TP2824/TP2802.c **** 		AHDcmd2=0x12;
 3161              		.loc 1 3409 0
 3162 00ee 374B     		ldr	r3, .L317+20
 3163 00f0 0022     		movs	r2, #0
 3164 00f2 1A70     		strb	r2, [r3]
3410:TP2824/TP2802.c **** 	}		
 3165              		.loc 1 3410 0
 3166 00f4 364B     		ldr	r3, .L317+24
 3167 00f6 1222     		movs	r2, #18
 3168 00f8 1A70     		strb	r2, [r3]
 3169 00fa 7047     		bx	lr
 3170              	.L304:
3414:TP2824/TP2802.c **** 		AHDcmd2=0x00;
 3171              		.loc 1 3414 0
 3172 00fc 334B     		ldr	r3, .L317+20
 3173 00fe 0222     		movs	r2, #2
 3174 0100 1A70     		strb	r2, [r3]
3415:TP2824/TP2802.c **** 	}
 3175              		.loc 1 3415 0
 3176 0102 334B     		ldr	r3, .L317+24
 3177 0104 0022     		movs	r2, #0
 3178 0106 1A70     		strb	r2, [r3]
 3179 0108 7047     		bx	lr
 3180              	.L305:
3419:TP2824/TP2802.c **** 		AHDcmd2=0x00;
 3181              		.loc 1 3419 0
 3182 010a 304B     		ldr	r3, .L317+20
 3183 010c 0422     		movs	r2, #4
 3184 010e 1A70     		strb	r2, [r3]
3420:TP2824/TP2802.c **** 	}
 3185              		.loc 1 3420 0
 3186 0110 2F4B     		ldr	r3, .L317+24
 3187 0112 0022     		movs	r2, #0
 3188 0114 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccSTfybG.s 			page 123


 3189 0116 7047     		bx	lr
 3190              	.L306:
3424:TP2824/TP2802.c **** 		AHDcmd2=0x00;
 3191              		.loc 1 3424 0
 3192 0118 2C4B     		ldr	r3, .L317+20
 3193 011a 0122     		movs	r2, #1
 3194 011c 1A70     		strb	r2, [r3]
3425:TP2824/TP2802.c **** 	}
 3195              		.loc 1 3425 0
 3196 011e 2C4B     		ldr	r3, .L317+24
 3197 0120 0022     		movs	r2, #0
 3198 0122 1A70     		strb	r2, [r3]
 3199 0124 7047     		bx	lr
 3200              	.L307:
3429:TP2824/TP2802.c **** 		AHDcmd2=0x80;
 3201              		.loc 1 3429 0
 3202 0126 294B     		ldr	r3, .L317+20
 3203 0128 0022     		movs	r2, #0
 3204 012a 1A70     		strb	r2, [r3]
3430:TP2824/TP2802.c **** 	}
 3205              		.loc 1 3430 0
 3206 012c 284B     		ldr	r3, .L317+24
 3207 012e 8022     		movs	r2, #128
 3208 0130 1A70     		strb	r2, [r3]
 3209 0132 7047     		bx	lr
 3210              	.L308:
3434:TP2824/TP2802.c **** 		AHDcmd2=0x20;
 3211              		.loc 1 3434 0
 3212 0134 254B     		ldr	r3, .L317+20
 3213 0136 0022     		movs	r2, #0
 3214 0138 1A70     		strb	r2, [r3]
3435:TP2824/TP2802.c **** 	}
 3215              		.loc 1 3435 0
 3216 013a 254B     		ldr	r3, .L317+24
 3217 013c 2022     		movs	r2, #32
 3218 013e 1A70     		strb	r2, [r3]
 3219 0140 7047     		bx	lr
 3220              	.L309:
3439:TP2824/TP2802.c **** 		AHDcmd2=0x40;
 3221              		.loc 1 3439 0
 3222 0142 224B     		ldr	r3, .L317+20
 3223 0144 0022     		movs	r2, #0
 3224 0146 1A70     		strb	r2, [r3]
3440:TP2824/TP2802.c **** 	}
 3225              		.loc 1 3440 0
 3226 0148 214B     		ldr	r3, .L317+24
 3227 014a 4022     		movs	r2, #64
 3228 014c 1A70     		strb	r2, [r3]
 3229 014e 7047     		bx	lr
 3230              	.L310:
3444:TP2824/TP2802.c **** 		AHDcmd2=0x00;
 3231              		.loc 1 3444 0
 3232 0150 0023     		movs	r3, #0
 3233 0152 1E4A     		ldr	r2, .L317+20
 3234 0154 1370     		strb	r3, [r2]
3445:TP2824/TP2802.c **** 		AHDcmd3=0x00;
 3235              		.loc 1 3445 0
ARM GAS  /tmp/ccSTfybG.s 			page 124


 3236 0156 1E4A     		ldr	r2, .L317+24
 3237 0158 1370     		strb	r3, [r2]
3446:TP2824/TP2802.c **** 		AHDcmd4=0x00;
 3238              		.loc 1 3446 0
 3239 015a 184A     		ldr	r2, .L317+4
 3240 015c 1370     		strb	r3, [r2]
3447:TP2824/TP2802.c **** 	}
 3241              		.loc 1 3447 0
 3242 015e 194A     		ldr	r2, .L317+12
 3243 0160 1370     		strb	r3, [r2]
 3244 0162 7047     		bx	lr
 3245              	.L311:
3451:TP2824/TP2802.c **** 		AHDcmd2=0x03;
 3246              		.loc 1 3451 0
 3247 0164 194B     		ldr	r3, .L317+20
 3248 0166 0022     		movs	r2, #0
 3249 0168 1A70     		strb	r2, [r3]
3452:TP2824/TP2802.c **** 	}
 3250              		.loc 1 3452 0
 3251 016a 194B     		ldr	r3, .L317+24
 3252 016c 0322     		movs	r2, #3
 3253 016e 1A70     		strb	r2, [r3]
 3254 0170 7047     		bx	lr
 3255              	.L312:
3456:TP2824/TP2802.c **** 		AHDcmd2=0x07;
 3256              		.loc 1 3456 0
 3257 0172 164B     		ldr	r3, .L317+20
 3258 0174 0022     		movs	r2, #0
 3259 0176 1A70     		strb	r2, [r3]
3457:TP2824/TP2802.c **** 	}
 3260              		.loc 1 3457 0
 3261 0178 154B     		ldr	r3, .L317+24
 3262 017a 0722     		movs	r2, #7
 3263 017c 1A70     		strb	r2, [r3]
 3264 017e 7047     		bx	lr
 3265              	.L313:
3461:TP2824/TP2802.c **** 		AHDcmd2=0x07;
 3266              		.loc 1 3461 0
 3267 0180 124B     		ldr	r3, .L317+20
 3268 0182 0022     		movs	r2, #0
 3269 0184 1A70     		strb	r2, [r3]
3462:TP2824/TP2802.c **** 	}
 3270              		.loc 1 3462 0
 3271 0186 124B     		ldr	r3, .L317+24
 3272 0188 0722     		movs	r2, #7
 3273 018a 1A70     		strb	r2, [r3]
 3274 018c 7047     		bx	lr
 3275              	.L314:
3466:TP2824/TP2802.c **** 		AHDcmd2=0x07;
 3276              		.loc 1 3466 0
 3277 018e 0F4B     		ldr	r3, .L317+20
 3278 0190 0022     		movs	r2, #0
 3279 0192 1A70     		strb	r2, [r3]
3467:TP2824/TP2802.c **** 	}
 3280              		.loc 1 3467 0
 3281 0194 0E4B     		ldr	r3, .L317+24
 3282 0196 0722     		movs	r2, #7
ARM GAS  /tmp/ccSTfybG.s 			page 125


 3283 0198 1A70     		strb	r2, [r3]
 3284 019a 7047     		bx	lr
 3285              	.L315:
3474:TP2824/TP2802.c **** 		AHDcmd2=0x00;
 3286              		.loc 1 3474 0
 3287 019c 0B4B     		ldr	r3, .L317+20
 3288 019e 0222     		movs	r2, #2
 3289 01a0 1A70     		strb	r2, [r3]
3475:TP2824/TP2802.c **** 	}
 3290              		.loc 1 3475 0
 3291 01a2 0B4B     		ldr	r3, .L317+24
 3292 01a4 0022     		movs	r2, #0
 3293 01a6 1A70     		strb	r2, [r3]
 3294 01a8 7047     		bx	lr
 3295              	.L316:
3479:TP2824/TP2802.c **** 		AHDcmd2=0x07;
 3296              		.loc 1 3479 0
 3297 01aa 084B     		ldr	r3, .L317+20
 3298 01ac 0022     		movs	r2, #0
 3299 01ae 1A70     		strb	r2, [r3]
3480:TP2824/TP2802.c **** 	}
 3300              		.loc 1 3480 0
 3301 01b0 074B     		ldr	r3, .L317+24
 3302 01b2 0722     		movs	r2, #7
 3303 01b4 1A70     		strb	r2, [r3]
 3304              		.loc 1 3483 0
 3305 01b6 5FE7     		b	.L272
 3306              	.L318:
 3307              		.align	2
 3308              	.L317:
 3309 01b8 00000000 		.word	TVI_speed
 3310 01bc 00000000 		.word	AHDcmd3
 3311 01c0 00000000 		.word	presetNum
 3312 01c4 00000000 		.word	AHDcmd4
 3313 01c8 00000000 		.word	TVI_Command
 3314 01cc 00000000 		.word	AHDcmd1
 3315 01d0 00000000 		.word	AHDcmd2
 3316              		.cfi_endproc
 3317              	.LFE96:
 3319              		.section	.text.ACPSTOPCOMMAND,"ax",%progbits
 3320              		.align	1
 3321              		.global	ACPSTOPCOMMAND
 3322              		.syntax unified
 3323              		.thumb
 3324              		.thumb_func
 3325              		.fpu softvfp
 3327              	ACPSTOPCOMMAND:
 3328              	.LFB97:
3484:TP2824/TP2802.c **** void ACPSTOPCOMMAND(void)
3485:TP2824/TP2802.c **** {
 3329              		.loc 1 3485 0
 3330              		.cfi_startproc
 3331              		@ args = 0, pretend = 0, frame = 0
 3332              		@ frame_needed = 0, uses_anonymous_args = 0
 3333 0000 08B5     		push	{r3, lr}
 3334              	.LCFI29:
 3335              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccSTfybG.s 			page 126


 3336              		.cfi_offset 3, -8
 3337              		.cfi_offset 14, -4
3486:TP2824/TP2802.c **** 	//stop command
3487:TP2824/TP2802.c **** 	tp28xx_byte_write(0x5a, 0x00);
 3338              		.loc 1 3487 0
 3339 0002 0021     		movs	r1, #0
 3340 0004 5A20     		movs	r0, #90
 3341 0006 FFF7FEFF 		bl	tp28xx_byte_write
 3342              	.LVL413:
3488:TP2824/TP2802.c **** 	tp28xx_byte_write(0x60, 0x00);
 3343              		.loc 1 3488 0
 3344 000a 0021     		movs	r1, #0
 3345 000c 6020     		movs	r0, #96
 3346 000e FFF7FEFF 		bl	tp28xx_byte_write
 3347              	.LVL414:
3489:TP2824/TP2802.c **** 	tp28xx_byte_write(0x66, 0x00);
 3348              		.loc 1 3489 0
 3349 0012 0021     		movs	r1, #0
 3350 0014 6620     		movs	r0, #102
 3351 0016 FFF7FEFF 		bl	tp28xx_byte_write
 3352              	.LVL415:
3490:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6c, 0x00);
 3353              		.loc 1 3490 0
 3354 001a 0021     		movs	r1, #0
 3355 001c 6C20     		movs	r0, #108
 3356 001e FFF7FEFF 		bl	tp28xx_byte_write
 3357              	.LVL416:
3491:TP2824/TP2802.c **** 	
3492:TP2824/TP2802.c **** 	
3493:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6f, 0x45);
 3358              		.loc 1 3493 0
 3359 0022 4521     		movs	r1, #69
 3360 0024 6F20     		movs	r0, #111
 3361 0026 FFF7FEFF 		bl	tp28xx_byte_write
 3362              	.LVL417:
3494:TP2824/TP2802.c **** 	//delay(5);//50ms	//20210514
3495:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6f, 0x44);
 3363              		.loc 1 3495 0
 3364 002a 4421     		movs	r1, #68
 3365 002c 6F20     		movs	r0, #111
 3366 002e FFF7FEFF 		bl	tp28xx_byte_write
 3367              	.LVL418:
3496:TP2824/TP2802.c **** 	
3497:TP2824/TP2802.c **** 	HAL_Delay(35);		 //Delay 1Vsync(~33.3msec)//20210514
 3368              		.loc 1 3497 0
 3369 0032 2320     		movs	r0, #35
 3370 0034 FFF7FEFF 		bl	HAL_Delay
 3371              	.LVL419:
3498:TP2824/TP2802.c **** 
3499:TP2824/TP2802.c **** 	//stop command
3500:TP2824/TP2802.c **** 	tp28xx_byte_write(0x5a, 0x00);
 3372              		.loc 1 3500 0
 3373 0038 0021     		movs	r1, #0
 3374 003a 5A20     		movs	r0, #90
 3375 003c FFF7FEFF 		bl	tp28xx_byte_write
 3376              	.LVL420:
3501:TP2824/TP2802.c **** 	tp28xx_byte_write(0x60, 0x00);
ARM GAS  /tmp/ccSTfybG.s 			page 127


 3377              		.loc 1 3501 0
 3378 0040 0021     		movs	r1, #0
 3379 0042 6020     		movs	r0, #96
 3380 0044 FFF7FEFF 		bl	tp28xx_byte_write
 3381              	.LVL421:
3502:TP2824/TP2802.c **** 	tp28xx_byte_write(0x66, 0x00);
 3382              		.loc 1 3502 0
 3383 0048 0021     		movs	r1, #0
 3384 004a 6620     		movs	r0, #102
 3385 004c FFF7FEFF 		bl	tp28xx_byte_write
 3386              	.LVL422:
3503:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6c, 0x00);
 3387              		.loc 1 3503 0
 3388 0050 0021     		movs	r1, #0
 3389 0052 6C20     		movs	r0, #108
 3390 0054 FFF7FEFF 		bl	tp28xx_byte_write
 3391              	.LVL423:
3504:TP2824/TP2802.c **** 
3505:TP2824/TP2802.c **** 
3506:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6f, 0x45);
 3392              		.loc 1 3506 0
 3393 0058 4521     		movs	r1, #69
 3394 005a 6F20     		movs	r0, #111
 3395 005c FFF7FEFF 		bl	tp28xx_byte_write
 3396              	.LVL424:
3507:TP2824/TP2802.c **** 	//delay(5);//50ms	//20210514
3508:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6f, 0x44);
 3397              		.loc 1 3508 0
 3398 0060 4421     		movs	r1, #68
 3399 0062 6F20     		movs	r0, #111
 3400 0064 FFF7FEFF 		bl	tp28xx_byte_write
 3401              	.LVL425:
3509:TP2824/TP2802.c **** 
3510:TP2824/TP2802.c **** 	HAL_Delay(35);		 //Delay 1Vsync(~33.3msec)//20210514
 3402              		.loc 1 3510 0
 3403 0068 2320     		movs	r0, #35
 3404 006a FFF7FEFF 		bl	HAL_Delay
 3405              	.LVL426:
3511:TP2824/TP2802.c **** 
3512:TP2824/TP2802.c **** }
 3406              		.loc 1 3512 0
 3407 006e 08BD     		pop	{r3, pc}
 3408              		.cfi_endproc
 3409              	.LFE97:
 3411              		.section	.text.Get_2824cIrq,"ax",%progbits
 3412              		.align	1
 3413              		.global	Get_2824cIrq
 3414              		.syntax unified
 3415              		.thumb
 3416              		.thumb_func
 3417              		.fpu softvfp
 3419              	Get_2824cIrq:
 3420              	.LFB98:
3513:TP2824/TP2802.c **** 	
3514:TP2824/TP2802.c **** void Get_2824cIrq(void)//cocrx
3515:TP2824/TP2802.c **** {
 3421              		.loc 1 3515 0
ARM GAS  /tmp/ccSTfybG.s 			page 128


 3422              		.cfi_startproc
 3423              		@ args = 0, pretend = 0, frame = 0
 3424              		@ frame_needed = 0, uses_anonymous_args = 0
3516:TP2824/TP2802.c **** 	tByte addr,pcnt,RegB6;
3517:TP2824/TP2802.c **** 	//tByte temp;
3518:TP2824/TP2802.c **** /*
3519:TP2824/TP2802.c **** 	if((count[0] > (EQ_COUNT+2) && state[0] == VIDEO_LOCKED) || 
3520:TP2824/TP2802.c **** 	    (count[1] > (EQ_COUNT+2) && state[1] == VIDEO_LOCKED) || 
3521:TP2824/TP2802.c **** 	    (count[2] > (EQ_COUNT+2) && state[2] == VIDEO_LOCKED) ||
3522:TP2824/TP2802.c **** 	    (count[3] > (EQ_COUNT+2) && state[3] == VIDEO_LOCKED))
3523:TP2824/TP2802.c **** 	*/
3524:TP2824/TP2802.c **** 		if((count[0] > (EQ_COUNT+2) && state[0] == VIDEO_LOCKED))
 3425              		.loc 1 3524 0
 3426 0000 B54B     		ldr	r3, .L398
 3427 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3428 0004 162B     		cmp	r3, #22
 3429 0006 40F2D583 		bls	.L388
3515:TP2824/TP2802.c **** 	tByte addr,pcnt,RegB6;
 3430              		.loc 1 3515 0 discriminator 1
 3431 000a 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3432              	.LCFI30:
 3433              		.cfi_def_cfa_offset 24
 3434              		.cfi_offset 4, -24
 3435              		.cfi_offset 5, -20
 3436              		.cfi_offset 6, -16
 3437              		.cfi_offset 7, -12
 3438              		.cfi_offset 8, -8
 3439              		.cfi_offset 14, -4
 3440 000e 82B0     		sub	sp, sp, #8
 3441              	.LCFI31:
 3442              		.cfi_def_cfa_offset 32
 3443              		.loc 1 3524 0 discriminator 1
 3444 0010 B24B     		ldr	r3, .L398+4
 3445 0012 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 3446 0014 022E     		cmp	r6, #2
 3447 0016 02D0     		beq	.L391
 3448              	.L321:
3525:TP2824/TP2802.c ****        {       
3526:TP2824/TP2802.c ****       			 
3527:TP2824/TP2802.c **** 		SetRegPage(0x04);
3528:TP2824/TP2802.c **** 		delay(1);//5ms
3529:TP2824/TP2802.c **** 
3530:TP2824/TP2802.c **** 			RegB6=tp28xx_byte_read(0xB6);
3531:TP2824/TP2802.c **** 			tp28xx_byte_read(0xB5);
3532:TP2824/TP2802.c **** 			tp28xx_byte_read(0xB4);
3533:TP2824/TP2802.c **** 
3534:TP2824/TP2802.c **** 			#if 1
3535:TP2824/TP2802.c **** //PTZ RX	//TVI_1080P COC
3536:TP2824/TP2802.c **** 		if((RegB6&0xF0) != 0)//VnRXIRQ
3537:TP2824/TP2802.c **** 		{
3538:TP2824/TP2802.c **** 			//V4RXIRQ---
3539:TP2824/TP2802.c **** 			if((RegB6&0x80) != 0  && count[3] > (EQ_COUNT+2)/*&&(state[3] == VIDEO_LOCKED)&&std[3]==TVI && m
3540:TP2824/TP2802.c **** 			{
3541:TP2824/TP2802.c **** 				SetRegPage(0x03);
3542:TP2824/TP2802.c **** 				//delay(1);//5ms
3543:TP2824/TP2802.c **** 				pcnt=0;
3544:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)//Line1 & Line2
ARM GAS  /tmp/ccSTfybG.s 			page 129


3545:TP2824/TP2802.c **** 				{
3546:TP2824/TP2802.c **** 					tpRxD[pcnt] = tp28xx_byte_read(addr);
3547:TP2824/TP2802.c **** 					pcnt++;
3548:TP2824/TP2802.c **** 				}
3549:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x00);
3550:TP2824/TP2802.c **** 				//delay(1);//5ms
3551:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x83);
3552:TP2824/TP2802.c **** 				
3553:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<5;pcnt++)
3554:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+1];
3555:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
3556:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+2];
3557:TP2824/TP2802.c **** 		#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3558:TP2824/TP2802.c **** 			//GraphicsPrint(CYAN,"(TP_PRES_DOWN=%02x)",(WORD)TP_PRES_DOWN); 		
3559:TP2824/TP2802.c **** 				printf("\r\nCOC4:");
3560:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
3561:TP2824/TP2802.c **** 					printf(" %02X",COCRX4[pcnt]);
3562:TP2824/TP2802.c **** 				printf(" %02X",COCRX4[9]);
3563:TP2824/TP2802.c **** 		#endif		
3564:TP2824/TP2802.c **** 				
3565:TP2824/TP2802.c **** 				//BOX on line  return 0x61, 0x01, 0x04, 0x9E,Lcd VINn=0x01 / Box CHn=0x04
3566:TP2824/TP2802.c **** 				//COC2: 02 B5 01 61 01 02 9E
3567:TP2824/TP2802.c **** 				if(COCRX4[3]==0x61 && COCRX4[9]==0x9E )
3568:TP2824/TP2802.c **** 				{
3569:TP2824/TP2802.c **** 					QuadBoxId|=8;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
3570:TP2824/TP2802.c **** 
3571:TP2824/TP2802.c **** 				#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3572:TP2824/TP2802.c **** 					printf("QuadBoxId %02x\r\n",  QuadBoxId);
3573:TP2824/TP2802.c **** 				#endif
3574:TP2824/TP2802.c **** 
3575:TP2824/TP2802.c **** 				if(COCRX4[4]==0x38 && COCRX4[5]==0x02 )
3576:TP2824/TP2802.c **** 					{
3577:TP2824/TP2802.c **** 					//Flisheye_CAM[CH4]=TRUE;					
3578:TP2824/TP2802.c **** 					//WriteEEP(EEP_FlishCAM4,TRUE);
3579:TP2824/TP2802.c **** 					//Flisheye_VLOSS_Count[CH4]=0;
3580:TP2824/TP2802.c **** 					QuadBoxId&=~(0x08);
3581:TP2824/TP2802.c **** 					}
3582:TP2824/TP2802.c **** 				}
3583:TP2824/TP2802.c **** 			}
3584:TP2824/TP2802.c **** 			
3585:TP2824/TP2802.c **** 			//V3RXIRQ---
3586:TP2824/TP2802.c **** 			if((RegB6&0x40) != 0  && count[2] > (EQ_COUNT+2)/*&&(state[2] == VIDEO_LOCKED)&&std[2]==TVI && m
3587:TP2824/TP2802.c **** 			{
3588:TP2824/TP2802.c **** 				SetRegPage(0x02);
3589:TP2824/TP2802.c **** 				//delay(1);//5ms
3590:TP2824/TP2802.c **** 				
3591:TP2824/TP2802.c **** 				pcnt=0;
3592:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
3593:TP2824/TP2802.c **** 				{
3594:TP2824/TP2802.c **** 					tpRxD[pcnt] = tp28xx_byte_read(addr);
3595:TP2824/TP2802.c **** 					pcnt++;
3596:TP2824/TP2802.c **** 				}
3597:TP2824/TP2802.c **** 				
3598:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x00);
3599:TP2824/TP2802.c **** 				//delay(1);//5ms
3600:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x83);
3601:TP2824/TP2802.c **** 				
ARM GAS  /tmp/ccSTfybG.s 			page 130


3602:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<5;pcnt++)
3603:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+1];
3604:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
3605:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+2];
3606:TP2824/TP2802.c **** 
3607:TP2824/TP2802.c **** 				#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3608:TP2824/TP2802.c **** 				printf("\r\nCOC3:");
3609:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
3610:TP2824/TP2802.c **** 					printf(" %02X",COCRX3[pcnt]);
3611:TP2824/TP2802.c **** 				printf(" %02X",COCRX3[9]);
3612:TP2824/TP2802.c **** 				#endif
3613:TP2824/TP2802.c **** 
3614:TP2824/TP2802.c **** 				//BOX on line  return 0x61, 0x01, 0x04, 0x9E,Lcd VINn=0x01 / Box CHn=0x04
3615:TP2824/TP2802.c **** 				//COC2: 02 B5 01 61 01 02 9E
3616:TP2824/TP2802.c **** 				if(COCRX3[3]==0x61 && COCRX3[9]==0x9E)
3617:TP2824/TP2802.c **** 				{
3618:TP2824/TP2802.c **** 					QuadBoxId|=4;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
3619:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3620:TP2824/TP2802.c **** 					printf("QuadBoxId %02x\r\n",  QuadBoxId);
3621:TP2824/TP2802.c **** 					#endif
3622:TP2824/TP2802.c **** 
3623:TP2824/TP2802.c **** 				if(COCRX3[4]==0x38 && COCRX3[5]==0x02 )
3624:TP2824/TP2802.c **** 					{
3625:TP2824/TP2802.c **** 					//Flisheye_CAM[CH3]=TRUE;	
3626:TP2824/TP2802.c **** 					//WriteEEP(EEP_FlishCAM3,TRUE);					
3627:TP2824/TP2802.c **** 					//Flisheye_VLOSS_Count[CH3]=0;
3628:TP2824/TP2802.c **** 					QuadBoxId&=~(0x04);
3629:TP2824/TP2802.c **** 					}
3630:TP2824/TP2802.c **** 				}	
3631:TP2824/TP2802.c **** 			}
3632:TP2824/TP2802.c **** 			
3633:TP2824/TP2802.c **** 			//V2RXIRQ---
3634:TP2824/TP2802.c **** 			if((RegB6&0x20) != 0  && count[1] > (EQ_COUNT+2)/*&&(state[1] == VIDEO_LOCKED) &&std[1]==TVI && 
3635:TP2824/TP2802.c **** 			{
3636:TP2824/TP2802.c **** 				SetRegPage(0x01);
3637:TP2824/TP2802.c **** 				//delay(1);//5ms
3638:TP2824/TP2802.c **** 				
3639:TP2824/TP2802.c **** 				pcnt=0;
3640:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
3641:TP2824/TP2802.c **** 				{
3642:TP2824/TP2802.c **** 					tpRxD[pcnt] = tp28xx_byte_read(addr);
3643:TP2824/TP2802.c **** 					pcnt++;
3644:TP2824/TP2802.c **** 				}
3645:TP2824/TP2802.c **** 				
3646:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x00);
3647:TP2824/TP2802.c **** 				//delay(1);//5ms
3648:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x83);
3649:TP2824/TP2802.c **** 				
3650:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<5;pcnt++)
3651:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+1];
3652:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
3653:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+2];
3654:TP2824/TP2802.c **** 
3655:TP2824/TP2802.c **** 				#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3656:TP2824/TP2802.c **** 				printf("\r\nCOC2:");
3657:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
3658:TP2824/TP2802.c **** 					printf(" %02X",COCRX2[pcnt]);
ARM GAS  /tmp/ccSTfybG.s 			page 131


3659:TP2824/TP2802.c **** 				printf(" %02X",COCRX2[9]);
3660:TP2824/TP2802.c **** 				#endif
3661:TP2824/TP2802.c **** 				
3662:TP2824/TP2802.c **** 				//BOX on line  return 0x61, 0x01, 0x04, 0x9E,Lcd VINn=0x01 / Box CHn=0x04
3663:TP2824/TP2802.c **** 				//COC2: 02 B5 01 61 01 02 9E
3664:TP2824/TP2802.c **** 				if(COCRX2[3]==0x61 && COCRX2[9]==0x9E )
3665:TP2824/TP2802.c **** 				{
3666:TP2824/TP2802.c **** 					QuadBoxId|=2;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
3667:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3668:TP2824/TP2802.c **** 					printf("QuadBoxId %02x\r\n",  QuadBoxId);
3669:TP2824/TP2802.c **** 					#endif
3670:TP2824/TP2802.c **** 
3671:TP2824/TP2802.c **** 				if(COCRX2[4]==0x38 && COCRX2[5]==0x02 )
3672:TP2824/TP2802.c **** 					{
3673:TP2824/TP2802.c **** 					//Flisheye_CAM[CH2]=TRUE;					
3674:TP2824/TP2802.c **** 					//WriteEEP(EEP_FlishCAM2,TRUE);
3675:TP2824/TP2802.c **** 					//Flisheye_VLOSS_Count[CH2]=0;
3676:TP2824/TP2802.c **** 					QuadBoxId&=~(0x02);
3677:TP2824/TP2802.c **** 					}
3678:TP2824/TP2802.c **** 				}	
3679:TP2824/TP2802.c **** 			}
3680:TP2824/TP2802.c **** 			
3681:TP2824/TP2802.c **** 			//V1RXIRQ---
3682:TP2824/TP2802.c **** 			if((RegB6&0x10) != 0  && count[0] > (EQ_COUNT+2)/*&&(state[0] == VIDEO_LOCKED) &&std[0]==TVI && 
3683:TP2824/TP2802.c **** 			{
3684:TP2824/TP2802.c **** 				SetRegPage(0x00);
3685:TP2824/TP2802.c **** 				//delay(1);//5ms
3686:TP2824/TP2802.c **** 				
3687:TP2824/TP2802.c **** 				pcnt=0;
3688:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
3689:TP2824/TP2802.c **** 				{
3690:TP2824/TP2802.c **** 					tpRxD[pcnt] = tp28xx_byte_read(addr);
3691:TP2824/TP2802.c **** 					pcnt++;
3692:TP2824/TP2802.c **** 				}
3693:TP2824/TP2802.c **** 				
3694:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x00);
3695:TP2824/TP2802.c **** 				//delay(1);//5ms
3696:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x83);
3697:TP2824/TP2802.c **** 				
3698:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<5;pcnt++)
3699:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+1];
3700:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
3701:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+2];
3702:TP2824/TP2802.c **** 				
3703:TP2824/TP2802.c **** 				#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3704:TP2824/TP2802.c **** 				printf("\r\nCOC1:");
3705:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
3706:TP2824/TP2802.c **** 					printf(" %02X",COCRX1[pcnt]);
3707:TP2824/TP2802.c **** 				printf(" %02X",COCRX1[9]);
3708:TP2824/TP2802.c **** 				#endif
3709:TP2824/TP2802.c **** 				
3710:TP2824/TP2802.c **** 				//BOX on line  return 0x61, 0x01, 0x04, 0x9E,Lcd VINn=0x01 / Box CHn=0x04
3711:TP2824/TP2802.c **** 				//COC2: 02 B5 01 61 01 02 9E
3712:TP2824/TP2802.c **** 				if(COCRX1[3]==0x61 && COCRX1[9]==0x9E )
3713:TP2824/TP2802.c **** 				{
3714:TP2824/TP2802.c **** 					QuadBoxId|=1;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
3715:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
ARM GAS  /tmp/ccSTfybG.s 			page 132


3716:TP2824/TP2802.c **** 					printf("QuadBoxId %02x\r\n",  QuadBoxId);
3717:TP2824/TP2802.c **** 					#endif
3718:TP2824/TP2802.c **** 
3719:TP2824/TP2802.c **** 				if(COCRX1[4]==0x38 && COCRX1[5]==0x02)
3720:TP2824/TP2802.c **** 					{
3721:TP2824/TP2802.c **** 					//Flisheye_CAM[CH1]=TRUE;
3722:TP2824/TP2802.c **** 					//WriteEEP(EEP_FlishCAM1,TRUE);
3723:TP2824/TP2802.c **** 					//Flisheye_VLOSS_Count[CH1]=0;
3724:TP2824/TP2802.c **** 					QuadBoxId&=~(0x01);
3725:TP2824/TP2802.c **** 					}
3726:TP2824/TP2802.c **** 				}	
3727:TP2824/TP2802.c **** 			}		
3728:TP2824/TP2802.c **** 			//printf("\r\n");
3729:TP2824/TP2802.c **** 			
3730:TP2824/TP2802.c **** 		}
3731:TP2824/TP2802.c **** 		#endif
3732:TP2824/TP2802.c **** //PTZ TX	
3733:TP2824/TP2802.c **** 		//else
3734:TP2824/TP2802.c **** 		if(ptztxflag==1)//no any RXIRQ
3735:TP2824/TP2802.c **** 		{
3736:TP2824/TP2802.c **** 			if( TVI == std[PtzTxChNum] )
3737:TP2824/TP2802.c **** 			{
3738:TP2824/TP2802.c **** 				if(mode[PtzTxChNum]==NTSC || mode[PtzTxChNum]==PAL)
3739:TP2824/TP2802.c **** 					{
3740:TP2824/TP2802.c **** 						tByte cmd1=0,cmd2=0,dat1=0,dat2=0;
3741:TP2824/TP2802.c **** 						
3742:TP2824/TP2802.c **** 						dat1=(tByte)TVI_speed;
3743:TP2824/TP2802.c **** 						dat2=(tByte)presetNum;
3744:TP2824/TP2802.c **** 						
3745:TP2824/TP2802.c **** 						if(TVI_Command==0x0F)//SET//Iris +
3746:TP2824/TP2802.c **** 							cmd1=0x02;
3747:TP2824/TP2802.c **** 						else if(TVI_Command==0x0E)//Iris -
3748:TP2824/TP2802.c **** 							cmd1=0x04;
3749:TP2824/TP2802.c **** 						else if(TVI_Command==0x10)//Focus -
3750:TP2824/TP2802.c **** 							cmd1=0x01;
3751:TP2824/TP2802.c **** 						else if(TVI_Command==0x11)//Focus +
3752:TP2824/TP2802.c **** 							cmd2=0x80;
3753:TP2824/TP2802.c **** 						else if(TVI_Command==0x12)//Zoom -
3754:TP2824/TP2802.c **** 							cmd2=0x40;
3755:TP2824/TP2802.c **** 						else if(TVI_Command==0x13)//Zoom +
3756:TP2824/TP2802.c **** 							cmd2=0x20;
3757:TP2824/TP2802.c **** 						else if(TVI_Command==0x06)//up
3758:TP2824/TP2802.c **** 							cmd2=0x08;
3759:TP2824/TP2802.c **** 						else if(TVI_Command==0x07)//down
3760:TP2824/TP2802.c **** 							cmd2=0x10;
3761:TP2824/TP2802.c **** 						else if(TVI_Command==0x09)//left
3762:TP2824/TP2802.c **** 							cmd2=0x04;
3763:TP2824/TP2802.c **** 						else if(TVI_Command==0x08)//right
3764:TP2824/TP2802.c **** 							cmd2=0x02;
3765:TP2824/TP2802.c **** 						else if(TVI_Command==0x0A)//up + left
3766:TP2824/TP2802.c **** 							cmd2=0x0c;
3767:TP2824/TP2802.c **** 						else if(TVI_Command==0x0C)//up + right
3768:TP2824/TP2802.c **** 							cmd2=0x0a;
3769:TP2824/TP2802.c **** 						else if(TVI_Command==0x0B)//down + left
3770:TP2824/TP2802.c **** 							cmd2=0x14;
3771:TP2824/TP2802.c **** 						else if(TVI_Command==0x0D)//down + right
3772:TP2824/TP2802.c **** 							cmd2=0x12;
ARM GAS  /tmp/ccSTfybG.s 			page 133


3773:TP2824/TP2802.c **** 						else if(TVI_Command==0x17)//PRESET x
3774:TP2824/TP2802.c **** 						{
3775:TP2824/TP2802.c **** 							cmd2=0x07;
3776:TP2824/TP2802.c **** 							dat1=0;
3777:TP2824/TP2802.c **** 							dat2=(tByte)presetNum;
3778:TP2824/TP2802.c **** 						}
3779:TP2824/TP2802.c **** 						//set:0x0f / dn:0x06 / up:0x07 / L:0x13 / R:0x12
3780:TP2824/TP2802.c **** 						cmd1=AHDBitsReverse(cmd1);//20200413
3781:TP2824/TP2802.c **** 						cmd2=AHDBitsReverse(cmd2);//20200413
3782:TP2824/TP2802.c **** 						dat1=AHDBitsReverse(dat1);//20200413
3783:TP2824/TP2802.c **** 						dat2=AHDBitsReverse(dat2);//20200413
3784:TP2824/TP2802.c **** 						
3785:TP2824/TP2802.c **** 						SetRegPage(PtzTxChNum);		                    
3786:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5a, cmd1);//command byte 1
3787:TP2824/TP2802.c **** 						tp28xx_byte_write(0x59, cmd2);//command byte 2
3788:TP2824/TP2802.c **** 
3789:TP2824/TP2802.c **** 						tp28xx_byte_write(0x60, dat1);//data byte 1
3790:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5f, dat2);//data byte 2
3791:TP2824/TP2802.c **** 
3792:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x61);
3793:TP2824/TP2802.c **** 						delay(10);//50ms
3794:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x60);
3795:TP2824/TP2802.c **** 						printf("CVBS-Tx %x,%x,%x,%x\n",cmd1,cmd2,dat1,dat2);
3796:TP2824/TP2802.c **** 
3797:TP2824/TP2802.c **** 					}
3798:TP2824/TP2802.c **** 					else//1080P
3799:TP2824/TP2802.c **** 					{
3800:TP2824/TP2802.c **** 						SetRegPage(PtzTxChNum);		                    
3801:TP2824/TP2802.c **** 						tp28xx_byte_write(0x59, (tByte)TVI_Command);
3802:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5a, (tByte)presetNum);
3803:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5d, (tByte)TVI_speed);//0x5f  check this????
3804:TP2824/TP2802.c **** 						tp28xx_byte_write(0x60, (tByte)TVI_Chksum);
3805:TP2824/TP2802.c **** 						
3806:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x41);
3807:TP2824/TP2802.c **** 						delay(10);//50ms
3808:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x40);
3809:TP2824/TP2802.c **** 						printf("TVI-Tx %x,%x,%x\n",TVI_Command,presetNum,TVI_speed);
3810:TP2824/TP2802.c **** 					}
3811:TP2824/TP2802.c **** 					
3812:TP2824/TP2802.c **** 					ptztxflag=0;
3813:TP2824/TP2802.c **** 				}
3814:TP2824/TP2802.c **** 			if( HDC == std[PtzTxChNum] )//1080P / 720P
3815:TP2824/TP2802.c **** 				{
3816:TP2824/TP2802.c **** 					SetRegPage(PtzTxChNum);	
3817:TP2824/TP2802.c **** 
3818:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6e, 0xA5);
3819:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6e, 0x02);
3820:TP2824/TP2802.c **** 					switch(TVI_Command)
3821:TP2824/TP2802.c **** 					{
3822:TP2824/TP2802.c **** 						case 0x0F://SET//Iris +
3823:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x50);
3824:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3825:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3826:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3827:TP2824/TP2802.c **** 							break;
3828:TP2824/TP2802.c **** 							
3829:TP2824/TP2802.c **** 						case 0x06://up
ARM GAS  /tmp/ccSTfybG.s 			page 134


3830:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x08);
3831:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3832:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
3833:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3834:TP2824/TP2802.c **** 							break;
3835:TP2824/TP2802.c **** 							
3836:TP2824/TP2802.c **** 						case 0x07://down
3837:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x04);
3838:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3839:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
3840:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3841:TP2824/TP2802.c **** 							break;
3842:TP2824/TP2802.c **** 							
3843:TP2824/TP2802.c **** 						case 0x09://left
3844:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x02);
3845:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
3846:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3847:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3848:TP2824/TP2802.c **** 							break;
3849:TP2824/TP2802.c **** 							
3850:TP2824/TP2802.c **** 						case 0x08://right
3851:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x01);
3852:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
3853:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3854:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3855:TP2824/TP2802.c **** 							break;
3856:TP2824/TP2802.c **** 							
3857:TP2824/TP2802.c **** 						default:	
3858:TP2824/TP2802.c **** 						case 0x14://STOP
3859:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3860:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3861:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3862:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3863:TP2824/TP2802.c **** 							break;
3864:TP2824/TP2802.c **** 					}
3865:TP2824/TP2802.c **** 					
3866:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x49);
3867:TP2824/TP2802.c **** 					delay(5);//50ms
3868:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x48);
3869:TP2824/TP2802.c **** 					ptztxflag=0;
3870:TP2824/TP2802.c **** 					printf("CVI-Tx %x\n",TVI_Command);
3871:TP2824/TP2802.c **** 				}
3872:TP2824/TP2802.c **** 			if( HDA == std[PtzTxChNum] )//1080P / 720P
3873:TP2824/TP2802.c **** 			{
3874:TP2824/TP2802.c **** 
3875:TP2824/TP2802.c **** 					TVICommandToAHData();
3876:TP2824/TP2802.c **** 				
3877:TP2824/TP2802.c **** 				  	SetRegPage(PtzTxChNum);		
3878:TP2824/TP2802.c **** 					//SetRegPage(0x04);	
3879:TP2824/TP2802.c **** 				
3880:TP2824/TP2802.c **** #if 1
3881:TP2824/TP2802.c **** 				//	if(TVI_Command==0x22)//TOA  PRESET LOAD
3882:TP2824/TP2802.c **** 				//	ACPSTOPCOMMAND();
3883:TP2824/TP2802.c **** 
3884:TP2824/TP2802.c **** 					//stop command
3885:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a, 0x00);
3886:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, 0x00);
ARM GAS  /tmp/ccSTfybG.s 			page 135


3887:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, 0x00);
3888:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, 0x00);
3889:TP2824/TP2802.c **** 					
3890:TP2824/TP2802.c **** 					
3891:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x45);
3892:TP2824/TP2802.c **** 					//delay(5);//50ms	//20210514
3893:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x44);
3894:TP2824/TP2802.c **** 					
3895:TP2824/TP2802.c **** 					HAL_Delay(35);       //Delay 1Vsync(~33.3msec)//20210514
3896:TP2824/TP2802.c **** 			
3897:TP2824/TP2802.c **** 					//command data
3898:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a, AHDBitsReverse(AHDcmd1));
3899:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, AHDBitsReverse(AHDcmd2));
3900:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, AHDBitsReverse(AHDcmd3));
3901:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, AHDBitsReverse(AHDcmd4));
3902:TP2824/TP2802.c **** 				
3903:TP2824/TP2802.c **** 
3904:TP2824/TP2802.c **** 					
3905:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x45);
3906:TP2824/TP2802.c **** 					//delay(5);//50ms	//20210514
3907:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x44);
3908:TP2824/TP2802.c **** 				
3909:TP2824/TP2802.c **** 					HAL_Delay(35);	 //Delay 1Vsync(~33.3msec)//20210514
3910:TP2824/TP2802.c **** 
3911:TP2824/TP2802.c **** 
3912:TP2824/TP2802.c **** #else
3913:TP2824/TP2802.c **** #if 0				
3914:TP2824/TP2802.c **** 					#if 0
3915:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a, 0xFF);
3916:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, 0xFF);
3917:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, 0xFF);
3918:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, 0xFF);
3919:TP2824/TP2802.c **** 					#else
3920:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a, 0x00);
3921:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, 0x00);
3922:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, 0x00);
3923:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, 0x00);
3924:TP2824/TP2802.c **** 					#endif
3925:TP2824/TP2802.c **** 					
3926:TP2824/TP2802.c **** 					#if 1
3927:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x45);
3928:TP2824/TP2802.c **** 					delay(5);//50ms
3929:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x44);
3930:TP2824/TP2802.c **** 					#else
3931:TP2824/TP2802.c **** 					Set_Mirror_COC();	
3932:TP2824/TP2802.c **** 					#endif
3933:TP2824/TP2802.c **** 
3934:TP2824/TP2802.c **** #endif				
3935:TP2824/TP2802.c **** 					//command data
3936:TP2824/TP2802.c **** 					#if 0
3937:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a,(AHDBitsReverse (AHDcmd1)));
3938:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60,( AHDBitsReverse(AHDcmd2)));
3939:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66,(AHDBitsReverse(AHDcmd3)));
3940:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c,(AHDBitsReverse(AHDcmd4)));
3941:TP2824/TP2802.c **** 					#else
3942:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a, AHDBitsReverse(AHDcmd1));
3943:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, AHDBitsReverse(AHDcmd2));
ARM GAS  /tmp/ccSTfybG.s 			page 136


3944:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, AHDBitsReverse(AHDcmd3));
3945:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, AHDBitsReverse(AHDcmd4));
3946:TP2824/TP2802.c **** 					#endif
3947:TP2824/TP2802.c **** 
3948:TP2824/TP2802.c **** 					#if 1
3949:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x45);
3950:TP2824/TP2802.c **** 					delay(5);//50ms
3951:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x44);
3952:TP2824/TP2802.c **** 					#else
3953:TP2824/TP2802.c **** 					Set_Mirror_COC();	
3954:TP2824/TP2802.c **** 					#endif
3955:TP2824/TP2802.c **** #endif					
3956:TP2824/TP2802.c **** 					ptztxflag=0;
3957:TP2824/TP2802.c **** 				//printf("~AHD %x,%x,%x,%x\n",AHDBitsReverse(AHDcmd1),AHDBitsReverse(0xF1),AHDBitsReverse(0x02)
3958:TP2824/TP2802.c **** 			
3959:TP2824/TP2802.c **** 				Printf("AHD %02x,%02x,%02x to ",(WORD)TVI_Command,(WORD)presetNum,(WORD)TVI_speed);
3960:TP2824/TP2802.c **** 				Printf("Tx %02x,%02x,%02x,%02x",(WORD)AHDcmd1,(WORD)AHDcmd2,(WORD)AHDcmd3,(WORD)AHDcmd4);
3961:TP2824/TP2802.c **** 				}
3962:TP2824/TP2802.c **** 				ptztxflag=0;
3963:TP2824/TP2802.c **** 			}
3964:TP2824/TP2802.c **** 		}
3965:TP2824/TP2802.c **** }
 3449              		.loc 1 3965 0
 3450 0018 02B0     		add	sp, sp, #8
 3451              	.LCFI32:
 3452              		.cfi_remember_state
 3453              		.cfi_def_cfa_offset 24
 3454              		@ sp needed
 3455 001a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3456              	.L391:
 3457              	.LCFI33:
 3458              		.cfi_restore_state
3527:TP2824/TP2802.c **** 		delay(1);//5ms
 3459              		.loc 1 3527 0
 3460 001e 0420     		movs	r0, #4
 3461 0020 FFF7FEFF 		bl	SetRegPage
 3462              	.LVL427:
3528:TP2824/TP2802.c **** 
 3463              		.loc 1 3528 0
 3464 0024 0120     		movs	r0, #1
 3465 0026 FFF7FEFF 		bl	delay
 3466              	.LVL428:
3530:TP2824/TP2802.c **** 			tp28xx_byte_read(0xB5);
 3467              		.loc 1 3530 0
 3468 002a B620     		movs	r0, #182
 3469 002c FFF7FEFF 		bl	tp28xx_byte_read
 3470              	.LVL429:
 3471 0030 0746     		mov	r7, r0
 3472              	.LVL430:
3531:TP2824/TP2802.c **** 			tp28xx_byte_read(0xB4);
 3473              		.loc 1 3531 0
 3474 0032 B520     		movs	r0, #181
 3475 0034 FFF7FEFF 		bl	tp28xx_byte_read
 3476              	.LVL431:
3532:TP2824/TP2802.c **** 
 3477              		.loc 1 3532 0
 3478 0038 B420     		movs	r0, #180
ARM GAS  /tmp/ccSTfybG.s 			page 137


 3479 003a FFF7FEFF 		bl	tp28xx_byte_read
 3480              	.LVL432:
3536:TP2824/TP2802.c **** 		{
 3481              		.loc 1 3536 0
 3482 003e 17F0F00F 		tst	r7, #240
 3483 0042 1AD0     		beq	.L323
3539:TP2824/TP2802.c **** 			{
 3484              		.loc 1 3539 0
 3485 0044 17F0800F 		tst	r7, #128
 3486 0048 5FD1     		bne	.L392
 3487              	.L324:
3586:TP2824/TP2802.c **** 			{
 3488              		.loc 1 3586 0
 3489 004a 17F0400F 		tst	r7, #64
 3490 004e 04D0     		beq	.L333
3586:TP2824/TP2802.c **** 			{
 3491              		.loc 1 3586 0 is_stmt 0 discriminator 1
 3492 0050 A14B     		ldr	r3, .L398
 3493 0052 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3494 0054 162B     		cmp	r3, #22
 3495 0056 00F2BB80 		bhi	.L393
 3496              	.L333:
3634:TP2824/TP2802.c **** 			{
 3497              		.loc 1 3634 0 is_stmt 1
 3498 005a 17F0200F 		tst	r7, #32
 3499 005e 04D0     		beq	.L342
3634:TP2824/TP2802.c **** 			{
 3500              		.loc 1 3634 0 is_stmt 0 discriminator 1
 3501 0060 9D4B     		ldr	r3, .L398
 3502 0062 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3503 0064 162B     		cmp	r3, #22
 3504 0066 00F21281 		bhi	.L394
 3505              	.L342:
3682:TP2824/TP2802.c **** 			{
 3506              		.loc 1 3682 0 is_stmt 1
 3507 006a 17F0100F 		tst	r7, #16
 3508 006e 04D0     		beq	.L323
3682:TP2824/TP2802.c **** 			{
 3509              		.loc 1 3682 0 is_stmt 0 discriminator 1
 3510 0070 994B     		ldr	r3, .L398
 3511 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3512 0074 162B     		cmp	r3, #22
 3513 0076 00F28D81 		bhi	.L395
 3514              	.L323:
3734:TP2824/TP2802.c **** 		{
 3515              		.loc 1 3734 0 is_stmt 1
 3516 007a 994B     		ldr	r3, .L398+8
 3517 007c 1B68     		ldr	r3, [r3]
 3518 007e 012B     		cmp	r3, #1
 3519 0080 CAD1     		bne	.L321
3736:TP2824/TP2802.c **** 			{
 3520              		.loc 1 3736 0
 3521 0082 984B     		ldr	r3, .L398+12
 3522 0084 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 3523 0086 984B     		ldr	r3, .L398+16
 3524 0088 1D5D     		ldrb	r5, [r3, r4]	@ zero_extendqisi2
 3525 008a 002D     		cmp	r5, #0
ARM GAS  /tmp/ccSTfybG.s 			page 138


 3526 008c 40F01B82 		bne	.L359
3738:TP2824/TP2802.c **** 					{
 3527              		.loc 1 3738 0
 3528 0090 964B     		ldr	r3, .L398+20
 3529 0092 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 3530 0094 083B     		subs	r3, r3, #8
 3531 0096 DBB2     		uxtb	r3, r3
 3532 0098 012B     		cmp	r3, #1
 3533 009a 00F24D82 		bhi	.L360
 3534              	.LVL433:
 3535              	.LBB2:
3742:TP2824/TP2802.c **** 						dat2=(tByte)presetNum;
 3536              		.loc 1 3742 0
 3537 009e 944B     		ldr	r3, .L398+24
 3538 00a0 1F78     		ldrb	r7, [r3]	@ zero_extendqisi2
 3539              	.LVL434:
3743:TP2824/TP2802.c **** 						
 3540              		.loc 1 3743 0
 3541 00a2 944B     		ldr	r3, .L398+28
 3542 00a4 93F80080 		ldrb	r8, [r3]	@ zero_extendqisi2
 3543              	.LVL435:
3745:TP2824/TP2802.c **** 							cmd1=0x02;
 3544              		.loc 1 3745 0
 3545 00a8 934B     		ldr	r3, .L398+32
 3546 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3547 00ac 0F2B     		cmp	r3, #15
 3548 00ae 00F0D181 		beq	.L361
3747:TP2824/TP2802.c **** 							cmd1=0x04;
 3549              		.loc 1 3747 0
 3550 00b2 0E2B     		cmp	r3, #14
 3551 00b4 00F0CD81 		beq	.L373
3749:TP2824/TP2802.c **** 							cmd1=0x01;
 3552              		.loc 1 3749 0
 3553 00b8 102B     		cmp	r3, #16
 3554 00ba 00F01582 		beq	.L374
3751:TP2824/TP2802.c **** 							cmd2=0x80;
 3555              		.loc 1 3751 0
 3556 00be 112B     		cmp	r3, #17
 3557 00c0 00F01482 		beq	.L375
3753:TP2824/TP2802.c **** 							cmd2=0x40;
 3558              		.loc 1 3753 0
 3559 00c4 122B     		cmp	r3, #18
 3560 00c6 00F01482 		beq	.L376
3755:TP2824/TP2802.c **** 							cmd2=0x20;
 3561              		.loc 1 3755 0
 3562 00ca 132B     		cmp	r3, #19
 3563 00cc 00F01482 		beq	.L377
3757:TP2824/TP2802.c **** 							cmd2=0x08;
 3564              		.loc 1 3757 0
 3565 00d0 062B     		cmp	r3, #6
 3566 00d2 00F01482 		beq	.L378
3759:TP2824/TP2802.c **** 							cmd2=0x10;
 3567              		.loc 1 3759 0
 3568 00d6 072B     		cmp	r3, #7
 3569 00d8 00F01482 		beq	.L379
3761:TP2824/TP2802.c **** 							cmd2=0x04;
 3570              		.loc 1 3761 0
ARM GAS  /tmp/ccSTfybG.s 			page 139


 3571 00dc 092B     		cmp	r3, #9
 3572 00de 00F01482 		beq	.L380
3763:TP2824/TP2802.c **** 							cmd2=0x02;
 3573              		.loc 1 3763 0
 3574 00e2 082B     		cmp	r3, #8
 3575 00e4 00F01482 		beq	.L381
3765:TP2824/TP2802.c **** 							cmd2=0x0c;
 3576              		.loc 1 3765 0
 3577 00e8 0A2B     		cmp	r3, #10
 3578 00ea 00F01582 		beq	.L382
3767:TP2824/TP2802.c **** 							cmd2=0x0a;
 3579              		.loc 1 3767 0
 3580 00ee 0C2B     		cmp	r3, #12
 3581 00f0 00F01582 		beq	.L383
3769:TP2824/TP2802.c **** 							cmd2=0x14;
 3582              		.loc 1 3769 0
 3583 00f4 0B2B     		cmp	r3, #11
 3584 00f6 00F01582 		beq	.L384
3771:TP2824/TP2802.c **** 							cmd2=0x12;
 3585              		.loc 1 3771 0
 3586 00fa 0D2B     		cmp	r3, #13
 3587 00fc 00F01582 		beq	.L385
3773:TP2824/TP2802.c **** 						{
 3588              		.loc 1 3773 0
 3589 0100 172B     		cmp	r3, #23
 3590 0102 00F01582 		beq	.L386
3740:TP2824/TP2802.c **** 						
 3591              		.loc 1 3740 0
 3592 0106 2E46     		mov	r6, r5
 3593 0108 A4E1     		b	.L361
 3594              	.LVL436:
 3595              	.L392:
 3596              	.LBE2:
3539:TP2824/TP2802.c **** 			{
 3597              		.loc 1 3539 0 discriminator 1
 3598 010a 734B     		ldr	r3, .L398
 3599 010c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3600 010e 162B     		cmp	r3, #22
 3601 0110 9BD9     		bls	.L324
3541:TP2824/TP2802.c **** 				//delay(1);//5ms
 3602              		.loc 1 3541 0
 3603 0112 0320     		movs	r0, #3
 3604 0114 FFF7FEFF 		bl	SetRegPage
 3605              	.LVL437:
3543:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)//Line1 & Line2
 3606              		.loc 1 3543 0
 3607 0118 0025     		movs	r5, #0
3544:TP2824/TP2802.c **** 				{
 3608              		.loc 1 3544 0
 3609 011a 8A24     		movs	r4, #138
 3610 011c 08E0     		b	.L325
 3611              	.LVL438:
 3612              	.L326:
3546:TP2824/TP2802.c **** 					pcnt++;
 3613              		.loc 1 3546 0 discriminator 3
 3614 011e 2046     		mov	r0, r4
 3615 0120 FFF7FEFF 		bl	tp28xx_byte_read
ARM GAS  /tmp/ccSTfybG.s 			page 140


 3616              	.LVL439:
 3617 0124 754B     		ldr	r3, .L398+36
 3618 0126 5855     		strb	r0, [r3, r5]
3547:TP2824/TP2802.c **** 				}
 3619              		.loc 1 3547 0 discriminator 3
 3620 0128 0135     		adds	r5, r5, #1
 3621              	.LVL440:
 3622 012a EDB2     		uxtb	r5, r5
 3623              	.LVL441:
3544:TP2824/TP2802.c **** 				{
 3624              		.loc 1 3544 0 discriminator 3
 3625 012c 0134     		adds	r4, r4, #1
 3626              	.LVL442:
 3627 012e E4B2     		uxtb	r4, r4
 3628              	.LVL443:
 3629              	.L325:
3544:TP2824/TP2802.c **** 				{
 3630              		.loc 1 3544 0 is_stmt 0 discriminator 1
 3631 0130 A12C     		cmp	r4, #161
 3632 0132 F4D9     		bls	.L326
3549:TP2824/TP2802.c **** 				//delay(1);//5ms
 3633              		.loc 1 3549 0 is_stmt 1
 3634 0134 0021     		movs	r1, #0
 3635 0136 A720     		movs	r0, #167
 3636 0138 FFF7FEFF 		bl	tp28xx_byte_write
 3637              	.LVL444:
3551:TP2824/TP2802.c **** 				
 3638              		.loc 1 3551 0
 3639 013c 8321     		movs	r1, #131
 3640 013e A720     		movs	r0, #167
 3641 0140 FFF7FEFF 		bl	tp28xx_byte_write
 3642              	.LVL445:
3553:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+1];
 3643              		.loc 1 3553 0
 3644 0144 0023     		movs	r3, #0
 3645 0146 05E0     		b	.L327
 3646              	.LVL446:
 3647              	.L328:
3554:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
 3648              		.loc 1 3554 0 discriminator 3
 3649 0148 5A1C     		adds	r2, r3, #1
 3650 014a 6C49     		ldr	r1, .L398+36
 3651 014c 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 3652 014e 6C49     		ldr	r1, .L398+40
 3653 0150 C854     		strb	r0, [r1, r3]
3553:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+1];
 3654              		.loc 1 3553 0 discriminator 3
 3655 0152 D3B2     		uxtb	r3, r2
 3656              	.LVL447:
 3657              	.L327:
3553:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+1];
 3658              		.loc 1 3553 0 is_stmt 0 discriminator 1
 3659 0154 042B     		cmp	r3, #4
 3660 0156 F7D9     		bls	.L328
3555:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+2];
 3661              		.loc 1 3555 0 is_stmt 1
 3662 0158 0523     		movs	r3, #5
ARM GAS  /tmp/ccSTfybG.s 			page 141


 3663              	.LVL448:
 3664 015a 06E0     		b	.L329
 3665              	.LVL449:
 3666              	.L330:
3556:TP2824/TP2802.c **** 		#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
 3667              		.loc 1 3556 0 discriminator 3
 3668 015c 9A1C     		adds	r2, r3, #2
 3669 015e 6749     		ldr	r1, .L398+36
 3670 0160 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3671 0162 674A     		ldr	r2, .L398+40
 3672 0164 D154     		strb	r1, [r2, r3]
3555:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+2];
 3673              		.loc 1 3555 0 discriminator 3
 3674 0166 0133     		adds	r3, r3, #1
 3675              	.LVL450:
 3676 0168 DBB2     		uxtb	r3, r3
 3677              	.LVL451:
 3678              	.L329:
3555:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+2];
 3679              		.loc 1 3555 0 is_stmt 0 discriminator 1
 3680 016a 092B     		cmp	r3, #9
 3681 016c F6D9     		bls	.L330
3559:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 3682              		.loc 1 3559 0 is_stmt 1
 3683 016e 6548     		ldr	r0, .L398+44
 3684 0170 FFF7FEFF 		bl	printf
 3685              	.LVL452:
3560:TP2824/TP2802.c **** 					printf(" %02X",COCRX4[pcnt]);
 3686              		.loc 1 3560 0
 3687 0174 0024     		movs	r4, #0
 3688              	.LVL453:
 3689 0176 06E0     		b	.L331
 3690              	.LVL454:
 3691              	.L332:
3561:TP2824/TP2802.c **** 				printf(" %02X",COCRX4[9]);
 3692              		.loc 1 3561 0 discriminator 3
 3693 0178 614B     		ldr	r3, .L398+40
 3694 017a 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 3695 017c 6248     		ldr	r0, .L398+48
 3696 017e FFF7FEFF 		bl	printf
 3697              	.LVL455:
3560:TP2824/TP2802.c **** 					printf(" %02X",COCRX4[pcnt]);
 3698              		.loc 1 3560 0 discriminator 3
 3699 0182 0134     		adds	r4, r4, #1
 3700              	.LVL456:
 3701 0184 E4B2     		uxtb	r4, r4
 3702              	.LVL457:
 3703              	.L331:
3560:TP2824/TP2802.c **** 					printf(" %02X",COCRX4[pcnt]);
 3704              		.loc 1 3560 0 is_stmt 0 discriminator 1
 3705 0186 052C     		cmp	r4, #5
 3706 0188 F6D9     		bls	.L332
3562:TP2824/TP2802.c **** 		#endif		
 3707              		.loc 1 3562 0 is_stmt 1
 3708 018a 5D4C     		ldr	r4, .L398+40
 3709              	.LVL458:
 3710 018c 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccSTfybG.s 			page 142


 3711 018e 5E48     		ldr	r0, .L398+48
 3712 0190 FFF7FEFF 		bl	printf
 3713              	.LVL459:
3567:TP2824/TP2802.c **** 				{
 3714              		.loc 1 3567 0
 3715 0194 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 3716 0196 612B     		cmp	r3, #97
 3717 0198 7FF457AF 		bne	.L324
3567:TP2824/TP2802.c **** 				{
 3718              		.loc 1 3567 0 is_stmt 0 discriminator 1
 3719 019c 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 3720 019e 9E2B     		cmp	r3, #158
 3721 01a0 7FF453AF 		bne	.L324
3569:TP2824/TP2802.c **** 
 3722              		.loc 1 3569 0 is_stmt 1
 3723 01a4 594B     		ldr	r3, .L398+52
 3724 01a6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3725 01a8 41F00801 		orr	r1, r1, #8
 3726 01ac 1970     		strb	r1, [r3]
3572:TP2824/TP2802.c **** 				#endif
 3727              		.loc 1 3572 0
 3728 01ae 5848     		ldr	r0, .L398+56
 3729 01b0 FFF7FEFF 		bl	printf
 3730              	.LVL460:
3575:TP2824/TP2802.c **** 					{
 3731              		.loc 1 3575 0
 3732 01b4 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3733 01b6 382B     		cmp	r3, #56
 3734 01b8 7FF447AF 		bne	.L324
3575:TP2824/TP2802.c **** 					{
 3735              		.loc 1 3575 0 is_stmt 0 discriminator 1
 3736 01bc 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 3737 01be 022B     		cmp	r3, #2
 3738 01c0 7FF443AF 		bne	.L324
3580:TP2824/TP2802.c **** 					}
 3739              		.loc 1 3580 0 is_stmt 1
 3740 01c4 514A     		ldr	r2, .L398+52
 3741 01c6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3742 01c8 23F00803 		bic	r3, r3, #8
 3743 01cc 1370     		strb	r3, [r2]
 3744 01ce 3CE7     		b	.L324
 3745              	.L393:
3588:TP2824/TP2802.c **** 				//delay(1);//5ms
 3746              		.loc 1 3588 0
 3747 01d0 0220     		movs	r0, #2
 3748 01d2 FFF7FEFF 		bl	SetRegPage
 3749              	.LVL461:
3591:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
 3750              		.loc 1 3591 0
 3751 01d6 0025     		movs	r5, #0
3592:TP2824/TP2802.c **** 				{
 3752              		.loc 1 3592 0
 3753 01d8 8A24     		movs	r4, #138
 3754 01da 08E0     		b	.L334
 3755              	.LVL462:
 3756              	.L335:
3594:TP2824/TP2802.c **** 					pcnt++;
ARM GAS  /tmp/ccSTfybG.s 			page 143


 3757              		.loc 1 3594 0 discriminator 3
 3758 01dc 2046     		mov	r0, r4
 3759 01de FFF7FEFF 		bl	tp28xx_byte_read
 3760              	.LVL463:
 3761 01e2 464B     		ldr	r3, .L398+36
 3762 01e4 5855     		strb	r0, [r3, r5]
3595:TP2824/TP2802.c **** 				}
 3763              		.loc 1 3595 0 discriminator 3
 3764 01e6 0135     		adds	r5, r5, #1
 3765              	.LVL464:
 3766 01e8 EDB2     		uxtb	r5, r5
 3767              	.LVL465:
3592:TP2824/TP2802.c **** 				{
 3768              		.loc 1 3592 0 discriminator 3
 3769 01ea 0134     		adds	r4, r4, #1
 3770              	.LVL466:
 3771 01ec E4B2     		uxtb	r4, r4
 3772              	.LVL467:
 3773              	.L334:
3592:TP2824/TP2802.c **** 				{
 3774              		.loc 1 3592 0 is_stmt 0 discriminator 1
 3775 01ee A12C     		cmp	r4, #161
 3776 01f0 F4D9     		bls	.L335
3598:TP2824/TP2802.c **** 				//delay(1);//5ms
 3777              		.loc 1 3598 0 is_stmt 1
 3778 01f2 0021     		movs	r1, #0
 3779 01f4 A720     		movs	r0, #167
 3780 01f6 FFF7FEFF 		bl	tp28xx_byte_write
 3781              	.LVL468:
3600:TP2824/TP2802.c **** 				
 3782              		.loc 1 3600 0
 3783 01fa 8321     		movs	r1, #131
 3784 01fc A720     		movs	r0, #167
 3785 01fe FFF7FEFF 		bl	tp28xx_byte_write
 3786              	.LVL469:
3602:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+1];
 3787              		.loc 1 3602 0
 3788 0202 0023     		movs	r3, #0
 3789 0204 05E0     		b	.L336
 3790              	.LVL470:
 3791              	.L337:
3603:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
 3792              		.loc 1 3603 0 discriminator 3
 3793 0206 5A1C     		adds	r2, r3, #1
 3794 0208 3C49     		ldr	r1, .L398+36
 3795 020a 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 3796 020c 4149     		ldr	r1, .L398+60
 3797 020e C854     		strb	r0, [r1, r3]
3602:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+1];
 3798              		.loc 1 3602 0 discriminator 3
 3799 0210 D3B2     		uxtb	r3, r2
 3800              	.LVL471:
 3801              	.L336:
3602:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+1];
 3802              		.loc 1 3602 0 is_stmt 0 discriminator 1
 3803 0212 042B     		cmp	r3, #4
 3804 0214 F7D9     		bls	.L337
ARM GAS  /tmp/ccSTfybG.s 			page 144


3604:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+2];
 3805              		.loc 1 3604 0 is_stmt 1
 3806 0216 0523     		movs	r3, #5
 3807              	.LVL472:
 3808 0218 06E0     		b	.L338
 3809              	.LVL473:
 3810              	.L339:
3605:TP2824/TP2802.c **** 
 3811              		.loc 1 3605 0 discriminator 3
 3812 021a 9A1C     		adds	r2, r3, #2
 3813 021c 3749     		ldr	r1, .L398+36
 3814 021e 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3815 0220 3C4A     		ldr	r2, .L398+60
 3816 0222 D154     		strb	r1, [r2, r3]
3604:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+2];
 3817              		.loc 1 3604 0 discriminator 3
 3818 0224 0133     		adds	r3, r3, #1
 3819              	.LVL474:
 3820 0226 DBB2     		uxtb	r3, r3
 3821              	.LVL475:
 3822              	.L338:
3604:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+2];
 3823              		.loc 1 3604 0 is_stmt 0 discriminator 1
 3824 0228 092B     		cmp	r3, #9
 3825 022a F6D9     		bls	.L339
3608:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 3826              		.loc 1 3608 0 is_stmt 1
 3827 022c 3A48     		ldr	r0, .L398+64
 3828 022e FFF7FEFF 		bl	printf
 3829              	.LVL476:
3609:TP2824/TP2802.c **** 					printf(" %02X",COCRX3[pcnt]);
 3830              		.loc 1 3609 0
 3831 0232 0024     		movs	r4, #0
 3832              	.LVL477:
 3833 0234 06E0     		b	.L340
 3834              	.LVL478:
 3835              	.L341:
3610:TP2824/TP2802.c **** 				printf(" %02X",COCRX3[9]);
 3836              		.loc 1 3610 0 discriminator 3
 3837 0236 374B     		ldr	r3, .L398+60
 3838 0238 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 3839 023a 3348     		ldr	r0, .L398+48
 3840 023c FFF7FEFF 		bl	printf
 3841              	.LVL479:
3609:TP2824/TP2802.c **** 					printf(" %02X",COCRX3[pcnt]);
 3842              		.loc 1 3609 0 discriminator 3
 3843 0240 0134     		adds	r4, r4, #1
 3844              	.LVL480:
 3845 0242 E4B2     		uxtb	r4, r4
 3846              	.LVL481:
 3847              	.L340:
3609:TP2824/TP2802.c **** 					printf(" %02X",COCRX3[pcnt]);
 3848              		.loc 1 3609 0 is_stmt 0 discriminator 1
 3849 0244 052C     		cmp	r4, #5
 3850 0246 F6D9     		bls	.L341
3611:TP2824/TP2802.c **** 				#endif
 3851              		.loc 1 3611 0 is_stmt 1
ARM GAS  /tmp/ccSTfybG.s 			page 145


 3852 0248 324C     		ldr	r4, .L398+60
 3853              	.LVL482:
 3854 024a 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 3855 024c 2E48     		ldr	r0, .L398+48
 3856 024e FFF7FEFF 		bl	printf
 3857              	.LVL483:
3616:TP2824/TP2802.c **** 				{
 3858              		.loc 1 3616 0
 3859 0252 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 3860 0254 612B     		cmp	r3, #97
 3861 0256 7FF400AF 		bne	.L333
3616:TP2824/TP2802.c **** 				{
 3862              		.loc 1 3616 0 is_stmt 0 discriminator 1
 3863 025a 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 3864 025c 9E2B     		cmp	r3, #158
 3865 025e 7FF4FCAE 		bne	.L333
3618:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
 3866              		.loc 1 3618 0 is_stmt 1
 3867 0262 2A4B     		ldr	r3, .L398+52
 3868 0264 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3869 0266 41F00401 		orr	r1, r1, #4
 3870 026a 1970     		strb	r1, [r3]
3620:TP2824/TP2802.c **** 					#endif
 3871              		.loc 1 3620 0
 3872 026c 2848     		ldr	r0, .L398+56
 3873 026e FFF7FEFF 		bl	printf
 3874              	.LVL484:
3623:TP2824/TP2802.c **** 					{
 3875              		.loc 1 3623 0
 3876 0272 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3877 0274 382B     		cmp	r3, #56
 3878 0276 7FF4F0AE 		bne	.L333
3623:TP2824/TP2802.c **** 					{
 3879              		.loc 1 3623 0 is_stmt 0 discriminator 1
 3880 027a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 3881 027c 022B     		cmp	r3, #2
 3882 027e 7FF4ECAE 		bne	.L333
3628:TP2824/TP2802.c **** 					}
 3883              		.loc 1 3628 0 is_stmt 1
 3884 0282 224A     		ldr	r2, .L398+52
 3885 0284 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3886 0286 23F00403 		bic	r3, r3, #4
 3887 028a 1370     		strb	r3, [r2]
 3888 028c E5E6     		b	.L333
 3889              	.L394:
3636:TP2824/TP2802.c **** 				//delay(1);//5ms
 3890              		.loc 1 3636 0
 3891 028e 0120     		movs	r0, #1
 3892 0290 FFF7FEFF 		bl	SetRegPage
 3893              	.LVL485:
3639:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
 3894              		.loc 1 3639 0
 3895 0294 0025     		movs	r5, #0
3640:TP2824/TP2802.c **** 				{
 3896              		.loc 1 3640 0
 3897 0296 8A24     		movs	r4, #138
 3898 0298 08E0     		b	.L343
ARM GAS  /tmp/ccSTfybG.s 			page 146


 3899              	.LVL486:
 3900              	.L344:
3642:TP2824/TP2802.c **** 					pcnt++;
 3901              		.loc 1 3642 0 discriminator 3
 3902 029a 2046     		mov	r0, r4
 3903 029c FFF7FEFF 		bl	tp28xx_byte_read
 3904              	.LVL487:
 3905 02a0 164B     		ldr	r3, .L398+36
 3906 02a2 5855     		strb	r0, [r3, r5]
3643:TP2824/TP2802.c **** 				}
 3907              		.loc 1 3643 0 discriminator 3
 3908 02a4 0135     		adds	r5, r5, #1
 3909              	.LVL488:
 3910 02a6 EDB2     		uxtb	r5, r5
 3911              	.LVL489:
3640:TP2824/TP2802.c **** 				{
 3912              		.loc 1 3640 0 discriminator 3
 3913 02a8 0134     		adds	r4, r4, #1
 3914              	.LVL490:
 3915 02aa E4B2     		uxtb	r4, r4
 3916              	.LVL491:
 3917              	.L343:
3640:TP2824/TP2802.c **** 				{
 3918              		.loc 1 3640 0 is_stmt 0 discriminator 1
 3919 02ac A12C     		cmp	r4, #161
 3920 02ae F4D9     		bls	.L344
3646:TP2824/TP2802.c **** 				//delay(1);//5ms
 3921              		.loc 1 3646 0 is_stmt 1
 3922 02b0 0021     		movs	r1, #0
 3923 02b2 A720     		movs	r0, #167
 3924 02b4 FFF7FEFF 		bl	tp28xx_byte_write
 3925              	.LVL492:
3648:TP2824/TP2802.c **** 				
 3926              		.loc 1 3648 0
 3927 02b8 8321     		movs	r1, #131
 3928 02ba A720     		movs	r0, #167
 3929 02bc FFF7FEFF 		bl	tp28xx_byte_write
 3930              	.LVL493:
3650:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+1];
 3931              		.loc 1 3650 0
 3932 02c0 0023     		movs	r3, #0
 3933 02c2 05E0     		b	.L345
 3934              	.LVL494:
 3935              	.L346:
3651:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
 3936              		.loc 1 3651 0 discriminator 3
 3937 02c4 5A1C     		adds	r2, r3, #1
 3938 02c6 0D49     		ldr	r1, .L398+36
 3939 02c8 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 3940 02ca 1449     		ldr	r1, .L398+68
 3941 02cc C854     		strb	r0, [r1, r3]
3650:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+1];
 3942              		.loc 1 3650 0 discriminator 3
 3943 02ce D3B2     		uxtb	r3, r2
 3944              	.LVL495:
 3945              	.L345:
3650:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+1];
ARM GAS  /tmp/ccSTfybG.s 			page 147


 3946              		.loc 1 3650 0 is_stmt 0 discriminator 1
 3947 02d0 042B     		cmp	r3, #4
 3948 02d2 F7D9     		bls	.L346
3652:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+2];
 3949              		.loc 1 3652 0 is_stmt 1
 3950 02d4 0523     		movs	r3, #5
 3951              	.LVL496:
 3952 02d6 2AE0     		b	.L347
 3953              	.L399:
 3954              		.align	2
 3955              	.L398:
 3956 02d8 00000000 		.word	count
 3957 02dc 00000000 		.word	state
 3958 02e0 00000000 		.word	ptztxflag
 3959 02e4 00000000 		.word	.LANCHOR25
 3960 02e8 00000000 		.word	std
 3961 02ec 00000000 		.word	mode
 3962 02f0 00000000 		.word	TVI_speed
 3963 02f4 00000000 		.word	presetNum
 3964 02f8 00000000 		.word	TVI_Command
 3965 02fc 00000000 		.word	tpRxD
 3966 0300 00000000 		.word	COCRX4
 3967 0304 00000000 		.word	.LC30
 3968 0308 08000000 		.word	.LC31
 3969 030c 00000000 		.word	.LANCHOR24
 3970 0310 10000000 		.word	.LC32
 3971 0314 00000000 		.word	COCRX3
 3972 0318 24000000 		.word	.LC33
 3973 031c 00000000 		.word	COCRX2
 3974              	.LVL497:
 3975              	.L348:
3653:TP2824/TP2802.c **** 
 3976              		.loc 1 3653 0 discriminator 3
 3977 0320 9A1C     		adds	r2, r3, #2
 3978 0322 B749     		ldr	r1, .L400
 3979 0324 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3980 0326 B74A     		ldr	r2, .L400+4
 3981 0328 D154     		strb	r1, [r2, r3]
3652:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+2];
 3982              		.loc 1 3652 0 discriminator 3
 3983 032a 0133     		adds	r3, r3, #1
 3984              	.LVL498:
 3985 032c DBB2     		uxtb	r3, r3
 3986              	.LVL499:
 3987              	.L347:
3652:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+2];
 3988              		.loc 1 3652 0 is_stmt 0 discriminator 1
 3989 032e 092B     		cmp	r3, #9
 3990 0330 F6D9     		bls	.L348
3656:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 3991              		.loc 1 3656 0 is_stmt 1
 3992 0332 B548     		ldr	r0, .L400+8
 3993 0334 FFF7FEFF 		bl	printf
 3994              	.LVL500:
3657:TP2824/TP2802.c **** 					printf(" %02X",COCRX2[pcnt]);
 3995              		.loc 1 3657 0
 3996 0338 0024     		movs	r4, #0
ARM GAS  /tmp/ccSTfybG.s 			page 148


 3997              	.LVL501:
 3998 033a 06E0     		b	.L349
 3999              	.LVL502:
 4000              	.L350:
3658:TP2824/TP2802.c **** 				printf(" %02X",COCRX2[9]);
 4001              		.loc 1 3658 0 discriminator 3
 4002 033c B14B     		ldr	r3, .L400+4
 4003 033e 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 4004 0340 B248     		ldr	r0, .L400+12
 4005 0342 FFF7FEFF 		bl	printf
 4006              	.LVL503:
3657:TP2824/TP2802.c **** 					printf(" %02X",COCRX2[pcnt]);
 4007              		.loc 1 3657 0 discriminator 3
 4008 0346 0134     		adds	r4, r4, #1
 4009              	.LVL504:
 4010 0348 E4B2     		uxtb	r4, r4
 4011              	.LVL505:
 4012              	.L349:
3657:TP2824/TP2802.c **** 					printf(" %02X",COCRX2[pcnt]);
 4013              		.loc 1 3657 0 is_stmt 0 discriminator 1
 4014 034a 052C     		cmp	r4, #5
 4015 034c F6D9     		bls	.L350
3659:TP2824/TP2802.c **** 				#endif
 4016              		.loc 1 3659 0 is_stmt 1
 4017 034e AD4C     		ldr	r4, .L400+4
 4018              	.LVL506:
 4019 0350 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 4020 0352 AE48     		ldr	r0, .L400+12
 4021 0354 FFF7FEFF 		bl	printf
 4022              	.LVL507:
3664:TP2824/TP2802.c **** 				{
 4023              		.loc 1 3664 0
 4024 0358 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 4025 035a 612B     		cmp	r3, #97
 4026 035c 7FF485AE 		bne	.L342
3664:TP2824/TP2802.c **** 				{
 4027              		.loc 1 3664 0 is_stmt 0 discriminator 1
 4028 0360 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 4029 0362 9E2B     		cmp	r3, #158
 4030 0364 7FF481AE 		bne	.L342
3666:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
 4031              		.loc 1 3666 0 is_stmt 1
 4032 0368 A94B     		ldr	r3, .L400+16
 4033 036a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4034 036c 41F00201 		orr	r1, r1, #2
 4035 0370 1970     		strb	r1, [r3]
3668:TP2824/TP2802.c **** 					#endif
 4036              		.loc 1 3668 0
 4037 0372 A848     		ldr	r0, .L400+20
 4038 0374 FFF7FEFF 		bl	printf
 4039              	.LVL508:
3671:TP2824/TP2802.c **** 					{
 4040              		.loc 1 3671 0
 4041 0378 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 4042 037a 382B     		cmp	r3, #56
 4043 037c 7FF475AE 		bne	.L342
3671:TP2824/TP2802.c **** 					{
ARM GAS  /tmp/ccSTfybG.s 			page 149


 4044              		.loc 1 3671 0 is_stmt 0 discriminator 1
 4045 0380 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 4046 0382 022B     		cmp	r3, #2
 4047 0384 7FF471AE 		bne	.L342
3676:TP2824/TP2802.c **** 					}
 4048              		.loc 1 3676 0 is_stmt 1
 4049 0388 A14A     		ldr	r2, .L400+16
 4050 038a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4051 038c 23F00203 		bic	r3, r3, #2
 4052 0390 1370     		strb	r3, [r2]
 4053 0392 6AE6     		b	.L342
 4054              	.L395:
3684:TP2824/TP2802.c **** 				//delay(1);//5ms
 4055              		.loc 1 3684 0
 4056 0394 0020     		movs	r0, #0
 4057 0396 FFF7FEFF 		bl	SetRegPage
 4058              	.LVL509:
3687:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
 4059              		.loc 1 3687 0
 4060 039a 0025     		movs	r5, #0
3688:TP2824/TP2802.c **** 				{
 4061              		.loc 1 3688 0
 4062 039c 8A24     		movs	r4, #138
 4063 039e 08E0     		b	.L351
 4064              	.LVL510:
 4065              	.L352:
3690:TP2824/TP2802.c **** 					pcnt++;
 4066              		.loc 1 3690 0 discriminator 3
 4067 03a0 2046     		mov	r0, r4
 4068 03a2 FFF7FEFF 		bl	tp28xx_byte_read
 4069              	.LVL511:
 4070 03a6 964B     		ldr	r3, .L400
 4071 03a8 5855     		strb	r0, [r3, r5]
3691:TP2824/TP2802.c **** 				}
 4072              		.loc 1 3691 0 discriminator 3
 4073 03aa 0135     		adds	r5, r5, #1
 4074              	.LVL512:
 4075 03ac EDB2     		uxtb	r5, r5
 4076              	.LVL513:
3688:TP2824/TP2802.c **** 				{
 4077              		.loc 1 3688 0 discriminator 3
 4078 03ae 0134     		adds	r4, r4, #1
 4079              	.LVL514:
 4080 03b0 E4B2     		uxtb	r4, r4
 4081              	.LVL515:
 4082              	.L351:
3688:TP2824/TP2802.c **** 				{
 4083              		.loc 1 3688 0 is_stmt 0 discriminator 1
 4084 03b2 A12C     		cmp	r4, #161
 4085 03b4 F4D9     		bls	.L352
3694:TP2824/TP2802.c **** 				//delay(1);//5ms
 4086              		.loc 1 3694 0 is_stmt 1
 4087 03b6 0021     		movs	r1, #0
 4088 03b8 A720     		movs	r0, #167
 4089 03ba FFF7FEFF 		bl	tp28xx_byte_write
 4090              	.LVL516:
3696:TP2824/TP2802.c **** 				
ARM GAS  /tmp/ccSTfybG.s 			page 150


 4091              		.loc 1 3696 0
 4092 03be 8321     		movs	r1, #131
 4093 03c0 A720     		movs	r0, #167
 4094 03c2 FFF7FEFF 		bl	tp28xx_byte_write
 4095              	.LVL517:
3698:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+1];
 4096              		.loc 1 3698 0
 4097 03c6 0023     		movs	r3, #0
 4098 03c8 05E0     		b	.L353
 4099              	.LVL518:
 4100              	.L354:
3699:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
 4101              		.loc 1 3699 0 discriminator 3
 4102 03ca 5A1C     		adds	r2, r3, #1
 4103 03cc 8C49     		ldr	r1, .L400
 4104 03ce 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 4105 03d0 9149     		ldr	r1, .L400+24
 4106 03d2 C854     		strb	r0, [r1, r3]
3698:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+1];
 4107              		.loc 1 3698 0 discriminator 3
 4108 03d4 D3B2     		uxtb	r3, r2
 4109              	.LVL519:
 4110              	.L353:
3698:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+1];
 4111              		.loc 1 3698 0 is_stmt 0 discriminator 1
 4112 03d6 042B     		cmp	r3, #4
 4113 03d8 F7D9     		bls	.L354
3700:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+2];
 4114              		.loc 1 3700 0 is_stmt 1
 4115 03da 0523     		movs	r3, #5
 4116              	.LVL520:
 4117 03dc 06E0     		b	.L355
 4118              	.LVL521:
 4119              	.L356:
3701:TP2824/TP2802.c **** 				
 4120              		.loc 1 3701 0 discriminator 3
 4121 03de 9A1C     		adds	r2, r3, #2
 4122 03e0 8749     		ldr	r1, .L400
 4123 03e2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 4124 03e4 8C4A     		ldr	r2, .L400+24
 4125 03e6 D154     		strb	r1, [r2, r3]
3700:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+2];
 4126              		.loc 1 3700 0 discriminator 3
 4127 03e8 0133     		adds	r3, r3, #1
 4128              	.LVL522:
 4129 03ea DBB2     		uxtb	r3, r3
 4130              	.LVL523:
 4131              	.L355:
3700:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+2];
 4132              		.loc 1 3700 0 is_stmt 0 discriminator 1
 4133 03ec 092B     		cmp	r3, #9
 4134 03ee F6D9     		bls	.L356
3704:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 4135              		.loc 1 3704 0 is_stmt 1
 4136 03f0 8A48     		ldr	r0, .L400+28
 4137 03f2 FFF7FEFF 		bl	printf
 4138              	.LVL524:
ARM GAS  /tmp/ccSTfybG.s 			page 151


3705:TP2824/TP2802.c **** 					printf(" %02X",COCRX1[pcnt]);
 4139              		.loc 1 3705 0
 4140 03f6 0024     		movs	r4, #0
 4141              	.LVL525:
 4142 03f8 06E0     		b	.L357
 4143              	.LVL526:
 4144              	.L358:
3706:TP2824/TP2802.c **** 				printf(" %02X",COCRX1[9]);
 4145              		.loc 1 3706 0 discriminator 3
 4146 03fa 874B     		ldr	r3, .L400+24
 4147 03fc 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 4148 03fe 8348     		ldr	r0, .L400+12
 4149 0400 FFF7FEFF 		bl	printf
 4150              	.LVL527:
3705:TP2824/TP2802.c **** 					printf(" %02X",COCRX1[pcnt]);
 4151              		.loc 1 3705 0 discriminator 3
 4152 0404 0134     		adds	r4, r4, #1
 4153              	.LVL528:
 4154 0406 E4B2     		uxtb	r4, r4
 4155              	.LVL529:
 4156              	.L357:
3705:TP2824/TP2802.c **** 					printf(" %02X",COCRX1[pcnt]);
 4157              		.loc 1 3705 0 is_stmt 0 discriminator 1
 4158 0408 052C     		cmp	r4, #5
 4159 040a F6D9     		bls	.L358
3707:TP2824/TP2802.c **** 				#endif
 4160              		.loc 1 3707 0 is_stmt 1
 4161 040c 824C     		ldr	r4, .L400+24
 4162              	.LVL530:
 4163 040e 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 4164 0410 7E48     		ldr	r0, .L400+12
 4165 0412 FFF7FEFF 		bl	printf
 4166              	.LVL531:
3712:TP2824/TP2802.c **** 				{
 4167              		.loc 1 3712 0
 4168 0416 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 4169 0418 612B     		cmp	r3, #97
 4170 041a 7FF42EAE 		bne	.L323
3712:TP2824/TP2802.c **** 				{
 4171              		.loc 1 3712 0 is_stmt 0 discriminator 1
 4172 041e 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 4173 0420 9E2B     		cmp	r3, #158
 4174 0422 7FF42AAE 		bne	.L323
3714:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
 4175              		.loc 1 3714 0 is_stmt 1
 4176 0426 7A4B     		ldr	r3, .L400+16
 4177 0428 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4178 042a 41F00101 		orr	r1, r1, #1
 4179 042e 1970     		strb	r1, [r3]
3716:TP2824/TP2802.c **** 					#endif
 4180              		.loc 1 3716 0
 4181 0430 7848     		ldr	r0, .L400+20
 4182 0432 FFF7FEFF 		bl	printf
 4183              	.LVL532:
3719:TP2824/TP2802.c **** 					{
 4184              		.loc 1 3719 0
 4185 0436 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccSTfybG.s 			page 152


 4186 0438 382B     		cmp	r3, #56
 4187 043a 7FF41EAE 		bne	.L323
3719:TP2824/TP2802.c **** 					{
 4188              		.loc 1 3719 0 is_stmt 0 discriminator 1
 4189 043e 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 4190 0440 022B     		cmp	r3, #2
 4191 0442 7FF41AAE 		bne	.L323
3724:TP2824/TP2802.c **** 					}
 4192              		.loc 1 3724 0 is_stmt 1
 4193 0446 724A     		ldr	r2, .L400+16
 4194 0448 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4195 044a 23F00103 		bic	r3, r3, #1
 4196 044e 1370     		strb	r3, [r2]
 4197 0450 13E6     		b	.L323
 4198              	.LVL533:
 4199              	.L373:
 4200              	.LBB3:
3748:TP2824/TP2802.c **** 						else if(TVI_Command==0x10)//Focus -
 4201              		.loc 1 3748 0
 4202 0452 0426     		movs	r6, #4
 4203              	.LVL534:
 4204              	.L361:
3780:TP2824/TP2802.c **** 						cmd2=AHDBitsReverse(cmd2);//20200413
 4205              		.loc 1 3780 0
 4206 0454 3046     		mov	r0, r6
 4207 0456 FFF7FEFF 		bl	AHDBitsReverse
 4208              	.LVL535:
 4209 045a 0646     		mov	r6, r0
 4210              	.LVL536:
3781:TP2824/TP2802.c **** 						dat1=AHDBitsReverse(dat1);//20200413
 4211              		.loc 1 3781 0
 4212 045c 2846     		mov	r0, r5
 4213 045e FFF7FEFF 		bl	AHDBitsReverse
 4214              	.LVL537:
 4215 0462 0546     		mov	r5, r0
 4216              	.LVL538:
3782:TP2824/TP2802.c **** 						dat2=AHDBitsReverse(dat2);//20200413
 4217              		.loc 1 3782 0
 4218 0464 3846     		mov	r0, r7
 4219 0466 FFF7FEFF 		bl	AHDBitsReverse
 4220              	.LVL539:
 4221 046a 0746     		mov	r7, r0
 4222              	.LVL540:
3783:TP2824/TP2802.c **** 						
 4223              		.loc 1 3783 0
 4224 046c 4046     		mov	r0, r8
 4225 046e FFF7FEFF 		bl	AHDBitsReverse
 4226              	.LVL541:
 4227 0472 8046     		mov	r8, r0
 4228              	.LVL542:
3785:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5a, cmd1);//command byte 1
 4229              		.loc 1 3785 0
 4230 0474 2046     		mov	r0, r4
 4231 0476 FFF7FEFF 		bl	SetRegPage
 4232              	.LVL543:
3786:TP2824/TP2802.c **** 						tp28xx_byte_write(0x59, cmd2);//command byte 2
 4233              		.loc 1 3786 0
ARM GAS  /tmp/ccSTfybG.s 			page 153


 4234 047a 3146     		mov	r1, r6
 4235 047c 5A20     		movs	r0, #90
 4236 047e FFF7FEFF 		bl	tp28xx_byte_write
 4237              	.LVL544:
3787:TP2824/TP2802.c **** 
 4238              		.loc 1 3787 0
 4239 0482 2946     		mov	r1, r5
 4240 0484 5920     		movs	r0, #89
 4241 0486 FFF7FEFF 		bl	tp28xx_byte_write
 4242              	.LVL545:
3789:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5f, dat2);//data byte 2
 4243              		.loc 1 3789 0
 4244 048a 3946     		mov	r1, r7
 4245 048c 6020     		movs	r0, #96
 4246 048e FFF7FEFF 		bl	tp28xx_byte_write
 4247              	.LVL546:
3790:TP2824/TP2802.c **** 
 4248              		.loc 1 3790 0
 4249 0492 4146     		mov	r1, r8
 4250 0494 5F20     		movs	r0, #95
 4251 0496 FFF7FEFF 		bl	tp28xx_byte_write
 4252              	.LVL547:
3792:TP2824/TP2802.c **** 						delay(10);//50ms
 4253              		.loc 1 3792 0
 4254 049a 6121     		movs	r1, #97
 4255 049c 6F20     		movs	r0, #111
 4256 049e FFF7FEFF 		bl	tp28xx_byte_write
 4257              	.LVL548:
3793:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x60);
 4258              		.loc 1 3793 0
 4259 04a2 0A20     		movs	r0, #10
 4260 04a4 FFF7FEFF 		bl	delay
 4261              	.LVL549:
3794:TP2824/TP2802.c **** 						printf("CVBS-Tx %x,%x,%x,%x\n",cmd1,cmd2,dat1,dat2);
 4262              		.loc 1 3794 0
 4263 04a8 6021     		movs	r1, #96
 4264 04aa 6F20     		movs	r0, #111
 4265 04ac FFF7FEFF 		bl	tp28xx_byte_write
 4266              	.LVL550:
3795:TP2824/TP2802.c **** 
 4267              		.loc 1 3795 0
 4268 04b0 CDF80080 		str	r8, [sp]
 4269 04b4 3B46     		mov	r3, r7
 4270 04b6 2A46     		mov	r2, r5
 4271 04b8 3146     		mov	r1, r6
 4272 04ba 5948     		ldr	r0, .L400+32
 4273 04bc FFF7FEFF 		bl	printf
 4274              	.LVL551:
 4275              	.L362:
 4276              	.LBE3:
3812:TP2824/TP2802.c **** 				}
 4277              		.loc 1 3812 0
 4278 04c0 584B     		ldr	r3, .L400+36
 4279 04c2 0022     		movs	r2, #0
 4280 04c4 1A60     		str	r2, [r3]
 4281              	.L359:
3814:TP2824/TP2802.c **** 				{
ARM GAS  /tmp/ccSTfybG.s 			page 154


 4282              		.loc 1 3814 0
 4283 04c6 584B     		ldr	r3, .L400+40
 4284 04c8 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4285 04ca 584B     		ldr	r3, .L400+44
 4286 04cc 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 4287 04ce 022B     		cmp	r3, #2
 4288 04d0 5BD0     		beq	.L396
 4289              	.L363:
3872:TP2824/TP2802.c **** 			{
 4290              		.loc 1 3872 0
 4291 04d2 554B     		ldr	r3, .L400+40
 4292 04d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4293 04d6 554A     		ldr	r2, .L400+44
 4294 04d8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4295 04da 012B     		cmp	r3, #1
 4296 04dc 00F00981 		beq	.L397
 4297              	.L372:
3962:TP2824/TP2802.c **** 			}
 4298              		.loc 1 3962 0
 4299 04e0 504B     		ldr	r3, .L400+36
 4300 04e2 0022     		movs	r2, #0
 4301 04e4 1A60     		str	r2, [r3]
 4302              		.loc 1 3965 0
 4303 04e6 97E5     		b	.L321
 4304              	.LVL552:
 4305              	.L374:
 4306              	.LBB4:
3750:TP2824/TP2802.c **** 						else if(TVI_Command==0x11)//Focus +
 4307              		.loc 1 3750 0
 4308 04e8 0126     		movs	r6, #1
 4309 04ea B3E7     		b	.L361
 4310              	.L375:
3740:TP2824/TP2802.c **** 						
 4311              		.loc 1 3740 0
 4312 04ec 2E46     		mov	r6, r5
3752:TP2824/TP2802.c **** 						else if(TVI_Command==0x12)//Zoom -
 4313              		.loc 1 3752 0
 4314 04ee 8025     		movs	r5, #128
 4315 04f0 B0E7     		b	.L361
 4316              	.L376:
3740:TP2824/TP2802.c **** 						
 4317              		.loc 1 3740 0
 4318 04f2 2E46     		mov	r6, r5
3754:TP2824/TP2802.c **** 						else if(TVI_Command==0x13)//Zoom +
 4319              		.loc 1 3754 0
 4320 04f4 4025     		movs	r5, #64
 4321 04f6 ADE7     		b	.L361
 4322              	.L377:
3740:TP2824/TP2802.c **** 						
 4323              		.loc 1 3740 0
 4324 04f8 2E46     		mov	r6, r5
3756:TP2824/TP2802.c **** 						else if(TVI_Command==0x06)//up
 4325              		.loc 1 3756 0
 4326 04fa 2025     		movs	r5, #32
 4327 04fc AAE7     		b	.L361
 4328              	.L378:
3740:TP2824/TP2802.c **** 						
ARM GAS  /tmp/ccSTfybG.s 			page 155


 4329              		.loc 1 3740 0
 4330 04fe 2E46     		mov	r6, r5
3758:TP2824/TP2802.c **** 						else if(TVI_Command==0x07)//down
 4331              		.loc 1 3758 0
 4332 0500 0825     		movs	r5, #8
 4333 0502 A7E7     		b	.L361
 4334              	.L379:
3740:TP2824/TP2802.c **** 						
 4335              		.loc 1 3740 0
 4336 0504 2E46     		mov	r6, r5
3760:TP2824/TP2802.c **** 						else if(TVI_Command==0x09)//left
 4337              		.loc 1 3760 0
 4338 0506 1025     		movs	r5, #16
 4339 0508 A4E7     		b	.L361
 4340              	.L380:
3740:TP2824/TP2802.c **** 						
 4341              		.loc 1 3740 0
 4342 050a 2E46     		mov	r6, r5
3762:TP2824/TP2802.c **** 						else if(TVI_Command==0x08)//right
 4343              		.loc 1 3762 0
 4344 050c 0425     		movs	r5, #4
 4345 050e A1E7     		b	.L361
 4346              	.L381:
 4347 0510 3346     		mov	r3, r6
3740:TP2824/TP2802.c **** 						
 4348              		.loc 1 3740 0
 4349 0512 2E46     		mov	r6, r5
3764:TP2824/TP2802.c **** 						else if(TVI_Command==0x0A)//up + left
 4350              		.loc 1 3764 0
 4351 0514 1D46     		mov	r5, r3
 4352 0516 9DE7     		b	.L361
 4353              	.L382:
3740:TP2824/TP2802.c **** 						
 4354              		.loc 1 3740 0
 4355 0518 2E46     		mov	r6, r5
3766:TP2824/TP2802.c **** 						else if(TVI_Command==0x0C)//up + right
 4356              		.loc 1 3766 0
 4357 051a 0C25     		movs	r5, #12
 4358 051c 9AE7     		b	.L361
 4359              	.L383:
3740:TP2824/TP2802.c **** 						
 4360              		.loc 1 3740 0
 4361 051e 2E46     		mov	r6, r5
3768:TP2824/TP2802.c **** 						else if(TVI_Command==0x0B)//down + left
 4362              		.loc 1 3768 0
 4363 0520 0A25     		movs	r5, #10
 4364 0522 97E7     		b	.L361
 4365              	.L384:
3740:TP2824/TP2802.c **** 						
 4366              		.loc 1 3740 0
 4367 0524 2E46     		mov	r6, r5
3770:TP2824/TP2802.c **** 						else if(TVI_Command==0x0D)//down + right
 4368              		.loc 1 3770 0
 4369 0526 1425     		movs	r5, #20
 4370 0528 94E7     		b	.L361
 4371              	.L385:
3740:TP2824/TP2802.c **** 						
ARM GAS  /tmp/ccSTfybG.s 			page 156


 4372              		.loc 1 3740 0
 4373 052a 2E46     		mov	r6, r5
3772:TP2824/TP2802.c **** 						else if(TVI_Command==0x17)//PRESET x
 4374              		.loc 1 3772 0
 4375 052c 1225     		movs	r5, #18
 4376 052e 91E7     		b	.L361
 4377              	.L386:
3776:TP2824/TP2802.c **** 							dat2=(tByte)presetNum;
 4378              		.loc 1 3776 0
 4379 0530 2F46     		mov	r7, r5
 4380              	.LVL553:
3740:TP2824/TP2802.c **** 						
 4381              		.loc 1 3740 0
 4382 0532 2E46     		mov	r6, r5
3775:TP2824/TP2802.c **** 							dat1=0;
 4383              		.loc 1 3775 0
 4384 0534 0725     		movs	r5, #7
 4385 0536 8DE7     		b	.L361
 4386              	.LVL554:
 4387              	.L360:
 4388              	.LBE4:
3800:TP2824/TP2802.c **** 						tp28xx_byte_write(0x59, (tByte)TVI_Command);
 4389              		.loc 1 3800 0
 4390 0538 2046     		mov	r0, r4
 4391 053a FFF7FEFF 		bl	SetRegPage
 4392              	.LVL555:
3801:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5a, (tByte)presetNum);
 4393              		.loc 1 3801 0
 4394 053e 3C4C     		ldr	r4, .L400+48
 4395 0540 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4396 0542 5920     		movs	r0, #89
 4397 0544 FFF7FEFF 		bl	tp28xx_byte_write
 4398              	.LVL556:
3802:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5d, (tByte)TVI_speed);//0x5f  check this????
 4399              		.loc 1 3802 0
 4400 0548 3A4D     		ldr	r5, .L400+52
 4401 054a 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 4402 054c 5A20     		movs	r0, #90
 4403 054e FFF7FEFF 		bl	tp28xx_byte_write
 4404              	.LVL557:
3803:TP2824/TP2802.c **** 						tp28xx_byte_write(0x60, (tByte)TVI_Chksum);
 4405              		.loc 1 3803 0
 4406 0552 394E     		ldr	r6, .L400+56
 4407 0554 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 4408 0556 5D20     		movs	r0, #93
 4409 0558 FFF7FEFF 		bl	tp28xx_byte_write
 4410              	.LVL558:
3804:TP2824/TP2802.c **** 						
 4411              		.loc 1 3804 0
 4412 055c 374B     		ldr	r3, .L400+60
 4413 055e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4414 0560 6020     		movs	r0, #96
 4415 0562 FFF7FEFF 		bl	tp28xx_byte_write
 4416              	.LVL559:
3806:TP2824/TP2802.c **** 						delay(10);//50ms
 4417              		.loc 1 3806 0
 4418 0566 4121     		movs	r1, #65
ARM GAS  /tmp/ccSTfybG.s 			page 157


 4419 0568 6F20     		movs	r0, #111
 4420 056a FFF7FEFF 		bl	tp28xx_byte_write
 4421              	.LVL560:
3807:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x40);
 4422              		.loc 1 3807 0
 4423 056e 0A20     		movs	r0, #10
 4424 0570 FFF7FEFF 		bl	delay
 4425              	.LVL561:
3808:TP2824/TP2802.c **** 						printf("TVI-Tx %x,%x,%x\n",TVI_Command,presetNum,TVI_speed);
 4426              		.loc 1 3808 0
 4427 0574 4021     		movs	r1, #64
 4428 0576 6F20     		movs	r0, #111
 4429 0578 FFF7FEFF 		bl	tp28xx_byte_write
 4430              	.LVL562:
3809:TP2824/TP2802.c **** 					}
 4431              		.loc 1 3809 0
 4432 057c 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 4433 057e 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 4434 0580 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4435 0582 2F48     		ldr	r0, .L400+64
 4436 0584 FFF7FEFF 		bl	printf
 4437              	.LVL563:
 4438 0588 9AE7     		b	.L362
 4439              	.LVL564:
 4440              	.L396:
3816:TP2824/TP2802.c **** 
 4441              		.loc 1 3816 0
 4442 058a FFF7FEFF 		bl	SetRegPage
 4443              	.LVL565:
3818:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6e, 0x02);
 4444              		.loc 1 3818 0
 4445 058e A521     		movs	r1, #165
 4446 0590 6E20     		movs	r0, #110
 4447 0592 FFF7FEFF 		bl	tp28xx_byte_write
 4448              	.LVL566:
3819:TP2824/TP2802.c **** 					switch(TVI_Command)
 4449              		.loc 1 3819 0
 4450 0596 0221     		movs	r1, #2
 4451 0598 6E20     		movs	r0, #110
 4452 059a FFF7FEFF 		bl	tp28xx_byte_write
 4453              	.LVL567:
3820:TP2824/TP2802.c **** 					{
 4454              		.loc 1 3820 0
 4455 059e 244B     		ldr	r3, .L400+48
 4456 05a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4457 05a2 063B     		subs	r3, r3, #6
 4458 05a4 092B     		cmp	r3, #9
 4459 05a6 00F29380 		bhi	.L364
 4460 05aa DFE803F0 		tbb	[pc, r3]
 4461              	.L366:
 4462 05ae 4D       		.byte	(.L365-.L366)/2
 4463 05af 5E       		.byte	(.L367-.L366)/2
 4464 05b0 80       		.byte	(.L368-.L366)/2
 4465 05b1 6F       		.byte	(.L369-.L366)/2
 4466 05b2 91       		.byte	(.L364-.L366)/2
 4467 05b3 91       		.byte	(.L364-.L366)/2
 4468 05b4 91       		.byte	(.L364-.L366)/2
ARM GAS  /tmp/ccSTfybG.s 			page 158


 4469 05b5 91       		.byte	(.L364-.L366)/2
 4470 05b6 91       		.byte	(.L364-.L366)/2
 4471 05b7 05       		.byte	(.L370-.L366)/2
 4472              		.p2align 1
 4473              	.L370:
3823:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4474              		.loc 1 3823 0
 4475 05b8 5021     		movs	r1, #80
 4476 05ba 6E20     		movs	r0, #110
 4477 05bc FFF7FEFF 		bl	tp28xx_byte_write
 4478              	.LVL568:
3824:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4479              		.loc 1 3824 0
 4480 05c0 0021     		movs	r1, #0
 4481 05c2 6E20     		movs	r0, #110
 4482 05c4 FFF7FEFF 		bl	tp28xx_byte_write
 4483              	.LVL569:
3825:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4484              		.loc 1 3825 0
 4485 05c8 0021     		movs	r1, #0
 4486 05ca 6E20     		movs	r0, #110
 4487 05cc FFF7FEFF 		bl	tp28xx_byte_write
 4488              	.LVL570:
3826:TP2824/TP2802.c **** 							break;
 4489              		.loc 1 3826 0
 4490 05d0 0021     		movs	r1, #0
 4491 05d2 6E20     		movs	r0, #110
 4492 05d4 FFF7FEFF 		bl	tp28xx_byte_write
 4493              	.LVL571:
 4494              	.L371:
3866:TP2824/TP2802.c **** 					delay(5);//50ms
 4495              		.loc 1 3866 0
 4496 05d8 4921     		movs	r1, #73
 4497 05da 6F20     		movs	r0, #111
 4498 05dc FFF7FEFF 		bl	tp28xx_byte_write
 4499              	.LVL572:
3867:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x48);
 4500              		.loc 1 3867 0
 4501 05e0 0520     		movs	r0, #5
 4502 05e2 FFF7FEFF 		bl	delay
 4503              	.LVL573:
3868:TP2824/TP2802.c **** 					ptztxflag=0;
 4504              		.loc 1 3868 0
 4505 05e6 4821     		movs	r1, #72
 4506 05e8 6F20     		movs	r0, #111
 4507 05ea FFF7FEFF 		bl	tp28xx_byte_write
 4508              	.LVL574:
3869:TP2824/TP2802.c **** 					printf("CVI-Tx %x\n",TVI_Command);
 4509              		.loc 1 3869 0
 4510 05ee 0D4B     		ldr	r3, .L400+36
 4511 05f0 0022     		movs	r2, #0
 4512 05f2 1A60     		str	r2, [r3]
3870:TP2824/TP2802.c **** 				}
 4513              		.loc 1 3870 0
 4514 05f4 0E4B     		ldr	r3, .L400+48
 4515 05f6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4516 05f8 1248     		ldr	r0, .L400+68
ARM GAS  /tmp/ccSTfybG.s 			page 159


 4517 05fa FFF7FEFF 		bl	printf
 4518              	.LVL575:
 4519 05fe 68E7     		b	.L363
 4520              	.L401:
 4521              		.align	2
 4522              	.L400:
 4523 0600 00000000 		.word	tpRxD
 4524 0604 00000000 		.word	COCRX2
 4525 0608 2C000000 		.word	.LC34
 4526 060c 08000000 		.word	.LC31
 4527 0610 00000000 		.word	.LANCHOR24
 4528 0614 10000000 		.word	.LC32
 4529 0618 00000000 		.word	COCRX1
 4530 061c 34000000 		.word	.LC35
 4531 0620 3C000000 		.word	.LC36
 4532 0624 00000000 		.word	ptztxflag
 4533 0628 00000000 		.word	.LANCHOR25
 4534 062c 00000000 		.word	std
 4535 0630 00000000 		.word	TVI_Command
 4536 0634 00000000 		.word	presetNum
 4537 0638 00000000 		.word	TVI_speed
 4538 063c 00000000 		.word	TVI_Chksum
 4539 0640 54000000 		.word	.LC37
 4540 0644 68000000 		.word	.LC38
 4541              	.L365:
3830:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4542              		.loc 1 3830 0
 4543 0648 0821     		movs	r1, #8
 4544 064a 6E20     		movs	r0, #110
 4545 064c FFF7FEFF 		bl	tp28xx_byte_write
 4546              	.LVL576:
3831:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
 4547              		.loc 1 3831 0
 4548 0650 0021     		movs	r1, #0
 4549 0652 6E20     		movs	r0, #110
 4550 0654 FFF7FEFF 		bl	tp28xx_byte_write
 4551              	.LVL577:
3832:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4552              		.loc 1 3832 0
 4553 0658 FF21     		movs	r1, #255
 4554 065a 6E20     		movs	r0, #110
 4555 065c FFF7FEFF 		bl	tp28xx_byte_write
 4556              	.LVL578:
3833:TP2824/TP2802.c **** 							break;
 4557              		.loc 1 3833 0
 4558 0660 0021     		movs	r1, #0
 4559 0662 6E20     		movs	r0, #110
 4560 0664 FFF7FEFF 		bl	tp28xx_byte_write
 4561              	.LVL579:
3834:TP2824/TP2802.c **** 							
 4562              		.loc 1 3834 0
 4563 0668 B6E7     		b	.L371
 4564              	.L367:
3837:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4565              		.loc 1 3837 0
 4566 066a 0421     		movs	r1, #4
 4567 066c 6E20     		movs	r0, #110
ARM GAS  /tmp/ccSTfybG.s 			page 160


 4568 066e FFF7FEFF 		bl	tp28xx_byte_write
 4569              	.LVL580:
3838:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
 4570              		.loc 1 3838 0
 4571 0672 0021     		movs	r1, #0
 4572 0674 6E20     		movs	r0, #110
 4573 0676 FFF7FEFF 		bl	tp28xx_byte_write
 4574              	.LVL581:
3839:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4575              		.loc 1 3839 0
 4576 067a FF21     		movs	r1, #255
 4577 067c 6E20     		movs	r0, #110
 4578 067e FFF7FEFF 		bl	tp28xx_byte_write
 4579              	.LVL582:
3840:TP2824/TP2802.c **** 							break;
 4580              		.loc 1 3840 0
 4581 0682 0021     		movs	r1, #0
 4582 0684 6E20     		movs	r0, #110
 4583 0686 FFF7FEFF 		bl	tp28xx_byte_write
 4584              	.LVL583:
3841:TP2824/TP2802.c **** 							
 4585              		.loc 1 3841 0
 4586 068a A5E7     		b	.L371
 4587              	.L369:
3844:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
 4588              		.loc 1 3844 0
 4589 068c 0221     		movs	r1, #2
 4590 068e 6E20     		movs	r0, #110
 4591 0690 FFF7FEFF 		bl	tp28xx_byte_write
 4592              	.LVL584:
3845:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4593              		.loc 1 3845 0
 4594 0694 FF21     		movs	r1, #255
 4595 0696 6E20     		movs	r0, #110
 4596 0698 FFF7FEFF 		bl	tp28xx_byte_write
 4597              	.LVL585:
3846:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4598              		.loc 1 3846 0
 4599 069c 0021     		movs	r1, #0
 4600 069e 6E20     		movs	r0, #110
 4601 06a0 FFF7FEFF 		bl	tp28xx_byte_write
 4602              	.LVL586:
3847:TP2824/TP2802.c **** 							break;
 4603              		.loc 1 3847 0
 4604 06a4 0021     		movs	r1, #0
 4605 06a6 6E20     		movs	r0, #110
 4606 06a8 FFF7FEFF 		bl	tp28xx_byte_write
 4607              	.LVL587:
3848:TP2824/TP2802.c **** 							
 4608              		.loc 1 3848 0
 4609 06ac 94E7     		b	.L371
 4610              	.L368:
3851:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
 4611              		.loc 1 3851 0
 4612 06ae 0121     		movs	r1, #1
 4613 06b0 6E20     		movs	r0, #110
 4614 06b2 FFF7FEFF 		bl	tp28xx_byte_write
ARM GAS  /tmp/ccSTfybG.s 			page 161


 4615              	.LVL588:
3852:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4616              		.loc 1 3852 0
 4617 06b6 FF21     		movs	r1, #255
 4618 06b8 6E20     		movs	r0, #110
 4619 06ba FFF7FEFF 		bl	tp28xx_byte_write
 4620              	.LVL589:
3853:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4621              		.loc 1 3853 0
 4622 06be 0021     		movs	r1, #0
 4623 06c0 6E20     		movs	r0, #110
 4624 06c2 FFF7FEFF 		bl	tp28xx_byte_write
 4625              	.LVL590:
3854:TP2824/TP2802.c **** 							break;
 4626              		.loc 1 3854 0
 4627 06c6 0021     		movs	r1, #0
 4628 06c8 6E20     		movs	r0, #110
 4629 06ca FFF7FEFF 		bl	tp28xx_byte_write
 4630              	.LVL591:
3855:TP2824/TP2802.c **** 							
 4631              		.loc 1 3855 0
 4632 06ce 83E7     		b	.L371
 4633              	.L364:
3859:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4634              		.loc 1 3859 0
 4635 06d0 0021     		movs	r1, #0
 4636 06d2 6E20     		movs	r0, #110
 4637 06d4 FFF7FEFF 		bl	tp28xx_byte_write
 4638              	.LVL592:
3860:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4639              		.loc 1 3860 0
 4640 06d8 0021     		movs	r1, #0
 4641 06da 6E20     		movs	r0, #110
 4642 06dc FFF7FEFF 		bl	tp28xx_byte_write
 4643              	.LVL593:
3861:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4644              		.loc 1 3861 0
 4645 06e0 0021     		movs	r1, #0
 4646 06e2 6E20     		movs	r0, #110
 4647 06e4 FFF7FEFF 		bl	tp28xx_byte_write
 4648              	.LVL594:
3862:TP2824/TP2802.c **** 							break;
 4649              		.loc 1 3862 0
 4650 06e8 0021     		movs	r1, #0
 4651 06ea 6E20     		movs	r0, #110
 4652 06ec FFF7FEFF 		bl	tp28xx_byte_write
 4653              	.LVL595:
3863:TP2824/TP2802.c **** 					}
 4654              		.loc 1 3863 0
 4655 06f0 72E7     		b	.L371
 4656              	.L397:
3875:TP2824/TP2802.c **** 				
 4657              		.loc 1 3875 0
 4658 06f2 FFF7FEFF 		bl	TVICommandToAHData
 4659              	.LVL596:
3877:TP2824/TP2802.c **** 					//SetRegPage(0x04);	
 4660              		.loc 1 3877 0
ARM GAS  /tmp/ccSTfybG.s 			page 162


 4661 06f6 304B     		ldr	r3, .L402
 4662 06f8 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4663 06fa FFF7FEFF 		bl	SetRegPage
 4664              	.LVL597:
3885:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, 0x00);
 4665              		.loc 1 3885 0
 4666 06fe 0021     		movs	r1, #0
 4667 0700 5A20     		movs	r0, #90
 4668 0702 FFF7FEFF 		bl	tp28xx_byte_write
 4669              	.LVL598:
3886:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, 0x00);
 4670              		.loc 1 3886 0
 4671 0706 0021     		movs	r1, #0
 4672 0708 6020     		movs	r0, #96
 4673 070a FFF7FEFF 		bl	tp28xx_byte_write
 4674              	.LVL599:
3887:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, 0x00);
 4675              		.loc 1 3887 0
 4676 070e 0021     		movs	r1, #0
 4677 0710 6620     		movs	r0, #102
 4678 0712 FFF7FEFF 		bl	tp28xx_byte_write
 4679              	.LVL600:
3888:TP2824/TP2802.c **** 					
 4680              		.loc 1 3888 0
 4681 0716 0021     		movs	r1, #0
 4682 0718 6C20     		movs	r0, #108
 4683 071a FFF7FEFF 		bl	tp28xx_byte_write
 4684              	.LVL601:
3891:TP2824/TP2802.c **** 					//delay(5);//50ms	//20210514
 4685              		.loc 1 3891 0
 4686 071e 4521     		movs	r1, #69
 4687 0720 6F20     		movs	r0, #111
 4688 0722 FFF7FEFF 		bl	tp28xx_byte_write
 4689              	.LVL602:
3893:TP2824/TP2802.c **** 					
 4690              		.loc 1 3893 0
 4691 0726 4421     		movs	r1, #68
 4692 0728 6F20     		movs	r0, #111
 4693 072a FFF7FEFF 		bl	tp28xx_byte_write
 4694              	.LVL603:
3895:TP2824/TP2802.c **** 			
 4695              		.loc 1 3895 0
 4696 072e 2320     		movs	r0, #35
 4697 0730 FFF7FEFF 		bl	HAL_Delay
 4698              	.LVL604:
3898:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, AHDBitsReverse(AHDcmd2));
 4699              		.loc 1 3898 0
 4700 0734 214D     		ldr	r5, .L402+4
 4701 0736 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 4702 0738 FFF7FEFF 		bl	AHDBitsReverse
 4703              	.LVL605:
 4704 073c 0146     		mov	r1, r0
 4705 073e 5A20     		movs	r0, #90
 4706 0740 FFF7FEFF 		bl	tp28xx_byte_write
 4707              	.LVL606:
3899:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, AHDBitsReverse(AHDcmd3));
 4708              		.loc 1 3899 0
ARM GAS  /tmp/ccSTfybG.s 			page 163


 4709 0744 1E4E     		ldr	r6, .L402+8
 4710 0746 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 4711 0748 FFF7FEFF 		bl	AHDBitsReverse
 4712              	.LVL607:
 4713 074c 0146     		mov	r1, r0
 4714 074e 6020     		movs	r0, #96
 4715 0750 FFF7FEFF 		bl	tp28xx_byte_write
 4716              	.LVL608:
3900:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, AHDBitsReverse(AHDcmd4));
 4717              		.loc 1 3900 0
 4718 0754 1B4F     		ldr	r7, .L402+12
 4719 0756 3878     		ldrb	r0, [r7]	@ zero_extendqisi2
 4720 0758 FFF7FEFF 		bl	AHDBitsReverse
 4721              	.LVL609:
 4722 075c 0146     		mov	r1, r0
 4723 075e 6620     		movs	r0, #102
 4724 0760 FFF7FEFF 		bl	tp28xx_byte_write
 4725              	.LVL610:
3901:TP2824/TP2802.c **** 				
 4726              		.loc 1 3901 0
 4727 0764 184C     		ldr	r4, .L402+16
 4728 0766 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4729 0768 FFF7FEFF 		bl	AHDBitsReverse
 4730              	.LVL611:
 4731 076c 0146     		mov	r1, r0
 4732 076e 6C20     		movs	r0, #108
 4733 0770 FFF7FEFF 		bl	tp28xx_byte_write
 4734              	.LVL612:
3905:TP2824/TP2802.c **** 					//delay(5);//50ms	//20210514
 4735              		.loc 1 3905 0
 4736 0774 4521     		movs	r1, #69
 4737 0776 6F20     		movs	r0, #111
 4738 0778 FFF7FEFF 		bl	tp28xx_byte_write
 4739              	.LVL613:
3907:TP2824/TP2802.c **** 				
 4740              		.loc 1 3907 0
 4741 077c 4421     		movs	r1, #68
 4742 077e 6F20     		movs	r0, #111
 4743 0780 FFF7FEFF 		bl	tp28xx_byte_write
 4744              	.LVL614:
3909:TP2824/TP2802.c **** 
 4745              		.loc 1 3909 0
 4746 0784 2320     		movs	r0, #35
 4747 0786 FFF7FEFF 		bl	HAL_Delay
 4748              	.LVL615:
3956:TP2824/TP2802.c **** 				//printf("~AHD %x,%x,%x,%x\n",AHDBitsReverse(AHDcmd1),AHDBitsReverse(0xF1),AHDBitsReverse(0x02)
 4749              		.loc 1 3956 0
 4750 078a 104B     		ldr	r3, .L402+20
 4751 078c 0022     		movs	r2, #0
 4752 078e 1A60     		str	r2, [r3]
3959:TP2824/TP2802.c **** 				Printf("Tx %02x,%02x,%02x,%02x",(WORD)AHDcmd1,(WORD)AHDcmd2,(WORD)AHDcmd3,(WORD)AHDcmd4);
 4753              		.loc 1 3959 0
 4754 0790 0F4B     		ldr	r3, .L402+24
 4755 0792 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4756 0794 0F4A     		ldr	r2, .L402+28
 4757 0796 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4758 0798 0F49     		ldr	r1, .L402+32
ARM GAS  /tmp/ccSTfybG.s 			page 164


 4759 079a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4760 079c 0F48     		ldr	r0, .L402+36
 4761 079e FFF7FEFF 		bl	Printf
 4762              	.LVL616:
3960:TP2824/TP2802.c **** 				}
 4763              		.loc 1 3960 0
 4764 07a2 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4765 07a4 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 4766 07a6 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 4767 07a8 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4768 07aa 0090     		str	r0, [sp]
 4769 07ac 0C48     		ldr	r0, .L402+40
 4770 07ae FFF7FEFF 		bl	Printf
 4771              	.LVL617:
 4772 07b2 95E6     		b	.L372
 4773              	.L388:
 4774              	.LCFI34:
 4775              		.cfi_def_cfa_offset 0
 4776              		.cfi_restore 4
 4777              		.cfi_restore 5
 4778              		.cfi_restore 6
 4779              		.cfi_restore 7
 4780              		.cfi_restore 8
 4781              		.cfi_restore 14
 4782 07b4 7047     		bx	lr
 4783              	.L403:
 4784 07b6 00BF     		.align	2
 4785              	.L402:
 4786 07b8 00000000 		.word	.LANCHOR25
 4787 07bc 00000000 		.word	AHDcmd1
 4788 07c0 00000000 		.word	AHDcmd2
 4789 07c4 00000000 		.word	AHDcmd3
 4790 07c8 00000000 		.word	AHDcmd4
 4791 07cc 00000000 		.word	ptztxflag
 4792 07d0 00000000 		.word	TVI_speed
 4793 07d4 00000000 		.word	presetNum
 4794 07d8 00000000 		.word	TVI_Command
 4795 07dc 74000000 		.word	.LC39
 4796 07e0 8C000000 		.word	.LC40
 4797              		.cfi_endproc
 4798              	.LFE98:
 4800              		.section	.text.TP2824_PTZ_init,"ax",%progbits
 4801              		.align	1
 4802              		.global	TP2824_PTZ_init
 4803              		.syntax unified
 4804              		.thumb
 4805              		.thumb_func
 4806              		.fpu softvfp
 4808              	TP2824_PTZ_init:
 4809              	.LFB99:
3966:TP2824/TP2802.c **** 
3967:TP2824/TP2802.c **** 
3968:TP2824/TP2802.c **** void TP2824_PTZ_init(void)
3969:TP2824/TP2802.c **** {
 4810              		.loc 1 3969 0
 4811              		.cfi_startproc
 4812              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccSTfybG.s 			page 165


 4813              		@ frame_needed = 0, uses_anonymous_args = 0
 4814 0000 08B5     		push	{r3, lr}
 4815              	.LCFI35:
 4816              		.cfi_def_cfa_offset 8
 4817              		.cfi_offset 3, -8
 4818              		.cfi_offset 14, -4
3970:TP2824/TP2802.c ****   //  unsigned int i;
3971:TP2824/TP2802.c **** 
3972:TP2824/TP2802.c ****   //  for( i = 0; i < 2; i++)
3973:TP2824/TP2802.c ****     //{
3974:TP2824/TP2802.c ****        // tp28xx_byte_write(chip, 0x40, i<<4); //bank
3975:TP2824/TP2802.c ****   SetRegPage(0x00);
 4819              		.loc 1 3975 0
 4820 0002 0020     		movs	r0, #0
 4821 0004 FFF7FEFF 		bl	SetRegPage
 4822              	.LVL618:
3976:TP2824/TP2802.c **** 
3977:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xc9, 0x00);
 4823              		.loc 1 3977 0
 4824 0008 0021     		movs	r1, #0
 4825 000a C920     		movs	r0, #201
 4826 000c FFF7FEFF 		bl	tp28xx_byte_write
 4827              	.LVL619:
3978:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xca, 0x00);
 4828              		.loc 1 3978 0
 4829 0010 0021     		movs	r1, #0
 4830 0012 CA20     		movs	r0, #202
 4831 0014 FFF7FEFF 		bl	tp28xx_byte_write
 4832              	.LVL620:
3979:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xcb, 0x06);
 4833              		.loc 1 3979 0
 4834 0018 0621     		movs	r1, #6
 4835 001a CB20     		movs	r0, #203
 4836 001c FFF7FEFF 		bl	tp28xx_byte_write
 4837              	.LVL621:
3980:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xcc, 0x07);
 4838              		.loc 1 3980 0
 4839 0020 0721     		movs	r1, #7
 4840 0022 CC20     		movs	r0, #204
 4841 0024 FFF7FEFF 		bl	tp28xx_byte_write
 4842              	.LVL622:
3981:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xcd, 0x08);
 4843              		.loc 1 3981 0
 4844 0028 0821     		movs	r1, #8
 4845 002a CD20     		movs	r0, #205
 4846 002c FFF7FEFF 		bl	tp28xx_byte_write
 4847              	.LVL623:
3982:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xce, 0x09); //line6,7,8,9
 4848              		.loc 1 3982 0
 4849 0030 0921     		movs	r1, #9
 4850 0032 CE20     		movs	r0, #206
 4851 0034 FFF7FEFF 		bl	tp28xx_byte_write
 4852              	.LVL624:
3983:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xcf, 0x03);
 4853              		.loc 1 3983 0
 4854 0038 0321     		movs	r1, #3
 4855 003a CF20     		movs	r0, #207
ARM GAS  /tmp/ccSTfybG.s 			page 166


 4856 003c FFF7FEFF 		bl	tp28xx_byte_write
 4857              	.LVL625:
3984:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd0, 0x48);
 4858              		.loc 1 3984 0
 4859 0040 4821     		movs	r1, #72
 4860 0042 D020     		movs	r0, #208
 4861 0044 FFF7FEFF 		bl	tp28xx_byte_write
 4862              	.LVL626:
3985:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd1, 0x34); //39 clock per bit 0.526us
 4863              		.loc 1 3985 0
 4864 0048 3421     		movs	r1, #52
 4865 004a D120     		movs	r0, #209
 4866 004c FFF7FEFF 		bl	tp28xx_byte_write
 4867              	.LVL627:
3986:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd2, 0x60);
 4868              		.loc 1 3986 0
 4869 0050 6021     		movs	r1, #96
 4870 0052 D220     		movs	r0, #210
 4871 0054 FFF7FEFF 		bl	tp28xx_byte_write
 4872              	.LVL628:
3987:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd3, 0x10);
 4873              		.loc 1 3987 0
 4874 0058 1021     		movs	r1, #16
 4875 005a D320     		movs	r0, #211
 4876 005c FFF7FEFF 		bl	tp28xx_byte_write
 4877              	.LVL629:
3988:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd4, 0x04); //
 4878              		.loc 1 3988 0
 4879 0060 0421     		movs	r1, #4
 4880 0062 D420     		movs	r0, #212
 4881 0064 FFF7FEFF 		bl	tp28xx_byte_write
 4882              	.LVL630:
3989:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd5, 0xf0);
 4883              		.loc 1 3989 0
 4884 0068 F021     		movs	r1, #240
 4885 006a D520     		movs	r0, #213
 4886 006c FFF7FEFF 		bl	tp28xx_byte_write
 4887              	.LVL631:
3990:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd6, 0xd8);
 4888              		.loc 1 3990 0
 4889 0070 D821     		movs	r1, #216
 4890 0072 D620     		movs	r0, #214
 4891 0074 FFF7FEFF 		bl	tp28xx_byte_write
 4892              	.LVL632:
3991:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd7, 0x17); //24bit
 4893              		.loc 1 3991 0
 4894 0078 1721     		movs	r1, #23
 4895 007a D720     		movs	r0, #215
 4896 007c FFF7FEFF 		bl	tp28xx_byte_write
 4897              	.LVL633:
3992:TP2824/TP2802.c ****   
3993:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe1, 0x00);
 4898              		.loc 1 3993 0
 4899 0080 0021     		movs	r1, #0
 4900 0082 E120     		movs	r0, #225
 4901 0084 FFF7FEFF 		bl	tp28xx_byte_write
 4902              	.LVL634:
ARM GAS  /tmp/ccSTfybG.s 			page 167


3994:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe2, 0x00);
 4903              		.loc 1 3994 0
 4904 0088 0021     		movs	r1, #0
 4905 008a E220     		movs	r0, #226
 4906 008c FFF7FEFF 		bl	tp28xx_byte_write
 4907              	.LVL635:
3995:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe3, 0x05);
 4908              		.loc 1 3995 0
 4909 0090 0521     		movs	r1, #5
 4910 0092 E320     		movs	r0, #227
 4911 0094 FFF7FEFF 		bl	tp28xx_byte_write
 4912              	.LVL636:
3996:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe4, 0x06);
 4913              		.loc 1 3996 0
 4914 0098 0621     		movs	r1, #6
 4915 009a E420     		movs	r0, #228
 4916 009c FFF7FEFF 		bl	tp28xx_byte_write
 4917              	.LVL637:
3997:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe5, 0x08);
 4918              		.loc 1 3997 0
 4919 00a0 0821     		movs	r1, #8
 4920 00a2 E520     		movs	r0, #229
 4921 00a4 FFF7FEFF 		bl	tp28xx_byte_write
 4922              	.LVL638:
3998:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe6, 0x09); //line6,7,8,9
 4923              		.loc 1 3998 0
 4924 00a8 0921     		movs	r1, #9
 4925 00aa E620     		movs	r0, #230
 4926 00ac FFF7FEFF 		bl	tp28xx_byte_write
 4927              	.LVL639:
3999:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe7, 0x03);
 4928              		.loc 1 3999 0
 4929 00b0 0321     		movs	r1, #3
 4930 00b2 E720     		movs	r0, #231
 4931 00b4 FFF7FEFF 		bl	tp28xx_byte_write
 4932              	.LVL640:
4000:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe8, 0x48);
 4933              		.loc 1 4000 0
 4934 00b8 4821     		movs	r1, #72
 4935 00ba E820     		movs	r0, #232
 4936 00bc FFF7FEFF 		bl	tp28xx_byte_write
 4937              	.LVL641:
4001:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe9, 0x34); //39 clock per bit 0.526us
 4938              		.loc 1 4001 0
 4939 00c0 3421     		movs	r1, #52
 4940 00c2 E920     		movs	r0, #233
 4941 00c4 FFF7FEFF 		bl	tp28xx_byte_write
 4942              	.LVL642:
4002:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xea, 0x60);
 4943              		.loc 1 4002 0
 4944 00c8 6021     		movs	r1, #96
 4945 00ca EA20     		movs	r0, #234
 4946 00cc FFF7FEFF 		bl	tp28xx_byte_write
 4947              	.LVL643:
4003:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xeb, 0x10);
 4948              		.loc 1 4003 0
 4949 00d0 1021     		movs	r1, #16
ARM GAS  /tmp/ccSTfybG.s 			page 168


 4950 00d2 EB20     		movs	r0, #235
 4951 00d4 FFF7FEFF 		bl	tp28xx_byte_write
 4952              	.LVL644:
4004:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xec, 0x04); //
 4953              		.loc 1 4004 0
 4954 00d8 0421     		movs	r1, #4
 4955 00da EC20     		movs	r0, #236
 4956 00dc FFF7FEFF 		bl	tp28xx_byte_write
 4957              	.LVL645:
4005:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xed, 0xf0);
 4958              		.loc 1 4005 0
 4959 00e0 F021     		movs	r1, #240
 4960 00e2 ED20     		movs	r0, #237
 4961 00e4 FFF7FEFF 		bl	tp28xx_byte_write
 4962              	.LVL646:
4006:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xee, 0xd8);
 4963              		.loc 1 4006 0
 4964 00e8 D821     		movs	r1, #216
 4965 00ea EE20     		movs	r0, #238
 4966 00ec FFF7FEFF 		bl	tp28xx_byte_write
 4967              	.LVL647:
4007:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xef, 0x17); //24bit
 4968              		.loc 1 4007 0
 4969 00f0 1721     		movs	r1, #23
 4970 00f2 EF20     		movs	r0, #239
 4971 00f4 FFF7FEFF 		bl	tp28xx_byte_write
 4972              	.LVL648:
4008:TP2824/TP2802.c ****   //}
4009:TP2824/TP2802.c ****   
4010:TP2824/TP2802.c **** 	  tp28xx_byte_write( 0x7E, 0x0F);	//TX channel enable
 4973              		.loc 1 4010 0
 4974 00f8 0F21     		movs	r1, #15
 4975 00fa 7E20     		movs	r0, #126
 4976 00fc FFF7FEFF 		bl	tp28xx_byte_write
 4977              	.LVL649:
4011:TP2824/TP2802.c **** 	  tp28xx_byte_write( 0xB9, 0x0F);	//RX channel enable
 4978              		.loc 1 4011 0
 4979 0100 0F21     		movs	r1, #15
 4980 0102 B920     		movs	r0, #185
 4981 0104 FFF7FEFF 		bl	tp28xx_byte_write
 4982              	.LVL650:
4012:TP2824/TP2802.c **** 
4013:TP2824/TP2802.c **** }
 4983              		.loc 1 4013 0
 4984 0108 08BD     		pop	{r3, pc}
 4985              		.cfi_endproc
 4986              	.LFE99:
 4988              		.section	.text.TP2824_PTZ_mode,"ax",%progbits
 4989              		.align	1
 4990              		.global	TP2824_PTZ_mode
 4991              		.syntax unified
 4992              		.thumb
 4993              		.thumb_func
 4994              		.fpu softvfp
 4996              	TP2824_PTZ_mode:
 4997              	.LFB100:
4014:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccSTfybG.s 			page 169


4015:TP2824/TP2802.c **** void TP2824_PTZ_mode(unsigned char ch, unsigned char mod)
4016:TP2824/TP2802.c **** {
 4998              		.loc 1 4016 0
 4999              		.cfi_startproc
 5000              		@ args = 0, pretend = 0, frame = 0
 5001              		@ frame_needed = 0, uses_anonymous_args = 0
 5002              	.LVL651:
 5003 0000 38B5     		push	{r3, r4, r5, lr}
 5004              	.LCFI36:
 5005              		.cfi_def_cfa_offset 16
 5006              		.cfi_offset 3, -16
 5007              		.cfi_offset 4, -12
 5008              		.cfi_offset 5, -8
 5009              		.cfi_offset 14, -4
 5010 0002 0546     		mov	r5, r0
4017:TP2824/TP2802.c ****     unsigned int /*tmp,*/ i;
4018:TP2824/TP2802.c **** 
4019:TP2824/TP2802.c **** //    static const unsigned char PTZ_bank[4]= {0x00,0x00,0x10,0x10};
4020:TP2824/TP2802.c ****     static const unsigned char PTZ_reg[4][7]=
4021:TP2824/TP2802.c ****     {
4022:TP2824/TP2802.c ****         {0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8},
4023:TP2824/TP2802.c ****         {0xda,0xdb,0xdc,0xdd,0xde,0xdf,0xe0},
4024:TP2824/TP2802.c ****         {0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8},
4025:TP2824/TP2802.c ****         {0xda,0xdb,0xdc,0xdd,0xde,0xdf,0xe0}
4026:TP2824/TP2802.c ****     };
4027:TP2824/TP2802.c ****     static const unsigned char PTZ_dat[ ][7]=
4028:TP2824/TP2802.c ****     {
4029:TP2824/TP2802.c ****         {0x0b,0x0c,0x0d,0x0e,0x19,0x78,0x21}, //TVI1.0
4030:TP2824/TP2802.c ****         {0x0b,0x0c,0x0d,0x0e,0x33,0xf0,0x21}, //TVI2.0
4031:TP2824/TP2802.c ****         {0x0e,0x0f,0x10,0x11,0x66,0xf0,0x17}, //A1080p for 2833B 0.525
4032:TP2824/TP2802.c ****         {0x0e,0x0f,0x10,0x11,0x26,0xf0,0x57}, //A1080p for 2833C 0.525
4033:TP2824/TP2802.c ****         {0x0e,0x0f,0x00,0x00,0x26,0xe0,0xef}, //A720p for 2833C 0.525
4034:TP2824/TP2802.c ****         {0x0f,0x10,0x00,0x00,0x48,0xf0,0x6f}, //960H for 2833C
4035:TP2824/TP2802.c ****         {0x10,0x11,0x12,0x13,0x15,0xb8,0xa2}, //HDC 2833C
4036:TP2824/TP2802.c ****         {0x10,0x11,0x12,0x13,0x95,0xb8,0x22}, //HDC 2833B
4037:TP2824/TP2802.c ****     };
4038:TP2824/TP2802.c **** 
4039:TP2824/TP2802.c ****     //tmp = tp28xx_byte_read(chip, 0x40);
4040:TP2824/TP2802.c ****     //tmp &= 0xaf;
4041:TP2824/TP2802.c ****     //tmp |=PTZ_bank[ch];
4042:TP2824/TP2802.c ****     //tp28xx_byte_write(chip, 0x40, tmp); //reg bank1 switch for 2822
4043:TP2824/TP2802.c ****  //   tp28xx_byte_write(chip, 0x40, PTZ_bank[ch]); //reg bank1 switch for 2822
4044:TP2824/TP2802.c **** #if 1
4045:TP2824/TP2802.c **** SetRegPage(0x00);
 5011              		.loc 1 4045 0
 5012 0004 0020     		movs	r0, #0
 5013              	.LVL652:
 5014 0006 FFF7FEFF 		bl	SetRegPage
 5015              	.LVL653:
4046:TP2824/TP2802.c **** 
4047:TP2824/TP2802.c **** for(i = 0; i < 7; i++)//1080PAHD
 5016              		.loc 1 4047 0
 5017 000a 0024     		movs	r4, #0
 5018 000c 0AE0     		b	.L407
 5019              	.LVL654:
 5020              	.L408:
4048:TP2824/TP2802.c **** 	tp28xx_byte_write( PTZ_reg[ch][i], PTZ_dat[2][i]);
ARM GAS  /tmp/ccSTfybG.s 			page 170


 5021              		.loc 1 4048 0 discriminator 3
 5022 000e 074A     		ldr	r2, .L410
 5023 0010 2244     		add	r2, r2, r4
 5024 0012 C5EBC501 		rsb	r1, r5, r5, lsl #3
 5025 0016 064B     		ldr	r3, .L410+4
 5026 0018 0B44     		add	r3, r3, r1
 5027 001a 917B     		ldrb	r1, [r2, #14]	@ zero_extendqisi2
 5028 001c 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 5029 001e FFF7FEFF 		bl	tp28xx_byte_write
 5030              	.LVL655:
4047:TP2824/TP2802.c **** 	tp28xx_byte_write( PTZ_reg[ch][i], PTZ_dat[2][i]);
 5031              		.loc 1 4047 0 discriminator 3
 5032 0022 0134     		adds	r4, r4, #1
 5033              	.LVL656:
 5034              	.L407:
4047:TP2824/TP2802.c **** 	tp28xx_byte_write( PTZ_reg[ch][i], PTZ_dat[2][i]);
 5035              		.loc 1 4047 0 is_stmt 0 discriminator 1
 5036 0024 062C     		cmp	r4, #6
 5037 0026 F2D9     		bls	.L408
4049:TP2824/TP2802.c **** 
4050:TP2824/TP2802.c **** #else
4051:TP2824/TP2802.c ****     for(i = 0; i < 7; i++)
4052:TP2824/TP2802.c ****     {
4053:TP2824/TP2802.c ****         if(PTZ_TVI == mod)
4054:TP2824/TP2802.c ****         {
4055:TP2824/TP2802.c ****             tmp = tp28xx_byte_read(chip, 0xf5); //check TVI 1 or 2
4056:TP2824/TP2802.c ****             if( (tmp >>ch) & 0x01)
4057:TP2824/TP2802.c ****             {
4058:TP2824/TP2802.c ****                 tp28xx_byte_write(chip, PTZ_reg[ch][i], PTZ_dat[1][i]);
4059:TP2824/TP2802.c ****             }
4060:TP2824/TP2802.c ****             else
4061:TP2824/TP2802.c ****             {
4062:TP2824/TP2802.c ****                 tp28xx_byte_write(chip, PTZ_reg[ch][i], PTZ_dat[0][i]);
4063:TP2824/TP2802.c ****             }
4064:TP2824/TP2802.c ****         }
4065:TP2824/TP2802.c ****         else if(PTZ_HDA_1080P == mod) //HDA 1080p
4066:TP2824/TP2802.c ****         {
4067:TP2824/TP2802.c ****                 tp28xx_byte_write(chip, PTZ_reg[ch][i], PTZ_dat[2][i]);
4068:TP2824/TP2802.c **** 
4069:TP2824/TP2802.c ****         }
4070:TP2824/TP2802.c ****         else if(PTZ_HDA_720P == mod) //HDA 720p
4071:TP2824/TP2802.c ****         {
4072:TP2824/TP2802.c ****                 tp28xx_byte_write(chip, PTZ_reg[ch][i], PTZ_dat[2][i]);
4073:TP2824/TP2802.c ****         }
4074:TP2824/TP2802.c ****         else if(PTZ_HDC == mod) // test
4075:TP2824/TP2802.c ****         {
4076:TP2824/TP2802.c ****                 tp28xx_byte_write(chip, PTZ_reg[ch][i], PTZ_dat[7][i]);
4077:TP2824/TP2802.c ****         }
4078:TP2824/TP2802.c **** 
4079:TP2824/TP2802.c ****     }
4080:TP2824/TP2802.c ****     tp28xx_byte_write(chip, 0xB7, 0x0f); //enable TX interrupt flag
4081:TP2824/TP2802.c **** #endif
4082:TP2824/TP2802.c **** }
 5038              		.loc 1 4082 0 is_stmt 1
 5039 0028 38BD     		pop	{r3, r4, r5, pc}
 5040              	.LVL657:
 5041              	.L411:
ARM GAS  /tmp/ccSTfybG.s 			page 171


 5042 002a 00BF     		.align	2
 5043              	.L410:
 5044 002c 00000000 		.word	.LANCHOR26
 5045 0030 00000000 		.word	.LANCHOR27
 5046              		.cfi_endproc
 5047              	.LFE100:
 5049              		.section	.text.TP2824C_RX_init,"ax",%progbits
 5050              		.align	1
 5051              		.global	TP2824C_RX_init
 5052              		.syntax unified
 5053              		.thumb
 5054              		.thumb_func
 5055              		.fpu softvfp
 5057              	TP2824C_RX_init:
 5058              	.LFB101:
4083:TP2824/TP2802.c **** 
4084:TP2824/TP2802.c ****  void TP2824C_RX_init(unsigned char chip, unsigned char mod)
4085:TP2824/TP2802.c **** {
 5059              		.loc 1 4085 0
 5060              		.cfi_startproc
 5061              		@ args = 0, pretend = 0, frame = 0
 5062              		@ frame_needed = 0, uses_anonymous_args = 0
 5063              	.LVL658:
 5064 0000 10B5     		push	{r4, lr}
 5065              	.LCFI37:
 5066              		.cfi_def_cfa_offset 8
 5067              		.cfi_offset 4, -8
 5068              		.cfi_offset 14, -4
 5069              	.LVL659:
4086:TP2824/TP2802.c **** 
4087:TP2824/TP2802.c ****     int i, index=0;
4088:TP2824/TP2802.c **** 
4089:TP2824/TP2802.c ****     static const unsigned char PTZ_RX_dat[][15]=
4090:TP2824/TP2802.c ****     {
4091:TP2824/TP2802.c ****         {0x00,0x00,0x07,0x08,0x00,0x00,0x04,0x00,0x00,0x60,0x10,0x04,0xf0,0xd8,0x27}, //TVI command
4092:TP2824/TP2802.c ****         {0x00,0x00,0x07,0x08,0x09,0x0a,0x04,0x00,0x00,0x60,0x10,0x04,0xf0,0xd8,0x27}, //TVI burst
4093:TP2824/TP2802.c ****         {0x00,0x00,0x06,0x07,0x08,0x09,0x03,0x52,0x53,0x60,0x10,0x04,0xf0,0xd8,0x17}, //ACP1 0.525
4094:TP2824/TP2802.c ****         {0x00,0x00,0x06,0x07,0x08,0x09,0x02,0xdf,0x88,0x60,0x10,0x04,0xf0,0xd8,0x17}, //ACP2 0.6
4095:TP2824/TP2802.c ****         {0x00,0x00,0x06,0x07,0x08,0x09,0x04,0xec,0xe9,0x60,0x10,0x04,0xf0,0xd8,0x17}, //ACP3 0.35
4096:TP2824/TP2802.c ****     };
4097:TP2824/TP2802.c **** #if 0
4098:TP2824/TP2802.c ****         if(PTZ_RX_TVI_CMD == mod)
4099:TP2824/TP2802.c ****         {
4100:TP2824/TP2802.c ****             index = 0;
4101:TP2824/TP2802.c ****         }
4102:TP2824/TP2802.c ****         else if(PTZ_RX_TVI_BURST == mod)
4103:TP2824/TP2802.c ****         {
4104:TP2824/TP2802.c ****             index = 1;
4105:TP2824/TP2802.c ****         }
4106:TP2824/TP2802.c ****         else if(PTZ_RX_ACP1 == mod)
4107:TP2824/TP2802.c ****         {
4108:TP2824/TP2802.c ****             index = 2;
4109:TP2824/TP2802.c ****         }
4110:TP2824/TP2802.c ****         else if(PTZ_RX_ACP2 == mod)
4111:TP2824/TP2802.c ****         {
4112:TP2824/TP2802.c ****             index = 3;
4113:TP2824/TP2802.c ****         }
ARM GAS  /tmp/ccSTfybG.s 			page 172


4114:TP2824/TP2802.c ****         else if(PTZ_RX_ACP3 == mod)
4115:TP2824/TP2802.c ****         {
4116:TP2824/TP2802.c ****             index = 4;
4117:TP2824/TP2802.c ****         }
4118:TP2824/TP2802.c **** 		#endif
4119:TP2824/TP2802.c **** 		index = 3;
4120:TP2824/TP2802.c **** 
4121:TP2824/TP2802.c ****         for(i = 0; i < 15; i++)
 5070              		.loc 1 4121 0
 5071 0002 0024     		movs	r4, #0
 5072 0004 09E0     		b	.L413
 5073              	.LVL660:
 5074              	.L414:
4122:TP2824/TP2802.c ****         {
4123:TP2824/TP2802.c **** //              tp28xx_byte_write(chip, 0xc9+i, PTZ_RX_dat[index][i]);
4124:TP2824/TP2802.c ****             tp28xx_byte_write(0xc9+i, PTZ_RX_dat[index][i]);
 5075              		.loc 1 4124 0 discriminator 3
 5076 0006 064B     		ldr	r3, .L416
 5077 0008 2344     		add	r3, r3, r4
 5078 000a A4F13700 		sub	r0, r4, #55
 5079 000e 93F82D10 		ldrb	r1, [r3, #45]	@ zero_extendqisi2
 5080 0012 C0B2     		uxtb	r0, r0
 5081 0014 FFF7FEFF 		bl	tp28xx_byte_write
 5082              	.LVL661:
4121:TP2824/TP2802.c ****         {
 5083              		.loc 1 4121 0 discriminator 3
 5084 0018 0134     		adds	r4, r4, #1
 5085              	.LVL662:
 5086              	.L413:
4121:TP2824/TP2802.c ****         {
 5087              		.loc 1 4121 0 is_stmt 0 discriminator 1
 5088 001a 0E2C     		cmp	r4, #14
 5089 001c F3DD     		ble	.L414
4125:TP2824/TP2802.c ****         }
4126:TP2824/TP2802.c **** 
4127:TP2824/TP2802.c **** }
 5090              		.loc 1 4127 0 is_stmt 1
 5091 001e 10BD     		pop	{r4, pc}
 5092              	.LVL663:
 5093              	.L417:
 5094              		.align	2
 5095              	.L416:
 5096 0020 00000000 		.word	.LANCHOR28
 5097              		.cfi_endproc
 5098              	.LFE101:
 5100              		.section	.text.TP2824C_PTZ_mode,"ax",%progbits
 5101              		.align	1
 5102              		.global	TP2824C_PTZ_mode
 5103              		.syntax unified
 5104              		.thumb
 5105              		.thumb_func
 5106              		.fpu softvfp
 5108              	TP2824C_PTZ_mode:
 5109              	.LFB102:
4128:TP2824/TP2802.c **** 
4129:TP2824/TP2802.c **** void TP2824C_PTZ_mode(unsigned char chip, unsigned char ch, unsigned char mod)
4130:TP2824/TP2802.c **** {
ARM GAS  /tmp/ccSTfybG.s 			page 173


 5110              		.loc 1 4130 0
 5111              		.cfi_startproc
 5112              		@ args = 0, pretend = 0, frame = 0
 5113              		@ frame_needed = 0, uses_anonymous_args = 0
 5114              	.LVL664:
 5115 0000 10B5     		push	{r4, lr}
 5116              	.LCFI38:
 5117              		.cfi_def_cfa_offset 8
 5118              		.cfi_offset 4, -8
 5119              		.cfi_offset 14, -4
 5120              	.LVL665:
4131:TP2824/TP2802.c ****     unsigned int /*tmp,*/ i, index=0;
4132:TP2824/TP2802.c **** 
4133:TP2824/TP2802.c ****     static const unsigned char PTZ_reg[12]=
4134:TP2824/TP2802.c ****     {
4135:TP2824/TP2802.c ****         0x6f,0x70,0x71,0xc0,0xc1,0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8
4136:TP2824/TP2802.c ****     };
4137:TP2824/TP2802.c ****     static const unsigned char PTZ_dat[][12]=
4138:TP2824/TP2802.c ****     {
4139:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x0b,0x0c,0x0d,0x0e,0x19,0x78,0x21}, //TVI1.0
4140:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x0b,0x0c,0x0d,0x0e,0x33,0xf0,0x21}, //TVI2.0
4141:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x0e,0x0f,0x10,0x11,0x26,0xf0,0x57}, //A1080p for 0.525
4142:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x0e,0x0f,0x00,0x00,0x26,0xe0,0xef}, //A720p for  0.525
4143:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x0f,0x10,0x00,0x00,0x4d,0xf0,0x6f}, //960H for
4144:TP2824/TP2802.c ****         //{0x4a,0x5d,0x00,0x00,0x00,0x10,0x11,0x12,0x13,0x15,0xb8,0x9f}, //HDC for
4145:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x10,0x11,0x12,0x15,0x15,0xb8,0xa2}, //HDC for
4146:TP2824/TP2802.c ****     };
4147:TP2824/TP2802.c **** 
4148:TP2824/TP2802.c ****    // tp28xx_byte_write(chip, 0x40, ch); //reg bank1 switch
4149:TP2824/TP2802.c ****     
4150:TP2824/TP2802.c **** #if 0
4151:TP2824/TP2802.c ****         if(PTZ_TVI == mod)
4152:TP2824/TP2802.c ****         {
4153:TP2824/TP2802.c ****             tmp = tp28xx_byte_read(chip, 0xf5); //check TVI 1 or 2
4154:TP2824/TP2802.c ****             if( (tmp >>ch) & 0x01)
4155:TP2824/TP2802.c ****             {
4156:TP2824/TP2802.c ****                 index = 1;
4157:TP2824/TP2802.c ****             }
4158:TP2824/TP2802.c ****             else
4159:TP2824/TP2802.c ****             {
4160:TP2824/TP2802.c ****                 index = 0;
4161:TP2824/TP2802.c ****             }
4162:TP2824/TP2802.c ****         }
4163:TP2824/TP2802.c ****         else if(PTZ_HDA_1080P == mod) //HDA 1080p
4164:TP2824/TP2802.c ****         {
4165:TP2824/TP2802.c ****                 index = 2;
4166:TP2824/TP2802.c ****         }
4167:TP2824/TP2802.c ****         else if(PTZ_HDA_720P == mod) //HDA 720p
4168:TP2824/TP2802.c ****         {
4169:TP2824/TP2802.c ****                 index = 3;
4170:TP2824/TP2802.c ****         }
4171:TP2824/TP2802.c ****         else if(PTZ_HDA_CVBS == mod) //HDA CVBS
4172:TP2824/TP2802.c ****         {
4173:TP2824/TP2802.c ****                 index = 4;
4174:TP2824/TP2802.c ****         }
4175:TP2824/TP2802.c ****         else if(PTZ_HDC == mod) // test
4176:TP2824/TP2802.c ****         {
ARM GAS  /tmp/ccSTfybG.s 			page 174


4177:TP2824/TP2802.c ****                 index = 5;
4178:TP2824/TP2802.c ****         }
4179:TP2824/TP2802.c **** #endif
4180:TP2824/TP2802.c **** 	 SetRegPage(0x00);
 5121              		.loc 1 4180 0
 5122 0002 0020     		movs	r0, #0
 5123              	.LVL666:
 5124 0004 FFF7FEFF 		bl	SetRegPage
 5125              	.LVL667:
4181:TP2824/TP2802.c **** 	 index=2;
4182:TP2824/TP2802.c **** 
4183:TP2824/TP2802.c ****      for(i = 0; i < 12; i++)
 5126              		.loc 1 4183 0
 5127 0008 0024     		movs	r4, #0
 5128 000a 07E0     		b	.L419
 5129              	.LVL668:
 5130              	.L420:
4184:TP2824/TP2802.c ****      {
4185:TP2824/TP2802.c **** //         tp28xx_byte_write(chip, PTZ_reg[i], PTZ_dat[index][i]);
4186:TP2824/TP2802.c **** 	   tp28xx_byte_write(PTZ_reg[i], PTZ_dat[index][i]);
 5131              		.loc 1 4186 0 discriminator 3
 5132 000c 054B     		ldr	r3, .L422
 5133 000e 2344     		add	r3, r3, r4
 5134 0010 197E     		ldrb	r1, [r3, #24]	@ zero_extendqisi2
 5135 0012 054B     		ldr	r3, .L422+4
 5136 0014 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 5137 0016 FFF7FEFF 		bl	tp28xx_byte_write
 5138              	.LVL669:
4183:TP2824/TP2802.c ****      {
 5139              		.loc 1 4183 0 discriminator 3
 5140 001a 0134     		adds	r4, r4, #1
 5141              	.LVL670:
 5142              	.L419:
4183:TP2824/TP2802.c ****      {
 5143              		.loc 1 4183 0 is_stmt 0 discriminator 1
 5144 001c 0B2C     		cmp	r4, #11
 5145 001e F5D9     		bls	.L420
4187:TP2824/TP2802.c ****      }
4188:TP2824/TP2802.c **** 
4189:TP2824/TP2802.c **** }
 5146              		.loc 1 4189 0 is_stmt 1
 5147 0020 10BD     		pop	{r4, pc}
 5148              	.LVL671:
 5149              	.L423:
 5150 0022 00BF     		.align	2
 5151              	.L422:
 5152 0024 00000000 		.word	.LANCHOR29
 5153 0028 00000000 		.word	.LANCHOR30
 5154              		.cfi_endproc
 5155              	.LFE102:
 5157              		.section	.text.HDA_SetACPV2Data,"ax",%progbits
 5158              		.align	1
 5159              		.global	HDA_SetACPV2Data
 5160              		.syntax unified
 5161              		.thumb
 5162              		.thumb_func
 5163              		.fpu softvfp
ARM GAS  /tmp/ccSTfybG.s 			page 175


 5165              	HDA_SetACPV2Data:
 5166              	.LFB103:
4190:TP2824/TP2802.c **** 
4191:TP2824/TP2802.c **** void HDA_SetACPV2Data(unsigned char chip, unsigned char reg,unsigned char dat)
4192:TP2824/TP2802.c **** 	{
 5167              		.loc 1 4192 0
 5168              		.cfi_startproc
 5169              		@ args = 0, pretend = 0, frame = 0
 5170              		@ frame_needed = 0, uses_anonymous_args = 0
 5171              	.LVL672:
 5172 0000 38B5     		push	{r3, r4, r5, lr}
 5173              	.LCFI39:
 5174              		.cfi_def_cfa_offset 16
 5175              		.cfi_offset 3, -16
 5176              		.cfi_offset 4, -12
 5177              		.cfi_offset 5, -8
 5178              		.cfi_offset 14, -4
 5179 0002 0D46     		mov	r5, r1
 5180              	.LVL673:
4193:TP2824/TP2802.c **** 		unsigned int i;
4194:TP2824/TP2802.c **** 		unsigned int PTZ_pelco=0;
 5181              		.loc 1 4194 0
 5182 0004 0024     		movs	r4, #0
4195:TP2824/TP2802.c **** 	
4196:TP2824/TP2802.c **** 		for(i = 0; i < 8; i++)
 5183              		.loc 1 4196 0
 5184 0006 2346     		mov	r3, r4
 5185 0008 04E0     		b	.L425
 5186              	.LVL674:
 5187              	.L431:
4197:TP2824/TP2802.c **** 		{
4198:TP2824/TP2802.c **** 			PTZ_pelco <<= 3;
4199:TP2824/TP2802.c **** 	
4200:TP2824/TP2802.c **** 			if(0x80 & dat) PTZ_pelco |= 0x06;
 5188              		.loc 1 4200 0 discriminator 1
 5189 000a 44F00604 		orr	r4, r4, #6
 5190              	.LVL675:
 5191              	.L427:
4201:TP2824/TP2802.c **** 			else PTZ_pelco |= 0x04;
4202:TP2824/TP2802.c **** 	
4203:TP2824/TP2802.c **** 			dat <<= 1;
 5192              		.loc 1 4203 0 discriminator 2
 5193 000e 5200     		lsls	r2, r2, #1
 5194              	.LVL676:
 5195 0010 D2B2     		uxtb	r2, r2
 5196              	.LVL677:
4196:TP2824/TP2802.c **** 		{
 5197              		.loc 1 4196 0 discriminator 2
 5198 0012 0133     		adds	r3, r3, #1
 5199              	.LVL678:
 5200              	.L425:
4196:TP2824/TP2802.c **** 		{
 5201              		.loc 1 4196 0 is_stmt 0 discriminator 1
 5202 0014 072B     		cmp	r3, #7
 5203 0016 06D8     		bhi	.L430
4198:TP2824/TP2802.c **** 	
 5204              		.loc 1 4198 0 is_stmt 1
ARM GAS  /tmp/ccSTfybG.s 			page 176


 5205 0018 E400     		lsls	r4, r4, #3
 5206              	.LVL679:
4200:TP2824/TP2802.c **** 			else PTZ_pelco |= 0x04;
 5207              		.loc 1 4200 0
 5208 001a 12F0800F 		tst	r2, #128
 5209 001e F4D1     		bne	.L431
4201:TP2824/TP2802.c **** 	
 5210              		.loc 1 4201 0
 5211 0020 44F00404 		orr	r4, r4, #4
 5212              	.LVL680:
 5213 0024 F3E7     		b	.L427
 5214              	.L430:
4204:TP2824/TP2802.c **** 		}
4205:TP2824/TP2802.c **** 	
4206:TP2824/TP2802.c **** 		tp28xx_byte_write( reg + 0 , (PTZ_pelco>>16)&0xff);
 5215              		.loc 1 4206 0
 5216 0026 C4F30741 		ubfx	r1, r4, #16, #8
 5217              	.LVL681:
 5218 002a 2846     		mov	r0, r5
 5219              	.LVL682:
 5220 002c FFF7FEFF 		bl	tp28xx_byte_write
 5221              	.LVL683:
4207:TP2824/TP2802.c **** 		tp28xx_byte_write( reg + 1 , (PTZ_pelco>>8)&0xff);
 5222              		.loc 1 4207 0
 5223 0030 681C     		adds	r0, r5, #1
 5224 0032 C4F30721 		ubfx	r1, r4, #8, #8
 5225 0036 C0B2     		uxtb	r0, r0
 5226 0038 FFF7FEFF 		bl	tp28xx_byte_write
 5227              	.LVL684:
4208:TP2824/TP2802.c **** 		tp28xx_byte_write( reg + 2 , (PTZ_pelco)&0xff);
 5228              		.loc 1 4208 0
 5229 003c A81C     		adds	r0, r5, #2
 5230 003e 04F0FE01 		and	r1, r4, #254
 5231 0042 C0B2     		uxtb	r0, r0
 5232 0044 FFF7FEFF 		bl	tp28xx_byte_write
 5233              	.LVL685:
4209:TP2824/TP2802.c **** 	}
 5234              		.loc 1 4209 0
 5235 0048 38BD     		pop	{r3, r4, r5, pc}
 5236              		.cfi_endproc
 5237              	.LFE103:
 5239              		.section	.text.TP2824C_StartTX,"ax",%progbits
 5240              		.align	1
 5241              		.global	TP2824C_StartTX
 5242              		.syntax unified
 5243              		.thumb
 5244              		.thumb_func
 5245              		.fpu softvfp
 5247              	TP2824C_StartTX:
 5248              	.LFB104:
4210:TP2824/TP2802.c **** 
4211:TP2824/TP2802.c **** 
4212:TP2824/TP2802.c **** void TP2824C_StartTX(unsigned char chip, unsigned char ch)
4213:TP2824/TP2802.c **** {
 5249              		.loc 1 4213 0
 5250              		.cfi_startproc
 5251              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccSTfybG.s 			page 177


 5252              		@ frame_needed = 0, uses_anonymous_args = 0
 5253              	.LVL686:
 5254 0000 38B5     		push	{r3, r4, r5, lr}
 5255              	.LCFI40:
 5256              		.cfi_def_cfa_offset 16
 5257              		.cfi_offset 3, -16
 5258              		.cfi_offset 4, -12
 5259              		.cfi_offset 5, -8
 5260              		.cfi_offset 14, -4
 5261 0002 0D46     		mov	r5, r1
4214:TP2824/TP2802.c **** 	unsigned char tmp;
4215:TP2824/TP2802.c **** 	int i;
4216:TP2824/TP2802.c **** 
4217:TP2824/TP2802.c **** 	tp28xx_byte_write( 0xB6, (0x01<<(ch))); //clear flag
 5262              		.loc 1 4217 0
 5263 0004 0121     		movs	r1, #1
 5264              	.LVL687:
 5265 0006 A940     		lsls	r1, r1, r5
 5266 0008 C9B2     		uxtb	r1, r1
 5267 000a B620     		movs	r0, #182
 5268              	.LVL688:
 5269 000c FFF7FEFF 		bl	tp28xx_byte_write
 5270              	.LVL689:
4218:TP2824/TP2802.c **** 
4219:TP2824/TP2802.c **** 	tmp = tp28xx_byte_read( 0x6f);
 5271              		.loc 1 4219 0
 5272 0010 6F20     		movs	r0, #111
 5273 0012 FFF7FEFF 		bl	tp28xx_byte_read
 5274              	.LVL690:
 5275 0016 0446     		mov	r4, r0
 5276              	.LVL691:
4220:TP2824/TP2802.c ****     tmp |= 0x01;
 5277              		.loc 1 4220 0
 5278 0018 40F00101 		orr	r1, r0, #1
 5279              	.LVL692:
4221:TP2824/TP2802.c ****     tp28xx_byte_write( 0x6f, tmp); //TX enable
 5280              		.loc 1 4221 0
 5281 001c C9B2     		uxtb	r1, r1
 5282 001e 6F20     		movs	r0, #111
 5283 0020 FFF7FEFF 		bl	tp28xx_byte_write
 5284              	.LVL693:
4222:TP2824/TP2802.c ****     tmp &= 0xfe;
4223:TP2824/TP2802.c ****     tp28xx_byte_write( 0x6f, tmp); //TX disable
 5285              		.loc 1 4223 0
 5286 0024 04F0FE01 		and	r1, r4, #254
 5287 0028 6F20     		movs	r0, #111
 5288 002a FFF7FEFF 		bl	tp28xx_byte_write
 5289              	.LVL694:
4224:TP2824/TP2802.c **** 
4225:TP2824/TP2802.c ****     i = 100;
 5290              		.loc 1 4225 0
 5291 002e 6423     		movs	r3, #100
 5292              	.LVL695:
 5293              	.L433:
4226:TP2824/TP2802.c ****     while(i--)
 5294              		.loc 1 4226 0
 5295 0030 5C1E     		subs	r4, r3, #1
ARM GAS  /tmp/ccSTfybG.s 			page 178


 5296              	.LVL696:
 5297 0032 5BB1     		cbz	r3, .L432
4227:TP2824/TP2802.c ****     {
4228:TP2824/TP2802.c ****         if( (0x01<<(ch)) & tp28xx_byte_read( 0xb6)) break;
 5298              		.loc 1 4228 0
 5299 0034 B620     		movs	r0, #182
 5300 0036 FFF7FEFF 		bl	tp28xx_byte_read
 5301              	.LVL697:
 5302 003a 2841     		asrs	r0, r0, r5
 5303 003c 10F0010F 		tst	r0, #1
 5304 0040 04D1     		bne	.L432
4229:TP2824/TP2802.c ****         //udelay(1000);
4230:TP2824/TP2802.c ****         msleep(2);
 5305              		.loc 1 4230 0
 5306 0042 0220     		movs	r0, #2
 5307 0044 FFF7FEFF 		bl	msleep
 5308              	.LVL698:
4226:TP2824/TP2802.c ****     {
 5309              		.loc 1 4226 0
 5310 0048 2346     		mov	r3, r4
 5311 004a F1E7     		b	.L433
 5312              	.L432:
4231:TP2824/TP2802.c ****     }
4232:TP2824/TP2802.c **** 
4233:TP2824/TP2802.c **** }
 5313              		.loc 1 4233 0
 5314 004c 38BD     		pop	{r3, r4, r5, pc}
 5315              		.cfi_endproc
 5316              	.LFE104:
 5318              		.section	.text.COC_test,"ax",%progbits
 5319              		.align	1
 5320              		.global	COC_test
 5321              		.syntax unified
 5322              		.thumb
 5323              		.thumb_func
 5324              		.fpu softvfp
 5326              	COC_test:
 5327              	.LFB105:
4234:TP2824/TP2802.c **** 
4235:TP2824/TP2802.c **** void COC_test(void)
4236:TP2824/TP2802.c **** {
 5328              		.loc 1 4236 0
 5329              		.cfi_startproc
 5330              		@ args = 0, pretend = 0, frame = 0
 5331              		@ frame_needed = 0, uses_anonymous_args = 0
 5332              		@ link register save eliminated.
4237:TP2824/TP2802.c **** 
4238:TP2824/TP2802.c **** 
4239:TP2824/TP2802.c **** 
4240:TP2824/TP2802.c **** 		TVI_Command=0x0F;
 5333              		.loc 1 4240 0
 5334 0000 074B     		ldr	r3, .L438
 5335 0002 0F22     		movs	r2, #15
 5336 0004 1A70     		strb	r2, [r3]
4241:TP2824/TP2802.c **** 		presetNum=0;
 5337              		.loc 1 4241 0
 5338 0006 0023     		movs	r3, #0
ARM GAS  /tmp/ccSTfybG.s 			page 179


 5339 0008 064A     		ldr	r2, .L438+4
 5340 000a 1370     		strb	r3, [r2]
4242:TP2824/TP2802.c **** 		TVI_speed=0;
 5341              		.loc 1 4242 0
 5342 000c 064A     		ldr	r2, .L438+8
 5343 000e 1370     		strb	r3, [r2]
4243:TP2824/TP2802.c **** 		TVI_Chksum=0xC5;
 5344              		.loc 1 4243 0
 5345 0010 064B     		ldr	r3, .L438+12
 5346 0012 C522     		movs	r2, #197
 5347 0014 1A70     		strb	r2, [r3]
4244:TP2824/TP2802.c **** 		ptztxflag=1;
 5348              		.loc 1 4244 0
 5349 0016 064B     		ldr	r3, .L438+16
 5350 0018 0122     		movs	r2, #1
 5351 001a 1A60     		str	r2, [r3]
4245:TP2824/TP2802.c **** 		
4246:TP2824/TP2802.c **** 	
4247:TP2824/TP2802.c **** 
4248:TP2824/TP2802.c **** }
 5352              		.loc 1 4248 0
 5353 001c 7047     		bx	lr
 5354              	.L439:
 5355 001e 00BF     		.align	2
 5356              	.L438:
 5357 0020 00000000 		.word	TVI_Command
 5358 0024 00000000 		.word	presetNum
 5359 0028 00000000 		.word	TVI_speed
 5360 002c 00000000 		.word	TVI_Chksum
 5361 0030 00000000 		.word	ptztxflag
 5362              		.cfi_endproc
 5363              	.LFE105:
 5365              		.section	.text.Init_COC_PTZOUT1,"ax",%progbits
 5366              		.align	1
 5367              		.global	Init_COC_PTZOUT1
 5368              		.syntax unified
 5369              		.thumb
 5370              		.thumb_func
 5371              		.fpu softvfp
 5373              	Init_COC_PTZOUT1:
 5374              	.LFB106:
4249:TP2824/TP2802.c **** void Init_COC_PTZOUT1(void)
4250:TP2824/TP2802.c **** {
 5375              		.loc 1 4250 0
 5376              		.cfi_startproc
 5377              		@ args = 0, pretend = 0, frame = 0
 5378              		@ frame_needed = 0, uses_anonymous_args = 0
 5379 0000 08B5     		push	{r3, lr}
 5380              	.LCFI41:
 5381              		.cfi_def_cfa_offset 8
 5382              		.cfi_offset 3, -8
 5383              		.cfi_offset 14, -4
4251:TP2824/TP2802.c **** 	printf("\r\n Init_COC_PTZOUT1..");
 5384              		.loc 1 4251 0
 5385 0002 4448     		ldr	r0, .L442
 5386 0004 FFF7FEFF 		bl	printf
 5387              	.LVL699:
ARM GAS  /tmp/ccSTfybG.s 			page 180


4252:TP2824/TP2802.c **** 
4253:TP2824/TP2802.c **** 	
4254:TP2824/TP2802.c **** 	tp28xx_byte_write(0x40,0x04);
 5388              		.loc 1 4254 0
 5389 0008 0421     		movs	r1, #4
 5390 000a 4020     		movs	r0, #64
 5391 000c FFF7FEFF 		bl	tp28xx_byte_write
 5392              	.LVL700:
4255:TP2824/TP2802.c **** 	tp28xx_byte_write(0xa7,0x83);
 5393              		.loc 1 4255 0
 5394 0010 8321     		movs	r1, #131
 5395 0012 A720     		movs	r0, #167
 5396 0014 FFF7FEFF 		bl	tp28xx_byte_write
 5397              	.LVL701:
4256:TP2824/TP2802.c **** 	tp28xx_byte_write(0xbe,0x80);
 5398              		.loc 1 4256 0
 5399 0018 8021     		movs	r1, #128
 5400 001a BE20     		movs	r0, #190
 5401 001c FFF7FEFF 		bl	tp28xx_byte_write
 5402              	.LVL702:
4257:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6f,0x42);
 5403              		.loc 1 4257 0
 5404 0020 4221     		movs	r1, #66
 5405 0022 6F20     		movs	r0, #111
 5406 0024 FFF7FEFF 		bl	tp28xx_byte_write
 5407              	.LVL703:
4258:TP2824/TP2802.c **** 
4259:TP2824/TP2802.c **** 	tp28xx_byte_write(0x70,0x40);
 5408              		.loc 1 4259 0
 5409 0028 4021     		movs	r1, #64
 5410 002a 7020     		movs	r0, #112
 5411 002c FFF7FEFF 		bl	tp28xx_byte_write
 5412              	.LVL704:
4260:TP2824/TP2802.c **** 	tp28xx_byte_write(0x71,0x20);
 5413              		.loc 1 4260 0
 5414 0030 2021     		movs	r1, #32
 5415 0032 7120     		movs	r0, #113
 5416 0034 FFF7FEFF 		bl	tp28xx_byte_write
 5417              	.LVL705:
4261:TP2824/TP2802.c **** 	tp28xx_byte_write(0x72,0x00);
 5418              		.loc 1 4261 0
 5419 0038 0021     		movs	r1, #0
 5420 003a 7220     		movs	r0, #114
 5421 003c FFF7FEFF 		bl	tp28xx_byte_write
 5422              	.LVL706:
4262:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc0,0x00);
 5423              		.loc 1 4262 0
 5424 0040 0021     		movs	r1, #0
 5425 0042 C020     		movs	r0, #192
 5426 0044 FFF7FEFF 		bl	tp28xx_byte_write
 5427              	.LVL707:
4263:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc1,0x00);
 5428              		.loc 1 4263 0
 5429 0048 0021     		movs	r1, #0
 5430 004a C120     		movs	r0, #193
 5431 004c FFF7FEFF 		bl	tp28xx_byte_write
 5432              	.LVL708:
ARM GAS  /tmp/ccSTfybG.s 			page 181


4264:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc2,0x0b);
 5433              		.loc 1 4264 0
 5434 0050 0B21     		movs	r1, #11
 5435 0052 C220     		movs	r0, #194
 5436 0054 FFF7FEFF 		bl	tp28xx_byte_write
 5437              	.LVL709:
4265:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc3,0x0c);
 5438              		.loc 1 4265 0
 5439 0058 0C21     		movs	r1, #12
 5440 005a C320     		movs	r0, #195
 5441 005c FFF7FEFF 		bl	tp28xx_byte_write
 5442              	.LVL710:
4266:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc4,0x0d);
 5443              		.loc 1 4266 0
 5444 0060 0D21     		movs	r1, #13
 5445 0062 C420     		movs	r0, #196
 5446 0064 FFF7FEFF 		bl	tp28xx_byte_write
 5447              	.LVL711:
4267:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc5,0x0e);
 5448              		.loc 1 4267 0
 5449 0068 0E21     		movs	r1, #14
 5450 006a C520     		movs	r0, #197
 5451 006c FFF7FEFF 		bl	tp28xx_byte_write
 5452              	.LVL712:
4268:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc6,0x19);
 5453              		.loc 1 4268 0
 5454 0070 1921     		movs	r1, #25
 5455 0072 C620     		movs	r0, #198
 5456 0074 FFF7FEFF 		bl	tp28xx_byte_write
 5457              	.LVL713:
4269:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc7,0x78);
 5458              		.loc 1 4269 0
 5459 0078 7821     		movs	r1, #120
 5460 007a C720     		movs	r0, #199
 5461 007c FFF7FEFF 		bl	tp28xx_byte_write
 5462              	.LVL714:
4270:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc8,0x21);
 5463              		.loc 1 4270 0
 5464 0080 2121     		movs	r1, #33
 5465 0082 C820     		movs	r0, #200
 5466 0084 FFF7FEFF 		bl	tp28xx_byte_write
 5467              	.LVL715:
4271:TP2824/TP2802.c **** 						
4272:TP2824/TP2802.c **** 	tp28xx_byte_write(0xcb,0x07); 
 5468              		.loc 1 4272 0
 5469 0088 0721     		movs	r1, #7
 5470 008a CB20     		movs	r0, #203
 5471 008c FFF7FEFF 		bl	tp28xx_byte_write
 5472              	.LVL716:
4273:TP2824/TP2802.c **** 	tp28xx_byte_write(0xcc,0x08); 
 5473              		.loc 1 4273 0
 5474 0090 0821     		movs	r1, #8
 5475 0092 CC20     		movs	r0, #204
 5476 0094 FFF7FEFF 		bl	tp28xx_byte_write
 5477              	.LVL717:
4274:TP2824/TP2802.c **** 	tp28xx_byte_write(0xcd,0x09); 
 5478              		.loc 1 4274 0
ARM GAS  /tmp/ccSTfybG.s 			page 182


 5479 0098 0921     		movs	r1, #9
 5480 009a CD20     		movs	r0, #205
 5481 009c FFF7FEFF 		bl	tp28xx_byte_write
 5482              	.LVL718:
4275:TP2824/TP2802.c **** 	tp28xx_byte_write(0xce,0x0a); 
 5483              		.loc 1 4275 0
 5484 00a0 0A21     		movs	r1, #10
 5485 00a2 CE20     		movs	r0, #206
 5486 00a4 FFF7FEFF 		bl	tp28xx_byte_write
 5487              	.LVL719:
4276:TP2824/TP2802.c **** 	tp28xx_byte_write(0xcf,0x04); 
 5488              		.loc 1 4276 0
 5489 00a8 0421     		movs	r1, #4
 5490 00aa CF20     		movs	r0, #207
 5491 00ac FFF7FEFF 		bl	tp28xx_byte_write
 5492              	.LVL720:
4277:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd0,0x00); 
 5493              		.loc 1 4277 0
 5494 00b0 0021     		movs	r1, #0
 5495 00b2 D020     		movs	r0, #208
 5496 00b4 FFF7FEFF 		bl	tp28xx_byte_write
 5497              	.LVL721:
4278:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd1,0x00); 
 5498              		.loc 1 4278 0
 5499 00b8 0021     		movs	r1, #0
 5500 00ba D120     		movs	r0, #209
 5501 00bc FFF7FEFF 		bl	tp28xx_byte_write
 5502              	.LVL722:
4279:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd2,0x60); 
 5503              		.loc 1 4279 0
 5504 00c0 6021     		movs	r1, #96
 5505 00c2 D220     		movs	r0, #210
 5506 00c4 FFF7FEFF 		bl	tp28xx_byte_write
 5507              	.LVL723:
4280:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd3,0x10); 
 5508              		.loc 1 4280 0
 5509 00c8 1021     		movs	r1, #16
 5510 00ca D320     		movs	r0, #211
 5511 00cc FFF7FEFF 		bl	tp28xx_byte_write
 5512              	.LVL724:
4281:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd4,0x06); 
 5513              		.loc 1 4281 0
 5514 00d0 0621     		movs	r1, #6
 5515 00d2 D420     		movs	r0, #212
 5516 00d4 FFF7FEFF 		bl	tp28xx_byte_write
 5517              	.LVL725:
4282:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd5,0xbe); 
 5518              		.loc 1 4282 0
 5519 00d8 BE21     		movs	r1, #190
 5520 00da D520     		movs	r0, #213
 5521 00dc FFF7FEFF 		bl	tp28xx_byte_write
 5522              	.LVL726:
4283:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd6,0x39); 
 5523              		.loc 1 4283 0
 5524 00e0 3921     		movs	r1, #57
 5525 00e2 D620     		movs	r0, #214
 5526 00e4 FFF7FEFF 		bl	tp28xx_byte_write
ARM GAS  /tmp/ccSTfybG.s 			page 183


 5527              	.LVL727:
4284:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd7,0x27); 
 5528              		.loc 1 4284 0
 5529 00e8 2721     		movs	r1, #39
 5530 00ea D720     		movs	r0, #215
 5531 00ec FFF7FEFF 		bl	tp28xx_byte_write
 5532              	.LVL728:
4285:TP2824/TP2802.c **** 
4286:TP2824/TP2802.c **** #if 1//ryan@20201231
4287:TP2824/TP2802.c **** tp28xx_byte_write(0xc2,0x0E);
 5533              		.loc 1 4287 0
 5534 00f0 0E21     		movs	r1, #14
 5535 00f2 C220     		movs	r0, #194
 5536 00f4 FFF7FEFF 		bl	tp28xx_byte_write
 5537              	.LVL729:
4288:TP2824/TP2802.c **** tp28xx_byte_write(0xc3,0x0F);
 5538              		.loc 1 4288 0
 5539 00f8 0F21     		movs	r1, #15
 5540 00fa C320     		movs	r0, #195
 5541 00fc FFF7FEFF 		bl	tp28xx_byte_write
 5542              	.LVL730:
4289:TP2824/TP2802.c **** tp28xx_byte_write(0xc4,0x10);
 5543              		.loc 1 4289 0
 5544 0100 1021     		movs	r1, #16
 5545 0102 C420     		movs	r0, #196
 5546 0104 FFF7FEFF 		bl	tp28xx_byte_write
 5547              	.LVL731:
4290:TP2824/TP2802.c **** tp28xx_byte_write(0xc5,0x11);
 5548              		.loc 1 4290 0
 5549 0108 1121     		movs	r1, #17
 5550 010a C520     		movs	r0, #197
 5551 010c FFF7FEFF 		bl	tp28xx_byte_write
 5552              	.LVL732:
4291:TP2824/TP2802.c **** #endif
4292:TP2824/TP2802.c **** 
4293:TP2824/TP2802.c **** }
 5553              		.loc 1 4293 0
 5554 0110 08BD     		pop	{r3, pc}
 5555              	.L443:
 5556 0112 00BF     		.align	2
 5557              	.L442:
 5558 0114 00000000 		.word	.LC41
 5559              		.cfi_endproc
 5560              	.LFE106:
 5562              		.section	.text.EQ_Detect,"ax",%progbits
 5563              		.align	1
 5564              		.global	EQ_Detect
 5565              		.syntax unified
 5566              		.thumb
 5567              		.thumb_func
 5568              		.fpu softvfp
 5570              	EQ_Detect:
 5571              	.LFB85:
1750:TP2824/TP2802.c ****     //tByte tmpval;
 5572              		.loc 1 1750 0
 5573              		.cfi_startproc
 5574              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccSTfybG.s 			page 184


 5575              		@ frame_needed = 0, uses_anonymous_args = 0
 5576 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5577              	.LCFI42:
 5578              		.cfi_def_cfa_offset 20
 5579              		.cfi_offset 4, -20
 5580              		.cfi_offset 5, -16
 5581              		.cfi_offset 6, -12
 5582              		.cfi_offset 7, -8
 5583              		.cfi_offset 14, -4
 5584 0002 83B0     		sub	sp, sp, #12
 5585              	.LCFI43:
 5586              		.cfi_def_cfa_offset 32
 5587              	.LVL733:
1755:TP2824/TP2802.c ****     {
 5588              		.loc 1 1755 0
 5589 0004 0024     		movs	r4, #0
 5590              	.LVL734:
 5591              	.L445:
1755:TP2824/TP2802.c ****     {
 5592              		.loc 1 1755 0 is_stmt 0 discriminator 1
 5593 0006 0CB1     		cbz	r4, .L505
2501:TP2824/TP2802.c **** #if 0
 5594              		.loc 1 2501 0 is_stmt 1
 5595 0008 03B0     		add	sp, sp, #12
 5596              	.LCFI44:
 5597              		.cfi_remember_state
 5598              		.cfi_def_cfa_offset 20
 5599              		@ sp needed
 5600 000a F0BD     		pop	{r4, r5, r6, r7, pc}
 5601              	.LVL735:
 5602              	.L505:
 5603              	.LCFI45:
 5604              		.cfi_restore_state
1761:TP2824/TP2802.c ****         status = tp28xx_byte_read(0x01);
 5605              		.loc 1 1761 0
 5606 000c 2046     		mov	r0, r4
 5607 000e FFF7FEFF 		bl	SetRegPage
 5608              	.LVL736:
1762:TP2824/TP2802.c **** 
 5609              		.loc 1 1762 0
 5610 0012 0120     		movs	r0, #1
 5611 0014 FFF7FEFF 		bl	tp28xx_byte_read
 5612              	.LVL737:
 5613 0018 0646     		mov	r6, r0
 5614              	.LVL738:
1765:TP2824/TP2802.c ****         {
 5615              		.loc 1 1765 0
 5616 001a 10F0800F 		tst	r0, #128
 5617 001e 34D1     		bne	.L518
1816:TP2824/TP2802.c ****                 flag_LOCKED = CVBS_FLAG_LOCKED;
 5618              		.loc 1 1816 0
 5619 0020 2546     		mov	r5, r4
 5620 0022 A44B     		ldr	r3, .L564
 5621 0024 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 5622 0026 083B     		subs	r3, r3, #8
 5623 0028 DBB2     		uxtb	r3, r3
 5624 002a 012B     		cmp	r3, #1
ARM GAS  /tmp/ccSTfybG.s 			page 185


 5625 002c 5CD9     		bls	.L519
1819:TP2824/TP2802.c **** 
 5626              		.loc 1 1819 0
 5627 002e A24B     		ldr	r3, .L564+4
 5628 0030 6022     		movs	r2, #96
 5629 0032 1A70     		strb	r2, [r3]
 5630              	.L453:
1821:TP2824/TP2802.c ****             {
 5631              		.loc 1 1821 0
 5632 0034 A04B     		ldr	r3, .L564+4
 5633 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5634 0038 B343     		bics	r3, r3, r6
 5635 003a 59D0     		beq	.L520
1868:TP2824/TP2802.c ****                 {
 5636              		.loc 1 1868 0
 5637 003c 9F4B     		ldr	r3, .L564+8
 5638 003e 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5639 0040 002B     		cmp	r3, #0
 5640 0042 78D0     		beq	.L521
1874:TP2824/TP2802.c ****                 {
 5641              		.loc 1 1874 0
 5642 0044 022B     		cmp	r3, #2
 5643 0046 00F08180 		beq	.L522
1891:TP2824/TP2802.c ****                     if(VIDEO_UNLOCK == state[i] && count[i] > 2)
 5644              		.loc 1 1891 0
 5645 004a 9D4A     		ldr	r2, .L564+12
 5646 004c 525D     		ldrb	r2, [r2, r5]	@ zero_extendqisi2
 5647 004e FF2A     		cmp	r2, #255
 5648 0050 02D0     		beq	.L459
1891:TP2824/TP2802.c ****                     if(VIDEO_UNLOCK == state[i] && count[i] > 2)
 5649              		.loc 1 1891 0 is_stmt 0 discriminator 1
 5650 0052 0132     		adds	r2, r2, #1
 5651 0054 9A49     		ldr	r1, .L564+12
 5652 0056 4A55     		strb	r2, [r1, r5]
 5653              	.L459:
1892:TP2824/TP2802.c ****                     {
 5654              		.loc 1 1892 0 is_stmt 1
 5655 0058 032B     		cmp	r3, #3
 5656 005a 23D1     		bne	.L451
1892:TP2824/TP2802.c ****                     {
 5657              		.loc 1 1892 0 is_stmt 0 discriminator 1
 5658 005c 984B     		ldr	r3, .L564+12
 5659 005e 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5660 0060 022B     		cmp	r3, #2
 5661 0062 1FD9     		bls	.L451
1894:TP2824/TP2802.c ****                         count[i] = 0;
 5662              		.loc 1 1894 0 is_stmt 1
 5663 0064 954B     		ldr	r3, .L564+8
 5664 0066 0122     		movs	r2, #1
 5665 0068 5A55     		strb	r2, [r3, r5]
1895:TP2824/TP2802.c ****                         TP28xx_reset_default(chip, i);
 5666              		.loc 1 1895 0
 5667 006a 954B     		ldr	r3, .L564+12
 5668 006c 0022     		movs	r2, #0
 5669 006e 5A55     		strb	r2, [r3, r5]
1896:TP2824/TP2802.c ****                         printf("video unlocked ch%02x \r\n", (tWord)i);                        
 5670              		.loc 1 1896 0
ARM GAS  /tmp/ccSTfybG.s 			page 186


 5671 0070 2146     		mov	r1, r4
 5672 0072 944B     		ldr	r3, .L564+16
 5673 0074 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5674              	.LVL739:
 5675 0076 FFF7FEFF 		bl	TP28xx_reset_default
 5676              	.LVL740:
1897:TP2824/TP2802.c ****                         VS4210_Rx_NoSignal(i) ;//chunyu
 5677              		.loc 1 1897 0
 5678 007a 2946     		mov	r1, r5
 5679 007c 9248     		ldr	r0, .L564+20
 5680 007e FFF7FEFF 		bl	printf
 5681              	.LVL741:
1898:TP2824/TP2802.c ****                     }
 5682              		.loc 1 1898 0
 5683 0082 2046     		mov	r0, r4
 5684 0084 FFF7FEFF 		bl	VS4210_Rx_NoSignal
 5685              	.LVL742:
 5686 0088 0CE0     		b	.L451
 5687              	.LVL743:
 5688              	.L518:
1769:TP2824/TP2802.c ****             {
 5689              		.loc 1 1769 0
 5690 008a 8C4B     		ldr	r3, .L564+8
 5691 008c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 5692 008e B3B1     		cbz	r3, .L523
1778:TP2824/TP2802.c **** 				 	{
 5693              		.loc 1 1778 0
 5694 0090 8E4B     		ldr	r3, .L564+24
 5695 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5696 0094 012B     		cmp	r3, #1
 5697 0096 1AD0     		beq	.L524
 5698              	.LVL744:
 5699              	.L450:
1786:TP2824/TP2802.c **** 
 5700              		.loc 1 1786 0
 5701 0098 FFF7FEFF 		bl	Init_TP280x_RegSet
 5702              	.LVL745:
1788:TP2824/TP2802.c **** 				 	{
 5703              		.loc 1 1788 0
 5704 009c 8B4B     		ldr	r3, .L564+24
 5705 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5706 00a0 012B     		cmp	r3, #1
 5707 00a2 1DD0     		beq	.L525
 5708              	.L451:
1906:TP2824/TP2802.c ****         {
 5709              		.loc 1 1906 0
 5710 00a4 2546     		mov	r5, r4
 5711 00a6 854B     		ldr	r3, .L564+8
 5712 00a8 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 5713 00aa 012B     		cmp	r3, #1
 5714 00ac 59D0     		beq	.L526
 5715              	.L460:
1987:TP2824/TP2802.c ****         {
 5716              		.loc 1 1987 0
 5717 00ae 834B     		ldr	r3, .L564+8
 5718 00b0 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5719 00b2 022B     		cmp	r3, #2
ARM GAS  /tmp/ccSTfybG.s 			page 187


 5720 00b4 00F0CC80 		beq	.L527
 5721              	.L449:
1755:TP2824/TP2802.c ****     {
 5722              		.loc 1 1755 0 discriminator 2
 5723 00b8 0134     		adds	r4, r4, #1
 5724              	.LVL746:
 5725 00ba E4B2     		uxtb	r4, r4
 5726              	.LVL747:
 5727 00bc A3E7     		b	.L445
 5728              	.LVL748:
 5729              	.L523:
1771:TP2824/TP2802.c ****                 continue;
 5730              		.loc 1 1771 0
 5731 00be 804B     		ldr	r3, .L564+12
 5732 00c0 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 5733 00c2 FF2B     		cmp	r3, #255
 5734 00c4 F8D0     		beq	.L449
1771:TP2824/TP2802.c ****                 continue;
 5735              		.loc 1 1771 0 is_stmt 0 discriminator 1
 5736 00c6 0133     		adds	r3, r3, #1
 5737 00c8 7D49     		ldr	r1, .L564+12
 5738 00ca 0B55     		strb	r3, [r1, r4]
1772:TP2824/TP2802.c ****             }
 5739              		.loc 1 1772 0 is_stmt 1 discriminator 1
 5740 00cc F4E7     		b	.L449
 5741              	.L524:
1780:TP2824/TP2802.c **** 					VXISI2CWrite( 0x32, 0x00 );
 5742              		.loc 1 1780 0
 5743 00ce 0121     		movs	r1, #1
 5744 00d0 0846     		mov	r0, r1
 5745              	.LVL749:
 5746 00d2 FFF7FEFF 		bl	Set_Video_Loss_OSD
 5747              	.LVL750:
1781:TP2824/TP2802.c **** 				 	}
 5748              		.loc 1 1781 0
 5749 00d6 0021     		movs	r1, #0
 5750 00d8 3220     		movs	r0, #50
 5751 00da FFF7FEFF 		bl	VXISI2CWrite
 5752              	.LVL751:
 5753 00de DBE7     		b	.L450
 5754              	.L525:
1791:TP2824/TP2802.c **** 				 	}
 5755              		.loc 1 1791 0
 5756 00e0 0120     		movs	r0, #1
 5757 00e2 FFF7FEFF 		bl	HS_Select_Win
 5758              	.LVL752:
 5759 00e6 DDE7     		b	.L451
 5760              	.LVL753:
 5761              	.L519:
1817:TP2824/TP2802.c ****             else
 5762              		.loc 1 1817 0
 5763 00e8 734B     		ldr	r3, .L564+4
 5764 00ea 6022     		movs	r2, #96
 5765 00ec 1A70     		strb	r2, [r3]
 5766 00ee A1E7     		b	.L453
 5767              	.L520:
1823:TP2824/TP2802.c ****                 {
ARM GAS  /tmp/ccSTfybG.s 			page 188


 5768              		.loc 1 1823 0
 5769 00f0 724B     		ldr	r3, .L564+8
 5770 00f2 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5771 00f4 022B     		cmp	r3, #2
 5772 00f6 0BD0     		beq	.L528
1852:TP2824/TP2802.c ****                 {
 5773              		.loc 1 1852 0
 5774 00f8 93B9     		cbnz	r3, .L456
1854:TP2824/TP2802.c ****                     count[i] = 0;
 5775              		.loc 1 1854 0
 5776 00fa 704B     		ldr	r3, .L564+8
 5777 00fc 0122     		movs	r2, #1
 5778 00fe 5A55     		strb	r2, [r3, r5]
1855:TP2824/TP2802.c ****                     printf("1video in ch%02x \r\n", (tWord)i);
 5779              		.loc 1 1855 0
 5780 0100 6F4B     		ldr	r3, .L564+12
 5781 0102 0022     		movs	r2, #0
 5782 0104 5A55     		strb	r2, [r3, r5]
1856:TP2824/TP2802.c ****                 }
 5783              		.loc 1 1856 0
 5784 0106 2946     		mov	r1, r5
 5785 0108 7148     		ldr	r0, .L564+28
 5786              	.LVL754:
 5787 010a FFF7FEFF 		bl	printf
 5788              	.LVL755:
 5789 010e C9E7     		b	.L451
 5790              	.LVL756:
 5791              	.L528:
1825:TP2824/TP2802.c **** 				#if 0
 5792              		.loc 1 1825 0
 5793 0110 6B4B     		ldr	r3, .L564+12
 5794 0112 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5795 0114 FF2B     		cmp	r3, #255
 5796 0116 C5D0     		beq	.L451
1825:TP2824/TP2802.c **** 				#if 0
 5797              		.loc 1 1825 0 is_stmt 0 discriminator 1
 5798 0118 0133     		adds	r3, r3, #1
 5799 011a 694A     		ldr	r2, .L564+12
 5800 011c 5355     		strb	r3, [r2, r5]
 5801 011e C1E7     		b	.L451
 5802              	.L456:
1860:TP2824/TP2802.c ****                     count[i] = 0;
 5803              		.loc 1 1860 0 is_stmt 1
 5804 0120 664B     		ldr	r3, .L564+8
 5805 0122 0222     		movs	r2, #2
 5806 0124 5A55     		strb	r2, [r3, r5]
1861:TP2824/TP2802.c ****                     printf("video locked ch%02x \r\n", (tWord)i);
 5807              		.loc 1 1861 0
 5808 0126 664B     		ldr	r3, .L564+12
 5809 0128 0022     		movs	r2, #0
 5810 012a 5A55     		strb	r2, [r3, r5]
1862:TP2824/TP2802.c ****                 }
 5811              		.loc 1 1862 0
 5812 012c 2946     		mov	r1, r5
 5813 012e 6948     		ldr	r0, .L564+32
 5814              	.LVL757:
 5815 0130 FFF7FEFF 		bl	printf
ARM GAS  /tmp/ccSTfybG.s 			page 189


 5816              	.LVL758:
 5817 0134 B6E7     		b	.L451
 5818              	.LVL759:
 5819              	.L521:
1870:TP2824/TP2802.c ****                     count[i] = 0;
 5820              		.loc 1 1870 0
 5821 0136 614B     		ldr	r3, .L564+8
 5822 0138 0122     		movs	r2, #1
 5823 013a 5A55     		strb	r2, [r3, r5]
1871:TP2824/TP2802.c ****                     printf("video in ch%02x \r\n", (tWord)i);
 5824              		.loc 1 1871 0
 5825 013c 604B     		ldr	r3, .L564+12
 5826 013e 0022     		movs	r2, #0
 5827 0140 5A55     		strb	r2, [r3, r5]
1872:TP2824/TP2802.c ****                 }
 5828              		.loc 1 1872 0
 5829 0142 2946     		mov	r1, r5
 5830 0144 6448     		ldr	r0, .L564+36
 5831              	.LVL760:
 5832 0146 FFF7FEFF 		bl	printf
 5833              	.LVL761:
 5834 014a ABE7     		b	.L451
 5835              	.LVL762:
 5836              	.L522:
1884:TP2824/TP2802.c ****                     count[i] = 0;
 5837              		.loc 1 1884 0
 5838 014c 5B4B     		ldr	r3, .L564+8
 5839 014e 0322     		movs	r2, #3
 5840 0150 5A55     		strb	r2, [r3, r5]
1885:TP2824/TP2802.c ****                     printf("video unstable ch%02x \r\n", (tWord)i);
 5841              		.loc 1 1885 0
 5842 0152 5B4B     		ldr	r3, .L564+12
 5843 0154 0022     		movs	r2, #0
 5844 0156 5A55     		strb	r2, [r3, r5]
1886:TP2824/TP2802.c **** 			}		
 5845              		.loc 1 1886 0
 5846 0158 2946     		mov	r1, r5
 5847 015a 6048     		ldr	r0, .L564+40
 5848              	.LVL763:
 5849 015c FFF7FEFF 		bl	printf
 5850              	.LVL764:
 5851 0160 A0E7     		b	.L451
 5852              	.L526:
1908:TP2824/TP2802.c ****             sywd = cvstd & 0x08;
 5853              		.loc 1 1908 0
 5854 0162 0320     		movs	r0, #3
 5855 0164 FFF7FEFF 		bl	tp28xx_byte_read
 5856              	.LVL765:
1909:TP2824/TP2802.c ****             cvstd &= 0x07;
 5857              		.loc 1 1909 0
 5858 0168 00F00802 		and	r2, r0, #8
 5859 016c 5C4B     		ldr	r3, .L564+44
 5860 016e 1A60     		str	r2, [r3]
1910:TP2824/TP2802.c ****             fmt = mode[i];
 5861              		.loc 1 1910 0
 5862 0170 00F00702 		and	r2, r0, #7
 5863              	.LVL766:
ARM GAS  /tmp/ccSTfybG.s 			page 190


1911:TP2824/TP2802.c ****             if(NTPAL == cvstd && flag_CVBS)
 5864              		.loc 1 1911 0
 5865 0174 4F4B     		ldr	r3, .L564
 5866 0176 1F5D     		ldrb	r7, [r3, r4]	@ zero_extendqisi2
 5867              	.LVL767:
1912:TP2824/TP2802.c ****             {
 5868              		.loc 1 1912 0
 5869 0178 062A     		cmp	r2, #6
 5870 017a 11D0     		beq	.L529
 5871              	.L461:
1920:TP2824/TP2802.c ****             {
 5872              		.loc 1 1920 0
 5873 017c 042A     		cmp	r2, #4
 5874 017e 18D0     		beq	.L530
1927:TP2824/TP2802.c ****             {
 5875              		.loc 1 1927 0
 5876 0180 052A     		cmp	r2, #5
 5877 0182 4FD0     		beq	.L509
1931:TP2824/TP2802.c ****             {
 5878              		.loc 1 1931 0
 5879 0184 022A     		cmp	r2, #2
 5880 0186 1ED0     		beq	.L531
1938:TP2824/TP2802.c ****             {
 5881              		.loc 1 1938 0
 5882 0188 3ABB     		cbnz	r2, .L465
1940:TP2824/TP2802.c ****                     fmt = R4M30;
 5883              		.loc 1 1940 0
 5884 018a 564B     		ldr	r3, .L564+48
 5885 018c 1B68     		ldr	r3, [r3]
 5886 018e 002B     		cmp	r3, #0
 5887 0190 49D0     		beq	.L462
1940:TP2824/TP2802.c ****                     fmt = R4M30;
 5888              		.loc 1 1940 0 is_stmt 0 discriminator 1
 5889 0192 4B4B     		ldr	r3, .L564+12
 5890 0194 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5891 0196 13F0020F 		tst	r3, #2
 5892 019a 44D0     		beq	.L462
1941:TP2824/TP2802.c ****                 else
 5893              		.loc 1 1941 0 is_stmt 1
 5894 019c 2622     		movs	r2, #38
 5895              	.LVL768:
 5896 019e 42E0     		b	.L462
 5897              	.LVL769:
 5898              	.L529:
1912:TP2824/TP2802.c ****             {
 5899              		.loc 1 1912 0 discriminator 1
 5900 01a0 514B     		ldr	r3, .L564+52
 5901 01a2 1B68     		ldr	r3, [r3]
 5902 01a4 002B     		cmp	r3, #0
 5903 01a6 E9D0     		beq	.L461
1915:TP2824/TP2802.c ****                     fmt = PAL;
 5904              		.loc 1 1915 0
 5905 01a8 16F0040F 		tst	r6, #4
 5906 01ac 34D0     		beq	.L506
1916:TP2824/TP2802.c ****                 else
 5907              		.loc 1 1916 0
 5908 01ae 0922     		movs	r2, #9
ARM GAS  /tmp/ccSTfybG.s 			page 191


 5909              	.LVL770:
 5910 01b0 39E0     		b	.L462
 5911              	.LVL771:
 5912              	.L530:
1922:TP2824/TP2802.c ****                     fmt = R4M12;
 5913              		.loc 1 1922 0
 5914 01b2 4C4B     		ldr	r3, .L564+48
 5915 01b4 1B68     		ldr	r3, [r3]
 5916 01b6 8BB3     		cbz	r3, .L507
1922:TP2824/TP2802.c ****                     fmt = R4M12;
 5917              		.loc 1 1922 0 is_stmt 0 discriminator 1
 5918 01b8 414B     		ldr	r3, .L564+12
 5919 01ba 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5920 01bc 13F0020F 		tst	r3, #2
 5921 01c0 2ED1     		bne	.L508
1925:TP2824/TP2802.c ****             }
 5922              		.loc 1 1925 0 is_stmt 1
 5923 01c2 0C22     		movs	r2, #12
 5924              	.LVL772:
 5925 01c4 2FE0     		b	.L462
 5926              	.LVL773:
 5927              	.L531:
1933:TP2824/TP2802.c ****                     fmt = R3M20;
 5928              		.loc 1 1933 0
 5929 01c6 474B     		ldr	r3, .L564+48
 5930 01c8 1B68     		ldr	r3, [r3]
 5931 01ca 63B3     		cbz	r3, .L462
1933:TP2824/TP2802.c ****                     fmt = R3M20;
 5932              		.loc 1 1933 0 is_stmt 0 discriminator 1
 5933 01cc 3C4B     		ldr	r3, .L564+12
 5934 01ce 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5935 01d0 13F0020F 		tst	r3, #2
 5936 01d4 27D0     		beq	.L462
1934:TP2824/TP2802.c ****                 else
 5937              		.loc 1 1934 0 is_stmt 1
 5938 01d6 2322     		movs	r2, #35
 5939              	.LVL774:
 5940 01d8 25E0     		b	.L462
 5941              	.LVL775:
 5942              	.L465:
1945:TP2824/TP2802.c ****             {
 5943              		.loc 1 1945 0
 5944 01da 032A     		cmp	r2, #3
 5945 01dc 23D9     		bls	.L462
1951:TP2824/TP2802.c ****                 {
 5946              		.loc 1 1951 0
 5947 01de 414B     		ldr	r3, .L564+48
 5948 01e0 1B68     		ldr	r3, [r3]
 5949 01e2 0BB9     		cbnz	r3, .L532
1911:TP2824/TP2802.c ****             if(NTPAL == cvstd && flag_CVBS)
 5950              		.loc 1 1911 0
 5951 01e4 3A46     		mov	r2, r7
 5952              	.LVL776:
 5953 01e6 1EE0     		b	.L462
 5954              	.LVL777:
 5955              	.L532:
1953:TP2824/TP2802.c ****                     tmp = tp28xx_byte_read(0x04);
ARM GAS  /tmp/ccSTfybG.s 			page 192


 5956              		.loc 1 1953 0
 5957 01e8 0921     		movs	r1, #9
 5958 01ea 2F20     		movs	r0, #47
 5959 01ec FFF7FEFF 		bl	tp28xx_byte_write
 5960              	.LVL778:
1954:TP2824/TP2802.c ****                     if((tmp > 0x48) && (tmp < 0x55))
 5961              		.loc 1 1954 0
 5962 01f0 0420     		movs	r0, #4
 5963 01f2 FFF7FEFF 		bl	tp28xx_byte_read
 5964              	.LVL779:
1955:TP2824/TP2802.c ****                     {
 5965              		.loc 1 1955 0
 5966 01f6 A0F14903 		sub	r3, r0, #73
 5967 01fa DBB2     		uxtb	r3, r3
 5968 01fc 0B2B     		cmp	r3, #11
 5969 01fe 21D9     		bls	.L513
1959:TP2824/TP2802.c ****                     {
 5970              		.loc 1 1959 0
 5971 0200 A0F15603 		sub	r3, r0, #86
 5972 0204 DBB2     		uxtb	r3, r3
 5973 0206 0B2B     		cmp	r3, #11
 5974 0208 1ED9     		bls	.L514
1963:TP2824/TP2802.c ****                     {
 5975              		.loc 1 1963 0
 5976 020a A0F17103 		sub	r3, r0, #113
 5977 020e DBB2     		uxtb	r3, r3
 5978 0210 0E2B     		cmp	r3, #14
 5979 0212 1BD9     		bls	.L515
1911:TP2824/TP2802.c ****             if(NTPAL == cvstd && flag_CVBS)
 5980              		.loc 1 1911 0
 5981 0214 3A46     		mov	r2, r7
 5982 0216 06E0     		b	.L462
 5983              	.LVL780:
 5984              	.L506:
1918:TP2824/TP2802.c ****             }
 5985              		.loc 1 1918 0
 5986 0218 0822     		movs	r2, #8
 5987              	.LVL781:
 5988 021a 04E0     		b	.L462
 5989              	.LVL782:
 5990              	.L507:
1925:TP2824/TP2802.c ****             }
 5991              		.loc 1 1925 0
 5992 021c 0C22     		movs	r2, #12
 5993              	.LVL783:
 5994 021e 02E0     		b	.L462
 5995              	.LVL784:
 5996              	.L508:
1923:TP2824/TP2802.c ****                 else
 5997              		.loc 1 1923 0
 5998 0220 2422     		movs	r2, #36
 5999              	.LVL785:
 6000 0222 00E0     		b	.L462
 6001              	.LVL786:
 6002              	.L509:
1929:TP2824/TP2802.c ****             }
 6003              		.loc 1 1929 0
ARM GAS  /tmp/ccSTfybG.s 			page 193


 6004 0224 0D22     		movs	r2, #13
 6005              	.LVL787:
 6006              	.L462:
1978:TP2824/TP2802.c **** 		            {
 6007              		.loc 1 1978 0
 6008 0226 234B     		ldr	r3, .L564
 6009 0228 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6010 022a 9342     		cmp	r3, r2
 6011 022c 3FF43FAF 		beq	.L460
1980:TP2824/TP2802.c **** 		                printf("Set_VidResmode[%d] =%d\r\n",(int)i, (int)fmt);
 6012              		.loc 1 1980 0
 6013 0230 204B     		ldr	r3, .L564
 6014 0232 5A55     		strb	r2, [r3, r5]
1981:TP2824/TP2802.c **** 		                Set_VidRes(i);
 6015              		.loc 1 1981 0
 6016 0234 2946     		mov	r1, r5
 6017 0236 2D48     		ldr	r0, .L564+56
 6018 0238 FFF7FEFF 		bl	printf
 6019              	.LVL788:
1982:TP2824/TP2802.c **** 		            }
 6020              		.loc 1 1982 0
 6021 023c 2046     		mov	r0, r4
 6022 023e FFF7FEFF 		bl	Set_VidRes
 6023              	.LVL789:
 6024 0242 34E7     		b	.L460
 6025              	.LVL790:
 6026              	.L513:
1957:TP2824/TP2802.c ****                     }
 6027              		.loc 1 1957 0
 6028 0244 2022     		movs	r2, #32
 6029 0246 EEE7     		b	.L462
 6030              	.L514:
1961:TP2824/TP2802.c ****                     }
 6031              		.loc 1 1961 0
 6032 0248 2222     		movs	r2, #34
 6033 024a ECE7     		b	.L462
 6034              	.L515:
1965:TP2824/TP2802.c ****                     }
 6035              		.loc 1 1965 0
 6036 024c 2522     		movs	r2, #37
 6037 024e EAE7     		b	.L462
 6038              	.LVL791:
 6039              	.L527:
1989:TP2824/TP2802.c ****             {
 6040              		.loc 1 1989 0
 6041 0250 1B4B     		ldr	r3, .L564+12
 6042 0252 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6043 0254 002B     		cmp	r3, #0
 6044 0256 7AD1     		bne	.L466
1991:TP2824/TP2802.c ****                 CurCH = i;
 6045              		.loc 1 1991 0
 6046 0258 254B     		ldr	r3, .L564+60
 6047 025a 0022     		movs	r2, #0
 6048 025c 5A55     		strb	r2, [r3, r5]
1992:TP2824/TP2802.c ****                 if( (R720P30V2 == mode[i]) || (R720P25V2 == mode[i]) )
 6049              		.loc 1 1992 0
 6050 025e 254B     		ldr	r3, .L564+64
ARM GAS  /tmp/ccSTfybG.s 			page 194


 6051 0260 1C70     		strb	r4, [r3]
1993:TP2824/TP2802.c ****                 {
 6052              		.loc 1 1993 0
 6053 0262 144B     		ldr	r3, .L564
 6054 0264 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6055 0266 0C3B     		subs	r3, r3, #12
 6056 0268 DBB2     		uxtb	r3, r3
 6057 026a 012B     		cmp	r3, #1
 6058 026c 50D9     		bls	.L533
 6059              	.L467:
2004:TP2824/TP2802.c **** 
 6060              		.loc 1 2004 0
 6061 026e A4F10A00 		sub	r0, r4, #10
 6062 0272 214B     		ldr	r3, .L564+68
 6063 0274 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6064 0276 C0B2     		uxtb	r0, r0
 6065 0278 FFF7FEFF 		bl	tp28xx_byte_write
 6066              	.LVL792:
2007:TP2824/TP2802.c ****                 {
 6067              		.loc 1 2007 0
 6068 027c 114B     		ldr	r3, .L564+16
 6069 027e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6070 0280 2F2B     		cmp	r3, #47
 6071 0282 54D0     		beq	.L534
2015:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfa, REG_FA[i]);
 6072              		.loc 1 2015 0
 6073 0284 1D4B     		ldr	r3, .L564+72
 6074 0286 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6075 0288 F720     		movs	r0, #247
 6076 028a FFF7FEFF 		bl	tp28xx_byte_write
 6077              	.LVL793:
2016:TP2824/TP2802.c ****                     //printf("set output ch%02x \r\n", (tWord)CH[i]);
 6078              		.loc 1 2016 0
 6079 028e 1C4B     		ldr	r3, .L564+76
 6080 0290 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6081 0292 FA20     		movs	r0, #250
 6082 0294 FFF7FEFF 		bl	tp28xx_byte_write
 6083              	.LVL794:
 6084              	.L469:
2125:TP2824/TP2802.c ****                 {
 6085              		.loc 1 2125 0
 6086 0298 1A4B     		ldr	r3, .L564+80
 6087 029a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6088 029c 1A4A     		ldr	r2, .L564+84
 6089 029e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 6090 02a0 8B42     		cmp	r3, r1
 6091 02a2 3FF409AF 		beq	.L449
2127:TP2824/TP2802.c ****                     //CreateMDIN340VideoInstance();  //chunyu
 6092              		.loc 1 2127 0
 6093 02a6 174B     		ldr	r3, .L564+80
 6094 02a8 1970     		strb	r1, [r3]
2129:TP2824/TP2802.c **** 
 6095              		.loc 1 2129 0
 6096 02aa 1848     		ldr	r0, .L564+88
 6097 02ac FFF7FEFF 		bl	printf
 6098              	.LVL795:
 6099 02b0 02E7     		b	.L449
ARM GAS  /tmp/ccSTfybG.s 			page 195


 6100              	.L565:
 6101 02b2 00BF     		.align	2
 6102              	.L564:
 6103 02b4 00000000 		.word	mode
 6104 02b8 00000000 		.word	flag_LOCKED
 6105 02bc 00000000 		.word	state
 6106 02c0 00000000 		.word	count
 6107 02c4 00000000 		.word	chip
 6108 02c8 5C000000 		.word	.LC46
 6109 02cc 00000000 		.word	SelectInputMode
 6110 02d0 00000000 		.word	.LC42
 6111 02d4 14000000 		.word	.LC43
 6112 02d8 2C000000 		.word	.LC44
 6113 02dc 40000000 		.word	.LC45
 6114 02e0 00000000 		.word	sywd
 6115 02e4 00000000 		.word	flag_MEGA
 6116 02e8 00000000 		.word	flag_CVBS
 6117 02ec 78000000 		.word	.LC47
 6118 02f0 00000000 		.word	std
 6119 02f4 00000000 		.word	CurCH
 6120 02f8 00000000 		.word	.LANCHOR33
 6121 02fc 00000000 		.word	.LANCHOR34
 6122 0300 00000000 		.word	.LANCHOR35
 6123 0304 00000000 		.word	CurRes
 6124 0308 00000000 		.word	ManVidResRx
 6125 030c 94000000 		.word	.LC48
 6126              	.L533:
1995:TP2824/TP2802.c ****                     {
 6127              		.loc 1 1995 0
 6128 0310 0320     		movs	r0, #3
 6129 0312 FFF7FEFF 		bl	tp28xx_byte_read
 6130              	.LVL796:
 6131 0316 10F0080F 		tst	r0, #8
 6132 031a A8D1     		bne	.L467
1997:TP2824/TP2802.c ****                         Set_VidRes(i);
 6133              		.loc 1 1997 0
 6134 031c BA4A     		ldr	r2, .L566
 6135 031e 535D     		ldrb	r3, [r2, r5]	@ zero_extendqisi2
 6136 0320 23F00803 		bic	r3, r3, #8
 6137 0324 5355     		strb	r3, [r2, r5]
1998:TP2824/TP2802.c ****                         //printf("TVI_Set_VidRes\r\n");
 6138              		.loc 1 1998 0
 6139 0326 2046     		mov	r0, r4
 6140 0328 FFF7FEFF 		bl	Set_VidRes
 6141              	.LVL797:
 6142 032c 9FE7     		b	.L467
 6143              	.L534:
2009:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfa, REG_FA[i]);
 6144              		.loc 1 2009 0
 6145 032e B74B     		ldr	r3, .L566+4
 6146 0330 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6147 0332 F820     		movs	r0, #248
 6148 0334 FFF7FEFF 		bl	tp28xx_byte_write
 6149              	.LVL798:
2010:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfb, REG_FA[i]);
 6150              		.loc 1 2010 0
 6151 0338 B54B     		ldr	r3, .L566+8
ARM GAS  /tmp/ccSTfybG.s 			page 196


 6152 033a 5D5D     		ldrb	r5, [r3, r5]	@ zero_extendqisi2
 6153 033c 2946     		mov	r1, r5
 6154 033e FA20     		movs	r0, #250
 6155 0340 FFF7FEFF 		bl	tp28xx_byte_write
 6156              	.LVL799:
2011:TP2824/TP2802.c ****                 }
 6157              		.loc 1 2011 0
 6158 0344 2946     		mov	r1, r5
 6159 0346 FB20     		movs	r0, #251
 6160 0348 FFF7FEFF 		bl	tp28xx_byte_write
 6161              	.LVL800:
 6162 034c A4E7     		b	.L469
 6163              	.L466:
2133:TP2824/TP2802.c ****             {
 6164              		.loc 1 2133 0
 6165 034e 012B     		cmp	r3, #1
 6166 0350 7ED0     		beq	.L535
2154:TP2824/TP2802.c ****             {
 6167              		.loc 1 2154 0
 6168 0352 022B     		cmp	r3, #2
 6169 0354 00F0B880 		beq	.L536
2177:TP2824/TP2802.c ****             {
 6170              		.loc 1 2177 0
 6171 0358 032B     		cmp	r3, #3
 6172 035a 00F0F380 		beq	.L537
2202:TP2824/TP2802.c ****             {
 6173              		.loc 1 2202 0
 6174 035e 062B     		cmp	r3, #6
 6175 0360 40F24281 		bls	.L538
2211:TP2824/TP2802.c ****             {
 6176              		.loc 1 2211 0
 6177 0364 132B     		cmp	r3, #19
 6178 0366 40F27181 		bls	.L539
2225:TP2824/TP2802.c ****             {
 6179              		.loc 1 2225 0
 6180 036a 142B     		cmp	r3, #20
 6181 036c 00F09281 		beq	.L540
2351:TP2824/TP2802.c ****             {
 6182              		.loc 1 2351 0
 6183 0370 152B     		cmp	r3, #21
 6184 0372 00F02482 		beq	.L541
2369:TP2824/TP2802.c ****             {	
 6185              		.loc 1 2369 0
 6186 0376 162B     		cmp	r3, #22
 6187 0378 7FF49EAE 		bne	.L449
 6188              	.LBB5:
2374:TP2824/TP2802.c **** 				{
 6189              		.loc 1 2374 0
 6190 037c A54B     		ldr	r3, .L566+12
 6191 037e 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6192 0380 9BBB     		cbnz	r3, .L501
2376:TP2824/TP2802.c **** 					{
 6193              		.loc 1 2376 0
 6194 0382 A14B     		ldr	r3, .L566
 6195 0384 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6196 0386 083B     		subs	r3, r3, #8
 6197 0388 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccSTfybG.s 			page 197


 6198 038a 012B     		cmp	r3, #1
 6199 038c 40F23282 		bls	.L542
2382:TP2824/TP2802.c **** 					}
 6200              		.loc 1 2382 0
 6201 0390 A148     		ldr	r0, .L566+16
 6202              	.L502:
 6203              	.LVL801:
2385:TP2824/TP2802.c **** 					
 6204              		.loc 1 2385 0
 6205 0392 FFF7FEFF 		bl	I2CDeviceSet1
 6206              	.LVL802:
2387:TP2824/TP2802.c **** 					{
 6207              		.loc 1 2387 0
 6208 0396 9C4B     		ldr	r3, .L566
 6209 0398 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6210 039a 023B     		subs	r3, r3, #2
 6211 039c DBB2     		uxtb	r3, r3
 6212 039e 012B     		cmp	r3, #1
 6213 03a0 40F22A82 		bls	.L543
 6214              	.L503:
2392:TP2824/TP2802.c **** 					
 6215              		.loc 1 2392 0
 6216 03a4 2146     		mov	r1, r4
 6217 03a6 4020     		movs	r0, #64
 6218 03a8 FFF7FEFF 		bl	tp28xx_byte_write
 6219              	.LVL803:
2394:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB6);
 6220              		.loc 1 2394 0
 6221 03ac 8021     		movs	r1, #128
 6222 03ae BE20     		movs	r0, #190
 6223 03b0 FFF7FEFF 		bl	tp28xx_byte_write
 6224              	.LVL804:
2395:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB5);
 6225              		.loc 1 2395 0
 6226 03b4 B620     		movs	r0, #182
 6227 03b6 FFF7FEFF 		bl	tp28xx_byte_read
 6228              	.LVL805:
2396:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB4);
 6229              		.loc 1 2396 0
 6230 03ba B520     		movs	r0, #181
 6231 03bc FFF7FEFF 		bl	tp28xx_byte_read
 6232              	.LVL806:
2397:TP2824/TP2802.c **** 
 6233              		.loc 1 2397 0
 6234 03c0 B420     		movs	r0, #180
 6235 03c2 FFF7FEFF 		bl	tp28xx_byte_read
 6236              	.LVL807:
2400:TP2824/TP2802.c **** 					delay(1);//5ms
 6237              		.loc 1 2400 0
 6238 03c6 0021     		movs	r1, #0
 6239 03c8 A720     		movs	r0, #167
 6240 03ca FFF7FEFF 		bl	tp28xx_byte_write
 6241              	.LVL808:
2401:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x83);
 6242              		.loc 1 2401 0
 6243 03ce 0120     		movs	r0, #1
 6244 03d0 FFF7FEFF 		bl	delay
ARM GAS  /tmp/ccSTfybG.s 			page 198


 6245              	.LVL809:
2402:TP2824/TP2802.c **** 					
 6246              		.loc 1 2402 0
 6247 03d4 8321     		movs	r1, #131
 6248 03d6 A720     		movs	r0, #167
 6249 03d8 FFF7FEFF 		bl	tp28xx_byte_write
 6250              	.LVL810:
2404:TP2824/TP2802.c **** 					{
 6251              		.loc 1 2404 0
 6252 03dc 8A4B     		ldr	r3, .L566
 6253 03de 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6254 03e0 023B     		subs	r3, r3, #2
 6255 03e2 DBB2     		uxtb	r3, r3
 6256 03e4 012B     		cmp	r3, #1
 6257 03e6 40F20C82 		bls	.L544
 6258              	.L501:
2412:TP2824/TP2802.c **** 				{
 6259              		.loc 1 2412 0
 6260 03ea 8A4B     		ldr	r3, .L566+12
 6261 03ec 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6262 03ee 012B     		cmp	r3, #1
 6263 03f0 00F00E82 		beq	.L545
 6264              	.L504:
2447:TP2824/TP2802.c **** 				{
 6265              		.loc 1 2447 0
 6266 03f4 874B     		ldr	r3, .L566+12
 6267 03f6 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6268 03f8 022B     		cmp	r3, #2
 6269 03fa 7FF45DAE 		bne	.L449
 6270              	.LVL811:
2450:TP2824/TP2802.c **** 				
 6271              		.loc 1 2450 0
 6272 03fe 8748     		ldr	r0, .L566+20
 6273 0400 FFF7FEFF 		bl	I2CDeviceSet1
 6274              	.LVL812:
2452:TP2824/TP2802.c **** 					tp28xx_byte_write(0xbe, 0x80);
 6275              		.loc 1 2452 0
 6276 0404 2146     		mov	r1, r4
 6277 0406 4020     		movs	r0, #64
 6278 0408 FFF7FEFF 		bl	tp28xx_byte_write
 6279              	.LVL813:
2453:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB6);
 6280              		.loc 1 2453 0
 6281 040c 8021     		movs	r1, #128
 6282 040e BE20     		movs	r0, #190
 6283 0410 FFF7FEFF 		bl	tp28xx_byte_write
 6284              	.LVL814:
2454:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB5);
 6285              		.loc 1 2454 0
 6286 0414 B620     		movs	r0, #182
 6287 0416 FFF7FEFF 		bl	tp28xx_byte_read
 6288              	.LVL815:
2455:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB4);
 6289              		.loc 1 2455 0
 6290 041a B520     		movs	r0, #181
 6291 041c FFF7FEFF 		bl	tp28xx_byte_read
 6292              	.LVL816:
ARM GAS  /tmp/ccSTfybG.s 			page 199


2456:TP2824/TP2802.c **** 
 6293              		.loc 1 2456 0
 6294 0420 B420     		movs	r0, #180
 6295 0422 FFF7FEFF 		bl	tp28xx_byte_read
 6296              	.LVL817:
2459:TP2824/TP2802.c **** 					tp28xx_byte_read(0xA2);
 6297              		.loc 1 2459 0
 6298 0426 A420     		movs	r0, #164
 6299 0428 FFF7FEFF 		bl	tp28xx_byte_read
 6300              	.LVL818:
2460:TP2824/TP2802.c **** 					tp28xx_byte_read(0xA3);
 6301              		.loc 1 2460 0
 6302 042c A220     		movs	r0, #162
 6303 042e FFF7FEFF 		bl	tp28xx_byte_read
 6304              	.LVL819:
2461:TP2824/TP2802.c **** 					
 6305              		.loc 1 2461 0
 6306 0432 A320     		movs	r0, #163
 6307 0434 FFF7FEFF 		bl	tp28xx_byte_read
 6308              	.LVL820:
2463:TP2824/TP2802.c **** 					delay(1);//5ms
 6309              		.loc 1 2463 0
 6310 0438 0021     		movs	r1, #0
 6311 043a A720     		movs	r0, #167
 6312 043c FFF7FEFF 		bl	tp28xx_byte_write
 6313              	.LVL821:
2464:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x83);
 6314              		.loc 1 2464 0
 6315 0440 0120     		movs	r0, #1
 6316 0442 FFF7FEFF 		bl	delay
 6317              	.LVL822:
2465:TP2824/TP2802.c **** 
 6318              		.loc 1 2465 0
 6319 0446 8321     		movs	r1, #131
 6320 0448 A720     		movs	r0, #167
 6321 044a FFF7FEFF 		bl	tp28xx_byte_write
 6322              	.LVL823:
 6323 044e 33E6     		b	.L449
 6324              	.LVL824:
 6325              	.L535:
 6326              	.LBE5:
2135:TP2824/TP2802.c ****                 {
 6327              		.loc 1 2135 0
 6328 0450 734B     		ldr	r3, .L566+24
 6329 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6330 0454 232B     		cmp	r3, #35
 6331 0456 7FF62FAE 		bls	.L449
2137:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
 6332              		.loc 1 2137 0
 6333 045a 0120     		movs	r0, #1
 6334 045c FFF7FEFF 		bl	tp28xx_byte_read
 6335              	.LVL825:
 6336 0460 0646     		mov	r6, r0
 6337              	.LVL826:
2138:TP2824/TP2802.c ****                     if(mode[i] == NTSC || mode[i] == PAL)
 6338              		.loc 1 2138 0
 6339 0462 0146     		mov	r1, r0
ARM GAS  /tmp/ccSTfybG.s 			page 200


 6340 0464 6F48     		ldr	r0, .L566+28
 6341              	.LVL827:
 6342 0466 FFF7FEFF 		bl	printf
 6343              	.LVL828:
2139:TP2824/TP2802.c ****                              printf("CVBS  mode:%d\r\n", (tWord)mode[i]);
 6344              		.loc 1 2139 0
 6345 046a 674B     		ldr	r3, .L566
 6346 046c 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6347 046e A1F10803 		sub	r3, r1, #8
 6348 0472 DBB2     		uxtb	r3, r3
 6349 0474 012B     		cmp	r3, #1
 6350 0476 23D9     		bls	.L546
2142:TP2824/TP2802.c ****             			   (mode[i] != R720P30 && mode[i] != R720P25 && mode[i] != R720P30V2 && mode[i] != R
 6351              		.loc 1 2142 0
 6352 0478 06F06406 		and	r6, r6, #100
 6353 047c 602E     		cmp	r6, #96
 6354 047e 7FF41BAE 		bne	.L449
2143:TP2824/TP2802.c ****                     {
 6355              		.loc 1 2143 0 discriminator 1
 6356 0482 0B1F     		subs	r3, r1, #4
 6357 0484 DBB2     		uxtb	r3, r3
2142:TP2824/TP2802.c ****             			   (mode[i] != R720P30 && mode[i] != R720P25 && mode[i] != R720P30V2 && mode[i] != R
 6358              		.loc 1 2142 0 discriminator 1
 6359 0486 012B     		cmp	r3, #1
 6360 0488 7FF616AE 		bls	.L449
2143:TP2824/TP2802.c ****                     {
 6361              		.loc 1 2143 0
 6362 048c 0C29     		cmp	r1, #12
 6363 048e 3FF413AE 		beq	.L449
2143:TP2824/TP2802.c ****                     {
 6364              		.loc 1 2143 0 is_stmt 0 discriminator 1
 6365 0492 0D29     		cmp	r1, #13
 6366 0494 3FF410AE 		beq	.L449
2143:TP2824/TP2802.c ****                     {
 6367              		.loc 1 2143 0 discriminator 2
 6368 0498 0029     		cmp	r1, #0
 6369 049a 3FF40DAE 		beq	.L449
2143:TP2824/TP2802.c ****                     {
 6370              		.loc 1 2143 0 discriminator 3
 6371 049e 0129     		cmp	r1, #1
 6372 04a0 3FF40AAE 		beq	.L449
2146:TP2824/TP2802.c ****                         {
 6373              		.loc 1 2146 0 is_stmt 1
 6374 04a4 2046     		mov	r0, r4
 6375 04a6 FFF7FEFF 		bl	Set_HDC
 6376              	.LVL829:
 6377 04aa 0028     		cmp	r0, #0
 6378 04ac 3FF404AE 		beq	.L449
2148:TP2824/TP2802.c ****                             printf("turn to C ch%02x\r\n", (tWord)i);
 6379              		.loc 1 2148 0
 6380 04b0 584B     		ldr	r3, .L566+12
 6381 04b2 0222     		movs	r2, #2
 6382 04b4 5A55     		strb	r2, [r3, r5]
2149:TP2824/TP2802.c ****                         }
 6383              		.loc 1 2149 0
 6384 04b6 2946     		mov	r1, r5
 6385 04b8 5B48     		ldr	r0, .L566+32
ARM GAS  /tmp/ccSTfybG.s 			page 201


 6386 04ba FFF7FEFF 		bl	printf
 6387              	.LVL830:
 6388 04be FBE5     		b	.L449
 6389              	.L546:
2140:TP2824/TP2802.c **** //                 if( 0x60 == (0x64 & tmp))
 6390              		.loc 1 2140 0
 6391 04c0 5A48     		ldr	r0, .L566+36
 6392 04c2 FFF7FEFF 		bl	printf
 6393              	.LVL831:
 6394 04c6 F7E5     		b	.L449
 6395              	.L536:
2156:TP2824/TP2802.c ****                 {
 6396              		.loc 1 2156 0
 6397 04c8 554B     		ldr	r3, .L566+24
 6398 04ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6399 04cc 232B     		cmp	r3, #35
 6400 04ce 7FF6F3AD 		bls	.L449
2158:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
 6401              		.loc 1 2158 0
 6402 04d2 0120     		movs	r0, #1
 6403 04d4 FFF7FEFF 		bl	tp28xx_byte_read
 6404              	.LVL832:
 6405 04d8 0646     		mov	r6, r0
 6406              	.LVL833:
2159:TP2824/TP2802.c **** 			if(mode[i] == NTSC || mode[i] == PAL)
 6407              		.loc 1 2159 0
 6408 04da 0146     		mov	r1, r0
 6409 04dc 5148     		ldr	r0, .L566+28
 6410              	.LVL834:
 6411 04de FFF7FEFF 		bl	printf
 6412              	.LVL835:
2160:TP2824/TP2802.c ****                              printf("CVBS  mode:%d\r\n", (tWord)mode[i]);
 6413              		.loc 1 2160 0
 6414 04e2 494B     		ldr	r3, .L566
 6415 04e4 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6416 04e6 A1F10803 		sub	r3, r1, #8
 6417 04ea DBB2     		uxtb	r3, r3
 6418 04ec 012B     		cmp	r3, #1
 6419 04ee 25D9     		bls	.L547
2163:TP2824/TP2802.c **** 		                 (0x00 == (0x04 & tmp) && 
 6420              		.loc 1 2163 0
 6421 04f0 06F01103 		and	r3, r6, #17
 6422 04f4 102B     		cmp	r3, #16
 6423 04f6 03D0     		beq	.L474
2163:TP2824/TP2802.c **** 		                 (0x00 == (0x04 & tmp) && 
 6424              		.loc 1 2163 0 is_stmt 0 discriminator 1
 6425 04f8 464B     		ldr	r3, .L566+12
 6426 04fa 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6427 04fc 022B     		cmp	r3, #2
 6428 04fe 0FD0     		beq	.L475
 6429              	.L474:
2163:TP2824/TP2802.c **** 		                 (0x00 == (0x04 & tmp) && 
 6430              		.loc 1 2163 0 discriminator 3
 6431 0500 16F0040F 		tst	r6, #4
 6432 0504 7FF4D8AD 		bne	.L449
2165:TP2824/TP2802.c ****                     {
 6433              		.loc 1 2165 0 is_stmt 1
ARM GAS  /tmp/ccSTfybG.s 			page 202


 6434 0508 0B1F     		subs	r3, r1, #4
 6435 050a DBB2     		uxtb	r3, r3
2164:TP2824/TP2802.c **** 		                 (mode[i] == R720P30 || mode[i] == R720P25 || mode[i] == R720P30V2 || mode[i] == 
 6436              		.loc 1 2164 0
 6437 050c 012B     		cmp	r3, #1
 6438 050e 07D9     		bls	.L475
2165:TP2824/TP2802.c ****                     {
 6439              		.loc 1 2165 0
 6440 0510 0C29     		cmp	r1, #12
 6441 0512 05D0     		beq	.L475
2165:TP2824/TP2802.c ****                     {
 6442              		.loc 1 2165 0 is_stmt 0 discriminator 1
 6443 0514 0D29     		cmp	r1, #13
 6444 0516 03D0     		beq	.L475
2165:TP2824/TP2802.c ****                     {
 6445              		.loc 1 2165 0 discriminator 2
 6446 0518 11B1     		cbz	r1, .L475
2165:TP2824/TP2802.c ****                     {
 6447              		.loc 1 2165 0 discriminator 3
 6448 051a 0129     		cmp	r1, #1
 6449 051c 7FF4CCAD 		bne	.L449
 6450              	.L475:
2167:TP2824/TP2802.c ****                         {
 6451              		.loc 1 2167 0 is_stmt 1
 6452 0520 2046     		mov	r0, r4
 6453 0522 FFF7FEFF 		bl	Set_HDA
 6454              	.LVL836:
 6455 0526 0028     		cmp	r0, #0
 6456 0528 3FF4C6AD 		beq	.L449
2169:TP2824/TP2802.c ****                             printf("turn to A ch%02x\r\n", (tWord)i);
 6457              		.loc 1 2169 0
 6458 052c 394B     		ldr	r3, .L566+12
 6459 052e 0122     		movs	r2, #1
 6460 0530 5A55     		strb	r2, [r3, r5]
2170:TP2824/TP2802.c ****                         }
 6461              		.loc 1 2170 0
 6462 0532 2946     		mov	r1, r5
 6463 0534 3E48     		ldr	r0, .L566+40
 6464 0536 FFF7FEFF 		bl	printf
 6465              	.LVL837:
 6466 053a BDE5     		b	.L449
 6467              	.L547:
2161:TP2824/TP2802.c **** //                 if( 0x10 != (0x11 & tmp) && HDC == std[i])
 6468              		.loc 1 2161 0
 6469 053c 3B48     		ldr	r0, .L566+36
 6470 053e FFF7FEFF 		bl	printf
 6471              	.LVL838:
 6472 0542 B9E5     		b	.L449
 6473              	.L537:
2179:TP2824/TP2802.c ****                 {
 6474              		.loc 1 2179 0
 6475 0544 364B     		ldr	r3, .L566+24
 6476 0546 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6477 0548 232B     		cmp	r3, #35
 6478 054a 7FF6B5AD 		bls	.L449
2181:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
 6479              		.loc 1 2181 0
ARM GAS  /tmp/ccSTfybG.s 			page 203


 6480 054e 0120     		movs	r0, #1
 6481 0550 FFF7FEFF 		bl	tp28xx_byte_read
 6482              	.LVL839:
 6483 0554 0646     		mov	r6, r0
 6484              	.LVL840:
2182:TP2824/TP2802.c **** 
 6485              		.loc 1 2182 0
 6486 0556 0146     		mov	r1, r0
 6487 0558 3248     		ldr	r0, .L566+28
 6488              	.LVL841:
 6489 055a FFF7FEFF 		bl	printf
 6490              	.LVL842:
2184:TP2824/TP2802.c ****                         printf("AHD 1080P30/P25  mode:%d\r\n", (tWord)mode[i]);
 6491              		.loc 1 2184 0
 6492 055e 2A4B     		ldr	r3, .L566
 6493 0560 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6494 0562 8B1E     		subs	r3, r1, #2
 6495 0564 DBB2     		uxtb	r3, r3
 6496 0566 012B     		cmp	r3, #1
 6497 0568 24D9     		bls	.L548
 6498              	.L477:
2186:TP2824/TP2802.c ****                         printf("TVI 1080P30/P25   mode:%d\r\n", (tWord)mode[i]);
 6499              		.loc 1 2186 0
 6500 056a 012B     		cmp	r3, #1
 6501 056c 29D9     		bls	.L549
 6502              	.L478:
2188:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6503              		.loc 1 2188 0
 6504 056e 0B1F     		subs	r3, r1, #4
 6505 0570 DBB2     		uxtb	r3, r3
 6506 0572 012B     		cmp	r3, #1
 6507 0574 06D9     		bls	.L479
2188:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6508              		.loc 1 2188 0 is_stmt 0 discriminator 2
 6509 0576 0C29     		cmp	r1, #12
 6510 0578 04D0     		beq	.L479
2188:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6511              		.loc 1 2188 0 discriminator 4
 6512 057a 0D29     		cmp	r1, #13
 6513 057c 02D0     		beq	.L479
2188:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6514              		.loc 1 2188 0 discriminator 6
 6515 057e 09B1     		cbz	r1, .L479
2188:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6516              		.loc 1 2188 0 discriminator 8
 6517 0580 0129     		cmp	r1, #1
 6518 0582 06D1     		bne	.L480
 6519              	.L479:
2188:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6520              		.loc 1 2188 0 discriminator 9
 6521 0584 16F0040F 		tst	r6, #4
 6522 0588 03D1     		bne	.L480
2189:TP2824/TP2802.c ****                         printf("AHD 720P30/P25/P60/P50   mode:%d\r\n", (tWord)mode[i]);
 6523              		.loc 1 2189 0 is_stmt 1
 6524 058a 224B     		ldr	r3, .L566+12
 6525 058c 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6526 058e 012B     		cmp	r3, #1
ARM GAS  /tmp/ccSTfybG.s 			page 204


 6527 0590 22D0     		beq	.L550
 6528              	.L480:
2191:TP2824/TP2802.c ****                              printf("CVBS    mode:%d\r\n", (tWord)mode[i]);
 6529              		.loc 1 2191 0
 6530 0592 A1F10803 		sub	r3, r1, #8
 6531 0596 DBB2     		uxtb	r3, r3
 6532 0598 012B     		cmp	r3, #1
 6533 059a 21D9     		bls	.L551
2194:TP2824/TP2802.c ****                     {
 6534              		.loc 1 2194 0
 6535 059c 16F0010F 		tst	r6, #1
 6536 05a0 3FF48AAD 		beq	.L449
2197:TP2824/TP2802.c ****                         printf("back to T ch%02x\r\n", (tWord)i); //chunyu
 6537              		.loc 1 2197 0
 6538 05a4 2046     		mov	r0, r4
 6539 05a6 FFF7FEFF 		bl	Set_VidRes
 6540              	.LVL843:
2198:TP2824/TP2802.c ****                     }
 6541              		.loc 1 2198 0
 6542 05aa 2946     		mov	r1, r5
 6543 05ac 2148     		ldr	r0, .L566+44
 6544 05ae FFF7FEFF 		bl	printf
 6545              	.LVL844:
 6546 05b2 81E5     		b	.L449
 6547              	.L548:
2184:TP2824/TP2802.c ****                         printf("AHD 1080P30/P25  mode:%d\r\n", (tWord)mode[i]);
 6548              		.loc 1 2184 0 discriminator 1
 6549 05b4 16F0040F 		tst	r6, #4
 6550 05b8 D7D1     		bne	.L477
2185:TP2824/TP2802.c **** 		      else if((mode[i] == R1080P30 || mode[i] == R1080P25) && 0x04 == (0x04 & tmp) && std[i] == T
 6551              		.loc 1 2185 0
 6552 05ba 1F48     		ldr	r0, .L566+48
 6553 05bc FFF7FEFF 		bl	printf
 6554              	.LVL845:
 6555 05c0 7AE5     		b	.L449
 6556              	.L549:
2186:TP2824/TP2802.c ****                         printf("TVI 1080P30/P25   mode:%d\r\n", (tWord)mode[i]);
 6557              		.loc 1 2186 0 discriminator 1
 6558 05c2 16F0040F 		tst	r6, #4
 6559 05c6 D2D0     		beq	.L478
2186:TP2824/TP2802.c ****                         printf("TVI 1080P30/P25   mode:%d\r\n", (tWord)mode[i]);
 6560              		.loc 1 2186 0 is_stmt 0 discriminator 2
 6561 05c8 124B     		ldr	r3, .L566+12
 6562 05ca 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6563 05cc 002B     		cmp	r3, #0
 6564 05ce CED1     		bne	.L478
2187:TP2824/TP2802.c **** 		      else if((mode[i] == R720P30 || mode[i] == R720P25 || mode[i] == R720P30V2 || mode[i] == R72
 6565              		.loc 1 2187 0 is_stmt 1
 6566 05d0 1A48     		ldr	r0, .L566+52
 6567 05d2 FFF7FEFF 		bl	printf
 6568              	.LVL846:
 6569 05d6 6FE5     		b	.L449
 6570              	.L550:
2190:TP2824/TP2802.c **** 		      else if(mode[i] == NTSC || mode[i] == PAL)
 6571              		.loc 1 2190 0
 6572 05d8 1948     		ldr	r0, .L566+56
 6573 05da FFF7FEFF 		bl	printf
ARM GAS  /tmp/ccSTfybG.s 			page 205


 6574              	.LVL847:
 6575 05de 6BE5     		b	.L449
 6576              	.L551:
2192:TP2824/TP2802.c **** //		      if( 0x00 != (0x01 & tmp))
 6577              		.loc 1 2192 0
 6578 05e0 1848     		ldr	r0, .L566+60
 6579 05e2 FFF7FEFF 		bl	printf
 6580              	.LVL848:
 6581 05e6 67E5     		b	.L449
 6582              	.L538:
2204:TP2824/TP2802.c ****                 egain[i][2] = egain[i][1];
 6583              		.loc 1 2204 0
 6584 05e8 174E     		ldr	r6, .L566+64
 6585 05ea 06EB8503 		add	r3, r6, r5, lsl #2
 6586 05ee 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 6587 05f0 DA70     		strb	r2, [r3, #3]
2205:TP2824/TP2802.c ****                 egain[i][1] = egain[i][0];
 6588              		.loc 1 2205 0
 6589 05f2 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 6590 05f4 9A70     		strb	r2, [r3, #2]
2206:TP2824/TP2802.c **** 
 6591              		.loc 1 2206 0
 6592 05f6 16F82520 		ldrb	r2, [r6, r5, lsl #2]	@ zero_extendqisi2
 6593 05fa 5A70     		strb	r2, [r3, #1]
2208:TP2824/TP2802.c ****                 egain[i][0] = gain;
 6594              		.loc 1 2208 0
 6595 05fc FFF7FEFF 		bl	ReadGain
 6596              	.LVL849:
2209:TP2824/TP2802.c ****             }
 6597              		.loc 1 2209 0
 6598 0600 06F82500 		strb	r0, [r6, r5, lsl #2]
 6599 0604 58E5     		b	.L449
 6600              	.L567:
 6601 0606 00BF     		.align	2
 6602              	.L566:
 6603 0608 00000000 		.word	mode
 6604 060c 00000000 		.word	.LANCHOR34
 6605 0610 00000000 		.word	.LANCHOR35
 6606 0614 00000000 		.word	std
 6607 0618 00000000 		.word	.LANCHOR32
 6608 061c 00000000 		.word	.LANCHOR37
 6609 0620 00000000 		.word	chip
 6610 0624 AC000000 		.word	.LC49
 6611 0628 CC000000 		.word	.LC51
 6612 062c BC000000 		.word	.LC50
 6613 0630 E0000000 		.word	.LC52
 6614 0634 64010000 		.word	.LC57
 6615 0638 F4000000 		.word	.LC53
 6616 063c 10010000 		.word	.LC54
 6617 0640 2C010000 		.word	.LC55
 6618 0644 50010000 		.word	.LC56
 6619 0648 00000000 		.word	egain
 6620              	.LVL850:
 6621              	.L539:
2213:TP2824/TP2802.c ****                 egain[i][2] = egain[i][1];
 6622              		.loc 1 2213 0
 6623 064c 864F     		ldr	r7, .L568
ARM GAS  /tmp/ccSTfybG.s 			page 206


 6624 064e 07EB8506 		add	r6, r7, r5, lsl #2
 6625 0652 B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 6626 0654 F370     		strb	r3, [r6, #3]
2214:TP2824/TP2802.c ****                 egain[i][1] = egain[i][0];
 6627              		.loc 1 2214 0
 6628 0656 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 6629 0658 B370     		strb	r3, [r6, #2]
2215:TP2824/TP2802.c **** 
 6630              		.loc 1 2215 0
 6631 065a 17F82530 		ldrb	r3, [r7, r5, lsl #2]	@ zero_extendqisi2
 6632 065e 7370     		strb	r3, [r6, #1]
2217:TP2824/TP2802.c ****                 egain[i][0] = gain;
 6633              		.loc 1 2217 0
 6634 0660 FFF7FEFF 		bl	ReadGain
 6635              	.LVL851:
2218:TP2824/TP2802.c **** 
 6636              		.loc 1 2218 0
 6637 0664 07F82500 		strb	r0, [r7, r5, lsl #2]
2220:TP2824/TP2802.c ****                 {
 6638              		.loc 1 2220 0
 6639 0668 F378     		ldrb	r3, [r6, #3]	@ zero_extendqisi2
 6640 066a 1B1A     		subs	r3, r3, r0
 6641 066c 0133     		adds	r3, r3, #1
 6642 066e 022B     		cmp	r3, #2
 6643 0670 3FF622AD 		bhi	.L449
2220:TP2824/TP2802.c ****                 {
 6644              		.loc 1 2220 0 is_stmt 0 discriminator 1
 6645 0674 B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 6646 0676 1B1A     		subs	r3, r3, r0
 6647 0678 0133     		adds	r3, r3, #1
 6648 067a 022B     		cmp	r3, #2
 6649 067c 3FF61CAD 		bhi	.L449
2220:TP2824/TP2802.c ****                 {
 6650              		.loc 1 2220 0 discriminator 2
 6651 0680 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 6652 0682 1B1A     		subs	r3, r3, r0
 6653 0684 0133     		adds	r3, r3, #1
 6654 0686 022B     		cmp	r3, #2
 6655 0688 3FF616AD 		bhi	.L449
2222:TP2824/TP2802.c ****                 }
 6656              		.loc 1 2222 0 is_stmt 1
 6657 068c 774B     		ldr	r3, .L568+4
 6658 068e 1322     		movs	r2, #19
 6659 0690 5A55     		strb	r2, [r3, r5]
 6660 0692 11E5     		b	.L449
 6661              	.LVL852:
 6662              	.L540:
2227:TP2824/TP2802.c ****                 printf("Egain=0x%02x ch%02x,std=%d,mode=0x%02X\r\n", (tWord)gain, (tWord)i, (tWord)
 6663              		.loc 1 2227 0
 6664 0694 FFF7FEFF 		bl	ReadGain
 6665              	.LVL853:
 6666 0698 0646     		mov	r6, r0
 6667              	.LVL854:
2228:TP2824/TP2802.c **** 
 6668              		.loc 1 2228 0
 6669 069a 754B     		ldr	r3, .L568+8
 6670 069c 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
ARM GAS  /tmp/ccSTfybG.s 			page 207


 6671 069e 754F     		ldr	r7, .L568+12
 6672 06a0 7A5D     		ldrb	r2, [r7, r5]	@ zero_extendqisi2
 6673 06a2 0092     		str	r2, [sp]
 6674 06a4 2A46     		mov	r2, r5
 6675 06a6 0146     		mov	r1, r0
 6676 06a8 7348     		ldr	r0, .L568+16
 6677              	.LVL855:
 6678 06aa FFF7FEFF 		bl	printf
 6679              	.LVL856:
2230:TP2824/TP2802.c ****                 {
 6680              		.loc 1 2230 0
 6681 06ae 7B5D     		ldrb	r3, [r7, r5]	@ zero_extendqisi2
 6682 06b0 9A1E     		subs	r2, r3, #2
 6683 06b2 D2B2     		uxtb	r2, r2
 6684 06b4 012A     		cmp	r2, #1
 6685 06b6 12D9     		bls	.L552
2234:TP2824/TP2802.c ****                 {
 6686              		.loc 1 2234 0
 6687 06b8 012B     		cmp	r3, #1
 6688 06ba 3CD9     		bls	.L553
2238:TP2824/TP2802.c ****                 {
 6689              		.loc 1 2238 0
 6690 06bc 1A1F     		subs	r2, r3, #4
 6691 06be D2B2     		uxtb	r2, r2
 6692 06c0 012A     		cmp	r2, #1
 6693 06c2 3CD9     		bls	.L554
2242:TP2824/TP2802.c ****                 {
 6694              		.loc 1 2242 0
 6695 06c4 A3F10C02 		sub	r2, r3, #12
 6696 06c8 D2B2     		uxtb	r2, r2
 6697 06ca 012A     		cmp	r2, #1
 6698 06cc 3BD9     		bls	.L555
2246:TP2824/TP2802.c ****                 {
 6699              		.loc 1 2246 0
 6700 06ce 082B     		cmp	r3, #8
 6701 06d0 3DD0     		beq	.L556
2250:TP2824/TP2802.c ****                 {
 6702              		.loc 1 2250 0
 6703 06d2 092B     		cmp	r3, #9
 6704 06d4 3FD1     		bne	.L491
2252:TP2824/TP2802.c ****                 }
 6705              		.loc 1 2252 0
 6706 06d6 694B     		ldr	r3, .L568+20
 6707 06d8 0122     		movs	r2, #1
 6708 06da 5A55     		strb	r2, [r3, r5]
 6709 06dc 02E0     		b	.L486
 6710              	.L552:
2232:TP2824/TP2802.c ****                 }
 6711              		.loc 1 2232 0
 6712 06de 674B     		ldr	r3, .L568+20
 6713 06e0 0622     		movs	r2, #6
 6714 06e2 5A55     		strb	r2, [r3, r5]
 6715              	.L486:
2259:TP2824/TP2802.c **** 				   if(SelectInputMode==1)
 6716              		.loc 1 2259 0
 6717 06e4 654B     		ldr	r3, .L568+20
 6718 06e6 5A5D     		ldrb	r2, [r3, r5]	@ zero_extendqisi2
ARM GAS  /tmp/ccSTfybG.s 			page 208


 6719 06e8 654B     		ldr	r3, .L568+24
 6720 06ea 1A70     		strb	r2, [r3]
2260:TP2824/TP2802.c **** 					   {
 6721              		.loc 1 2260 0
 6722 06ec 654B     		ldr	r3, .L568+28
 6723 06ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6724 06f0 012B     		cmp	r3, #1
 6725 06f2 34D0     		beq	.L557
 6726              	.L492:
2266:TP2824/TP2802.c ****                 {
 6727              		.loc 1 2266 0
 6728 06f4 614B     		ldr	r3, .L568+20
 6729 06f6 5A5D     		ldrb	r2, [r3, r5]	@ zero_extendqisi2
 6730 06f8 634B     		ldr	r3, .L568+32
 6731 06fa 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6732 06fc 9A42     		cmp	r2, r3
 6733 06fe 05D0     		beq	.L493
2283:TP2824/TP2802.c **** 
 6734              		.loc 1 2283 0
 6735 0700 624B     		ldr	r3, .L568+36
 6736 0702 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6737 0704 2946     		mov	r1, r5
 6738 0706 6248     		ldr	r0, .L568+40
 6739 0708 FFF7FEFF 		bl	printf
 6740              	.LVL857:
 6741              	.L493:
2321:TP2824/TP2802.c ****                 {
 6742              		.loc 1 2321 0
 6743 070c 584B     		ldr	r3, .L568+8
 6744 070e 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6745 0710 5BBB     		cbnz	r3, .L558
2335:TP2824/TP2802.c ****                     {
 6746              		.loc 1 2335 0
 6747 0712 604B     		ldr	r3, .L568+44
 6748 0714 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6749 0716 243B     		subs	r3, r3, #36
 6750 0718 DBB2     		uxtb	r3, r3
 6751 071a 012B     		cmp	r3, #1
 6752 071c 38D9     		bls	.L559
 6753              	.L496:
2342:TP2824/TP2802.c **** 			  	printf("CVBS NTSC   mode\r\n");
 6754              		.loc 1 2342 0
 6755 071e 554B     		ldr	r3, .L568+12
 6756 0720 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6757 0722 082B     		cmp	r3, #8
 6758 0724 43D0     		beq	.L560
2344:TP2824/TP2802.c **** 			  	printf("CVBS PAL   mode\r\n");
 6759              		.loc 1 2344 0
 6760 0726 092B     		cmp	r3, #9
 6761 0728 45D0     		beq	.L561
2347:TP2824/TP2802.c ****                     //gRxLoopFlg = 0 ;
 6762              		.loc 1 2347 0
 6763 072a 40F62B11 		movw	r1, #2347
 6764 072e 5A48     		ldr	r0, .L568+48
 6765 0730 FFF7FEFF 		bl	printf
 6766              	.LVL858:
 6767 0734 C0E4     		b	.L449
ARM GAS  /tmp/ccSTfybG.s 			page 209


 6768              	.L553:
2236:TP2824/TP2802.c ****                 }
 6769              		.loc 1 2236 0
 6770 0736 514B     		ldr	r3, .L568+20
 6771 0738 0522     		movs	r2, #5
 6772 073a 5A55     		strb	r2, [r3, r5]
 6773 073c D2E7     		b	.L486
 6774              	.L554:
2240:TP2824/TP2802.c ****                 }
 6775              		.loc 1 2240 0
 6776 073e 4F4B     		ldr	r3, .L568+20
 6777 0740 0522     		movs	r2, #5
 6778 0742 5A55     		strb	r2, [r3, r5]
 6779 0744 CEE7     		b	.L486
 6780              	.L555:
2244:TP2824/TP2802.c ****                 }
 6781              		.loc 1 2244 0
 6782 0746 4D4B     		ldr	r3, .L568+20
 6783 0748 0522     		movs	r2, #5
 6784 074a 5A55     		strb	r2, [r3, r5]
 6785 074c CAE7     		b	.L486
 6786              	.L556:
2248:TP2824/TP2802.c ****                 }
 6787              		.loc 1 2248 0
 6788 074e 4B4B     		ldr	r3, .L568+20
 6789 0750 0022     		movs	r2, #0
 6790 0752 5A55     		strb	r2, [r3, r5]
 6791 0754 C6E7     		b	.L486
 6792              	.L491:
2256:TP2824/TP2802.c ****                 }
 6793              		.loc 1 2256 0
 6794 0756 494B     		ldr	r3, .L568+20
 6795 0758 1422     		movs	r2, #20
 6796 075a 5A55     		strb	r2, [r3, r5]
 6797 075c C2E7     		b	.L486
 6798              	.L557:
2262:TP2824/TP2802.c **** 				   //MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);
 6799              		.loc 1 2262 0
 6800 075e 4021     		movs	r1, #64
 6801 0760 4FF47A70 		mov	r0, #1000
 6802 0764 FFF7FEFF 		bl	MCUTimerActiveTimerEvent
 6803              	.LVL859:
 6804 0768 C4E7     		b	.L492
 6805              	.L558:
2323:TP2824/TP2802.c ****                     if (std[i]== HDA )
 6806              		.loc 1 2323 0
 6807 076a B108     		lsrs	r1, r6, #2
 6808 076c 61F07F01 		orn	r1, r1, #127
 6809 0770 C9B2     		uxtb	r1, r1
 6810 0772 0720     		movs	r0, #7
 6811 0774 FFF7FEFF 		bl	tp28xx_byte_write
 6812              	.LVL860:
2324:TP2824/TP2802.c ****                     {
 6813              		.loc 1 2324 0
 6814 0778 3D4B     		ldr	r3, .L568+8
 6815 077a 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6816 077c 012B     		cmp	r3, #1
ARM GAS  /tmp/ccSTfybG.s 			page 210


 6817 077e 03D0     		beq	.L562
2330:TP2824/TP2802.c ****                     }
 6818              		.loc 1 2330 0
 6819 0780 4648     		ldr	r0, .L568+52
 6820 0782 FFF7FEFF 		bl	puts
 6821              	.LVL861:
 6822 0786 97E4     		b	.L449
 6823              	.L562:
2326:TP2824/TP2802.c ****                     }
 6824              		.loc 1 2326 0
 6825 0788 4548     		ldr	r0, .L568+56
 6826 078a FFF7FEFF 		bl	puts
 6827              	.LVL862:
 6828 078e 93E4     		b	.L449
 6829              	.L559:
2337:TP2824/TP2802.c ****                         {
 6830              		.loc 1 2337 0
 6831 0790 384B     		ldr	r3, .L568+12
 6832 0792 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6833 0794 13F0200F 		tst	r3, #32
 6834 0798 C1D0     		beq	.L496
2339:TP2824/TP2802.c ****                         }
 6835              		.loc 1 2339 0
 6836 079a 0321     		movs	r1, #3
 6837 079c B6FBF1F1 		udiv	r1, r6, r1
 6838 07a0 61F07F01 		orn	r1, r1, #127
 6839 07a4 C9B2     		uxtb	r1, r1
 6840 07a6 0720     		movs	r0, #7
 6841 07a8 FFF7FEFF 		bl	tp28xx_byte_write
 6842              	.LVL863:
 6843 07ac B7E7     		b	.L496
 6844              	.L560:
2343:TP2824/TP2802.c **** 		      else if(mode[i] == PAL) //20200408 cvbs night no burst
 6845              		.loc 1 2343 0
 6846 07ae 3D48     		ldr	r0, .L568+60
 6847 07b0 FFF7FEFF 		bl	puts
 6848              	.LVL864:
 6849 07b4 80E4     		b	.L449
 6850              	.L561:
2345:TP2824/TP2802.c **** 		      else
 6851              		.loc 1 2345 0
 6852 07b6 3C48     		ldr	r0, .L568+64
 6853 07b8 FFF7FEFF 		bl	puts
 6854              	.LVL865:
 6855 07bc 7CE4     		b	.L449
 6856              	.L541:
2353:TP2824/TP2802.c ****                 {
 6857              		.loc 1 2353 0
 6858 07be 2C4B     		ldr	r3, .L568+8
 6859 07c0 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6860 07c2 83B9     		cbnz	r3, .L563
2360:TP2824/TP2802.c ****                     {
 6861              		.loc 1 2360 0
 6862 07c4 334B     		ldr	r3, .L568+44
 6863 07c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6864 07c8 243B     		subs	r3, r3, #36
 6865 07ca DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccSTfybG.s 			page 211


 6866 07cc 012B     		cmp	r3, #1
 6867 07ce 3FF673AC 		bhi	.L449
2362:TP2824/TP2802.c ****                         {
 6868              		.loc 1 2362 0
 6869 07d2 284B     		ldr	r3, .L568+12
 6870 07d4 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6871 07d6 13F0200F 		tst	r3, #32
 6872 07da 3FF46DAC 		beq	.L449
2364:TP2824/TP2802.c ****                         }
 6873              		.loc 1 2364 0
 6874 07de 1620     		movs	r0, #22
 6875 07e0 FFF7FEFF 		bl	SetCGain
 6876              	.LVL866:
 6877 07e4 68E4     		b	.L449
 6878              	.L563:
2355:TP2824/TP2802.c ****                     SetCGain(0x0c);
 6879              		.loc 1 2355 0
 6880 07e6 2046     		mov	r0, r4
 6881 07e8 FFF7FEFF 		bl	ManualAGC
 6882              	.LVL867:
2356:TP2824/TP2802.c ****                 }
 6883              		.loc 1 2356 0
 6884 07ec 0C20     		movs	r0, #12
 6885 07ee FFF7FEFF 		bl	SetCGain
 6886              	.LVL868:
 6887 07f2 61E4     		b	.L449
 6888              	.L542:
 6889              	.LBB6:
2378:TP2824/TP2802.c **** 					}
 6890              		.loc 1 2378 0
 6891 07f4 2D48     		ldr	r0, .L568+68
 6892 07f6 CCE5     		b	.L502
 6893              	.L543:
2389:TP2824/TP2802.c **** 					}
 6894              		.loc 1 2389 0
 6895 07f8 1921     		movs	r1, #25
 6896 07fa C620     		movs	r0, #198
 6897 07fc FFF7FEFF 		bl	tp28xx_byte_write
 6898              	.LVL869:
 6899 0800 D0E5     		b	.L503
 6900              	.L544:
2406:TP2824/TP2802.c **** 						printf("EQdet %d\r\n",  PtzTxChNum);
 6901              		.loc 1 2406 0
 6902 0802 2B4B     		ldr	r3, .L568+72
 6903 0804 1C70     		strb	r4, [r3]
2407:TP2824/TP2802.c **** 					}
 6904              		.loc 1 2407 0
 6905 0806 2946     		mov	r1, r5
 6906 0808 2A48     		ldr	r0, .L568+76
 6907 080a FFF7FEFF 		bl	printf
 6908              	.LVL870:
 6909 080e ECE5     		b	.L501
 6910              	.L545:
2416:TP2824/TP2802.c **** 						//#else
 6911              		.loc 1 2416 0
 6912 0810 FFF7FEFF 		bl	Init_COC_PTZOUT1
 6913              	.LVL871:
ARM GAS  /tmp/ccSTfybG.s 			page 212


2419:TP2824/TP2802.c **** 					
 6914              		.loc 1 2419 0
 6915 0814 2848     		ldr	r0, .L568+80
 6916 0816 FFF7FEFF 		bl	I2CDeviceSet1
 6917              	.LVL872:
2421:TP2824/TP2802.c **** 							tp28xx_byte_write(0x40,0x04);
 6918              		.loc 1 2421 0
 6919 081a 2146     		mov	r1, r4
 6920 081c 4020     		movs	r0, #64
 6921 081e FFF7FEFF 		bl	tp28xx_byte_write
 6922              	.LVL873:
2422:TP2824/TP2802.c **** 						tp28xx_byte_write(0xbe, 0x80);
 6923              		.loc 1 2422 0
 6924 0822 0421     		movs	r1, #4
 6925 0824 4020     		movs	r0, #64
 6926 0826 FFF7FEFF 		bl	tp28xx_byte_write
 6927              	.LVL874:
2423:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB6);
 6928              		.loc 1 2423 0
 6929 082a 8021     		movs	r1, #128
 6930 082c BE20     		movs	r0, #190
 6931 082e FFF7FEFF 		bl	tp28xx_byte_write
 6932              	.LVL875:
2424:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB5);
 6933              		.loc 1 2424 0
 6934 0832 B620     		movs	r0, #182
 6935 0834 FFF7FEFF 		bl	tp28xx_byte_read
 6936              	.LVL876:
2425:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB4);
 6937              		.loc 1 2425 0
 6938 0838 B520     		movs	r0, #181
 6939 083a FFF7FEFF 		bl	tp28xx_byte_read
 6940              	.LVL877:
2426:TP2824/TP2802.c **** 
 6941              		.loc 1 2426 0
 6942 083e B420     		movs	r0, #180
 6943 0840 FFF7FEFF 		bl	tp28xx_byte_read
 6944              	.LVL878:
2429:TP2824/TP2802.c **** 						delay(1);//5ms
 6945              		.loc 1 2429 0
 6946 0844 2421     		movs	r1, #36
 6947 0846 A720     		movs	r0, #167
 6948 0848 FFF7FEFF 		bl	tp28xx_byte_write
 6949              	.LVL879:
2430:TP2824/TP2802.c **** 						tp28xx_byte_write(0xa7, 0xA7);
 6950              		.loc 1 2430 0
 6951 084c 0120     		movs	r0, #1
 6952 084e FFF7FEFF 		bl	delay
 6953              	.LVL880:
2431:TP2824/TP2802.c **** 						#endif
 6954              		.loc 1 2431 0
 6955 0852 A721     		movs	r1, #167
 6956 0854 0846     		mov	r0, r1
 6957 0856 FFF7FEFF 		bl	tp28xx_byte_write
 6958              	.LVL881:
2444:TP2824/TP2802.c **** 				}
 6959              		.loc 1 2444 0
ARM GAS  /tmp/ccSTfybG.s 			page 213


 6960 085a 154B     		ldr	r3, .L568+72
 6961 085c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6962 085e 1748     		ldr	r0, .L568+84
 6963 0860 FFF7FEFF 		bl	printf
 6964              	.LVL882:
 6965 0864 C6E5     		b	.L504
 6966              	.L569:
 6967 0866 00BF     		.align	2
 6968              	.L568:
 6969 0868 00000000 		.word	egain
 6970 086c 00000000 		.word	count
 6971 0870 00000000 		.word	std
 6972 0874 00000000 		.word	mode
 6973 0878 78010000 		.word	.LC58
 6974 087c 00000000 		.word	.LANCHOR23
 6975 0880 00000000 		.word	.LANCHOR22
 6976 0884 00000000 		.word	SelectInputMode
 6977 0888 00000000 		.word	gbVXIS_InputMode
 6978 088c 00000000 		.word	gbVXIS_OuputModeflg
 6979 0890 A4010000 		.word	.LC59
 6980 0894 00000000 		.word	chip
 6981 0898 24020000 		.word	.LC64
 6982 089c F0010000 		.word	.LC61
 6983 08a0 E4010000 		.word	.LC60
 6984 08a4 FC010000 		.word	.LC62
 6985 08a8 10020000 		.word	.LC63
 6986 08ac 00000000 		.word	.LANCHOR31
 6987 08b0 00000000 		.word	.LANCHOR25
 6988 08b4 38020000 		.word	.LC65
 6989 08b8 00000000 		.word	.LANCHOR36
 6990 08bc 44020000 		.word	.LC66
 6991              	.LBE6:
 6992              		.cfi_endproc
 6993              	.LFE85:
 6995              		.section	.text.Set_Mirror_COC,"ax",%progbits
 6996              		.align	1
 6997              		.global	Set_Mirror_COC
 6998              		.syntax unified
 6999              		.thumb
 7000              		.thumb_func
 7001              		.fpu softvfp
 7003              	Set_Mirror_COC:
 7004              	.LFB107:
4294:TP2824/TP2802.c **** 
4295:TP2824/TP2802.c **** void Set_Mirror_COC(void)
4296:TP2824/TP2802.c **** {
 7005              		.loc 1 4296 0
 7006              		.cfi_startproc
 7007              		@ args = 0, pretend = 0, frame = 0
 7008              		@ frame_needed = 0, uses_anonymous_args = 0
 7009 0000 08B5     		push	{r3, lr}
 7010              	.LCFI46:
 7011              		.cfi_def_cfa_offset 8
 7012              		.cfi_offset 3, -8
 7013              		.cfi_offset 14, -4
4297:TP2824/TP2802.c **** #if 0
4298:TP2824/TP2802.c **** VXISI2CWrite(0x40,0x04);
ARM GAS  /tmp/ccSTfybG.s 			page 214


4299:TP2824/TP2802.c **** VXISI2CWrite(0x56,0x02);
4300:TP2824/TP2802.c **** VXISI2CWrite(0x57,0x00);
4301:TP2824/TP2802.c **** VXISI2CWrite(0x58,0x3C);
4302:TP2824/TP2802.c **** VXISI2CWrite(0x59,0x89);
4303:TP2824/TP2802.c **** VXISI2CWrite(0x5a,0x9A);
4304:TP2824/TP2802.c **** 
4305:TP2824/TP2802.c **** VXISI2CWrite(0x5c,0x02);
4306:TP2824/TP2802.c **** VXISI2CWrite(0x5d,0x02);
4307:TP2824/TP2802.c **** VXISI2CWrite(0x5e,0x00);
4308:TP2824/TP2802.c **** VXISI2CWrite(0x5f,0x3E);
4309:TP2824/TP2802.c **** VXISI2CWrite(0x60,0x9F);
4310:TP2824/TP2802.c **** #endif
4311:TP2824/TP2802.c **** VXISI2CWrite(0x6f,0x43);
 7014              		.loc 1 4311 0
 7015 0002 4321     		movs	r1, #67
 7016 0004 6F20     		movs	r0, #111
 7017 0006 FFF7FEFF 		bl	VXISI2CWrite
 7018              	.LVL883:
4312:TP2824/TP2802.c **** delay(5);//50ms
 7019              		.loc 1 4312 0
 7020 000a 0520     		movs	r0, #5
 7021 000c FFF7FEFF 		bl	delay
 7022              	.LVL884:
4313:TP2824/TP2802.c **** VXISI2CWrite(0x6f,0x42);
 7023              		.loc 1 4313 0
 7024 0010 4221     		movs	r1, #66
 7025 0012 6F20     		movs	r0, #111
 7026 0014 FFF7FEFF 		bl	VXISI2CWrite
 7027              	.LVL885:
4314:TP2824/TP2802.c **** }
 7028              		.loc 1 4314 0
 7029 0018 08BD     		pop	{r3, pc}
 7030              		.cfi_endproc
 7031              	.LFE107:
 7033              		.global	TP2802_FORMAT_DataSet
 7034              		.global	TP2824C_CVIHD_PTZ_DataSet
 7035              		.global	TP2824C_CVBS_PTZ_DataSet
 7036              		.global	TP2824C_AHD_FHD_PTZ_DataSet
 7037              		.global	TP2824C_TVI_FHD_PTZ_DataSet
 7038              		.global	TP2802D_DataSet
 7039              		.global	TP2822_DataSet
 7040              		.global	TP2823_MODE_DataSet
 7041              		.global	TP2823_DataSet
 7042              		.global	TP2834_MODE_DataSet
 7043              		.global	TP2834_DataSet
 7044              		.global	TP2833_HDA_DataSet
 7045              		.global	TP2833_MODE_DataSet
 7046              		.global	TP2833_DataSet
 7047              		.global	TP2834_Audio_DataSet
 7048              		.global	TP2853C_HDC_DataSet
 7049              		.global	TP2853C_HDA_DataSet
 7050              		.global	TP2853C_MODE_DataSet
 7051              		.global	TP2853C_DataSet
 7052              		.global	TP2824C_HDC_DataSet
 7053              		.global	TP2826_HDC_DataSet
 7054              		.global	TP2824C_HDA_DataSet
 7055              		.global	TP2826_HDA_DataSet
ARM GAS  /tmp/ccSTfybG.s 			page 215


 7056              		.global	TP2824C_MODE_DataSet
 7057              		.global	TP2826_MODE_DataSet
 7058              		.global	TP2826_DataSet
 7059              		.global	TP2824C_DataSet
 7060              		.global	QuadBoxMode
 7061              		.global	QuadBoxId
 7062              		.global	PtzTxChNum
 7063              		.global	PreCOCSelectModeType
 7064              		.global	COCSelectModeType
 7065              		.global	Flisheye_VLOSS_Count
 7066              		.global	TP_InputMode
 7067              		.comm	Flisheye_COC,1,1
 7068              		.global	Flisheye_CAM
 7069              		.comm	ptztxflag,4,4
 7070              		.comm	TVI_speed,1,1
 7071              		.comm	TVI_Chksum,1,1
 7072              		.comm	presetNum,1,1
 7073              		.comm	TVI_Command,1,1
 7074              		.comm	AHDcmd4,1,1
 7075              		.comm	AHDcmd3,1,1
 7076              		.comm	AHDcmd2,1,1
 7077              		.comm	AHDcmd1,1,1
 7078              		.comm	COCRX4,12,4
 7079              		.comm	COCRX3,12,4
 7080              		.comm	COCRX2,12,4
 7081              		.comm	COCRX1,12,4
 7082              		.comm	tpRxD,26,4
 7083              		.global	REG_FA
 7084              		.global	REG_F7
 7085              		.global	REG_F6
 7086              		.global	SYS_AND
 7087              		.global	SYS_MODE
 7088              		.comm	flag_MEGA,4,4
 7089              		.comm	flag_AUDIO,4,4
 7090              		.comm	flag_CVBS,4,4
 7091              		.comm	sywd,4,4
 7092              		.comm	crc,1,1
 7093              		.comm	CurCH,1,1
 7094              		.comm	CurRes,1,1
 7095              		.comm	PTZ_pelco,2,2
 7096              		.comm	PTZ_buf,16,4
 7097              		.comm	TVII2CAddress,1,1
 7098              		.comm	flag_LOCKED,1,1
 7099              		.comm	chip,1,1
 7100              		.comm	revision,1,1
 7101              		.comm	VideoSave,1,4
 7102              		.comm	egain,4,4
 7103              		.comm	std,1,4
 7104              		.comm	mode,1,4
 7105              		.comm	count,1,4
 7106              		.comm	state,1,4
 7107              		.comm	ManVidResRx,1,1
 7108              		.global	newInRes
 7109              		.section	.bss.Flisheye_CAM,"aw",%nobits
 7110              		.align	2
 7113              	Flisheye_CAM:
 7114 0000 00000000 		.space	4
ARM GAS  /tmp/ccSTfybG.s 			page 216


 7115              		.section	.bss.Flisheye_VLOSS_Count,"aw",%nobits
 7116              		.align	2
 7119              	Flisheye_VLOSS_Count:
 7120 0000 00000000 		.space	16
 7120      00000000 
 7120      00000000 
 7120      00000000 
 7121              		.section	.bss.PtzTxChNum,"aw",%nobits
 7122              		.set	.LANCHOR25,. + 0
 7125              	PtzTxChNum:
 7126 0000 00       		.space	1
 7127              		.section	.bss.QuadBoxId,"aw",%nobits
 7128              		.set	.LANCHOR24,. + 0
 7131              	QuadBoxId:
 7132 0000 00       		.space	1
 7133              		.section	.bss.QuadBoxMode,"aw",%nobits
 7136              	QuadBoxMode:
 7137 0000 00       		.space	1
 7138              		.section	.data.COCSelectModeType,"aw",%progbits
 7139              		.align	2
 7142              	COCSelectModeType:
 7143 0000 05       		.byte	5
 7144 0001 05       		.byte	5
 7145 0002 05       		.byte	5
 7146 0003 05       		.byte	5
 7147              		.section	.data.PreCOCSelectModeType,"aw",%progbits
 7148              		.align	2
 7151              	PreCOCSelectModeType:
 7152 0000 05       		.byte	5
 7153 0001 05       		.byte	5
 7154 0002 05       		.byte	5
 7155 0003 05       		.byte	5
 7156              		.section	.data.TP_InputMode,"aw",%progbits
 7157              		.set	.LANCHOR22,. + 0
 7160              	TP_InputMode:
 7161 0000 07       		.byte	7
 7162              		.section	.data.newInRes,"aw",%progbits
 7163              		.align	2
 7164              		.set	.LANCHOR23,. + 0
 7167              	newInRes:
 7168 0000 07       		.byte	7
 7169 0001 07       		.byte	7
 7170 0002 07       		.byte	7
 7171 0003 07       		.byte	7
 7172              		.section	.rodata.Det_VidRes.str1.4,"aMS",%progbits,1
 7173              		.align	2
 7174              	.LC20:
 7175 0000 0D0A4E2F 		.ascii	"\015\012N/P detected\000"
 7175      50206465 
 7175      74656374 
 7175      656400
 7176 000f 00       		.space	1
 7177              	.LC21:
 7178 0010 0D0A4E6F 		.ascii	"\015\012No res detect...\000"
 7178      20726573 
 7178      20646574 
 7178      6563742E 
ARM GAS  /tmp/ccSTfybG.s 			page 217


 7178      2E2E00
 7179              		.section	.rodata.Det_VideoLoss.str1.4,"aMS",%progbits,1
 7180              		.align	2
 7181              	.LC22:
 7182 0000 4E6F2000 		.ascii	"No \000"
 7183              	.LC23:
 7184 0004 76696465 		.ascii	"video detected\000"
 7184      6F206465 
 7184      74656374 
 7184      656400
 7185              		.section	.rodata.EQ_Detect.str1.4,"aMS",%progbits,1
 7186              		.align	2
 7187              	.LC42:
 7188 0000 31766964 		.ascii	"1video in ch%02x \015\012\000"
 7188      656F2069 
 7188      6E206368 
 7188      25303278 
 7188      200D0A00 
 7189              	.LC43:
 7190 0014 76696465 		.ascii	"video locked ch%02x \015\012\000"
 7190      6F206C6F 
 7190      636B6564 
 7190      20636825 
 7190      30327820 
 7191 002b 00       		.space	1
 7192              	.LC44:
 7193 002c 76696465 		.ascii	"video in ch%02x \015\012\000"
 7193      6F20696E 
 7193      20636825 
 7193      30327820 
 7193      0D0A00
 7194 003f 00       		.space	1
 7195              	.LC45:
 7196 0040 76696465 		.ascii	"video unstable ch%02x \015\012\000"
 7196      6F20756E 
 7196      73746162 
 7196      6C652063 
 7196      68253032 
 7197 0059 000000   		.space	3
 7198              	.LC46:
 7199 005c 76696465 		.ascii	"video unlocked ch%02x \015\012\000"
 7199      6F20756E 
 7199      6C6F636B 
 7199      65642063 
 7199      68253032 
 7200 0075 000000   		.space	3
 7201              	.LC47:
 7202 0078 5365745F 		.ascii	"Set_VidResmode[%d] =%d\015\012\000"
 7202      56696452 
 7202      65736D6F 
 7202      64655B25 
 7202      645D203D 
 7203 0091 000000   		.space	3
 7204              	.LC48:
 7205 0094 4D616E56 		.ascii	"ManVidResRx=0x%02x\015\012\000"
 7205      69645265 
 7205      7352783D 
ARM GAS  /tmp/ccSTfybG.s 			page 218


 7205      30782530 
 7205      32780D0A 
 7206 00a9 000000   		.space	3
 7207              	.LC49:
 7208 00ac 52656730 		.ascii	"Reg01 %02x\015\012\000"
 7208      31202530 
 7208      32780D0A 
 7208      00
 7209 00b9 000000   		.space	3
 7210              	.LC50:
 7211 00bc 43564253 		.ascii	"CVBS  mode:%d\015\012\000"
 7211      20206D6F 
 7211      64653A25 
 7211      640D0A00 
 7212              	.LC51:
 7213 00cc 7475726E 		.ascii	"turn to C ch%02x\015\012\000"
 7213      20746F20 
 7213      43206368 
 7213      25303278 
 7213      0D0A00
 7214 00df 00       		.space	1
 7215              	.LC52:
 7216 00e0 7475726E 		.ascii	"turn to A ch%02x\015\012\000"
 7216      20746F20 
 7216      41206368 
 7216      25303278 
 7216      0D0A00
 7217 00f3 00       		.space	1
 7218              	.LC53:
 7219 00f4 41484420 		.ascii	"AHD 1080P30/P25  mode:%d\015\012\000"
 7219      31303830 
 7219      5033302F 
 7219      50323520 
 7219      206D6F64 
 7220 010f 00       		.space	1
 7221              	.LC54:
 7222 0110 54564920 		.ascii	"TVI 1080P30/P25   mode:%d\015\012\000"
 7222      31303830 
 7222      5033302F 
 7222      50323520 
 7222      20206D6F 
 7223              	.LC55:
 7224 012c 41484420 		.ascii	"AHD 720P30/P25/P60/P50   mode:%d\015\012\000"
 7224      37323050 
 7224      33302F50 
 7224      32352F50 
 7224      36302F50 
 7225 014f 00       		.space	1
 7226              	.LC56:
 7227 0150 43564253 		.ascii	"CVBS    mode:%d\015\012\000"
 7227      20202020 
 7227      6D6F6465 
 7227      3A25640D 
 7227      0A00
 7228 0162 0000     		.space	2
 7229              	.LC57:
 7230 0164 6261636B 		.ascii	"back to T ch%02x\015\012\000"
ARM GAS  /tmp/ccSTfybG.s 			page 219


 7230      20746F20 
 7230      54206368 
 7230      25303278 
 7230      0D0A00
 7231 0177 00       		.space	1
 7232              	.LC58:
 7233 0178 45676169 		.ascii	"Egain=0x%02x ch%02x,std=%d,mode=0x%02X\015\012\000"
 7233      6E3D3078 
 7233      25303278 
 7233      20636825 
 7233      3032782C 
 7234 01a1 000000   		.space	3
 7235              	.LC59:
 7236 01a4 56533432 		.ascii	"VS4210_SetInModeOutMode(),i=%d,newInRes=%d,OuputMod"
 7236      31305F53 
 7236      6574496E 
 7236      4D6F6465 
 7236      4F75744D 
 7237 01d7 65666C67 		.ascii	"eflg=%d\015\012\000"
 7237      3D25640D 
 7237      0A00
 7238 01e1 000000   		.space	3
 7239              	.LC60:
 7240 01e4 41484420 		.ascii	"AHD Mode\015\000"
 7240      4D6F6465 
 7240      0D00
 7241 01ee 0000     		.space	2
 7242              	.LC61:
 7243 01f0 43564920 		.ascii	"CVI Mode\015\000"
 7243      4D6F6465 
 7243      0D00
 7244 01fa 0000     		.space	2
 7245              	.LC62:
 7246 01fc 43564253 		.ascii	"CVBS NTSC   mode\015\000"
 7246      204E5453 
 7246      43202020 
 7246      6D6F6465 
 7246      0D00
 7247 020e 0000     		.space	2
 7248              	.LC63:
 7249 0210 43564253 		.ascii	"CVBS PAL   mode\015\000"
 7249      2050414C 
 7249      2020206D 
 7249      6F64650D 
 7249      00
 7250 0221 000000   		.space	3
 7251              	.LC64:
 7252 0224 4C494E45 		.ascii	"LINE=%d,TVI Mode\015\012\000"
 7252      3D25642C 
 7252      54564920 
 7252      4D6F6465 
 7252      0D0A00
 7253 0237 00       		.space	1
 7254              	.LC65:
 7255 0238 45516465 		.ascii	"EQdet %d\015\012\000"
 7255      74202564 
 7255      0D0A00
ARM GAS  /tmp/ccSTfybG.s 			page 220


 7256 0243 00       		.space	1
 7257              	.LC66:
 7258 0244 0D0A4148 		.ascii	"\015\012AHD COC Ready CH=%d\015\012\000"
 7258      4420434F 
 7258      43205265 
 7258      61647920 
 7258      43483D25 
 7259              		.section	.rodata.Get_2824cIrq.str1.4,"aMS",%progbits,1
 7260              		.align	2
 7261              	.LC30:
 7262 0000 0D0A434F 		.ascii	"\015\012COC4:\000"
 7262      43343A00 
 7263              	.LC31:
 7264 0008 20253032 		.ascii	" %02X\000"
 7264      5800
 7265 000e 0000     		.space	2
 7266              	.LC32:
 7267 0010 51756164 		.ascii	"QuadBoxId %02x\015\012\000"
 7267      426F7849 
 7267      64202530 
 7267      32780D0A 
 7267      00
 7268 0021 000000   		.space	3
 7269              	.LC33:
 7270 0024 0D0A434F 		.ascii	"\015\012COC3:\000"
 7270      43333A00 
 7271              	.LC34:
 7272 002c 0D0A434F 		.ascii	"\015\012COC2:\000"
 7272      43323A00 
 7273              	.LC35:
 7274 0034 0D0A434F 		.ascii	"\015\012COC1:\000"
 7274      43313A00 
 7275              	.LC36:
 7276 003c 43564253 		.ascii	"CVBS-Tx %x,%x,%x,%x\012\000"
 7276      2D547820 
 7276      25782C25 
 7276      782C2578 
 7276      2C25780A 
 7277 0051 000000   		.space	3
 7278              	.LC37:
 7279 0054 5456492D 		.ascii	"TVI-Tx %x,%x,%x\012\000"
 7279      54782025 
 7279      782C2578 
 7279      2C25780A 
 7279      00
 7280 0065 000000   		.space	3
 7281              	.LC38:
 7282 0068 4356492D 		.ascii	"CVI-Tx %x\012\000"
 7282      54782025 
 7282      780A00
 7283 0073 00       		.space	1
 7284              	.LC39:
 7285 0074 41484420 		.ascii	"AHD %02x,%02x,%02x to \000"
 7285      25303278 
 7285      2C253032 
 7285      782C2530 
 7285      32782074 
ARM GAS  /tmp/ccSTfybG.s 			page 221


 7286 008b 00       		.space	1
 7287              	.LC40:
 7288 008c 54782025 		.ascii	"Tx %02x,%02x,%02x,%02x\000"
 7288      3032782C 
 7288      25303278 
 7288      2C253032 
 7288      782C2530 
 7289              		.section	.rodata.Init_COC_PTZOUT1.str1.4,"aMS",%progbits,1
 7290              		.align	2
 7291              	.LC41:
 7292 0000 0D0A2049 		.ascii	"\015\012 Init_COC_PTZOUT1..\000"
 7292      6E69745F 
 7292      434F435F 
 7292      50545A4F 
 7292      5554312E 
 7293              		.section	.rodata.Init_TP280x_RegSet.str1.4,"aMS",%progbits,1
 7294              		.align	2
 7295              	.LC26:
 7296 0000 0D0A6368 		.ascii	"\015\012chip %02x revision %02x\015\012\000"
 7296      69702025 
 7296      30327820 
 7296      72657669 
 7296      73696F6E 
 7297              	.LC27:
 7298 001c 454F4C20 		.ascii	"EOL ID\015\000"
 7298      49440D00 
 7299              	.LC28:
 7300 0024 54503238 		.ascii	"TP2824C test\015\000"
 7300      32344320 
 7300      74657374 
 7300      0D00
 7301 0032 0000     		.space	2
 7302              	.LC29:
 7303 0034 756E6B6E 		.ascii	"unknown ID\015\000"
 7303      6F776E20 
 7303      49440D00 
 7304              		.section	.rodata.ManualAGC.str1.4,"aMS",%progbits,1
 7305              		.align	2
 7306              	.LC24:
 7307 0000 72657375 		.ascii	"result AGC=0X%04x ch%02X\015\012\000"
 7307      6C742041 
 7307      47433D30 
 7307      58253034 
 7307      78206368 
 7308              		.section	.rodata.PTZ_RX_dat.8822,"a",%progbits
 7309              		.align	2
 7310              		.set	.LANCHOR28,. + 0
 7313              	PTZ_RX_dat.8822:
 7314 0000 00       		.byte	0
 7315 0001 00       		.byte	0
 7316 0002 07       		.byte	7
 7317 0003 08       		.byte	8
 7318 0004 00       		.byte	0
 7319 0005 00       		.byte	0
 7320 0006 04       		.byte	4
 7321 0007 00       		.byte	0
 7322 0008 00       		.byte	0
ARM GAS  /tmp/ccSTfybG.s 			page 222


 7323 0009 60       		.byte	96
 7324 000a 10       		.byte	16
 7325 000b 04       		.byte	4
 7326 000c F0       		.byte	-16
 7327 000d D8       		.byte	-40
 7328 000e 27       		.byte	39
 7329 000f 00       		.byte	0
 7330 0010 00       		.byte	0
 7331 0011 07       		.byte	7
 7332 0012 08       		.byte	8
 7333 0013 09       		.byte	9
 7334 0014 0A       		.byte	10
 7335 0015 04       		.byte	4
 7336 0016 00       		.byte	0
 7337 0017 00       		.byte	0
 7338 0018 60       		.byte	96
 7339 0019 10       		.byte	16
 7340 001a 04       		.byte	4
 7341 001b F0       		.byte	-16
 7342 001c D8       		.byte	-40
 7343 001d 27       		.byte	39
 7344 001e 00       		.byte	0
 7345 001f 00       		.byte	0
 7346 0020 06       		.byte	6
 7347 0021 07       		.byte	7
 7348 0022 08       		.byte	8
 7349 0023 09       		.byte	9
 7350 0024 03       		.byte	3
 7351 0025 52       		.byte	82
 7352 0026 53       		.byte	83
 7353 0027 60       		.byte	96
 7354 0028 10       		.byte	16
 7355 0029 04       		.byte	4
 7356 002a F0       		.byte	-16
 7357 002b D8       		.byte	-40
 7358 002c 17       		.byte	23
 7359 002d 00       		.byte	0
 7360 002e 00       		.byte	0
 7361 002f 06       		.byte	6
 7362 0030 07       		.byte	7
 7363 0031 08       		.byte	8
 7364 0032 09       		.byte	9
 7365 0033 02       		.byte	2
 7366 0034 DF       		.byte	-33
 7367 0035 88       		.byte	-120
 7368 0036 60       		.byte	96
 7369 0037 10       		.byte	16
 7370 0038 04       		.byte	4
 7371 0039 F0       		.byte	-16
 7372 003a D8       		.byte	-40
 7373 003b 17       		.byte	23
 7374 003c 00       		.byte	0
 7375 003d 00       		.byte	0
 7376 003e 06       		.byte	6
 7377 003f 07       		.byte	7
 7378 0040 08       		.byte	8
 7379 0041 09       		.byte	9
ARM GAS  /tmp/ccSTfybG.s 			page 223


 7380 0042 04       		.byte	4
 7381 0043 EC       		.byte	-20
 7382 0044 E9       		.byte	-23
 7383 0045 60       		.byte	96
 7384 0046 10       		.byte	16
 7385 0047 04       		.byte	4
 7386 0048 F0       		.byte	-16
 7387 0049 D8       		.byte	-40
 7388 004a 17       		.byte	23
 7389              		.section	.rodata.PTZ_dat.8812,"a",%progbits
 7390              		.align	2
 7391              		.set	.LANCHOR26,. + 0
 7394              	PTZ_dat.8812:
 7395 0000 0B       		.byte	11
 7396 0001 0C       		.byte	12
 7397 0002 0D       		.byte	13
 7398 0003 0E       		.byte	14
 7399 0004 19       		.byte	25
 7400 0005 78       		.byte	120
 7401 0006 21       		.byte	33
 7402 0007 0B       		.byte	11
 7403 0008 0C       		.byte	12
 7404 0009 0D       		.byte	13
 7405 000a 0E       		.byte	14
 7406 000b 33       		.byte	51
 7407 000c F0       		.byte	-16
 7408 000d 21       		.byte	33
 7409 000e 0E       		.byte	14
 7410 000f 0F       		.byte	15
 7411 0010 10       		.byte	16
 7412 0011 11       		.byte	17
 7413 0012 66       		.byte	102
 7414 0013 F0       		.byte	-16
 7415 0014 17       		.byte	23
 7416 0015 0E       		.byte	14
 7417 0016 0F       		.byte	15
 7418 0017 10       		.byte	16
 7419 0018 11       		.byte	17
 7420 0019 26       		.byte	38
 7421 001a F0       		.byte	-16
 7422 001b 57       		.byte	87
 7423 001c 0E       		.byte	14
 7424 001d 0F       		.byte	15
 7425 001e 00       		.byte	0
 7426 001f 00       		.byte	0
 7427 0020 26       		.byte	38
 7428 0021 E0       		.byte	-32
 7429 0022 EF       		.byte	-17
 7430 0023 0F       		.byte	15
 7431 0024 10       		.byte	16
 7432 0025 00       		.byte	0
 7433 0026 00       		.byte	0
 7434 0027 48       		.byte	72
 7435 0028 F0       		.byte	-16
 7436 0029 6F       		.byte	111
 7437 002a 10       		.byte	16
 7438 002b 11       		.byte	17
ARM GAS  /tmp/ccSTfybG.s 			page 224


 7439 002c 12       		.byte	18
 7440 002d 13       		.byte	19
 7441 002e 15       		.byte	21
 7442 002f B8       		.byte	-72
 7443 0030 A2       		.byte	-94
 7444 0031 10       		.byte	16
 7445 0032 11       		.byte	17
 7446 0033 12       		.byte	18
 7447 0034 13       		.byte	19
 7448 0035 95       		.byte	-107
 7449 0036 B8       		.byte	-72
 7450 0037 22       		.byte	34
 7451              		.section	.rodata.PTZ_dat.8834,"a",%progbits
 7452              		.align	2
 7453              		.set	.LANCHOR29,. + 0
 7456              	PTZ_dat.8834:
 7457 0000 42       		.byte	66
 7458 0001 40       		.byte	64
 7459 0002 00       		.byte	0
 7460 0003 00       		.byte	0
 7461 0004 00       		.byte	0
 7462 0005 0B       		.byte	11
 7463 0006 0C       		.byte	12
 7464 0007 0D       		.byte	13
 7465 0008 0E       		.byte	14
 7466 0009 19       		.byte	25
 7467 000a 78       		.byte	120
 7468 000b 21       		.byte	33
 7469 000c 42       		.byte	66
 7470 000d 40       		.byte	64
 7471 000e 00       		.byte	0
 7472 000f 00       		.byte	0
 7473 0010 00       		.byte	0
 7474 0011 0B       		.byte	11
 7475 0012 0C       		.byte	12
 7476 0013 0D       		.byte	13
 7477 0014 0E       		.byte	14
 7478 0015 33       		.byte	51
 7479 0016 F0       		.byte	-16
 7480 0017 21       		.byte	33
 7481 0018 42       		.byte	66
 7482 0019 40       		.byte	64
 7483 001a 00       		.byte	0
 7484 001b 00       		.byte	0
 7485 001c 00       		.byte	0
 7486 001d 0E       		.byte	14
 7487 001e 0F       		.byte	15
 7488 001f 10       		.byte	16
 7489 0020 11       		.byte	17
 7490 0021 26       		.byte	38
 7491 0022 F0       		.byte	-16
 7492 0023 57       		.byte	87
 7493 0024 42       		.byte	66
 7494 0025 40       		.byte	64
 7495 0026 00       		.byte	0
 7496 0027 00       		.byte	0
 7497 0028 00       		.byte	0
ARM GAS  /tmp/ccSTfybG.s 			page 225


 7498 0029 0E       		.byte	14
 7499 002a 0F       		.byte	15
 7500 002b 00       		.byte	0
 7501 002c 00       		.byte	0
 7502 002d 26       		.byte	38
 7503 002e E0       		.byte	-32
 7504 002f EF       		.byte	-17
 7505 0030 42       		.byte	66
 7506 0031 40       		.byte	64
 7507 0032 00       		.byte	0
 7508 0033 00       		.byte	0
 7509 0034 00       		.byte	0
 7510 0035 0F       		.byte	15
 7511 0036 10       		.byte	16
 7512 0037 00       		.byte	0
 7513 0038 00       		.byte	0
 7514 0039 4D       		.byte	77
 7515 003a F0       		.byte	-16
 7516 003b 6F       		.byte	111
 7517 003c 42       		.byte	66
 7518 003d 40       		.byte	64
 7519 003e 00       		.byte	0
 7520 003f 00       		.byte	0
 7521 0040 00       		.byte	0
 7522 0041 10       		.byte	16
 7523 0042 11       		.byte	17
 7524 0043 12       		.byte	18
 7525 0044 15       		.byte	21
 7526 0045 15       		.byte	21
 7527 0046 B8       		.byte	-72
 7528 0047 A2       		.byte	-94
 7529              		.section	.rodata.PTZ_reg.8811,"a",%progbits
 7530              		.align	2
 7531              		.set	.LANCHOR27,. + 0
 7534              	PTZ_reg.8811:
 7535 0000 C2       		.byte	-62
 7536 0001 C3       		.byte	-61
 7537 0002 C4       		.byte	-60
 7538 0003 C5       		.byte	-59
 7539 0004 C6       		.byte	-58
 7540 0005 C7       		.byte	-57
 7541 0006 C8       		.byte	-56
 7542 0007 DA       		.byte	-38
 7543 0008 DB       		.byte	-37
 7544 0009 DC       		.byte	-36
 7545 000a DD       		.byte	-35
 7546 000b DE       		.byte	-34
 7547 000c DF       		.byte	-33
 7548 000d E0       		.byte	-32
 7549 000e C2       		.byte	-62
 7550 000f C3       		.byte	-61
 7551 0010 C4       		.byte	-60
 7552 0011 C5       		.byte	-59
 7553 0012 C6       		.byte	-58
 7554 0013 C7       		.byte	-57
 7555 0014 C8       		.byte	-56
 7556 0015 DA       		.byte	-38
ARM GAS  /tmp/ccSTfybG.s 			page 226


 7557 0016 DB       		.byte	-37
 7558 0017 DC       		.byte	-36
 7559 0018 DD       		.byte	-35
 7560 0019 DE       		.byte	-34
 7561 001a DF       		.byte	-33
 7562 001b E0       		.byte	-32
 7563              		.section	.rodata.PTZ_reg.8833,"a",%progbits
 7564              		.align	2
 7565              		.set	.LANCHOR30,. + 0
 7568              	PTZ_reg.8833:
 7569 0000 6F       		.byte	111
 7570 0001 70       		.byte	112
 7571 0002 71       		.byte	113
 7572 0003 C0       		.byte	-64
 7573 0004 C1       		.byte	-63
 7574 0005 C2       		.byte	-62
 7575 0006 C3       		.byte	-61
 7576 0007 C4       		.byte	-60
 7577 0008 C5       		.byte	-59
 7578 0009 C6       		.byte	-58
 7579 000a C7       		.byte	-57
 7580 000b C8       		.byte	-56
 7581              		.section	.rodata.REG_F6,"a",%progbits
 7582              		.align	2
 7583              		.set	.LANCHOR33,. + 0
 7586              	REG_F6:
 7587 0000 00       		.byte	0
 7588 0001 11       		.byte	17
 7589 0002 22       		.byte	34
 7590 0003 33       		.byte	51
 7591              		.section	.rodata.REG_F7,"a",%progbits
 7592              		.align	2
 7593              		.set	.LANCHOR34,. + 0
 7596              	REG_F7:
 7597 0000 44       		.byte	68
 7598 0001 55       		.byte	85
 7599 0002 66       		.byte	102
 7600 0003 77       		.byte	119
 7601              		.section	.rodata.REG_FA,"a",%progbits
 7602              		.align	2
 7603              		.set	.LANCHOR35,. + 0
 7606              	REG_FA:
 7607 0000 BB       		.byte	-69
 7608 0001 CC       		.byte	-52
 7609 0002 DD       		.byte	-35
 7610 0003 EE       		.byte	-18
 7611              		.section	.rodata.SYS_AND,"a",%progbits
 7612              		.align	2
 7613              		.set	.LANCHOR0,. + 0
 7616              	SYS_AND:
 7617 0000 FE       		.byte	-2
 7618 0001 FD       		.byte	-3
 7619 0002 FB       		.byte	-5
 7620 0003 F7       		.byte	-9
 7621 0004 F0       		.byte	-16
 7622              		.section	.rodata.SYS_MODE,"a",%progbits
 7623              		.align	2
ARM GAS  /tmp/ccSTfybG.s 			page 227


 7624              		.set	.LANCHOR1,. + 0
 7627              	SYS_MODE:
 7628 0000 01       		.byte	1
 7629 0001 02       		.byte	2
 7630 0002 04       		.byte	4
 7631 0003 08       		.byte	8
 7632 0004 0F       		.byte	15
 7633              		.section	.rodata.Set_ResWithAutoDet.str1.4,"aMS",%progbits,1
 7634              		.align	2
 7635              	.LC25:
 7636 0000 482F5620 		.ascii	"H/V is not locked\015\000"
 7636      6973206E 
 7636      6F74206C 
 7636      6F636B65 
 7636      640D00
 7637              		.section	.rodata.Set_VidRes.str1.4,"aMS",%progbits,1
 7638              		.align	2
 7639              	.LC0:
 7640 0000 31303830 		.ascii	"1080p30\000"
 7640      70333000 
 7641              	.LC1:
 7642 0008 31303830 		.ascii	"1080p25\000"
 7642      70323500 
 7643              	.LC2:
 7644 0010 37323070 		.ascii	"720p60\000"
 7644      363000
 7645 0017 00       		.space	1
 7646              	.LC3:
 7647 0018 37323070 		.ascii	"720p30V2\000"
 7647      33305632 
 7647      00
 7648 0021 000000   		.space	3
 7649              	.LC4:
 7650 0024 37323070 		.ascii	"720p50\000"
 7650      353000
 7651 002b 00       		.space	1
 7652              	.LC5:
 7653 002c 37323070 		.ascii	"720p25V2\000"
 7653      32355632 
 7653      00
 7654 0035 000000   		.space	3
 7655              	.LC6:
 7656 0038 37323070 		.ascii	"720p30\000"
 7656      333000
 7657 003f 00       		.space	1
 7658              	.LC7:
 7659 0040 37323070 		.ascii	"720p25\000"
 7659      323500
 7660 0047 00       		.space	1
 7661              	.LC8:
 7662 0048 50414C00 		.ascii	"PAL\000"
 7663              	.LC9:
 7664 004c 4E545343 		.ascii	"NTSC\000"
 7664      00
 7665 0051 000000   		.space	3
 7666              	.LC10:
 7667 0054 334D3138 		.ascii	"3M18\000"
ARM GAS  /tmp/ccSTfybG.s 			page 228


 7667      00
 7668 0059 000000   		.space	3
 7669              	.LC11:
 7670 005c 354D3132 		.ascii	"5M12\000"
 7670      00
 7671 0061 000000   		.space	3
 7672              	.LC12:
 7673 0064 344D3135 		.ascii	"4M15\000"
 7673      00
 7674 0069 000000   		.space	3
 7675              	.LC13:
 7676 006c 334D3230 		.ascii	"3M20\000"
 7676      00
 7677 0071 000000   		.space	3
 7678              	.LC14:
 7679 0074 344D3132 		.ascii	"4M12\000"
 7679      00
 7680 0079 000000   		.space	3
 7681              	.LC15:
 7682 007c 364D3130 		.ascii	"6M10\000"
 7682      00
 7683 0081 000000   		.space	3
 7684              	.LC16:
 7685 0084 344D3330 		.ascii	"4M30\000"
 7685      00
 7686 0089 000000   		.space	3
 7687              	.LC17:
 7688 008c 2E2E2E0D 		.ascii	"...\015\000"
 7688      00
 7689 0091 000000   		.space	3
 7690              	.LC18:
 7691 0094 74703238 		.ascii	"tp2826MODEDATASET\015\000"
 7691      32364D4F 
 7691      44454441 
 7691      54415345 
 7691      540D00
 7692 00a7 00       		.space	1
 7693              	.LC19:
 7694 00a8 74703238 		.ascii	"tp2824C MODEDATASET\015\000"
 7694      32344320 
 7694      4D4F4445 
 7694      44415441 
 7694      5345540D 
 7695              		.section	.rodata.TP2802D_DataSet,"a",%progbits
 7696              		.align	2
 7699              	TP2802D_DataSet:
 7700 0000 40       		.byte	64
 7701 0001 04       		.byte	4
 7702 0002 2B       		.byte	43
 7703 0003 44       		.byte	68
 7704 0004 23       		.byte	35
 7705 0005 50       		.byte	80
 7706 0006 39       		.byte	57
 7707 0007 42       		.byte	66
 7708 0008 3A       		.byte	58
 7709 0009 01       		.byte	1
 7710 000a 30       		.byte	48
ARM GAS  /tmp/ccSTfybG.s 			page 229


 7711 000b 48       		.byte	72
 7712 000c 31       		.byte	49
 7713 000d BB       		.byte	-69
 7714 000e 32       		.byte	50
 7715 000f 2E       		.byte	46
 7716 0010 33       		.byte	51
 7717 0011 90       		.byte	-112
 7718 0012 4D       		.byte	77
 7719 0013 0F       		.byte	15
 7720 0014 4E       		.byte	78
 7721 0015 FF       		.byte	-1
 7722 0016 40       		.byte	64
 7723 0017 01       		.byte	1
 7724 0018 50       		.byte	80
 7725 0019 00       		.byte	0
 7726 001a 51       		.byte	81
 7727 001b 00       		.byte	0
 7728 001c 52       		.byte	82
 7729 001d 00       		.byte	0
 7730 001e 7F       		.byte	127
 7731 001f 00       		.byte	0
 7732 0020 80       		.byte	-128
 7733 0021 00       		.byte	0
 7734 0022 81       		.byte	-127
 7735 0023 00       		.byte	0
 7736 0024 40       		.byte	64
 7737 0025 00       		.byte	0
 7738 0026 50       		.byte	80
 7739 0027 00       		.byte	0
 7740 0028 51       		.byte	81
 7741 0029 0B       		.byte	11
 7742 002a 52       		.byte	82
 7743 002b 0C       		.byte	12
 7744 002c 53       		.byte	83
 7745 002d 19       		.byte	25
 7746 002e 54       		.byte	84
 7747 002f 78       		.byte	120
 7748 0030 55       		.byte	85
 7749 0031 21       		.byte	33
 7750 0032 7E       		.byte	126
 7751 0033 0F       		.byte	15
 7752 0034 7F       		.byte	127
 7753 0035 00       		.byte	0
 7754 0036 80       		.byte	-128
 7755 0037 07       		.byte	7
 7756 0038 81       		.byte	-127
 7757 0039 08       		.byte	8
 7758 003a 82       		.byte	-126
 7759 003b 04       		.byte	4
 7760 003c 83       		.byte	-125
 7761 003d 00       		.byte	0
 7762 003e 84       		.byte	-124
 7763 003f 00       		.byte	0
 7764 0040 85       		.byte	-123
 7765 0041 60       		.byte	96
 7766 0042 86       		.byte	-122
 7767 0043 10       		.byte	16
ARM GAS  /tmp/ccSTfybG.s 			page 230


 7768 0044 87       		.byte	-121
 7769 0045 06       		.byte	6
 7770 0046 88       		.byte	-120
 7771 0047 BE       		.byte	-66
 7772 0048 89       		.byte	-119
 7773 0049 39       		.byte	57
 7774 004a 8A       		.byte	-118
 7775 004b 27       		.byte	39
 7776 004c B9       		.byte	-71
 7777 004d 0F       		.byte	15
 7778 004e FF       		.byte	-1
 7779 004f FF       		.byte	-1
 7780              		.section	.rodata.TP2802_FORMAT_DataSet,"a",%progbits
 7781              		.align	2
 7782              		.set	.LANCHOR2,. + 0
 7785              	TP2802_FORMAT_DataSet:
 7786 0000 02       		.byte	2
 7787 0001 15       		.byte	21
 7788 0002 16       		.byte	22
 7789 0003 17       		.byte	23
 7790 0004 18       		.byte	24
 7791 0005 19       		.byte	25
 7792 0006 1A       		.byte	26
 7793 0007 1C       		.byte	28
 7794 0008 1D       		.byte	29
 7795 0009 35       		.byte	53
 7796 000a 36       		.byte	54
 7797 000b 14       		.byte	20
 7798 000c FF       		.byte	-1
 7799 000d 48       		.byte	72
 7800 000e 03       		.byte	3
 7801 000f D3       		.byte	-45
 7802 0010 80       		.byte	-128
 7803 0011 29       		.byte	41
 7804 0012 38       		.byte	56
 7805 0013 47       		.byte	71
 7806 0014 08       		.byte	8
 7807 0015 98       		.byte	-104
 7808 0016 05       		.byte	5
 7809 0017 DC       		.byte	-36
 7810 0018 0A       		.byte	10
 7811 0019 FF       		.byte	-1
 7812 001a 48       		.byte	72
 7813 001b 03       		.byte	3
 7814 001c D3       		.byte	-45
 7815 001d 80       		.byte	-128
 7816 001e 29       		.byte	41
 7817 001f 38       		.byte	56
 7818 0020 47       		.byte	71
 7819 0021 0A       		.byte	10
 7820 0022 50       		.byte	80
 7821 0023 05       		.byte	5
 7822 0024 DC       		.byte	-36
 7823 0025 0A       		.byte	10
 7824 0026 FF       		.byte	-1
 7825 0027 4A       		.byte	74
 7826 0028 13       		.byte	19
ARM GAS  /tmp/ccSTfybG.s 			page 231


 7827 0029 16       		.byte	22
 7828 002a 00       		.byte	0
 7829 002b 19       		.byte	25
 7830 002c D0       		.byte	-48
 7831 002d 25       		.byte	37
 7832 002e 06       		.byte	6
 7833 002f 72       		.byte	114
 7834 0030 05       		.byte	5
 7835 0031 DC       		.byte	-36
 7836 0032 0A       		.byte	10
 7837 0033 FF       		.byte	-1
 7838 0034 4A       		.byte	74
 7839 0035 13       		.byte	19
 7840 0036 16       		.byte	22
 7841 0037 00       		.byte	0
 7842 0038 19       		.byte	25
 7843 0039 D0       		.byte	-48
 7844 003a 25       		.byte	37
 7845 003b 07       		.byte	7
 7846 003c BC       		.byte	-68
 7847 003d 05       		.byte	5
 7848 003e DC       		.byte	-36
 7849 003f 0A       		.byte	10
 7850 0040 FF       		.byte	-1
 7851 0041 4A       		.byte	74
 7852 0042 13       		.byte	19
 7853 0043 16       		.byte	22
 7854 0044 00       		.byte	0
 7855 0045 19       		.byte	25
 7856 0046 D0       		.byte	-48
 7857 0047 25       		.byte	37
 7858 0048 0C       		.byte	12
 7859 0049 E4       		.byte	-28
 7860 004a 05       		.byte	5
 7861 004b DC       		.byte	-36
 7862 004c 0A       		.byte	10
 7863 004d FF       		.byte	-1
 7864 004e 4A       		.byte	74
 7865 004f 13       		.byte	19
 7866 0050 16       		.byte	22
 7867 0051 00       		.byte	0
 7868 0052 19       		.byte	25
 7869 0053 D0       		.byte	-48
 7870 0054 25       		.byte	37
 7871 0055 0F       		.byte	15
 7872 0056 78       		.byte	120
 7873 0057 05       		.byte	5
 7874 0058 DC       		.byte	-36
 7875 0059 0A       		.byte	10
 7876 005a FF       		.byte	-1
 7877 005b 4F       		.byte	79
 7878 005c 13       		.byte	19
 7879 005d 4E       		.byte	78
 7880 005e BC       		.byte	-68
 7881 005f 15       		.byte	21
 7882 0060 F0       		.byte	-16
 7883 0061 07       		.byte	7
ARM GAS  /tmp/ccSTfybG.s 			page 232


 7884 0062 09       		.byte	9
 7885 0063 38       		.byte	56
 7886 0064 25       		.byte	37
 7887 0065 DC       		.byte	-36
 7888 0066 0A       		.byte	10
 7889 0067 FF       		.byte	-1
 7890 0068 4F       		.byte	79
 7891 0069 13       		.byte	19
 7892 006a 5F       		.byte	95
 7893 006b BC       		.byte	-68
 7894 006c 17       		.byte	23
 7895 006d 20       		.byte	32
 7896 006e 17       		.byte	23
 7897 006f 09       		.byte	9
 7898 0070 48       		.byte	72
 7899 0071 25       		.byte	37
 7900 0072 DC       		.byte	-36
 7901 0073 0A       		.byte	10
 7902 0074 FF       		.byte	-1
 7903 0075 48       		.byte	72
 7904 0076 13       		.byte	19
 7905 0077 6C       		.byte	108
 7906 0078 00       		.byte	0
 7907 0079 2C       		.byte	44
 7908 007a 00       		.byte	0
 7909 007b 68       		.byte	104
 7910 007c 09       		.byte	9
 7911 007d C4       		.byte	-60
 7912 007e 16       		.byte	22
 7913 007f 30       		.byte	48
 7914 0080 0A       		.byte	10
 7915 0081 FF       		.byte	-1
 7916 0082 48       		.byte	72
 7917 0083 13       		.byte	19
 7918 0084 1F       		.byte	31
 7919 0085 20       		.byte	32
 7920 0086 34       		.byte	52
 7921 0087 98       		.byte	-104
 7922 0088 7A       		.byte	122
 7923 0089 0B       		.byte	11
 7924 008a 9A       		.byte	-102
 7925 008b 17       		.byte	23
 7926 008c D0       		.byte	-48
 7927 008d 0A       		.byte	10
 7928 008e FF       		.byte	-1
 7929 008f 4A       		.byte	74
 7930 0090 13       		.byte	19
 7931 0091 16       		.byte	22
 7932 0092 00       		.byte	0
 7933 0093 19       		.byte	25
 7934 0094 D0       		.byte	-48
 7935 0095 25       		.byte	37
 7936 0096 06       		.byte	6
 7937 0097 72       		.byte	114
 7938 0098 25       		.byte	37
 7939 0099 DC       		.byte	-36
 7940 009a 0A       		.byte	10
ARM GAS  /tmp/ccSTfybG.s 			page 233


 7941 009b FF       		.byte	-1
 7942 009c 4A       		.byte	74
 7943 009d 13       		.byte	19
 7944 009e 16       		.byte	22
 7945 009f 00       		.byte	0
 7946 00a0 19       		.byte	25
 7947 00a1 D0       		.byte	-48
 7948 00a2 25       		.byte	37
 7949 00a3 07       		.byte	7
 7950 00a4 BC       		.byte	-68
 7951 00a5 25       		.byte	37
 7952 00a6 DC       		.byte	-36
 7953 00a7 0A       		.byte	10
 7954 00a8 FF       		.byte	-1
 7955 00a9 48       		.byte	72
 7956 00aa 13       		.byte	19
 7957 00ab 1F       		.byte	31
 7958 00ac 80       		.byte	-128
 7959 00ad 7D       		.byte	125
 7960 00ae F0       		.byte	-16
 7961 00af 5A       		.byte	90
 7962 00b0 0B       		.byte	11
 7963 00b1 B8       		.byte	-72
 7964 00b2 16       		.byte	22
 7965 00b3 72       		.byte	114
 7966 00b4 0A       		.byte	10
 7967 00b5 FF       		.byte	-1
 7968 00b6 48       		.byte	72
 7969 00b7 13       		.byte	19
 7970 00b8 6C       		.byte	108
 7971 00b9 00       		.byte	0
 7972 00ba 2C       		.byte	44
 7973 00bb 00       		.byte	0
 7974 00bc 68       		.byte	104
 7975 00bd 09       		.byte	9
 7976 00be C4       		.byte	-60
 7977 00bf 16       		.byte	22
 7978 00c0 72       		.byte	114
 7979 00c1 0A       		.byte	10
 7980 00c2 FF       		.byte	-1
 7981 00c3 48       		.byte	72
 7982 00c4 23       		.byte	35
 7983 00c5 34       		.byte	52
 7984 00c6 78       		.byte	120
 7985 00c7 8C       		.byte	-116
 7986 00c8 F0       		.byte	-16
 7987 00c9 5A       		.byte	90
 7988 00ca 0C       		.byte	12
 7989 00cb E4       		.byte	-28
 7990 00cc 17       		.byte	23
 7991 00cd 08       		.byte	8
 7992 00ce 0A       		.byte	10
 7993 00cf FF       		.byte	-1
 7994 00d0 48       		.byte	72
 7995 00d1 13       		.byte	19
 7996 00d2 EC       		.byte	-20
 7997 00d3 80       		.byte	-128
ARM GAS  /tmp/ccSTfybG.s 			page 234


 7998 00d4 B0       		.byte	-80
 7999 00d5 08       		.byte	8
 8000 00d6 7C       		.byte	124
 8001 00d7 0E       		.byte	14
 8002 00d8 A6       		.byte	-90
 8003 00d9 17       		.byte	23
 8004 00da BC       		.byte	-68
 8005 00db 0A       		.byte	10
 8006 00dc FF       		.byte	-1
 8007 00dd 48       		.byte	72
 8008 00de 13       		.byte	19
 8009 00df 0F       		.byte	15
 8010 00e0 00       		.byte	0
 8011 00e1 32       		.byte	50
 8012 00e2 A0       		.byte	-96
 8013 00e3 55       		.byte	85
 8014 00e4 06       		.byte	6
 8015 00e5 72       		.byte	114
 8016 00e6 15       		.byte	21
 8017 00e7 DC       		.byte	-36
 8018 00e8 0A       		.byte	10
 8019 00e9 FF       		.byte	-1
 8020 00ea 48       		.byte	72
 8021 00eb 13       		.byte	19
 8022 00ec 20       		.byte	32
 8023 00ed 00       		.byte	0
 8024 00ee 20       		.byte	32
 8025 00ef A0       		.byte	-96
 8026 00f0 55       		.byte	85
 8027 00f1 07       		.byte	7
 8028 00f2 BC       		.byte	-68
 8029 00f3 15       		.byte	21
 8030 00f4 DC       		.byte	-36
 8031 00f5 0A       		.byte	10
 8032 00f6 FF       		.byte	-1
 8033              		.section	.rodata.TP2822_DataSet,"a",%progbits
 8034              		.align	2
 8037              	TP2822_DataSet:
 8038 0000 40       		.byte	64
 8039 0001 04       		.byte	4
 8040 0002 39       		.byte	57
 8041 0003 00       		.byte	0
 8042 0004 3D       		.byte	61
 8043 0005 08       		.byte	8
 8044 0006 3A       		.byte	58
 8045 0007 01       		.byte	1
 8046 0008 30       		.byte	48
 8047 0009 48       		.byte	72
 8048 000a 31       		.byte	49
 8049 000b BB       		.byte	-69
 8050 000c 32       		.byte	50
 8051 000d 2E       		.byte	46
 8052 000e 33       		.byte	51
 8053 000f 90       		.byte	-112
 8054 0010 4D       		.byte	77
 8055 0011 03       		.byte	3
 8056 0012 4E       		.byte	78
ARM GAS  /tmp/ccSTfybG.s 			page 235


 8057 0013 33       		.byte	51
 8058 0014 3D       		.byte	61
 8059 0015 00       		.byte	0
 8060 0016 FF       		.byte	-1
 8061 0017 FF       		.byte	-1
 8062              		.section	.rodata.TP2823_DataSet,"a",%progbits
 8063              		.align	2
 8064              		.set	.LANCHOR16,. + 0
 8067              	TP2823_DataSet:
 8068 0000 40       		.byte	64
 8069 0001 04       		.byte	4
 8070 0002 0B       		.byte	11
 8071 0003 60       		.byte	96
 8072 0004 22       		.byte	34
 8073 0005 34       		.byte	52
 8074 0006 23       		.byte	35
 8075 0007 44       		.byte	68
 8076 0008 26       		.byte	38
 8077 0009 01       		.byte	1
 8078 000a 38       		.byte	56
 8079 000b 40       		.byte	64
 8080 000c 3F       		.byte	63
 8081 000d 08       		.byte	8
 8082 000e 4D       		.byte	77
 8083 000f 03       		.byte	3
 8084 0010 4E       		.byte	78
 8085 0011 33       		.byte	51
 8086 0012 FA       		.byte	-6
 8087 0013 00       		.byte	0
 8088 0014 FF       		.byte	-1
 8089 0015 FF       		.byte	-1
 8090              		.section	.rodata.TP2823_MODE_DataSet,"a",%progbits
 8091              		.align	2
 8094              	TP2823_MODE_DataSet:
 8095 0000 0C       		.byte	12
 8096 0001 0D       		.byte	13
 8097 0002 20       		.byte	32
 8098 0003 26       		.byte	38
 8099 0004 2B       		.byte	43
 8100 0005 2D       		.byte	45
 8101 0006 2E       		.byte	46
 8102 0007 30       		.byte	48
 8103 0008 31       		.byte	49
 8104 0009 32       		.byte	50
 8105 000a 33       		.byte	51
 8106 000b 39       		.byte	57
 8107 000c FF       		.byte	-1
 8108 000d 43       		.byte	67
 8109 000e 10       		.byte	16
 8110 000f 60       		.byte	96
 8111 0010 02       		.byte	2
 8112 0011 58       		.byte	88
 8113 0012 30       		.byte	48
 8114 0013 70       		.byte	112
 8115 0014 48       		.byte	72
 8116 0015 BB       		.byte	-69
 8117 0016 2E       		.byte	46
ARM GAS  /tmp/ccSTfybG.s 			page 236


 8118 0017 90       		.byte	-112
 8119 0018 30       		.byte	48
 8120 0019 FF       		.byte	-1
 8121 001a 53       		.byte	83
 8122 001b 10       		.byte	16
 8123 001c 60       		.byte	96
 8124 001d 02       		.byte	2
 8125 001e 58       		.byte	88
 8126 001f 30       		.byte	48
 8127 0020 70       		.byte	112
 8128 0021 48       		.byte	72
 8129 0022 BB       		.byte	-69
 8130 0023 2E       		.byte	46
 8131 0024 90       		.byte	-112
 8132 0025 20       		.byte	32
 8133 0026 FF       		.byte	-1
 8134 0027 53       		.byte	83
 8135 0028 10       		.byte	16
 8136 0029 A0       		.byte	-96
 8137 002a 12       		.byte	18
 8138 002b 70       		.byte	112
 8139 002c 68       		.byte	104
 8140 002d 5E       		.byte	94
 8141 002e 62       		.byte	98
 8142 002f BB       		.byte	-69
 8143 0030 96       		.byte	-106
 8144 0031 C0       		.byte	-64
 8145 0032 10       		.byte	16
 8146 0033 FF       		.byte	-1
 8147 0034 53       		.byte	83
 8148 0035 11       		.byte	17
 8149 0036 B0       		.byte	-80
 8150 0037 02       		.byte	2
 8151 0038 70       		.byte	112
 8152 0039 60       		.byte	96
 8153 003a 5E       		.byte	94
 8154 003b 7A       		.byte	122
 8155 003c 4A       		.byte	74
 8156 003d 4D       		.byte	77
 8157 003e F0       		.byte	-16
 8158 003f 10       		.byte	16
 8159 0040 FF       		.byte	-1
 8160              		.section	.rodata.TP2824C_AHD_FHD_PTZ_DataSet,"a",%progbits
 8161              		.align	2
 8162              		.set	.LANCHOR36,. + 0
 8165              	TP2824C_AHD_FHD_PTZ_DataSet:
 8166 0000 C0       		.byte	-64
 8167 0001 00       		.byte	0
 8168 0002 C2       		.byte	-62
 8169 0003 0E       		.byte	14
 8170 0004 C3       		.byte	-61
 8171 0005 0F       		.byte	15
 8172 0006 C1       		.byte	-63
 8173 0007 00       		.byte	0
 8174 0008 C4       		.byte	-60
 8175 0009 10       		.byte	16
 8176 000a C5       		.byte	-59
ARM GAS  /tmp/ccSTfybG.s 			page 237


 8177 000b 11       		.byte	17
 8178 000c C6       		.byte	-58
 8179 000d 27       		.byte	39
 8180 000e C7       		.byte	-57
 8181 000f 15       		.byte	21
 8182 0010 C8       		.byte	-56
 8183 0011 97       		.byte	-105
 8184 0012 6F       		.byte	111
 8185 0013 44       		.byte	68
 8186 0014 70       		.byte	112
 8187 0015 00       		.byte	0
 8188 0016 55       		.byte	85
 8189 0017 00       		.byte	0
 8190 0018 56       		.byte	86
 8191 0019 00       		.byte	0
 8192 001a 57       		.byte	87
 8193 001b 00       		.byte	0
 8194 001c 58       		.byte	88
 8195 001d 00       		.byte	0
 8196 001e 59       		.byte	89
 8197 001f 00       		.byte	0
 8198 0020 5A       		.byte	90
 8199 0021 00       		.byte	0
 8200 0022 5B       		.byte	91
 8201 0023 00       		.byte	0
 8202 0024 5C       		.byte	92
 8203 0025 00       		.byte	0
 8204 0026 5D       		.byte	93
 8205 0027 00       		.byte	0
 8206 0028 5E       		.byte	94
 8207 0029 00       		.byte	0
 8208 002a 5F       		.byte	95
 8209 002b 00       		.byte	0
 8210 002c 60       		.byte	96
 8211 002d 00       		.byte	0
 8212 002e 62       		.byte	98
 8213 002f 00       		.byte	0
 8214 0030 63       		.byte	99
 8215 0031 00       		.byte	0
 8216 0032 64       		.byte	100
 8217 0033 00       		.byte	0
 8218 0034 65       		.byte	101
 8219 0035 00       		.byte	0
 8220 0036 66       		.byte	102
 8221 0037 00       		.byte	0
 8222 0038 68       		.byte	104
 8223 0039 00       		.byte	0
 8224 003a 69       		.byte	105
 8225 003b 00       		.byte	0
 8226 003c 6A       		.byte	106
 8227 003d 00       		.byte	0
 8228 003e 6B       		.byte	107
 8229 003f 00       		.byte	0
 8230 0040 6C       		.byte	108
 8231 0041 00       		.byte	0
 8232 0042 CB       		.byte	-53
 8233 0043 07       		.byte	7
ARM GAS  /tmp/ccSTfybG.s 			page 238


 8234 0044 CC       		.byte	-52
 8235 0045 08       		.byte	8
 8236 0046 CD       		.byte	-51
 8237 0047 00       		.byte	0
 8238 0048 CE       		.byte	-50
 8239 0049 00       		.byte	0
 8240 004a CF       		.byte	-49
 8241 004b 04       		.byte	4
 8242 004c D0       		.byte	-48
 8243 004d 00       		.byte	0
 8244 004e D1       		.byte	-47
 8245 004f 00       		.byte	0
 8246 0050 D2       		.byte	-46
 8247 0051 60       		.byte	96
 8248 0052 D3       		.byte	-45
 8249 0053 10       		.byte	16
 8250 0054 D4       		.byte	-44
 8251 0055 06       		.byte	6
 8252 0056 D5       		.byte	-43
 8253 0057 BE       		.byte	-66
 8254 0058 D6       		.byte	-42
 8255 0059 39       		.byte	57
 8256 005a D7       		.byte	-41
 8257 005b 27       		.byte	39
 8258 005c A7       		.byte	-89
 8259 005d 24       		.byte	36
 8260 005e FF       		.byte	-1
 8261 005f FF       		.byte	-1
 8262              		.section	.rodata.TP2824C_CVBS_PTZ_DataSet,"a",%progbits
 8263              		.align	2
 8264              		.set	.LANCHOR31,. + 0
 8267              	TP2824C_CVBS_PTZ_DataSet:
 8268 0000 C0       		.byte	-64
 8269 0001 00       		.byte	0
 8270 0002 C2       		.byte	-62
 8271 0003 0F       		.byte	15
 8272 0004 C3       		.byte	-61
 8273 0005 10       		.byte	16
 8274 0006 C1       		.byte	-63
 8275 0007 00       		.byte	0
 8276 0008 C4       		.byte	-60
 8277 0009 00       		.byte	0
 8278 000a C5       		.byte	-59
 8279 000b 00       		.byte	0
 8280 000c C6       		.byte	-58
 8281 000d 49       		.byte	73
 8282 000e C7       		.byte	-57
 8283 000f 14       		.byte	20
 8284 0010 C8       		.byte	-56
 8285 0011 AF       		.byte	-81
 8286 0012 6F       		.byte	111
 8287 0013 60       		.byte	96
 8288 0014 70       		.byte	112
 8289 0015 00       		.byte	0
 8290 0016 55       		.byte	85
 8291 0017 00       		.byte	0
 8292 0018 56       		.byte	86
ARM GAS  /tmp/ccSTfybG.s 			page 239


 8293 0019 00       		.byte	0
 8294 001a 57       		.byte	87
 8295 001b 00       		.byte	0
 8296 001c 58       		.byte	88
 8297 001d 00       		.byte	0
 8298 001e 59       		.byte	89
 8299 001f 00       		.byte	0
 8300 0020 5A       		.byte	90
 8301 0021 00       		.byte	0
 8302 0022 5B       		.byte	91
 8303 0023 00       		.byte	0
 8304 0024 5C       		.byte	92
 8305 0025 00       		.byte	0
 8306 0026 5D       		.byte	93
 8307 0027 00       		.byte	0
 8308 0028 5E       		.byte	94
 8309 0029 00       		.byte	0
 8310 002a 5F       		.byte	95
 8311 002b 00       		.byte	0
 8312 002c 60       		.byte	96
 8313 002d 00       		.byte	0
 8314 002e 62       		.byte	98
 8315 002f 00       		.byte	0
 8316 0030 63       		.byte	99
 8317 0031 00       		.byte	0
 8318 0032 64       		.byte	100
 8319 0033 00       		.byte	0
 8320 0034 65       		.byte	101
 8321 0035 00       		.byte	0
 8322 0036 66       		.byte	102
 8323 0037 00       		.byte	0
 8324 0038 68       		.byte	104
 8325 0039 00       		.byte	0
 8326 003a 69       		.byte	105
 8327 003b 00       		.byte	0
 8328 003c 6A       		.byte	106
 8329 003d 00       		.byte	0
 8330 003e 6B       		.byte	107
 8331 003f 00       		.byte	0
 8332 0040 6C       		.byte	108
 8333 0041 00       		.byte	0
 8334 0042 FF       		.byte	-1
 8335 0043 FF       		.byte	-1
 8336              		.section	.rodata.TP2824C_CVIHD_PTZ_DataSet,"a",%progbits
 8337              		.align	2
 8338              		.set	.LANCHOR37,. + 0
 8341              	TP2824C_CVIHD_PTZ_DataSet:
 8342 0000 70       		.byte	112
 8343 0001 1D       		.byte	29
 8344 0002 C0       		.byte	-64
 8345 0003 00       		.byte	0
 8346 0004 C2       		.byte	-62
 8347 0005 10       		.byte	16
 8348 0006 C3       		.byte	-61
 8349 0007 00       		.byte	0
 8350 0008 C1       		.byte	-63
 8351 0009 00       		.byte	0
ARM GAS  /tmp/ccSTfybG.s 			page 240


 8352 000a C4       		.byte	-60
 8353 000b 00       		.byte	0
 8354 000c C5       		.byte	-59
 8355 000d 00       		.byte	0
 8356 000e C6       		.byte	-58
 8357 000f 15       		.byte	21
 8358 0010 C7       		.byte	-57
 8359 0011 5B       		.byte	91
 8360 0012 C8       		.byte	-56
 8361 0013 A4       		.byte	-92
 8362 0014 6F       		.byte	111
 8363 0015 48       		.byte	72
 8364 0016 55       		.byte	85
 8365 0017 00       		.byte	0
 8366 0018 56       		.byte	86
 8367 0019 00       		.byte	0
 8368 001a 57       		.byte	87
 8369 001b 00       		.byte	0
 8370 001c 58       		.byte	88
 8371 001d 00       		.byte	0
 8372 001e 59       		.byte	89
 8373 001f 00       		.byte	0
 8374 0020 5A       		.byte	90
 8375 0021 00       		.byte	0
 8376 0022 5B       		.byte	91
 8377 0023 00       		.byte	0
 8378 0024 5C       		.byte	92
 8379 0025 00       		.byte	0
 8380 0026 5D       		.byte	93
 8381 0027 00       		.byte	0
 8382 0028 5E       		.byte	94
 8383 0029 00       		.byte	0
 8384 002a 5F       		.byte	95
 8385 002b 00       		.byte	0
 8386 002c 60       		.byte	96
 8387 002d 00       		.byte	0
 8388 002e 62       		.byte	98
 8389 002f 00       		.byte	0
 8390 0030 63       		.byte	99
 8391 0031 00       		.byte	0
 8392 0032 64       		.byte	100
 8393 0033 00       		.byte	0
 8394 0034 65       		.byte	101
 8395 0035 00       		.byte	0
 8396 0036 66       		.byte	102
 8397 0037 00       		.byte	0
 8398 0038 68       		.byte	104
 8399 0039 00       		.byte	0
 8400 003a 69       		.byte	105
 8401 003b 00       		.byte	0
 8402 003c 6A       		.byte	106
 8403 003d 00       		.byte	0
 8404 003e 6B       		.byte	107
 8405 003f 00       		.byte	0
 8406 0040 6C       		.byte	108
 8407 0041 00       		.byte	0
 8408 0042 FF       		.byte	-1
ARM GAS  /tmp/ccSTfybG.s 			page 241


 8409 0043 FF       		.byte	-1
 8410              		.section	.rodata.TP2824C_DataSet,"a",%progbits
 8411              		.align	2
 8412              		.set	.LANCHOR15,. + 0
 8415              	TP2824C_DataSet:
 8416 0000 40       		.byte	64
 8417 0001 04       		.byte	4
 8418 0002 07       		.byte	7
 8419 0003 C0       		.byte	-64
 8420 0004 0B       		.byte	11
 8421 0005 C0       		.byte	-64
 8422 0006 21       		.byte	33
 8423 0007 84       		.byte	-124
 8424 0008 38       		.byte	56
 8425 0009 00       		.byte	0
 8426 000a 3A       		.byte	58
 8427 000b 22       		.byte	34
 8428 000c 3B       		.byte	59
 8429 000d 05       		.byte	5
 8430 000e 26       		.byte	38
 8431 000f 04       		.byte	4
 8432 0010 4D       		.byte	77
 8433 0011 0F       		.byte	15
 8434 0012 4E       		.byte	78
 8435 0013 0F       		.byte	15
 8436 0014 F1       		.byte	-15
 8437 0015 00       		.byte	0
 8438 0016 FF       		.byte	-1
 8439 0017 FF       		.byte	-1
 8440              		.section	.rodata.TP2824C_HDA_DataSet,"a",%progbits
 8441              		.align	2
 8442              		.set	.LANCHOR11,. + 0
 8445              	TP2824C_HDA_DataSet:
 8446 0000 0C       		.byte	12
 8447 0001 20       		.byte	32
 8448 0002 2B       		.byte	43
 8449 0003 2D       		.byte	45
 8450 0004 2E       		.byte	46
 8451 0005 30       		.byte	48
 8452 0006 31       		.byte	49
 8453 0007 32       		.byte	50
 8454 0008 33       		.byte	51
 8455 0009 21       		.byte	33
 8456 000a 25       		.byte	37
 8457 000b 10       		.byte	16
 8458 000c 11       		.byte	17
 8459 000d 12       		.byte	18
 8460 000e 14       		.byte	20
 8461 000f FF       		.byte	-1
 8462 0010 03       		.byte	3
 8463 0011 40       		.byte	64
 8464 0012 60       		.byte	96
 8465 0013 48       		.byte	72
 8466 0014 40       		.byte	64
 8467 0015 27       		.byte	39
 8468 0016 72       		.byte	114
 8469 0017 80       		.byte	-128
ARM GAS  /tmp/ccSTfybG.s 			page 242


 8470 0018 77       		.byte	119
 8471 0019 46       		.byte	70
 8472 001a FE       		.byte	-2
 8473 001b 50       		.byte	80
 8474 001c 50       		.byte	80
 8475 001d 40       		.byte	64
 8476 001e 4A       		.byte	74
 8477 001f FF       		.byte	-1
 8478 0020 03       		.byte	3
 8479 0021 40       		.byte	64
 8480 0022 60       		.byte	96
 8481 0023 48       		.byte	72
 8482 0024 40       		.byte	64
 8483 0025 27       		.byte	39
 8484 0026 88       		.byte	-120
 8485 0027 04       		.byte	4
 8486 0028 23       		.byte	35
 8487 0029 46       		.byte	70
 8488 002a FE       		.byte	-2
 8489 002b 50       		.byte	80
 8490 002c 50       		.byte	80
 8491 002d 40       		.byte	64
 8492 002e 4A       		.byte	74
 8493 002f FF       		.byte	-1
 8494 0030 03       		.byte	3
 8495 0031 38       		.byte	56
 8496 0032 60       		.byte	96
 8497 0033 44       		.byte	68
 8498 0034 40       		.byte	64
 8499 0035 29       		.byte	41
 8500 0036 65       		.byte	101
 8501 0037 78       		.byte	120
 8502 0038 16       		.byte	22
 8503 0039 46       		.byte	70
 8504 003a FE       		.byte	-2
 8505 003b 50       		.byte	80
 8506 003c 50       		.byte	80
 8507 003d 40       		.byte	64
 8508 003e 4A       		.byte	74
 8509 003f FF       		.byte	-1
 8510 0040 03       		.byte	3
 8511 0041 3C       		.byte	60
 8512 0042 60       		.byte	96
 8513 0043 44       		.byte	68
 8514 0044 40       		.byte	64
 8515 0045 29       		.byte	41
 8516 0046 61       		.byte	97
 8517 0047 78       		.byte	120
 8518 0048 16       		.byte	22
 8519 0049 46       		.byte	70
 8520 004a FE       		.byte	-2
 8521 004b 50       		.byte	80
 8522 004c 50       		.byte	80
 8523 004d 40       		.byte	64
 8524 004e 4A       		.byte	74
 8525 004f FF       		.byte	-1
 8526              		.section	.rodata.TP2824C_HDC_DataSet,"a",%progbits
ARM GAS  /tmp/ccSTfybG.s 			page 243


 8527              		.align	2
 8528              		.set	.LANCHOR14,. + 0
 8531              	TP2824C_HDC_DataSet:
 8532 0000 0C       		.byte	12
 8533 0001 15       		.byte	21
 8534 0002 16       		.byte	22
 8535 0003 17       		.byte	23
 8536 0004 18       		.byte	24
 8537 0005 19       		.byte	25
 8538 0006 1A       		.byte	26
 8539 0007 1C       		.byte	28
 8540 0008 1D       		.byte	29
 8541 0009 20       		.byte	32
 8542 000a 2B       		.byte	43
 8543 000b 2D       		.byte	45
 8544 000c 2E       		.byte	46
 8545 000d 30       		.byte	48
 8546 000e 31       		.byte	49
 8547 000f 32       		.byte	50
 8548 0010 33       		.byte	51
 8549 0011 27       		.byte	39
 8550 0012 28       		.byte	40
 8551 0013 FF       		.byte	-1
 8552 0014 03       		.byte	3
 8553 0015 13       		.byte	19
 8554 0016 08       		.byte	8
 8555 0017 00       		.byte	0
 8556 0018 19       		.byte	25
 8557 0019 D0       		.byte	-48
 8558 001a 25       		.byte	37
 8559 001b 06       		.byte	6
 8560 001c 72       		.byte	114
 8561 001d 30       		.byte	48
 8562 001e 60       		.byte	96
 8563 001f 37       		.byte	55
 8564 0020 40       		.byte	64
 8565 0021 48       		.byte	72
 8566 0022 67       		.byte	103
 8567 0023 6F       		.byte	111
 8568 0024 30       		.byte	48
 8569 0025 5A       		.byte	90
 8570 0026 04       		.byte	4
 8571 0027 FF       		.byte	-1
 8572 0028 03       		.byte	3
 8573 0029 13       		.byte	19
 8574 002a 0A       		.byte	10
 8575 002b 00       		.byte	0
 8576 002c 19       		.byte	25
 8577 002d D0       		.byte	-48
 8578 002e 25       		.byte	37
 8579 002f 06       		.byte	6
 8580 0030 7A       		.byte	122
 8581 0031 3A       		.byte	58
 8582 0032 60       		.byte	96
 8583 0033 42       		.byte	66
 8584 0034 40       		.byte	64
 8585 0035 48       		.byte	72
ARM GAS  /tmp/ccSTfybG.s 			page 244


 8586 0036 67       		.byte	103
 8587 0037 6F       		.byte	111
 8588 0038 33       		.byte	51
 8589 0039 5A       		.byte	90
 8590 003a 04       		.byte	4
 8591 003b FF       		.byte	-1
 8592 003c 03       		.byte	3
 8593 003d 13       		.byte	19
 8594 003e 60       		.byte	96
 8595 003f 80       		.byte	-128
 8596 0040 29       		.byte	41
 8597 0041 38       		.byte	56
 8598 0042 47       		.byte	71
 8599 0043 09       		.byte	9
 8600 0044 60       		.byte	96
 8601 0045 3C       		.byte	60
 8602 0046 60       		.byte	96
 8603 0047 47       		.byte	71
 8604 0048 40       		.byte	64
 8605 0049 41       		.byte	65
 8606 004a 82       		.byte	-126
 8607 004b 27       		.byte	39
 8608 004c A4       		.byte	-92
 8609 004d 5A       		.byte	90
 8610 004e 04       		.byte	4
 8611 004f FF       		.byte	-1
 8612 0050 03       		.byte	3
 8613 0051 13       		.byte	19
 8614 0052 60       		.byte	96
 8615 0053 80       		.byte	-128
 8616 0054 29       		.byte	41
 8617 0055 38       		.byte	56
 8618 0056 47       		.byte	71
 8619 0057 09       		.byte	9
 8620 0058 60       		.byte	96
 8621 0059 50       		.byte	80
 8622 005a 60       		.byte	96
 8623 005b 54       		.byte	84
 8624 005c 40       		.byte	64
 8625 005d 41       		.byte	65
 8626 005e 82       		.byte	-126
 8627 005f 27       		.byte	39
 8628 0060 A2       		.byte	-94
 8629 0061 5A       		.byte	90
 8630 0062 04       		.byte	4
 8631 0063 FF       		.byte	-1
 8632              		.section	.rodata.TP2824C_MODE_DataSet,"a",%progbits
 8633              		.align	2
 8634              		.set	.LANCHOR7,. + 0
 8637              	TP2824C_MODE_DataSet:
 8638 0000 0C       		.byte	12
 8639 0001 0D       		.byte	13
 8640 0002 20       		.byte	32
 8641 0003 26       		.byte	38
 8642 0004 2B       		.byte	43
 8643 0005 2D       		.byte	45
 8644 0006 2E       		.byte	46
ARM GAS  /tmp/ccSTfybG.s 			page 245


 8645 0007 30       		.byte	48
 8646 0008 31       		.byte	49
 8647 0009 32       		.byte	50
 8648 000a 33       		.byte	51
 8649 000b 39       		.byte	57
 8650 000c 2C       		.byte	44
 8651 000d 21       		.byte	33
 8652 000e 22       		.byte	34
 8653 000f 23       		.byte	35
 8654 0010 25       		.byte	37
 8655 0011 27       		.byte	39
 8656 0012 28       		.byte	40
 8657 0013 10       		.byte	16
 8658 0014 11       		.byte	17
 8659 0015 12       		.byte	18
 8660 0016 FF       		.byte	-1
 8661 0017 03       		.byte	3
 8662 0018 50       		.byte	80
 8663 0019 30       		.byte	48
 8664 001a 05       		.byte	5
 8665 001b 60       		.byte	96
 8666 001c 30       		.byte	48
 8667 001d 70       		.byte	112
 8668 001e 48       		.byte	72
 8669 001f BB       		.byte	-69
 8670 0020 2E       		.byte	46
 8671 0021 90       		.byte	-112
 8672 0022 1C       		.byte	28
 8673 0023 0A       		.byte	10
 8674 0024 84       		.byte	-124
 8675 0025 36       		.byte	54
 8676 0026 3C       		.byte	60
 8677 0027 FF       		.byte	-1
 8678 0028 2D       		.byte	45
 8679 0029 00       		.byte	0
 8680 002a 00       		.byte	0
 8681 002b 40       		.byte	64
 8682 002c 40       		.byte	64
 8683 002d FF       		.byte	-1
 8684 002e 13       		.byte	19
 8685 002f 50       		.byte	80
 8686 0030 30       		.byte	48
 8687 0031 05       		.byte	5
 8688 0032 60       		.byte	96
 8689 0033 30       		.byte	48
 8690 0034 70       		.byte	112
 8691 0035 48       		.byte	72
 8692 0036 BB       		.byte	-69
 8693 0037 2E       		.byte	46
 8694 0038 90       		.byte	-112
 8695 0039 18       		.byte	24
 8696 003a 0A       		.byte	10
 8697 003b 84       		.byte	-124
 8698 003c 36       		.byte	54
 8699 003d 3C       		.byte	60
 8700 003e FF       		.byte	-1
 8701 003f 2D       		.byte	45
ARM GAS  /tmp/ccSTfybG.s 			page 246


 8702 0040 00       		.byte	0
 8703 0041 00       		.byte	0
 8704 0042 40       		.byte	64
 8705 0043 40       		.byte	64
 8706 0044 FF       		.byte	-1
 8707 0045 13       		.byte	19
 8708 0046 50       		.byte	80
 8709 0047 40       		.byte	64
 8710 0048 05       		.byte	5
 8711 0049 70       		.byte	112
 8712 004a 68       		.byte	104
 8713 004b 5E       		.byte	94
 8714 004c 62       		.byte	98
 8715 004d BB       		.byte	-69
 8716 004e 96       		.byte	-106
 8717 004f C0       		.byte	-64
 8718 0050 04       		.byte	4
 8719 0051 2A       		.byte	42
 8720 0052 84       		.byte	-124
 8721 0053 36       		.byte	54
 8722 0054 3C       		.byte	60
 8723 0055 FF       		.byte	-1
 8724 0056 2D       		.byte	45
 8725 0057 00       		.byte	0
 8726 0058 50       		.byte	80
 8727 0059 53       		.byte	83
 8728 005a 40       		.byte	64
 8729 005b FF       		.byte	-1
 8730 005c 13       		.byte	19
 8731 005d 51       		.byte	81
 8732 005e 48       		.byte	72
 8733 005f 05       		.byte	5
 8734 0060 70       		.byte	112
 8735 0061 60       		.byte	96
 8736 0062 5E       		.byte	94
 8737 0063 7A       		.byte	122
 8738 0064 4A       		.byte	74
 8739 0065 4D       		.byte	77
 8740 0066 F0       		.byte	-16
 8741 0067 04       		.byte	4
 8742 0068 2A       		.byte	42
 8743 0069 84       		.byte	-124
 8744 006a 37       		.byte	55
 8745 006b 3F       		.byte	63
 8746 006c FF       		.byte	-1
 8747 006d 2D       		.byte	45
 8748 006e 00       		.byte	0
 8749 006f 00       		.byte	0
 8750 0070 40       		.byte	64
 8751 0071 40       		.byte	64
 8752 0072 FF       		.byte	-1
 8753              		.section	.rodata.TP2824C_TVI_FHD_PTZ_DataSet,"a",%progbits
 8754              		.align	2
 8755              		.set	.LANCHOR32,. + 0
 8758              	TP2824C_TVI_FHD_PTZ_DataSet:
 8759 0000 C0       		.byte	-64
 8760 0001 00       		.byte	0
ARM GAS  /tmp/ccSTfybG.s 			page 247


 8761 0002 C2       		.byte	-62
 8762 0003 0B       		.byte	11
 8763 0004 C3       		.byte	-61
 8764 0005 0C       		.byte	12
 8765 0006 C1       		.byte	-63
 8766 0007 00       		.byte	0
 8767 0008 C4       		.byte	-60
 8768 0009 00       		.byte	0
 8769 000a C5       		.byte	-59
 8770 000b 00       		.byte	0
 8771 000c C6       		.byte	-58
 8772 000d 33       		.byte	51
 8773 000e C7       		.byte	-57
 8774 000f 78       		.byte	120
 8775 0010 C8       		.byte	-56
 8776 0011 21       		.byte	33
 8777 0012 6F       		.byte	111
 8778 0013 40       		.byte	64
 8779 0014 70       		.byte	112
 8780 0015 00       		.byte	0
 8781 0016 55       		.byte	85
 8782 0017 00       		.byte	0
 8783 0018 56       		.byte	86
 8784 0019 02       		.byte	2
 8785 001a 57       		.byte	87
 8786 001b B5       		.byte	-75
 8787 001c 58       		.byte	88
 8788 001d 01       		.byte	1
 8789 001e 59       		.byte	89
 8790 001f 17       		.byte	23
 8791 0020 5A       		.byte	90
 8792 0021 01       		.byte	1
 8793 0022 5B       		.byte	91
 8794 0023 00       		.byte	0
 8795 0024 5C       		.byte	92
 8796 0025 02       		.byte	2
 8797 0026 5D       		.byte	93
 8798 0027 00       		.byte	0
 8799 0028 5E       		.byte	94
 8800 0029 00       		.byte	0
 8801 002a 5F       		.byte	95
 8802 002b 00       		.byte	0
 8803 002c 60       		.byte	96
 8804 002d CE       		.byte	-50
 8805 002e CB       		.byte	-53
 8806 002f 07       		.byte	7
 8807 0030 CC       		.byte	-52
 8808 0031 08       		.byte	8
 8809 0032 CD       		.byte	-51
 8810 0033 00       		.byte	0
 8811 0034 CE       		.byte	-50
 8812 0035 00       		.byte	0
 8813 0036 CF       		.byte	-49
 8814 0037 04       		.byte	4
 8815 0038 D0       		.byte	-48
 8816 0039 00       		.byte	0
 8817 003a D1       		.byte	-47
ARM GAS  /tmp/ccSTfybG.s 			page 248


 8818 003b 00       		.byte	0
 8819 003c D2       		.byte	-46
 8820 003d 60       		.byte	96
 8821 003e D3       		.byte	-45
 8822 003f 10       		.byte	16
 8823 0040 D4       		.byte	-44
 8824 0041 06       		.byte	6
 8825 0042 D5       		.byte	-43
 8826 0043 BE       		.byte	-66
 8827 0044 D6       		.byte	-42
 8828 0045 39       		.byte	57
 8829 0046 D7       		.byte	-41
 8830 0047 21       		.byte	33
 8831 0048 A7       		.byte	-89
 8832 0049 00       		.byte	0
 8833 004a FF       		.byte	-1
 8834 004b FF       		.byte	-1
 8835              		.section	.rodata.TP2826_DataSet,"a",%progbits
 8836              		.align	2
 8837              		.set	.LANCHOR20,. + 0
 8840              	TP2826_DataSet:
 8841 0000 40       		.byte	64
 8842 0001 04       		.byte	4
 8843 0002 07       		.byte	7
 8844 0003 C0       		.byte	-64
 8845 0004 0B       		.byte	11
 8846 0005 C0       		.byte	-64
 8847 0006 21       		.byte	33
 8848 0007 84       		.byte	-124
 8849 0008 38       		.byte	56
 8850 0009 00       		.byte	0
 8851 000a 3A       		.byte	58
 8852 000b 22       		.byte	34
 8853 000c 3B       		.byte	59
 8854 000d 05       		.byte	5
 8855 000e 26       		.byte	38
 8856 000f 04       		.byte	4
 8857 0010 4D       		.byte	77
 8858 0011 07       		.byte	7
 8859 0012 4E       		.byte	78
 8860 0013 05       		.byte	5
 8861 0014 F1       		.byte	-15
 8862 0015 07       		.byte	7
 8863 0016 FF       		.byte	-1
 8864 0017 FF       		.byte	-1
 8865              		.section	.rodata.TP2826_HDA_DataSet,"a",%progbits
 8866              		.align	2
 8867              		.set	.LANCHOR10,. + 0
 8870              	TP2826_HDA_DataSet:
 8871 0000 0C       		.byte	12
 8872 0001 20       		.byte	32
 8873 0002 2B       		.byte	43
 8874 0003 2D       		.byte	45
 8875 0004 2E       		.byte	46
 8876 0005 30       		.byte	48
 8877 0006 31       		.byte	49
 8878 0007 32       		.byte	50
ARM GAS  /tmp/ccSTfybG.s 			page 249


 8879 0008 33       		.byte	51
 8880 0009 21       		.byte	33
 8881 000a 25       		.byte	37
 8882 000b FF       		.byte	-1
 8883 000c 03       		.byte	3
 8884 000d 40       		.byte	64
 8885 000e 60       		.byte	96
 8886 000f 48       		.byte	72
 8887 0010 40       		.byte	64
 8888 0011 27       		.byte	39
 8889 0012 72       		.byte	114
 8890 0013 80       		.byte	-128
 8891 0014 77       		.byte	119
 8892 0015 46       		.byte	70
 8893 0016 FE       		.byte	-2
 8894 0017 FF       		.byte	-1
 8895 0018 03       		.byte	3
 8896 0019 40       		.byte	64
 8897 001a 60       		.byte	96
 8898 001b 48       		.byte	72
 8899 001c 40       		.byte	64
 8900 001d 27       		.byte	39
 8901 001e 88       		.byte	-120
 8902 001f 04       		.byte	4
 8903 0020 23       		.byte	35
 8904 0021 46       		.byte	70
 8905 0022 FE       		.byte	-2
 8906 0023 FF       		.byte	-1
 8907 0024 03       		.byte	3
 8908 0025 38       		.byte	56
 8909 0026 60       		.byte	96
 8910 0027 44       		.byte	68
 8911 0028 40       		.byte	64
 8912 0029 29       		.byte	41
 8913 002a 65       		.byte	101
 8914 002b 78       		.byte	120
 8915 002c 16       		.byte	22
 8916 002d 46       		.byte	70
 8917 002e FE       		.byte	-2
 8918 002f FF       		.byte	-1
 8919 0030 03       		.byte	3
 8920 0031 3C       		.byte	60
 8921 0032 60       		.byte	96
 8922 0033 44       		.byte	68
 8923 0034 40       		.byte	64
 8924 0035 29       		.byte	41
 8925 0036 61       		.byte	97
 8926 0037 78       		.byte	120
 8927 0038 16       		.byte	22
 8928 0039 46       		.byte	70
 8929 003a FE       		.byte	-2
 8930 003b FF       		.byte	-1
 8931              		.section	.rodata.TP2826_HDC_DataSet,"a",%progbits
 8932              		.align	2
 8933              		.set	.LANCHOR13,. + 0
 8936              	TP2826_HDC_DataSet:
 8937 0000 0C       		.byte	12
ARM GAS  /tmp/ccSTfybG.s 			page 250


 8938 0001 15       		.byte	21
 8939 0002 16       		.byte	22
 8940 0003 17       		.byte	23
 8941 0004 18       		.byte	24
 8942 0005 19       		.byte	25
 8943 0006 1A       		.byte	26
 8944 0007 1C       		.byte	28
 8945 0008 1D       		.byte	29
 8946 0009 20       		.byte	32
 8947 000a 2B       		.byte	43
 8948 000b 2D       		.byte	45
 8949 000c 2E       		.byte	46
 8950 000d 30       		.byte	48
 8951 000e 31       		.byte	49
 8952 000f 32       		.byte	50
 8953 0010 33       		.byte	51
 8954 0011 27       		.byte	39
 8955 0012 28       		.byte	40
 8956 0013 FF       		.byte	-1
 8957 0014 03       		.byte	3
 8958 0015 13       		.byte	19
 8959 0016 08       		.byte	8
 8960 0017 00       		.byte	0
 8961 0018 19       		.byte	25
 8962 0019 D0       		.byte	-48
 8963 001a 25       		.byte	37
 8964 001b 06       		.byte	6
 8965 001c 72       		.byte	114
 8966 001d 30       		.byte	48
 8967 001e 60       		.byte	96
 8968 001f 37       		.byte	55
 8969 0020 40       		.byte	64
 8970 0021 48       		.byte	72
 8971 0022 67       		.byte	103
 8972 0023 6F       		.byte	111
 8973 0024 30       		.byte	48
 8974 0025 5A       		.byte	90
 8975 0026 04       		.byte	4
 8976 0027 FF       		.byte	-1
 8977 0028 03       		.byte	3
 8978 0029 13       		.byte	19
 8979 002a 0A       		.byte	10
 8980 002b 00       		.byte	0
 8981 002c 19       		.byte	25
 8982 002d D0       		.byte	-48
 8983 002e 25       		.byte	37
 8984 002f 06       		.byte	6
 8985 0030 7A       		.byte	122
 8986 0031 3A       		.byte	58
 8987 0032 60       		.byte	96
 8988 0033 42       		.byte	66
 8989 0034 40       		.byte	64
 8990 0035 48       		.byte	72
 8991 0036 67       		.byte	103
 8992 0037 6F       		.byte	111
 8993 0038 33       		.byte	51
 8994 0039 5A       		.byte	90
ARM GAS  /tmp/ccSTfybG.s 			page 251


 8995 003a 04       		.byte	4
 8996 003b FF       		.byte	-1
 8997 003c 03       		.byte	3
 8998 003d 13       		.byte	19
 8999 003e 60       		.byte	96
 9000 003f 80       		.byte	-128
 9001 0040 29       		.byte	41
 9002 0041 38       		.byte	56
 9003 0042 47       		.byte	71
 9004 0043 09       		.byte	9
 9005 0044 60       		.byte	96
 9006 0045 3C       		.byte	60
 9007 0046 60       		.byte	96
 9008 0047 47       		.byte	71
 9009 0048 40       		.byte	64
 9010 0049 41       		.byte	65
 9011 004a 82       		.byte	-126
 9012 004b 27       		.byte	39
 9013 004c A4       		.byte	-92
 9014 004d 5A       		.byte	90
 9015 004e 04       		.byte	4
 9016 004f FF       		.byte	-1
 9017 0050 03       		.byte	3
 9018 0051 13       		.byte	19
 9019 0052 60       		.byte	96
 9020 0053 80       		.byte	-128
 9021 0054 29       		.byte	41
 9022 0055 38       		.byte	56
 9023 0056 47       		.byte	71
 9024 0057 09       		.byte	9
 9025 0058 60       		.byte	96
 9026 0059 50       		.byte	80
 9027 005a 60       		.byte	96
 9028 005b 54       		.byte	84
 9029 005c 40       		.byte	64
 9030 005d 41       		.byte	65
 9031 005e 82       		.byte	-126
 9032 005f 27       		.byte	39
 9033 0060 A2       		.byte	-94
 9034 0061 5A       		.byte	90
 9035 0062 04       		.byte	4
 9036 0063 FF       		.byte	-1
 9037              		.section	.rodata.TP2826_MODE_DataSet,"a",%progbits
 9038              		.align	2
 9039              		.set	.LANCHOR6,. + 0
 9042              	TP2826_MODE_DataSet:
 9043 0000 0C       		.byte	12
 9044 0001 0D       		.byte	13
 9045 0002 20       		.byte	32
 9046 0003 26       		.byte	38
 9047 0004 2B       		.byte	43
 9048 0005 2D       		.byte	45
 9049 0006 2E       		.byte	46
 9050 0007 30       		.byte	48
 9051 0008 31       		.byte	49
 9052 0009 32       		.byte	50
 9053 000a 33       		.byte	51
ARM GAS  /tmp/ccSTfybG.s 			page 252


 9054 000b 39       		.byte	57
 9055 000c 2C       		.byte	44
 9056 000d 21       		.byte	33
 9057 000e 22       		.byte	34
 9058 000f 23       		.byte	35
 9059 0010 25       		.byte	37
 9060 0011 27       		.byte	39
 9061 0012 28       		.byte	40
 9062 0013 FF       		.byte	-1
 9063 0014 03       		.byte	3
 9064 0015 50       		.byte	80
 9065 0016 30       		.byte	48
 9066 0017 05       		.byte	5
 9067 0018 60       		.byte	96
 9068 0019 30       		.byte	48
 9069 001a 70       		.byte	112
 9070 001b 48       		.byte	72
 9071 001c BB       		.byte	-69
 9072 001d 2E       		.byte	46
 9073 001e 90       		.byte	-112
 9074 001f 1C       		.byte	28
 9075 0020 0A       		.byte	10
 9076 0021 84       		.byte	-124
 9077 0022 36       		.byte	54
 9078 0023 3C       		.byte	60
 9079 0024 FF       		.byte	-1
 9080 0025 2D       		.byte	45
 9081 0026 00       		.byte	0
 9082 0027 FF       		.byte	-1
 9083 0028 13       		.byte	19
 9084 0029 50       		.byte	80
 9085 002a 30       		.byte	48
 9086 002b 05       		.byte	5
 9087 002c 60       		.byte	96
 9088 002d 30       		.byte	48
 9089 002e 70       		.byte	112
 9090 002f 48       		.byte	72
 9091 0030 BB       		.byte	-69
 9092 0031 2E       		.byte	46
 9093 0032 90       		.byte	-112
 9094 0033 18       		.byte	24
 9095 0034 0A       		.byte	10
 9096 0035 84       		.byte	-124
 9097 0036 36       		.byte	54
 9098 0037 3C       		.byte	60
 9099 0038 FF       		.byte	-1
 9100 0039 2D       		.byte	45
 9101 003a 00       		.byte	0
 9102 003b FF       		.byte	-1
 9103 003c 13       		.byte	19
 9104 003d 50       		.byte	80
 9105 003e 40       		.byte	64
 9106 003f 05       		.byte	5
 9107 0040 70       		.byte	112
 9108 0041 68       		.byte	104
 9109 0042 5E       		.byte	94
 9110 0043 62       		.byte	98
ARM GAS  /tmp/ccSTfybG.s 			page 253


 9111 0044 BB       		.byte	-69
 9112 0045 96       		.byte	-106
 9113 0046 C0       		.byte	-64
 9114 0047 04       		.byte	4
 9115 0048 2A       		.byte	42
 9116 0049 84       		.byte	-124
 9117 004a 36       		.byte	54
 9118 004b 3C       		.byte	60
 9119 004c FF       		.byte	-1
 9120 004d 2D       		.byte	45
 9121 004e 00       		.byte	0
 9122 004f FF       		.byte	-1
 9123 0050 13       		.byte	19
 9124 0051 51       		.byte	81
 9125 0052 48       		.byte	72
 9126 0053 05       		.byte	5
 9127 0054 70       		.byte	112
 9128 0055 60       		.byte	96
 9129 0056 5E       		.byte	94
 9130 0057 7A       		.byte	122
 9131 0058 4A       		.byte	74
 9132 0059 4D       		.byte	77
 9133 005a F0       		.byte	-16
 9134 005b 04       		.byte	4
 9135 005c 2A       		.byte	42
 9136 005d 84       		.byte	-124
 9137 005e 37       		.byte	55
 9138 005f 3F       		.byte	63
 9139 0060 FF       		.byte	-1
 9140 0061 2D       		.byte	45
 9141 0062 00       		.byte	0
 9142 0063 FF       		.byte	-1
 9143              		.section	.rodata.TP2833_DataSet,"a",%progbits
 9144              		.align	2
 9145              		.set	.LANCHOR19,. + 0
 9148              	TP2833_DataSet:
 9149 0000 40       		.byte	64
 9150 0001 04       		.byte	4
 9151 0002 07       		.byte	7
 9152 0003 C0       		.byte	-64
 9153 0004 0B       		.byte	11
 9154 0005 C0       		.byte	-64
 9155 0006 22       		.byte	34
 9156 0007 36       		.byte	54
 9157 0008 38       		.byte	56
 9158 0009 40       		.byte	64
 9159 000a 26       		.byte	38
 9160 000b 04       		.byte	4
 9161 000c 4D       		.byte	77
 9162 000d 03       		.byte	3
 9163 000e 4E       		.byte	78
 9164 000f 03       		.byte	3
 9165 0010 4F       		.byte	79
 9166 0011 01       		.byte	1
 9167 0012 FF       		.byte	-1
 9168 0013 FF       		.byte	-1
 9169              		.section	.rodata.TP2833_HDA_DataSet,"a",%progbits
ARM GAS  /tmp/ccSTfybG.s 			page 254


 9170              		.align	2
 9171              		.set	.LANCHOR9,. + 0
 9174              	TP2833_HDA_DataSet:
 9175 0000 2B       		.byte	43
 9176 0001 2D       		.byte	45
 9177 0002 2E       		.byte	46
 9178 0003 30       		.byte	48
 9179 0004 31       		.byte	49
 9180 0005 32       		.byte	50
 9181 0006 33       		.byte	51
 9182 0007 FF       		.byte	-1
 9183 0008 70       		.byte	112
 9184 0009 48       		.byte	72
 9185 000a 5E       		.byte	94
 9186 000b 27       		.byte	39
 9187 000c 72       		.byte	114
 9188 000d 80       		.byte	-128
 9189 000e 77       		.byte	119
 9190 000f FF       		.byte	-1
 9191 0010 70       		.byte	112
 9192 0011 48       		.byte	72
 9193 0012 5E       		.byte	94
 9194 0013 27       		.byte	39
 9195 0014 88       		.byte	-120
 9196 0015 04       		.byte	4
 9197 0016 23       		.byte	35
 9198 0017 FF       		.byte	-1
 9199 0018 58       		.byte	88
 9200 0019 45       		.byte	69
 9201 001a 50       		.byte	80
 9202 001b 29       		.byte	41
 9203 001c 65       		.byte	101
 9204 001d 78       		.byte	120
 9205 001e 16       		.byte	22
 9206 001f FF       		.byte	-1
 9207 0020 58       		.byte	88
 9208 0021 45       		.byte	69
 9209 0022 40       		.byte	64
 9210 0023 29       		.byte	41
 9211 0024 61       		.byte	97
 9212 0025 78       		.byte	120
 9213 0026 16       		.byte	22
 9214 0027 FF       		.byte	-1
 9215              		.section	.rodata.TP2833_MODE_DataSet,"a",%progbits
 9216              		.align	2
 9217              		.set	.LANCHOR4,. + 0
 9220              	TP2833_MODE_DataSet:
 9221 0000 0C       		.byte	12
 9222 0001 0D       		.byte	13
 9223 0002 20       		.byte	32
 9224 0003 26       		.byte	38
 9225 0004 2B       		.byte	43
 9226 0005 2D       		.byte	45
 9227 0006 2E       		.byte	46
 9228 0007 30       		.byte	48
 9229 0008 31       		.byte	49
 9230 0009 32       		.byte	50
ARM GAS  /tmp/ccSTfybG.s 			page 255


 9231 000a 33       		.byte	51
 9232 000b 39       		.byte	57
 9233 000c 18       		.byte	24
 9234 000d FF       		.byte	-1
 9235 000e 03       		.byte	3
 9236 000f 50       		.byte	80
 9237 0010 30       		.byte	48
 9238 0011 05       		.byte	5
 9239 0012 58       		.byte	88
 9240 0013 30       		.byte	48
 9241 0014 70       		.byte	112
 9242 0015 48       		.byte	72
 9243 0016 BB       		.byte	-69
 9244 0017 2E       		.byte	46
 9245 0018 90       		.byte	-112
 9246 0019 0C       		.byte	12
 9247 001a 12       		.byte	18
 9248 001b FF       		.byte	-1
 9249 001c 13       		.byte	19
 9250 001d 50       		.byte	80
 9251 001e 30       		.byte	48
 9252 001f 05       		.byte	5
 9253 0020 58       		.byte	88
 9254 0021 30       		.byte	48
 9255 0022 70       		.byte	112
 9256 0023 48       		.byte	72
 9257 0024 BB       		.byte	-69
 9258 0025 2E       		.byte	46
 9259 0026 90       		.byte	-112
 9260 0027 08       		.byte	8
 9261 0028 12       		.byte	18
 9262 0029 FF       		.byte	-1
 9263 002a 13       		.byte	19
 9264 002b 50       		.byte	80
 9265 002c 40       		.byte	64
 9266 002d 05       		.byte	5
 9267 002e 70       		.byte	112
 9268 002f 68       		.byte	104
 9269 0030 5E       		.byte	94
 9270 0031 62       		.byte	98
 9271 0032 BB       		.byte	-69
 9272 0033 96       		.byte	-106
 9273 0034 C0       		.byte	-64
 9274 0035 04       		.byte	4
 9275 0036 11       		.byte	17
 9276 0037 FF       		.byte	-1
 9277 0038 13       		.byte	19
 9278 0039 51       		.byte	81
 9279 003a 48       		.byte	72
 9280 003b 05       		.byte	5
 9281 003c 70       		.byte	112
 9282 003d 60       		.byte	96
 9283 003e 5E       		.byte	94
 9284 003f 7A       		.byte	122
 9285 0040 4A       		.byte	74
 9286 0041 4D       		.byte	77
 9287 0042 F0       		.byte	-16
ARM GAS  /tmp/ccSTfybG.s 			page 256


 9288 0043 04       		.byte	4
 9289 0044 11       		.byte	17
 9290 0045 FF       		.byte	-1
 9291              		.section	.rodata.TP2834_Audio_DataSet,"a",%progbits
 9292              		.align	2
 9293              		.set	.LANCHOR21,. + 0
 9296              	TP2834_Audio_DataSet:
 9297 0000 40       		.byte	64
 9298 0001 40       		.byte	64
 9299 0002 00       		.byte	0
 9300 0003 01       		.byte	1
 9301 0004 01       		.byte	1
 9302 0005 02       		.byte	2
 9303 0006 02       		.byte	2
 9304 0007 03       		.byte	3
 9305 0008 03       		.byte	3
 9306 0009 04       		.byte	4
 9307 000a 04       		.byte	4
 9308 000b 11       		.byte	17
 9309 000c 17       		.byte	23
 9310 000d 00       		.byte	0
 9311 000e 18       		.byte	24
 9312 000f 10       		.byte	16
 9313 0010 19       		.byte	25
 9314 0011 0F       		.byte	15
 9315 0012 1A       		.byte	26
 9316 0013 15       		.byte	21
 9317 0014 1B       		.byte	27
 9318 0015 01       		.byte	1
 9319 0016 37       		.byte	55
 9320 0017 20       		.byte	32
 9321 0018 1D       		.byte	29
 9322 0019 08       		.byte	8
 9323 001a 1D       		.byte	29
 9324 001b 00       		.byte	0
 9325 001c 3C       		.byte	60
 9326 001d 3F       		.byte	63
 9327 001e 3C       		.byte	60
 9328 001f 00       		.byte	0
 9329 0020 3D       		.byte	61
 9330 0021 01       		.byte	1
 9331 0022 FF       		.byte	-1
 9332 0023 FF       		.byte	-1
 9333              		.section	.rodata.TP2834_DataSet,"a",%progbits
 9334              		.align	2
 9335              		.set	.LANCHOR17,. + 0
 9338              	TP2834_DataSet:
 9339 0000 40       		.byte	64
 9340 0001 04       		.byte	4
 9341 0002 07       		.byte	7
 9342 0003 C0       		.byte	-64
 9343 0004 0B       		.byte	11
 9344 0005 C0       		.byte	-64
 9345 0006 3A       		.byte	58
 9346 0007 70       		.byte	112
 9347 0008 26       		.byte	38
 9348 0009 01       		.byte	1
ARM GAS  /tmp/ccSTfybG.s 			page 257


 9349 000a 4D       		.byte	77
 9350 000b 0F       		.byte	15
 9351 000c 4E       		.byte	78
 9352 000d 0F       		.byte	15
 9353 000e FF       		.byte	-1
 9354 000f FF       		.byte	-1
 9355              		.section	.rodata.TP2834_MODE_DataSet,"a",%progbits
 9356              		.align	2
 9357              		.set	.LANCHOR5,. + 0
 9360              	TP2834_MODE_DataSet:
 9361 0000 0C       		.byte	12
 9362 0001 0D       		.byte	13
 9363 0002 20       		.byte	32
 9364 0003 26       		.byte	38
 9365 0004 2B       		.byte	43
 9366 0005 2D       		.byte	45
 9367 0006 2E       		.byte	46
 9368 0007 30       		.byte	48
 9369 0008 31       		.byte	49
 9370 0009 32       		.byte	50
 9371 000a 33       		.byte	51
 9372 000b 39       		.byte	57
 9373 000c FF       		.byte	-1
 9374 000d 03       		.byte	3
 9375 000e 10       		.byte	16
 9376 000f 60       		.byte	96
 9377 0010 02       		.byte	2
 9378 0011 58       		.byte	88
 9379 0012 30       		.byte	48
 9380 0013 70       		.byte	112
 9381 0014 48       		.byte	72
 9382 0015 BB       		.byte	-69
 9383 0016 2E       		.byte	46
 9384 0017 90       		.byte	-112
 9385 0018 8C       		.byte	-116
 9386 0019 FF       		.byte	-1
 9387 001a 03       		.byte	3
 9388 001b 10       		.byte	16
 9389 001c 60       		.byte	96
 9390 001d 02       		.byte	2
 9391 001e 58       		.byte	88
 9392 001f 30       		.byte	48
 9393 0020 70       		.byte	112
 9394 0021 48       		.byte	72
 9395 0022 BB       		.byte	-69
 9396 0023 2E       		.byte	46
 9397 0024 90       		.byte	-112
 9398 0025 88       		.byte	-120
 9399 0026 FF       		.byte	-1
 9400 0027 43       		.byte	67
 9401 0028 10       		.byte	16
 9402 0029 A0       		.byte	-96
 9403 002a 12       		.byte	18
 9404 002b 70       		.byte	112
 9405 002c 68       		.byte	104
 9406 002d 5E       		.byte	94
 9407 002e 62       		.byte	98
ARM GAS  /tmp/ccSTfybG.s 			page 258


 9408 002f BB       		.byte	-69
 9409 0030 96       		.byte	-106
 9410 0031 C0       		.byte	-64
 9411 0032 84       		.byte	-124
 9412 0033 FF       		.byte	-1
 9413 0034 43       		.byte	67
 9414 0035 11       		.byte	17
 9415 0036 B0       		.byte	-80
 9416 0037 02       		.byte	2
 9417 0038 70       		.byte	112
 9418 0039 60       		.byte	96
 9419 003a 5E       		.byte	94
 9420 003b 7A       		.byte	122
 9421 003c 4A       		.byte	74
 9422 003d 4D       		.byte	77
 9423 003e F0       		.byte	-16
 9424 003f 84       		.byte	-124
 9425 0040 FF       		.byte	-1
 9426              		.section	.rodata.TP2853C_DataSet,"a",%progbits
 9427              		.align	2
 9428              		.set	.LANCHOR18,. + 0
 9431              	TP2853C_DataSet:
 9432 0000 40       		.byte	64
 9433 0001 04       		.byte	4
 9434 0002 07       		.byte	7
 9435 0003 C0       		.byte	-64
 9436 0004 0B       		.byte	11
 9437 0005 C0       		.byte	-64
 9438 0006 21       		.byte	33
 9439 0007 84       		.byte	-124
 9440 0008 38       		.byte	56
 9441 0009 00       		.byte	0
 9442 000a 3A       		.byte	58
 9443 000b 32       		.byte	50
 9444 000c 3B       		.byte	59
 9445 000d 05       		.byte	5
 9446 000e 26       		.byte	38
 9447 000f 04       		.byte	4
 9448 0010 4D       		.byte	77
 9449 0011 03       		.byte	3
 9450 0012 4E       		.byte	78
 9451 0013 03       		.byte	3
 9452 0014 4F       		.byte	79
 9453 0015 01       		.byte	1
 9454 0016 F5       		.byte	-11
 9455 0017 F0       		.byte	-16
 9456 0018 F1       		.byte	-15
 9457 0019 07       		.byte	7
 9458 001a FF       		.byte	-1
 9459 001b FF       		.byte	-1
 9460              		.section	.rodata.TP2853C_HDA_DataSet,"a",%progbits
 9461              		.align	2
 9462              		.set	.LANCHOR8,. + 0
 9465              	TP2853C_HDA_DataSet:
 9466 0000 2B       		.byte	43
 9467 0001 2D       		.byte	45
 9468 0002 2E       		.byte	46
ARM GAS  /tmp/ccSTfybG.s 			page 259


 9469 0003 30       		.byte	48
 9470 0004 31       		.byte	49
 9471 0005 32       		.byte	50
 9472 0006 33       		.byte	51
 9473 0007 21       		.byte	33
 9474 0008 25       		.byte	37
 9475 0009 FF       		.byte	-1
 9476 000a 70       		.byte	112
 9477 000b 48       		.byte	72
 9478 000c 5E       		.byte	94
 9479 000d 27       		.byte	39
 9480 000e 72       		.byte	114
 9481 000f 80       		.byte	-128
 9482 0010 77       		.byte	119
 9483 0011 44       		.byte	68
 9484 0012 F0       		.byte	-16
 9485 0013 FF       		.byte	-1
 9486 0014 70       		.byte	112
 9487 0015 48       		.byte	72
 9488 0016 5E       		.byte	94
 9489 0017 27       		.byte	39
 9490 0018 88       		.byte	-120
 9491 0019 04       		.byte	4
 9492 001a 23       		.byte	35
 9493 001b 44       		.byte	68
 9494 001c F0       		.byte	-16
 9495 001d FF       		.byte	-1
 9496 001e 58       		.byte	88
 9497 001f 45       		.byte	69
 9498 0020 50       		.byte	80
 9499 0021 29       		.byte	41
 9500 0022 65       		.byte	101
 9501 0023 78       		.byte	120
 9502 0024 16       		.byte	22
 9503 0025 44       		.byte	68
 9504 0026 F0       		.byte	-16
 9505 0027 FF       		.byte	-1
 9506 0028 58       		.byte	88
 9507 0029 45       		.byte	69
 9508 002a 40       		.byte	64
 9509 002b 29       		.byte	41
 9510 002c 61       		.byte	97
 9511 002d 78       		.byte	120
 9512 002e 16       		.byte	22
 9513 002f 44       		.byte	68
 9514 0030 F0       		.byte	-16
 9515 0031 FF       		.byte	-1
 9516              		.section	.rodata.TP2853C_HDC_DataSet,"a",%progbits
 9517              		.align	2
 9518              		.set	.LANCHOR12,. + 0
 9521              	TP2853C_HDC_DataSet:
 9522 0000 15       		.byte	21
 9523 0001 16       		.byte	22
 9524 0002 20       		.byte	32
 9525 0003 2B       		.byte	43
 9526 0004 2D       		.byte	45
 9527 0005 2E       		.byte	46
ARM GAS  /tmp/ccSTfybG.s 			page 260


 9528 0006 30       		.byte	48
 9529 0007 31       		.byte	49
 9530 0008 32       		.byte	50
 9531 0009 33       		.byte	51
 9532 000a 27       		.byte	39
 9533 000b 28       		.byte	40
 9534 000c FF       		.byte	-1
 9535 000d 13       		.byte	19
 9536 000e 40       		.byte	64
 9537 000f 50       		.byte	80
 9538 0010 60       		.byte	96
 9539 0011 42       		.byte	66
 9540 0012 40       		.byte	64
 9541 0013 48       		.byte	72
 9542 0014 67       		.byte	103
 9543 0015 2E       		.byte	46
 9544 0016 90       		.byte	-112
 9545 0017 5A       		.byte	90
 9546 0018 04       		.byte	4
 9547 0019 FF       		.byte	-1
 9548 001a 13       		.byte	19
 9549 001b 40       		.byte	64
 9550 001c 50       		.byte	80
 9551 001d 60       		.byte	96
 9552 001e 42       		.byte	66
 9553 001f 40       		.byte	64
 9554 0020 48       		.byte	72
 9555 0021 67       		.byte	103
 9556 0022 2E       		.byte	46
 9557 0023 90       		.byte	-112
 9558 0024 5A       		.byte	90
 9559 0025 04       		.byte	4
 9560 0026 FF       		.byte	-1
 9561 0027 13       		.byte	19
 9562 0028 20       		.byte	32
 9563 0029 48       		.byte	72
 9564 002a 60       		.byte	96
 9565 002b 45       		.byte	69
 9566 002c 40       		.byte	64
 9567 002d 41       		.byte	65
 9568 002e 83       		.byte	-125
 9569 002f 2E       		.byte	46
 9570 0030 90       		.byte	-112
 9571 0031 5A       		.byte	90
 9572 0032 04       		.byte	4
 9573 0033 FF       		.byte	-1
 9574 0034 13       		.byte	19
 9575 0035 84       		.byte	-124
 9576 0036 48       		.byte	72
 9577 0037 60       		.byte	96
 9578 0038 45       		.byte	69
 9579 0039 40       		.byte	64
 9580 003a 41       		.byte	65
 9581 003b 83       		.byte	-125
 9582 003c 2E       		.byte	46
 9583 003d 90       		.byte	-112
 9584 003e 5A       		.byte	90
ARM GAS  /tmp/ccSTfybG.s 			page 261


 9585 003f 04       		.byte	4
 9586 0040 FF       		.byte	-1
 9587              		.section	.rodata.TP2853C_MODE_DataSet,"a",%progbits
 9588              		.align	2
 9589              		.set	.LANCHOR3,. + 0
 9592              	TP2853C_MODE_DataSet:
 9593 0000 0C       		.byte	12
 9594 0001 0D       		.byte	13
 9595 0002 20       		.byte	32
 9596 0003 26       		.byte	38
 9597 0004 2B       		.byte	43
 9598 0005 2D       		.byte	45
 9599 0006 2E       		.byte	46
 9600 0007 30       		.byte	48
 9601 0008 31       		.byte	49
 9602 0009 32       		.byte	50
 9603 000a 33       		.byte	51
 9604 000b 39       		.byte	57
 9605 000c 2C       		.byte	44
 9606 000d 21       		.byte	33
 9607 000e 25       		.byte	37
 9608 000f 27       		.byte	39
 9609 0010 28       		.byte	40
 9610 0011 FF       		.byte	-1
 9611 0012 03       		.byte	3
 9612 0013 50       		.byte	80
 9613 0014 30       		.byte	48
 9614 0015 05       		.byte	5
 9615 0016 60       		.byte	96
 9616 0017 30       		.byte	48
 9617 0018 70       		.byte	112
 9618 0019 48       		.byte	72
 9619 001a BB       		.byte	-69
 9620 001b 2E       		.byte	46
 9621 001c 90       		.byte	-112
 9622 001d 0C       		.byte	12
 9623 001e 0A       		.byte	10
 9624 001f 84       		.byte	-124
 9625 0020 F0       		.byte	-16
 9626 0021 2D       		.byte	45
 9627 0022 00       		.byte	0
 9628 0023 FF       		.byte	-1
 9629 0024 13       		.byte	19
 9630 0025 50       		.byte	80
 9631 0026 30       		.byte	48
 9632 0027 05       		.byte	5
 9633 0028 60       		.byte	96
 9634 0029 30       		.byte	48
 9635 002a 70       		.byte	112
 9636 002b 48       		.byte	72
 9637 002c BB       		.byte	-69
 9638 002d 2E       		.byte	46
 9639 002e 90       		.byte	-112
 9640 002f 08       		.byte	8
 9641 0030 0A       		.byte	10
 9642 0031 84       		.byte	-124
 9643 0032 F0       		.byte	-16
ARM GAS  /tmp/ccSTfybG.s 			page 262


 9644 0033 2D       		.byte	45
 9645 0034 00       		.byte	0
 9646 0035 FF       		.byte	-1
 9647 0036 13       		.byte	19
 9648 0037 50       		.byte	80
 9649 0038 40       		.byte	64
 9650 0039 05       		.byte	5
 9651 003a 70       		.byte	112
 9652 003b 68       		.byte	104
 9653 003c 5E       		.byte	94
 9654 003d 62       		.byte	98
 9655 003e BB       		.byte	-69
 9656 003f 96       		.byte	-106
 9657 0040 C0       		.byte	-64
 9658 0041 04       		.byte	4
 9659 0042 2A       		.byte	42
 9660 0043 84       		.byte	-124
 9661 0044 F0       		.byte	-16
 9662 0045 2D       		.byte	45
 9663 0046 00       		.byte	0
 9664 0047 FF       		.byte	-1
 9665 0048 13       		.byte	19
 9666 0049 51       		.byte	81
 9667 004a 48       		.byte	72
 9668 004b 05       		.byte	5
 9669 004c 70       		.byte	112
 9670 004d 60       		.byte	96
 9671 004e 5E       		.byte	94
 9672 004f 7A       		.byte	122
 9673 0050 4A       		.byte	74
 9674 0051 4D       		.byte	77
 9675 0052 F0       		.byte	-16
 9676 0053 04       		.byte	4
 9677 0054 2A       		.byte	42
 9678 0055 84       		.byte	-124
 9679 0056 F0       		.byte	-16
 9680 0057 2D       		.byte	45
 9681 0058 00       		.byte	0
 9682 0059 FF       		.byte	-1
 9683              		.text
 9684              	.Letext0:
 9685              		.file 2 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_
 9686              		.file 3 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 9687              		.file 4 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 9688              		.file 5 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 9689              		.file 6 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 9690              		.file 7 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 9691              		.file 8 "VS4210/VXIS_Extern_Define.h"
 9692              		.file 9 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 9693              		.file 10 "TP2824/tpinc/TP2802.h"
 9694              		.file 11 "sw_i2c/VX_swi2c.h"
 9695              		.file 12 "VS4210/VS4210.h"
 9696              		.file 13 "Drivers/CMSIS/Include/core_cm3.h"
 9697              		.file 14 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 9698              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 9699              		.file 16 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdio.h"
 9700              		.file 17 "VS4210/Printf.h"
ARM GAS  /tmp/ccSTfybG.s 			page 263


 9701              		.file 18 "VS4210/keyremo.h"
 9702              		.file 19 "<built-in>"
ARM GAS  /tmp/ccSTfybG.s 			page 264


DEFINED SYMBOLS
                            *ABS*:0000000000000000 TP2802.c
     /tmp/ccSTfybG.s:16     .text.tp2824_reset_default:0000000000000000 $t
     /tmp/ccSTfybG.s:22     .text.tp2824_reset_default:0000000000000000 tp2824_reset_default
     /tmp/ccSTfybG.s:45     .text.tp28xx_SYSCLK_V1:0000000000000000 $t
     /tmp/ccSTfybG.s:51     .text.tp28xx_SYSCLK_V1:0000000000000000 tp28xx_SYSCLK_V1
     /tmp/ccSTfybG.s:94     .text.tp28xx_SYSCLK_V1:0000000000000028 $d
     /tmp/ccSTfybG.s:99     .text.tp28xx_SYSCLK_V2:0000000000000000 $t
     /tmp/ccSTfybG.s:105    .text.tp28xx_SYSCLK_V2:0000000000000000 tp28xx_SYSCLK_V2
     /tmp/ccSTfybG.s:150    .text.tp28xx_SYSCLK_V2:000000000000002c $d
     /tmp/ccSTfybG.s:155    .text.tp2853C_reset_default:0000000000000000 $t
     /tmp/ccSTfybG.s:161    .text.tp2853C_reset_default:0000000000000000 tp2853C_reset_default
     /tmp/ccSTfybG.s:208    .text.TP28xx_reset_default:0000000000000000 $t
     /tmp/ccSTfybG.s:214    .text.TP28xx_reset_default:0000000000000000 TP28xx_reset_default
     /tmp/ccSTfybG.s:263    .text.I2CDeviceSet1:0000000000000000 $t
     /tmp/ccSTfybG.s:270    .text.I2CDeviceSet1:0000000000000000 I2CDeviceSet1
     /tmp/ccSTfybG.s:310    .text.I2CDeviceSet2:0000000000000000 $t
     /tmp/ccSTfybG.s:317    .text.I2CDeviceSet2:0000000000000000 I2CDeviceSet2
     /tmp/ccSTfybG.s:361    .text.SetRegPage:0000000000000000 $t
     /tmp/ccSTfybG.s:368    .text.SetRegPage:0000000000000000 SetRegPage
     /tmp/ccSTfybG.s:392    .text.Set_VidRes:0000000000000000 $t
     /tmp/ccSTfybG.s:399    .text.Set_VidRes:0000000000000000 Set_VidRes
     /tmp/ccSTfybG.s:422    .text.Set_VidRes:0000000000000012 $d
     /tmp/ccSTfybG.s:461    .text.Set_VidRes:0000000000000060 $t
     /tmp/ccSTfybG.s:888    .text.Set_VidRes:0000000000000278 $d
                            *COM*:0000000000000001 mode
                            *COM*:0000000000000001 ManVidResRx
                            *COM*:0000000000000001 chip
     /tmp/ccSTfybG.s:921    .text.Set_HDA:0000000000000000 $t
     /tmp/ccSTfybG.s:928    .text.Set_HDA:0000000000000000 Set_HDA
     /tmp/ccSTfybG.s:948    .text.Set_HDA:000000000000000e $d
     /tmp/ccSTfybG.s:962    .text.Set_HDA:000000000000001c $t
     /tmp/ccSTfybG.s:1051   .text.Set_HDA:0000000000000090 $d
     /tmp/ccSTfybG.s:1061   .text.Set_HDC:0000000000000000 $t
     /tmp/ccSTfybG.s:1068   .text.Set_HDC:0000000000000000 Set_HDC
     /tmp/ccSTfybG.s:1088   .text.Set_HDC:000000000000000e $d
     /tmp/ccSTfybG.s:1102   .text.Set_HDC:000000000000001c $t
     /tmp/ccSTfybG.s:1196   .text.Set_HDC:000000000000009c $d
     /tmp/ccSTfybG.s:1205   .text.Det_VidRes:0000000000000000 $t
     /tmp/ccSTfybG.s:1212   .text.Det_VidRes:0000000000000000 Det_VidRes
     /tmp/ccSTfybG.s:1262   .text.Det_VidRes:000000000000002c $d
     /tmp/ccSTfybG.s:1268   .text.Det_VideoLoss:0000000000000000 $t
     /tmp/ccSTfybG.s:1275   .text.Det_VideoLoss:0000000000000000 Det_VideoLoss
     /tmp/ccSTfybG.s:1320   .text.Det_VideoLoss:000000000000002c $d
     /tmp/ccSTfybG.s:1326   .text.ManualAGC:0000000000000000 $t
     /tmp/ccSTfybG.s:1333   .text.ManualAGC:0000000000000000 ManualAGC
     /tmp/ccSTfybG.s:1420   .text.ManualAGC:0000000000000064 $d
     /tmp/ccSTfybG.s:1425   .text.ReadGain:0000000000000000 $t
     /tmp/ccSTfybG.s:1432   .text.ReadGain:0000000000000000 ReadGain
     /tmp/ccSTfybG.s:1458   .text.SetCGain:0000000000000000 $t
     /tmp/ccSTfybG.s:1465   .text.SetCGain:0000000000000000 SetCGain
     /tmp/ccSTfybG.s:1615   .text.INPUT_VIDEO_CHECK:0000000000000000 $t
     /tmp/ccSTfybG.s:1622   .text.INPUT_VIDEO_CHECK:0000000000000000 INPUT_VIDEO_CHECK
     /tmp/ccSTfybG.s:1637   .text.INPUT_VIDEO_CHECK:000000000000000c $d
     /tmp/ccSTfybG.s:1934   .text.INPUT_VIDEO_CHECK:0000000000000114 $d
     /tmp/ccSTfybG.s:1939   .text.Det_HLock:0000000000000000 $t
     /tmp/ccSTfybG.s:1946   .text.Det_HLock:0000000000000000 Det_HLock
ARM GAS  /tmp/ccSTfybG.s 			page 265


     /tmp/ccSTfybG.s:1980   .text.Set_ResWithAutoDet:0000000000000000 $t
     /tmp/ccSTfybG.s:1987   .text.Set_ResWithAutoDet:0000000000000000 Set_ResWithAutoDet
     /tmp/ccSTfybG.s:2058   .text.Set_ResWithAutoDet:0000000000000044 $d
     /tmp/ccSTfybG.s:2063   .text.Scan_Channels:0000000000000000 $t
     /tmp/ccSTfybG.s:2070   .text.Scan_Channels:0000000000000000 Scan_Channels
     /tmp/ccSTfybG.s:2127   .text.Set_PLL_StartUp:0000000000000000 $t
     /tmp/ccSTfybG.s:2134   .text.Set_PLL_StartUp:0000000000000000 Set_PLL_StartUp
     /tmp/ccSTfybG.s:2169   .text.Init_TP280x_RegSet:0000000000000000 $t
     /tmp/ccSTfybG.s:2176   .text.Init_TP280x_RegSet:0000000000000000 Init_TP280x_RegSet
     /tmp/ccSTfybG.s:2260   .text.Init_TP280x_RegSet:0000000000000064 $d
     /tmp/ccSTfybG.s:2298   .text.Init_TP280x_RegSet:000000000000008a $t
     /tmp/ccSTfybG.s:2522   .text.Init_TP280x_RegSet:0000000000000194 $d
                            *COM*:0000000000000001 TVII2CAddress
                            *COM*:0000000000000001 revision
                            *COM*:0000000000000004 flag_CVBS
                            *COM*:0000000000000004 flag_AUDIO
                            *COM*:0000000000000004 flag_MEGA
                            *COM*:0000000000000001 CurRes
                            *COM*:0000000000000001 count
                            *COM*:0000000000000001 state
                            *COM*:0000000000000001 std
     /tmp/ccSTfybG.s:2551   .text.ConvertData:0000000000000000 $t
     /tmp/ccSTfybG.s:2558   .text.ConvertData:0000000000000000 ConvertData
     /tmp/ccSTfybG.s:2637   .text.ConvertData:0000000000000050 $d
                            *COM*:0000000000000002 PTZ_pelco
                            *COM*:0000000000000010 PTZ_buf
     /tmp/ccSTfybG.s:2643   .text.SwapBit:0000000000000000 $t
     /tmp/ccSTfybG.s:2650   .text.SwapBit:0000000000000000 SwapBit
     /tmp/ccSTfybG.s:2743   .text.SwapBit:0000000000000058 $d
                            *COM*:0000000000000001 crc
     /tmp/ccSTfybG.s:2749   .text.AHDBitsReverse:0000000000000000 $t
     /tmp/ccSTfybG.s:2756   .text.AHDBitsReverse:0000000000000000 AHDBitsReverse
     /tmp/ccSTfybG.s:2857   .text.HDC_SetData:0000000000000000 $t
     /tmp/ccSTfybG.s:2864   .text.HDC_SetData:0000000000000000 HDC_SetData
     /tmp/ccSTfybG.s:2920   .text.HDC_SetData:0000000000000044 $d
     /tmp/ccSTfybG.s:2925   .text.HDA_SetData:0000000000000000 $t
     /tmp/ccSTfybG.s:2932   .text.HDA_SetData:0000000000000000 HDA_SetData
     /tmp/ccSTfybG.s:2977   .text.HDA_SetData:000000000000002c $d
     /tmp/ccSTfybG.s:2982   .text.TVICommandToAHData:0000000000000000 $t
     /tmp/ccSTfybG.s:2989   .text.TVICommandToAHData:0000000000000000 TVICommandToAHData
     /tmp/ccSTfybG.s:3309   .text.TVICommandToAHData:00000000000001b8 $d
                            *COM*:0000000000000001 TVI_speed
                            *COM*:0000000000000001 AHDcmd3
                            *COM*:0000000000000001 presetNum
                            *COM*:0000000000000001 AHDcmd4
                            *COM*:0000000000000001 TVI_Command
                            *COM*:0000000000000001 AHDcmd1
                            *COM*:0000000000000001 AHDcmd2
     /tmp/ccSTfybG.s:3320   .text.ACPSTOPCOMMAND:0000000000000000 $t
     /tmp/ccSTfybG.s:3327   .text.ACPSTOPCOMMAND:0000000000000000 ACPSTOPCOMMAND
     /tmp/ccSTfybG.s:3412   .text.Get_2824cIrq:0000000000000000 $t
     /tmp/ccSTfybG.s:3419   .text.Get_2824cIrq:0000000000000000 Get_2824cIrq
     /tmp/ccSTfybG.s:3956   .text.Get_2824cIrq:00000000000002d8 $d
                            *COM*:0000000000000004 ptztxflag
                            *COM*:000000000000001a tpRxD
                            *COM*:000000000000000c COCRX4
                            *COM*:000000000000000c COCRX3
ARM GAS  /tmp/ccSTfybG.s 			page 266


                            *COM*:000000000000000c COCRX2
     /tmp/ccSTfybG.s:3977   .text.Get_2824cIrq:0000000000000320 $t
     /tmp/ccSTfybG.s:4462   .text.Get_2824cIrq:00000000000005ae $d
     /tmp/ccSTfybG.s:4472   .text.Get_2824cIrq:00000000000005b8 $t
     /tmp/ccSTfybG.s:4523   .text.Get_2824cIrq:0000000000000600 $d
                            *COM*:000000000000000c COCRX1
                            *COM*:0000000000000001 TVI_Chksum
     /tmp/ccSTfybG.s:4543   .text.Get_2824cIrq:0000000000000648 $t
     /tmp/ccSTfybG.s:4786   .text.Get_2824cIrq:00000000000007b8 $d
     /tmp/ccSTfybG.s:4801   .text.TP2824_PTZ_init:0000000000000000 $t
     /tmp/ccSTfybG.s:4808   .text.TP2824_PTZ_init:0000000000000000 TP2824_PTZ_init
     /tmp/ccSTfybG.s:4989   .text.TP2824_PTZ_mode:0000000000000000 $t
     /tmp/ccSTfybG.s:4996   .text.TP2824_PTZ_mode:0000000000000000 TP2824_PTZ_mode
     /tmp/ccSTfybG.s:5044   .text.TP2824_PTZ_mode:000000000000002c $d
     /tmp/ccSTfybG.s:5050   .text.TP2824C_RX_init:0000000000000000 $t
     /tmp/ccSTfybG.s:5057   .text.TP2824C_RX_init:0000000000000000 TP2824C_RX_init
     /tmp/ccSTfybG.s:5096   .text.TP2824C_RX_init:0000000000000020 $d
     /tmp/ccSTfybG.s:5101   .text.TP2824C_PTZ_mode:0000000000000000 $t
     /tmp/ccSTfybG.s:5108   .text.TP2824C_PTZ_mode:0000000000000000 TP2824C_PTZ_mode
     /tmp/ccSTfybG.s:5152   .text.TP2824C_PTZ_mode:0000000000000024 $d
     /tmp/ccSTfybG.s:5158   .text.HDA_SetACPV2Data:0000000000000000 $t
     /tmp/ccSTfybG.s:5165   .text.HDA_SetACPV2Data:0000000000000000 HDA_SetACPV2Data
     /tmp/ccSTfybG.s:5240   .text.TP2824C_StartTX:0000000000000000 $t
     /tmp/ccSTfybG.s:5247   .text.TP2824C_StartTX:0000000000000000 TP2824C_StartTX
     /tmp/ccSTfybG.s:5319   .text.COC_test:0000000000000000 $t
     /tmp/ccSTfybG.s:5326   .text.COC_test:0000000000000000 COC_test
     /tmp/ccSTfybG.s:5357   .text.COC_test:0000000000000020 $d
     /tmp/ccSTfybG.s:5366   .text.Init_COC_PTZOUT1:0000000000000000 $t
     /tmp/ccSTfybG.s:5373   .text.Init_COC_PTZOUT1:0000000000000000 Init_COC_PTZOUT1
     /tmp/ccSTfybG.s:5558   .text.Init_COC_PTZOUT1:0000000000000114 $d
     /tmp/ccSTfybG.s:5563   .text.EQ_Detect:0000000000000000 $t
     /tmp/ccSTfybG.s:5570   .text.EQ_Detect:0000000000000000 EQ_Detect
     /tmp/ccSTfybG.s:6103   .text.EQ_Detect:00000000000002b4 $d
                            *COM*:0000000000000001 flag_LOCKED
                            *COM*:0000000000000004 sywd
                            *COM*:0000000000000001 CurCH
     /tmp/ccSTfybG.s:6128   .text.EQ_Detect:0000000000000310 $t
     /tmp/ccSTfybG.s:6603   .text.EQ_Detect:0000000000000608 $d
                            *COM*:0000000000000004 egain
     /tmp/ccSTfybG.s:6623   .text.EQ_Detect:000000000000064c $t
     /tmp/ccSTfybG.s:6969   .text.EQ_Detect:0000000000000868 $d
     /tmp/ccSTfybG.s:6996   .text.Set_Mirror_COC:0000000000000000 $t
     /tmp/ccSTfybG.s:7003   .text.Set_Mirror_COC:0000000000000000 Set_Mirror_COC
     /tmp/ccSTfybG.s:7785   .rodata.TP2802_FORMAT_DataSet:0000000000000000 TP2802_FORMAT_DataSet
     /tmp/ccSTfybG.s:8341   .rodata.TP2824C_CVIHD_PTZ_DataSet:0000000000000000 TP2824C_CVIHD_PTZ_DataSet
     /tmp/ccSTfybG.s:8267   .rodata.TP2824C_CVBS_PTZ_DataSet:0000000000000000 TP2824C_CVBS_PTZ_DataSet
     /tmp/ccSTfybG.s:8165   .rodata.TP2824C_AHD_FHD_PTZ_DataSet:0000000000000000 TP2824C_AHD_FHD_PTZ_DataSet
     /tmp/ccSTfybG.s:8758   .rodata.TP2824C_TVI_FHD_PTZ_DataSet:0000000000000000 TP2824C_TVI_FHD_PTZ_DataSet
     /tmp/ccSTfybG.s:7699   .rodata.TP2802D_DataSet:0000000000000000 TP2802D_DataSet
     /tmp/ccSTfybG.s:8037   .rodata.TP2822_DataSet:0000000000000000 TP2822_DataSet
     /tmp/ccSTfybG.s:8094   .rodata.TP2823_MODE_DataSet:0000000000000000 TP2823_MODE_DataSet
     /tmp/ccSTfybG.s:8067   .rodata.TP2823_DataSet:0000000000000000 TP2823_DataSet
     /tmp/ccSTfybG.s:9360   .rodata.TP2834_MODE_DataSet:0000000000000000 TP2834_MODE_DataSet
     /tmp/ccSTfybG.s:9338   .rodata.TP2834_DataSet:0000000000000000 TP2834_DataSet
     /tmp/ccSTfybG.s:9174   .rodata.TP2833_HDA_DataSet:0000000000000000 TP2833_HDA_DataSet
     /tmp/ccSTfybG.s:9220   .rodata.TP2833_MODE_DataSet:0000000000000000 TP2833_MODE_DataSet
     /tmp/ccSTfybG.s:9148   .rodata.TP2833_DataSet:0000000000000000 TP2833_DataSet
ARM GAS  /tmp/ccSTfybG.s 			page 267


     /tmp/ccSTfybG.s:9296   .rodata.TP2834_Audio_DataSet:0000000000000000 TP2834_Audio_DataSet
     /tmp/ccSTfybG.s:9521   .rodata.TP2853C_HDC_DataSet:0000000000000000 TP2853C_HDC_DataSet
     /tmp/ccSTfybG.s:9465   .rodata.TP2853C_HDA_DataSet:0000000000000000 TP2853C_HDA_DataSet
     /tmp/ccSTfybG.s:9592   .rodata.TP2853C_MODE_DataSet:0000000000000000 TP2853C_MODE_DataSet
     /tmp/ccSTfybG.s:9431   .rodata.TP2853C_DataSet:0000000000000000 TP2853C_DataSet
     /tmp/ccSTfybG.s:8531   .rodata.TP2824C_HDC_DataSet:0000000000000000 TP2824C_HDC_DataSet
     /tmp/ccSTfybG.s:8936   .rodata.TP2826_HDC_DataSet:0000000000000000 TP2826_HDC_DataSet
     /tmp/ccSTfybG.s:8445   .rodata.TP2824C_HDA_DataSet:0000000000000000 TP2824C_HDA_DataSet
     /tmp/ccSTfybG.s:8870   .rodata.TP2826_HDA_DataSet:0000000000000000 TP2826_HDA_DataSet
     /tmp/ccSTfybG.s:8637   .rodata.TP2824C_MODE_DataSet:0000000000000000 TP2824C_MODE_DataSet
     /tmp/ccSTfybG.s:9042   .rodata.TP2826_MODE_DataSet:0000000000000000 TP2826_MODE_DataSet
     /tmp/ccSTfybG.s:8840   .rodata.TP2826_DataSet:0000000000000000 TP2826_DataSet
     /tmp/ccSTfybG.s:8415   .rodata.TP2824C_DataSet:0000000000000000 TP2824C_DataSet
     /tmp/ccSTfybG.s:7136   .bss.QuadBoxMode:0000000000000000 QuadBoxMode
     /tmp/ccSTfybG.s:7131   .bss.QuadBoxId:0000000000000000 QuadBoxId
     /tmp/ccSTfybG.s:7125   .bss.PtzTxChNum:0000000000000000 PtzTxChNum
     /tmp/ccSTfybG.s:7151   .data.PreCOCSelectModeType:0000000000000000 PreCOCSelectModeType
     /tmp/ccSTfybG.s:7142   .data.COCSelectModeType:0000000000000000 COCSelectModeType
     /tmp/ccSTfybG.s:7119   .bss.Flisheye_VLOSS_Count:0000000000000000 Flisheye_VLOSS_Count
     /tmp/ccSTfybG.s:7160   .data.TP_InputMode:0000000000000000 TP_InputMode
                            *COM*:0000000000000001 Flisheye_COC
     /tmp/ccSTfybG.s:7113   .bss.Flisheye_CAM:0000000000000000 Flisheye_CAM
     /tmp/ccSTfybG.s:7606   .rodata.REG_FA:0000000000000000 REG_FA
     /tmp/ccSTfybG.s:7596   .rodata.REG_F7:0000000000000000 REG_F7
     /tmp/ccSTfybG.s:7586   .rodata.REG_F6:0000000000000000 REG_F6
     /tmp/ccSTfybG.s:7616   .rodata.SYS_AND:0000000000000000 SYS_AND
     /tmp/ccSTfybG.s:7627   .rodata.SYS_MODE:0000000000000000 SYS_MODE
                            *COM*:0000000000000001 VideoSave
     /tmp/ccSTfybG.s:7167   .data.newInRes:0000000000000000 newInRes
     /tmp/ccSTfybG.s:7110   .bss.Flisheye_CAM:0000000000000000 $d
     /tmp/ccSTfybG.s:7116   .bss.Flisheye_VLOSS_Count:0000000000000000 $d
     /tmp/ccSTfybG.s:7126   .bss.PtzTxChNum:0000000000000000 $d
     /tmp/ccSTfybG.s:7132   .bss.QuadBoxId:0000000000000000 $d
     /tmp/ccSTfybG.s:7137   .bss.QuadBoxMode:0000000000000000 $d
     /tmp/ccSTfybG.s:7139   .data.COCSelectModeType:0000000000000000 $d
     /tmp/ccSTfybG.s:7148   .data.PreCOCSelectModeType:0000000000000000 $d
     /tmp/ccSTfybG.s:7163   .data.newInRes:0000000000000000 $d
     /tmp/ccSTfybG.s:7173   .rodata.Det_VidRes.str1.4:0000000000000000 $d
     /tmp/ccSTfybG.s:7180   .rodata.Det_VideoLoss.str1.4:0000000000000000 $d
     /tmp/ccSTfybG.s:7186   .rodata.EQ_Detect.str1.4:0000000000000000 $d
     /tmp/ccSTfybG.s:7260   .rodata.Get_2824cIrq.str1.4:0000000000000000 $d
     /tmp/ccSTfybG.s:7290   .rodata.Init_COC_PTZOUT1.str1.4:0000000000000000 $d
     /tmp/ccSTfybG.s:7294   .rodata.Init_TP280x_RegSet.str1.4:0000000000000000 $d
     /tmp/ccSTfybG.s:7305   .rodata.ManualAGC.str1.4:0000000000000000 $d
     /tmp/ccSTfybG.s:7309   .rodata.PTZ_RX_dat.8822:0000000000000000 $d
     /tmp/ccSTfybG.s:7313   .rodata.PTZ_RX_dat.8822:0000000000000000 PTZ_RX_dat.8822
     /tmp/ccSTfybG.s:7390   .rodata.PTZ_dat.8812:0000000000000000 $d
     /tmp/ccSTfybG.s:7394   .rodata.PTZ_dat.8812:0000000000000000 PTZ_dat.8812
     /tmp/ccSTfybG.s:7452   .rodata.PTZ_dat.8834:0000000000000000 $d
     /tmp/ccSTfybG.s:7456   .rodata.PTZ_dat.8834:0000000000000000 PTZ_dat.8834
     /tmp/ccSTfybG.s:7530   .rodata.PTZ_reg.8811:0000000000000000 $d
     /tmp/ccSTfybG.s:7534   .rodata.PTZ_reg.8811:0000000000000000 PTZ_reg.8811
     /tmp/ccSTfybG.s:7564   .rodata.PTZ_reg.8833:0000000000000000 $d
     /tmp/ccSTfybG.s:7568   .rodata.PTZ_reg.8833:0000000000000000 PTZ_reg.8833
     /tmp/ccSTfybG.s:7582   .rodata.REG_F6:0000000000000000 $d
     /tmp/ccSTfybG.s:7592   .rodata.REG_F7:0000000000000000 $d
     /tmp/ccSTfybG.s:7602   .rodata.REG_FA:0000000000000000 $d
ARM GAS  /tmp/ccSTfybG.s 			page 268


     /tmp/ccSTfybG.s:7612   .rodata.SYS_AND:0000000000000000 $d
     /tmp/ccSTfybG.s:7623   .rodata.SYS_MODE:0000000000000000 $d
     /tmp/ccSTfybG.s:7634   .rodata.Set_ResWithAutoDet.str1.4:0000000000000000 $d
     /tmp/ccSTfybG.s:7638   .rodata.Set_VidRes.str1.4:0000000000000000 $d
     /tmp/ccSTfybG.s:7696   .rodata.TP2802D_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:7781   .rodata.TP2802_FORMAT_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:8034   .rodata.TP2822_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:8063   .rodata.TP2823_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:8091   .rodata.TP2823_MODE_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:8161   .rodata.TP2824C_AHD_FHD_PTZ_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:8263   .rodata.TP2824C_CVBS_PTZ_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:8337   .rodata.TP2824C_CVIHD_PTZ_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:8411   .rodata.TP2824C_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:8441   .rodata.TP2824C_HDA_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:8527   .rodata.TP2824C_HDC_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:8633   .rodata.TP2824C_MODE_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:8754   .rodata.TP2824C_TVI_FHD_PTZ_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:8836   .rodata.TP2826_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:8866   .rodata.TP2826_HDA_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:8932   .rodata.TP2826_HDC_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:9038   .rodata.TP2826_MODE_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:9144   .rodata.TP2833_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:9170   .rodata.TP2833_HDA_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:9216   .rodata.TP2833_MODE_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:9292   .rodata.TP2834_Audio_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:9334   .rodata.TP2834_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:9356   .rodata.TP2834_MODE_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:9427   .rodata.TP2853C_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:9461   .rodata.TP2853C_HDA_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:9517   .rodata.TP2853C_HDC_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:9588   .rodata.TP2853C_MODE_DataSet:0000000000000000 $d
     /tmp/ccSTfybG.s:1672   .text.INPUT_VIDEO_CHECK:000000000000002f $d
     /tmp/ccSTfybG.s:1672   .text.INPUT_VIDEO_CHECK:0000000000000030 $t

UNDEFINED SYMBOLS
tp28xx_byte_write
tp28xx_byte_read
delay
printf
puts
CURRENT_CH
VS4210_Rx_NoSignal
Set_Video_Loss_OSD
SelectInputMode
HAL_Delay
Printf
msleep
VXISI2CWrite
HS_Select_Win
MCUTimerActiveTimerEvent
gbVXIS_InputMode
gbVXIS_OuputModeflg
