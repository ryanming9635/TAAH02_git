ARM GAS  /tmp/ccFyOsmB.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"TP2802.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.tp2824_reset_default,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	tp2824_reset_default:
  23              	.LFB79:
  24              		.file 1 "TP2824/TP2802.c"
   1:TP2824/TP2802.c **** // *****************************************************
   2:TP2824/TP2802.c **** // Company : Techpoint Inc
   3:TP2824/TP2802.c **** // $Date: 2014-03-10
   4:TP2824/TP2802.c **** // $Log:  $
   5:TP2824/TP2802.c **** // ******************************************************
   6:TP2824/TP2802.c **** #include "VXIS_Extern_Define.h"
   7:TP2824/TP2802.c **** #include "stdlib.h"
   8:TP2824/TP2802.c **** //#include "tpinc/Device_Rx.h"
   9:TP2824/TP2802.c **** #include "tpinc/TP2802.h"
  10:TP2824/TP2802.c **** 
  11:TP2824/TP2802.c **** #include "VX_swi2c.h"
  12:TP2824/TP2802.c **** #include "VS4210.h"
  13:TP2824/TP2802.c **** #include "etc_eep.h"
  14:TP2824/TP2802.c **** #include "keyremo.h"
  15:TP2824/TP2802.c **** #include "Printf.h"
  16:TP2824/TP2802.c **** #include "stm32f1xx_hal.h"
  17:TP2824/TP2802.c **** 
  18:TP2824/TP2802.c **** //extern tByte ManVidResRx;
  19:TP2824/TP2802.c **** 
  20:TP2824/TP2802.c **** tByte ManVidResRx;
  21:TP2824/TP2802.c **** extern tByte ManSelCh;
  22:TP2824/TP2802.c **** extern tByte gRxLoopFlg;
  23:TP2824/TP2802.c **** 
  24:TP2824/TP2802.c **** #ifndef TRUE
  25:TP2824/TP2802.c **** #define TRUE 1
  26:TP2824/TP2802.c **** #endif
  27:TP2824/TP2802.c **** 
  28:TP2824/TP2802.c **** #ifndef FALSE
  29:TP2824/TP2802.c **** #define FALSE 0
  30:TP2824/TP2802.c **** #endif
  31:TP2824/TP2802.c **** 
  32:TP2824/TP2802.c **** //TP2802D EQ for short cable option
  33:TP2824/TP2802.c **** #define TP2802D_EQ_SHORT 0x0d
  34:TP2824/TP2802.c **** #define TP2802D_CGAIN_SHORT 0x74
ARM GAS  /tmp/ccFyOsmB.s 			page 2


  35:TP2824/TP2802.c **** //#define TP2802D_EQ_SHORT 0x01
  36:TP2824/TP2802.c **** //#define TP2802D_CGAIN_SHORT 0x70
  37:TP2824/TP2802.c **** 
  38:TP2824/TP2802.c **** //#define CVI_TEST 0
  39:TP2824/TP2802.c **** //#define AHD_TEST 1
  40:TP2824/TP2802.c **** 
  41:TP2824/TP2802.c **** #define CH_PER_CHIP 1//0x04
  42:TP2824/TP2802.c **** #define MAX_COUNT 	0xff
  43:TP2824/TP2802.c **** 
  44:TP2824/TP2802.c **** //extern void CreateMDIN340VideoInstance(void);
  45:TP2824/TP2802.c **** 
  46:TP2824/TP2802.c **** tByte newInRes[4] = {7,7,7,7} ;
  47:TP2824/TP2802.c **** 
  48:TP2824/TP2802.c **** extern bit DetAutoRes;
  49:TP2824/TP2802.c **** tByte	state[CH_PER_CHIP];
  50:TP2824/TP2802.c **** tByte	count[CH_PER_CHIP];
  51:TP2824/TP2802.c **** tByte	mode[CH_PER_CHIP];
  52:TP2824/TP2802.c **** tByte	std[CH_PER_CHIP];
  53:TP2824/TP2802.c **** tByte	egain[CH_PER_CHIP][4];
  54:TP2824/TP2802.c **** tByte	VideoSave[CH_PER_CHIP];
  55:TP2824/TP2802.c **** //tByte	ch_boot_reset[CH_PER_CHIP]={0,0,0,0};
  56:TP2824/TP2802.c **** tByte	revision;
  57:TP2824/TP2802.c **** tByte	chip;
  58:TP2824/TP2802.c **** tByte	flag_LOCKED;
  59:TP2824/TP2802.c **** tByte   TVII2CAddress;
  60:TP2824/TP2802.c **** tByte	PTZ_buf[16];
  61:TP2824/TP2802.c **** tWord   PTZ_pelco;
  62:TP2824/TP2802.c **** tByte   CurRes;
  63:TP2824/TP2802.c **** tByte   CurCH;
  64:TP2824/TP2802.c **** tByte crc;
  65:TP2824/TP2802.c **** bit sywd;
  66:TP2824/TP2802.c **** bit flag_CVBS;
  67:TP2824/TP2802.c **** bit flag_AUDIO;
  68:TP2824/TP2802.c **** bit flag_MEGA;
  69:TP2824/TP2802.c **** 
  70:TP2824/TP2802.c **** tcByte SYS_MODE[]= {0x01,0x02,0x04,0x08,0x0f};
  71:TP2824/TP2802.c **** tcByte SYS_AND[] = {0xfe,0xfd,0xfb,0xf7,0xf0};
  72:TP2824/TP2802.c **** 
  73:TP2824/TP2802.c **** tcByte REG_F6[4]= {0x00,0x11,0x22,0x33};
  74:TP2824/TP2802.c **** tcByte REG_F7[4]= {0x44,0x55,0x66,0x77};
  75:TP2824/TP2802.c **** tcByte REG_FA[4]= {0xBB,0xCC,0xDD,0xEE};
  76:TP2824/TP2802.c **** 
  77:TP2824/TP2802.c **** //cocrx
  78:TP2824/TP2802.c **** tByte     tpRxD[26];
  79:TP2824/TP2802.c **** BYTE COCRX1[12];
  80:TP2824/TP2802.c **** BYTE COCRX2[12];
  81:TP2824/TP2802.c **** BYTE COCRX3[12];
  82:TP2824/TP2802.c **** BYTE COCRX4[12];
  83:TP2824/TP2802.c **** /*
  84:TP2824/TP2802.c **** extern BYTE AHDcmd1,AHDcmd2,AHDcmd3,AHDcmd4;
  85:TP2824/TP2802.c **** extern BYTE TVI_Command;
  86:TP2824/TP2802.c **** extern BYTE presetNum;
  87:TP2824/TP2802.c **** extern BYTE TVI_Chksum;
  88:TP2824/TP2802.c **** extern BYTE TVI_speed;
  89:TP2824/TP2802.c **** extern bit ptztxflag;
  90:TP2824/TP2802.c **** */
  91:TP2824/TP2802.c **** BYTE AHDcmd1,AHDcmd2,AHDcmd3,AHDcmd4;
ARM GAS  /tmp/ccFyOsmB.s 			page 3


  92:TP2824/TP2802.c **** BYTE TVI_Command;
  93:TP2824/TP2802.c **** BYTE presetNum;
  94:TP2824/TP2802.c **** BYTE TVI_Chksum;
  95:TP2824/TP2802.c **** BYTE TVI_speed;
  96:TP2824/TP2802.c **** bit ptztxflag;
  97:TP2824/TP2802.c **** BYTE Flisheye_CAM[4]={0};
  98:TP2824/TP2802.c **** BYTE Flisheye_COC;
  99:TP2824/TP2802.c **** tByte TP_InputMode=7;
 100:TP2824/TP2802.c **** 
 101:TP2824/TP2802.c **** WORD Flisheye_VLOSS_Count[4]={0};
 102:TP2824/TP2802.c **** 
 103:TP2824/TP2802.c **** //BYTE Flisheye_CAM[4]={1,1,1,1};
 104:TP2824/TP2802.c **** BYTE	COCSelectModeType[4]={5,5,5,5};
 105:TP2824/TP2802.c **** BYTE	PreCOCSelectModeType[4]={5,5,5,5};
 106:TP2824/TP2802.c **** 
 107:TP2824/TP2802.c **** //extern BYTE PtzTxChNum;//0:ch1 / 1:ch2 / 2:ch3 / 3:ch4
 108:TP2824/TP2802.c **** 
 109:TP2824/TP2802.c **** BYTE PtzTxChNum=0;//0:ch1 / 1:ch2 / 2:ch3 / 3:ch4
 110:TP2824/TP2802.c **** //extern BYTE QuadBoxId;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
 111:TP2824/TP2802.c **** BYTE QuadBoxId=0;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
 112:TP2824/TP2802.c **** BYTE QuadBoxMode=0;
 113:TP2824/TP2802.c **** 
 114:TP2824/TP2802.c **** extern BYTE SelectInputMode;
 115:TP2824/TP2802.c **** extern BYTE BOOT_ISSUE;
 116:TP2824/TP2802.c **** extern tByte  OSDSecCount;
 117:TP2824/TP2802.c **** extern tByte  OSDStateFlg;
 118:TP2824/TP2802.c **** 
 119:TP2824/TP2802.c **** 
 120:TP2824/TP2802.c **** extern BYTE	SelectModeType;
 121:TP2824/TP2802.c **** extern volatile BYTE MainSetSelectMode[13];
 122:TP2824/TP2802.c **** extern BYTE BOOT_ISSUE;
 123:TP2824/TP2802.c **** extern  BYTE CURRENT_CH;
 124:TP2824/TP2802.c **** extern BYTE BOX_ISSUE;
 125:TP2824/TP2802.c **** extern BYTE TriggerStatus;
 126:TP2824/TP2802.c **** extern BYTE TriggerFlag;
 127:TP2824/TP2802.c **** extern BYTE TriggerMode;
 128:TP2824/TP2802.c **** extern BYTE	PowerFlag;
 129:TP2824/TP2802.c **** 
 130:TP2824/TP2802.c **** 
 131:TP2824/TP2802.c **** enum
 132:TP2824/TP2802.c **** {
 133:TP2824/TP2802.c ****     TP2802C=0x02,
 134:TP2824/TP2802.c ****     TP2804 =0x04,
 135:TP2824/TP2802.c ****     TP2802D=0x05,
 136:TP2824/TP2802.c ****     TP2822 =0x22,
 137:TP2824/TP2802.c ****     TP2823 =0x23,
 138:TP2824/TP2802.c ****     TP2834 =0x24,
 139:TP2824/TP2802.c ****     TP2833 =0x25,
 140:TP2824/TP2802.c ****     TP2853C=0x26,
 141:TP2824/TP2802.c ****     TP2824C=0x27,
 142:TP2824/TP2802.c ****     TP2826 =0x2f
 143:TP2824/TP2802.c **** };
 144:TP2824/TP2802.c **** 
 145:TP2824/TP2802.c **** tcByte TP2824C_DataSet[] =
 146:TP2824/TP2802.c **** {
 147:TP2824/TP2802.c ****     0x40, 0x04,
 148:TP2824/TP2802.c ****     0x07, 0xC0,
ARM GAS  /tmp/ccFyOsmB.s 			page 4


 149:TP2824/TP2802.c ****     0x0B, 0xC0,
 150:TP2824/TP2802.c ****     0x21, 0x84,
 151:TP2824/TP2802.c ****     0x38, 0x00,
 152:TP2824/TP2802.c ****     0x3A, 0x22,
 153:TP2824/TP2802.c ****     0x3B, 0x05,
 154:TP2824/TP2802.c ****     0x26, 0x04,
 155:TP2824/TP2802.c ****     //0x4d, 0x07,
 156:TP2824/TP2802.c ****     //0x4e, 0x05,
 157:TP2824/TP2802.c ****     0x4d, 0x0F,
 158:TP2824/TP2802.c ****     0x4e, 0x0F,  //chunyu
 159:TP2824/TP2802.c ****     0xf1, 0x00,//different with TP2826
 160:TP2824/TP2802.c **** //    0x10,0x67,//ryan@20210611 TOA changes the Brighness=0x67
 161:TP2824/TP2802.c **** //    0x12,0x70,//ryan@20210611 TOA changes the UVGAIN=0x70	
 162:TP2824/TP2802.c **** 
 163:TP2824/TP2802.c **** //    0x10,0x50,//ryan@20210629 TOA changes the Brighness=0x50  ///NTSC
 164:TP2824/TP2802.c **** //    0x11,0x58,//ryan@20210629 TOA changes the Contrast=0x58  ///NTSC
 165:TP2824/TP2802.c **** //    0x12,0x40,//ryan@20210629 TOA changes the UVGAME=0x40  ///NTSC
 166:TP2824/TP2802.c ****         
 167:TP2824/TP2802.c **** /*cocrx
 168:TP2824/TP2802.c **** //PTZ RX
 169:TP2824/TP2802.c **** //	0xc6, 0x1F,//0x19,	//TXBITCNNUM
 170:TP2824/TP2802.c **** //	0xc7, 0x78,		//TXHST
 171:TP2824/TP2802.c **** 	0xcb, 0x07,		//RXLINE1
 172:TP2824/TP2802.c **** 	0xcc, 0x08,		//RXLINE2
 173:TP2824/TP2802.c **** 	0xcd, 0x00,//0x09,		//RXLINE3
 174:TP2824/TP2802.c **** 	0xce, 0x00,//0x0a,		//RXLINE4
 175:TP2824/TP2802.c **** 	0xcf, 0x04,		//RXFREQ
 176:TP2824/TP2802.c **** 	0xd0, 0x00,		//RXFREQ
 177:TP2824/TP2802.c **** 	0xd1, 0x00,		//RXFREQ
 178:TP2824/TP2802.c **** 	0xd2, 0x60,		//RXTHLEVEL
 179:TP2824/TP2802.c **** 	0xd3, 0x10,		//RXHINUM
 180:TP2824/TP2802.c **** 	0xd4, 0x06,		//RXHST / RXHEND
 181:TP2824/TP2802.c **** 	0xd5, 0xbe,		//RXHST
 182:TP2824/TP2802.c **** 	0xd6, 0x39,		//RXHEND
 183:TP2824/TP2802.c **** 	0xd7, 0x27,		//RXBITNUM
 184:TP2824/TP2802.c **** */	
 185:TP2824/TP2802.c ****     0xff, 0xff
 186:TP2824/TP2802.c **** };
 187:TP2824/TP2802.c **** 
 188:TP2824/TP2802.c **** tcByte TP2826_DataSet[] =
 189:TP2824/TP2802.c **** {
 190:TP2824/TP2802.c ****     0x40, 0x04,
 191:TP2824/TP2802.c ****     0x07, 0xC0,
 192:TP2824/TP2802.c ****     0x0B, 0xC0,
 193:TP2824/TP2802.c ****     0x21, 0x84,
 194:TP2824/TP2802.c ****     0x38, 0x00,
 195:TP2824/TP2802.c ****     0x3A, 0x22,
 196:TP2824/TP2802.c ****     0x3B, 0x05,
 197:TP2824/TP2802.c ****     0x26, 0x04,
 198:TP2824/TP2802.c ****     0x4d, 0x07,
 199:TP2824/TP2802.c ****     0x4e, 0x05,
 200:TP2824/TP2802.c ****     0xf1, 0x07,
 201:TP2824/TP2802.c ****     0xff, 0xff
 202:TP2824/TP2802.c **** };
 203:TP2824/TP2802.c **** 
 204:TP2824/TP2802.c **** 
 205:TP2824/TP2802.c **** tcByte TP2826_MODE_DataSet[5][20]=
ARM GAS  /tmp/ccFyOsmB.s 			page 5


 206:TP2824/TP2802.c **** {
 207:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0x2c,0x21,0x22,0x23,0x25,0x27,0x28
 208:TP2824/TP2802.c ****     {0x03,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x1c,0x0a,0x84,0x36,0x3c,0xff,0x2d,0x00
 209:TP2824/TP2802.c ****     {0x13,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x18,0x0a,0x84,0x36,0x3c,0xff,0x2d,0x00
 210:TP2824/TP2802.c ****     {0x13,0x50,0x40,0x05,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x04,0x2a,0x84,0x36,0x3c,0xff,0x2d,0x00
 211:TP2824/TP2802.c ****     {0x13,0x51,0x48,0x05,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x04,0x2a,0x84,0x37,0x3f,0xff,0x2d,0x00
 212:TP2824/TP2802.c **** };
 213:TP2824/TP2802.c **** tcByte TP2824C_MODE_DataSet[5][20+3]=
 214:TP2824/TP2802.c **** {
 215:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0x2c,0x21,0x22,0x23,0x25,0x27,0x28
 216:TP2824/TP2802.c ****     {0x03,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x1c,0x0a,0x84,0x36,0x3c,0xff,0x2d,0x00
 217:TP2824/TP2802.c ****     {0x13,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x18,0x0a,0x84,0x36,0x3c,0xff,0x2d,0x00
 218:TP2824/TP2802.c ****     {0x13,0x50,0x40,0x05,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x04,0x2a,0x84,0x36,0x3c,0xff,0x2d,0x00
 219:TP2824/TP2802.c ****     {0x13,0x51,0x48,0x05,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x04,0x2a,0x84,0x37,0x3f,0xff,0x2d,0x00
 220:TP2824/TP2802.c **** };
 221:TP2824/TP2802.c **** 
 222:TP2824/TP2802.c **** tcByte TP2826_HDA_DataSet[5][12]=
 223:TP2824/TP2802.c **** {
 224:TP2824/TP2802.c ****     {0x0c,0x20,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x21,0x25,0xff}, //ADDR
 225:TP2824/TP2802.c ****     {0x03,0x40,0x60,0x48,0x40,0x27,0x72,0x80,0x77,0x46,0xfe,0xff}, //720p30
 226:TP2824/TP2802.c ****     {0x03,0x40,0x60,0x48,0x40,0x27,0x88,0x04,0x23,0x46,0xfe,0xff}, //720p25
 227:TP2824/TP2802.c ****     {0x03,0x38,0x60,0x44,0x40,0x29,0x65,0x78,0x16,0x46,0xfe,0xff}, //1080p30
 228:TP2824/TP2802.c ****     {0x03,0x3c,0x60,0x44,0x40,0x29,0x61,0x78,0x16,0x46,0xfe,0xff}, //1080p25
 229:TP2824/TP2802.c **** };
 230:TP2824/TP2802.c **** tcByte TP2824C_HDA_DataSet[5][12+4]=
 231:TP2824/TP2802.c **** {
 232:TP2824/TP2802.c ****     {0x0c,0x20,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x21,0x25,0x10,0x11,0x12,0x14,0xff}, //ADDR
 233:TP2824/TP2802.c ****     {0x03,0x40,0x60,0x48,0x40,0x27,0x72,0x80,0x77,0x46,0xfe,0x50,0x50,0x40,0x0A,0xff}, //720p30
 234:TP2824/TP2802.c ****     {0x03,0x40,0x60,0x48,0x40,0x27,0x88,0x04,0x23,0x46,0xfe,0x50,0x50,0x40,0x0A,0xff}, //720p25
 235:TP2824/TP2802.c ****     {0x03,0x38,0x60,0x44,0x40,0x29,0x65,0x78,0x16,0x46,0xfe,0x50,0x50,0x40,0x0A,0xff}, //1080p30
 236:TP2824/TP2802.c ****     {0x03,0x3c,0x60,0x44,0x40,0x29,0x61,0x78,0x16,0x46,0xfe,0x50,0x50,0x40,0x0A,0xff}, //1080p25
 237:TP2824/TP2802.c **** };
 238:TP2824/TP2802.c **** tcByte TP2826_HDC_DataSet[5][20]=
 239:TP2824/TP2802.c **** {
 240:TP2824/TP2802.c ****     {0x0c,0x15,0x16,0x17,0x18,0x19,0x1a,0x1c,0x1d,0x20,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x27,0x28
 241:TP2824/TP2802.c ****     {0x03,0x13,0x08,0x00,0x19,0xd0,0x25,0x06,0x72,0x30,0x60,0x37,0x40,0x48,0x67,0x6f,0x30,0x5a,0x04
 242:TP2824/TP2802.c ****     {0x03,0x13,0x0a,0x00,0x19,0xd0,0x25,0x06,0x7a,0x3a,0x60,0x42,0x40,0x48,0x67,0x6f,0x33,0x5a,0x04
 243:TP2824/TP2802.c ****     {0x03,0x13,0x60,0x80,0x29,0x38,0x47,0x09,0x60,0x3c,0x60,0x47,0x40,0x41,0x82,0x27,0xa4,0x5a,0x04
 244:TP2824/TP2802.c ****     {0x03,0x13,0x60,0x80,0x29,0x38,0x47,0x09,0x60,0x50,0x60,0x54,0x40,0x41,0x82,0x27,0xa2,0x5a,0x04
 245:TP2824/TP2802.c **** };
 246:TP2824/TP2802.c **** tcByte TP2824C_HDC_DataSet[5][20]=
 247:TP2824/TP2802.c **** {
 248:TP2824/TP2802.c ****     {0x0c,0x15,0x16,0x17,0x18,0x19,0x1a,0x1c,0x1d,0x20,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x27,0x28
 249:TP2824/TP2802.c ****     {0x03,0x13,0x08,0x00,0x19,0xd0,0x25,0x06,0x72,0x30,0x60,0x37,0x40,0x48,0x67,0x6f,0x30,0x5a,0x04
 250:TP2824/TP2802.c ****     {0x03,0x13,0x0a,0x00,0x19,0xd0,0x25,0x06,0x7a,0x3a,0x60,0x42,0x40,0x48,0x67,0x6f,0x33,0x5a,0x04
 251:TP2824/TP2802.c ****     {0x03,0x13,0x60,0x80,0x29,0x38,0x47,0x09,0x60,0x3c,0x60,0x47,0x40,0x41,0x82,0x27,0xa4,0x5a,0x04
 252:TP2824/TP2802.c ****     {0x03,0x13,0x60,0x80,0x29,0x38,0x47,0x09,0x60,0x50,0x60,0x54,0x40,0x41,0x82,0x27,0xa2,0x5a,0x04
 253:TP2824/TP2802.c **** };
 254:TP2824/TP2802.c **** tcByte TP2853C_DataSet[] =
 255:TP2824/TP2802.c **** {
 256:TP2824/TP2802.c ****     0x40, 0x04,
 257:TP2824/TP2802.c ****     0x07, 0xC0,
 258:TP2824/TP2802.c ****     0x0B, 0xC0,
 259:TP2824/TP2802.c ****     0x21, 0x84,
 260:TP2824/TP2802.c ****     0x38, 0x00,
 261:TP2824/TP2802.c ****     0x3A, 0x32,
 262:TP2824/TP2802.c ****     0x3B, 0x05,
ARM GAS  /tmp/ccFyOsmB.s 			page 6


 263:TP2824/TP2802.c ****     0x26, 0x04,
 264:TP2824/TP2802.c ****     0x4d, 0x03,
 265:TP2824/TP2802.c ****     0x4e, 0x03,
 266:TP2824/TP2802.c ****     0x4f, 0x01,
 267:TP2824/TP2802.c ****     0xf5, 0xf0,
 268:TP2824/TP2802.c ****     0xf1,0x07,//tp2826c
 269:TP2824/TP2802.c **** 
 270:TP2824/TP2802.c ****     0xff, 0xff
 271:TP2824/TP2802.c **** };
 272:TP2824/TP2802.c **** tcByte TP2853C_MODE_DataSet[5][18]=
 273:TP2824/TP2802.c **** {
 274:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0x2c,0x21,0x25,0x27,0x28,0xff}, //
 275:TP2824/TP2802.c ****     {0x03,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x0c,0x0a,0x84,0xf0,0x2d,0x00,0xff}, //
 276:TP2824/TP2802.c ****     {0x13,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x08,0x0a,0x84,0xf0,0x2d,0x00,0xff},	//
 277:TP2824/TP2802.c ****     {0x13,0x50,0x40,0x05,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x04,0x2a,0x84,0xf0,0x2d,0x00,0xff}, //
 278:TP2824/TP2802.c ****     {0x13,0x51,0x48,0x05,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x04,0x2a,0x84,0xf0,0x2d,0x00,0xff}  //
 279:TP2824/TP2802.c **** };
 280:TP2824/TP2802.c **** tcByte TP2853C_HDA_DataSet[5][10]=
 281:TP2824/TP2802.c **** {
 282:TP2824/TP2802.c ****     {0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x21,0x25,0xff}, //ADDR
 283:TP2824/TP2802.c ****     {0x70,0x48,0x5e,0x27,0x72,0x80,0x77,0x44,0xf0,0xff}, //720p30
 284:TP2824/TP2802.c ****     {0x70,0x48,0x5e,0x27,0x88,0x04,0x23,0x44,0xf0,0xff}, //720p25
 285:TP2824/TP2802.c ****     {0x58,0x45,0x50,0x29,0x65,0x78,0x16,0x44,0xf0,0xff}, //1080p30
 286:TP2824/TP2802.c ****     {0x58,0x45,0x40,0x29,0x61,0x78,0x16,0x44,0xf0,0xff}, //1080p25
 287:TP2824/TP2802.c **** };
 288:TP2824/TP2802.c **** tcByte TP2853C_HDC_DataSet[5][13]=
 289:TP2824/TP2802.c **** {
 290:TP2824/TP2802.c ****     {0x15,0x16,0x20,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x27,0x28,0xff}, //ADDR
 291:TP2824/TP2802.c ****     {0x13,0x40,0x50,0x60,0x42,0x40,0x48,0x67,0x2e,0x90,0x5a,0x04,0xff}, //720p30
 292:TP2824/TP2802.c ****     {0x13,0x40,0x50,0x60,0x42,0x40,0x48,0x67,0x2e,0x90,0x5a,0x04,0xff}, //720p25
 293:TP2824/TP2802.c ****     {0x13,0x20,0x48,0x60,0x45,0x40,0x41,0x83,0x2e,0x90,0x5a,0x04,0xff}, //1080p30
 294:TP2824/TP2802.c ****     {0x13,0x84,0x48,0x60,0x45,0x40,0x41,0x83,0x2e,0x90,0x5a,0x04,0xff}, //1080p25
 295:TP2824/TP2802.c **** };
 296:TP2824/TP2802.c **** 
 297:TP2824/TP2802.c **** tcByte TP2834_Audio_DataSet[]=
 298:TP2824/TP2802.c **** {
 299:TP2824/TP2802.c **** //audio
 300:TP2824/TP2802.c ****     0x40, 0x40, //audio page
 301:TP2824/TP2802.c ****     0x00, 0x01, //A1
 302:TP2824/TP2802.c ****     0x01, 0x02, //A2
 303:TP2824/TP2802.c ****     0x02, 0x03, //A3
 304:TP2824/TP2802.c ****     0x03, 0x04, //A4
 305:TP2824/TP2802.c ****     0x04, 0x11, //AUX
 306:TP2824/TP2802.c ****     0x17, 0x00,
 307:TP2824/TP2802.c ****     0x18, 0x10, //5ch mode
 308:TP2824/TP2802.c ****     0x19, 0x0f,
 309:TP2824/TP2802.c ****     0x1A, 0x15, //PB to DAC
 310:TP2824/TP2802.c ****     0x1b, 0x01, //PB master
 311:TP2824/TP2802.c ****     0x37, 0x20,
 312:TP2824/TP2802.c **** 
 313:TP2824/TP2802.c ****     0x1d, 0x08,
 314:TP2824/TP2802.c ****     0x1d, 0x00,
 315:TP2824/TP2802.c **** 
 316:TP2824/TP2802.c ****     0x3c, 0x3f,
 317:TP2824/TP2802.c ****     0x3c, 0x00,
 318:TP2824/TP2802.c **** 
 319:TP2824/TP2802.c ****     0x3d, 0x01, //ADC reset
ARM GAS  /tmp/ccFyOsmB.s 			page 7


 320:TP2824/TP2802.c ****     0xff, 0xff
 321:TP2824/TP2802.c **** };
 322:TP2824/TP2802.c **** 
 323:TP2824/TP2802.c **** tcByte TP2833_DataSet[] =
 324:TP2824/TP2802.c **** {
 325:TP2824/TP2802.c **** 
 326:TP2824/TP2802.c ****     0x40, 0x04,
 327:TP2824/TP2802.c ****     0x07, 0xC0,
 328:TP2824/TP2802.c ****     0x0B, 0xC0,
 329:TP2824/TP2802.c ****     0x22, 0x36,
 330:TP2824/TP2802.c ****     0x38, 0x40,
 331:TP2824/TP2802.c ****     0x26, 0x04,
 332:TP2824/TP2802.c ****     0x4d, 0x03,
 333:TP2824/TP2802.c ****     0x4e, 0x03,
 334:TP2824/TP2802.c ****     0x4f, 0x01,
 335:TP2824/TP2802.c ****     0xff, 0xff
 336:TP2824/TP2802.c **** };
 337:TP2824/TP2802.c **** tcByte TP2833_MODE_DataSet[5][14]=
 338:TP2824/TP2802.c **** {
 339:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0x18,0xff},
 340:TP2824/TP2802.c ****     {0x03,0x50,0x30,0x05,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x0c,0x12,0xff},
 341:TP2824/TP2802.c ****     {0x13,0x50,0x30,0x05,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x08,0x12,0xff},
 342:TP2824/TP2802.c ****     {0x13,0x50,0x40,0x05,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x04,0x11,0xff},
 343:TP2824/TP2802.c ****     {0x13,0x51,0x48,0x05,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x04,0x11,0xff}
 344:TP2824/TP2802.c **** };
 345:TP2824/TP2802.c **** tcByte TP2833_HDA_DataSet[5][8]=
 346:TP2824/TP2802.c **** {
 347:TP2824/TP2802.c ****     {0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0xff}, //ADDR
 348:TP2824/TP2802.c ****     {0x70,0x48,0x5e,0x27,0x72,0x80,0x77,0xff}, //720p30
 349:TP2824/TP2802.c ****     {0x70,0x48,0x5e,0x27,0x88,0x04,0x23,0xff}, //720p25
 350:TP2824/TP2802.c ****     {0x58,0x45,0x50,0x29,0x65,0x78,0x16,0xff}, //1080p30
 351:TP2824/TP2802.c ****     {0x58,0x45,0x40,0x29,0x61,0x78,0x16,0xff}, //1080p25
 352:TP2824/TP2802.c **** };
 353:TP2824/TP2802.c **** 
 354:TP2824/TP2802.c **** tcByte TP2834_DataSet[] =
 355:TP2824/TP2802.c **** {
 356:TP2824/TP2802.c **** 
 357:TP2824/TP2802.c ****     //video
 358:TP2824/TP2802.c ****     0x40, 0x04,
 359:TP2824/TP2802.c ****     0x07, 0xc0,
 360:TP2824/TP2802.c ****     0x0b, 0xc0,
 361:TP2824/TP2802.c ****     0x3a, 0x70,
 362:TP2824/TP2802.c ****     0x26, 0x01,
 363:TP2824/TP2802.c **** 
 364:TP2824/TP2802.c ****     0x4d, 0x0f,
 365:TP2824/TP2802.c ****     0x4e, 0x0f,
 366:TP2824/TP2802.c **** 
 367:TP2824/TP2802.c ****     0xff, 0xff
 368:TP2824/TP2802.c **** };
 369:TP2824/TP2802.c **** tcByte TP2834_MODE_DataSet[5][13]=
 370:TP2824/TP2802.c **** {
 371:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0xff},
 372:TP2824/TP2802.c ****     {0x03,0x10,0x60,0x02,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x8c,0xff},
 373:TP2824/TP2802.c ****     {0x03,0x10,0x60,0x02,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x88,0xff},
 374:TP2824/TP2802.c ****     {0x43,0x10,0xa0,0x12,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x84,0xff},
 375:TP2824/TP2802.c ****     {0x43,0x11,0xb0,0x02,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x84,0xff}
 376:TP2824/TP2802.c **** };
ARM GAS  /tmp/ccFyOsmB.s 			page 8


 377:TP2824/TP2802.c **** 
 378:TP2824/TP2802.c **** //////////////////////////////////////////////////////
 379:TP2824/TP2802.c **** ////
 380:TP2824/TP2802.c **** /////////////////////////////////////////////////////
 381:TP2824/TP2802.c **** 
 382:TP2824/TP2802.c **** tcByte TP2823_DataSet[] =
 383:TP2824/TP2802.c **** {
 384:TP2824/TP2802.c **** 
 385:TP2824/TP2802.c ****     //video
 386:TP2824/TP2802.c ****     0x40, 0x04,
 387:TP2824/TP2802.c ****     0x0b, 0x60,
 388:TP2824/TP2802.c ****     0x22, 0x34,
 389:TP2824/TP2802.c ****     0x23, 0x44,
 390:TP2824/TP2802.c ****     0x26, 0x01,
 391:TP2824/TP2802.c ****     0x38, 0x40,
 392:TP2824/TP2802.c ****     0x3f, 0x08,
 393:TP2824/TP2802.c **** 
 394:TP2824/TP2802.c ****     0x4d, 0x03,
 395:TP2824/TP2802.c ****     0x4e, 0x33,
 396:TP2824/TP2802.c ****     0xfa, 0x00,
 397:TP2824/TP2802.c **** 
 398:TP2824/TP2802.c ****     0xff, 0xff
 399:TP2824/TP2802.c **** };
 400:TP2824/TP2802.c **** tcByte TP2823_MODE_DataSet[5][13]=
 401:TP2824/TP2802.c **** {
 402:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0xff},
 403:TP2824/TP2802.c ****     {0x43,0x10,0x60,0x02,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x30,0xff},
 404:TP2824/TP2802.c ****     {0x53,0x10,0x60,0x02,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x20,0xff},
 405:TP2824/TP2802.c ****     {0x53,0x10,0xa0,0x12,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x10,0xff},
 406:TP2824/TP2802.c ****     {0x53,0x11,0xb0,0x02,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x10,0xff}
 407:TP2824/TP2802.c **** };
 408:TP2824/TP2802.c **** tcByte TP2822_DataSet[] =
 409:TP2824/TP2802.c **** {
 410:TP2824/TP2802.c **** 
 411:TP2824/TP2802.c ****     0x40, 0x04,
 412:TP2824/TP2802.c ****     0x39, 0x00,
 413:TP2824/TP2802.c ****     0x3d, 0x08,
 414:TP2824/TP2802.c ****     0x3a, 0x01,
 415:TP2824/TP2802.c **** 
 416:TP2824/TP2802.c ****     0x30, 0x48,
 417:TP2824/TP2802.c ****     0x31, 0xbb,
 418:TP2824/TP2802.c ****     0x32, 0x2e,
 419:TP2824/TP2802.c ****     0x33, 0x90,
 420:TP2824/TP2802.c **** 
 421:TP2824/TP2802.c ****     0x4d, 0x03,
 422:TP2824/TP2802.c ****     0x4e, 0x33,
 423:TP2824/TP2802.c ****     0x3d, 0x00,
 424:TP2824/TP2802.c **** 
 425:TP2824/TP2802.c ****     0xff, 0xff
 426:TP2824/TP2802.c **** };
 427:TP2824/TP2802.c **** 
 428:TP2824/TP2802.c **** tcByte TP2802D_DataSet[] =
 429:TP2824/TP2802.c **** {
 430:TP2824/TP2802.c ****     0x40, 0x04,
 431:TP2824/TP2802.c **** //		0x07, 0xc0,
 432:TP2824/TP2802.c **** //		0x0b, 0xc0,
 433:TP2824/TP2802.c ****     0x2b, 0x44,
ARM GAS  /tmp/ccFyOsmB.s 			page 9


 434:TP2824/TP2802.c ****     0x23, 0x50,
 435:TP2824/TP2802.c ****     0x39, 0x42,
 436:TP2824/TP2802.c ****     0x3a, 0x01,
 437:TP2824/TP2802.c **** 
 438:TP2824/TP2802.c ****     0x30, 0x48,
 439:TP2824/TP2802.c ****     0x31, 0xbb,
 440:TP2824/TP2802.c ****     0x32, 0x2e,
 441:TP2824/TP2802.c ****     0x33, 0x90,
 442:TP2824/TP2802.c **** 
 443:TP2824/TP2802.c ****     0x4d, 0x0f,
 444:TP2824/TP2802.c ****     0x4e, 0xff,
 445:TP2824/TP2802.c **** 
 446:TP2824/TP2802.c ****     //now TP2801A just support 2 lines, to disable line3&4, else IRQ is in trouble.
 447:TP2824/TP2802.c ****     0x40, 0x01,
 448:TP2824/TP2802.c ****     0x50, 0x00,
 449:TP2824/TP2802.c ****     0x51, 0x00,
 450:TP2824/TP2802.c ****     0x52, 0x00,
 451:TP2824/TP2802.c ****     0x7F, 0x00,
 452:TP2824/TP2802.c ****     0x80, 0x00,
 453:TP2824/TP2802.c ****     0x81, 0x00,
 454:TP2824/TP2802.c **** 
 455:TP2824/TP2802.c ****     //0x50~0xb2 need bank switch
 456:TP2824/TP2802.c ****     0x40, 0x00,
 457:TP2824/TP2802.c ****     //TX total 34bit, valid load 32bit
 458:TP2824/TP2802.c ****     0x50, 0x00,
 459:TP2824/TP2802.c ****     0x51, 0x0b,
 460:TP2824/TP2802.c ****     0x52, 0x0c,
 461:TP2824/TP2802.c ****     0x53, 0x19,
 462:TP2824/TP2802.c ****     0x54, 0x78,
 463:TP2824/TP2802.c ****     0x55, 0x21,
 464:TP2824/TP2802.c ****     0x7e, 0x0f,   //
 465:TP2824/TP2802.c **** 
 466:TP2824/TP2802.c ****     // RX total 40bit, valid load 39bit
 467:TP2824/TP2802.c ****     0x7F, 0x00,
 468:TP2824/TP2802.c ****     0x80, 0x07,
 469:TP2824/TP2802.c ****     0x81, 0x08,
 470:TP2824/TP2802.c ****     0x82, 0x04,
 471:TP2824/TP2802.c ****     0x83, 0x00,
 472:TP2824/TP2802.c ****     0x84, 0x00,
 473:TP2824/TP2802.c ****     0x85, 0x60,
 474:TP2824/TP2802.c ****     0x86, 0x10,
 475:TP2824/TP2802.c ****     0x87, 0x06,
 476:TP2824/TP2802.c ****     0x88, 0xBE,
 477:TP2824/TP2802.c ****     0x89, 0x39,
 478:TP2824/TP2802.c ****     0x8A, 0x27,   //
 479:TP2824/TP2802.c ****     0xB9, 0x0F,   //RX channel enable
 480:TP2824/TP2802.c ****     0xff, 0xff
 481:TP2824/TP2802.c **** };
 482:TP2824/TP2802.c **** 
 483:TP2824/TP2802.c **** /*
 484:TP2824/TP2802.c **** //total 34bit, valid load 32bit
 485:TP2824/TP2802.c **** tcByte TP2822_PTZ_DataSet[] = {
 486:TP2824/TP2802.c **** 
 487:TP2824/TP2802.c **** 		//PTZ
 488:TP2824/TP2802.c **** 		0x40, 0x10,
 489:TP2824/TP2802.c **** 		0xc8, 0x21,
 490:TP2824/TP2802.c **** 		0xe0, 0x21,
ARM GAS  /tmp/ccFyOsmB.s 			page 10


 491:TP2824/TP2802.c **** 		0x40, 0x00,
 492:TP2824/TP2802.c **** 		0xc8, 0x21,
 493:TP2824/TP2802.c **** 		0xe0, 0x21,
 494:TP2824/TP2802.c **** 		0x7e, 0x0f,
 495:TP2824/TP2802.c **** 		0xb9, 0x0f,
 496:TP2824/TP2802.c **** 
 497:TP2824/TP2802.c **** 	0xff, 0xff
 498:TP2824/TP2802.c **** };
 499:TP2824/TP2802.c **** */
 500:TP2824/TP2802.c **** 
 501:TP2824/TP2802.c **** #if 1
 502:TP2824/TP2802.c **** tcByte TP2824C_TVI_FHD_PTZ_DataSet[] = {//1080P30/25 TVI
 503:TP2824/TP2802.c **** 
 504:TP2824/TP2802.c **** 		//PTZ COC
 505:TP2824/TP2802.c **** //TX		
 506:TP2824/TP2802.c **** 	 0xc0, 0x00,
 507:TP2824/TP2802.c **** 	 0xc2, 0x0B,
 508:TP2824/TP2802.c **** 	 0xc3, 0x0C,
 509:TP2824/TP2802.c **** 	 0xc1, 0x00,
 510:TP2824/TP2802.c **** 	 0xc4, 0x00,
 511:TP2824/TP2802.c **** 	 0xc5, 0x00,
 512:TP2824/TP2802.c **** 	 0xc6, 0x33,
 513:TP2824/TP2802.c **** 	 0xc7, 0x78,
 514:TP2824/TP2802.c **** 	 0xc8, 0x21,
 515:TP2824/TP2802.c **** 	 0x6f, 0x40,
 516:TP2824/TP2802.c ****         0x70, 0x00,
 517:TP2824/TP2802.c ****         
 518:TP2824/TP2802.c **** 	 0x55, 0x00,
 519:TP2824/TP2802.c **** 	 0x56, 0x02,
 520:TP2824/TP2802.c **** 	 0x57, 0xB5,
 521:TP2824/TP2802.c **** 	 0x58, 0x01,
 522:TP2824/TP2802.c **** 	 0x59, 0x17,
 523:TP2824/TP2802.c **** 	 0x5a, 0x01,
 524:TP2824/TP2802.c **** 	 0x5b, 0x00,
 525:TP2824/TP2802.c **** 	 0x5c, 0x02,
 526:TP2824/TP2802.c **** 	 0x5d, 0x00,
 527:TP2824/TP2802.c **** 	 0x5e, 0x00,
 528:TP2824/TP2802.c **** 	 0x5f, 0x00,
 529:TP2824/TP2802.c **** 	 0x60, 0xCE,
 530:TP2824/TP2802.c **** 	
 531:TP2824/TP2802.c ****  //RX
 532:TP2824/TP2802.c **** 	0xcb, 0x07,
 533:TP2824/TP2802.c **** 	0xcc, 0x08,
 534:TP2824/TP2802.c **** 	0xcd, 0x00,
 535:TP2824/TP2802.c **** 	0xce, 0x00,
 536:TP2824/TP2802.c **** 	0xcf, 0x04,
 537:TP2824/TP2802.c **** 	0xd0, 0x00,
 538:TP2824/TP2802.c **** 	0xd1, 0x00,
 539:TP2824/TP2802.c **** 	0xd2, 0x60,
 540:TP2824/TP2802.c **** 	0xd3, 0x10,
 541:TP2824/TP2802.c **** 	0xd4, 0x06,
 542:TP2824/TP2802.c **** 	0xd5, 0xbe,
 543:TP2824/TP2802.c **** 	0xd6, 0x39,
 544:TP2824/TP2802.c **** 	0xd7, 0x21,
 545:TP2824/TP2802.c **** 	0xa7, 0x00,
 546:TP2824/TP2802.c **** 	0xff, 0xff
 547:TP2824/TP2802.c **** };
ARM GAS  /tmp/ccFyOsmB.s 			page 11


 548:TP2824/TP2802.c **** 
 549:TP2824/TP2802.c **** tcByte TP2824C_AHD_FHD_PTZ_DataSet[] = {//1080P30/25 AHD
 550:TP2824/TP2802.c **** 
 551:TP2824/TP2802.c **** 		//PTZ COC
 552:TP2824/TP2802.c **** //TX		
 553:TP2824/TP2802.c **** 	 0xc0, 0x00,
 554:TP2824/TP2802.c **** 	 0xc2, 0x0E,	
 555:TP2824/TP2802.c **** 	 0xc3, 0x0F,
 556:TP2824/TP2802.c **** 	 0xc1, 0x00, 
 557:TP2824/TP2802.c **** 	 0xc4, 0x10,
 558:TP2824/TP2802.c **** 	 0xc5, 0x11,
 559:TP2824/TP2802.c **** //	 0xc6, 0x2c,////pulse of cap  500->600ns 0x24, 
 560:TP2824/TP2802.c ****  	 0xc6, 0x27,////pulse of cap  600->520ns  //ryan@20210630 TOA require this
 561:TP2824/TP2802.c **** 	 0xc7, 0x15,
 562:TP2824/TP2802.c **** 	 0xc8, 0x97,		
 563:TP2824/TP2802.c **** 	0x6f, 0x44,
 564:TP2824/TP2802.c ****         0x70, 0x00,
 565:TP2824/TP2802.c **** 	 0x55, 0x00,
 566:TP2824/TP2802.c **** 	 0x56, 0x00,
 567:TP2824/TP2802.c **** 	 0x57, 0x00,
 568:TP2824/TP2802.c **** 	 0x58, 0x00,
 569:TP2824/TP2802.c **** 	 0x59, 0x00,
 570:TP2824/TP2802.c **** 	 0x5a, 0x00,
 571:TP2824/TP2802.c **** 	 0x5b, 0x00,
 572:TP2824/TP2802.c **** 	 0x5c, 0x00,
 573:TP2824/TP2802.c **** 	 0x5d, 0x00,
 574:TP2824/TP2802.c **** 	 0x5e, 0x00,
 575:TP2824/TP2802.c **** 	 0x5f, 0x00,
 576:TP2824/TP2802.c **** 	 0x60, 0x00,
 577:TP2824/TP2802.c **** 	 0x62, 0x00,
 578:TP2824/TP2802.c **** 	 0x63, 0x00,
 579:TP2824/TP2802.c **** 	 0x64, 0x00,
 580:TP2824/TP2802.c **** 	 0x65, 0x00,
 581:TP2824/TP2802.c **** 	 0x66, 0x00,
 582:TP2824/TP2802.c **** 	 0x68, 0x00,
 583:TP2824/TP2802.c **** 	 0x69, 0x00,
 584:TP2824/TP2802.c **** 	 0x6a, 0x00,
 585:TP2824/TP2802.c **** 	 0x6b, 0x00,
 586:TP2824/TP2802.c **** 	 0x6c, 0x00,
 587:TP2824/TP2802.c ****  	
 588:TP2824/TP2802.c ****  //RX
 589:TP2824/TP2802.c **** 	0xcb, 0x07,
 590:TP2824/TP2802.c **** 	0xcc, 0x08,
 591:TP2824/TP2802.c **** 	0xcd, 0x00,
 592:TP2824/TP2802.c **** 	0xce, 0x00,
 593:TP2824/TP2802.c **** 	0xcf, 0x04,
 594:TP2824/TP2802.c **** 	0xd0, 0x00,	
 595:TP2824/TP2802.c **** 	0xd1, 0x00,		
 596:TP2824/TP2802.c **** 	0xd2, 0x60,		
 597:TP2824/TP2802.c **** 	0xd3, 0x10,		
 598:TP2824/TP2802.c **** 	0xd4, 0x06,		
 599:TP2824/TP2802.c **** 	0xd5, 0xbe,		
 600:TP2824/TP2802.c **** 	0xd6, 0x39,		
 601:TP2824/TP2802.c **** 	0xd7, 0x27,	
 602:TP2824/TP2802.c **** 	
 603:TP2824/TP2802.c **** 	0xa7, 0x24,
 604:TP2824/TP2802.c **** 	
ARM GAS  /tmp/ccFyOsmB.s 			page 12


 605:TP2824/TP2802.c **** 	0xff, 0xff
 606:TP2824/TP2802.c **** };
 607:TP2824/TP2802.c **** 
 608:TP2824/TP2802.c **** tcByte TP2824C_CVBS_PTZ_DataSet[] = {//CVBS NTSC/PAL
 609:TP2824/TP2802.c **** 
 610:TP2824/TP2802.c **** 		//PTZ COC
 611:TP2824/TP2802.c **** //TX		
 612:TP2824/TP2802.c **** 	 0xc0, 0x00,
 613:TP2824/TP2802.c **** 	 0xc2, 0x0F,	
 614:TP2824/TP2802.c **** 	 0xc3, 0x10,	
 615:TP2824/TP2802.c **** 	 0xc1, 0x00,	
 616:TP2824/TP2802.c **** 	 0xc4, 0x00,	
 617:TP2824/TP2802.c **** 	 0xc5, 0x00,	
 618:TP2824/TP2802.c **** 	 0xc6, 0x49,	
 619:TP2824/TP2802.c **** 	 0xc7, 0x14,	
 620:TP2824/TP2802.c **** 	 0xc8, 0xAF,	
 621:TP2824/TP2802.c **** 	 0x6f, 0x60,	
 622:TP2824/TP2802.c ****         0x70, 0x00,   
 623:TP2824/TP2802.c ****         
 624:TP2824/TP2802.c **** 	 0x55, 0x00,
 625:TP2824/TP2802.c **** 	 0x56, 0x00,
 626:TP2824/TP2802.c **** 	 0x57, 0x00,
 627:TP2824/TP2802.c **** 	 0x58, 0x00,
 628:TP2824/TP2802.c **** 	 0x59, 0x00,
 629:TP2824/TP2802.c **** 	 0x5a, 0x00,
 630:TP2824/TP2802.c **** 	 0x5b, 0x00,
 631:TP2824/TP2802.c **** 	 0x5c, 0x00,
 632:TP2824/TP2802.c **** 	 0x5d, 0x00,
 633:TP2824/TP2802.c **** 	 0x5e, 0x00,
 634:TP2824/TP2802.c **** 	 0x5f, 0x00,
 635:TP2824/TP2802.c **** 	 0x60, 0x00,
 636:TP2824/TP2802.c **** 	 0x62, 0x00,
 637:TP2824/TP2802.c **** 	 0x63, 0x00,
 638:TP2824/TP2802.c **** 	 0x64, 0x00,
 639:TP2824/TP2802.c **** 	 0x65, 0x00,
 640:TP2824/TP2802.c **** 	 0x66, 0x00,
 641:TP2824/TP2802.c **** 	 0x68, 0x00,
 642:TP2824/TP2802.c **** 	 0x69, 0x00,
 643:TP2824/TP2802.c **** 	 0x6a, 0x00,
 644:TP2824/TP2802.c **** 	 0x6b, 0x00,
 645:TP2824/TP2802.c **** 	 0x6c, 0x00,
 646:TP2824/TP2802.c **** 
 647:TP2824/TP2802.c **** 	0xff, 0xff
 648:TP2824/TP2802.c **** };
 649:TP2824/TP2802.c **** 
 650:TP2824/TP2802.c **** tcByte TP2824C_CVIHD_PTZ_DataSet[] = {//CVI CHD
 651:TP2824/TP2802.c **** 
 652:TP2824/TP2802.c **** 		//PTZ COC
 653:TP2824/TP2802.c **** //TX	
 654:TP2824/TP2802.c **** 	 0x70, 0x1D,
 655:TP2824/TP2802.c **** 	 0xc0, 0x00,	
 656:TP2824/TP2802.c **** 	 0xc2, 0x10,	
 657:TP2824/TP2802.c **** 	 0xc3, 0x00,	
 658:TP2824/TP2802.c **** 	 0xc1, 0x00,	
 659:TP2824/TP2802.c **** 	 0xc4, 0x00,	
 660:TP2824/TP2802.c **** 	 0xc5, 0x00,	
 661:TP2824/TP2802.c **** 	 0xc6, 0x15,	
ARM GAS  /tmp/ccFyOsmB.s 			page 13


 662:TP2824/TP2802.c **** 	 0xc7, 0x5B,	
 663:TP2824/TP2802.c **** 	 0xc8, 0xa4,
 664:TP2824/TP2802.c **** 	 0x6f, 0x48,
 665:TP2824/TP2802.c **** 
 666:TP2824/TP2802.c **** 	 0x55, 0x00,
 667:TP2824/TP2802.c **** 	 0x56, 0x00,
 668:TP2824/TP2802.c **** 	 0x57, 0x00,
 669:TP2824/TP2802.c **** 	 0x58, 0x00,
 670:TP2824/TP2802.c **** 	 0x59, 0x00,
 671:TP2824/TP2802.c **** 	 0x5a, 0x00,
 672:TP2824/TP2802.c **** 	 0x5b, 0x00,
 673:TP2824/TP2802.c **** 	 0x5c, 0x00,
 674:TP2824/TP2802.c **** 	 0x5d, 0x00,
 675:TP2824/TP2802.c **** 	 0x5e, 0x00,
 676:TP2824/TP2802.c **** 	 0x5f, 0x00,
 677:TP2824/TP2802.c **** 	 0x60, 0x00,
 678:TP2824/TP2802.c **** 	 0x62, 0x00,
 679:TP2824/TP2802.c **** 	 0x63, 0x00,
 680:TP2824/TP2802.c **** 	 0x64, 0x00,
 681:TP2824/TP2802.c **** 	 0x65, 0x00,
 682:TP2824/TP2802.c **** 	 0x66, 0x00,
 683:TP2824/TP2802.c **** 	 0x68, 0x00,
 684:TP2824/TP2802.c **** 	 0x69, 0x00,
 685:TP2824/TP2802.c **** 	 0x6a, 0x00,
 686:TP2824/TP2802.c **** 	 0x6b, 0x00,
 687:TP2824/TP2802.c **** 	 0x6c, 0x00,
 688:TP2824/TP2802.c **** 	
 689:TP2824/TP2802.c **** 	0xff, 0xff
 690:TP2824/TP2802.c **** };
 691:TP2824/TP2802.c **** 
 692:TP2824/TP2802.c **** #else
 693:TP2824/TP2802.c **** tcByte TP2824C_TVI_FHD_PTZ_DataSet[] = {//1080P30/25 TVI
 694:TP2824/TP2802.c **** 
 695:TP2824/TP2802.c **** 		//PTZ COC
 696:TP2824/TP2802.c **** //TX		
 697:TP2824/TP2802.c **** 	 0xc0, 0x00,	//TXLINE2  / TXLINE1
 698:TP2824/TP2802.c **** 	 0xc2, 0x0B,	//TXLINE1
 699:TP2824/TP2802.c **** 	 0xc3, 0x0C,	//TXLINE2
 700:TP2824/TP2802.c **** 	 0xc1, 0x00,	//TXLINE4  / TXLINE3
 701:TP2824/TP2802.c **** 	 0xc4, 0x00,	//TXLINE3
 702:TP2824/TP2802.c **** 	 0xc5, 0x00,	//TXLINE4
 703:TP2824/TP2802.c **** 	 0xc6, 0x33,	//TXBITCKNUM  0x19  0x1F  //0x19 for 1080P  ;  0x33 for 720P   // TVI 720P ptz 202005
 704:TP2824/TP2802.c **** 	 0xc7, 0x78,	//TXHST
 705:TP2824/TP2802.c **** 	 0xc8, 0x21,	//TXBITNUM  //0x21  0x27
 706:TP2824/TP2802.c **** 	 0x6f, 0x40,	//TXn pin enable
 707:TP2824/TP2802.c ****         0x70, 0x00,   //TXLMD[3]=0 / TXLNUM[2:0]=0
 708:TP2824/TP2802.c ****         
 709:TP2824/TP2802.c **** //PRESET 1
 710:TP2824/TP2802.c **** 	 //TXLINE1DATA
 711:TP2824/TP2802.c **** 	 0x55, 0x00,
 712:TP2824/TP2802.c **** 	 0x56, 0x02,
 713:TP2824/TP2802.c **** 	 0x57, 0xB5,
 714:TP2824/TP2802.c **** 	 0x58, 0x01,
 715:TP2824/TP2802.c **** 	 0x59, 0x17,
 716:TP2824/TP2802.c **** 	 0x5a, 0x01,
 717:TP2824/TP2802.c **** 	 //TXLINE2DATA
 718:TP2824/TP2802.c **** 	 0x5b, 0x00,
ARM GAS  /tmp/ccFyOsmB.s 			page 14


 719:TP2824/TP2802.c **** 	 0x5c, 0x02,
 720:TP2824/TP2802.c **** 	 0x5d, 0x00,
 721:TP2824/TP2802.c **** 	 0x5e, 0x00,
 722:TP2824/TP2802.c **** 	 0x5f, 0x00,
 723:TP2824/TP2802.c **** 	 0x60, 0xCE,
 724:TP2824/TP2802.c **** 	
 725:TP2824/TP2802.c ****  //RX
 726:TP2824/TP2802.c **** 	0xcb, 0x07,		//RXLINE1
 727:TP2824/TP2802.c **** 	0xcc, 0x08,		//RXLINE2
 728:TP2824/TP2802.c **** 	0xcd, 0x00,//0x09,		//RXLINE3
 729:TP2824/TP2802.c **** 	0xce, 0x00,//0x0a,		//RXLINE4
 730:TP2824/TP2802.c **** 	0xcf, 0x04,		//RXFREQ
 731:TP2824/TP2802.c **** 	0xd0, 0x00,		//RXFREQ
 732:TP2824/TP2802.c **** 	0xd1, 0x00,		//RXFREQ
 733:TP2824/TP2802.c **** 	0xd2, 0x60,		//RXTHLEVEL
 734:TP2824/TP2802.c **** 	0xd3, 0x10,		//RXHINUM
 735:TP2824/TP2802.c **** 	0xd4, 0x06,		//RXHST / RXHEND
 736:TP2824/TP2802.c **** 	0xd5, 0xbe,		//RXHST
 737:TP2824/TP2802.c **** 	0xd6, 0x39,		//RXHEND
 738:TP2824/TP2802.c **** 	0xd7, 0x21,//0x27,		//RXBITNUM
 739:TP2824/TP2802.c **** 	0xa7, 0x00,//
 740:TP2824/TP2802.c **** 	0xff, 0xff
 741:TP2824/TP2802.c **** };
 742:TP2824/TP2802.c **** 
 743:TP2824/TP2802.c **** tcByte TP2824C_AHD_FHD_PTZ_DataSet[] = {//1080P30/25 AHD
 744:TP2824/TP2802.c **** 
 745:TP2824/TP2802.c **** 		//PTZ COC
 746:TP2824/TP2802.c **** //TX		
 747:TP2824/TP2802.c **** 	 0xc0, 0x00,	//TXLINE2  / TXLINE1
 748:TP2824/TP2802.c **** 	 0xc2, 0x0E,	//TXLINE1
 749:TP2824/TP2802.c **** 	 0xc3, 0x0F,	//TXLINE2
 750:TP2824/TP2802.c **** 	 0xc1, 0x00,	//TXLINE4  / TXLINE3
 751:TP2824/TP2802.c **** 	 0xc4, 0x10,	//TXLINE3
 752:TP2824/TP2802.c **** 	 0xc5, 0x11,	//TXLINE4
 753:TP2824/TP2802.c **** 	 0xc6, 0x24,	//TXBITCKNUM
 754:TP2824/TP2802.c **** 	 0xc7, 0x15,	//TXHST[7:0]		//TXHST=0x215
 755:TP2824/TP2802.c **** 	 0xc8, 0x97,	//TXHST[9:8] / TXBITNUM:0x17
 756:TP2824/TP2802.c **** 	 0x6f, 0x44,	//TXn pin enable / TXACP
 757:TP2824/TP2802.c ****         0x70, 0x00,   //TXLMD[3]=0 / TXLNUM[2:0]=0
 758:TP2824/TP2802.c ****         
 759:TP2824/TP2802.c **** 	 //TXLINE1DATA
 760:TP2824/TP2802.c **** 	 0x55, 0x00,
 761:TP2824/TP2802.c **** 	 0x56, 0x00,
 762:TP2824/TP2802.c **** 	 0x57, 0x00,
 763:TP2824/TP2802.c **** 	 0x58, 0x00,
 764:TP2824/TP2802.c **** 	 0x59, 0x00,
 765:TP2824/TP2802.c **** 	 0x5a, 0x00,
 766:TP2824/TP2802.c **** 	 //TXLINE2DATA
 767:TP2824/TP2802.c **** 	 0x5b, 0x00,
 768:TP2824/TP2802.c **** 	 0x5c, 0x00,
 769:TP2824/TP2802.c **** 	 0x5d, 0x00,
 770:TP2824/TP2802.c **** 	 0x5e, 0x00,
 771:TP2824/TP2802.c **** 	 0x5f, 0x00,
 772:TP2824/TP2802.c **** 	 0x60, 0x00,
 773:TP2824/TP2802.c **** 	 //TXLINE3DATA
 774:TP2824/TP2802.c **** 	 0x62, 0x00,
 775:TP2824/TP2802.c **** 	 0x63, 0x00,
ARM GAS  /tmp/ccFyOsmB.s 			page 15


 776:TP2824/TP2802.c **** 	 0x64, 0x00,
 777:TP2824/TP2802.c **** 	 0x65, 0x00,
 778:TP2824/TP2802.c **** 	 0x66, 0x00,
 779:TP2824/TP2802.c ****  	 //TXLINE4DATA
 780:TP2824/TP2802.c **** 	 0x68, 0x00,
 781:TP2824/TP2802.c **** 	 0x69, 0x00,
 782:TP2824/TP2802.c **** 	 0x6a, 0x00,
 783:TP2824/TP2802.c **** 	 0x6b, 0x00,
 784:TP2824/TP2802.c **** 	 0x6c, 0x00,
 785:TP2824/TP2802.c ****  	
 786:TP2824/TP2802.c ****  //RX
 787:TP2824/TP2802.c **** 	0xcb, 0x07,		//RXLINE1
 788:TP2824/TP2802.c **** 	0xcc, 0x08,		//RXLINE2
 789:TP2824/TP2802.c **** 	0xcd, 0x00,//0x09,		//RXLINE3
 790:TP2824/TP2802.c **** 	0xce, 0x00,//0x0a,		//RXLINE4
 791:TP2824/TP2802.c **** 	0xcf, 0x04,		//RXFREQ
 792:TP2824/TP2802.c **** 	0xd0, 0x00,		//RXFREQ
 793:TP2824/TP2802.c **** 	0xd1, 0x00,		//RXFREQ
 794:TP2824/TP2802.c **** 	0xd2, 0x60,		//RXTHLEVEL
 795:TP2824/TP2802.c **** 	0xd3, 0x10,		//RXHINUM
 796:TP2824/TP2802.c **** 	0xd4, 0x06,		//RXHST / RXHEND
 797:TP2824/TP2802.c **** 	0xd5, 0xbe,		//RXHST
 798:TP2824/TP2802.c **** 	0xd6, 0x39,		//RXHEND
 799:TP2824/TP2802.c **** 	0xd7, 0x27,		//RXBITNUM
 800:TP2824/TP2802.c **** 	
 801:TP2824/TP2802.c **** 	0xa7, 0x24,//RXPWM / RXACP
 802:TP2824/TP2802.c **** 	
 803:TP2824/TP2802.c **** 	0xff, 0xff
 804:TP2824/TP2802.c **** };
 805:TP2824/TP2802.c **** 
 806:TP2824/TP2802.c **** tcByte TP2824C_CVBS_PTZ_DataSet[] = {//CVBS NTSC/PAL
 807:TP2824/TP2802.c **** 
 808:TP2824/TP2802.c **** 		//PTZ COC
 809:TP2824/TP2802.c **** //TX		
 810:TP2824/TP2802.c **** 	 0xc0, 0x00,	//TXLINE2  / TXLINE1
 811:TP2824/TP2802.c **** 	 0xc2, 0x0F,	//TXLINE1		//line18
 812:TP2824/TP2802.c **** 	 0xc3, 0x10,	//TXLINE2		//line19
 813:TP2824/TP2802.c **** 	 0xc1, 0x00,	//TXLINE4  / TXLINE3
 814:TP2824/TP2802.c **** 	 0xc4, 0x00,	//TXLINE3
 815:TP2824/TP2802.c **** 	 0xc5, 0x00,	//TXLINE4
 816:TP2824/TP2802.c **** 	 0xc6, 0x49,	//TXBITCKNUM
 817:TP2824/TP2802.c **** 	 0xc7, 0x14,	//TXHST[7:0]		//TXHST=0x214
 818:TP2824/TP2802.c **** 	 0xc8, 0xAF,	//TXHST[9:8] / TXBITNUM:0x2F
 819:TP2824/TP2802.c **** 	 0x6f, 0x60,	//TXn pin enable / TXPELCO2
 820:TP2824/TP2802.c ****         0x70, 0x00,   //TXLMD[3]=0 / TXLNUM[2:0]=0
 821:TP2824/TP2802.c ****         
 822:TP2824/TP2802.c **** 	 //TXLINE1DATA
 823:TP2824/TP2802.c **** 	 0x55, 0x00,
 824:TP2824/TP2802.c **** 	 0x56, 0x00,
 825:TP2824/TP2802.c **** 	 0x57, 0x00,
 826:TP2824/TP2802.c **** 	 0x58, 0x00,
 827:TP2824/TP2802.c **** 	 0x59, 0x00,//cmd2 [LSB first]
 828:TP2824/TP2802.c **** 	 0x5a, 0x00,//cmd1 [LSB first]
 829:TP2824/TP2802.c **** 	 //TXLINE2DATA
 830:TP2824/TP2802.c **** 	 0x5b, 0x00,
 831:TP2824/TP2802.c **** 	 0x5c, 0x00,
 832:TP2824/TP2802.c **** 	 0x5d, 0x00,
ARM GAS  /tmp/ccFyOsmB.s 			page 16


 833:TP2824/TP2802.c **** 	 0x5e, 0x00,
 834:TP2824/TP2802.c **** 	 0x5f, 0x00,//data2 [LSB first]
 835:TP2824/TP2802.c **** 	 0x60, 0x00,//data1 [LSB first]
 836:TP2824/TP2802.c **** 	 //TXLINE3DATA
 837:TP2824/TP2802.c **** 	 0x62, 0x00,
 838:TP2824/TP2802.c **** 	 0x63, 0x00,
 839:TP2824/TP2802.c **** 	 0x64, 0x00,
 840:TP2824/TP2802.c **** 	 0x65, 0x00,
 841:TP2824/TP2802.c **** 	 0x66, 0x00,
 842:TP2824/TP2802.c ****  	 //TXLINE4DATA
 843:TP2824/TP2802.c **** 	 0x68, 0x00,
 844:TP2824/TP2802.c **** 	 0x69, 0x00,
 845:TP2824/TP2802.c **** 	 0x6a, 0x00,
 846:TP2824/TP2802.c **** 	 0x6b, 0x00,
 847:TP2824/TP2802.c **** 	 0x6c, 0x00,
 848:TP2824/TP2802.c **** /* 	
 849:TP2824/TP2802.c ****  //RX
 850:TP2824/TP2802.c **** 	0xcb, 0x07,		//RXLINE1
 851:TP2824/TP2802.c **** 	0xcc, 0x08,		//RXLINE2
 852:TP2824/TP2802.c **** 	0xcd, 0x00,//0x09,		//RXLINE3
 853:TP2824/TP2802.c **** 	0xce, 0x00,//0x0a,		//RXLINE4
 854:TP2824/TP2802.c **** 	0xcf, 0x04,		//RXFREQ
 855:TP2824/TP2802.c **** 	0xd0, 0x00,		//RXFREQ
 856:TP2824/TP2802.c **** 	0xd1, 0x00,		//RXFREQ
 857:TP2824/TP2802.c **** 	0xd2, 0x60,		//RXTHLEVEL
 858:TP2824/TP2802.c **** 	0xd3, 0x10,		//RXHINUM
 859:TP2824/TP2802.c **** 	0xd4, 0x06,		//RXHST / RXHEND
 860:TP2824/TP2802.c **** 	0xd5, 0xbe,		//RXHST
 861:TP2824/TP2802.c **** 	0xd6, 0x39,		//RXHEND
 862:TP2824/TP2802.c **** 	0xd7, 0x27,		//RXBITNUM
 863:TP2824/TP2802.c **** 	
 864:TP2824/TP2802.c **** 	0xa7, 0x24,//RXPWM / RXACP
 865:TP2824/TP2802.c **** */	
 866:TP2824/TP2802.c **** 	0xff, 0xff
 867:TP2824/TP2802.c **** };
 868:TP2824/TP2802.c **** 
 869:TP2824/TP2802.c **** tcByte TP2824C_CVIHD_PTZ_DataSet[] = {//CVI CHD
 870:TP2824/TP2802.c **** 
 871:TP2824/TP2802.c **** 		//PTZ COC
 872:TP2824/TP2802.c **** //TX	
 873:TP2824/TP2802.c **** 	 0x70, 0x1D,   //TCMFR[4]=1 / TXLMD[3]=1 / TXLNUM[2:0]=5
 874:TP2824/TP2802.c **** 	 0xc0, 0x00,	//TXLINE2  / TXLINE1
 875:TP2824/TP2802.c **** 	 0xc2, 0x10,	//TXLINE1		//line18
 876:TP2824/TP2802.c **** 	 0xc3, 0x00,	//TXLINE2		//line19
 877:TP2824/TP2802.c **** 	 0xc1, 0x00,	//TXLINE4  / TXLINE3
 878:TP2824/TP2802.c **** 	 0xc4, 0x00,	//TXLINE3
 879:TP2824/TP2802.c **** 	 0xc5, 0x00,	//TXLINE4
 880:TP2824/TP2802.c **** 	 0xc6, 0x15,	//TXBITCKNUM
 881:TP2824/TP2802.c **** 	 0xc7, 0x5B,	//TXHST[7:0]		//TXHST=0x25B
 882:TP2824/TP2802.c **** 	 0xc8, 0xa4,//0x97,	//TXHST[9:8]0b10xx xxxx / TXBITNUM:0x17=>0x24
 883:TP2824/TP2802.c **** 	 0x6f, 0x48,	//TXn pin enable / TXDAH
 884:TP2824/TP2802.c **** 
 885:TP2824/TP2802.c **** 	 //TXLINE1DATA
 886:TP2824/TP2802.c **** 	 0x55, 0x00,
 887:TP2824/TP2802.c **** 	 0x56, 0x00,
 888:TP2824/TP2802.c **** 	 0x57, 0x00,
 889:TP2824/TP2802.c **** 	 0x58, 0x00,
ARM GAS  /tmp/ccFyOsmB.s 			page 17


 890:TP2824/TP2802.c **** 	 0x59, 0x00,//cmd2 [LSB first]
 891:TP2824/TP2802.c **** 	 0x5a, 0x00,//cmd1 [LSB first]
 892:TP2824/TP2802.c **** 	 //TXLINE2DATA
 893:TP2824/TP2802.c **** 	 0x5b, 0x00,
 894:TP2824/TP2802.c **** 	 0x5c, 0x00,
 895:TP2824/TP2802.c **** 	 0x5d, 0x00,
 896:TP2824/TP2802.c **** 	 0x5e, 0x00,
 897:TP2824/TP2802.c **** 	 0x5f, 0x00,//data2 [LSB first]
 898:TP2824/TP2802.c **** 	 0x60, 0x00,//data1 [LSB first]
 899:TP2824/TP2802.c **** 	 //TXLINE3DATA
 900:TP2824/TP2802.c **** 	 0x62, 0x00,
 901:TP2824/TP2802.c **** 	 0x63, 0x00,
 902:TP2824/TP2802.c **** 	 0x64, 0x00,
 903:TP2824/TP2802.c **** 	 0x65, 0x00,
 904:TP2824/TP2802.c **** 	 0x66, 0x00,
 905:TP2824/TP2802.c ****  	 //TXLINE4DATA
 906:TP2824/TP2802.c **** 	 0x68, 0x00,
 907:TP2824/TP2802.c **** 	 0x69, 0x00,
 908:TP2824/TP2802.c **** 	 0x6a, 0x00,
 909:TP2824/TP2802.c **** 	 0x6b, 0x00,
 910:TP2824/TP2802.c **** 	 0x6c, 0x00,
 911:TP2824/TP2802.c **** /* 	
 912:TP2824/TP2802.c ****  //RX
 913:TP2824/TP2802.c **** 	0xcb, 0x07,		//RXLINE1
 914:TP2824/TP2802.c **** 	0xcc, 0x08,		//RXLINE2
 915:TP2824/TP2802.c **** 	0xcd, 0x00,//0x09,		//RXLINE3
 916:TP2824/TP2802.c **** 	0xce, 0x00,//0x0a,		//RXLINE4
 917:TP2824/TP2802.c **** 	0xcf, 0x04,		//RXFREQ
 918:TP2824/TP2802.c **** 	0xd0, 0x00,		//RXFREQ
 919:TP2824/TP2802.c **** 	0xd1, 0x00,		//RXFREQ
 920:TP2824/TP2802.c **** 	0xd2, 0x60,		//RXTHLEVEL
 921:TP2824/TP2802.c **** 	0xd3, 0x10,		//RXHINUM
 922:TP2824/TP2802.c **** 	0xd4, 0x06,		//RXHST / RXHEND
 923:TP2824/TP2802.c **** 	0xd5, 0xbe,		//RXHST
 924:TP2824/TP2802.c **** 	0xd6, 0x39,		//RXHEND
 925:TP2824/TP2802.c **** 	0xd7, 0x27,		//RXBITNUM
 926:TP2824/TP2802.c **** 	
 927:TP2824/TP2802.c **** 	0xa7, 0x24,//RXPWM / RXACP
 928:TP2824/TP2802.c **** */	
 929:TP2824/TP2802.c **** 	0xff, 0xff
 930:TP2824/TP2802.c **** };
 931:TP2824/TP2802.c **** #endif
 932:TP2824/TP2802.c **** 	 
 933:TP2824/TP2802.c **** //chunyu
 934:TP2824/TP2802.c **** void I2CDeviceSet1( tcByte *RegSet)
 935:TP2824/TP2802.c **** {
 936:TP2824/TP2802.c **** 	int	cnt=0;
 937:TP2824/TP2802.c **** 	tByte index, val;
 938:TP2824/TP2802.c **** 
 939:TP2824/TP2802.c **** 	// Output discription
 940:TP2824/TP2802.c **** 	#ifdef TASKING
 941:TP2824/TP2802.c **** 	while( *RegSet ) 
 942:TP2824/TP2802.c **** 		RS_tx( *RegSet++ );
 943:TP2824/TP2802.c **** 	RegSet++;
 944:TP2824/TP2802.c **** 	#endif
 945:TP2824/TP2802.c **** 
 946:TP2824/TP2802.c **** 	while ( *RegSet != 0xFF ) {
ARM GAS  /tmp/ccFyOsmB.s 			page 18


 947:TP2824/TP2802.c **** 
 948:TP2824/TP2802.c **** 		index = *RegSet;
 949:TP2824/TP2802.c **** 		val = *(RegSet+1);
 950:TP2824/TP2802.c **** //		MonWriteI2C(addr, index, val);
 951:TP2824/TP2802.c **** 		tp28xx_byte_write(index, val);
 952:TP2824/TP2802.c **** 
 953:TP2824/TP2802.c **** //		Puts("\r\n");
 954:TP2824/TP2802.c **** 
 955:TP2824/TP2802.c **** 		RegSet+=2;
 956:TP2824/TP2802.c **** 
 957:TP2824/TP2802.c **** 		cnt--;
 958:TP2824/TP2802.c **** 	}	
 959:TP2824/TP2802.c ****     delay(50); //50*5 =250ms
 960:TP2824/TP2802.c **** }
 961:TP2824/TP2802.c **** 
 962:TP2824/TP2802.c **** 
 963:TP2824/TP2802.c **** void I2CDeviceSet2( tcByte *RegSet, tcByte *DatSet)
 964:TP2824/TP2802.c **** {
 965:TP2824/TP2802.c **** 	int	cnt=0;
 966:TP2824/TP2802.c **** 	tByte index, val;
 967:TP2824/TP2802.c **** 
 968:TP2824/TP2802.c **** 	while ( *RegSet != 0xFF ) {
 969:TP2824/TP2802.c **** 
 970:TP2824/TP2802.c **** 		index = *RegSet;
 971:TP2824/TP2802.c **** 		val = *DatSet;
 972:TP2824/TP2802.c **** //		MonWriteI2C(addr, index, val);
 973:TP2824/TP2802.c **** 		tp28xx_byte_write(index, val);
 974:TP2824/TP2802.c **** 
 975:TP2824/TP2802.c **** //		Puts("\r\n");
 976:TP2824/TP2802.c **** 
 977:TP2824/TP2802.c **** 		RegSet++;
 978:TP2824/TP2802.c **** 		DatSet++;
 979:TP2824/TP2802.c **** 
 980:TP2824/TP2802.c **** 		cnt--;
 981:TP2824/TP2802.c **** 	}
 982:TP2824/TP2802.c ****     delay(50); //50*5 =250ms
 983:TP2824/TP2802.c **** }
 984:TP2824/TP2802.c **** 
 985:TP2824/TP2802.c **** void SetRegPage(tByte channel)
 986:TP2824/TP2802.c **** {
 987:TP2824/TP2802.c ****     //tByte tmp;
 988:TP2824/TP2802.c ****     //tmp = tp28xx_byte_read(tByte index);
 989:TP2824/TP2802.c ****     tp28xx_byte_write(0x40,channel);
 990:TP2824/TP2802.c ****     //tp28xx_byte_write(0x40,0x04); //chunyu
 991:TP2824/TP2802.c ****  //  printf("\r\nChannel-%02x ",(tWord)channel);
 992:TP2824/TP2802.c **** }
 993:TP2824/TP2802.c **** 
 994:TP2824/TP2802.c **** /*
 995:TP2824/TP2802.c **** void Write_AllRegPage(tByte addr, tByte bitpos, tByte bitval){
 996:TP2824/TP2802.c **** 	tByte ch;
 997:TP2824/TP2802.c **** 	tByte val;
 998:TP2824/TP2802.c **** 	tByte mask=0x00;
 999:TP2824/TP2802.c **** 	tByte maskb;
1000:TP2824/TP2802.c **** 	tByte Reg40;
1001:TP2824/TP2802.c **** 
1002:TP2824/TP2802.c **** 	Reg40 = tp28xx_byte_read(TVII2CAddress,0x40);
1003:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccFyOsmB.s 			page 19


1004:TP2824/TP2802.c **** 	mask = 0x01 << bitpos;
1005:TP2824/TP2802.c **** 	maskb = ~mask;
1006:TP2824/TP2802.c **** 
1007:TP2824/TP2802.c **** 	for(ch=CH1;ch<=CH4;ch++){
1008:TP2824/TP2802.c **** 		tp28xx_byte_write(TVII2CAddress,0x40,ch);
1009:TP2824/TP2802.c **** 		val = tp28xx_byte_read(TVII2CAddress,addr);
1010:TP2824/TP2802.c **** 		if(bitval)
1011:TP2824/TP2802.c **** 			tp28xx_byte_write(TVII2CAddress,addr,(val|mask));
1012:TP2824/TP2802.c **** 		else
1013:TP2824/TP2802.c **** 			tp28xx_byte_write(TVII2CAddress,addr,(val&maskb));
1014:TP2824/TP2802.c **** 	}
1015:TP2824/TP2802.c **** 
1016:TP2824/TP2802.c **** 	tp28xx_byte_write(TVII2CAddress,0x40,Reg40);
1017:TP2824/TP2802.c **** }
1018:TP2824/TP2802.c **** */
1019:TP2824/TP2802.c **** 
1020:TP2824/TP2802.c **** /*
1021:TP2824/TP2802.c **** void Set_16Bits_VDCLK_Out(){
1022:TP2824/TP2802.c **** 
1023:TP2824/TP2802.c **** 	Write_AllRegPage(0x02,7,0);
1024:TP2824/TP2802.c **** 	tp28xx_byte_write(TVII2CAddress,0x4b,0x40);
1025:TP2824/TP2802.c **** }
1026:TP2824/TP2802.c **** 
1027:TP2824/TP2802.c **** void Set_16Bits_VD_Out(tByte channel){
1028:TP2824/TP2802.c **** 	tByte Reg02,Reg4b;
1029:TP2824/TP2802.c **** 	tByte VD2SEL;
1030:TP2824/TP2802.c **** 	tByte VD1SEL;
1031:TP2824/TP2802.c **** 	tByte dat;
1032:TP2824/TP2802.c **** 
1033:TP2824/TP2802.c **** 	Reg02 = tp28xx_byte_read(TVII2CAddress,0x02);
1034:TP2824/TP2802.c **** 	Reg4b = tp28xx_byte_read(TVII2CAddress,0x4b);
1035:TP2824/TP2802.c **** 
1036:TP2824/TP2802.c **** 
1037:TP2824/TP2802.c **** 	tp28xx_byte_write(TVII2CAddress,0x02,(Reg02&0x7f));
1038:TP2824/TP2802.c **** 
1039:TP2824/TP2802.c **** 	switch (channel){
1040:TP2824/TP2802.c **** 		case CH1:
1041:TP2824/TP2802.c **** 			VD2SEL = VIN1_C;
1042:TP2824/TP2802.c **** 			VD1SEL = VIN1_Y;
1043:TP2824/TP2802.c **** 			break;
1044:TP2824/TP2802.c **** 		case CH2:
1045:TP2824/TP2802.c **** 			VD2SEL = VIN2_C;
1046:TP2824/TP2802.c **** 			VD1SEL = VIN2_Y;
1047:TP2824/TP2802.c **** 			break;
1048:TP2824/TP2802.c **** 		case CH3:
1049:TP2824/TP2802.c **** 			VD2SEL = VIN3_C;
1050:TP2824/TP2802.c **** 			VD1SEL = VIN3_Y;
1051:TP2824/TP2802.c **** 			break;
1052:TP2824/TP2802.c **** 		case CH4:
1053:TP2824/TP2802.c **** 			VD2SEL = VIN4_C;
1054:TP2824/TP2802.c **** 			VD1SEL = VIN4_Y;
1055:TP2824/TP2802.c **** 			break;
1056:TP2824/TP2802.c **** 		}
1057:TP2824/TP2802.c **** 	dat = (VD2SEL<<4)|VD1SEL;
1058:TP2824/TP2802.c **** 	tp28xx_byte_write(TVII2CAddress,0x4b,dat);
1059:TP2824/TP2802.c **** 
1060:TP2824/TP2802.c **** }
ARM GAS  /tmp/ccFyOsmB.s 			page 20


1061:TP2824/TP2802.c **** */
1062:TP2824/TP2802.c **** 
1063:TP2824/TP2802.c **** tcByte TP2802_FORMAT_DataSet[][12+1] =
1064:TP2824/TP2802.c **** {
1065:TP2824/TP2802.c ****     {0x02,0x15,0x16,0x17,0x18,0x19,0x1a,0x1c,0x1d,0x35,0x36,0x14,0xff}, //reg
1066:TP2824/TP2802.c ****     {0x48,0x03,0xd3,0x80,0x29,0x38,0x47,0x08,0x98,0x05,0xdc,0x0A,0xff}, //1080p30
1067:TP2824/TP2802.c ****     {0x48,0x03,0xd3,0x80,0x29,0x38,0x47,0x0a,0x50,0x05,0xdc,0x0A,0xff}, //1080p25
1068:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x06,0x72,0x05,0xdc,0x0A,0xff}, //720p60 720p30V2
1069:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x07,0xbc,0x05,0xdc,0x0A,0xff}, //720p50 720p25V2
1070:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x0c,0xe4,0x05,0xdc,0x0A,0xff}, //720p30    //5
1071:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x0f,0x78,0x05,0xdc,0x0A,0xff}, //720p25
1072:TP2824/TP2802.c ****     {0x4f,0x13,0x4e,0xbc,0x15,0xf0,0x07,0x09,0x38,0x25,0xdc,0x0A,0xff}, //NTSC
1073:TP2824/TP2802.c ****     {0x4f,0x13,0x5f,0xbc,0x17,0x20,0x17,0x09,0x48,0x25,0xdc,0x0A,0xff}, //PAL
1074:TP2824/TP2802.c ****     {0x48,0x13,0x6c,0x00,0x2c,0x00,0x68,0x09,0xc4,0x16,0x30,0x0A,0xff}, //3M18
1075:TP2824/TP2802.c ****     {0x48,0x13,0x1f,0x20,0x34,0x98,0x7a,0x0b,0x9a,0x17,0xd0,0x0A,0xff}, //5M12      //10
1076:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x06,0x72,0x25,0xdc,0x0A,0xff}, //720p30V2
1077:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x07,0xbc,0x25,0xdc,0x0A,0xff}, //720p25V2
1078:TP2824/TP2802.c ****     {0x48,0x13,0x1f,0x80,0x7d,0xf0,0x5a,0x0b,0xb8,0x16,0x72,0x0A,0xff}, //4M15
1079:TP2824/TP2802.c ****     {0x48,0x13,0x6c,0x00,0x2c,0x00,0x68,0x09,0xc4,0x16,0x72,0x0A,0xff}, //3M20
1080:TP2824/TP2802.c ****     {0x48,0x23,0x34,0x78,0x8c,0xf0,0x5a,0x0c,0xe4,0x17,0x08,0x0A,0xff}, //4M12
1081:TP2824/TP2802.c ****     {0x48,0x13,0xec,0x80,0xb0,0x08,0x7c,0x0e,0xa6,0x17,0xbc,0x0A,0xff}, //6M10
1082:TP2824/TP2802.c ****     {0x48,0x13,0x0f,0x00,0x32,0xa0,0x55,0x06,0x72,0x15,0xdc,0x0A,0xff}, //4M30
1083:TP2824/TP2802.c ****     {0x48,0x13,0x20,0x00,0x20,0xa0,0x55,0x07,0xbc,0x15,0xdc,0x0A,0xff}  //4M25
1084:TP2824/TP2802.c **** 
1085:TP2824/TP2802.c ****     //{0xc8,0x13,0x6c,0x20,0x2c,0xf0,0x5a,0x0b,0xb8,0x16,0x72,0xff}, //2592x1520p15
1086:TP2824/TP2802.c **** };
1087:TP2824/TP2802.c **** 
1088:TP2824/TP2802.c **** static void tp28xx_SYSCLK_V2(unsigned char ch)
1089:TP2824/TP2802.c **** {
1090:TP2824/TP2802.c ****     unsigned char tmp;
1091:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0xf5);
1092:TP2824/TP2802.c ****     tmp |= SYS_MODE[ch];
1093:TP2824/TP2802.c ****     tp28xx_byte_write(0xf5, tmp);
1094:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x35);
1095:TP2824/TP2802.c ****     tmp |= 0x20;
1096:TP2824/TP2802.c ****     tp28xx_byte_write(0x35, tmp);
1097:TP2824/TP2802.c **** }
1098:TP2824/TP2802.c **** static void tp28xx_SYSCLK_V1(unsigned char ch)
1099:TP2824/TP2802.c **** {
1100:TP2824/TP2802.c ****     unsigned char tmp;
1101:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0xf5);
1102:TP2824/TP2802.c ****     tmp &= SYS_AND[ch];
1103:TP2824/TP2802.c ****     tp28xx_byte_write(0xf5, tmp);
1104:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x35);
1105:TP2824/TP2802.c ****     tmp &= 0xdf;
1106:TP2824/TP2802.c ****     tp28xx_byte_write(0x35, tmp);
1107:TP2824/TP2802.c **** }
1108:TP2824/TP2802.c **** 
1109:TP2824/TP2802.c **** void Set_VidRes(tByte ch)
1110:TP2824/TP2802.c **** {
1111:TP2824/TP2802.c ****     tByte index, sys, tmp;
1112:TP2824/TP2802.c **** 	sys = 1;  //V1
1113:TP2824/TP2802.c ****     //printf("Set_VidRes");
1114:TP2824/TP2802.c ****     switch(mode[ch])
1115:TP2824/TP2802.c ****     {
1116:TP2824/TP2802.c ****     case R1080P30:
1117:TP2824/TP2802.c ****         index=1;//1080p30
ARM GAS  /tmp/ccFyOsmB.s 			page 21


1118:TP2824/TP2802.c ****         sys=1;//V1
1119:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1120:TP2824/TP2802.c ****         printf("1080p30");
1121:TP2824/TP2802.c ****         break;
1122:TP2824/TP2802.c **** 
1123:TP2824/TP2802.c ****     case R1080P25:
1124:TP2824/TP2802.c ****         index=2;//1080p25
1125:TP2824/TP2802.c ****         sys=1;//V1
1126:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1127:TP2824/TP2802.c ****         printf("1080p25");
1128:TP2824/TP2802.c ****         break;
1129:TP2824/TP2802.c **** 
1130:TP2824/TP2802.c ****     case R720P60:
1131:TP2824/TP2802.c ****         index=3;//720p60 720p30V2
1132:TP2824/TP2802.c ****         sys=1;//V1
1133:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1134:TP2824/TP2802.c ****         printf("720p60");
1135:TP2824/TP2802.c ****         break;
1136:TP2824/TP2802.c **** 
1137:TP2824/TP2802.c ****     case R720P30V2:
1138:TP2824/TP2802.c ****         index=11;//720p30V2 
1139:TP2824/TP2802.c ****         sys=2;//V2
1140:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1141:TP2824/TP2802.c ****         printf("720p30V2");
1142:TP2824/TP2802.c ****         break;
1143:TP2824/TP2802.c **** 
1144:TP2824/TP2802.c ****     case R720P50:
1145:TP2824/TP2802.c ****         index=4;//720p50 720p25V2
1146:TP2824/TP2802.c ****         sys=1;//V1
1147:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1148:TP2824/TP2802.c ****         printf("720p50");
1149:TP2824/TP2802.c ****         break;
1150:TP2824/TP2802.c **** 
1151:TP2824/TP2802.c ****     case R720P25V2:
1152:TP2824/TP2802.c ****         index=12;//720p25V2 
1153:TP2824/TP2802.c ****         sys=2;//V2
1154:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1155:TP2824/TP2802.c ****         printf("720p25V2");
1156:TP2824/TP2802.c ****         break;
1157:TP2824/TP2802.c **** 
1158:TP2824/TP2802.c ****     case R720P30:
1159:TP2824/TP2802.c ****         index=5;//720p30
1160:TP2824/TP2802.c ****         sys=1;//V1
1161:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1162:TP2824/TP2802.c ****         printf("720p30");
1163:TP2824/TP2802.c ****         break;
1164:TP2824/TP2802.c **** 
1165:TP2824/TP2802.c ****     case R720P25:
1166:TP2824/TP2802.c ****         index=6;//720p25
1167:TP2824/TP2802.c ****         sys=1;//V1
1168:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1169:TP2824/TP2802.c ****         printf("720p25");
1170:TP2824/TP2802.c ****         break;
1171:TP2824/TP2802.c **** 
1172:TP2824/TP2802.c ****     case PAL:
1173:TP2824/TP2802.c ****         index=8;
1174:TP2824/TP2802.c ****         sys=4;
ARM GAS  /tmp/ccFyOsmB.s 			page 22


1175:TP2824/TP2802.c ****         ManVidResRx=RES1920X576;
1176:TP2824/TP2802.c ****         printf("PAL");
1177:TP2824/TP2802.c ****         break;
1178:TP2824/TP2802.c **** 
1179:TP2824/TP2802.c ****     case NTSC:
1180:TP2824/TP2802.c ****         index=7;
1181:TP2824/TP2802.c ****         sys=3;
1182:TP2824/TP2802.c ****         ManVidResRx=RES1920X480;
1183:TP2824/TP2802.c ****         printf("NTSC");
1184:TP2824/TP2802.c ****         break;
1185:TP2824/TP2802.c **** 
1186:TP2824/TP2802.c ****     case R3M18:
1187:TP2824/TP2802.c ****         index=9;//3M18           
1188:TP2824/TP2802.c ****         sys=1;//V1
1189:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1190:TP2824/TP2802.c ****         printf("3M18");
1191:TP2824/TP2802.c ****         break;
1192:TP2824/TP2802.c **** 
1193:TP2824/TP2802.c ****     case R5M12:
1194:TP2824/TP2802.c ****         index=10;//5M12 
1195:TP2824/TP2802.c ****         sys=1;//V1
1196:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1197:TP2824/TP2802.c ****         printf("5M12");
1198:TP2824/TP2802.c ****         break;
1199:TP2824/TP2802.c **** 
1200:TP2824/TP2802.c ****     case R4M15:
1201:TP2824/TP2802.c ****         index=13;//4M15
1202:TP2824/TP2802.c ****         sys=1;//V1
1203:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1204:TP2824/TP2802.c ****         printf("4M15");
1205:TP2824/TP2802.c ****         break;
1206:TP2824/TP2802.c **** 
1207:TP2824/TP2802.c ****     case R3M20:
1208:TP2824/TP2802.c ****         index=14;//3M20
1209:TP2824/TP2802.c ****         sys=1;//V1
1210:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1211:TP2824/TP2802.c ****         printf("3M20");
1212:TP2824/TP2802.c ****         break;
1213:TP2824/TP2802.c **** 
1214:TP2824/TP2802.c ****     case R4M12:
1215:TP2824/TP2802.c ****         index=15;//4M12
1216:TP2824/TP2802.c ****         sys=1;//V1
1217:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1218:TP2824/TP2802.c ****         printf("4M12");
1219:TP2824/TP2802.c ****         break;
1220:TP2824/TP2802.c **** 
1221:TP2824/TP2802.c ****     case R6M10:
1222:TP2824/TP2802.c ****         index=16;//6M10
1223:TP2824/TP2802.c ****         sys=1;//V1
1224:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1225:TP2824/TP2802.c ****         printf("6M10");
1226:TP2824/TP2802.c ****         break;
1227:TP2824/TP2802.c **** 
1228:TP2824/TP2802.c ****     case R4M30:
1229:TP2824/TP2802.c ****         index=17;//4M30
1230:TP2824/TP2802.c ****         sys=1;//V1
1231:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
ARM GAS  /tmp/ccFyOsmB.s 			page 23


1232:TP2824/TP2802.c ****         printf("4M30");
1233:TP2824/TP2802.c ****         break;
1234:TP2824/TP2802.c **** 
1235:TP2824/TP2802.c ****     default:
1236:TP2824/TP2802.c ****         index=1;//1080p30
1237:TP2824/TP2802.c ****         break;
1238:TP2824/TP2802.c ****     }
1239:TP2824/TP2802.c ****     printf("...\r\n");
1240:TP2824/TP2802.c **** 
1241:TP2824/TP2802.c ****     //I2CDeviceSet(TVII2CAddress, ptr_TP2802_Res );
1242:TP2824/TP2802.c ****     I2CDeviceSet2( TP2802_FORMAT_DataSet[0],TP2802_FORMAT_DataSet[index] );
1243:TP2824/TP2802.c ****     //	printf("chip= 0x%4x\r\n",chip);
1244:TP2824/TP2802.c **** if( mode[ch]==R1080P30)
1245:TP2824/TP2802.c **** {
1246:TP2824/TP2802.c ****     tp28xx_byte_write(0x16, 0xCE);
1247:TP2824/TP2802.c **** }
1248:TP2824/TP2802.c **** 
1249:TP2824/TP2802.c ****     if(TP2853C == chip)
1250:TP2824/TP2802.c ****     {
1251:TP2824/TP2802.c ****         I2CDeviceSet2( TP2853C_MODE_DataSet[0],TP2853C_MODE_DataSet[sys] );
1252:TP2824/TP2802.c ****     }
1253:TP2824/TP2802.c ****     else if(TP2833 == chip)
1254:TP2824/TP2802.c ****     {
1255:TP2824/TP2802.c ****         I2CDeviceSet2( TP2833_MODE_DataSet[0],TP2833_MODE_DataSet[sys] );
1256:TP2824/TP2802.c ****     }
1257:TP2824/TP2802.c ****     else if(TP2834 == chip)
1258:TP2824/TP2802.c ****     {
1259:TP2824/TP2802.c ****         I2CDeviceSet2( TP2834_MODE_DataSet[0],TP2834_MODE_DataSet[sys] );
1260:TP2824/TP2802.c ****     }
1261:TP2824/TP2802.c ****     if(TP2826 == chip)
1262:TP2824/TP2802.c ****     {
1263:TP2824/TP2802.c ****         printf("tp2826MODEDATASET\r\n");
1264:TP2824/TP2802.c ****         I2CDeviceSet2( TP2826_MODE_DataSet[0],TP2826_MODE_DataSet[sys] );
1265:TP2824/TP2802.c ****     }
1266:TP2824/TP2802.c ****     if(TP2824C == chip)
1267:TP2824/TP2802.c ****     {
1268:TP2824/TP2802.c ****         printf("tp2824C MODEDATASET\r\n");
1269:TP2824/TP2802.c ****         I2CDeviceSet2( TP2824C_MODE_DataSet[0],TP2824C_MODE_DataSet[sys] );
1270:TP2824/TP2802.c ****     }
1271:TP2824/TP2802.c **** 
1272:TP2824/TP2802.c ****     if(1 == sys)
1273:TP2824/TP2802.c ****         tp28xx_SYSCLK_V1(ch);
1274:TP2824/TP2802.c ****     else
1275:TP2824/TP2802.c ****         tp28xx_SYSCLK_V2(ch);
1276:TP2824/TP2802.c **** 
1277:TP2824/TP2802.c ****     tp28xx_byte_write(0x13, 0x00);
1278:TP2824/TP2802.c ****     tmp=tp28xx_byte_read(0x14);
1279:TP2824/TP2802.c ****     tmp &= 0x9f;
1280:TP2824/TP2802.c ****     tp28xx_byte_write(0x14, tmp);
1281:TP2824/TP2802.c **** 
1282:TP2824/TP2802.c **** #if(OUTPUT == Bits16out)
1283:TP2824/TP2802.c ****     tmp=tp28xx_byte_read(0x02);
1284:TP2824/TP2802.c ****     tmp &= 0x7f;
1285:TP2824/TP2802.c ****     tp28xx_byte_write(0x02, tmp);
1286:TP2824/TP2802.c **** #else
1287:TP2824/TP2802.c ****     tmp=tp28xx_byte_read(0x02);
1288:TP2824/TP2802.c ****     tmp |= 0x80;
ARM GAS  /tmp/ccFyOsmB.s 			page 24


1289:TP2824/TP2802.c ****     tp28xx_byte_write(0x02, tmp);
1290:TP2824/TP2802.c **** #endif
1291:TP2824/TP2802.c **** }
1292:TP2824/TP2802.c **** 
1293:TP2824/TP2802.c **** tByte Set_HDA(tByte ch)
1294:TP2824/TP2802.c **** {
1295:TP2824/TP2802.c **** 
1296:TP2824/TP2802.c ****     tByte index,tmp;
1297:TP2824/TP2802.c ****     index=0;
1298:TP2824/TP2802.c **** 
1299:TP2824/TP2802.c ****     switch(mode[ch])
1300:TP2824/TP2802.c ****     {
1301:TP2824/TP2802.c ****     case R1080P30:
1302:TP2824/TP2802.c ****         index=3;
1303:TP2824/TP2802.c ****         break;
1304:TP2824/TP2802.c **** 
1305:TP2824/TP2802.c ****     case R1080P25:
1306:TP2824/TP2802.c ****         index=4;
1307:TP2824/TP2802.c ****         break;
1308:TP2824/TP2802.c **** 		
1309:TP2824/TP2802.c ****     case R720P60://20200507    
1310:TP2824/TP2802.c ****     case R720P30V2:
1311:TP2824/TP2802.c ****         index=1;
1312:TP2824/TP2802.c ****         break;
1313:TP2824/TP2802.c **** 		
1314:TP2824/TP2802.c ****     case R720P50://20200507    
1315:TP2824/TP2802.c ****     case R720P25V2:
1316:TP2824/TP2802.c ****         index=2;
1317:TP2824/TP2802.c ****         break;
1318:TP2824/TP2802.c ****     }
1319:TP2824/TP2802.c ****     if(index)
1320:TP2824/TP2802.c ****     {
1321:TP2824/TP2802.c ****         Set_VidRes(ch);
1322:TP2824/TP2802.c **** 
1323:TP2824/TP2802.c ****         if(TP2853C == chip)
1324:TP2824/TP2802.c ****         {
1325:TP2824/TP2802.c ****             I2CDeviceSet2(TP2853C_HDA_DataSet[0],TP2853C_HDA_DataSet[index] );
1326:TP2824/TP2802.c ****         }
1327:TP2824/TP2802.c ****         else if(TP2833 == chip || TP2834 == chip )
1328:TP2824/TP2802.c ****         {
1329:TP2824/TP2802.c ****             I2CDeviceSet2(TP2833_HDA_DataSet[0],TP2833_HDA_DataSet[index] );
1330:TP2824/TP2802.c ****         }
1331:TP2824/TP2802.c ****         else if(TP2826 == chip)
1332:TP2824/TP2802.c ****         {
1333:TP2824/TP2802.c ****             I2CDeviceSet2(TP2826_HDA_DataSet[0],TP2826_HDA_DataSet[index] );
1334:TP2824/TP2802.c ****         }
1335:TP2824/TP2802.c ****         else if(TP2824C == chip)
1336:TP2824/TP2802.c ****         {
1337:TP2824/TP2802.c ****             I2CDeviceSet2(TP2824C_HDA_DataSet[0],TP2824C_HDA_DataSet[index] );
1338:TP2824/TP2802.c ****         }
1339:TP2824/TP2802.c ****         tmp=tp28xx_byte_read(0x14);
1340:TP2824/TP2802.c ****         tmp |= 0x40;
1341:TP2824/TP2802.c **** 
1342:TP2824/TP2802.c **** 		
1343:TP2824/TP2802.c **** //   	tmp|=0x0a;//0x14 sharpness   =0x0a ryan@20210317
1344:TP2824/TP2802.c ****    	tmp=0x0a;//0x14 sharpness   =0x0a ryan@20210629
1345:TP2824/TP2802.c ****    
ARM GAS  /tmp/ccFyOsmB.s 			page 25


1346:TP2824/TP2802.c ****         tp28xx_byte_write(0x14, tmp);
1347:TP2824/TP2802.c **** 
1348:TP2824/TP2802.c ****     }
1349:TP2824/TP2802.c ****     return index;
1350:TP2824/TP2802.c **** }
1351:TP2824/TP2802.c **** 
1352:TP2824/TP2802.c **** tByte Set_HDC(tByte ch)
1353:TP2824/TP2802.c **** {
1354:TP2824/TP2802.c **** 
1355:TP2824/TP2802.c ****     tByte index;
1356:TP2824/TP2802.c **** 
1357:TP2824/TP2802.c ****     index=0;
1358:TP2824/TP2802.c **** 
1359:TP2824/TP2802.c ****     switch(mode[ch])
1360:TP2824/TP2802.c ****     {
1361:TP2824/TP2802.c **** 
1362:TP2824/TP2802.c ****     case R1080P30:
1363:TP2824/TP2802.c ****         index=3;
1364:TP2824/TP2802.c ****         break;
1365:TP2824/TP2802.c **** 
1366:TP2824/TP2802.c ****     case R1080P25:
1367:TP2824/TP2802.c ****         index=4;
1368:TP2824/TP2802.c ****         break;
1369:TP2824/TP2802.c **** 
1370:TP2824/TP2802.c ****     case R720P60://20200507    
1371:TP2824/TP2802.c ****     case R720P30V2:
1372:TP2824/TP2802.c ****         index=1;
1373:TP2824/TP2802.c ****         break;
1374:TP2824/TP2802.c **** 
1375:TP2824/TP2802.c ****     case R720P50://20200507    
1376:TP2824/TP2802.c ****     case R720P25V2:
1377:TP2824/TP2802.c ****         index=2;
1378:TP2824/TP2802.c ****         break;
1379:TP2824/TP2802.c ****     }
1380:TP2824/TP2802.c ****     if(index)
1381:TP2824/TP2802.c ****     {
1382:TP2824/TP2802.c ****         Set_VidRes(ch);
1383:TP2824/TP2802.c **** 
1384:TP2824/TP2802.c ****         if(TP2853C == chip)
1385:TP2824/TP2802.c ****         {
1386:TP2824/TP2802.c ****             I2CDeviceSet2( TP2853C_HDC_DataSet[0],TP2853C_HDC_DataSet[index] );
1387:TP2824/TP2802.c ****         }
1388:TP2824/TP2802.c ****         else if(TP2833 == chip || TP2834 == chip )
1389:TP2824/TP2802.c ****         {
1390:TP2824/TP2802.c ****             I2CDeviceSet2( TP2853C_HDC_DataSet[0],TP2853C_HDC_DataSet[index] );
1391:TP2824/TP2802.c ****         }
1392:TP2824/TP2802.c ****         else if(TP2826 == chip)
1393:TP2824/TP2802.c ****         {
1394:TP2824/TP2802.c ****             I2CDeviceSet2( TP2826_HDC_DataSet[0],TP2826_HDC_DataSet[index] );
1395:TP2824/TP2802.c ****         }
1396:TP2824/TP2802.c ****         else if(TP2824C == chip)
1397:TP2824/TP2802.c ****         {
1398:TP2824/TP2802.c ****             I2CDeviceSet2( TP2824C_HDC_DataSet[0],TP2824C_HDC_DataSet[index] );
1399:TP2824/TP2802.c ****         }
1400:TP2824/TP2802.c ****         tp28xx_byte_write(0x13, 0x40);
1401:TP2824/TP2802.c ****     }
1402:TP2824/TP2802.c ****     return index;
ARM GAS  /tmp/ccFyOsmB.s 			page 26


1403:TP2824/TP2802.c **** }
1404:TP2824/TP2802.c **** 
1405:TP2824/TP2802.c **** tByte Det_VidRes()
1406:TP2824/TP2802.c **** {
1407:TP2824/TP2802.c ****     tByte CVSTD;
1408:TP2824/TP2802.c ****     tByte RES;
1409:TP2824/TP2802.c **** 
1410:TP2824/TP2802.c ****     CVSTD = tp28xx_byte_read(0x03) & 0x07;
1411:TP2824/TP2802.c **** 
1412:TP2824/TP2802.c ****     switch (CVSTD)
1413:TP2824/TP2802.c ****     {
1414:TP2824/TP2802.c **** 
1415:TP2824/TP2802.c ****     case 0x00:
1416:TP2824/TP2802.c ****         RES = R720P60;
1417:TP2824/TP2802.c ****         break;
1418:TP2824/TP2802.c ****     case 0x01:
1419:TP2824/TP2802.c ****         RES = R720P50;
1420:TP2824/TP2802.c ****         break;
1421:TP2824/TP2802.c ****     case 0x02:
1422:TP2824/TP2802.c ****         RES = R1080P30;
1423:TP2824/TP2802.c ****         break;
1424:TP2824/TP2802.c ****     case 0x03:
1425:TP2824/TP2802.c ****         RES = R1080P25;
1426:TP2824/TP2802.c ****         break;
1427:TP2824/TP2802.c ****     case 0x04:
1428:TP2824/TP2802.c ****         RES = R720P30;
1429:TP2824/TP2802.c ****         break;
1430:TP2824/TP2802.c ****     case 0x05:
1431:TP2824/TP2802.c ****         RES = R720P25;
1432:TP2824/TP2802.c ****         break;
1433:TP2824/TP2802.c ****     case 0x06:
1434:TP2824/TP2802.c ****         printf("\r\nN/P detected");
1435:TP2824/TP2802.c ****         RES = NTPAL;
1436:TP2824/TP2802.c ****         break;
1437:TP2824/TP2802.c ****     default:
1438:TP2824/TP2802.c ****         printf("\r\nNo res detect...");
1439:TP2824/TP2802.c ****         RES = NoDet;
1440:TP2824/TP2802.c ****         break;
1441:TP2824/TP2802.c ****     }
1442:TP2824/TP2802.c **** 
1443:TP2824/TP2802.c ****     return RES;
1444:TP2824/TP2802.c **** 
1445:TP2824/TP2802.c **** }
1446:TP2824/TP2802.c **** tByte Det_VideoLoss(tByte ch)
1447:TP2824/TP2802.c **** {
1448:TP2824/TP2802.c **** 
1449:TP2824/TP2802.c ****     tByte VDLOSS;
1450:TP2824/TP2802.c **** 
1451:TP2824/TP2802.c ****     tp28xx_byte_write(0x40,ch&0x03);
1452:TP2824/TP2802.c ****     VDLOSS = tp28xx_byte_read(0x01);
1453:TP2824/TP2802.c **** //	printf("video status 0x%02x on ch%01x\r\n",(tWord)VDLOSS,(tWord)ch);
1454:TP2824/TP2802.c **** 
1455:TP2824/TP2802.c ****     if(VDLOSS)	printf("No ");
1456:TP2824/TP2802.c **** 
1457:TP2824/TP2802.c ****     printf("video detected");
1458:TP2824/TP2802.c **** 
1459:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccFyOsmB.s 			page 27


1460:TP2824/TP2802.c ****     VDLOSS = VDLOSS>>7;
1461:TP2824/TP2802.c ****     return VDLOSS;
1462:TP2824/TP2802.c **** }
1463:TP2824/TP2802.c **** 
1464:TP2824/TP2802.c **** void ManualAGC(unsigned char ch)
1465:TP2824/TP2802.c **** {
1466:TP2824/TP2802.c ****     unsigned int agc;
1467:TP2824/TP2802.c ****     unsigned char tmp;
1468:TP2824/TP2802.c ****     //unsigned int i;
1469:TP2824/TP2802.c **** 
1470:TP2824/TP2802.c ****     tp28xx_byte_write(0x2F, 0x02);
1471:TP2824/TP2802.c ****     agc = tp28xx_byte_read(0x04);
1472:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
1473:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
1474:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
1475:TP2824/TP2802.c ****     agc &= 0x3f0;
1476:TP2824/TP2802.c ****     agc >>=1;
1477:TP2824/TP2802.c ****     if(agc > 0x1ff) agc = 0x1ff;
1478:TP2824/TP2802.c **** 
1479:TP2824/TP2802.c ****     printf("result AGC=0X%04x ch%02X\r\n", (tWord)agc, (tWord)ch);
1480:TP2824/TP2802.c ****     tp28xx_byte_write(0x08, agc&0xff);
1481:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x06);
1482:TP2824/TP2802.c ****     tmp &=0xf9;
1483:TP2824/TP2802.c ****     tmp |=(agc>>7)&0x02;
1484:TP2824/TP2802.c ****     tmp |=0x04;
1485:TP2824/TP2802.c ****     tp28xx_byte_write(0x06,tmp);
1486:TP2824/TP2802.c ****     
1487:TP2824/TP2802.c **** //test Dump Reg 
1488:TP2824/TP2802.c **** /*
1489:TP2824/TP2802.c ****     printf("DumpReg@strat\r\n") ;  
1490:TP2824/TP2802.c ****     tp28xx_byte_write(0x40,01); //
1491:TP2824/TP2802.c ****     for (i = 2 ; i< 255 ;i++)
1492:TP2824/TP2802.c ****     {
1493:TP2824/TP2802.c ****         tmp = tp28xx_byte_read((tByte)i);
1494:TP2824/TP2802.c ****         printf("88,%02X,%02X\r\n", i , (int)tmp ) ; 
1495:TP2824/TP2802.c ****     }
1496:TP2824/TP2802.c ****     printf("DumpReg@end\r\n") ; 
1497:TP2824/TP2802.c **** */
1498:TP2824/TP2802.c ****     
1499:TP2824/TP2802.c **** }
1500:TP2824/TP2802.c **** 
1501:TP2824/TP2802.c **** 
1502:TP2824/TP2802.c **** /*
1503:TP2824/TP2802.c **** static void tp2802D_reset_default(unsigned char ch)
1504:TP2824/TP2802.c **** {
1505:TP2824/TP2802.c ****     unsigned char tmp;
1506:TP2824/TP2802.c ****     tp28xx_byte_write(0x3A, 0x01);
1507:TP2824/TP2802.c ****     tp28xx_byte_write(0x0B, 0xC0);
1508:TP2824/TP2802.c ****     tp28xx_byte_write(0x07, 0xC0);
1509:TP2824/TP2802.c ****     tp28xx_byte_write(0x2e, 0x70);
1510:TP2824/TP2802.c ****     tp28xx_byte_write(0x39, 0x42);
1511:TP2824/TP2802.c ****     tp28xx_byte_write(0x09, 0x24);
1512:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x06);   // soft reset and auto agc when cable is unplug
1513:TP2824/TP2802.c ****     tmp &= 0x7b;
1514:TP2824/TP2802.c ****     tp28xx_byte_write(0x06, tmp);
1515:TP2824/TP2802.c **** 
1516:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0xf5);
ARM GAS  /tmp/ccFyOsmB.s 			page 28


1517:TP2824/TP2802.c ****     if( tmp & SYS_MODE[ch])
1518:TP2824/TP2802.c ****     {
1519:TP2824/TP2802.c ****         tmp &= SYS_AND[ch];
1520:TP2824/TP2802.c ****         tp28xx_byte_write(0xf5, tmp);
1521:TP2824/TP2802.c ****     }
1522:TP2824/TP2802.c **** }
1523:TP2824/TP2802.c **** */
1524:TP2824/TP2802.c **** /*  //chunyu
1525:TP2824/TP2802.c **** static void tp282x_reset_AGC_CLK(unsigned char ch)
1526:TP2824/TP2802.c **** {
1527:TP2824/TP2802.c ****     unsigned char tmp;
1528:TP2824/TP2802.c **** 
1529:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x06);
1530:TP2824/TP2802.c ****     tmp &= 0xfb;
1531:TP2824/TP2802.c ****     tp28xx_byte_write(0x06, tmp);
1532:TP2824/TP2802.c **** 
1533:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0xf5);
1534:TP2824/TP2802.c ****     tmp &= SYS_AND[ch];
1535:TP2824/TP2802.c ****     tp28xx_byte_write(0xf5, tmp);
1536:TP2824/TP2802.c **** 
1537:TP2824/TP2802.c ****     tp28xx_byte_write(0x35, 0x05);
1538:TP2824/TP2802.c ****     tp28xx_byte_write(0x26, 0x01);
1539:TP2824/TP2802.c **** }
1540:TP2824/TP2802.c **** */
1541:TP2824/TP2802.c **** static void tp2824_reset_default(void)
1542:TP2824/TP2802.c **** {
  25              		.loc 1 1542 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29 0000 08B5     		push	{r3, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 3, -8
  33              		.cfi_offset 14, -4
1543:TP2824/TP2802.c ****     //unsigned char tmp;
1544:TP2824/TP2802.c ****     //tp28xx_byte_write(addr, 0x07, 0x40);
1545:TP2824/TP2802.c ****     //tp28xx_byte_write(addr, 0x0b, 0x40);
1546:TP2824/TP2802.c ****     //tp28xx_byte_write(addr, 0x3A, 0x88);
1547:TP2824/TP2802.c ****     tp28xx_byte_write(0x26, 0x01);
  34              		.loc 1 1547 0
  35 0002 0121     		movs	r1, #1
  36 0004 2620     		movs	r0, #38
  37 0006 FFF7FEFF 		bl	tp28xx_byte_write
  38              	.LVL0:
1548:TP2824/TP2802.c **** }
  39              		.loc 1 1548 0
  40 000a 08BD     		pop	{r3, pc}
  41              		.cfi_endproc
  42              	.LFE79:
  44              		.section	.text.tp28xx_SYSCLK_V1,"ax",%progbits
  45              		.align	1
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu softvfp
  51              	tp28xx_SYSCLK_V1:
ARM GAS  /tmp/ccFyOsmB.s 			page 29


  52              	.LFB72:
1099:TP2824/TP2802.c ****     unsigned char tmp;
  53              		.loc 1 1099 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              	.LVL1:
  58 0000 10B5     		push	{r4, lr}
  59              	.LCFI1:
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 4, -8
  62              		.cfi_offset 14, -4
  63 0002 0446     		mov	r4, r0
1101:TP2824/TP2802.c ****     tmp &= SYS_AND[ch];
  64              		.loc 1 1101 0
  65 0004 F520     		movs	r0, #245
  66              	.LVL2:
  67 0006 FFF7FEFF 		bl	tp28xx_byte_read
  68              	.LVL3:
1102:TP2824/TP2802.c ****     tp28xx_byte_write(0xf5, tmp);
  69              		.loc 1 1102 0
  70 000a 074B     		ldr	r3, .L5
  71 000c 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
  72              	.LVL4:
1103:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x35);
  73              		.loc 1 1103 0
  74 000e 0140     		ands	r1, r1, r0
  75              	.LVL5:
  76 0010 F520     		movs	r0, #245
  77 0012 FFF7FEFF 		bl	tp28xx_byte_write
  78              	.LVL6:
1104:TP2824/TP2802.c ****     tmp &= 0xdf;
  79              		.loc 1 1104 0
  80 0016 3520     		movs	r0, #53
  81 0018 FFF7FEFF 		bl	tp28xx_byte_read
  82              	.LVL7:
1106:TP2824/TP2802.c **** }
  83              		.loc 1 1106 0
  84 001c 00F0DF01 		and	r1, r0, #223
  85 0020 3520     		movs	r0, #53
  86              	.LVL8:
  87 0022 FFF7FEFF 		bl	tp28xx_byte_write
  88              	.LVL9:
1107:TP2824/TP2802.c **** 
  89              		.loc 1 1107 0
  90 0026 10BD     		pop	{r4, pc}
  91              	.L6:
  92              		.align	2
  93              	.L5:
  94 0028 00000000 		.word	.LANCHOR0
  95              		.cfi_endproc
  96              	.LFE72:
  98              		.section	.text.tp28xx_SYSCLK_V2,"ax",%progbits
  99              		.align	1
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
ARM GAS  /tmp/ccFyOsmB.s 			page 30


 103              		.fpu softvfp
 105              	tp28xx_SYSCLK_V2:
 106              	.LFB71:
1089:TP2824/TP2802.c ****     unsigned char tmp;
 107              		.loc 1 1089 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              	.LVL10:
 112 0000 10B5     		push	{r4, lr}
 113              	.LCFI2:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
 117 0002 0446     		mov	r4, r0
1091:TP2824/TP2802.c ****     tmp |= SYS_MODE[ch];
 118              		.loc 1 1091 0
 119 0004 F520     		movs	r0, #245
 120              	.LVL11:
 121 0006 FFF7FEFF 		bl	tp28xx_byte_read
 122              	.LVL12:
1092:TP2824/TP2802.c ****     tp28xx_byte_write(0xf5, tmp);
 123              		.loc 1 1092 0
 124 000a 084B     		ldr	r3, .L9
 125 000c 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 126 000e 0143     		orrs	r1, r1, r0
 127              	.LVL13:
1093:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x35);
 128              		.loc 1 1093 0
 129 0010 C9B2     		uxtb	r1, r1
 130 0012 F520     		movs	r0, #245
 131 0014 FFF7FEFF 		bl	tp28xx_byte_write
 132              	.LVL14:
1094:TP2824/TP2802.c ****     tmp |= 0x20;
 133              		.loc 1 1094 0
 134 0018 3520     		movs	r0, #53
 135 001a FFF7FEFF 		bl	tp28xx_byte_read
 136              	.LVL15:
1095:TP2824/TP2802.c ****     tp28xx_byte_write(0x35, tmp);
 137              		.loc 1 1095 0
 138 001e 40F02001 		orr	r1, r0, #32
 139              	.LVL16:
1096:TP2824/TP2802.c **** }
 140              		.loc 1 1096 0
 141 0022 C9B2     		uxtb	r1, r1
 142 0024 3520     		movs	r0, #53
 143 0026 FFF7FEFF 		bl	tp28xx_byte_write
 144              	.LVL17:
1097:TP2824/TP2802.c **** static void tp28xx_SYSCLK_V1(unsigned char ch)
 145              		.loc 1 1097 0
 146 002a 10BD     		pop	{r4, pc}
 147              	.L10:
 148              		.align	2
 149              	.L9:
 150 002c 00000000 		.word	.LANCHOR1
 151              		.cfi_endproc
 152              	.LFE71:
ARM GAS  /tmp/ccFyOsmB.s 			page 31


 154              		.section	.text.tp2853C_reset_default,"ax",%progbits
 155              		.align	1
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu softvfp
 161              	tp2853C_reset_default:
 162              	.LFB80:
1549:TP2824/TP2802.c **** static void tp2853C_reset_default(void)
1550:TP2824/TP2802.c **** {
 163              		.loc 1 1550 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 08B5     		push	{r3, lr}
 168              	.LCFI3:
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 3, -8
 171              		.cfi_offset 14, -4
1551:TP2824/TP2802.c ****     unsigned char tmp;
1552:TP2824/TP2802.c ****     tp28xx_byte_write(0x07, 0xC0);
 172              		.loc 1 1552 0
 173 0002 C021     		movs	r1, #192
 174 0004 0720     		movs	r0, #7
 175 0006 FFF7FEFF 		bl	tp28xx_byte_write
 176              	.LVL18:
1553:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x14);
 177              		.loc 1 1553 0
 178 000a 1420     		movs	r0, #20
 179 000c FFF7FEFF 		bl	tp28xx_byte_read
 180              	.LVL19:
1554:TP2824/TP2802.c ****     tmp &= 0x9f;
1555:TP2824/TP2802.c ****     tp28xx_byte_write(0x14, tmp);
 181              		.loc 1 1555 0
 182 0010 00F09F01 		and	r1, r0, #159
 183 0014 1420     		movs	r0, #20
 184              	.LVL20:
 185 0016 FFF7FEFF 		bl	tp28xx_byte_write
 186              	.LVL21:
1556:TP2824/TP2802.c ****     tp28xx_byte_write(0x13, 0x00);
 187              		.loc 1 1556 0
 188 001a 0021     		movs	r1, #0
 189 001c 1320     		movs	r0, #19
 190 001e FFF7FEFF 		bl	tp28xx_byte_write
 191              	.LVL22:
1557:TP2824/TP2802.c ****     tp28xx_byte_write(0x26, 0x04);
 192              		.loc 1 1557 0
 193 0022 0421     		movs	r1, #4
 194 0024 2620     		movs	r0, #38
 195 0026 FFF7FEFF 		bl	tp28xx_byte_write
 196              	.LVL23:
1558:TP2824/TP2802.c ****     tp28xx_byte_write(0x06, 0xb2);
 197              		.loc 1 1558 0
 198 002a B221     		movs	r1, #178
 199 002c 0620     		movs	r0, #6
 200 002e FFF7FEFF 		bl	tp28xx_byte_write
 201              	.LVL24:
ARM GAS  /tmp/ccFyOsmB.s 			page 32


1559:TP2824/TP2802.c **** }
 202              		.loc 1 1559 0
 203 0032 08BD     		pop	{r3, pc}
 204              		.cfi_endproc
 205              	.LFE80:
 207              		.section	.text.TP28xx_reset_default,"ax",%progbits
 208              		.align	1
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 212              		.fpu softvfp
 214              	TP28xx_reset_default:
 215              	.LFB81:
1560:TP2824/TP2802.c **** static void TP28xx_reset_default(int chip, unsigned char ch)
1561:TP2824/TP2802.c **** {
 216              		.loc 1 1561 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              	.LVL25:
 221 0000 08B5     		push	{r3, lr}
 222              	.LCFI4:
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 3, -8
 225              		.cfi_offset 14, -4
1562:TP2824/TP2802.c ****     /*    if(TP2823 == chip )
1563:TP2824/TP2802.c ****     	{
1564:TP2824/TP2802.c ****                tp282x_reset_AGC_CLK(ch);
1565:TP2824/TP2802.c ****     	}
1566:TP2824/TP2802.c ****         else if(TP2822 == chip )
1567:TP2824/TP2802.c ****     	{
1568:TP2824/TP2802.c ****                tp282x_reset_AGC_CLK(ch);
1569:TP2824/TP2802.c ****     		   tp28xx_byte_write(0x07, 0x40);
1570:TP2824/TP2802.c ****     	}
1571:TP2824/TP2802.c ****         else if(TP2802D == chip )
1572:TP2824/TP2802.c ****         {
1573:TP2824/TP2802.c ****                tp2802D_reset_default( ch);
1574:TP2824/TP2802.c ****         }
1575:TP2824/TP2802.c ****     */
1576:TP2824/TP2802.c ****     if(TP2834 == chip )
 226              		.loc 1 1576 0
 227 0002 2428     		cmp	r0, #36
 228 0004 06D0     		beq	.L19
1577:TP2824/TP2802.c ****     {
1578:TP2824/TP2802.c ****         tp2824_reset_default();
1579:TP2824/TP2802.c ****     }
1580:TP2824/TP2802.c ****     else if(TP2833 == chip )
 229              		.loc 1 1580 0
 230 0006 2528     		cmp	r0, #37
 231 0008 07D0     		beq	.L20
1581:TP2824/TP2802.c ****     {
1582:TP2824/TP2802.c ****         tp2853C_reset_default();
1583:TP2824/TP2802.c ****     }
1584:TP2824/TP2802.c ****     else if(TP2853C == chip )
 232              		.loc 1 1584 0
 233 000a 2628     		cmp	r0, #38
 234 000c 08D0     		beq	.L21
ARM GAS  /tmp/ccFyOsmB.s 			page 33


1585:TP2824/TP2802.c ****     {
1586:TP2824/TP2802.c ****         tp2853C_reset_default();
1587:TP2824/TP2802.c ****     }
1588:TP2824/TP2802.c **** 	else  //chunyu
1589:TP2824/TP2802.c **** 	{	
1590:TP2824/TP2802.c ****         tp2824_reset_default() ;   //chunyu
 235              		.loc 1 1590 0
 236 000e FFF7FEFF 		bl	tp2824_reset_default
 237              	.LVL26:
 238              	.L13:
1591:TP2824/TP2802.c **** 	}
1592:TP2824/TP2802.c **** }
 239              		.loc 1 1592 0
 240 0012 08BD     		pop	{r3, pc}
 241              	.LVL27:
 242              	.L19:
1578:TP2824/TP2802.c ****     }
 243              		.loc 1 1578 0
 244 0014 FFF7FEFF 		bl	tp2824_reset_default
 245              	.LVL28:
 246 0018 FBE7     		b	.L13
 247              	.LVL29:
 248              	.L20:
1582:TP2824/TP2802.c ****     }
 249              		.loc 1 1582 0
 250 001a FFF7FEFF 		bl	tp2853C_reset_default
 251              	.LVL30:
 252 001e F8E7     		b	.L13
 253              	.LVL31:
 254              	.L21:
1586:TP2824/TP2802.c ****     }
 255              		.loc 1 1586 0
 256 0020 FFF7FEFF 		bl	tp2853C_reset_default
 257              	.LVL32:
 258 0024 F5E7     		b	.L13
 259              		.cfi_endproc
 260              	.LFE81:
 262              		.section	.text.I2CDeviceSet1,"ax",%progbits
 263              		.align	1
 264              		.global	I2CDeviceSet1
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu softvfp
 270              	I2CDeviceSet1:
 271              	.LFB68:
 935:TP2824/TP2802.c **** 	int	cnt=0;
 272              		.loc 1 935 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              	.LVL33:
 277 0000 10B5     		push	{r4, lr}
 278              	.LCFI5:
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 4, -8
 281              		.cfi_offset 14, -4
ARM GAS  /tmp/ccFyOsmB.s 			page 34


 282 0002 0446     		mov	r4, r0
 283              	.LVL34:
 946:TP2824/TP2802.c **** 
 284              		.loc 1 946 0
 285 0004 03E0     		b	.L23
 286              	.LVL35:
 287              	.L24:
 951:TP2824/TP2802.c **** 
 288              		.loc 1 951 0
 289 0006 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 290 0008 FFF7FEFF 		bl	tp28xx_byte_write
 291              	.LVL36:
 955:TP2824/TP2802.c **** 
 292              		.loc 1 955 0
 293 000c 0234     		adds	r4, r4, #2
 294              	.LVL37:
 295              	.L23:
 946:TP2824/TP2802.c **** 
 296              		.loc 1 946 0
 297 000e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 298 0010 FF28     		cmp	r0, #255
 299 0012 F8D1     		bne	.L24
 959:TP2824/TP2802.c **** }
 300              		.loc 1 959 0
 301 0014 3220     		movs	r0, #50
 302 0016 FFF7FEFF 		bl	delay
 303              	.LVL38:
 960:TP2824/TP2802.c **** 
 304              		.loc 1 960 0
 305 001a 10BD     		pop	{r4, pc}
 306              		.cfi_endproc
 307              	.LFE68:
 309              		.section	.text.I2CDeviceSet2,"ax",%progbits
 310              		.align	1
 311              		.global	I2CDeviceSet2
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu softvfp
 317              	I2CDeviceSet2:
 318              	.LFB69:
 964:TP2824/TP2802.c **** 	int	cnt=0;
 319              		.loc 1 964 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              	.LVL39:
 324 0000 38B5     		push	{r3, r4, r5, lr}
 325              	.LCFI6:
 326              		.cfi_def_cfa_offset 16
 327              		.cfi_offset 3, -16
 328              		.cfi_offset 4, -12
 329              		.cfi_offset 5, -8
 330              		.cfi_offset 14, -4
 331 0002 0446     		mov	r4, r0
 332 0004 0D46     		mov	r5, r1
 333              	.LVL40:
ARM GAS  /tmp/ccFyOsmB.s 			page 35


 968:TP2824/TP2802.c **** 
 334              		.loc 1 968 0
 335 0006 04E0     		b	.L27
 336              	.LVL41:
 337              	.L28:
 973:TP2824/TP2802.c **** 
 338              		.loc 1 973 0
 339 0008 15F8011B 		ldrb	r1, [r5], #1	@ zero_extendqisi2
 340              	.LVL42:
 341 000c FFF7FEFF 		bl	tp28xx_byte_write
 342              	.LVL43:
 977:TP2824/TP2802.c **** 		DatSet++;
 343              		.loc 1 977 0
 344 0010 0134     		adds	r4, r4, #1
 345              	.LVL44:
 346              	.L27:
 968:TP2824/TP2802.c **** 
 347              		.loc 1 968 0
 348 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 349 0014 FF28     		cmp	r0, #255
 350 0016 F7D1     		bne	.L28
 982:TP2824/TP2802.c **** }
 351              		.loc 1 982 0
 352 0018 3220     		movs	r0, #50
 353 001a FFF7FEFF 		bl	delay
 354              	.LVL45:
 983:TP2824/TP2802.c **** 
 355              		.loc 1 983 0
 356 001e 38BD     		pop	{r3, r4, r5, pc}
 357              		.cfi_endproc
 358              	.LFE69:
 360              		.section	.text.SetRegPage,"ax",%progbits
 361              		.align	1
 362              		.global	SetRegPage
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 366              		.fpu softvfp
 368              	SetRegPage:
 369              	.LFB70:
 986:TP2824/TP2802.c ****     //tByte tmp;
 370              		.loc 1 986 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              	.LVL46:
 375 0000 08B5     		push	{r3, lr}
 376              	.LCFI7:
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 3, -8
 379              		.cfi_offset 14, -4
 989:TP2824/TP2802.c ****     //tp28xx_byte_write(0x40,0x04); //chunyu
 380              		.loc 1 989 0
 381 0002 0146     		mov	r1, r0
 382 0004 4020     		movs	r0, #64
 383              	.LVL47:
 384 0006 FFF7FEFF 		bl	tp28xx_byte_write
ARM GAS  /tmp/ccFyOsmB.s 			page 36


 385              	.LVL48:
 992:TP2824/TP2802.c **** 
 386              		.loc 1 992 0
 387 000a 08BD     		pop	{r3, pc}
 388              		.cfi_endproc
 389              	.LFE70:
 391              		.section	.text.Set_VidRes,"ax",%progbits
 392              		.align	1
 393              		.global	Set_VidRes
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 397              		.fpu softvfp
 399              	Set_VidRes:
 400              	.LFB73:
1110:TP2824/TP2802.c ****     tByte index, sys, tmp;
 401              		.loc 1 1110 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              	.LVL49:
 406 0000 70B5     		push	{r4, r5, r6, lr}
 407              	.LCFI8:
 408              		.cfi_def_cfa_offset 16
 409              		.cfi_offset 4, -16
 410              		.cfi_offset 5, -12
 411              		.cfi_offset 6, -8
 412              		.cfi_offset 14, -4
 413 0002 0646     		mov	r6, r0
 414              	.LVL50:
1114:TP2824/TP2802.c ****     {
 415              		.loc 1 1114 0
 416 0004 9C4B     		ldr	r3, .L69
 417 0006 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 418 0008 262B     		cmp	r3, #38
 419 000a 00F2F980 		bhi	.L60
 420 000e DFE813F0 		tbh	[pc, r3, lsl #1]
 421              	.L35:
 422 0012 7600     		.2byte	(.L34-.L35)/2
 423 0014 8800     		.2byte	(.L36-.L35)/2
 424 0016 2700     		.2byte	(.L37-.L35)/2
 425 0018 6E00     		.2byte	(.L38-.L35)/2
 426 001a 9A00     		.2byte	(.L39-.L35)/2
 427 001c A300     		.2byte	(.L40-.L35)/2
 428 001e F700     		.2byte	(.L60-.L35)/2
 429 0020 F700     		.2byte	(.L60-.L35)/2
 430 0022 B500     		.2byte	(.L41-.L35)/2
 431 0024 AC00     		.2byte	(.L42-.L35)/2
 432 0026 F700     		.2byte	(.L60-.L35)/2
 433 0028 F700     		.2byte	(.L60-.L35)/2
 434 002a 7F00     		.2byte	(.L43-.L35)/2
 435 002c 9100     		.2byte	(.L44-.L35)/2
 436 002e F700     		.2byte	(.L60-.L35)/2
 437 0030 F700     		.2byte	(.L60-.L35)/2
 438 0032 F700     		.2byte	(.L60-.L35)/2
 439 0034 F700     		.2byte	(.L60-.L35)/2
 440 0036 F700     		.2byte	(.L60-.L35)/2
ARM GAS  /tmp/ccFyOsmB.s 			page 37


 441 0038 F700     		.2byte	(.L60-.L35)/2
 442 003a F700     		.2byte	(.L60-.L35)/2
 443 003c F700     		.2byte	(.L60-.L35)/2
 444 003e F700     		.2byte	(.L60-.L35)/2
 445 0040 F700     		.2byte	(.L60-.L35)/2
 446 0042 F700     		.2byte	(.L60-.L35)/2
 447 0044 F700     		.2byte	(.L60-.L35)/2
 448 0046 F700     		.2byte	(.L60-.L35)/2
 449 0048 F700     		.2byte	(.L60-.L35)/2
 450 004a F700     		.2byte	(.L60-.L35)/2
 451 004c F700     		.2byte	(.L60-.L35)/2
 452 004e F700     		.2byte	(.L60-.L35)/2
 453 0050 F700     		.2byte	(.L60-.L35)/2
 454 0052 BE00     		.2byte	(.L45-.L35)/2
 455 0054 C600     		.2byte	(.L46-.L35)/2
 456 0056 CE00     		.2byte	(.L47-.L35)/2
 457 0058 D600     		.2byte	(.L48-.L35)/2
 458 005a DE00     		.2byte	(.L49-.L35)/2
 459 005c E600     		.2byte	(.L50-.L35)/2
 460 005e EE00     		.2byte	(.L51-.L35)/2
 461              		.p2align 1
 462              	.L37:
 463              	.LVL51:
1119:TP2824/TP2802.c ****         printf("1080p30");
 464              		.loc 1 1119 0
 465 0060 0124     		movs	r4, #1
 466 0062 864B     		ldr	r3, .L69+4
 467 0064 1C70     		strb	r4, [r3]
1120:TP2824/TP2802.c ****         break;
 468              		.loc 1 1120 0
 469 0066 8648     		ldr	r0, .L69+8
 470              	.LVL52:
 471 0068 FFF7FEFF 		bl	printf
 472              	.LVL53:
1118:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
 473              		.loc 1 1118 0
 474 006c 2546     		mov	r5, r4
 475              	.LVL54:
 476              	.L33:
1239:TP2824/TP2802.c **** 
 477              		.loc 1 1239 0
 478 006e 8548     		ldr	r0, .L69+12
 479 0070 FFF7FEFF 		bl	puts
 480              	.LVL55:
1242:TP2824/TP2802.c ****     //	printf("chip= 0x%4x\r\n",chip);
 481              		.loc 1 1242 0
 482 0074 8448     		ldr	r0, .L69+16
 483 0076 04EB4401 		add	r1, r4, r4, lsl #1
 484 007a 04EB8101 		add	r1, r4, r1, lsl #2
 485 007e 0144     		add	r1, r1, r0
 486 0080 FFF7FEFF 		bl	I2CDeviceSet2
 487              	.LVL56:
1244:TP2824/TP2802.c **** {
 488              		.loc 1 1244 0
 489 0084 7C4B     		ldr	r3, .L69
 490 0086 9B5D     		ldrb	r3, [r3, r6]	@ zero_extendqisi2
 491 0088 022B     		cmp	r3, #2
ARM GAS  /tmp/ccFyOsmB.s 			page 38


 492 008a 00F0BC80 		beq	.L62
 493              	.L52:
1249:TP2824/TP2802.c ****     {
 494              		.loc 1 1249 0
 495 008e 7F4B     		ldr	r3, .L69+20
 496 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 497 0092 262B     		cmp	r3, #38
 498 0094 00F0BC80 		beq	.L63
1253:TP2824/TP2802.c ****     {
 499              		.loc 1 1253 0
 500 0098 252B     		cmp	r3, #37
 501 009a 00F0C180 		beq	.L64
1257:TP2824/TP2802.c ****     {
 502              		.loc 1 1257 0
 503 009e 242B     		cmp	r3, #36
 504 00a0 00F0C680 		beq	.L65
 505              	.L54:
1261:TP2824/TP2802.c ****     {
 506              		.loc 1 1261 0
 507 00a4 794B     		ldr	r3, .L69+20
 508 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 509 00a8 2F2B     		cmp	r3, #47
 510 00aa 00F0CA80 		beq	.L66
 511              	.L56:
1266:TP2824/TP2802.c ****     {
 512              		.loc 1 1266 0
 513 00ae 774B     		ldr	r3, .L69+20
 514 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 515 00b2 272B     		cmp	r3, #39
 516 00b4 00F0D080 		beq	.L67
 517              	.L57:
1272:TP2824/TP2802.c ****         tp28xx_SYSCLK_V1(ch);
 518              		.loc 1 1272 0
 519 00b8 012D     		cmp	r5, #1
 520 00ba 00F0D980 		beq	.L68
1275:TP2824/TP2802.c **** 
 521              		.loc 1 1275 0
 522 00be 3046     		mov	r0, r6
 523 00c0 FFF7FEFF 		bl	tp28xx_SYSCLK_V2
 524              	.LVL57:
 525              	.L59:
1277:TP2824/TP2802.c ****     tmp=tp28xx_byte_read(0x14);
 526              		.loc 1 1277 0
 527 00c4 0021     		movs	r1, #0
 528 00c6 1320     		movs	r0, #19
 529 00c8 FFF7FEFF 		bl	tp28xx_byte_write
 530              	.LVL58:
1278:TP2824/TP2802.c ****     tmp &= 0x9f;
 531              		.loc 1 1278 0
 532 00cc 1420     		movs	r0, #20
 533 00ce FFF7FEFF 		bl	tp28xx_byte_read
 534              	.LVL59:
1280:TP2824/TP2802.c **** 
 535              		.loc 1 1280 0
 536 00d2 00F09F01 		and	r1, r0, #159
 537 00d6 1420     		movs	r0, #20
 538              	.LVL60:
ARM GAS  /tmp/ccFyOsmB.s 			page 39


 539 00d8 FFF7FEFF 		bl	tp28xx_byte_write
 540              	.LVL61:
1283:TP2824/TP2802.c ****     tmp &= 0x7f;
 541              		.loc 1 1283 0
 542 00dc 0220     		movs	r0, #2
 543 00de FFF7FEFF 		bl	tp28xx_byte_read
 544              	.LVL62:
1285:TP2824/TP2802.c **** #else
 545              		.loc 1 1285 0
 546 00e2 00F07F01 		and	r1, r0, #127
 547 00e6 0220     		movs	r0, #2
 548              	.LVL63:
 549 00e8 FFF7FEFF 		bl	tp28xx_byte_write
 550              	.LVL64:
1291:TP2824/TP2802.c **** 
 551              		.loc 1 1291 0
 552 00ec 70BD     		pop	{r4, r5, r6, pc}
 553              	.LVL65:
 554              	.L38:
1126:TP2824/TP2802.c ****         printf("1080p25");
 555              		.loc 1 1126 0
 556 00ee 0125     		movs	r5, #1
 557 00f0 624B     		ldr	r3, .L69+4
 558 00f2 1D70     		strb	r5, [r3]
1127:TP2824/TP2802.c ****         break;
 559              		.loc 1 1127 0
 560 00f4 6648     		ldr	r0, .L69+24
 561              	.LVL66:
 562 00f6 FFF7FEFF 		bl	printf
 563              	.LVL67:
1124:TP2824/TP2802.c ****         sys=1;//V1
 564              		.loc 1 1124 0
 565 00fa 0224     		movs	r4, #2
1128:TP2824/TP2802.c **** 
 566              		.loc 1 1128 0
 567 00fc B7E7     		b	.L33
 568              	.LVL68:
 569              	.L34:
1133:TP2824/TP2802.c ****         printf("720p60");
 570              		.loc 1 1133 0
 571 00fe 5F4B     		ldr	r3, .L69+4
 572 0100 0022     		movs	r2, #0
 573 0102 1A70     		strb	r2, [r3]
1134:TP2824/TP2802.c ****         break;
 574              		.loc 1 1134 0
 575 0104 6348     		ldr	r0, .L69+28
 576              	.LVL69:
 577 0106 FFF7FEFF 		bl	printf
 578              	.LVL70:
1132:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 579              		.loc 1 1132 0
 580 010a 0125     		movs	r5, #1
1131:TP2824/TP2802.c ****         sys=1;//V1
 581              		.loc 1 1131 0
 582 010c 0324     		movs	r4, #3
1135:TP2824/TP2802.c **** 
 583              		.loc 1 1135 0
ARM GAS  /tmp/ccFyOsmB.s 			page 40


 584 010e AEE7     		b	.L33
 585              	.LVL71:
 586              	.L43:
1140:TP2824/TP2802.c ****         printf("720p30V2");
 587              		.loc 1 1140 0
 588 0110 5A4B     		ldr	r3, .L69+4
 589 0112 0022     		movs	r2, #0
 590 0114 1A70     		strb	r2, [r3]
1141:TP2824/TP2802.c ****         break;
 591              		.loc 1 1141 0
 592 0116 6048     		ldr	r0, .L69+32
 593              	.LVL72:
 594 0118 FFF7FEFF 		bl	printf
 595              	.LVL73:
1139:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 596              		.loc 1 1139 0
 597 011c 0225     		movs	r5, #2
1138:TP2824/TP2802.c ****         sys=2;//V2
 598              		.loc 1 1138 0
 599 011e 0B24     		movs	r4, #11
1142:TP2824/TP2802.c **** 
 600              		.loc 1 1142 0
 601 0120 A5E7     		b	.L33
 602              	.LVL74:
 603              	.L36:
1147:TP2824/TP2802.c ****         printf("720p50");
 604              		.loc 1 1147 0
 605 0122 564B     		ldr	r3, .L69+4
 606 0124 0022     		movs	r2, #0
 607 0126 1A70     		strb	r2, [r3]
1148:TP2824/TP2802.c ****         break;
 608              		.loc 1 1148 0
 609 0128 5C48     		ldr	r0, .L69+36
 610              	.LVL75:
 611 012a FFF7FEFF 		bl	printf
 612              	.LVL76:
1146:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 613              		.loc 1 1146 0
 614 012e 0125     		movs	r5, #1
1145:TP2824/TP2802.c ****         sys=1;//V1
 615              		.loc 1 1145 0
 616 0130 0424     		movs	r4, #4
1149:TP2824/TP2802.c **** 
 617              		.loc 1 1149 0
 618 0132 9CE7     		b	.L33
 619              	.LVL77:
 620              	.L44:
1154:TP2824/TP2802.c ****         printf("720p25V2");
 621              		.loc 1 1154 0
 622 0134 514B     		ldr	r3, .L69+4
 623 0136 0022     		movs	r2, #0
 624 0138 1A70     		strb	r2, [r3]
1155:TP2824/TP2802.c ****         break;
 625              		.loc 1 1155 0
 626 013a 5948     		ldr	r0, .L69+40
 627              	.LVL78:
 628 013c FFF7FEFF 		bl	printf
ARM GAS  /tmp/ccFyOsmB.s 			page 41


 629              	.LVL79:
1153:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 630              		.loc 1 1153 0
 631 0140 0225     		movs	r5, #2
1152:TP2824/TP2802.c ****         sys=2;//V2
 632              		.loc 1 1152 0
 633 0142 0C24     		movs	r4, #12
1156:TP2824/TP2802.c **** 
 634              		.loc 1 1156 0
 635 0144 93E7     		b	.L33
 636              	.LVL80:
 637              	.L39:
1161:TP2824/TP2802.c ****         printf("720p30");
 638              		.loc 1 1161 0
 639 0146 4D4B     		ldr	r3, .L69+4
 640 0148 0022     		movs	r2, #0
 641 014a 1A70     		strb	r2, [r3]
1162:TP2824/TP2802.c ****         break;
 642              		.loc 1 1162 0
 643 014c 5548     		ldr	r0, .L69+44
 644              	.LVL81:
 645 014e FFF7FEFF 		bl	printf
 646              	.LVL82:
1160:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 647              		.loc 1 1160 0
 648 0152 0125     		movs	r5, #1
1159:TP2824/TP2802.c ****         sys=1;//V1
 649              		.loc 1 1159 0
 650 0154 0524     		movs	r4, #5
1163:TP2824/TP2802.c **** 
 651              		.loc 1 1163 0
 652 0156 8AE7     		b	.L33
 653              	.LVL83:
 654              	.L40:
1168:TP2824/TP2802.c ****         printf("720p25");
 655              		.loc 1 1168 0
 656 0158 484B     		ldr	r3, .L69+4
 657 015a 0022     		movs	r2, #0
 658 015c 1A70     		strb	r2, [r3]
1169:TP2824/TP2802.c ****         break;
 659              		.loc 1 1169 0
 660 015e 5248     		ldr	r0, .L69+48
 661              	.LVL84:
 662 0160 FFF7FEFF 		bl	printf
 663              	.LVL85:
1167:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 664              		.loc 1 1167 0
 665 0164 0125     		movs	r5, #1
1166:TP2824/TP2802.c ****         sys=1;//V1
 666              		.loc 1 1166 0
 667 0166 0624     		movs	r4, #6
1170:TP2824/TP2802.c **** 
 668              		.loc 1 1170 0
 669 0168 81E7     		b	.L33
 670              	.LVL86:
 671              	.L42:
1175:TP2824/TP2802.c ****         printf("PAL");
ARM GAS  /tmp/ccFyOsmB.s 			page 42


 672              		.loc 1 1175 0
 673 016a 444B     		ldr	r3, .L69+4
 674 016c 0322     		movs	r2, #3
 675 016e 1A70     		strb	r2, [r3]
1176:TP2824/TP2802.c ****         break;
 676              		.loc 1 1176 0
 677 0170 4E48     		ldr	r0, .L69+52
 678              	.LVL87:
 679 0172 FFF7FEFF 		bl	printf
 680              	.LVL88:
1174:TP2824/TP2802.c ****         ManVidResRx=RES1920X576;
 681              		.loc 1 1174 0
 682 0176 0425     		movs	r5, #4
1173:TP2824/TP2802.c ****         sys=4;
 683              		.loc 1 1173 0
 684 0178 0824     		movs	r4, #8
1177:TP2824/TP2802.c **** 
 685              		.loc 1 1177 0
 686 017a 78E7     		b	.L33
 687              	.LVL89:
 688              	.L41:
1182:TP2824/TP2802.c ****         printf("NTSC");
 689              		.loc 1 1182 0
 690 017c 3F4B     		ldr	r3, .L69+4
 691 017e 0222     		movs	r2, #2
 692 0180 1A70     		strb	r2, [r3]
1183:TP2824/TP2802.c ****         break;
 693              		.loc 1 1183 0
 694 0182 4B48     		ldr	r0, .L69+56
 695              	.LVL90:
 696 0184 FFF7FEFF 		bl	printf
 697              	.LVL91:
1181:TP2824/TP2802.c ****         ManVidResRx=RES1920X480;
 698              		.loc 1 1181 0
 699 0188 0325     		movs	r5, #3
1180:TP2824/TP2802.c ****         sys=3;
 700              		.loc 1 1180 0
 701 018a 0724     		movs	r4, #7
1184:TP2824/TP2802.c **** 
 702              		.loc 1 1184 0
 703 018c 6FE7     		b	.L33
 704              	.LVL92:
 705              	.L45:
1189:TP2824/TP2802.c ****         printf("3M18");
 706              		.loc 1 1189 0
 707 018e 0125     		movs	r5, #1
 708 0190 3A4B     		ldr	r3, .L69+4
 709 0192 1D70     		strb	r5, [r3]
1190:TP2824/TP2802.c ****         break;
 710              		.loc 1 1190 0
 711 0194 4748     		ldr	r0, .L69+60
 712              	.LVL93:
 713 0196 FFF7FEFF 		bl	printf
 714              	.LVL94:
1187:TP2824/TP2802.c ****         sys=1;//V1
 715              		.loc 1 1187 0
 716 019a 0924     		movs	r4, #9
ARM GAS  /tmp/ccFyOsmB.s 			page 43


1191:TP2824/TP2802.c **** 
 717              		.loc 1 1191 0
 718 019c 67E7     		b	.L33
 719              	.LVL95:
 720              	.L46:
1196:TP2824/TP2802.c ****         printf("5M12");
 721              		.loc 1 1196 0
 722 019e 0125     		movs	r5, #1
 723 01a0 364B     		ldr	r3, .L69+4
 724 01a2 1D70     		strb	r5, [r3]
1197:TP2824/TP2802.c ****         break;
 725              		.loc 1 1197 0
 726 01a4 4448     		ldr	r0, .L69+64
 727              	.LVL96:
 728 01a6 FFF7FEFF 		bl	printf
 729              	.LVL97:
1194:TP2824/TP2802.c ****         sys=1;//V1
 730              		.loc 1 1194 0
 731 01aa 0A24     		movs	r4, #10
1198:TP2824/TP2802.c **** 
 732              		.loc 1 1198 0
 733 01ac 5FE7     		b	.L33
 734              	.LVL98:
 735              	.L47:
1203:TP2824/TP2802.c ****         printf("4M15");
 736              		.loc 1 1203 0
 737 01ae 0125     		movs	r5, #1
 738 01b0 324B     		ldr	r3, .L69+4
 739 01b2 1D70     		strb	r5, [r3]
1204:TP2824/TP2802.c ****         break;
 740              		.loc 1 1204 0
 741 01b4 4148     		ldr	r0, .L69+68
 742              	.LVL99:
 743 01b6 FFF7FEFF 		bl	printf
 744              	.LVL100:
1201:TP2824/TP2802.c ****         sys=1;//V1
 745              		.loc 1 1201 0
 746 01ba 0D24     		movs	r4, #13
1205:TP2824/TP2802.c **** 
 747              		.loc 1 1205 0
 748 01bc 57E7     		b	.L33
 749              	.LVL101:
 750              	.L48:
1210:TP2824/TP2802.c ****         printf("3M20");
 751              		.loc 1 1210 0
 752 01be 0125     		movs	r5, #1
 753 01c0 2E4B     		ldr	r3, .L69+4
 754 01c2 1D70     		strb	r5, [r3]
1211:TP2824/TP2802.c ****         break;
 755              		.loc 1 1211 0
 756 01c4 3E48     		ldr	r0, .L69+72
 757              	.LVL102:
 758 01c6 FFF7FEFF 		bl	printf
 759              	.LVL103:
1208:TP2824/TP2802.c ****         sys=1;//V1
 760              		.loc 1 1208 0
 761 01ca 0E24     		movs	r4, #14
ARM GAS  /tmp/ccFyOsmB.s 			page 44


1212:TP2824/TP2802.c **** 
 762              		.loc 1 1212 0
 763 01cc 4FE7     		b	.L33
 764              	.LVL104:
 765              	.L49:
1217:TP2824/TP2802.c ****         printf("4M12");
 766              		.loc 1 1217 0
 767 01ce 0125     		movs	r5, #1
 768 01d0 2A4B     		ldr	r3, .L69+4
 769 01d2 1D70     		strb	r5, [r3]
1218:TP2824/TP2802.c ****         break;
 770              		.loc 1 1218 0
 771 01d4 3B48     		ldr	r0, .L69+76
 772              	.LVL105:
 773 01d6 FFF7FEFF 		bl	printf
 774              	.LVL106:
1215:TP2824/TP2802.c ****         sys=1;//V1
 775              		.loc 1 1215 0
 776 01da 0F24     		movs	r4, #15
1219:TP2824/TP2802.c **** 
 777              		.loc 1 1219 0
 778 01dc 47E7     		b	.L33
 779              	.LVL107:
 780              	.L50:
1224:TP2824/TP2802.c ****         printf("6M10");
 781              		.loc 1 1224 0
 782 01de 0125     		movs	r5, #1
 783 01e0 264B     		ldr	r3, .L69+4
 784 01e2 1D70     		strb	r5, [r3]
1225:TP2824/TP2802.c ****         break;
 785              		.loc 1 1225 0
 786 01e4 3848     		ldr	r0, .L69+80
 787              	.LVL108:
 788 01e6 FFF7FEFF 		bl	printf
 789              	.LVL109:
1222:TP2824/TP2802.c ****         sys=1;//V1
 790              		.loc 1 1222 0
 791 01ea 1024     		movs	r4, #16
1226:TP2824/TP2802.c **** 
 792              		.loc 1 1226 0
 793 01ec 3FE7     		b	.L33
 794              	.LVL110:
 795              	.L51:
1231:TP2824/TP2802.c ****         printf("4M30");
 796              		.loc 1 1231 0
 797 01ee 234B     		ldr	r3, .L69+4
 798 01f0 0022     		movs	r2, #0
 799 01f2 1A70     		strb	r2, [r3]
1232:TP2824/TP2802.c ****         break;
 800              		.loc 1 1232 0
 801 01f4 3548     		ldr	r0, .L69+84
 802              	.LVL111:
 803 01f6 FFF7FEFF 		bl	printf
 804              	.LVL112:
1230:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 805              		.loc 1 1230 0
 806 01fa 0125     		movs	r5, #1
ARM GAS  /tmp/ccFyOsmB.s 			page 45


1229:TP2824/TP2802.c ****         sys=1;//V1
 807              		.loc 1 1229 0
 808 01fc 1124     		movs	r4, #17
1233:TP2824/TP2802.c **** 
 809              		.loc 1 1233 0
 810 01fe 36E7     		b	.L33
 811              	.LVL113:
 812              	.L60:
1112:TP2824/TP2802.c ****     //printf("Set_VidRes");
 813              		.loc 1 1112 0
 814 0200 0125     		movs	r5, #1
1236:TP2824/TP2802.c ****         break;
 815              		.loc 1 1236 0
 816 0202 2C46     		mov	r4, r5
 817 0204 33E7     		b	.L33
 818              	.LVL114:
 819              	.L62:
1246:TP2824/TP2802.c **** }
 820              		.loc 1 1246 0
 821 0206 CE21     		movs	r1, #206
 822 0208 1620     		movs	r0, #22
 823 020a FFF7FEFF 		bl	tp28xx_byte_write
 824              	.LVL115:
 825 020e 3EE7     		b	.L52
 826              	.L63:
1251:TP2824/TP2802.c ****     }
 827              		.loc 1 1251 0
 828 0210 2F48     		ldr	r0, .L69+88
 829 0212 05EBC503 		add	r3, r5, r5, lsl #3
 830 0216 5900     		lsls	r1, r3, #1
 831 0218 0144     		add	r1, r1, r0
 832 021a FFF7FEFF 		bl	I2CDeviceSet2
 833              	.LVL116:
 834 021e 41E7     		b	.L54
 835              	.L64:
1255:TP2824/TP2802.c ****     }
 836              		.loc 1 1255 0
 837 0220 2C48     		ldr	r0, .L69+92
 838 0222 C5EBC503 		rsb	r3, r5, r5, lsl #3
 839 0226 5900     		lsls	r1, r3, #1
 840 0228 0144     		add	r1, r1, r0
 841 022a FFF7FEFF 		bl	I2CDeviceSet2
 842              	.LVL117:
 843 022e 39E7     		b	.L54
 844              	.L65:
1259:TP2824/TP2802.c ****     }
 845              		.loc 1 1259 0
 846 0230 2948     		ldr	r0, .L69+96
 847 0232 05EB4501 		add	r1, r5, r5, lsl #1
 848 0236 05EB8101 		add	r1, r5, r1, lsl #2
 849 023a 0144     		add	r1, r1, r0
 850 023c FFF7FEFF 		bl	I2CDeviceSet2
 851              	.LVL118:
 852 0240 30E7     		b	.L54
 853              	.L66:
1263:TP2824/TP2802.c ****         I2CDeviceSet2( TP2826_MODE_DataSet[0],TP2826_MODE_DataSet[sys] );
 854              		.loc 1 1263 0
ARM GAS  /tmp/ccFyOsmB.s 			page 46


 855 0242 2648     		ldr	r0, .L69+100
 856 0244 FFF7FEFF 		bl	puts
 857              	.LVL119:
1264:TP2824/TP2802.c ****     }
 858              		.loc 1 1264 0
 859 0248 2548     		ldr	r0, .L69+104
 860 024a 05EB8503 		add	r3, r5, r5, lsl #2
 861 024e 9900     		lsls	r1, r3, #2
 862 0250 0144     		add	r1, r1, r0
 863 0252 FFF7FEFF 		bl	I2CDeviceSet2
 864              	.LVL120:
 865 0256 2AE7     		b	.L56
 866              	.L67:
1268:TP2824/TP2802.c ****         I2CDeviceSet2( TP2824C_MODE_DataSet[0],TP2824C_MODE_DataSet[sys] );
 867              		.loc 1 1268 0
 868 0258 2248     		ldr	r0, .L69+108
 869 025a FFF7FEFF 		bl	puts
 870              	.LVL121:
1269:TP2824/TP2802.c ****     }
 871              		.loc 1 1269 0
 872 025e 2248     		ldr	r0, .L69+112
 873 0260 05EB4501 		add	r1, r5, r5, lsl #1
 874 0264 C5EBC101 		rsb	r1, r5, r1, lsl #3
 875 0268 0144     		add	r1, r1, r0
 876 026a FFF7FEFF 		bl	I2CDeviceSet2
 877              	.LVL122:
 878 026e 23E7     		b	.L57
 879              	.L68:
1273:TP2824/TP2802.c ****     else
 880              		.loc 1 1273 0
 881 0270 3046     		mov	r0, r6
 882 0272 FFF7FEFF 		bl	tp28xx_SYSCLK_V1
 883              	.LVL123:
 884 0276 25E7     		b	.L59
 885              	.L70:
 886              		.align	2
 887              	.L69:
 888 0278 00000000 		.word	mode
 889 027c 00000000 		.word	ManVidResRx
 890 0280 00000000 		.word	.LC0
 891 0284 8C000000 		.word	.LC17
 892 0288 00000000 		.word	.LANCHOR2
 893 028c 00000000 		.word	chip
 894 0290 08000000 		.word	.LC1
 895 0294 10000000 		.word	.LC2
 896 0298 18000000 		.word	.LC3
 897 029c 24000000 		.word	.LC4
 898 02a0 2C000000 		.word	.LC5
 899 02a4 38000000 		.word	.LC6
 900 02a8 40000000 		.word	.LC7
 901 02ac 48000000 		.word	.LC8
 902 02b0 4C000000 		.word	.LC9
 903 02b4 54000000 		.word	.LC10
 904 02b8 5C000000 		.word	.LC11
 905 02bc 64000000 		.word	.LC12
 906 02c0 6C000000 		.word	.LC13
 907 02c4 74000000 		.word	.LC14
ARM GAS  /tmp/ccFyOsmB.s 			page 47


 908 02c8 7C000000 		.word	.LC15
 909 02cc 84000000 		.word	.LC16
 910 02d0 00000000 		.word	.LANCHOR3
 911 02d4 00000000 		.word	.LANCHOR4
 912 02d8 00000000 		.word	.LANCHOR5
 913 02dc 94000000 		.word	.LC18
 914 02e0 00000000 		.word	.LANCHOR6
 915 02e4 A8000000 		.word	.LC19
 916 02e8 00000000 		.word	.LANCHOR7
 917              		.cfi_endproc
 918              	.LFE73:
 920              		.section	.text.Set_HDA,"ax",%progbits
 921              		.align	1
 922              		.global	Set_HDA
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 926              		.fpu softvfp
 928              	Set_HDA:
 929              	.LFB74:
1294:TP2824/TP2802.c **** 
 930              		.loc 1 1294 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934              	.LVL124:
 935 0000 10B5     		push	{r4, lr}
 936              	.LCFI9:
 937              		.cfi_def_cfa_offset 8
 938              		.cfi_offset 4, -8
 939              		.cfi_offset 14, -4
 940              	.LVL125:
1299:TP2824/TP2802.c ****     {
 941              		.loc 1 1299 0
 942 0002 254B     		ldr	r3, .L89
 943 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 944 0006 0D2B     		cmp	r3, #13
 945 0008 43D8     		bhi	.L82
 946 000a DFE803F0 		tbb	[pc, r3]
 947              	.L74:
 948 000e 0D       		.byte	(.L83-.L74)/2
 949 000f 07       		.byte	(.L75-.L74)/2
 950 0010 0B       		.byte	(.L76-.L74)/2
 951 0011 09       		.byte	(.L77-.L74)/2
 952 0012 42       		.byte	(.L82-.L74)/2
 953 0013 42       		.byte	(.L82-.L74)/2
 954 0014 42       		.byte	(.L82-.L74)/2
 955 0015 42       		.byte	(.L82-.L74)/2
 956 0016 42       		.byte	(.L82-.L74)/2
 957 0017 42       		.byte	(.L82-.L74)/2
 958 0018 42       		.byte	(.L82-.L74)/2
 959 0019 42       		.byte	(.L82-.L74)/2
 960 001a 0D       		.byte	(.L83-.L74)/2
 961 001b 07       		.byte	(.L75-.L74)/2
 962              		.p2align 1
 963              	.L75:
1316:TP2824/TP2802.c ****         break;
ARM GAS  /tmp/ccFyOsmB.s 			page 48


 964              		.loc 1 1316 0
 965 001c 0224     		movs	r4, #2
 966 001e 04E0     		b	.L73
 967              	.L77:
 968              	.LVL126:
1306:TP2824/TP2802.c ****         break;
 969              		.loc 1 1306 0
 970 0020 0424     		movs	r4, #4
 971 0022 02E0     		b	.L73
 972              	.LVL127:
 973              	.L76:
1302:TP2824/TP2802.c ****         break;
 974              		.loc 1 1302 0
 975 0024 0324     		movs	r4, #3
 976 0026 00E0     		b	.L73
 977              	.LVL128:
 978              	.L83:
1311:TP2824/TP2802.c ****         break;
 979              		.loc 1 1311 0
 980 0028 0124     		movs	r4, #1
 981              	.LVL129:
 982              	.L73:
1321:TP2824/TP2802.c **** 
 983              		.loc 1 1321 0
 984 002a FFF7FEFF 		bl	Set_VidRes
 985              	.LVL130:
1323:TP2824/TP2802.c ****         {
 986              		.loc 1 1323 0
 987 002e 1B4B     		ldr	r3, .L89+4
 988 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 989 0032 262B     		cmp	r3, #38
 990 0034 11D0     		beq	.L85
1327:TP2824/TP2802.c ****         {
 991              		.loc 1 1327 0
 992 0036 A3F12402 		sub	r2, r3, #36
 993 003a D2B2     		uxtb	r2, r2
 994 003c 012A     		cmp	r2, #1
 995 003e 14D9     		bls	.L86
1331:TP2824/TP2802.c ****         {
 996              		.loc 1 1331 0
 997 0040 2F2B     		cmp	r3, #47
 998 0042 18D0     		beq	.L87
1335:TP2824/TP2802.c ****         {
 999              		.loc 1 1335 0
 1000 0044 272B     		cmp	r3, #39
 1001 0046 1ED0     		beq	.L88
 1002              	.L79:
1339:TP2824/TP2802.c ****         tmp |= 0x40;
 1003              		.loc 1 1339 0
 1004 0048 1420     		movs	r0, #20
 1005 004a FFF7FEFF 		bl	tp28xx_byte_read
 1006              	.LVL131:
1346:TP2824/TP2802.c **** 
 1007              		.loc 1 1346 0
 1008 004e 0A21     		movs	r1, #10
 1009 0050 1420     		movs	r0, #20
 1010 0052 FFF7FEFF 		bl	tp28xx_byte_write
ARM GAS  /tmp/ccFyOsmB.s 			page 49


 1011              	.LVL132:
 1012              	.L72:
1350:TP2824/TP2802.c **** 
 1013              		.loc 1 1350 0
 1014 0056 2046     		mov	r0, r4
 1015 0058 10BD     		pop	{r4, pc}
 1016              	.L85:
1325:TP2824/TP2802.c ****         }
 1017              		.loc 1 1325 0
 1018 005a 1148     		ldr	r0, .L89+8
 1019 005c 04EB8403 		add	r3, r4, r4, lsl #2
 1020 0060 5900     		lsls	r1, r3, #1
 1021 0062 0144     		add	r1, r1, r0
 1022 0064 FFF7FEFF 		bl	I2CDeviceSet2
 1023              	.LVL133:
 1024 0068 EEE7     		b	.L79
 1025              	.L86:
1329:TP2824/TP2802.c ****         }
 1026              		.loc 1 1329 0
 1027 006a 0E48     		ldr	r0, .L89+12
 1028 006c 00EBC401 		add	r1, r0, r4, lsl #3
 1029 0070 FFF7FEFF 		bl	I2CDeviceSet2
 1030              	.LVL134:
 1031 0074 E8E7     		b	.L79
 1032              	.L87:
1333:TP2824/TP2802.c ****         }
 1033              		.loc 1 1333 0
 1034 0076 0C48     		ldr	r0, .L89+16
 1035 0078 04EB4403 		add	r3, r4, r4, lsl #1
 1036 007c 9900     		lsls	r1, r3, #2
 1037 007e 0144     		add	r1, r1, r0
 1038 0080 FFF7FEFF 		bl	I2CDeviceSet2
 1039              	.LVL135:
 1040 0084 E0E7     		b	.L79
 1041              	.L88:
1337:TP2824/TP2802.c ****         }
 1042              		.loc 1 1337 0
 1043 0086 0948     		ldr	r0, .L89+20
 1044 0088 00EB0411 		add	r1, r0, r4, lsl #4
 1045 008c FFF7FEFF 		bl	I2CDeviceSet2
 1046              	.LVL136:
 1047 0090 DAE7     		b	.L79
 1048              	.LVL137:
 1049              	.L82:
1297:TP2824/TP2802.c **** 
 1050              		.loc 1 1297 0
 1051 0092 0024     		movs	r4, #0
 1052 0094 DFE7     		b	.L72
 1053              	.L90:
 1054 0096 00BF     		.align	2
 1055              	.L89:
 1056 0098 00000000 		.word	mode
 1057 009c 00000000 		.word	chip
 1058 00a0 00000000 		.word	.LANCHOR8
 1059 00a4 00000000 		.word	.LANCHOR9
 1060 00a8 00000000 		.word	.LANCHOR10
 1061 00ac 00000000 		.word	.LANCHOR11
ARM GAS  /tmp/ccFyOsmB.s 			page 50


 1062              		.cfi_endproc
 1063              	.LFE74:
 1065              		.section	.text.Set_HDC,"ax",%progbits
 1066              		.align	1
 1067              		.global	Set_HDC
 1068              		.syntax unified
 1069              		.thumb
 1070              		.thumb_func
 1071              		.fpu softvfp
 1073              	Set_HDC:
 1074              	.LFB75:
1353:TP2824/TP2802.c **** 
 1075              		.loc 1 1353 0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 0
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 1079              	.LVL138:
 1080 0000 10B5     		push	{r4, lr}
 1081              	.LCFI10:
 1082              		.cfi_def_cfa_offset 8
 1083              		.cfi_offset 4, -8
 1084              		.cfi_offset 14, -4
 1085              	.LVL139:
1359:TP2824/TP2802.c ****     {
 1086              		.loc 1 1359 0
 1087 0002 264B     		ldr	r3, .L109
 1088 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 1089 0006 0D2B     		cmp	r3, #13
 1090 0008 46D8     		bhi	.L102
 1091 000a DFE803F0 		tbb	[pc, r3]
 1092              	.L94:
 1093 000e 0D       		.byte	(.L103-.L94)/2
 1094 000f 07       		.byte	(.L95-.L94)/2
 1095 0010 0B       		.byte	(.L96-.L94)/2
 1096 0011 09       		.byte	(.L97-.L94)/2
 1097 0012 45       		.byte	(.L102-.L94)/2
 1098 0013 45       		.byte	(.L102-.L94)/2
 1099 0014 45       		.byte	(.L102-.L94)/2
 1100 0015 45       		.byte	(.L102-.L94)/2
 1101 0016 45       		.byte	(.L102-.L94)/2
 1102 0017 45       		.byte	(.L102-.L94)/2
 1103 0018 45       		.byte	(.L102-.L94)/2
 1104 0019 45       		.byte	(.L102-.L94)/2
 1105 001a 0D       		.byte	(.L103-.L94)/2
 1106 001b 07       		.byte	(.L95-.L94)/2
 1107              		.p2align 1
 1108              	.L95:
1377:TP2824/TP2802.c ****         break;
 1109              		.loc 1 1377 0
 1110 001c 0224     		movs	r4, #2
 1111 001e 04E0     		b	.L93
 1112              	.L97:
 1113              	.LVL140:
1367:TP2824/TP2802.c ****         break;
 1114              		.loc 1 1367 0
 1115 0020 0424     		movs	r4, #4
 1116 0022 02E0     		b	.L93
ARM GAS  /tmp/ccFyOsmB.s 			page 51


 1117              	.LVL141:
 1118              	.L96:
1363:TP2824/TP2802.c ****         break;
 1119              		.loc 1 1363 0
 1120 0024 0324     		movs	r4, #3
 1121 0026 00E0     		b	.L93
 1122              	.LVL142:
 1123              	.L103:
1372:TP2824/TP2802.c ****         break;
 1124              		.loc 1 1372 0
 1125 0028 0124     		movs	r4, #1
 1126              	.LVL143:
 1127              	.L93:
1382:TP2824/TP2802.c **** 
 1128              		.loc 1 1382 0
 1129 002a FFF7FEFF 		bl	Set_VidRes
 1130              	.LVL144:
1384:TP2824/TP2802.c ****         {
 1131              		.loc 1 1384 0
 1132 002e 1C4B     		ldr	r3, .L109+4
 1133 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1134 0032 262B     		cmp	r3, #38
 1135 0034 0ED0     		beq	.L105
1388:TP2824/TP2802.c ****         {
 1136              		.loc 1 1388 0
 1137 0036 A3F12402 		sub	r2, r3, #36
 1138 003a D2B2     		uxtb	r2, r2
 1139 003c 012A     		cmp	r2, #1
 1140 003e 12D9     		bls	.L106
1392:TP2824/TP2802.c ****         {
 1141              		.loc 1 1392 0
 1142 0040 2F2B     		cmp	r3, #47
 1143 0042 19D0     		beq	.L107
1396:TP2824/TP2802.c ****         {
 1144              		.loc 1 1396 0
 1145 0044 272B     		cmp	r3, #39
 1146 0046 1FD0     		beq	.L108
 1147              	.L99:
1400:TP2824/TP2802.c ****     }
 1148              		.loc 1 1400 0
 1149 0048 4021     		movs	r1, #64
 1150 004a 1320     		movs	r0, #19
 1151 004c FFF7FEFF 		bl	tp28xx_byte_write
 1152              	.LVL145:
 1153              	.L92:
1403:TP2824/TP2802.c **** 
 1154              		.loc 1 1403 0
 1155 0050 2046     		mov	r0, r4
 1156 0052 10BD     		pop	{r4, pc}
 1157              	.L105:
1386:TP2824/TP2802.c ****         }
 1158              		.loc 1 1386 0
 1159 0054 1348     		ldr	r0, .L109+8
 1160 0056 04EB4401 		add	r1, r4, r4, lsl #1
 1161 005a 04EB8101 		add	r1, r4, r1, lsl #2
 1162 005e 0144     		add	r1, r1, r0
 1163 0060 FFF7FEFF 		bl	I2CDeviceSet2
ARM GAS  /tmp/ccFyOsmB.s 			page 52


 1164              	.LVL146:
 1165 0064 F0E7     		b	.L99
 1166              	.L106:
1390:TP2824/TP2802.c ****         }
 1167              		.loc 1 1390 0
 1168 0066 0F48     		ldr	r0, .L109+8
 1169 0068 04EB4401 		add	r1, r4, r4, lsl #1
 1170 006c 04EB8101 		add	r1, r4, r1, lsl #2
 1171 0070 0144     		add	r1, r1, r0
 1172 0072 FFF7FEFF 		bl	I2CDeviceSet2
 1173              	.LVL147:
 1174 0076 E7E7     		b	.L99
 1175              	.L107:
1394:TP2824/TP2802.c ****         }
 1176              		.loc 1 1394 0
 1177 0078 0B48     		ldr	r0, .L109+12
 1178 007a 04EB8403 		add	r3, r4, r4, lsl #2
 1179 007e 9900     		lsls	r1, r3, #2
 1180 0080 0144     		add	r1, r1, r0
 1181 0082 FFF7FEFF 		bl	I2CDeviceSet2
 1182              	.LVL148:
 1183 0086 DFE7     		b	.L99
 1184              	.L108:
1398:TP2824/TP2802.c ****         }
 1185              		.loc 1 1398 0
 1186 0088 0848     		ldr	r0, .L109+16
 1187 008a 04EB8403 		add	r3, r4, r4, lsl #2
 1188 008e 9900     		lsls	r1, r3, #2
 1189 0090 0144     		add	r1, r1, r0
 1190 0092 FFF7FEFF 		bl	I2CDeviceSet2
 1191              	.LVL149:
 1192 0096 D7E7     		b	.L99
 1193              	.LVL150:
 1194              	.L102:
1357:TP2824/TP2802.c **** 
 1195              		.loc 1 1357 0
 1196 0098 0024     		movs	r4, #0
 1197 009a D9E7     		b	.L92
 1198              	.L110:
 1199              		.align	2
 1200              	.L109:
 1201 009c 00000000 		.word	mode
 1202 00a0 00000000 		.word	chip
 1203 00a4 00000000 		.word	.LANCHOR12
 1204 00a8 00000000 		.word	.LANCHOR13
 1205 00ac 00000000 		.word	.LANCHOR14
 1206              		.cfi_endproc
 1207              	.LFE75:
 1209              		.section	.text.Det_VidRes,"ax",%progbits
 1210              		.align	1
 1211              		.global	Det_VidRes
 1212              		.syntax unified
 1213              		.thumb
 1214              		.thumb_func
 1215              		.fpu softvfp
 1217              	Det_VidRes:
 1218              	.LFB76:
ARM GAS  /tmp/ccFyOsmB.s 			page 53


1406:TP2824/TP2802.c ****     tByte CVSTD;
 1219              		.loc 1 1406 0
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 0
 1222              		@ frame_needed = 0, uses_anonymous_args = 0
 1223 0000 10B5     		push	{r4, lr}
 1224              	.LCFI11:
 1225              		.cfi_def_cfa_offset 8
 1226              		.cfi_offset 4, -8
 1227              		.cfi_offset 14, -4
1410:TP2824/TP2802.c **** 
 1228              		.loc 1 1410 0
 1229 0002 0320     		movs	r0, #3
 1230 0004 FFF7FEFF 		bl	tp28xx_byte_read
 1231              	.LVL151:
 1232 0008 00F00704 		and	r4, r0, #7
 1233              	.LVL152:
1412:TP2824/TP2802.c ****     {
 1234              		.loc 1 1412 0
 1235 000c 052C     		cmp	r4, #5
 1236 000e 01D8     		bhi	.L117
 1237              	.LVL153:
 1238              	.L113:
1445:TP2824/TP2802.c **** tByte Det_VideoLoss(tByte ch)
 1239              		.loc 1 1445 0
 1240 0010 2046     		mov	r0, r4
 1241 0012 10BD     		pop	{r4, pc}
 1242              	.LVL154:
 1243              	.L117:
1412:TP2824/TP2802.c ****     {
 1244              		.loc 1 1412 0
 1245 0014 062C     		cmp	r4, #6
 1246 0016 03D1     		bne	.L115
1434:TP2824/TP2802.c ****         RES = NTPAL;
 1247              		.loc 1 1434 0
 1248 0018 0448     		ldr	r0, .L118
 1249 001a FFF7FEFF 		bl	printf
 1250              	.LVL155:
1436:TP2824/TP2802.c ****     default:
 1251              		.loc 1 1436 0
 1252 001e F7E7     		b	.L113
 1253              	.LVL156:
 1254              	.L115:
1438:TP2824/TP2802.c ****         RES = NoDet;
 1255              		.loc 1 1438 0
 1256 0020 0348     		ldr	r0, .L118+4
 1257 0022 FFF7FEFF 		bl	printf
 1258              	.LVL157:
1439:TP2824/TP2802.c ****         break;
 1259              		.loc 1 1439 0
 1260 0026 0724     		movs	r4, #7
 1261              	.LVL158:
1440:TP2824/TP2802.c ****     }
 1262              		.loc 1 1440 0
 1263 0028 F2E7     		b	.L113
 1264              	.L119:
 1265 002a 00BF     		.align	2
ARM GAS  /tmp/ccFyOsmB.s 			page 54


 1266              	.L118:
 1267 002c 00000000 		.word	.LC20
 1268 0030 10000000 		.word	.LC21
 1269              		.cfi_endproc
 1270              	.LFE76:
 1272              		.section	.text.Det_VideoLoss,"ax",%progbits
 1273              		.align	1
 1274              		.global	Det_VideoLoss
 1275              		.syntax unified
 1276              		.thumb
 1277              		.thumb_func
 1278              		.fpu softvfp
 1280              	Det_VideoLoss:
 1281              	.LFB77:
1447:TP2824/TP2802.c **** 
 1282              		.loc 1 1447 0
 1283              		.cfi_startproc
 1284              		@ args = 0, pretend = 0, frame = 0
 1285              		@ frame_needed = 0, uses_anonymous_args = 0
 1286              	.LVL159:
 1287 0000 10B5     		push	{r4, lr}
 1288              	.LCFI12:
 1289              		.cfi_def_cfa_offset 8
 1290              		.cfi_offset 4, -8
 1291              		.cfi_offset 14, -4
1451:TP2824/TP2802.c ****     VDLOSS = tp28xx_byte_read(0x01);
 1292              		.loc 1 1451 0
 1293 0002 00F00301 		and	r1, r0, #3
 1294 0006 4020     		movs	r0, #64
 1295              	.LVL160:
 1296 0008 FFF7FEFF 		bl	tp28xx_byte_write
 1297              	.LVL161:
1452:TP2824/TP2802.c **** //	printf("video status 0x%02x on ch%01x\r\n",(tWord)VDLOSS,(tWord)ch);
 1298              		.loc 1 1452 0
 1299 000c 0120     		movs	r0, #1
 1300 000e FFF7FEFF 		bl	tp28xx_byte_read
 1301              	.LVL162:
1455:TP2824/TP2802.c **** 
 1302              		.loc 1 1455 0
 1303 0012 0446     		mov	r4, r0
 1304 0014 28B9     		cbnz	r0, .L123
 1305              	.LVL163:
 1306              	.L121:
1457:TP2824/TP2802.c **** 
 1307              		.loc 1 1457 0
 1308 0016 0548     		ldr	r0, .L124
 1309 0018 FFF7FEFF 		bl	printf
 1310              	.LVL164:
1462:TP2824/TP2802.c **** 
 1311              		.loc 1 1462 0
 1312 001c C4F3C710 		ubfx	r0, r4, #7, #8
 1313 0020 10BD     		pop	{r4, pc}
 1314              	.LVL165:
 1315              	.L123:
1455:TP2824/TP2802.c **** 
 1316              		.loc 1 1455 0 discriminator 1
 1317 0022 0348     		ldr	r0, .L124+4
ARM GAS  /tmp/ccFyOsmB.s 			page 55


 1318              	.LVL166:
 1319 0024 FFF7FEFF 		bl	printf
 1320              	.LVL167:
 1321 0028 F5E7     		b	.L121
 1322              	.L125:
 1323 002a 00BF     		.align	2
 1324              	.L124:
 1325 002c 04000000 		.word	.LC23
 1326 0030 00000000 		.word	.LC22
 1327              		.cfi_endproc
 1328              	.LFE77:
 1330              		.section	.text.ManualAGC,"ax",%progbits
 1331              		.align	1
 1332              		.global	ManualAGC
 1333              		.syntax unified
 1334              		.thumb
 1335              		.thumb_func
 1336              		.fpu softvfp
 1338              	ManualAGC:
 1339              	.LFB78:
1465:TP2824/TP2802.c ****     unsigned int agc;
 1340              		.loc 1 1465 0
 1341              		.cfi_startproc
 1342              		@ args = 0, pretend = 0, frame = 0
 1343              		@ frame_needed = 0, uses_anonymous_args = 0
 1344              	.LVL168:
 1345 0000 38B5     		push	{r3, r4, r5, lr}
 1346              	.LCFI13:
 1347              		.cfi_def_cfa_offset 16
 1348              		.cfi_offset 3, -16
 1349              		.cfi_offset 4, -12
 1350              		.cfi_offset 5, -8
 1351              		.cfi_offset 14, -4
 1352 0002 0546     		mov	r5, r0
1470:TP2824/TP2802.c ****     agc = tp28xx_byte_read(0x04);
 1353              		.loc 1 1470 0
 1354 0004 0221     		movs	r1, #2
 1355 0006 2F20     		movs	r0, #47
 1356              	.LVL169:
 1357 0008 FFF7FEFF 		bl	tp28xx_byte_write
 1358              	.LVL170:
1471:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
 1359              		.loc 1 1471 0
 1360 000c 0420     		movs	r0, #4
 1361 000e FFF7FEFF 		bl	tp28xx_byte_read
 1362              	.LVL171:
 1363 0012 0446     		mov	r4, r0
 1364              	.LVL172:
1472:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
 1365              		.loc 1 1472 0
 1366 0014 0420     		movs	r0, #4
 1367              	.LVL173:
 1368 0016 FFF7FEFF 		bl	tp28xx_byte_read
 1369              	.LVL174:
 1370 001a 0444     		add	r4, r4, r0
 1371              	.LVL175:
1473:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
ARM GAS  /tmp/ccFyOsmB.s 			page 56


 1372              		.loc 1 1473 0
 1373 001c 0420     		movs	r0, #4
 1374 001e FFF7FEFF 		bl	tp28xx_byte_read
 1375              	.LVL176:
 1376 0022 0444     		add	r4, r4, r0
 1377              	.LVL177:
1474:TP2824/TP2802.c ****     agc &= 0x3f0;
 1378              		.loc 1 1474 0
 1379 0024 0420     		movs	r0, #4
 1380 0026 FFF7FEFF 		bl	tp28xx_byte_read
 1381              	.LVL178:
 1382 002a 0444     		add	r4, r4, r0
 1383              	.LVL179:
 1384 002c 6408     		lsrs	r4, r4, #1
 1385              	.LVL180:
1476:TP2824/TP2802.c ****     if(agc > 0x1ff) agc = 0x1ff;
 1386              		.loc 1 1476 0
 1387 002e 04F4FC74 		and	r4, r4, #504
 1388              	.LVL181:
1479:TP2824/TP2802.c ****     tp28xx_byte_write(0x08, agc&0xff);
 1389              		.loc 1 1479 0
 1390 0032 2A46     		mov	r2, r5
 1391 0034 2146     		mov	r1, r4
 1392 0036 0B48     		ldr	r0, .L130
 1393 0038 FFF7FEFF 		bl	printf
 1394              	.LVL182:
1480:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x06);
 1395              		.loc 1 1480 0
 1396 003c 04F0F801 		and	r1, r4, #248
 1397 0040 0820     		movs	r0, #8
 1398 0042 FFF7FEFF 		bl	tp28xx_byte_write
 1399              	.LVL183:
1481:TP2824/TP2802.c ****     tmp &=0xf9;
 1400              		.loc 1 1481 0
 1401 0046 0620     		movs	r0, #6
 1402 0048 FFF7FEFF 		bl	tp28xx_byte_read
 1403              	.LVL184:
1482:TP2824/TP2802.c ****     tmp |=(agc>>7)&0x02;
 1404              		.loc 1 1482 0
 1405 004c 00F0F900 		and	r0, r0, #249
 1406              	.LVL185:
1483:TP2824/TP2802.c ****     tmp |=0x04;
 1407              		.loc 1 1483 0
 1408 0050 E109     		lsrs	r1, r4, #7
 1409 0052 01F00201 		and	r1, r1, #2
 1410 0056 0143     		orrs	r1, r1, r0
 1411              	.LVL186:
1485:TP2824/TP2802.c ****     
 1412              		.loc 1 1485 0
 1413 0058 41F00401 		orr	r1, r1, #4
 1414              	.LVL187:
 1415 005c 0620     		movs	r0, #6
 1416              	.LVL188:
 1417 005e FFF7FEFF 		bl	tp28xx_byte_write
 1418              	.LVL189:
1499:TP2824/TP2802.c **** 
 1419              		.loc 1 1499 0
ARM GAS  /tmp/ccFyOsmB.s 			page 57


 1420 0062 38BD     		pop	{r3, r4, r5, pc}
 1421              	.LVL190:
 1422              	.L131:
 1423              		.align	2
 1424              	.L130:
 1425 0064 00000000 		.word	.LC24
 1426              		.cfi_endproc
 1427              	.LFE78:
 1429              		.section	.text.ReadGain,"ax",%progbits
 1430              		.align	1
 1431              		.global	ReadGain
 1432              		.syntax unified
 1433              		.thumb
 1434              		.thumb_func
 1435              		.fpu softvfp
 1437              	ReadGain:
 1438              	.LFB82:
1593:TP2824/TP2802.c **** ////////////////////////////////////////
1594:TP2824/TP2802.c **** tByte ReadGain(void)
1595:TP2824/TP2802.c **** {
 1439              		.loc 1 1595 0
 1440              		.cfi_startproc
 1441              		@ args = 0, pretend = 0, frame = 0
 1442              		@ frame_needed = 0, uses_anonymous_args = 0
 1443 0000 08B5     		push	{r3, lr}
 1444              	.LCFI14:
 1445              		.cfi_def_cfa_offset 8
 1446              		.cfi_offset 3, -8
 1447              		.cfi_offset 14, -4
1596:TP2824/TP2802.c ****     tp28xx_byte_write(0x2f, 0x00);
 1448              		.loc 1 1596 0
 1449 0002 0021     		movs	r1, #0
 1450 0004 2F20     		movs	r0, #47
 1451 0006 FFF7FEFF 		bl	tp28xx_byte_write
 1452              	.LVL191:
1597:TP2824/TP2802.c ****     return tp28xx_byte_read(0x04);
 1453              		.loc 1 1597 0
 1454 000a 0420     		movs	r0, #4
 1455 000c FFF7FEFF 		bl	tp28xx_byte_read
 1456              	.LVL192:
1598:TP2824/TP2802.c **** }
 1457              		.loc 1 1598 0
 1458 0010 08BD     		pop	{r3, pc}
 1459              		.cfi_endproc
 1460              	.LFE82:
 1462              		.section	.text.SetCGain,"ax",%progbits
 1463              		.align	1
 1464              		.global	SetCGain
 1465              		.syntax unified
 1466              		.thumb
 1467              		.thumb_func
 1468              		.fpu softvfp
 1470              	SetCGain:
 1471              	.LFB83:
1599:TP2824/TP2802.c **** ////////////////////////////////////////
1600:TP2824/TP2802.c **** void SetCGain(unsigned char CGAIN_STD)
1601:TP2824/TP2802.c **** {
ARM GAS  /tmp/ccFyOsmB.s 			page 58


 1472              		.loc 1 1601 0
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 0
 1475              		@ frame_needed = 0, uses_anonymous_args = 0
 1476              	.LVL193:
 1477 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1478              	.LCFI15:
 1479              		.cfi_def_cfa_offset 24
 1480              		.cfi_offset 3, -24
 1481              		.cfi_offset 4, -20
 1482              		.cfi_offset 5, -16
 1483              		.cfi_offset 6, -12
 1484              		.cfi_offset 7, -8
 1485              		.cfi_offset 14, -4
 1486 0002 0646     		mov	r6, r0
 1487              	.LVL194:
1602:TP2824/TP2802.c ****     unsigned char tmp, cgain;
1603:TP2824/TP2802.c ****     unsigned char retry = 30;
1604:TP2824/TP2802.c **** 
1605:TP2824/TP2802.c ****     tp28xx_byte_write(0x2f, 0x06);
 1488              		.loc 1 1605 0
 1489 0004 0621     		movs	r1, #6
 1490 0006 2F20     		movs	r0, #47
 1491              	.LVL195:
 1492 0008 FFF7FEFF 		bl	tp28xx_byte_write
 1493              	.LVL196:
1606:TP2824/TP2802.c ****     cgain = tp28xx_byte_read(0x04);
 1494              		.loc 1 1606 0
 1495 000c 0420     		movs	r0, #4
 1496 000e FFF7FEFF 		bl	tp28xx_byte_read
 1497              	.LVL197:
1607:TP2824/TP2802.c **** 
1608:TP2824/TP2802.c ****     if(cgain < CGAIN_STD )
 1498              		.loc 1 1608 0
 1499 0012 B042     		cmp	r0, r6
 1500 0014 43D2     		bcs	.L134
 1501 0016 0446     		mov	r4, r0
1603:TP2824/TP2802.c **** 
 1502              		.loc 1 1603 0
 1503 0018 1E27     		movs	r7, #30
 1504 001a 17E0     		b	.L135
 1505              	.LVL198:
 1506              	.L138:
1609:TP2824/TP2802.c ****     {
1610:TP2824/TP2802.c ****         while(retry)
1611:TP2824/TP2802.c ****         {
1612:TP2824/TP2802.c ****             retry--;
1613:TP2824/TP2802.c **** 
1614:TP2824/TP2802.c ****             tmp = tp28xx_byte_read(0x07);
1615:TP2824/TP2802.c ****             tmp &=0x3f;
1616:TP2824/TP2802.c ****             while(abs(CGAIN_STD-cgain))
1617:TP2824/TP2802.c ****             {
1618:TP2824/TP2802.c ****                 if(tmp) tmp--;
1619:TP2824/TP2802.c ****                 else break;
1620:TP2824/TP2802.c ****                 cgain++;
1621:TP2824/TP2802.c ****             }
1622:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccFyOsmB.s 			page 59


1623:TP2824/TP2802.c ****             tp28xx_byte_write(0x07, 0x80|tmp);
 1507              		.loc 1 1623 0
 1508 001c 45F08001 		orr	r1, r5, #128
 1509 0020 0720     		movs	r0, #7
 1510 0022 FFF7FEFF 		bl	tp28xx_byte_write
 1511              	.LVL199:
1624:TP2824/TP2802.c ****             if(0 == tmp) break;
 1512              		.loc 1 1624 0
 1513 0026 D5B3     		cbz	r5, .L134
1625:TP2824/TP2802.c ****             delay(8); //delay 40ms
 1514              		.loc 1 1625 0
 1515 0028 0820     		movs	r0, #8
 1516 002a FFF7FEFF 		bl	delay
 1517              	.LVL200:
1626:TP2824/TP2802.c ****             tp28xx_byte_write(0x2f, 0x06);
 1518              		.loc 1 1626 0
 1519 002e 0621     		movs	r1, #6
 1520 0030 2F20     		movs	r0, #47
 1521 0032 FFF7FEFF 		bl	tp28xx_byte_write
 1522              	.LVL201:
1627:TP2824/TP2802.c ****             cgain = tp28xx_byte_read(0x04);
 1523              		.loc 1 1627 0
 1524 0036 0420     		movs	r0, #4
 1525 0038 FFF7FEFF 		bl	tp28xx_byte_read
 1526              	.LVL202:
 1527 003c 0446     		mov	r4, r0
 1528              	.LVL203:
1628:TP2824/TP2802.c **** 
1629:TP2824/TP2802.c ****             if(cgain > (CGAIN_STD+1))
 1529              		.loc 1 1629 0
 1530 003e 731C     		adds	r3, r6, #1
 1531 0040 9842     		cmp	r0, r3
 1532 0042 14DC     		bgt	.L146
 1533              	.LVL204:
 1534              	.L140:
1630:TP2824/TP2802.c ****             {
1631:TP2824/TP2802.c ****                 tmp = tp28xx_byte_read(0x07);
1632:TP2824/TP2802.c ****                 tmp &=0x3f;
1633:TP2824/TP2802.c ****                 //tmp +=0x02;
1634:TP2824/TP2802.c ****                 tmp++;
1635:TP2824/TP2802.c ****                 tmp++;
1636:TP2824/TP2802.c ****                 if(tmp > 0x3f) tmp = 0x3f;
1637:TP2824/TP2802.c ****                 tp28xx_byte_write(0x07, 0x80|tmp);
1638:TP2824/TP2802.c ****                 if(0x3f == tmp) break;
1639:TP2824/TP2802.c ****                 delay(8); //delay 40ms
1640:TP2824/TP2802.c ****                 cgain = tp28xx_byte_read(0x04);
1641:TP2824/TP2802.c **** 
1642:TP2824/TP2802.c ****             }
1643:TP2824/TP2802.c ****             if(abs(cgain-CGAIN_STD) < 2)  break;
 1535              		.loc 1 1643 0
 1536 0044 A31B     		subs	r3, r4, r6
 1537 0046 0133     		adds	r3, r3, #1
 1538 0048 022B     		cmp	r3, #2
 1539 004a 28D9     		bls	.L134
 1540              	.LVL205:
 1541              	.L135:
1610:TP2824/TP2802.c ****         {
ARM GAS  /tmp/ccFyOsmB.s 			page 60


 1542              		.loc 1 1610 0
 1543 004c 3FB3     		cbz	r7, .L134
1612:TP2824/TP2802.c **** 
 1544              		.loc 1 1612 0
 1545 004e 013F     		subs	r7, r7, #1
 1546              	.LVL206:
 1547 0050 FFB2     		uxtb	r7, r7
 1548              	.LVL207:
1614:TP2824/TP2802.c ****             tmp &=0x3f;
 1549              		.loc 1 1614 0
 1550 0052 0720     		movs	r0, #7
 1551 0054 FFF7FEFF 		bl	tp28xx_byte_read
 1552              	.LVL208:
1615:TP2824/TP2802.c ****             while(abs(CGAIN_STD-cgain))
 1553              		.loc 1 1615 0
 1554 0058 00F03F05 		and	r5, r0, #63
 1555              	.LVL209:
 1556              	.L137:
1616:TP2824/TP2802.c ****             {
 1557              		.loc 1 1616 0
 1558 005c B442     		cmp	r4, r6
 1559 005e DDD0     		beq	.L138
1618:TP2824/TP2802.c ****                 else break;
 1560              		.loc 1 1618 0
 1561 0060 002D     		cmp	r5, #0
 1562 0062 DBD0     		beq	.L138
1618:TP2824/TP2802.c ****                 else break;
 1563              		.loc 1 1618 0 is_stmt 0 discriminator 1
 1564 0064 013D     		subs	r5, r5, #1
 1565              	.LVL210:
 1566 0066 EDB2     		uxtb	r5, r5
 1567              	.LVL211:
1620:TP2824/TP2802.c ****             }
 1568              		.loc 1 1620 0 is_stmt 1 discriminator 1
 1569 0068 0134     		adds	r4, r4, #1
 1570              	.LVL212:
 1571 006a E4B2     		uxtb	r4, r4
 1572              	.LVL213:
 1573 006c F6E7     		b	.L137
 1574              	.LVL214:
 1575              	.L146:
1631:TP2824/TP2802.c ****                 tmp &=0x3f;
 1576              		.loc 1 1631 0
 1577 006e 0720     		movs	r0, #7
 1578              	.LVL215:
 1579 0070 FFF7FEFF 		bl	tp28xx_byte_read
 1580              	.LVL216:
1632:TP2824/TP2802.c ****                 //tmp +=0x02;
 1581              		.loc 1 1632 0
 1582 0074 00F03F00 		and	r0, r0, #63
 1583              	.LVL217:
1635:TP2824/TP2802.c ****                 if(tmp > 0x3f) tmp = 0x3f;
 1584              		.loc 1 1635 0
 1585 0078 841C     		adds	r4, r0, #2
 1586              	.LVL218:
1636:TP2824/TP2802.c ****                 tp28xx_byte_write(0x07, 0x80|tmp);
 1587              		.loc 1 1636 0
ARM GAS  /tmp/ccFyOsmB.s 			page 61


 1588 007a 3F2C     		cmp	r4, #63
 1589 007c 00D9     		bls	.L141
 1590 007e 3F24     		movs	r4, #63
 1591              	.LVL219:
 1592              	.L141:
1637:TP2824/TP2802.c ****                 if(0x3f == tmp) break;
 1593              		.loc 1 1637 0
 1594 0080 44F08001 		orr	r1, r4, #128
 1595 0084 0720     		movs	r0, #7
 1596 0086 FFF7FEFF 		bl	tp28xx_byte_write
 1597              	.LVL220:
1638:TP2824/TP2802.c ****                 delay(8); //delay 40ms
 1598              		.loc 1 1638 0
 1599 008a 3F2C     		cmp	r4, #63
 1600 008c 07D0     		beq	.L134
1639:TP2824/TP2802.c ****                 cgain = tp28xx_byte_read(0x04);
 1601              		.loc 1 1639 0
 1602 008e 0820     		movs	r0, #8
 1603 0090 FFF7FEFF 		bl	delay
 1604              	.LVL221:
1640:TP2824/TP2802.c **** 
 1605              		.loc 1 1640 0
 1606 0094 0420     		movs	r0, #4
 1607 0096 FFF7FEFF 		bl	tp28xx_byte_read
 1608              	.LVL222:
 1609 009a 0446     		mov	r4, r0
 1610              	.LVL223:
 1611 009c D2E7     		b	.L140
 1612              	.LVL224:
 1613              	.L134:
1644:TP2824/TP2802.c ****         }
1645:TP2824/TP2802.c **** 
1646:TP2824/TP2802.c ****     }
1647:TP2824/TP2802.c **** }
 1614              		.loc 1 1647 0
 1615 009e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1616              		.cfi_endproc
 1617              	.LFE83:
 1619              		.section	.text.INPUT_VIDEO_CHECK,"ax",%progbits
 1620              		.align	1
 1621              		.global	INPUT_VIDEO_CHECK
 1622              		.syntax unified
 1623              		.thumb
 1624              		.thumb_func
 1625              		.fpu softvfp
 1627              	INPUT_VIDEO_CHECK:
 1628              	.LFB84:
1648:TP2824/TP2802.c **** ////////////////////////////////////////
1649:TP2824/TP2802.c **** 
1650:TP2824/TP2802.c **** BYTE INPUT_VIDEO_CHECK(BYTE ch)
1651:TP2824/TP2802.c **** {
 1629              		.loc 1 1651 0
 1630              		.cfi_startproc
 1631              		@ args = 0, pretend = 0, frame = 0
 1632              		@ frame_needed = 0, uses_anonymous_args = 0
 1633              		@ link register save eliminated.
 1634              	.LVL225:
ARM GAS  /tmp/ccFyOsmB.s 			page 62


1652:TP2824/TP2802.c **** 
1653:TP2824/TP2802.c **** 	  BYTE ret=0;
1654:TP2824/TP2802.c **** 	
1655:TP2824/TP2802.c **** 	 switch(CURRENT_CH)
 1635              		.loc 1 1655 0
 1636 0000 444B     		ldr	r3, .L186
 1637 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1638 0004 222B     		cmp	r3, #34
 1639 0006 5ED8     		bhi	.L164
 1640 0008 DFE803F0 		tbb	[pc, r3]
 1641              	.L150:
 1642 000c 12       		.byte	(.L149-.L150)/2
 1643 000d 18       		.byte	(.L151-.L150)/2
 1644 000e 20       		.byte	(.L152-.L150)/2
 1645 000f 26       		.byte	(.L153-.L150)/2
 1646 0010 5D       		.byte	(.L164-.L150)/2
 1647 0011 5D       		.byte	(.L164-.L150)/2
 1648 0012 36       		.byte	(.L154-.L150)/2
 1649 0013 36       		.byte	(.L154-.L150)/2
 1650 0014 36       		.byte	(.L154-.L150)/2
 1651 0015 2A       		.byte	(.L155-.L150)/2
 1652 0016 40       		.byte	(.L156-.L150)/2
 1653 0017 30       		.byte	(.L157-.L150)/2
 1654 0018 4A       		.byte	(.L158-.L150)/2
 1655 0019 40       		.byte	(.L156-.L150)/2
 1656 001a 2A       		.byte	(.L155-.L150)/2
 1657 001b 3A       		.byte	(.L159-.L150)/2
 1658 001c 4A       		.byte	(.L158-.L150)/2
 1659 001d 44       		.byte	(.L160-.L150)/2
 1660 001e 44       		.byte	(.L160-.L150)/2
 1661 001f 3A       		.byte	(.L159-.L150)/2
 1662 0020 50       		.byte	(.L161-.L150)/2
 1663 0021 36       		.byte	(.L154-.L150)/2
 1664 0022 50       		.byte	(.L161-.L150)/2
 1665 0023 54       		.byte	(.L162-.L150)/2
 1666 0024 36       		.byte	(.L154-.L150)/2
 1667 0025 50       		.byte	(.L161-.L150)/2
 1668 0026 58       		.byte	(.L163-.L150)/2
 1669 0027 36       		.byte	(.L154-.L150)/2
 1670 0028 54       		.byte	(.L162-.L150)/2
 1671 0029 58       		.byte	(.L163-.L150)/2
 1672 002a 50       		.byte	(.L161-.L150)/2
 1673 002b 54       		.byte	(.L162-.L150)/2
 1674 002c 58       		.byte	(.L163-.L150)/2
 1675 002d 54       		.byte	(.L162-.L150)/2
 1676 002e 58       		.byte	(.L163-.L150)/2
 1677 002f 00       		.p2align 1
 1678              	.L149:
1656:TP2824/TP2802.c ****  	{
1657:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE0_w0: 
1658:TP2824/TP2802.c **** 			if((ch==CH2)||(ch==CH3)||(ch==CH4))
 1679              		.loc 1 1658 0
 1680 0030 0138     		subs	r0, r0, #1
 1681              	.LVL226:
 1682 0032 C0B2     		uxtb	r0, r0
 1683 0034 0228     		cmp	r0, #2
 1684 0036 48D9     		bls	.L165
ARM GAS  /tmp/ccFyOsmB.s 			page 63


1653:TP2824/TP2802.c **** 	
 1685              		.loc 1 1653 0
 1686 0038 0020     		movs	r0, #0
 1687 003a 7047     		bx	lr
 1688              	.LVL227:
 1689              	.L151:
1659:TP2824/TP2802.c **** 		           ret=_TRUE;		
1660:TP2824/TP2802.c **** 		break;
1661:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE0_w1: 
1662:TP2824/TP2802.c **** 			if((ch==CH1)||(ch==CH3)||(ch==CH4))
 1690              		.loc 1 1662 0
 1691 003c 0028     		cmp	r0, #0
 1692 003e 46D0     		beq	.L166
 1693              		.loc 1 1662 0 is_stmt 0 discriminator 1
 1694 0040 0228     		cmp	r0, #2
 1695 0042 46D0     		beq	.L167
 1696              		.loc 1 1662 0 discriminator 2
 1697 0044 0328     		cmp	r0, #3
 1698 0046 46D0     		beq	.L168
1653:TP2824/TP2802.c **** 	
 1699              		.loc 1 1653 0 is_stmt 1
 1700 0048 0020     		movs	r0, #0
 1701              	.LVL228:
 1702 004a 7047     		bx	lr
 1703              	.LVL229:
 1704              	.L152:
1663:TP2824/TP2802.c **** 							   ret=_TRUE;	
1664:TP2824/TP2802.c **** 		break;
1665:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE0_w2: 
1666:TP2824/TP2802.c **** 			if((ch==CH1)||(ch==CH2)||(ch==CH4))
 1705              		.loc 1 1666 0
 1706 004c 0128     		cmp	r0, #1
 1707 004e 44D9     		bls	.L169
 1708              		.loc 1 1666 0 is_stmt 0 discriminator 1
 1709 0050 0328     		cmp	r0, #3
 1710 0052 44D0     		beq	.L170
1653:TP2824/TP2802.c **** 	
 1711              		.loc 1 1653 0 is_stmt 1
 1712 0054 0020     		movs	r0, #0
 1713              	.LVL230:
 1714 0056 7047     		bx	lr
 1715              	.LVL231:
 1716              	.L153:
1667:TP2824/TP2802.c **** 							   ret=_TRUE;	
1668:TP2824/TP2802.c **** 					break;
1669:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE0_w3: 
1670:TP2824/TP2802.c **** 			if((ch==CH1)||(ch==CH2)||(ch==CH3))
 1717              		.loc 1 1670 0
 1718 0058 0228     		cmp	r0, #2
 1719 005a 42D9     		bls	.L171
1653:TP2824/TP2802.c **** 	
 1720              		.loc 1 1653 0
 1721 005c 0020     		movs	r0, #0
 1722              	.LVL232:
 1723 005e 7047     		bx	lr
 1724              	.LVL233:
 1725              	.L155:
ARM GAS  /tmp/ccFyOsmB.s 			page 64


1671:TP2824/TP2802.c **** 		           ret=_TRUE;	
1672:TP2824/TP2802.c **** 				break;
1673:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE12_12: 
1674:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE12_21:			
1675:TP2824/TP2802.c **** 			if((ch==CH3)||(ch==CH4))
 1726              		.loc 1 1675 0
 1727 0060 0238     		subs	r0, r0, #2
 1728              	.LVL234:
 1729 0062 C0B2     		uxtb	r0, r0
 1730 0064 0128     		cmp	r0, #1
 1731 0066 3ED9     		bls	.L172
1653:TP2824/TP2802.c **** 	
 1732              		.loc 1 1653 0
 1733 0068 0020     		movs	r0, #0
 1734 006a 7047     		bx	lr
 1735              	.LVL235:
 1736              	.L157:
1676:TP2824/TP2802.c **** 		           ret=_TRUE;	
1677:TP2824/TP2802.c **** 		break;
1678:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE12_14:
1679:TP2824/TP2802.c **** 			if((ch==CH2)||(ch==CH3))
 1737              		.loc 1 1679 0
 1738 006c 0138     		subs	r0, r0, #1
 1739              	.LVL236:
 1740 006e C0B2     		uxtb	r0, r0
 1741 0070 0128     		cmp	r0, #1
 1742 0072 3AD9     		bls	.L173
1653:TP2824/TP2802.c **** 	
 1743              		.loc 1 1653 0
 1744 0074 0020     		movs	r0, #0
 1745 0076 7047     		bx	lr
 1746              	.LVL237:
 1747              	.L154:
1680:TP2824/TP2802.c **** 		           ret=_TRUE;	
1681:TP2824/TP2802.c **** 			break;
1682:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE10_123:
1683:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8:		
1684:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_123:
1685:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_213:
1686:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_312:
1687:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE9:		
1688:TP2824/TP2802.c **** 		if(ch==CH4)
 1748              		.loc 1 1688 0
 1749 0078 0328     		cmp	r0, #3
 1750 007a 38D0     		beq	.L174
1653:TP2824/TP2802.c **** 	
 1751              		.loc 1 1653 0
 1752 007c 0020     		movs	r0, #0
 1753              	.LVL238:
 1754 007e 7047     		bx	lr
 1755              	.LVL239:
 1756              	.L159:
1689:TP2824/TP2802.c **** 		   ret=_TRUE;	
1690:TP2824/TP2802.c **** 		break;
1691:TP2824/TP2802.c **** 
1692:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_23:
1693:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_32:
ARM GAS  /tmp/ccFyOsmB.s 			page 65


1694:TP2824/TP2802.c **** 		if((ch==CH1)||(ch==CH4))
 1757              		.loc 1 1694 0
 1758 0080 0028     		cmp	r0, #0
 1759 0082 36D0     		beq	.L175
 1760              		.loc 1 1694 0 is_stmt 0 discriminator 1
 1761 0084 0328     		cmp	r0, #3
 1762 0086 36D0     		beq	.L176
1653:TP2824/TP2802.c **** 	
 1763              		.loc 1 1653 0 is_stmt 1
 1764 0088 0020     		movs	r0, #0
 1765              	.LVL240:
 1766 008a 7047     		bx	lr
 1767              	.LVL241:
 1768              	.L156:
1695:TP2824/TP2802.c **** 			   ret=_TRUE;	
1696:TP2824/TP2802.c **** 					break;
1697:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_34:
1698:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_43:
1699:TP2824/TP2802.c **** 		if((ch==CH1)||(ch==CH2))
 1769              		.loc 1 1699 0
 1770 008c 0128     		cmp	r0, #1
 1771 008e 34D9     		bls	.L177
1653:TP2824/TP2802.c **** 	
 1772              		.loc 1 1653 0
 1773 0090 0020     		movs	r0, #0
 1774              	.LVL242:
 1775 0092 7047     		bx	lr
 1776              	.LVL243:
 1777              	.L160:
1700:TP2824/TP2802.c **** 			   ret=_TRUE;	
1701:TP2824/TP2802.c **** 				break;
1702:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_31:
1703:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_13:	
1704:TP2824/TP2802.c **** 		if((ch==CH2)||(ch==CH4))
 1778              		.loc 1 1704 0
 1779 0094 0128     		cmp	r0, #1
 1780 0096 32D0     		beq	.L178
 1781              		.loc 1 1704 0 is_stmt 0 discriminator 1
 1782 0098 0328     		cmp	r0, #3
 1783 009a 32D0     		beq	.L179
1653:TP2824/TP2802.c **** 	
 1784              		.loc 1 1653 0 is_stmt 1
 1785 009c 0020     		movs	r0, #0
 1786              	.LVL244:
 1787 009e 7047     		bx	lr
 1788              	.LVL245:
 1789              	.L158:
1705:TP2824/TP2802.c **** 				   ret=_TRUE;			
1706:TP2824/TP2802.c **** 					break;
1707:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE1:
1708:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE2:
1709:TP2824/TP2802.c **** 		ret=_FALSE;
1710:TP2824/TP2802.c **** 		break;
1711:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_42:
1712:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_24:
1713:TP2824/TP2802.c **** 		if((ch==CH1)||(ch==CH3))
 1790              		.loc 1 1713 0
ARM GAS  /tmp/ccFyOsmB.s 			page 66


 1791 00a0 0028     		cmp	r0, #0
 1792 00a2 30D0     		beq	.L180
 1793              		.loc 1 1713 0 is_stmt 0 discriminator 1
 1794 00a4 0228     		cmp	r0, #2
 1795 00a6 30D0     		beq	.L181
1653:TP2824/TP2802.c **** 	
 1796              		.loc 1 1653 0 is_stmt 1
 1797 00a8 0020     		movs	r0, #0
 1798              	.LVL246:
 1799 00aa 7047     		bx	lr
 1800              	.LVL247:
 1801              	.L161:
1714:TP2824/TP2802.c **** 				   ret=_TRUE;		
1715:TP2824/TP2802.c **** 		break;
1716:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_412:	
1717:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_124:
1718:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_214: 
1719:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE10_412:
1720:TP2824/TP2802.c **** 			if(ch==CH3)
 1802              		.loc 1 1720 0
 1803 00ac 0228     		cmp	r0, #2
 1804 00ae 2ED0     		beq	.L182
1653:TP2824/TP2802.c **** 	
 1805              		.loc 1 1653 0
 1806 00b0 0020     		movs	r0, #0
 1807              	.LVL248:
 1808 00b2 7047     		bx	lr
 1809              	.LVL249:
 1810              	.L162:
1721:TP2824/TP2802.c **** 			   ret=_TRUE;		
1722:TP2824/TP2802.c **** 		break;
1723:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_134:
1724:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_314:
1725:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE10_413:
1726:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_413: 
1727:TP2824/TP2802.c **** 			if(ch==CH2)
 1811              		.loc 1 1727 0
 1812 00b4 0128     		cmp	r0, #1
 1813 00b6 03D0     		beq	.L148
1653:TP2824/TP2802.c **** 	
 1814              		.loc 1 1653 0
 1815 00b8 0020     		movs	r0, #0
 1816              	.LVL250:
 1817 00ba 7047     		bx	lr
 1818              	.LVL251:
 1819              	.L163:
1728:TP2824/TP2802.c **** 			   ret=_TRUE;		
1729:TP2824/TP2802.c **** 		break;
1730:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_234:
1731:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_324: 
1732:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE10_423:
1733:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_423:			
1734:TP2824/TP2802.c **** 		if(ch==CH1)
 1820              		.loc 1 1734 0
 1821 00bc 08B9     		cbnz	r0, .L185
1735:TP2824/TP2802.c **** 		   ret=_TRUE;		
 1822              		.loc 1 1735 0
ARM GAS  /tmp/ccFyOsmB.s 			page 67


 1823 00be 0120     		movs	r0, #1
 1824              	.LVL252:
 1825              	.L148:
1736:TP2824/TP2802.c **** 				break;
1737:TP2824/TP2802.c **** 	default:
1738:TP2824/TP2802.c **** 		ret=0;
1739:TP2824/TP2802.c **** 		break;
1740:TP2824/TP2802.c ****  	}
1741:TP2824/TP2802.c **** 	 
1742:TP2824/TP2802.c **** 	 return ret;
1743:TP2824/TP2802.c **** }
 1826              		.loc 1 1743 0
 1827 00c0 7047     		bx	lr
 1828              	.LVL253:
 1829              	.L185:
1653:TP2824/TP2802.c **** 	
 1830              		.loc 1 1653 0
 1831 00c2 0020     		movs	r0, #0
 1832              	.LVL254:
 1833 00c4 7047     		bx	lr
 1834              	.LVL255:
 1835              	.L164:
1709:TP2824/TP2802.c **** 		break;
 1836              		.loc 1 1709 0
 1837 00c6 0020     		movs	r0, #0
 1838              	.LVL256:
 1839 00c8 7047     		bx	lr
 1840              	.L165:
1659:TP2824/TP2802.c **** 		break;
 1841              		.loc 1 1659 0
 1842 00ca 0120     		movs	r0, #1
 1843 00cc 7047     		bx	lr
 1844              	.LVL257:
 1845              	.L166:
1663:TP2824/TP2802.c **** 		break;
 1846              		.loc 1 1663 0
 1847 00ce 0120     		movs	r0, #1
 1848              	.LVL258:
 1849 00d0 7047     		bx	lr
 1850              	.LVL259:
 1851              	.L167:
 1852 00d2 0120     		movs	r0, #1
 1853              	.LVL260:
 1854 00d4 7047     		bx	lr
 1855              	.LVL261:
 1856              	.L168:
 1857 00d6 0120     		movs	r0, #1
 1858              	.LVL262:
 1859 00d8 7047     		bx	lr
 1860              	.LVL263:
 1861              	.L169:
1667:TP2824/TP2802.c **** 					break;
 1862              		.loc 1 1667 0
 1863 00da 0120     		movs	r0, #1
 1864              	.LVL264:
 1865 00dc 7047     		bx	lr
 1866              	.LVL265:
ARM GAS  /tmp/ccFyOsmB.s 			page 68


 1867              	.L170:
 1868 00de 0120     		movs	r0, #1
 1869              	.LVL266:
 1870 00e0 7047     		bx	lr
 1871              	.LVL267:
 1872              	.L171:
1671:TP2824/TP2802.c **** 				break;
 1873              		.loc 1 1671 0
 1874 00e2 0120     		movs	r0, #1
 1875              	.LVL268:
 1876 00e4 7047     		bx	lr
 1877              	.L172:
1676:TP2824/TP2802.c **** 		break;
 1878              		.loc 1 1676 0
 1879 00e6 0120     		movs	r0, #1
 1880 00e8 7047     		bx	lr
 1881              	.L173:
1680:TP2824/TP2802.c **** 			break;
 1882              		.loc 1 1680 0
 1883 00ea 0120     		movs	r0, #1
 1884 00ec 7047     		bx	lr
 1885              	.LVL269:
 1886              	.L174:
1689:TP2824/TP2802.c **** 		break;
 1887              		.loc 1 1689 0
 1888 00ee 0120     		movs	r0, #1
 1889              	.LVL270:
 1890 00f0 7047     		bx	lr
 1891              	.LVL271:
 1892              	.L175:
1695:TP2824/TP2802.c **** 					break;
 1893              		.loc 1 1695 0
 1894 00f2 0120     		movs	r0, #1
 1895              	.LVL272:
 1896 00f4 7047     		bx	lr
 1897              	.LVL273:
 1898              	.L176:
 1899 00f6 0120     		movs	r0, #1
 1900              	.LVL274:
 1901 00f8 7047     		bx	lr
 1902              	.LVL275:
 1903              	.L177:
1700:TP2824/TP2802.c **** 				break;
 1904              		.loc 1 1700 0
 1905 00fa 0120     		movs	r0, #1
 1906              	.LVL276:
 1907 00fc 7047     		bx	lr
 1908              	.LVL277:
 1909              	.L178:
1705:TP2824/TP2802.c **** 					break;
 1910              		.loc 1 1705 0
 1911 00fe 0120     		movs	r0, #1
 1912              	.LVL278:
 1913 0100 7047     		bx	lr
 1914              	.LVL279:
 1915              	.L179:
 1916 0102 0120     		movs	r0, #1
ARM GAS  /tmp/ccFyOsmB.s 			page 69


 1917              	.LVL280:
 1918 0104 7047     		bx	lr
 1919              	.LVL281:
 1920              	.L180:
1714:TP2824/TP2802.c **** 		break;
 1921              		.loc 1 1714 0
 1922 0106 0120     		movs	r0, #1
 1923              	.LVL282:
 1924 0108 7047     		bx	lr
 1925              	.LVL283:
 1926              	.L181:
 1927 010a 0120     		movs	r0, #1
 1928              	.LVL284:
 1929 010c 7047     		bx	lr
 1930              	.LVL285:
 1931              	.L182:
1721:TP2824/TP2802.c **** 		break;
 1932              		.loc 1 1721 0
 1933 010e 0120     		movs	r0, #1
 1934              	.LVL286:
 1935 0110 7047     		bx	lr
 1936              	.L187:
 1937 0112 00BF     		.align	2
 1938              	.L186:
 1939 0114 00000000 		.word	CURRENT_CH
 1940              		.cfi_endproc
 1941              	.LFE84:
 1943              		.section	.text.Det_HLock,"ax",%progbits
 1944              		.align	1
 1945              		.global	Det_HLock
 1946              		.syntax unified
 1947              		.thumb
 1948              		.thumb_func
 1949              		.fpu softvfp
 1951              	Det_HLock:
 1952              	.LFB86:
1744:TP2824/TP2802.c **** 
1745:TP2824/TP2802.c **** void EQ_Detect()
1746:TP2824/TP2802.c **** {
1747:TP2824/TP2802.c ****     //tByte tmpval;
1748:TP2824/TP2802.c ****     tByte cvstd,status,i;
1749:TP2824/TP2802.c ****     tByte gain, tmp, fmt/*, tmpab*/;
1750:TP2824/TP2802.c **** 	
1751:TP2824/TP2802.c ****     for(i = 0; i < CH_PER_CHIP; i++)//scan four inputs:
1752:TP2824/TP2802.c ****     {
1753:TP2824/TP2802.c **** 	//	if((INPUT_VIDEO_CHECK(i))&&(BOOT_ISSUE==ON))
1754:TP2824/TP2802.c ****           //      continue;
1755:TP2824/TP2802.c **** 
1756:TP2824/TP2802.c **** 		
1757:TP2824/TP2802.c ****         SetRegPage(i);
1758:TP2824/TP2802.c ****         status = tp28xx_byte_read(0x01);
1759:TP2824/TP2802.c **** 
1760:TP2824/TP2802.c ****         //state machine for video checking
1761:TP2824/TP2802.c ****         if(status & FLAG_LOSS)
1762:TP2824/TP2802.c ****         {
1763:TP2824/TP2802.c **** 	
1764:TP2824/TP2802.c **** 		
ARM GAS  /tmp/ccFyOsmB.s 			page 70


1765:TP2824/TP2802.c ****             if(VIDEO_UNPLUG == state[i])
1766:TP2824/TP2802.c ****             {
1767:TP2824/TP2802.c ****                 if(count[i] < MAX_COUNT) count[i]++;
1768:TP2824/TP2802.c ****                 continue;
1769:TP2824/TP2802.c ****             }
1770:TP2824/TP2802.c ****             else
1771:TP2824/TP2802.c ****             {
1772:TP2824/TP2802.c **** 
1773:TP2824/TP2802.c **** 
1774:TP2824/TP2802.c **** 				 if(SelectInputMode==_AHD_Input)
1775:TP2824/TP2802.c **** 				 	{
1776:TP2824/TP2802.c **** 					 Set_Video_Loss_OSD(1,ON);	 
1777:TP2824/TP2802.c **** 					VXISI2CWrite( 0x32, 0x00 );
1778:TP2824/TP2802.c **** 				 	}
1779:TP2824/TP2802.c **** 
1780:TP2824/TP2802.c **** 				
1781:TP2824/TP2802.c **** 				 
1782:TP2824/TP2802.c **** 				 Init_TP280x_RegSet();
1783:TP2824/TP2802.c **** 
1784:TP2824/TP2802.c **** 				 if(SelectInputMode==_AHD_Input)
1785:TP2824/TP2802.c **** 				 	{
1786:TP2824/TP2802.c **** 
1787:TP2824/TP2802.c **** 				  HS_Select_Win(1);
1788:TP2824/TP2802.c **** 				 	}
1789:TP2824/TP2802.c **** 			#if 0
1790:TP2824/TP2802.c ****                  state[i] = VIDEO_UNPLUG;
1791:TP2824/TP2802.c ****                 count[i] = 0;
1792:TP2824/TP2802.c ****                 mode[i] = NoDet;
1793:TP2824/TP2802.c ****                 TP28xx_reset_default(chip, i);
1794:TP2824/TP2802.c ****                 printf("video loss ch%02x \r\n", (tWord)i);                
1795:TP2824/TP2802.c ****               	VS4210_Rx_NoSignal(1/*i*/) ; //chunyu
1796:TP2824/TP2802.c **** 		TP_InputMode=7;
1797:TP2824/TP2802.c **** 		    newInRes[0] = _OSD_No_Signal; 
1798:TP2824/TP2802.c **** 				
1799:TP2824/TP2802.c **** 		if(SelectInputMode==_AHD_Input)
1800:TP2824/TP2802.c **** 		Set_Video_Loss_OSD(1,ON);	
1801:TP2824/TP2802.c **** 		//MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);
1802:TP2824/TP2802.c **** 		//MCUTimerActiveTimerEvent(SEC(3), _SYSTEM_TIMER_EVENT_VIDEO_RESET);
1803:TP2824/TP2802.c **** 
1804:TP2824/TP2802.c **** 		OSDSecCount = 0 ;
1805:TP2824/TP2802.c **** 		 OSDStateFlg = 1 ;	
1806:TP2824/TP2802.c **** 			#endif
1807:TP2824/TP2802.c ****             }
1808:TP2824/TP2802.c **** 			
1809:TP2824/TP2802.c ****         }
1810:TP2824/TP2802.c ****         else
1811:TP2824/TP2802.c ****         {
1812:TP2824/TP2802.c ****             if(PAL == mode[i] || NTSC == mode[i])
1813:TP2824/TP2802.c ****                 flag_LOCKED = CVBS_FLAG_LOCKED;
1814:TP2824/TP2802.c ****             else
1815:TP2824/TP2802.c ****                 flag_LOCKED = TVI_FLAG_LOCKED;
1816:TP2824/TP2802.c **** 
1817:TP2824/TP2802.c ****             if( flag_LOCKED == (status & flag_LOCKED) ) //video locked
1818:TP2824/TP2802.c ****             {
1819:TP2824/TP2802.c ****                 if(VIDEO_LOCKED == state[i])
1820:TP2824/TP2802.c ****                 {
1821:TP2824/TP2802.c ****                     if(count[i] < MAX_COUNT) count[i]++;
ARM GAS  /tmp/ccFyOsmB.s 			page 71


1822:TP2824/TP2802.c **** 				#if 0
1823:TP2824/TP2802.c **** 				if(VideoSave[i]==_TRUE)
1824:TP2824/TP2802.c **** 				{
1825:TP2824/TP2802.c **** 			 		if((count[i]==1)&&((mode[i] == NTSC) ||( mode[i] == PAL)))
1826:TP2824/TP2802.c **** 			 		count[i]=20;//ryan@20200903
1827:TP2824/TP2802.c **** 			 		else if((count[i]==1)/*&&(ReadEEP(EEP_TP2824_STD0+(i*3))==HDA)*/)
1828:TP2824/TP2802.c **** 			 			{
1829:TP2824/TP2802.c **** 			 			std[i]=ReadEEP(EEP_TP2824_STD0+(i*3));
1830:TP2824/TP2802.c **** 						
1831:TP2824/TP2802.c **** 		 			 		if(std[i]==HDC)
1832:TP2824/TP2802.c **** 							{
1833:TP2824/TP2802.c **** 							Set_HDC(i);
1834:TP2824/TP2802.c **** 							printf("(Set_HDC)");
1835:TP2824/TP2802.c **** 							}
1836:TP2824/TP2802.c **** 							 if(std[i]==HDA)
1837:TP2824/TP2802.c **** 						 	{
1838:TP2824/TP2802.c **** 						 	Set_HDA(i);
1839:TP2824/TP2802.c **** 							printf("(Set_HDA)");
1840:TP2824/TP2802.c **** 						 	}
1841:TP2824/TP2802.c **** 							 
1842:TP2824/TP2802.c **** 						count[i]=20;
1843:TP2824/TP2802.c **** 			 			}
1844:TP2824/TP2802.c **** 					
1845:TP2824/TP2802.c **** 				}	
1846:TP2824/TP2802.c **** 				#endif
1847:TP2824/TP2802.c ****                 }
1848:TP2824/TP2802.c ****                 else if(VIDEO_UNPLUG == state[i])
1849:TP2824/TP2802.c ****                 {
1850:TP2824/TP2802.c ****                     state[i] = VIDEO_IN;
1851:TP2824/TP2802.c ****                     count[i] = 0;
1852:TP2824/TP2802.c ****                     printf("1video in ch%02x \r\n", (tWord)i);
1853:TP2824/TP2802.c ****                 }
1854:TP2824/TP2802.c ****                 else
1855:TP2824/TP2802.c ****                 {
1856:TP2824/TP2802.c ****                     state[i] = VIDEO_LOCKED;
1857:TP2824/TP2802.c ****                     count[i] = 0;
1858:TP2824/TP2802.c ****                     printf("video locked ch%02x \r\n", (tWord)i);
1859:TP2824/TP2802.c ****                 }
1860:TP2824/TP2802.c ****             }
1861:TP2824/TP2802.c ****             else  //video in but unlocked
1862:TP2824/TP2802.c ****             {
1863:TP2824/TP2802.c ****          
1864:TP2824/TP2802.c ****                 if(VIDEO_UNPLUG == state[i])
1865:TP2824/TP2802.c ****                 {
1866:TP2824/TP2802.c ****                     state[i] = VIDEO_IN;
1867:TP2824/TP2802.c ****                     count[i] = 0;
1868:TP2824/TP2802.c ****                     printf("video in ch%02x \r\n", (tWord)i);
1869:TP2824/TP2802.c ****                 }
1870:TP2824/TP2802.c ****                 else if(VIDEO_LOCKED == state[i])
1871:TP2824/TP2802.c ****                 {
1872:TP2824/TP2802.c **** /*
1873:TP2824/TP2802.c **** 			if(Flisheye_VLOSS_Count[i]<100)
1874:TP2824/TP2802.c **** 			{
1875:TP2824/TP2802.c **** 			Flisheye_VLOSS_Count[i]++;
1876:TP2824/TP2802.c **** 			}
1877:TP2824/TP2802.c **** 		else
1878:TP2824/TP2802.c **** 			*/
ARM GAS  /tmp/ccFyOsmB.s 			page 72


1879:TP2824/TP2802.c **** 			{
1880:TP2824/TP2802.c ****                     state[i] = VIDEO_UNLOCK;
1881:TP2824/TP2802.c ****                     count[i] = 0;
1882:TP2824/TP2802.c ****                     printf("video unstable ch%02x \r\n", (tWord)i);
1883:TP2824/TP2802.c **** 			}		
1884:TP2824/TP2802.c ****                 }
1885:TP2824/TP2802.c ****                 else
1886:TP2824/TP2802.c ****                 {
1887:TP2824/TP2802.c ****                     if(count[i] < MAX_COUNT) count[i]++;
1888:TP2824/TP2802.c ****                     if(VIDEO_UNLOCK == state[i] && count[i] > 2)
1889:TP2824/TP2802.c ****                     {
1890:TP2824/TP2802.c ****                         state[i] = VIDEO_IN;
1891:TP2824/TP2802.c ****                         count[i] = 0;
1892:TP2824/TP2802.c ****                         TP28xx_reset_default(chip, i);
1893:TP2824/TP2802.c ****                         printf("video unlocked ch%02x \r\n", (tWord)i);                        
1894:TP2824/TP2802.c ****                         VS4210_Rx_NoSignal(i) ;//chunyu
1895:TP2824/TP2802.c ****                     }
1896:TP2824/TP2802.c ****                 }
1897:TP2824/TP2802.c **** 				
1898:TP2824/TP2802.c ****             }
1899:TP2824/TP2802.c **** 			
1900:TP2824/TP2802.c ****         }
1901:TP2824/TP2802.c **** 
1902:TP2824/TP2802.c ****         if( VIDEO_IN == state[i])
1903:TP2824/TP2802.c ****         {
1904:TP2824/TP2802.c ****             cvstd = tp28xx_byte_read(0x03);
1905:TP2824/TP2802.c ****             sywd = cvstd & 0x08;
1906:TP2824/TP2802.c ****             cvstd &= 0x07;
1907:TP2824/TP2802.c ****             fmt = mode[i];
1908:TP2824/TP2802.c ****             if(NTPAL == cvstd && flag_CVBS)
1909:TP2824/TP2802.c ****             {
1910:TP2824/TP2802.c ****                 //if(count[i] & 0x01)
1911:TP2824/TP2802.c ****                 if(status & 0x04)
1912:TP2824/TP2802.c ****                     fmt = PAL;
1913:TP2824/TP2802.c ****                 else
1914:TP2824/TP2802.c ****                     fmt = NTSC;
1915:TP2824/TP2802.c ****             }
1916:TP2824/TP2802.c ****             else if(cvstd == R720P30 )
1917:TP2824/TP2802.c ****             {
1918:TP2824/TP2802.c ****                 if( flag_MEGA && (count[i]&0x02) )// 3M auto detect test
1919:TP2824/TP2802.c ****                     fmt = R4M12;
1920:TP2824/TP2802.c ****                 else
1921:TP2824/TP2802.c ****                     fmt = R720P30V2;
1922:TP2824/TP2802.c ****             }
1923:TP2824/TP2802.c ****             else if(cvstd == R720P25 )
1924:TP2824/TP2802.c ****             {
1925:TP2824/TP2802.c ****                 fmt = R720P25V2;
1926:TP2824/TP2802.c ****             }
1927:TP2824/TP2802.c ****             else if(cvstd == R1080P30 )
1928:TP2824/TP2802.c ****             {
1929:TP2824/TP2802.c ****                 if( flag_MEGA && (count[i]&0x02) )//TP2853C 3M auto detect test
1930:TP2824/TP2802.c ****                     fmt = R3M20;
1931:TP2824/TP2802.c ****                 else
1932:TP2824/TP2802.c ****                     fmt = R1080P30;
1933:TP2824/TP2802.c ****             }
1934:TP2824/TP2802.c ****             else if(cvstd == R720P60 )
1935:TP2824/TP2802.c ****             {
ARM GAS  /tmp/ccFyOsmB.s 			page 73


1936:TP2824/TP2802.c ****                 if( flag_MEGA && (count[i]&0x02) )//TP2853C 3M auto detect test
1937:TP2824/TP2802.c ****                     fmt = R4M30;
1938:TP2824/TP2802.c ****                 else
1939:TP2824/TP2802.c ****                     fmt = R720P60;
1940:TP2824/TP2802.c ****             }
1941:TP2824/TP2802.c ****             else if(cvstd < 4 )
1942:TP2824/TP2802.c ****             {
1943:TP2824/TP2802.c ****                 fmt = cvstd;
1944:TP2824/TP2802.c ****             }
1945:TP2824/TP2802.c ****             else
1946:TP2824/TP2802.c ****             {
1947:TP2824/TP2802.c ****                 if( flag_MEGA )//TP2853C 3M auto detect test
1948:TP2824/TP2802.c ****                 {
1949:TP2824/TP2802.c ****                     tp28xx_byte_write(0x2f, 0x09);
1950:TP2824/TP2802.c ****                     tmp = tp28xx_byte_read(0x04);
1951:TP2824/TP2802.c ****                     if((tmp > 0x48) && (tmp < 0x55))
1952:TP2824/TP2802.c ****                     {
1953:TP2824/TP2802.c ****                         fmt = R3M18;
1954:TP2824/TP2802.c ****                     }
1955:TP2824/TP2802.c ****                     else if((tmp > 0x55) && (tmp < 0x62))
1956:TP2824/TP2802.c ****                     {
1957:TP2824/TP2802.c ****                         fmt = R4M15;
1958:TP2824/TP2802.c ****                     }
1959:TP2824/TP2802.c ****                     else if((tmp > 0x70) && (tmp < 0x80))
1960:TP2824/TP2802.c ****                     {
1961:TP2824/TP2802.c ****                         fmt = R6M10;
1962:TP2824/TP2802.c ****                     }
1963:TP2824/TP2802.c ****                 }
1964:TP2824/TP2802.c ****             }
1965:TP2824/TP2802.c **** /*
1966:TP2824/TP2802.c **** 		if(VideoSave[i]==_TRUE)
1967:TP2824/TP2802.c **** 		{
1968:TP2824/TP2802.c **** 		printf("(B)");
1969:TP2824/TP2802.c **** 		Set_VidRes(i);      
1970:TP2824/TP2802.c **** 		}
1971:TP2824/TP2802.c **** 		else
1972:TP2824/TP2802.c **** 			*/
1973:TP2824/TP2802.c **** 		{
1974:TP2824/TP2802.c **** 		   	if( mode[i] != fmt )
1975:TP2824/TP2802.c **** 		            {
1976:TP2824/TP2802.c **** 		                mode[i] = fmt;
1977:TP2824/TP2802.c **** 		                printf("Set_VidResmode[%d] =%d\r\n",(int)i, (int)fmt);
1978:TP2824/TP2802.c **** 		                Set_VidRes(i);
1979:TP2824/TP2802.c **** 		            }
1980:TP2824/TP2802.c **** 		}
1981:TP2824/TP2802.c ****         }
1982:TP2824/TP2802.c **** 
1983:TP2824/TP2802.c ****         if( VIDEO_LOCKED == state[i]) //check signal lock
1984:TP2824/TP2802.c ****         {
1985:TP2824/TP2802.c ****             if(0 == count[i])
1986:TP2824/TP2802.c ****             {
1987:TP2824/TP2802.c ****                 std[i] = TVI;
1988:TP2824/TP2802.c ****                 CurCH = i;
1989:TP2824/TP2802.c ****                 if( (R720P30V2 == mode[i]) || (R720P25V2 == mode[i]) )
1990:TP2824/TP2802.c ****                 {
1991:TP2824/TP2802.c ****                     if( 0x00 == (0x08 & tp28xx_byte_read(0x03)))
1992:TP2824/TP2802.c ****                     {
ARM GAS  /tmp/ccFyOsmB.s 			page 74


1993:TP2824/TP2802.c ****                         mode[i] &= 0xf7;
1994:TP2824/TP2802.c ****                         Set_VidRes(i);
1995:TP2824/TP2802.c ****                         //printf("TVI_Set_VidRes\r\n");
1996:TP2824/TP2802.c ****                     }
1997:TP2824/TP2802.c ****                 }
1998:TP2824/TP2802.c **** 
1999:TP2824/TP2802.c ****                 //tp28xx_byte_write(0xf6  , REG_F6[i]);
2000:TP2824/TP2802.c ****                 tp28xx_byte_write(0xf6 +i  , REG_F6[i]);  //chunyu
2001:TP2824/TP2802.c **** 
2002:TP2824/TP2802.c **** #if(OUTPUT == Bits16out)
2003:TP2824/TP2802.c ****                 if( TP2826 == chip )
2004:TP2824/TP2802.c ****                 {
2005:TP2824/TP2802.c ****                     tp28xx_byte_write(0xf8, REG_F7[i]);
2006:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfa, REG_FA[i]);
2007:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfb, REG_FA[i]);
2008:TP2824/TP2802.c ****                 }
2009:TP2824/TP2802.c ****                 else
2010:TP2824/TP2802.c ****                 {                    
2011:TP2824/TP2802.c ****                     tp28xx_byte_write(0xf7, REG_F7[i]);
2012:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfa, REG_FA[i]);
2013:TP2824/TP2802.c ****                     //printf("set output ch%02x \r\n", (tWord)CH[i]);
2014:TP2824/TP2802.c ****                 }
2015:TP2824/TP2802.c **** #else //BT656																				
2016:TP2824/TP2802.c **** 
2017:TP2824/TP2802.c ****                 tmp=tp28xx_byte_read(0xf5);
2018:TP2824/TP2802.c ****                 if( tmp &= SYS_MODE[i])
2019:TP2824/TP2802.c ****                 {
2020:TP2824/TP2802.c ****                     printf("//75.25M output\r\n") ;
2021:TP2824/TP2802.c **** 
2022:TP2824/TP2802.c ****                     if (i == 0)
2023:TP2824/TP2802.c ****                     {
2024:TP2824/TP2802.c ****                         tmpab = tp28xx_byte_read(0xfa) ;
2025:TP2824/TP2802.c ****                         tmpab = (tmpab & 0xF0) | 0x0A ;
2026:TP2824/TP2802.c ****                         tp28xx_byte_write(0xfa, tmpab);
2027:TP2824/TP2802.c ****                     }
2028:TP2824/TP2802.c ****                     else if (i == 1)
2029:TP2824/TP2802.c ****                     {
2030:TP2824/TP2802.c ****                         tmpab = tp28xx_byte_read(0xfa) ;
2031:TP2824/TP2802.c ****                         tmpab = (tmpab & 0x0F) | 0xA0 ;
2032:TP2824/TP2802.c ****                         tp28xx_byte_write(0xfa, tmpab);
2033:TP2824/TP2802.c ****                     }
2034:TP2824/TP2802.c **** 
2035:TP2824/TP2802.c ****                     if (i == 2)
2036:TP2824/TP2802.c ****                     {
2037:TP2824/TP2802.c ****                         tmpab = tp28xx_byte_read(0xfb) ;
2038:TP2824/TP2802.c ****                         tmpab = (tmpab & 0xF0) | 0x0A ;
2039:TP2824/TP2802.c ****                         tp28xx_byte_write(0xfb, tmpab);
2040:TP2824/TP2802.c ****                     }
2041:TP2824/TP2802.c ****                     else if (i == 3)
2042:TP2824/TP2802.c ****                     {
2043:TP2824/TP2802.c ****                         tmpab = tp28xx_byte_read(0xfb) ;
2044:TP2824/TP2802.c ****                         tmpab = (tmpab & 0x0F) | 0xA0 ;
2045:TP2824/TP2802.c ****                         tp28xx_byte_write(0xfb, tmpab);
2046:TP2824/TP2802.c ****                     }
2047:TP2824/TP2802.c ****                 }
2048:TP2824/TP2802.c ****                 else
2049:TP2824/TP2802.c ****                 {
ARM GAS  /tmp/ccFyOsmB.s 			page 75


2050:TP2824/TP2802.c ****                     extern tByte half_scaler;
2051:TP2824/TP2802.c ****                     if(half_scaler) //down scaler output
2052:TP2824/TP2802.c ****                     {
2053:TP2824/TP2802.c ****                         tmp=tp28xx_byte_read(0x35);
2054:TP2824/TP2802.c ****                         tmp |= 0x40;
2055:TP2824/TP2802.c ****                         tp28xx_byte_write(0x35, tmp);                        
2056:TP2824/TP2802.c **** 
2057:TP2824/TP2802.c ****                         if (i == 0)
2058:TP2824/TP2802.c ****                         {
2059:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfa) ;
2060:TP2824/TP2802.c ****                             tmpab = (tmpab & 0xF0) | 0x0A ;
2061:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfa, tmpab);
2062:TP2824/TP2802.c ****                         }
2063:TP2824/TP2802.c ****                         else if (i == 1)
2064:TP2824/TP2802.c ****                         {
2065:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfa) ;
2066:TP2824/TP2802.c ****                             tmpab = (tmpab & 0x0F) | 0xA0 ;
2067:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfa, tmpab);
2068:TP2824/TP2802.c ****                         }
2069:TP2824/TP2802.c **** 
2070:TP2824/TP2802.c **** 
2071:TP2824/TP2802.c ****                         if (i == 2)
2072:TP2824/TP2802.c ****                         {
2073:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfb) ;
2074:TP2824/TP2802.c ****                             tmpab = (tmpab & 0xF0) | 0x0A ;
2075:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfb, tmpab);
2076:TP2824/TP2802.c ****                         }
2077:TP2824/TP2802.c ****                         else if (i == 3)
2078:TP2824/TP2802.c ****                         {
2079:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfb) ;
2080:TP2824/TP2802.c ****                             tmpab = (tmpab & 0x0F) | 0xA0 ;
2081:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfb, tmpab);
2082:TP2824/TP2802.c ****                         }
2083:TP2824/TP2802.c **** 
2084:TP2824/TP2802.c ****                     }
2085:TP2824/TP2802.c ****                     else
2086:TP2824/TP2802.c ****                     {
2087:TP2824/TP2802.c ****                         tmp=tp28xx_byte_read(0x35);
2088:TP2824/TP2802.c ****                         tmp &= 0xbf;
2089:TP2824/TP2802.c ****                         tp28xx_byte_write(0x35, tmp);
2090:TP2824/TP2802.c **** 
2091:TP2824/TP2802.c **** 
2092:TP2824/TP2802.c ****                         if (i == 0)
2093:TP2824/TP2802.c ****                         {
2094:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfa) ;
2095:TP2824/TP2802.c ****                             tmpab = (tmpab & 0xF0) | 0x08 ;
2096:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfa, tmpab);
2097:TP2824/TP2802.c ****                         }
2098:TP2824/TP2802.c ****                         else if (i == 1)
2099:TP2824/TP2802.c ****                         {
2100:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfa) ;
2101:TP2824/TP2802.c ****                             tmpab = (tmpab & 0x0F) | 0x80 ;
2102:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfa, tmpab);
2103:TP2824/TP2802.c ****                         }
2104:TP2824/TP2802.c **** 
2105:TP2824/TP2802.c **** 
2106:TP2824/TP2802.c ****                         if (i == 2)
ARM GAS  /tmp/ccFyOsmB.s 			page 76


2107:TP2824/TP2802.c ****                         {
2108:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfb) ;
2109:TP2824/TP2802.c ****                             tmpab = (tmpab & 0xF0) | 0x08 ;
2110:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfb, tmpab);
2111:TP2824/TP2802.c ****                         }
2112:TP2824/TP2802.c ****                         else if (i == 3)
2113:TP2824/TP2802.c ****                         {
2114:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfb) ;
2115:TP2824/TP2802.c ****                             tmpab = (tmpab & 0x0F) | 0x80 ;
2116:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfb, tmpab);
2117:TP2824/TP2802.c ****                         }
2118:TP2824/TP2802.c ****                     }
2119:TP2824/TP2802.c ****                 }
2120:TP2824/TP2802.c **** #endif
2121:TP2824/TP2802.c ****                 if( CurRes != ManVidResRx)
2122:TP2824/TP2802.c ****                 {
2123:TP2824/TP2802.c ****                     CurRes = ManVidResRx;
2124:TP2824/TP2802.c ****                     //CreateMDIN340VideoInstance();  //chunyu
2125:TP2824/TP2802.c ****                     printf("ManVidResRx=0x%02x\r\n",ManVidResRx ) ;
2126:TP2824/TP2802.c **** 
2127:TP2824/TP2802.c ****                 }
2128:TP2824/TP2802.c ****             }
2129:TP2824/TP2802.c ****             else if(1 == count[i])
2130:TP2824/TP2802.c ****             {
2131:TP2824/TP2802.c ****                 if( chip > TP2823 )
2132:TP2824/TP2802.c ****                 {
2133:TP2824/TP2802.c ****                     tmp = tp28xx_byte_read(0x01);
2134:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
2135:TP2824/TP2802.c ****                     if(mode[i] == NTSC || mode[i] == PAL)
2136:TP2824/TP2802.c ****                              printf("CVBS  mode:%d\r\n", (tWord)mode[i]);
2137:TP2824/TP2802.c **** //                 if( 0x60 == (0x64 & tmp))
2138:TP2824/TP2802.c ****                     else if((0x60 == (0x64 & tmp)) &&
2139:TP2824/TP2802.c ****             			   (mode[i] != R720P30 && mode[i] != R720P25 && mode[i] != R720P30V2 && mode[i] != R
2140:TP2824/TP2802.c ****                     {
2141:TP2824/TP2802.c ****                         //if(Set_HDA(mode[i])) printf("turn to A ch%02x\r\n", (tWord)i);
2142:TP2824/TP2802.c ****                         if(Set_HDC(i))
2143:TP2824/TP2802.c ****                         {
2144:TP2824/TP2802.c ****                             std[i] = HDC;
2145:TP2824/TP2802.c ****                             printf("turn to C ch%02x\r\n", (tWord)i);
2146:TP2824/TP2802.c ****                         }
2147:TP2824/TP2802.c ****                     }
2148:TP2824/TP2802.c ****                 }
2149:TP2824/TP2802.c ****             }
2150:TP2824/TP2802.c ****             else if(2 == count[i])
2151:TP2824/TP2802.c ****             {
2152:TP2824/TP2802.c ****                 if( chip > TP2823 )
2153:TP2824/TP2802.c ****                 {
2154:TP2824/TP2802.c ****                     tmp = tp28xx_byte_read(0x01);
2155:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
2156:TP2824/TP2802.c **** 			if(mode[i] == NTSC || mode[i] == PAL)
2157:TP2824/TP2802.c ****                              printf("CVBS  mode:%d\r\n", (tWord)mode[i]);
2158:TP2824/TP2802.c **** //                 if( 0x10 != (0x11 & tmp) && HDC == std[i])
2159:TP2824/TP2802.c **** 		      else if((0x10 != (0x11 & tmp) && HDC == std[i]) ||
2160:TP2824/TP2802.c **** 		                 (0x00 == (0x04 & tmp) && 
2161:TP2824/TP2802.c **** 		                 (mode[i] == R720P30 || mode[i] == R720P25 || mode[i] == R720P30V2 || mode[i] == 
2162:TP2824/TP2802.c ****                     {
2163:TP2824/TP2802.c ****                         if(Set_HDA(i))
ARM GAS  /tmp/ccFyOsmB.s 			page 77


2164:TP2824/TP2802.c ****                         {
2165:TP2824/TP2802.c ****                             std[i] = HDA;
2166:TP2824/TP2802.c ****                             printf("turn to A ch%02x\r\n", (tWord)i);
2167:TP2824/TP2802.c ****                         }
2168:TP2824/TP2802.c ****                     }
2169:TP2824/TP2802.c **** 
2170:TP2824/TP2802.c ****                 }
2171:TP2824/TP2802.c **** 
2172:TP2824/TP2802.c ****             }
2173:TP2824/TP2802.c ****             else if(3 == count[i])
2174:TP2824/TP2802.c ****             {
2175:TP2824/TP2802.c ****                 if( chip > TP2823 )
2176:TP2824/TP2802.c ****                 {
2177:TP2824/TP2802.c ****                     tmp = tp28xx_byte_read(0x01);
2178:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
2179:TP2824/TP2802.c **** 
2180:TP2824/TP2802.c ****                     if((mode[i] == R1080P30 || mode[i] == R1080P25)&& 0x00 == (0x04 & tmp))
2181:TP2824/TP2802.c ****                         printf("AHD 1080P30/P25  mode:%d\r\n", (tWord)mode[i]);
2182:TP2824/TP2802.c **** 		      else if((mode[i] == R1080P30 || mode[i] == R1080P25) && 0x04 == (0x04 & tmp) && std[i] == T
2183:TP2824/TP2802.c ****                         printf("TVI 1080P30/P25   mode:%d\r\n", (tWord)mode[i]);
2184:TP2824/TP2802.c **** 		      else if((mode[i] == R720P30 || mode[i] == R720P25 || mode[i] == R720P30V2 || mode[i] == R72
2185:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
2186:TP2824/TP2802.c ****                         printf("AHD 720P30/P25/P60/P50   mode:%d\r\n", (tWord)mode[i]);
2187:TP2824/TP2802.c **** 		      else if(mode[i] == NTSC || mode[i] == PAL)
2188:TP2824/TP2802.c ****                              printf("CVBS    mode:%d\r\n", (tWord)mode[i]);
2189:TP2824/TP2802.c **** //		      if( 0x00 != (0x01 & tmp))
2190:TP2824/TP2802.c **** 		      else if( 0x00 != (0x01 & tmp)) 
2191:TP2824/TP2802.c ****                     {
2192:TP2824/TP2802.c ****                       //  Set_VidRes(mode[i]); //chunyu
2193:TP2824/TP2802.c ****                         Set_VidRes(i); //is it right? ryan@20200904
2194:TP2824/TP2802.c ****                         printf("back to T ch%02x\r\n", (tWord)i); //chunyu
2195:TP2824/TP2802.c ****                     }
2196:TP2824/TP2802.c ****                 }
2197:TP2824/TP2802.c ****             }
2198:TP2824/TP2802.c ****             else if(count[i] < 7) //skip first 3 second
2199:TP2824/TP2802.c ****             {
2200:TP2824/TP2802.c ****                 egain[i][3] = egain[i][2];
2201:TP2824/TP2802.c ****                 egain[i][2] = egain[i][1];
2202:TP2824/TP2802.c ****                 egain[i][1] = egain[i][0];
2203:TP2824/TP2802.c **** 
2204:TP2824/TP2802.c ****                 gain = ReadGain();
2205:TP2824/TP2802.c ****                 egain[i][0] = gain;
2206:TP2824/TP2802.c ****             }
2207:TP2824/TP2802.c ****             else if( count[i] < EQ_COUNT)
2208:TP2824/TP2802.c ****             {
2209:TP2824/TP2802.c ****                 egain[i][3] = egain[i][2];
2210:TP2824/TP2802.c ****                 egain[i][2] = egain[i][1];
2211:TP2824/TP2802.c ****                 egain[i][1] = egain[i][0];
2212:TP2824/TP2802.c **** 
2213:TP2824/TP2802.c ****                 gain = ReadGain();
2214:TP2824/TP2802.c ****                 egain[i][0] = gain;
2215:TP2824/TP2802.c **** 
2216:TP2824/TP2802.c ****                 if(abs(egain[i][3] - egain[i][0])< EQ_DIFF && abs(egain[i][2] - egain[i][0])< EQ_DI
2217:TP2824/TP2802.c ****                 {
2218:TP2824/TP2802.c ****                     count[i] = EQ_COUNT-1;
2219:TP2824/TP2802.c ****                 }
2220:TP2824/TP2802.c ****             }
ARM GAS  /tmp/ccFyOsmB.s 			page 78


2221:TP2824/TP2802.c ****             else if(EQ_COUNT == count[i])
2222:TP2824/TP2802.c ****             {
2223:TP2824/TP2802.c ****                 gain = ReadGain();
2224:TP2824/TP2802.c ****                 printf("Egain=0x%02x ch%02x,std=%d,mode=0x%02X\r\n", (tWord)gain, (tWord)i, (tWord)
2225:TP2824/TP2802.c **** 
2226:TP2824/TP2802.c ****                 if ((mode[i] == R1080P30 ) || (mode[i] == R1080P25 ))
2227:TP2824/TP2802.c ****                 {
2228:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1920X1080P ;
2229:TP2824/TP2802.c ****                 }
2230:TP2824/TP2802.c ****                 else if ((mode[i] == R720P50 ) || (mode[i] == R720P60 ))
2231:TP2824/TP2802.c ****                 {
2232:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
2233:TP2824/TP2802.c ****                 }
2234:TP2824/TP2802.c ****                 else if ((mode[i] == R720P25 ) || (mode[i] == R720P30 ))
2235:TP2824/TP2802.c ****                 {
2236:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
2237:TP2824/TP2802.c ****                 }
2238:TP2824/TP2802.c ****                 else if ((mode[i] == R720P30V2 ) || (mode[i] == R720P25V2 ))
2239:TP2824/TP2802.c ****                 {
2240:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
2241:TP2824/TP2802.c ****                 }
2242:TP2824/TP2802.c ****                 else if (mode[i] == NTSC )
2243:TP2824/TP2802.c ****                 {
2244:TP2824/TP2802.c ****                     newInRes[i] = _OSD_720X480I60 ;
2245:TP2824/TP2802.c ****                 }
2246:TP2824/TP2802.c ****                 else if (mode[i] == PAL )
2247:TP2824/TP2802.c ****                 {
2248:TP2824/TP2802.c ****                     newInRes[i] = _OSD_720X576I50 ;
2249:TP2824/TP2802.c ****                 }
2250:TP2824/TP2802.c ****                 else
2251:TP2824/TP2802.c ****                 {
2252:TP2824/TP2802.c ****                     newInRes[i] = _OSD_No_Signal ;
2253:TP2824/TP2802.c ****                 }
2254:TP2824/TP2802.c **** 
2255:TP2824/TP2802.c **** 				TP_InputMode=newInRes[i] ;
2256:TP2824/TP2802.c **** 				   if(SelectInputMode==1)
2257:TP2824/TP2802.c **** 					   {
2258:TP2824/TP2802.c **** 					   MCUTimerActiveTimerEvent(SEC(1), _SYSTEM_TIMER_EVENT_VIDEO_RESET);
2259:TP2824/TP2802.c **** 				   //MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);
2260:TP2824/TP2802.c **** 					   }
2261:TP2824/TP2802.c **** 
2262:TP2824/TP2802.c ****                 if (newInRes[i] != gbVXIS_InputMode[i] )
2263:TP2824/TP2802.c ****                 {
2264:TP2824/TP2802.c ****                  //   VS4210_SetInModeOutMode(i,newInRes[i] ,gbVXIS_OuputModeflg )  ;
2265:TP2824/TP2802.c **** 
2266:TP2824/TP2802.c **** /*
2267:TP2824/TP2802.c **** 		//save tp2824 data
2268:TP2824/TP2802.c **** 			if( ReadEEP(EEP_TP2824_STD0+(i*3)+2)==0)
2269:TP2824/TP2802.c **** 			{
2270:TP2824/TP2802.c **** 			 WriteEEP(EEP_TP2824_STD0+(i*3),std[i]);
2271:TP2824/TP2802.c **** 			 WriteEEP(EEP_TP2824_STD0+(i*3)+1,mode[i]);		
2272:TP2824/TP2802.c **** 		    	  WriteEEP(EEP_TP2824_STD0+(i*3)+2,1);
2273:TP2824/TP2802.c **** 			  VideoSave[i]=1;
2274:TP2824/TP2802.c **** 
2275:TP2824/TP2802.c **** 			 printf("\r\n(WriteModeDataToEEPROM ch=%02x)",(WORD)i) ;
2276:TP2824/TP2802.c **** 			}
2277:TP2824/TP2802.c **** */
ARM GAS  /tmp/ccFyOsmB.s 			page 79


2278:TP2824/TP2802.c **** 			
2279:TP2824/TP2802.c ****         printf("VS4210_SetInModeOutMode(),i=%d,newInRes=%d,OuputModeflg=%d\r\n",(int)i ,(int)newInR
2280:TP2824/TP2802.c **** 
2281:TP2824/TP2802.c **** //                    tp28xx_byte_write(0xF6,0x00);
2282:TP2824/TP2802.c **** //
2283:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x40);
2284:TP2824/TP2802.c **** //                    printf("0x40=0x%02x\r\n",tmpval ) ;
2285:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x4d);
2286:TP2824/TP2802.c **** //                    printf("0x4D=0x%02x\r\n",tmpval ) ;
2287:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x4E);
2288:TP2824/TP2802.c **** //                    printf("0x4E=0x%02x\r\n",tmpval ) ;
2289:TP2824/TP2802.c **** //
2290:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x50);
2291:TP2824/TP2802.c **** //                    printf("0x50=0x%02x\r\n",tmpval ) ;
2292:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x51);
2293:TP2824/TP2802.c **** //                    printf("0x51=0x%02x\r\n",tmpval ) ;
2294:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x52);
2295:TP2824/TP2802.c **** //                    printf("0x52=0x%02x\r\n",tmpval ) ;
2296:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x53);
2297:TP2824/TP2802.c **** //                    printf("0x53=0x%02x\r\n",tmpval ) ;
2298:TP2824/TP2802.c **** //
2299:TP2824/TP2802.c **** //
2300:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xF6);
2301:TP2824/TP2802.c **** //                    printf("0xF6=0x%02x\r\n",tmpval ) ;
2302:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xF7);
2303:TP2824/TP2802.c **** //                    printf("0xF7=0x%02x\r\n",tmpval ) ;
2304:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xF8);
2305:TP2824/TP2802.c **** //                    printf("0xF8=0x%02x\r\n",tmpval ) ;
2306:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xF9);
2307:TP2824/TP2802.c **** //                    printf("0xF9=0x%02x\r\n",tmpval ) ;
2308:TP2824/TP2802.c **** //
2309:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xFA);
2310:TP2824/TP2802.c **** //                    printf("0xFA=0x%02x\r\n",tmpval ) ;
2311:TP2824/TP2802.c **** //
2312:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xFB);
2313:TP2824/TP2802.c **** //                    printf("0xFB=0x%02x\r\n",tmpval ) ;
2314:TP2824/TP2802.c **** 
2315:TP2824/TP2802.c ****                 }
2316:TP2824/TP2802.c **** 
2317:TP2824/TP2802.c ****                 if( TVI != std[i] )
2318:TP2824/TP2802.c ****                 {
2319:TP2824/TP2802.c ****                     tp28xx_byte_write(0x07, 0x80|(gain>>2));  // manual mode
2320:TP2824/TP2802.c ****                     if (std[i]== HDA )
2321:TP2824/TP2802.c ****                     {
2322:TP2824/TP2802.c ****                         printf("AHD Mode\r\n");
2323:TP2824/TP2802.c ****                     }
2324:TP2824/TP2802.c ****                     else
2325:TP2824/TP2802.c ****                     {
2326:TP2824/TP2802.c ****                         printf("CVI Mode\r\n");
2327:TP2824/TP2802.c ****                     }
2328:TP2824/TP2802.c ****                 }
2329:TP2824/TP2802.c ****                 else //TVI
2330:TP2824/TP2802.c ****                 {
2331:TP2824/TP2802.c ****                     if( TP2833 == chip || TP2834 == chip)
2332:TP2824/TP2802.c ****                     {
2333:TP2824/TP2802.c ****                         if( mode[i] & FLAG_MEGA_MODE )
2334:TP2824/TP2802.c ****                         {
ARM GAS  /tmp/ccFyOsmB.s 			page 80


2335:TP2824/TP2802.c ****                             tp28xx_byte_write(0x07, 0x80|(gain/3));  // manual mode
2336:TP2824/TP2802.c ****                         }
2337:TP2824/TP2802.c ****                     }
2338:TP2824/TP2802.c **** 		      if(mode[i] == NTSC) //20200408 cvbs night no burst
2339:TP2824/TP2802.c **** 			  	printf("CVBS NTSC   mode\r\n");
2340:TP2824/TP2802.c **** 		      else if(mode[i] == PAL) //20200408 cvbs night no burst
2341:TP2824/TP2802.c **** 			  	printf("CVBS PAL   mode\r\n");
2342:TP2824/TP2802.c **** 		      else
2343:TP2824/TP2802.c ****                     printf("LINE=%d,TVI Mode\r\n",__LINE__ );
2344:TP2824/TP2802.c ****                     //gRxLoopFlg = 0 ;
2345:TP2824/TP2802.c ****                 }
2346:TP2824/TP2802.c ****             }
2347:TP2824/TP2802.c ****             else if(EQ_COUNT+1 == count[i])
2348:TP2824/TP2802.c ****             {
2349:TP2824/TP2802.c ****                 if( TVI != std[i] )
2350:TP2824/TP2802.c ****                 {
2351:TP2824/TP2802.c ****                     ManualAGC(i);
2352:TP2824/TP2802.c ****                     SetCGain(0x0c);
2353:TP2824/TP2802.c ****                 }
2354:TP2824/TP2802.c ****                 else //TVI
2355:TP2824/TP2802.c ****                 {
2356:TP2824/TP2802.c ****                     if( TP2833 == chip || TP2834 == chip)
2357:TP2824/TP2802.c ****                     {
2358:TP2824/TP2802.c ****                         if( mode[i] & FLAG_MEGA_MODE )
2359:TP2824/TP2802.c ****                         {
2360:TP2824/TP2802.c ****                             SetCGain(0x16);
2361:TP2824/TP2802.c ****                         }
2362:TP2824/TP2802.c ****                     }
2363:TP2824/TP2802.c ****                 }
2364:TP2824/TP2802.c ****             }
2365:TP2824/TP2802.c **** 	     else if(EQ_COUNT+2 == count[i])//cocrx
2366:TP2824/TP2802.c ****             {	
2367:TP2824/TP2802.c ****             		if(state[i] == VIDEO_LOCKED)
2368:TP2824/TP2802.c ****             		{
2369:TP2824/TP2802.c **** 	            		tcByte *ptr_TP2824C;
2370:TP2824/TP2802.c **** 				if( TVI == std[i] )
2371:TP2824/TP2802.c **** 				{
2372:TP2824/TP2802.c **** 					if(mode[i]==NTSC || mode[i]==PAL)
2373:TP2824/TP2802.c **** 					{
2374:TP2824/TP2802.c **** 						ptr_TP2824C=TP2824C_CVBS_PTZ_DataSet;
2375:TP2824/TP2802.c **** 					}
2376:TP2824/TP2802.c **** 					else
2377:TP2824/TP2802.c **** 					{
2378:TP2824/TP2802.c **** 						ptr_TP2824C=TP2824C_TVI_FHD_PTZ_DataSet;
2379:TP2824/TP2802.c **** 					}
2380:TP2824/TP2802.c **** 					
2381:TP2824/TP2802.c **** 					I2CDeviceSet1( ptr_TP2824C );
2382:TP2824/TP2802.c **** 					
2383:TP2824/TP2802.c **** 					if(mode[i] == R1080P30 || mode[i] == R1080P25)
2384:TP2824/TP2802.c **** 					{
2385:TP2824/TP2802.c **** 						tp28xx_byte_write(0xc6, 0x19);
2386:TP2824/TP2802.c **** 					}
2387:TP2824/TP2802.c **** 					
2388:TP2824/TP2802.c **** 					tp28xx_byte_write(0x40, i);
2389:TP2824/TP2802.c **** 					
2390:TP2824/TP2802.c **** 					tp28xx_byte_write(0xbe, 0x80);
2391:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB6);
ARM GAS  /tmp/ccFyOsmB.s 			page 81


2392:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB5);
2393:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB4);
2394:TP2824/TP2802.c **** 
2395:TP2824/TP2802.c **** 				
2396:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x00);
2397:TP2824/TP2802.c **** 					delay(1);//5ms
2398:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x83);
2399:TP2824/TP2802.c **** 					
2400:TP2824/TP2802.c **** 					if(mode[i]==R1080P30 || mode[i]==R1080P25)
2401:TP2824/TP2802.c **** 					{
2402:TP2824/TP2802.c **** 						PtzTxChNum=i;
2403:TP2824/TP2802.c **** 						printf("EQdet %d\r\n",  PtzTxChNum);
2404:TP2824/TP2802.c **** 					}
2405:TP2824/TP2802.c **** 					
2406:TP2824/TP2802.c **** 				}
2407:TP2824/TP2802.c **** 
2408:TP2824/TP2802.c **** 				if( HDA == std[i] )
2409:TP2824/TP2802.c **** 				{
2410:TP2824/TP2802.c **** 					#if 1
2411:TP2824/TP2802.c **** 						#if 1
2412:TP2824/TP2802.c **** 						Init_COC_PTZOUT1();
2413:TP2824/TP2802.c **** 						//#else
2414:TP2824/TP2802.c **** 						ptr_TP2824C=TP2824C_AHD_FHD_PTZ_DataSet;
2415:TP2824/TP2802.c **** 						I2CDeviceSet1( ptr_TP2824C );
2416:TP2824/TP2802.c **** 					
2417:TP2824/TP2802.c **** 						tp28xx_byte_write(0x40, i);
2418:TP2824/TP2802.c **** 							tp28xx_byte_write(0x40,0x04);
2419:TP2824/TP2802.c **** 						tp28xx_byte_write(0xbe, 0x80);
2420:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB6);
2421:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB5);
2422:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB4);
2423:TP2824/TP2802.c **** 
2424:TP2824/TP2802.c **** 					
2425:TP2824/TP2802.c **** 						tp28xx_byte_write(0xa7, 0x24);
2426:TP2824/TP2802.c **** 						delay(1);//5ms
2427:TP2824/TP2802.c **** 						tp28xx_byte_write(0xa7, 0xA7);
2428:TP2824/TP2802.c **** 						#endif
2429:TP2824/TP2802.c **** 				
2430:TP2824/TP2802.c **** 					#else
2431:TP2824/TP2802.c **** 
2432:TP2824/TP2802.c **** 					TP2824_PTZ_init();
2433:TP2824/TP2802.c **** 					 TP2824C_RX_init(0, 0);
2434:TP2824/TP2802.c **** 					//TP2824_PTZ_mode(0,0);
2435:TP2824/TP2802.c **** 					TP2824C_PTZ_mode(0,0,0);
2436:TP2824/TP2802.c **** 					
2437:TP2824/TP2802.c **** 					
2438:TP2824/TP2802.c **** 					#endif
2439:TP2824/TP2802.c **** 					
2440:TP2824/TP2802.c **** 					printf("\r\nAHD COC Ready CH=%d\r\n",  PtzTxChNum);
2441:TP2824/TP2802.c **** 				}
2442:TP2824/TP2802.c **** 
2443:TP2824/TP2802.c **** 				if( HDC == std[i] )
2444:TP2824/TP2802.c **** 				{
2445:TP2824/TP2802.c **** 					ptr_TP2824C=TP2824C_CVIHD_PTZ_DataSet;
2446:TP2824/TP2802.c **** 					I2CDeviceSet1( ptr_TP2824C );
2447:TP2824/TP2802.c **** 				
2448:TP2824/TP2802.c **** 					tp28xx_byte_write(0x40, i);
ARM GAS  /tmp/ccFyOsmB.s 			page 82


2449:TP2824/TP2802.c **** 					tp28xx_byte_write(0xbe, 0x80);
2450:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB6);
2451:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB5);
2452:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB4);
2453:TP2824/TP2802.c **** 
2454:TP2824/TP2802.c **** 				
2455:TP2824/TP2802.c **** 					tp28xx_byte_read(0xA4);
2456:TP2824/TP2802.c **** 					tp28xx_byte_read(0xA2);
2457:TP2824/TP2802.c **** 					tp28xx_byte_read(0xA3);
2458:TP2824/TP2802.c **** 					
2459:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x00);
2460:TP2824/TP2802.c **** 					delay(1);//5ms
2461:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x83);
2462:TP2824/TP2802.c **** 
2463:TP2824/TP2802.c **** 
2464:TP2824/TP2802.c **** 					
2465:TP2824/TP2802.c **** 				}
2466:TP2824/TP2802.c **** 
2467:TP2824/TP2802.c **** 			#if 0
2468:TP2824/TP2802.c **** 		if((std[i]==TVI)&&(mode[i]!=NTSC) &&( mode[i]!=PAL)&& (state[i]==VIDEO_LOCKED))
2469:TP2824/TP2802.c **** 			   {
2470:TP2824/TP2802.c **** 
2471:TP2824/TP2802.c **** 			/*
2472:TP2824/TP2802.c **** 				   
2473:TP2824/TP2802.c **** 		 	SetCOCCom(_COCOSD_BOX_Sel,i);  
2474:TP2824/TP2802.c **** 	 	 	SetCOCCom(_COCOSD_BOXONLINE,0); 
2475:TP2824/TP2802.c **** 			 Get_2824cIrq();
2476:TP2824/TP2802.c **** 
2477:TP2824/TP2802.c **** 			 msleep(50);
2478:TP2824/TP2802.c **** 			 
2479:TP2824/TP2802.c **** 			 SetCOCCom(_COCOSD_BOX_Channel_Sel,5); 
2480:TP2824/TP2802.c **** 			// COCSelectModeType=5;
2481:TP2824/TP2802.c **** 			 Get_2824cIrq();
2482:TP2824/TP2802.c **** 			msleep(50);
2483:TP2824/TP2802.c **** */		
2484:TP2824/TP2802.c **** 
2485:TP2824/TP2802.c **** 			 BOX_ISSUE=0;
2486:TP2824/TP2802.c **** 
2487:TP2824/TP2802.c **** 			 MCUTimerCancelTimerEvent( _SYSTEM_TIMER_EVENT_TVI_BOX_Set);		 
2488:TP2824/TP2802.c **** 			MCUTimerActiveTimerEvent(SEC(0.5), _SYSTEM_TIMER_EVENT_TVI_BOX_Set);
2489:TP2824/TP2802.c **** 			
2490:TP2824/TP2802.c **** 		
2491:TP2824/TP2802.c **** 			   }
2492:TP2824/TP2802.c **** 			#endif
2493:TP2824/TP2802.c ****      			}
2494:TP2824/TP2802.c ****             }	
2495:TP2824/TP2802.c ****         }
2496:TP2824/TP2802.c ****     }
2497:TP2824/TP2802.c **** }
2498:TP2824/TP2802.c **** #if 0
2499:TP2824/TP2802.c **** void TVI_BOX_Set(void)
2500:TP2824/TP2802.c **** {
2501:TP2824/TP2802.c **** BYTE i;
2502:TP2824/TP2802.c **** 
2503:TP2824/TP2802.c **** 	//TriggerHandler(CheckTrigger());
2504:TP2824/TP2802.c **** 
2505:TP2824/TP2802.c **** 	for(i=0;i<4;i++)
ARM GAS  /tmp/ccFyOsmB.s 			page 83


2506:TP2824/TP2802.c **** 	{
2507:TP2824/TP2802.c **** 			
2508:TP2824/TP2802.c **** 					if((std[i]==TVI)&&(mode[i]!=NTSC) &&( mode[i]!=PAL)&& (state[i] == VIDEO_LOCKED))
2509:TP2824/TP2802.c **** 					   {
2510:TP2824/TP2802.c **** 					  
2511:TP2824/TP2802.c **** 				 	SetCOCCom(_COCOSD_BOX_Sel,i);  
2512:TP2824/TP2802.c **** 			 	 	SetCOCCom(_COCOSD_BOXONLINE,0); 
2513:TP2824/TP2802.c **** 					 Get_2824cIrq();
2514:TP2824/TP2802.c **** 								 
2515:TP2824/TP2802.c **** 					 SetCOCCom(_COCOSD_BOX_Channel_Sel,5); 
2516:TP2824/TP2802.c **** 					 COCSelectModeType[SelectModeType]=5;
2517:TP2824/TP2802.c **** 					 Get_2824cIrq();		 
2518:TP2824/TP2802.c **** 					
2519:TP2824/TP2802.c **** 						}
2520:TP2824/TP2802.c **** 		
2521:TP2824/TP2802.c **** 	}
2522:TP2824/TP2802.c **** }
2523:TP2824/TP2802.c **** #endif
2524:TP2824/TP2802.c **** tByte Det_HLock()
2525:TP2824/TP2802.c **** {
 1953              		.loc 1 2525 0
 1954              		.cfi_startproc
 1955              		@ args = 0, pretend = 0, frame = 0
 1956              		@ frame_needed = 0, uses_anonymous_args = 0
 1957 0000 08B5     		push	{r3, lr}
 1958              	.LCFI16:
 1959              		.cfi_def_cfa_offset 8
 1960              		.cfi_offset 3, -8
 1961              		.cfi_offset 14, -4
2526:TP2824/TP2802.c ****     tByte Reg01;
2527:TP2824/TP2802.c ****     tByte HLOCK;
2528:TP2824/TP2802.c **** 
2529:TP2824/TP2802.c ****     Reg01 = tp28xx_byte_read(0x01);
 1962              		.loc 1 2529 0
 1963 0002 0120     		movs	r0, #1
 1964 0004 FFF7FEFF 		bl	tp28xx_byte_read
 1965              	.LVL287:
2530:TP2824/TP2802.c ****     HLOCK = (Reg01>>5)&0x01;
2531:TP2824/TP2802.c **** 
2532:TP2824/TP2802.c ****     if(HLOCK==1)
 1966              		.loc 1 2532 0
 1967 0008 10F0200F 		tst	r0, #32
 1968 000c 01D1     		bne	.L192
2533:TP2824/TP2802.c ****         return TRUE;
2534:TP2824/TP2802.c ****     else
2535:TP2824/TP2802.c ****         return FALSE;
 1969              		.loc 1 2535 0
 1970 000e 0020     		movs	r0, #0
 1971              	.LVL288:
 1972              	.L189:
2536:TP2824/TP2802.c **** }
 1973              		.loc 1 2536 0
 1974 0010 08BD     		pop	{r3, pc}
 1975              	.LVL289:
 1976              	.L192:
2533:TP2824/TP2802.c ****         return TRUE;
 1977              		.loc 1 2533 0
ARM GAS  /tmp/ccFyOsmB.s 			page 84


 1978 0012 0120     		movs	r0, #1
 1979              	.LVL290:
 1980 0014 FCE7     		b	.L189
 1981              		.cfi_endproc
 1982              	.LFE86:
 1984              		.section	.text.Set_ResWithAutoDet,"ax",%progbits
 1985              		.align	1
 1986              		.global	Set_ResWithAutoDet
 1987              		.syntax unified
 1988              		.thumb
 1989              		.thumb_func
 1990              		.fpu softvfp
 1992              	Set_ResWithAutoDet:
 1993              	.LFB87:
2537:TP2824/TP2802.c **** 
2538:TP2824/TP2802.c **** tByte Set_ResWithAutoDet(tByte ch)
2539:TP2824/TP2802.c **** {
 1994              		.loc 1 2539 0
 1995              		.cfi_startproc
 1996              		@ args = 0, pretend = 0, frame = 0
 1997              		@ frame_needed = 0, uses_anonymous_args = 0
 1998              	.LVL291:
 1999 0000 38B5     		push	{r3, r4, r5, lr}
 2000              	.LCFI17:
 2001              		.cfi_def_cfa_offset 16
 2002              		.cfi_offset 3, -16
 2003              		.cfi_offset 4, -12
 2004              		.cfi_offset 5, -8
 2005              		.cfi_offset 14, -4
 2006 0002 0546     		mov	r5, r0
 2007              	.LVL292:
2540:TP2824/TP2802.c ****     tByte VidRes = R1080P30 ;
2541:TP2824/TP2802.c ****     tByte cnt=5;
2542:TP2824/TP2802.c ****     SetRegPage(ch);
 2008              		.loc 1 2542 0
 2009 0004 FFF7FEFF 		bl	SetRegPage
 2010              	.LVL293:
2541:TP2824/TP2802.c ****     SetRegPage(ch);
 2011              		.loc 1 2541 0
 2012 0008 0522     		movs	r2, #5
2543:TP2824/TP2802.c ****     //	printf("\r\nReg40=%02x, Reg01=%02x",(tWord)tp28xx_byte_read(TVII2CAddress,0x40),(tWord)tp28x
2544:TP2824/TP2802.c ****     while(cnt--)
 2013              		.loc 1 2544 0
 2014 000a 00E0     		b	.L194
 2015              	.LVL294:
 2016              	.L195:
2539:TP2824/TP2802.c ****     tByte VidRes = R1080P30 ;
 2017              		.loc 1 2539 0
 2018 000c 2246     		mov	r2, r4
 2019              	.LVL295:
 2020              	.L194:
 2021              		.loc 1 2544 0
 2022 000e 531E     		subs	r3, r2, #1
 2023 0010 DCB2     		uxtb	r4, r3
 2024              	.LVL296:
 2025 0012 8AB1     		cbz	r2, .L200
2545:TP2824/TP2802.c ****     {
ARM GAS  /tmp/ccFyOsmB.s 			page 85


2546:TP2824/TP2802.c ****         if(!Det_VideoLoss(ch))
 2026              		.loc 1 2546 0
 2027 0014 2846     		mov	r0, r5
 2028 0016 FFF7FEFF 		bl	Det_VideoLoss
 2029              	.LVL297:
 2030 001a 0028     		cmp	r0, #0
 2031 001c F6D1     		bne	.L195
2547:TP2824/TP2802.c ****         {
2548:TP2824/TP2802.c ****             //for(VidRes=R720P60; VidRes<=R720P25; VidRes++)
2549:TP2824/TP2802.c **** 			//{
2550:TP2824/TP2802.c ****                 Set_VidRes(ch);
 2032              		.loc 1 2550 0
 2033 001e 2846     		mov	r0, r5
 2034 0020 FFF7FEFF 		bl	Set_VidRes
 2035              	.LVL298:
2551:TP2824/TP2802.c ****                 //printf("\r\nVidRes=%02x, Reg01=%02x, Reg03=%02x",(tWord)VidRes,(tWord)tp28xx_byte
2552:TP2824/TP2802.c ****                 if((Det_HLock()== TRUE)&&(Det_VidRes()==VidRes))
 2036              		.loc 1 2552 0
 2037 0024 FFF7FEFF 		bl	Det_HLock
 2038              	.LVL299:
 2039 0028 0128     		cmp	r0, #1
 2040 002a EFD1     		bne	.L195
 2041              		.loc 1 2552 0 is_stmt 0 discriminator 1
 2042 002c FFF7FEFF 		bl	Det_VidRes
 2043              	.LVL300:
 2044 0030 0228     		cmp	r0, #2
 2045 0032 EBD1     		bne	.L195
2553:TP2824/TP2802.c ****                     return TRUE;
 2046              		.loc 1 2553 0 is_stmt 1
 2047 0034 0120     		movs	r0, #1
 2048 0036 03E0     		b	.L196
 2049              	.L200:
2554:TP2824/TP2802.c **** 			//}
2555:TP2824/TP2802.c ****         }
2556:TP2824/TP2802.c ****     }
2557:TP2824/TP2802.c ****     printf("H/V is not locked\r\n");
 2050              		.loc 1 2557 0
 2051 0038 0248     		ldr	r0, .L201
 2052 003a FFF7FEFF 		bl	puts
 2053              	.LVL301:
2558:TP2824/TP2802.c ****     return FALSE;
 2054              		.loc 1 2558 0
 2055 003e 0020     		movs	r0, #0
 2056              	.L196:
2559:TP2824/TP2802.c **** }
 2057              		.loc 1 2559 0
 2058 0040 38BD     		pop	{r3, r4, r5, pc}
 2059              	.LVL302:
 2060              	.L202:
 2061 0042 00BF     		.align	2
 2062              	.L201:
 2063 0044 00000000 		.word	.LC25
 2064              		.cfi_endproc
 2065              	.LFE87:
 2067              		.section	.text.Scan_Channels,"ax",%progbits
 2068              		.align	1
 2069              		.global	Scan_Channels
ARM GAS  /tmp/ccFyOsmB.s 			page 86


 2070              		.syntax unified
 2071              		.thumb
 2072              		.thumb_func
 2073              		.fpu softvfp
 2075              	Scan_Channels:
 2076              	.LFB88:
2560:TP2824/TP2802.c **** 
2561:TP2824/TP2802.c **** 
2562:TP2824/TP2802.c **** tByte Scan_Channels()
2563:TP2824/TP2802.c **** {
 2077              		.loc 1 2563 0
 2078              		.cfi_startproc
 2079              		@ args = 0, pretend = 0, frame = 0
 2080              		@ frame_needed = 0, uses_anonymous_args = 0
 2081 0000 70B5     		push	{r4, r5, r6, lr}
 2082              	.LCFI18:
 2083              		.cfi_def_cfa_offset 16
 2084              		.cfi_offset 4, -16
 2085              		.cfi_offset 5, -12
 2086              		.cfi_offset 6, -8
 2087              		.cfi_offset 14, -4
 2088              	.LVL303:
2564:TP2824/TP2802.c ****     tByte ch;
2565:TP2824/TP2802.c ****     tByte Det_ch=0;
2566:TP2824/TP2802.c ****     tByte Sel_ch=0xff;
 2089              		.loc 1 2566 0
 2090 0002 FF26     		movs	r6, #255
2565:TP2824/TP2802.c ****     tByte Sel_ch=0xff;
 2091              		.loc 1 2565 0
 2092 0004 0025     		movs	r5, #0
2567:TP2824/TP2802.c **** 
2568:TP2824/TP2802.c ****     for(ch = CH1; ch<=CH4; ch++)
 2093              		.loc 1 2568 0
 2094 0006 2C46     		mov	r4, r5
 2095 0008 01E0     		b	.L204
 2096              	.LVL304:
 2097              	.L205:
 2098              		.loc 1 2568 0 is_stmt 0 discriminator 2
 2099 000a 0134     		adds	r4, r4, #1
 2100              	.LVL305:
 2101 000c E4B2     		uxtb	r4, r4
 2102              	.LVL306:
 2103              	.L204:
 2104              		.loc 1 2568 0 discriminator 1
 2105 000e 032C     		cmp	r4, #3
 2106 0010 09D8     		bhi	.L209
2569:TP2824/TP2802.c ****     {
2570:TP2824/TP2802.c ****         if(Set_ResWithAutoDet(ch)&&!Det_ch)
 2107              		.loc 1 2570 0 is_stmt 1
 2108 0012 2046     		mov	r0, r4
 2109 0014 FFF7FEFF 		bl	Set_ResWithAutoDet
 2110              	.LVL307:
 2111 0018 0028     		cmp	r0, #0
 2112 001a F6D0     		beq	.L205
 2113              		.loc 1 2570 0 is_stmt 0 discriminator 1
 2114 001c 002D     		cmp	r5, #0
 2115 001e F4D1     		bne	.L205
ARM GAS  /tmp/ccFyOsmB.s 			page 87


2571:TP2824/TP2802.c ****         {
2572:TP2824/TP2802.c ****             //Sel_VD_Out(ch);
2573:TP2824/TP2802.c ****             Sel_ch = ch;
 2116              		.loc 1 2573 0 is_stmt 1
 2117 0020 2646     		mov	r6, r4
 2118              	.LVL308:
2574:TP2824/TP2802.c ****             Det_ch = 1;
 2119              		.loc 1 2574 0
 2120 0022 0125     		movs	r5, #1
 2121              	.LVL309:
 2122 0024 F1E7     		b	.L205
 2123              	.LVL310:
 2124              	.L209:
2575:TP2824/TP2802.c ****         }
2576:TP2824/TP2802.c ****     }
2577:TP2824/TP2802.c **** 
2578:TP2824/TP2802.c ****     return Sel_ch;
2579:TP2824/TP2802.c **** }
 2125              		.loc 1 2579 0
 2126 0026 3046     		mov	r0, r6
 2127 0028 70BD     		pop	{r4, r5, r6, pc}
 2128              		.cfi_endproc
 2129              	.LFE88:
 2131              		.section	.text.Set_PLL_StartUp,"ax",%progbits
 2132              		.align	1
 2133              		.global	Set_PLL_StartUp
 2134              		.syntax unified
 2135              		.thumb
 2136              		.thumb_func
 2137              		.fpu softvfp
 2139              	Set_PLL_StartUp:
 2140              	.LFB89:
2580:TP2824/TP2802.c **** 
2581:TP2824/TP2802.c **** void Set_PLL_StartUp()
2582:TP2824/TP2802.c **** {
 2141              		.loc 1 2582 0
 2142              		.cfi_startproc
 2143              		@ args = 0, pretend = 0, frame = 0
 2144              		@ frame_needed = 0, uses_anonymous_args = 0
 2145 0000 10B5     		push	{r4, lr}
 2146              	.LCFI19:
 2147              		.cfi_def_cfa_offset 8
 2148              		.cfi_offset 4, -8
 2149              		.cfi_offset 14, -4
2583:TP2824/TP2802.c ****     tByte PLL_con;
2584:TP2824/TP2802.c ****     PLL_con = tp28xx_byte_read(0x44);
 2150              		.loc 1 2584 0
 2151 0002 4420     		movs	r0, #68
 2152 0004 FFF7FEFF 		bl	tp28xx_byte_read
 2153              	.LVL311:
 2154 0008 0446     		mov	r4, r0
 2155              	.LVL312:
2585:TP2824/TP2802.c ****     tp28xx_byte_write(0x44,(PLL_con|0x40));
 2156              		.loc 1 2585 0
 2157 000a 40F04001 		orr	r1, r0, #64
 2158 000e C9B2     		uxtb	r1, r1
 2159 0010 4420     		movs	r0, #68
ARM GAS  /tmp/ccFyOsmB.s 			page 88


 2160              	.LVL313:
 2161 0012 FFF7FEFF 		bl	tp28xx_byte_write
 2162              	.LVL314:
2586:TP2824/TP2802.c ****     tp28xx_byte_write(0x44,(PLL_con&0xbf));
 2163              		.loc 1 2586 0
 2164 0016 04F0BF01 		and	r1, r4, #191
 2165 001a 4420     		movs	r0, #68
 2166 001c FFF7FEFF 		bl	tp28xx_byte_write
 2167              	.LVL315:
2587:TP2824/TP2802.c **** 
2588:TP2824/TP2802.c **** }
 2168              		.loc 1 2588 0
 2169 0020 10BD     		pop	{r4, pc}
 2170              		.cfi_endproc
 2171              	.LFE89:
 2173              		.section	.text.Init_TP280x_RegSet,"ax",%progbits
 2174              		.align	1
 2175              		.global	Init_TP280x_RegSet
 2176              		.syntax unified
 2177              		.thumb
 2178              		.thumb_func
 2179              		.fpu softvfp
 2181              	Init_TP280x_RegSet:
 2182              	.LFB90:
2589:TP2824/TP2802.c **** #if 0
2590:TP2824/TP2802.c **** void Boot_Trigger_Function(BYTE ch)
2591:TP2824/TP2802.c **** {
2592:TP2824/TP2802.c **** 	
2593:TP2824/TP2802.c **** 		Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_std,ch);
2594:TP2824/TP2802.c **** 		 Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_output,ch);
2595:TP2824/TP2802.c **** 		 Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_COC,ch); 
2596:TP2824/TP2802.c **** 		// delay(100);//5ms
2597:TP2824/TP2802.c **** 
2598:TP2824/TP2802.c **** 			count[ch]=23;
2599:TP2824/TP2802.c **** 
2600:TP2824/TP2802.c **** 		 //	SetCOCCom(_COCOSD_BOX_Sel,ch);  
2601:TP2824/TP2802.c **** 	 	 //	SetCOCCom(_COCOSD_BOXONLINE,0); 
2602:TP2824/TP2802.c **** 		//	 Get_2824cIrq();
2603:TP2824/TP2802.c **** }
2604:TP2824/TP2802.c **** #endif
2605:TP2824/TP2802.c **** void Init_TP280x_RegSet()
2606:TP2824/TP2802.c **** {
 2183              		.loc 1 2606 0
 2184              		.cfi_startproc
 2185              		@ args = 0, pretend = 0, frame = 0
 2186              		@ frame_needed = 0, uses_anonymous_args = 0
 2187 0000 38B5     		push	{r3, r4, r5, lr}
 2188              	.LCFI20:
 2189              		.cfi_def_cfa_offset 16
 2190              		.cfi_offset 3, -16
 2191              		.cfi_offset 4, -12
 2192              		.cfi_offset 5, -8
 2193              		.cfi_offset 14, -4
2607:TP2824/TP2802.c **** 
2608:TP2824/TP2802.c ****     tcByte *ptr_TP2802;
2609:TP2824/TP2802.c ****     tByte i/*,val*/;
2610:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccFyOsmB.s 			page 89


2611:TP2824/TP2802.c ****     TVII2CAddress = 0x88;
 2194              		.loc 1 2611 0
 2195 0002 644B     		ldr	r3, .L238
 2196 0004 8822     		movs	r2, #136
 2197 0006 1A70     		strb	r2, [r3]
 2198              	.LVL316:
2612:TP2824/TP2802.c ****     //TVII2CAddress = 0x8A;
2613:TP2824/TP2802.c ****     //TVII2CAddress = 0x8C;
2614:TP2824/TP2802.c ****     //TVII2CAddress = 0x8E;
2615:TP2824/TP2802.c **** 
2616:TP2824/TP2802.c ****     for(i=0; i<4; i++)
 2199              		.loc 1 2616 0
 2200 0008 0024     		movs	r4, #0
 2201              	.LVL317:
 2202              	.L213:
 2203              		.loc 1 2616 0 is_stmt 0 discriminator 1
 2204 000a 032C     		cmp	r4, #3
 2205 000c 0DD8     		bhi	.L214
2617:TP2824/TP2802.c ****     {
2618:TP2824/TP2802.c ****         if(0x28 == tp28xx_byte_read(0xfe)) break;
 2206              		.loc 1 2618 0 is_stmt 1
 2207 000e FE20     		movs	r0, #254
 2208 0010 FFF7FEFF 		bl	tp28xx_byte_read
 2209              	.LVL318:
 2210 0014 2828     		cmp	r0, #40
 2211 0016 08D0     		beq	.L214
2619:TP2824/TP2802.c ****         TVII2CAddress++;
 2212              		.loc 1 2619 0 discriminator 2
 2213 0018 5E4A     		ldr	r2, .L238
 2214 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2215 001c 0133     		adds	r3, r3, #1
 2216 001e DBB2     		uxtb	r3, r3
2620:TP2824/TP2802.c ****         TVII2CAddress++;
 2217              		.loc 1 2620 0 discriminator 2
 2218 0020 0133     		adds	r3, r3, #1
 2219 0022 1370     		strb	r3, [r2]
2616:TP2824/TP2802.c ****     {
 2220              		.loc 1 2616 0 discriminator 2
 2221 0024 0134     		adds	r4, r4, #1
 2222              	.LVL319:
 2223 0026 E4B2     		uxtb	r4, r4
 2224              	.LVL320:
 2225 0028 EFE7     		b	.L213
 2226              	.L214:
2621:TP2824/TP2802.c ****     }
2622:TP2824/TP2802.c **** 
2623:TP2824/TP2802.c ****     chip = tp28xx_byte_read(0xff);
 2227              		.loc 1 2623 0
 2228 002a FF20     		movs	r0, #255
 2229 002c FFF7FEFF 		bl	tp28xx_byte_read
 2230              	.LVL321:
 2231 0030 594C     		ldr	r4, .L238+4
 2232              	.LVL322:
 2233 0032 2070     		strb	r0, [r4]
2624:TP2824/TP2802.c **** 
2625:TP2824/TP2802.c ****     revision = tp28xx_byte_read(0xfd);
 2234              		.loc 1 2625 0
ARM GAS  /tmp/ccFyOsmB.s 			page 90


 2235 0034 FD20     		movs	r0, #253
 2236 0036 FFF7FEFF 		bl	tp28xx_byte_read
 2237              	.LVL323:
2626:TP2824/TP2802.c ****     revision &= 0x07;
 2238              		.loc 1 2626 0
 2239 003a 00F00702 		and	r2, r0, #7
 2240 003e 574B     		ldr	r3, .L238+8
 2241 0040 1A70     		strb	r2, [r3]
2627:TP2824/TP2802.c **** 
2628:TP2824/TP2802.c ****     printf("\r\nchip %02x revision %02x\r\n", (tWord)chip,(tWord)revision);
 2242              		.loc 1 2628 0
 2243 0042 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 2244 0044 5648     		ldr	r0, .L238+12
 2245 0046 FFF7FEFF 		bl	printf
 2246              	.LVL324:
2629:TP2824/TP2802.c ****     flag_CVBS = 0;
 2247              		.loc 1 2629 0
 2248 004a 0023     		movs	r3, #0
 2249 004c 554A     		ldr	r2, .L238+16
 2250 004e 1360     		str	r3, [r2]
2630:TP2824/TP2802.c ****     flag_AUDIO = 0;
 2251              		.loc 1 2630 0
 2252 0050 554A     		ldr	r2, .L238+20
 2253 0052 1360     		str	r3, [r2]
2631:TP2824/TP2802.c ****     flag_MEGA = 0;
 2254              		.loc 1 2631 0
 2255 0054 554A     		ldr	r2, .L238+24
 2256 0056 1360     		str	r3, [r2]
 2257              	.LVL325:
2632:TP2824/TP2802.c **** 	ptr_TP2802 = TP2824C_DataSet; //def  chunyu
2633:TP2824/TP2802.c ****     switch(chip)
 2258              		.loc 1 2633 0
 2259 0058 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2260 005a 023B     		subs	r3, r3, #2
 2261 005c 252B     		cmp	r3, #37
 2262 005e 70D8     		bhi	.L216
 2263 0060 DFE803F0 		tbb	[pc, r3]
 2264              	.L218:
 2265 0064 13       		.byte	(.L217-.L218)/2
 2266 0065 6F       		.byte	(.L216-.L218)/2
 2267 0066 13       		.byte	(.L217-.L218)/2
 2268 0067 6F       		.byte	(.L216-.L218)/2
 2269 0068 6F       		.byte	(.L216-.L218)/2
 2270 0069 6F       		.byte	(.L216-.L218)/2
 2271 006a 6F       		.byte	(.L216-.L218)/2
 2272 006b 6F       		.byte	(.L216-.L218)/2
 2273 006c 6F       		.byte	(.L216-.L218)/2
 2274 006d 6F       		.byte	(.L216-.L218)/2
 2275 006e 6F       		.byte	(.L216-.L218)/2
 2276 006f 6F       		.byte	(.L216-.L218)/2
 2277 0070 6F       		.byte	(.L216-.L218)/2
 2278 0071 6F       		.byte	(.L216-.L218)/2
 2279 0072 6F       		.byte	(.L216-.L218)/2
 2280 0073 6F       		.byte	(.L216-.L218)/2
 2281 0074 6F       		.byte	(.L216-.L218)/2
 2282 0075 6F       		.byte	(.L216-.L218)/2
 2283 0076 6F       		.byte	(.L216-.L218)/2
ARM GAS  /tmp/ccFyOsmB.s 			page 91


 2284 0077 6F       		.byte	(.L216-.L218)/2
 2285 0078 6F       		.byte	(.L216-.L218)/2
 2286 0079 6F       		.byte	(.L216-.L218)/2
 2287 007a 6F       		.byte	(.L216-.L218)/2
 2288 007b 6F       		.byte	(.L216-.L218)/2
 2289 007c 6F       		.byte	(.L216-.L218)/2
 2290 007d 6F       		.byte	(.L216-.L218)/2
 2291 007e 6F       		.byte	(.L216-.L218)/2
 2292 007f 6F       		.byte	(.L216-.L218)/2
 2293 0080 6F       		.byte	(.L216-.L218)/2
 2294 0081 6F       		.byte	(.L216-.L218)/2
 2295 0082 6F       		.byte	(.L216-.L218)/2
 2296 0083 6F       		.byte	(.L216-.L218)/2
 2297 0084 13       		.byte	(.L217-.L218)/2
 2298 0085 34       		.byte	(.L219-.L218)/2
 2299 0086 44       		.byte	(.L220-.L218)/2
 2300 0087 6F       		.byte	(.L216-.L218)/2
 2301 0088 4B       		.byte	(.L221-.L218)/2
 2302 0089 5F       		.byte	(.L222-.L218)/2
 2303              		.p2align 1
 2304              	.L217:
2634:TP2824/TP2802.c ****     {
2635:TP2824/TP2802.c **** 
2636:TP2824/TP2802.c ****     case TP2802C:
2637:TP2824/TP2802.c ****     case TP2804:
2638:TP2824/TP2802.c ****     case TP2822:
2639:TP2824/TP2802.c ****         printf("EOL ID\r\n");
 2305              		.loc 1 2639 0
 2306 008a 4948     		ldr	r0, .L238+28
 2307 008c FFF7FEFF 		bl	puts
 2308              	.LVL326:
2632:TP2824/TP2802.c **** 	ptr_TP2802 = TP2824C_DataSet; //def  chunyu
 2309              		.loc 1 2632 0
 2310 0090 484C     		ldr	r4, .L238+32
 2311              	.LVL327:
 2312              	.L223:
2640:TP2824/TP2802.c ****         break;
2641:TP2824/TP2802.c **** 
2642:TP2824/TP2802.c ****     case TP2823:
2643:TP2824/TP2802.c ****         flag_CVBS = 1;
2644:TP2824/TP2802.c ****         flag_AUDIO = 1;
2645:TP2824/TP2802.c ****         if(0x01 == revision)
2646:TP2824/TP2802.c ****         {
2647:TP2824/TP2802.c ****             chip=TP2833;
2648:TP2824/TP2802.c ****             ptr_TP2802 = TP2833_DataSet;
2649:TP2824/TP2802.c ****         }
2650:TP2824/TP2802.c ****         else
2651:TP2824/TP2802.c ****         {
2652:TP2824/TP2802.c ****             ptr_TP2802 = TP2823_DataSet;
2653:TP2824/TP2802.c ****         }
2654:TP2824/TP2802.c ****         break;
2655:TP2824/TP2802.c **** 
2656:TP2824/TP2802.c ****     case TP2834:
2657:TP2824/TP2802.c ****         flag_CVBS = 1;
2658:TP2824/TP2802.c ****         flag_AUDIO = 1;
2659:TP2824/TP2802.c ****         ptr_TP2802 = TP2834_DataSet;
2660:TP2824/TP2802.c ****         break;
ARM GAS  /tmp/ccFyOsmB.s 			page 92


2661:TP2824/TP2802.c **** 
2662:TP2824/TP2802.c ****     case TP2853C:
2663:TP2824/TP2802.c ****         flag_CVBS = 1;
2664:TP2824/TP2802.c ****         flag_AUDIO = 1;
2665:TP2824/TP2802.c **** 
2666:TP2824/TP2802.c ****         if(0x01 == revision)
2667:TP2824/TP2802.c ****         {
2668:TP2824/TP2802.c ****             chip=TP2826;
2669:TP2824/TP2802.c ****             //flag_MEGA = 1;
2670:TP2824/TP2802.c **** 			flag_MEGA = 0;  //chunyu 
2671:TP2824/TP2802.c ****             ptr_TP2802 = TP2826_DataSet;
2672:TP2824/TP2802.c ****         }
2673:TP2824/TP2802.c ****         else if(0x00 == revision)
2674:TP2824/TP2802.c ****         {
2675:TP2824/TP2802.c ****             flag_MEGA = 1;
2676:TP2824/TP2802.c ****             ptr_TP2802 = TP2853C_DataSet;
2677:TP2824/TP2802.c ****         }
2678:TP2824/TP2802.c ****         else
2679:TP2824/TP2802.c ****         {
2680:TP2824/TP2802.c ****             ptr_TP2802 = TP2853C_DataSet;
2681:TP2824/TP2802.c ****         }
2682:TP2824/TP2802.c ****         break;
2683:TP2824/TP2802.c **** 
2684:TP2824/TP2802.c ****     case TP2824C:
2685:TP2824/TP2802.c ****         flag_CVBS = 1;
2686:TP2824/TP2802.c ****         flag_AUDIO = 1;
2687:TP2824/TP2802.c **** 
2688:TP2824/TP2802.c ****         if(0x04 == revision)
2689:TP2824/TP2802.c ****         {
2690:TP2824/TP2802.c ****             //flag_MEGA = 1;
2691:TP2824/TP2802.c **** 			flag_MEGA = 0 ; //chunyu
2692:TP2824/TP2802.c ****             ptr_TP2802 = TP2824C_DataSet;
2693:TP2824/TP2802.c ****             printf("TP2824C test\r\n");
2694:TP2824/TP2802.c ****         }
2695:TP2824/TP2802.c ****         break;
2696:TP2824/TP2802.c **** 
2697:TP2824/TP2802.c ****     default:		
2698:TP2824/TP2802.c ****         printf("unknown ID\r\n");
2699:TP2824/TP2802.c ****         break;
2700:TP2824/TP2802.c ****     }
2701:TP2824/TP2802.c **** 
2702:TP2824/TP2802.c ****     Set_PLL_StartUp();
 2313              		.loc 1 2702 0
 2314 0092 FFF7FEFF 		bl	Set_PLL_StartUp
 2315              	.LVL328:
2703:TP2824/TP2802.c **** 
2704:TP2824/TP2802.c ****     I2CDeviceSet1( ptr_TP2802 );
 2316              		.loc 1 2704 0
 2317 0096 2046     		mov	r0, r4
 2318 0098 FFF7FEFF 		bl	I2CDeviceSet1
 2319              	.LVL329:
2705:TP2824/TP2802.c **** 
2706:TP2824/TP2802.c ****     if(flag_AUDIO)	I2CDeviceSet1( TP2834_Audio_DataSet );
 2320              		.loc 1 2706 0
 2321 009c 424B     		ldr	r3, .L238+20
 2322 009e 1B68     		ldr	r3, [r3]
 2323 00a0 002B     		cmp	r3, #0
ARM GAS  /tmp/ccFyOsmB.s 			page 93


 2324 00a2 55D1     		bne	.L233
 2325              	.L225:
2707:TP2824/TP2802.c **** /*
2708:TP2824/TP2802.c ****     mode[CH1]= R1080P25;	//chunyu
2709:TP2824/TP2802.c ****     mode[CH2]= R1080P25;
2710:TP2824/TP2802.c ****     mode[CH3]= R1080P25;
2711:TP2824/TP2802.c ****     mode[CH4]= R1080P25;
2712:TP2824/TP2802.c **** 	
2713:TP2824/TP2802.c **** 
2714:TP2824/TP2802.c **** 	//mode[CH1]= R720P25;	
2715:TP2824/TP2802.c **** 	//mode[CH1]= R1080P25;	
2716:TP2824/TP2802.c ****    Set_VidRes(CH1);
2717:TP2824/TP2802.c **** */
2718:TP2824/TP2802.c **** //    Set_VidRes(CH2);
2719:TP2824/TP2802.c **** //    Set_VidRes(CH3);
2720:TP2824/TP2802.c **** //    Set_VidRes(CH4);
2721:TP2824/TP2802.c **** //	mode[CH3]= NoDet;	//chunyu
2722:TP2824/TP2802.c **** //	Set_VidRes(CH3);	
2723:TP2824/TP2802.c **** //msleep(2000);//ryan@20200622
2724:TP2824/TP2802.c **** 	
2725:TP2824/TP2802.c ****     //CurRes=RES1920X1080;
2726:TP2824/TP2802.c **** 	//CurRes=RES1280X720;
2727:TP2824/TP2802.c **** #if  0
2728:TP2824/TP2802.c **** 
2729:TP2824/TP2802.c **** 	CurRes=RES1920X1080;
2730:TP2824/TP2802.c **** 
2731:TP2824/TP2802.c **** 		val=CheckTrigger();
2732:TP2824/TP2802.c **** 
2733:TP2824/TP2802.c **** 		if(val)
2734:TP2824/TP2802.c **** 		{
2735:TP2824/TP2802.c **** 			TriggerHandler(CheckTrigger());
2736:TP2824/TP2802.c **** 
2737:TP2824/TP2802.c **** 			if((VideoSave[(TriggerStatus-1)] ==_TRUE))
2738:TP2824/TP2802.c **** 			{
2739:TP2824/TP2802.c **** 			Boot_Trigger_Function((TriggerStatus-1));
2740:TP2824/TP2802.c **** 
2741:TP2824/TP2802.c **** 				if(Flisheye_CAM[(TriggerStatus-1)]==TRUE)
2742:TP2824/TP2802.c **** 				{
2743:TP2824/TP2802.c **** 				TriggerMode=0;
2744:TP2824/TP2802.c **** 				TriggerHandler(CheckTrigger());
2745:TP2824/TP2802.c **** 				}
2746:TP2824/TP2802.c **** 			}
2747:TP2824/TP2802.c **** 			// if(PowerFlag==ON)///power on
2748:TP2824/TP2802.c **** 			BackLightON(); 
2749:TP2824/TP2802.c **** 		}
2750:TP2824/TP2802.c **** 
2751:TP2824/TP2802.c **** 
2752:TP2824/TP2802.c ****   	for( i = 0; i < CH_PER_CHIP; i++)
2753:TP2824/TP2802.c ****   {
2754:TP2824/TP2802.c **** 
2755:TP2824/TP2802.c ****   		if(INPUT_VIDEO_CHECK(i)||(TriggerStatus==(i+1)))
2756:TP2824/TP2802.c **** 		{
2757:TP2824/TP2802.c ****         	continue;
2758:TP2824/TP2802.c **** 		}
2759:TP2824/TP2802.c **** 
2760:TP2824/TP2802.c **** 	  
2761:TP2824/TP2802.c **** 	if( VideoSave[i] ==_TRUE)
ARM GAS  /tmp/ccFyOsmB.s 			page 94


2762:TP2824/TP2802.c **** 	{
2763:TP2824/TP2802.c **** 	/*
2764:TP2824/TP2802.c **** 	  count[i] =0;
2765:TP2824/TP2802.c **** 	  state[i] =VIDEO_IN;//VIDEO_IN;//VIDEO_IN;//VIDEO_LOCKED;
2766:TP2824/TP2802.c **** //	  std[i] = 0x02;///ReadEEP(EEP_TP2824_STD0+(i*2));
2767:TP2824/TP2802.c **** //	  mode[i] = NTSC;///ReadEEP(EEP_TP2824_STD0+(i*2)+1);
2768:TP2824/TP2802.c **** 	  std[i] = ReadEEP(EEP_TP2824_STD0+(i*3));
2769:TP2824/TP2802.c **** 	  mode[i] = ReadEEP(EEP_TP2824_STD0+(i*3)+1);
2770:TP2824/TP2802.c **** 	  */
2771:TP2824/TP2802.c **** 	  Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_std,i);
2772:TP2824/TP2802.c **** 	 Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_output,i);
2773:TP2824/TP2802.c **** 
2774:TP2824/TP2802.c **** /*
2775:TP2824/TP2802.c **** 	if(std[i]==HDC)
2776:TP2824/TP2802.c **** 		{
2777:TP2824/TP2802.c **** 		Set_HDC(i);
2778:TP2824/TP2802.c **** 		printf("(Set_HDC)");
2779:TP2824/TP2802.c **** 		}
2780:TP2824/TP2802.c **** 	 if(std[i]==HDA)
2781:TP2824/TP2802.c **** 	 	{
2782:TP2824/TP2802.c **** 	 	Set_HDA(i);
2783:TP2824/TP2802.c **** 		printf("(Set_HDA)");
2784:TP2824/TP2802.c **** 	 	}
2785:TP2824/TP2802.c **** */
2786:TP2824/TP2802.c **** 	 // SetRegPage(i);
2787:TP2824/TP2802.c **** 	//  Set_VidRes(i);
2788:TP2824/TP2802.c **** 
2789:TP2824/TP2802.c ****   		}
2790:TP2824/TP2802.c **** 	else
2791:TP2824/TP2802.c **** 		{		
2792:TP2824/TP2802.c **** 		count[i] = 0;
2793:TP2824/TP2802.c **** 		state[i] = VIDEO_UNPLUG;
2794:TP2824/TP2802.c **** 		std[i] = TVI;
2795:TP2824/TP2802.c **** 		mode[i] = NoDet;///R1080P30/*NoDet*/;
2796:TP2824/TP2802.c **** 		//Set_VidRes(i);
2797:TP2824/TP2802.c **** 		// TP28xx_reset_default(chip, i);
2798:TP2824/TP2802.c **** 		}
2799:TP2824/TP2802.c **** 	 // newInRes[i] = _OSD_720X480P60 ;
2800:TP2824/TP2802.c **** 					
2801:TP2824/TP2802.c ****   }
2802:TP2824/TP2802.c **** 
2803:TP2824/TP2802.c ****  for( i = 0; i <CH_PER_CHIP; i++)
2804:TP2824/TP2802.c ****   {
2805:TP2824/TP2802.c **** 
2806:TP2824/TP2802.c ****   		if((INPUT_VIDEO_CHECK(i)==0))
2807:TP2824/TP2802.c **** 		{
2808:TP2824/TP2802.c ****         	continue;
2809:TP2824/TP2802.c **** 		}
2810:TP2824/TP2802.c ****   
2811:TP2824/TP2802.c **** 	if( VideoSave[i] ==_TRUE)
2812:TP2824/TP2802.c **** 	{
2813:TP2824/TP2802.c **** 	/*
2814:TP2824/TP2802.c **** 	  count[i] =0;
2815:TP2824/TP2802.c **** 	  state[i] =VIDEO_IN;//VIDEO_IN;//VIDEO_IN;//VIDEO_LOCKED;
2816:TP2824/TP2802.c **** //	  std[i] = 0x02;///ReadEEP(EEP_TP2824_STD0+(i*2));
2817:TP2824/TP2802.c **** //	  mode[i] = NTSC;///ReadEEP(EEP_TP2824_STD0+(i*2)+1);
2818:TP2824/TP2802.c **** 	  std[i] = ReadEEP(EEP_TP2824_STD0+(i*3));
ARM GAS  /tmp/ccFyOsmB.s 			page 95


2819:TP2824/TP2802.c **** 	  mode[i] = ReadEEP(EEP_TP2824_STD0+(i*3)+1);
2820:TP2824/TP2802.c **** 	  */
2821:TP2824/TP2802.c **** 	  Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_std,i);
2822:TP2824/TP2802.c **** 	 Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_output,i);
2823:TP2824/TP2802.c **** /*
2824:TP2824/TP2802.c **** 	if(std[i]==HDC)
2825:TP2824/TP2802.c **** 		{
2826:TP2824/TP2802.c **** 		Set_HDC(i);
2827:TP2824/TP2802.c **** 		printf("(Set_HDC)");
2828:TP2824/TP2802.c **** 		}
2829:TP2824/TP2802.c **** 	 if(std[i]==HDA)
2830:TP2824/TP2802.c **** 	 	{
2831:TP2824/TP2802.c **** 	 	Set_HDA(i);
2832:TP2824/TP2802.c **** 		printf("(Set_HDA)");
2833:TP2824/TP2802.c **** 	 	}
2834:TP2824/TP2802.c **** */
2835:TP2824/TP2802.c **** 	 // SetRegPage(i);
2836:TP2824/TP2802.c **** 	//  Set_VidRes(i);
2837:TP2824/TP2802.c **** 
2838:TP2824/TP2802.c ****   		}
2839:TP2824/TP2802.c **** 	else
2840:TP2824/TP2802.c **** 		{		
2841:TP2824/TP2802.c **** 		count[i] = 0;
2842:TP2824/TP2802.c **** 		state[i] = VIDEO_UNPLUG;
2843:TP2824/TP2802.c **** 		std[i] = TVI;
2844:TP2824/TP2802.c **** 		mode[i] = NoDet;///R1080P30/*NoDet*/;
2845:TP2824/TP2802.c **** 		//Set_VidRes(i);
2846:TP2824/TP2802.c **** 		// TP28xx_reset_default(chip, i);
2847:TP2824/TP2802.c **** 		}
2848:TP2824/TP2802.c **** 	 // newInRes[i] = _OSD_720X480P60 ;
2849:TP2824/TP2802.c ****   }
2850:TP2824/TP2802.c **** /*
2851:TP2824/TP2802.c ****    for( i = 0; i <CH_PER_CHIP; i++)
2852:TP2824/TP2802.c ****   {
2853:TP2824/TP2802.c **** 	if( VideoSave[i] ==_TRUE)
2854:TP2824/TP2802.c **** 	{
2855:TP2824/TP2802.c **** 	Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_output,i);
2856:TP2824/TP2802.c **** 	}
2857:TP2824/TP2802.c **** 
2858:TP2824/TP2802.c ****    }
2859:TP2824/TP2802.c ****    */
2860:TP2824/TP2802.c ****  
2861:TP2824/TP2802.c **** 
2862:TP2824/TP2802.c **** #else
2863:TP2824/TP2802.c **** 
2864:TP2824/TP2802.c **** 		mode[CH1]= R1080P25;	//chunyu
 2326              		.loc 1 2864 0
 2327 00a4 444B     		ldr	r3, .L238+36
 2328 00a6 0322     		movs	r2, #3
 2329 00a8 1A70     		strb	r2, [r3]
2865:TP2824/TP2802.c **** 		mode[CH2]= R1080P25;
 2330              		.loc 1 2865 0
 2331 00aa 5A70     		strb	r2, [r3, #1]
2866:TP2824/TP2802.c **** 		mode[CH3]= R1080P25;
 2332              		.loc 1 2866 0
 2333 00ac 9A70     		strb	r2, [r3, #2]
2867:TP2824/TP2802.c **** 		mode[CH4]= R1080P25;
ARM GAS  /tmp/ccFyOsmB.s 			page 96


 2334              		.loc 1 2867 0
 2335 00ae DA70     		strb	r2, [r3, #3]
2868:TP2824/TP2802.c **** 		
2869:TP2824/TP2802.c **** 	
2870:TP2824/TP2802.c **** 		//mode[CH1]= R720P25;	
2871:TP2824/TP2802.c **** 		//mode[CH1]= R1080P25;	
2872:TP2824/TP2802.c **** 	  tp28xx_byte_write(0x40,0x04);
 2336              		.loc 1 2872 0
 2337 00b0 0421     		movs	r1, #4
 2338 00b2 4020     		movs	r0, #64
 2339 00b4 FFF7FEFF 		bl	tp28xx_byte_write
 2340              	.LVL330:
2873:TP2824/TP2802.c **** 	   Set_VidRes(CH1);
 2341              		.loc 1 2873 0
 2342 00b8 0020     		movs	r0, #0
 2343 00ba FFF7FEFF 		bl	Set_VidRes
 2344              	.LVL331:
2874:TP2824/TP2802.c **** //		  Set_VidRes(CH2);
2875:TP2824/TP2802.c **** //		  Set_VidRes(CH3);
2876:TP2824/TP2802.c **** //		  Set_VidRes(CH4);
2877:TP2824/TP2802.c **** 		
2878:TP2824/TP2802.c **** 		//msleep(2000);//ryan@20200622
2879:TP2824/TP2802.c **** 		
2880:TP2824/TP2802.c **** 		CurRes=RES1920X1080;
 2345              		.loc 1 2880 0
 2346 00be 3F4B     		ldr	r3, .L238+40
 2347 00c0 0122     		movs	r2, #1
 2348 00c2 1A70     		strb	r2, [r3]
 2349              	.LVL332:
2881:TP2824/TP2802.c **** 		//CurRes=RES1280X720;
2882:TP2824/TP2802.c **** 
2883:TP2824/TP2802.c **** 
2884:TP2824/TP2802.c ****     for( i = 0; i < CH_PER_CHIP; i++)
 2350              		.loc 1 2884 0
 2351 00c4 0024     		movs	r4, #0
 2352              	.LVL333:
 2353              	.L226:
 2354              		.loc 1 2884 0 is_stmt 0 discriminator 1
 2355 00c6 002C     		cmp	r4, #0
 2356 00c8 46D0     		beq	.L228
2885:TP2824/TP2802.c ****     {
2886:TP2824/TP2802.c ****         count[i] = 0;
2887:TP2824/TP2802.c ****         state[i] = VIDEO_UNPLUG;
2888:TP2824/TP2802.c ****         std[i] = TVI;
2889:TP2824/TP2802.c ****         mode[i] = NoDet;
2890:TP2824/TP2802.c **** 
2891:TP2824/TP2802.c **** 
2892:TP2824/TP2802.c **** 	VS4210_Rx_NoSignal(1/*i*/) ; //chunyu
2893:TP2824/TP2802.c **** 	TP_InputMode=7;
2894:TP2824/TP2802.c **** 	newInRes[0] = _OSD_No_Signal; 
2895:TP2824/TP2802.c **** 			
2896:TP2824/TP2802.c **** 	if(SelectInputMode==_AHD_Input)
2897:TP2824/TP2802.c **** 	Set_Video_Loss_OSD(1,ON);	
2898:TP2824/TP2802.c ****     }
2899:TP2824/TP2802.c **** 
2900:TP2824/TP2802.c **** 
2901:TP2824/TP2802.c **** 	#endif
ARM GAS  /tmp/ccFyOsmB.s 			page 97


2902:TP2824/TP2802.c **** }
 2357              		.loc 1 2902 0 is_stmt 1
 2358 00ca 38BD     		pop	{r3, r4, r5, pc}
 2359              	.LVL334:
 2360              	.L219:
2643:TP2824/TP2802.c ****         flag_AUDIO = 1;
 2361              		.loc 1 2643 0
 2362 00cc 0123     		movs	r3, #1
 2363 00ce 354A     		ldr	r2, .L238+16
 2364 00d0 1360     		str	r3, [r2]
2644:TP2824/TP2802.c ****         if(0x01 == revision)
 2365              		.loc 1 2644 0
 2366 00d2 354A     		ldr	r2, .L238+20
 2367 00d4 1360     		str	r3, [r2]
2645:TP2824/TP2802.c ****         {
 2368              		.loc 1 2645 0
 2369 00d6 314B     		ldr	r3, .L238+8
 2370 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2371 00da 012B     		cmp	r3, #1
 2372 00dc 01D0     		beq	.L234
2652:TP2824/TP2802.c ****         }
 2373              		.loc 1 2652 0
 2374 00de 384C     		ldr	r4, .L238+44
 2375 00e0 D7E7     		b	.L223
 2376              	.L234:
2647:TP2824/TP2802.c ****             ptr_TP2802 = TP2833_DataSet;
 2377              		.loc 1 2647 0
 2378 00e2 2D4B     		ldr	r3, .L238+4
 2379 00e4 2522     		movs	r2, #37
 2380 00e6 1A70     		strb	r2, [r3]
 2381              	.LVL335:
2648:TP2824/TP2802.c ****         }
 2382              		.loc 1 2648 0
 2383 00e8 364C     		ldr	r4, .L238+48
 2384 00ea D2E7     		b	.L223
 2385              	.LVL336:
 2386              	.L220:
2657:TP2824/TP2802.c ****         flag_AUDIO = 1;
 2387              		.loc 1 2657 0
 2388 00ec 0123     		movs	r3, #1
 2389 00ee 2D4A     		ldr	r2, .L238+16
 2390 00f0 1360     		str	r3, [r2]
2658:TP2824/TP2802.c ****         ptr_TP2802 = TP2834_DataSet;
 2391              		.loc 1 2658 0
 2392 00f2 2D4A     		ldr	r2, .L238+20
 2393 00f4 1360     		str	r3, [r2]
 2394              	.LVL337:
2659:TP2824/TP2802.c ****         break;
 2395              		.loc 1 2659 0
 2396 00f6 344C     		ldr	r4, .L238+52
2660:TP2824/TP2802.c **** 
 2397              		.loc 1 2660 0
 2398 00f8 CBE7     		b	.L223
 2399              	.LVL338:
 2400              	.L221:
2663:TP2824/TP2802.c ****         flag_AUDIO = 1;
 2401              		.loc 1 2663 0
ARM GAS  /tmp/ccFyOsmB.s 			page 98


 2402 00fa 0123     		movs	r3, #1
 2403 00fc 294A     		ldr	r2, .L238+16
 2404 00fe 1360     		str	r3, [r2]
2664:TP2824/TP2802.c **** 
 2405              		.loc 1 2664 0
 2406 0100 294A     		ldr	r2, .L238+20
 2407 0102 1360     		str	r3, [r2]
2666:TP2824/TP2802.c ****         {
 2408              		.loc 1 2666 0
 2409 0104 254B     		ldr	r3, .L238+8
 2410 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2411 0108 012B     		cmp	r3, #1
 2412 010a 05D0     		beq	.L235
2673:TP2824/TP2802.c ****         {
 2413              		.loc 1 2673 0
 2414 010c F3B9     		cbnz	r3, .L230
2675:TP2824/TP2802.c ****             ptr_TP2802 = TP2853C_DataSet;
 2415              		.loc 1 2675 0
 2416 010e 274B     		ldr	r3, .L238+24
 2417 0110 0122     		movs	r2, #1
 2418 0112 1A60     		str	r2, [r3]
 2419              	.LVL339:
2676:TP2824/TP2802.c ****         }
 2420              		.loc 1 2676 0
 2421 0114 2D4C     		ldr	r4, .L238+56
 2422 0116 BCE7     		b	.L223
 2423              	.LVL340:
 2424              	.L235:
2668:TP2824/TP2802.c ****             //flag_MEGA = 1;
 2425              		.loc 1 2668 0
 2426 0118 1F4B     		ldr	r3, .L238+4
 2427 011a 2F22     		movs	r2, #47
 2428 011c 1A70     		strb	r2, [r3]
 2429              	.LVL341:
2671:TP2824/TP2802.c ****         }
 2430              		.loc 1 2671 0
 2431 011e 2C4C     		ldr	r4, .L238+60
 2432 0120 B7E7     		b	.L223
 2433              	.LVL342:
 2434              	.L222:
2685:TP2824/TP2802.c ****         flag_AUDIO = 1;
 2435              		.loc 1 2685 0
 2436 0122 0123     		movs	r3, #1
 2437 0124 1F4A     		ldr	r2, .L238+16
 2438 0126 1360     		str	r3, [r2]
2686:TP2824/TP2802.c **** 
 2439              		.loc 1 2686 0
 2440 0128 1F4A     		ldr	r2, .L238+20
 2441 012a 1360     		str	r3, [r2]
2688:TP2824/TP2802.c ****         {
 2442              		.loc 1 2688 0
 2443 012c 1B4B     		ldr	r3, .L238+8
 2444 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2445 0130 042B     		cmp	r3, #4
 2446 0132 01D0     		beq	.L236
2632:TP2824/TP2802.c ****     switch(chip)
 2447              		.loc 1 2632 0
ARM GAS  /tmp/ccFyOsmB.s 			page 99


 2448 0134 1F4C     		ldr	r4, .L238+32
 2449 0136 ACE7     		b	.L223
 2450              	.L236:
2693:TP2824/TP2802.c ****         }
 2451              		.loc 1 2693 0
 2452 0138 2648     		ldr	r0, .L238+64
 2453 013a FFF7FEFF 		bl	puts
 2454              	.LVL343:
2692:TP2824/TP2802.c ****             printf("TP2824C test\r\n");
 2455              		.loc 1 2692 0
 2456 013e 1D4C     		ldr	r4, .L238+32
 2457 0140 A7E7     		b	.L223
 2458              	.L216:
2698:TP2824/TP2802.c ****         break;
 2459              		.loc 1 2698 0
 2460 0142 2548     		ldr	r0, .L238+68
 2461 0144 FFF7FEFF 		bl	puts
 2462              	.LVL344:
2632:TP2824/TP2802.c ****     switch(chip)
 2463              		.loc 1 2632 0
 2464 0148 1A4C     		ldr	r4, .L238+32
2699:TP2824/TP2802.c ****     }
 2465              		.loc 1 2699 0
 2466 014a A2E7     		b	.L223
 2467              	.L230:
2680:TP2824/TP2802.c ****         }
 2468              		.loc 1 2680 0
 2469 014c 1F4C     		ldr	r4, .L238+56
 2470 014e A0E7     		b	.L223
 2471              	.LVL345:
 2472              	.L233:
2706:TP2824/TP2802.c **** /*
 2473              		.loc 1 2706 0 discriminator 1
 2474 0150 2248     		ldr	r0, .L238+72
 2475 0152 FFF7FEFF 		bl	I2CDeviceSet1
 2476              	.LVL346:
 2477 0156 A5E7     		b	.L225
 2478              	.LVL347:
 2479              	.L228:
2886:TP2824/TP2802.c ****         state[i] = VIDEO_UNPLUG;
 2480              		.loc 1 2886 0
 2481 0158 0023     		movs	r3, #0
 2482 015a 214A     		ldr	r2, .L238+76
 2483 015c 1355     		strb	r3, [r2, r4]
2887:TP2824/TP2802.c ****         std[i] = TVI;
 2484              		.loc 1 2887 0
 2485 015e 214A     		ldr	r2, .L238+80
 2486 0160 1355     		strb	r3, [r2, r4]
2888:TP2824/TP2802.c ****         mode[i] = NoDet;
 2487              		.loc 1 2888 0
 2488 0162 214A     		ldr	r2, .L238+84
 2489 0164 1355     		strb	r3, [r2, r4]
2889:TP2824/TP2802.c **** 
 2490              		.loc 1 2889 0
 2491 0166 0725     		movs	r5, #7
 2492 0168 134B     		ldr	r3, .L238+36
 2493 016a 1D55     		strb	r5, [r3, r4]
ARM GAS  /tmp/ccFyOsmB.s 			page 100


2892:TP2824/TP2802.c **** 	TP_InputMode=7;
 2494              		.loc 1 2892 0
 2495 016c 0120     		movs	r0, #1
 2496 016e FFF7FEFF 		bl	VS4210_Rx_NoSignal
 2497              	.LVL348:
2893:TP2824/TP2802.c **** 	newInRes[0] = _OSD_No_Signal; 
 2498              		.loc 1 2893 0
 2499 0172 1E4B     		ldr	r3, .L238+88
 2500 0174 1D70     		strb	r5, [r3]
2894:TP2824/TP2802.c **** 			
 2501              		.loc 1 2894 0
 2502 0176 1E4B     		ldr	r3, .L238+92
 2503 0178 1422     		movs	r2, #20
 2504 017a 1A70     		strb	r2, [r3]
2896:TP2824/TP2802.c **** 	Set_Video_Loss_OSD(1,ON);	
 2505              		.loc 1 2896 0
 2506 017c 1D4B     		ldr	r3, .L238+96
 2507 017e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2508 0180 012B     		cmp	r3, #1
 2509 0182 02D0     		beq	.L237
 2510              	.L227:
2884:TP2824/TP2802.c ****     {
 2511              		.loc 1 2884 0 discriminator 2
 2512 0184 0134     		adds	r4, r4, #1
 2513              	.LVL349:
 2514 0186 E4B2     		uxtb	r4, r4
 2515              	.LVL350:
 2516 0188 9DE7     		b	.L226
 2517              	.L237:
2897:TP2824/TP2802.c ****     }
 2518              		.loc 1 2897 0
 2519 018a 0121     		movs	r1, #1
 2520 018c 0846     		mov	r0, r1
 2521 018e FFF7FEFF 		bl	Set_Video_Loss_OSD
 2522              	.LVL351:
 2523 0192 F7E7     		b	.L227
 2524              	.L239:
 2525              		.align	2
 2526              	.L238:
 2527 0194 00000000 		.word	TVII2CAddress
 2528 0198 00000000 		.word	chip
 2529 019c 00000000 		.word	revision
 2530 01a0 00000000 		.word	.LC26
 2531 01a4 00000000 		.word	flag_CVBS
 2532 01a8 00000000 		.word	flag_AUDIO
 2533 01ac 00000000 		.word	flag_MEGA
 2534 01b0 1C000000 		.word	.LC27
 2535 01b4 00000000 		.word	.LANCHOR15
 2536 01b8 00000000 		.word	mode
 2537 01bc 00000000 		.word	CurRes
 2538 01c0 00000000 		.word	.LANCHOR16
 2539 01c4 00000000 		.word	.LANCHOR19
 2540 01c8 00000000 		.word	.LANCHOR17
 2541 01cc 00000000 		.word	.LANCHOR18
 2542 01d0 00000000 		.word	.LANCHOR20
 2543 01d4 24000000 		.word	.LC28
 2544 01d8 34000000 		.word	.LC29
ARM GAS  /tmp/ccFyOsmB.s 			page 101


 2545 01dc 00000000 		.word	.LANCHOR21
 2546 01e0 00000000 		.word	count
 2547 01e4 00000000 		.word	state
 2548 01e8 00000000 		.word	std
 2549 01ec 00000000 		.word	.LANCHOR22
 2550 01f0 00000000 		.word	.LANCHOR23
 2551 01f4 00000000 		.word	SelectInputMode
 2552              		.cfi_endproc
 2553              	.LFE90:
 2555              		.section	.text.ConvertData,"ax",%progbits
 2556              		.align	1
 2557              		.global	ConvertData
 2558              		.syntax unified
 2559              		.thumb
 2560              		.thumb_func
 2561              		.fpu softvfp
 2563              	ConvertData:
 2564              	.LFB91:
2903:TP2824/TP2802.c **** #if 0
2904:TP2824/TP2802.c **** void Init_TP280x_CHx_RegSet(BYTE Action,BYTE index)
2905:TP2824/TP2802.c **** {
2906:TP2824/TP2802.c **** 	
2907:TP2824/TP2802.c **** 		tByte /*cvstd,status,*/i=index;
2908:TP2824/TP2802.c **** 		 tByte gain, tmp, /*fmt,*/ tmpab;
2909:TP2824/TP2802.c **** 
2910:TP2824/TP2802.c **** 		  count[i] =20;
2911:TP2824/TP2802.c **** 		  state[i] =VIDEO_LOCKED;//VIDEO_IN;//VIDEO_IN;//VIDEO_LOCKED;
2912:TP2824/TP2802.c **** 	//	  std[i] = 0x02;///ReadEEP(EEP_TP2824_STD0+(i*2));
2913:TP2824/TP2802.c **** 	//	  mode[i] = NTSC;///ReadEEP(EEP_TP2824_STD0+(i*2)+1);
2914:TP2824/TP2802.c **** 		  std[i] = ReadEEP(EEP_TP2824_STD0+(i*3));
2915:TP2824/TP2802.c **** 		  mode[i] = ReadEEP(EEP_TP2824_STD0+(i*3)+1);
2916:TP2824/TP2802.c **** 
2917:TP2824/TP2802.c **** 		printf("Init_TP280x_CHx_RegSet in ch%02x \r\n", (tWord)i);
2918:TP2824/TP2802.c **** 		SetRegPage(i);
2919:TP2824/TP2802.c **** 
2920:TP2824/TP2802.c **** 		//Set_VidRes(i);      
2921:TP2824/TP2802.c **** 
2922:TP2824/TP2802.c **** 		//msleep(200) ;
2923:TP2824/TP2802.c **** switch(Action)
2924:TP2824/TP2802.c **** {
2925:TP2824/TP2802.c **** case Tp2802_Boot_Set_std:
2926:TP2824/TP2802.c **** 	if(std[i] ==TVI)
2927:TP2824/TP2802.c **** 	{
2928:TP2824/TP2802.c **** 					Set_VidRes(i); 
2929:TP2824/TP2802.c **** 					//if((mode[i]==NTSC)||(mode[i]==PAL))
2930:TP2824/TP2802.c **** 					//msleep(300) ;
2931:TP2824/TP2802.c **** 					//std[i] = TVI;
2932:TP2824/TP2802.c **** 					CurCH = i;
2933:TP2824/TP2802.c **** 					if( (R720P30V2 == mode[i]) || (R720P25V2 == mode[i]) )
2934:TP2824/TP2802.c **** 					{
2935:TP2824/TP2802.c **** 						if( 0x00 == (0x08 & tp28xx_byte_read(0x03)))
2936:TP2824/TP2802.c **** 						{
2937:TP2824/TP2802.c **** 							mode[i] &= 0xf7;
2938:TP2824/TP2802.c **** 							Set_VidRes(i);
2939:TP2824/TP2802.c **** 							printf("(A)");
2940:TP2824/TP2802.c **** 							//printf("TVI_Set_VidRes\r\n");
2941:TP2824/TP2802.c **** 						}
ARM GAS  /tmp/ccFyOsmB.s 			page 102


2942:TP2824/TP2802.c **** 					}
2943:TP2824/TP2802.c **** 	
2944:TP2824/TP2802.c **** 					//tp28xx_byte_write(0xf6  , REG_F6[i]);
2945:TP2824/TP2802.c **** 					tp28xx_byte_write(0xf6 +i  , REG_F6[i]);  //chunyu
2946:TP2824/TP2802.c **** 	
2947:TP2824/TP2802.c **** #if(OUTPUT == Bits16out)
2948:TP2824/TP2802.c **** 					if( TP2826 == chip )
2949:TP2824/TP2802.c **** 					{
2950:TP2824/TP2802.c **** 						tp28xx_byte_write(0xf8, REG_F7[i]);
2951:TP2824/TP2802.c **** 						tp28xx_byte_write(0xfa, REG_FA[i]);
2952:TP2824/TP2802.c **** 						tp28xx_byte_write(0xfb, REG_FA[i]);
2953:TP2824/TP2802.c **** 					}
2954:TP2824/TP2802.c **** 					else
2955:TP2824/TP2802.c **** 					{					 
2956:TP2824/TP2802.c **** 						tp28xx_byte_write(0xf7, REG_F7[i]);
2957:TP2824/TP2802.c **** 						tp28xx_byte_write(0xfa, REG_FA[i]);
2958:TP2824/TP2802.c **** 						//printf("set output ch%02x \r\n", (tWord)CH[i]);
2959:TP2824/TP2802.c **** 					}
2960:TP2824/TP2802.c **** #else //BT656																				
2961:TP2824/TP2802.c **** 	
2962:TP2824/TP2802.c **** 					tmp=tp28xx_byte_read(0xf5);
2963:TP2824/TP2802.c **** 					if( tmp &= SYS_MODE[i])
2964:TP2824/TP2802.c **** 					{
2965:TP2824/TP2802.c **** 						printf("//75.25M output\r\n") ;
2966:TP2824/TP2802.c **** 	
2967:TP2824/TP2802.c **** 						if (i == 0)
2968:TP2824/TP2802.c **** 						{
2969:TP2824/TP2802.c **** 							tmpab = tp28xx_byte_read(0xfa) ;
2970:TP2824/TP2802.c **** 							tmpab = (tmpab & 0xF0) | 0x0A ;
2971:TP2824/TP2802.c **** 							tp28xx_byte_write(0xfa, tmpab);
2972:TP2824/TP2802.c **** 						}
2973:TP2824/TP2802.c **** 						else if (i == 1)
2974:TP2824/TP2802.c **** 						{
2975:TP2824/TP2802.c **** 							tmpab = tp28xx_byte_read(0xfa) ;
2976:TP2824/TP2802.c **** 							tmpab = (tmpab & 0x0F) | 0xA0 ;
2977:TP2824/TP2802.c **** 							tp28xx_byte_write(0xfa, tmpab);
2978:TP2824/TP2802.c **** 						}
2979:TP2824/TP2802.c **** 	
2980:TP2824/TP2802.c **** 						if (i == 2)
2981:TP2824/TP2802.c **** 						{
2982:TP2824/TP2802.c **** 							tmpab = tp28xx_byte_read(0xfb) ;
2983:TP2824/TP2802.c **** 							tmpab = (tmpab & 0xF0) | 0x0A ;
2984:TP2824/TP2802.c **** 							tp28xx_byte_write(0xfb, tmpab);
2985:TP2824/TP2802.c **** 						}
2986:TP2824/TP2802.c **** 						else if (i == 3)
2987:TP2824/TP2802.c **** 						{
2988:TP2824/TP2802.c **** 							tmpab = tp28xx_byte_read(0xfb) ;
2989:TP2824/TP2802.c **** 							tmpab = (tmpab & 0x0F) | 0xA0 ;
2990:TP2824/TP2802.c **** 							tp28xx_byte_write(0xfb, tmpab);
2991:TP2824/TP2802.c **** 						}
2992:TP2824/TP2802.c **** 					}
2993:TP2824/TP2802.c **** 					else
2994:TP2824/TP2802.c **** 					{
2995:TP2824/TP2802.c **** 						extern tByte half_scaler;
2996:TP2824/TP2802.c **** 						if(half_scaler) //down scaler output
2997:TP2824/TP2802.c **** 						{
2998:TP2824/TP2802.c **** 							tmp=tp28xx_byte_read(0x35);
ARM GAS  /tmp/ccFyOsmB.s 			page 103


2999:TP2824/TP2802.c **** 							tmp |= 0x40;
3000:TP2824/TP2802.c **** 							tp28xx_byte_write(0x35, tmp);						 
3001:TP2824/TP2802.c **** 	
3002:TP2824/TP2802.c **** 							if (i == 0)
3003:TP2824/TP2802.c **** 							{
3004:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfa) ;
3005:TP2824/TP2802.c **** 								tmpab = (tmpab & 0xF0) | 0x0A ;
3006:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfa, tmpab);
3007:TP2824/TP2802.c **** 							}
3008:TP2824/TP2802.c **** 							else if (i == 1)
3009:TP2824/TP2802.c **** 							{
3010:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfa) ;
3011:TP2824/TP2802.c **** 								tmpab = (tmpab & 0x0F) | 0xA0 ;
3012:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfa, tmpab);
3013:TP2824/TP2802.c **** 							}
3014:TP2824/TP2802.c **** 	
3015:TP2824/TP2802.c **** 	
3016:TP2824/TP2802.c **** 							if (i == 2)
3017:TP2824/TP2802.c **** 							{
3018:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfb) ;
3019:TP2824/TP2802.c **** 								tmpab = (tmpab & 0xF0) | 0x0A ;
3020:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfb, tmpab);
3021:TP2824/TP2802.c **** 							}
3022:TP2824/TP2802.c **** 							else if (i == 3)
3023:TP2824/TP2802.c **** 							{
3024:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfb) ;
3025:TP2824/TP2802.c **** 								tmpab = (tmpab & 0x0F) | 0xA0 ;
3026:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfb, tmpab);
3027:TP2824/TP2802.c **** 							}
3028:TP2824/TP2802.c **** 	
3029:TP2824/TP2802.c **** 						}
3030:TP2824/TP2802.c **** 						else
3031:TP2824/TP2802.c **** 						{
3032:TP2824/TP2802.c **** 							tmp=tp28xx_byte_read(0x35);
3033:TP2824/TP2802.c **** 							tmp &= 0xbf;
3034:TP2824/TP2802.c **** 							tp28xx_byte_write(0x35, tmp);
3035:TP2824/TP2802.c **** 	
3036:TP2824/TP2802.c **** 	
3037:TP2824/TP2802.c **** 							if (i == 0)
3038:TP2824/TP2802.c **** 							{
3039:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfa) ;
3040:TP2824/TP2802.c **** 								tmpab = (tmpab & 0xF0) | 0x08 ;
3041:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfa, tmpab);
3042:TP2824/TP2802.c **** 							}
3043:TP2824/TP2802.c **** 							else if (i == 1)
3044:TP2824/TP2802.c **** 							{
3045:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfa) ;
3046:TP2824/TP2802.c **** 								tmpab = (tmpab & 0x0F) | 0x80 ;
3047:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfa, tmpab);
3048:TP2824/TP2802.c **** 							}
3049:TP2824/TP2802.c **** 	
3050:TP2824/TP2802.c **** 	
3051:TP2824/TP2802.c **** 							if (i == 2)
3052:TP2824/TP2802.c **** 							{
3053:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfb) ;
3054:TP2824/TP2802.c **** 								tmpab = (tmpab & 0xF0) | 0x08 ;
3055:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfb, tmpab);
ARM GAS  /tmp/ccFyOsmB.s 			page 104


3056:TP2824/TP2802.c **** 							}
3057:TP2824/TP2802.c **** 							else if (i == 3)
3058:TP2824/TP2802.c **** 							{
3059:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfb) ;
3060:TP2824/TP2802.c **** 								tmpab = (tmpab & 0x0F) | 0x80 ;
3061:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfb, tmpab);
3062:TP2824/TP2802.c **** 							}
3063:TP2824/TP2802.c **** 						}
3064:TP2824/TP2802.c **** 					}
3065:TP2824/TP2802.c **** #endif
3066:TP2824/TP2802.c **** 				
3067:TP2824/TP2802.c **** 
3068:TP2824/TP2802.c **** 					if( CurRes != ManVidResRx)
3069:TP2824/TP2802.c **** 					{
3070:TP2824/TP2802.c **** 						CurRes = ManVidResRx;
3071:TP2824/TP2802.c **** 						//CreateMDIN340VideoInstance();  //chunyu
3072:TP2824/TP2802.c **** 						printf("ManVidResRx=0x%02x\r\n",ManVidResRx ) ;
3073:TP2824/TP2802.c **** 					}
3074:TP2824/TP2802.c **** 			}
3075:TP2824/TP2802.c **** 	else if(std[i] ==HDC)
3076:TP2824/TP2802.c **** 		{
3077:TP2824/TP2802.c **** 		Set_HDC(i);
3078:TP2824/TP2802.c **** 		printf("(Set_HDC)");
3079:TP2824/TP2802.c **** 		}
3080:TP2824/TP2802.c **** 	else if(std[i] ==HDA)
3081:TP2824/TP2802.c **** 		{
3082:TP2824/TP2802.c **** 		Set_HDA(i);
3083:TP2824/TP2802.c **** 		printf("(Set_HDA)");
3084:TP2824/TP2802.c **** 		}
3085:TP2824/TP2802.c **** 		break;
3086:TP2824/TP2802.c **** case Tp2802_Boot_Set_output:
3087:TP2824/TP2802.c **** //{
3088:TP2824/TP2802.c ****                 gain = ReadGain();
3089:TP2824/TP2802.c ****                 printf("Egain=0x%02x ch%02x,std=%d,mode=0x%02X\r\n", (tWord)gain, (tWord)i, (tWord)
3090:TP2824/TP2802.c **** 
3091:TP2824/TP2802.c ****                 if ((mode[i] == R1080P30 ) || (mode[i] == R1080P25 ))
3092:TP2824/TP2802.c ****                 {
3093:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1920X1080P ;
3094:TP2824/TP2802.c ****                 }
3095:TP2824/TP2802.c ****                 else if ((mode[i] == R720P50 ) || (mode[i] == R720P60 ))
3096:TP2824/TP2802.c ****                 {
3097:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
3098:TP2824/TP2802.c ****                 }
3099:TP2824/TP2802.c ****                 else if ((mode[i] == R720P25 ) || (mode[i] == R720P30 ))
3100:TP2824/TP2802.c ****                 {
3101:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
3102:TP2824/TP2802.c ****                 }
3103:TP2824/TP2802.c ****                 else if ((mode[i] == R720P30V2 ) || (mode[i] == R720P25V2 ))
3104:TP2824/TP2802.c ****                 {
3105:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
3106:TP2824/TP2802.c ****                 }
3107:TP2824/TP2802.c ****                 else if (mode[i] == NTSC )
3108:TP2824/TP2802.c ****                 {
3109:TP2824/TP2802.c ****                     newInRes[i] = _OSD_720X480I60 ;
3110:TP2824/TP2802.c ****                 }
3111:TP2824/TP2802.c ****                 else if (mode[i] == PAL )
3112:TP2824/TP2802.c ****                 {
ARM GAS  /tmp/ccFyOsmB.s 			page 105


3113:TP2824/TP2802.c ****                     newInRes[i] = _OSD_720X576I50 ;
3114:TP2824/TP2802.c ****                 }
3115:TP2824/TP2802.c ****                 else
3116:TP2824/TP2802.c ****                 {
3117:TP2824/TP2802.c ****                     newInRes[i] = _OSD_No_Signal ;
3118:TP2824/TP2802.c ****                 }
3119:TP2824/TP2802.c **** 
3120:TP2824/TP2802.c ****               //  if (newInRes[i] != gbVXIS_InputMode[i] )
3121:TP2824/TP2802.c ****                 {
3122:TP2824/TP2802.c ****                     VS4210_SetInModeOutMode(i,newInRes[i] ,gbVXIS_OuputModeflg )  ;
3123:TP2824/TP2802.c **** 
3124:TP2824/TP2802.c **** 		//save tp2824 data
3125:TP2824/TP2802.c **** 		/*
3126:TP2824/TP2802.c **** 			if( ReadEEP(EEP_TP2824_STD0+(i*3)+2)==0)
3127:TP2824/TP2802.c **** 			{
3128:TP2824/TP2802.c **** 			 WriteEEP(EEP_TP2824_STD0+(i*3),std[i]);
3129:TP2824/TP2802.c **** 			 WriteEEP(EEP_TP2824_STD0+(i*3)+1,mode[i]);		
3130:TP2824/TP2802.c **** 		    	  WriteEEP(EEP_TP2824_STD0+(i*3)+2,1);
3131:TP2824/TP2802.c **** 			  VideoSave[i]=1;
3132:TP2824/TP2802.c **** 
3133:TP2824/TP2802.c **** 			 printf("\r\n(WriteModeDataToEEPROM ch=%02x)",(WORD)i) ;
3134:TP2824/TP2802.c **** 			}
3135:TP2824/TP2802.c **** 			*/
3136:TP2824/TP2802.c **** 	 
3137:TP2824/TP2802.c ****                 }
3138:TP2824/TP2802.c **** 
3139:TP2824/TP2802.c ****                 if( TVI != std[i] )
3140:TP2824/TP2802.c ****                 {
3141:TP2824/TP2802.c ****                     tp28xx_byte_write(0x07, 0x80|(gain>>2));  // manual mode
3142:TP2824/TP2802.c ****                     if (std[i]== HDA )
3143:TP2824/TP2802.c ****                     {
3144:TP2824/TP2802.c ****                         printf("AHD Mode\r\n");
3145:TP2824/TP2802.c ****                     }
3146:TP2824/TP2802.c ****                     else
3147:TP2824/TP2802.c ****                     {
3148:TP2824/TP2802.c ****                         printf("CVI Mode\r\n");
3149:TP2824/TP2802.c ****                     }
3150:TP2824/TP2802.c ****                 }
3151:TP2824/TP2802.c ****                 else //TVI
3152:TP2824/TP2802.c ****                 {
3153:TP2824/TP2802.c ****                     if( TP2833 == chip || TP2834 == chip)
3154:TP2824/TP2802.c ****                     {
3155:TP2824/TP2802.c ****                         if( mode[i] & FLAG_MEGA_MODE )
3156:TP2824/TP2802.c ****                         {
3157:TP2824/TP2802.c ****                             tp28xx_byte_write(0x07, 0x80|(gain/3));  // manual mode
3158:TP2824/TP2802.c ****                         }
3159:TP2824/TP2802.c ****                     }
3160:TP2824/TP2802.c **** 		      if(mode[i] == NTSC) //20200408 cvbs night no burst
3161:TP2824/TP2802.c **** 			  	printf("CVBS NTSC   mode\r\n");
3162:TP2824/TP2802.c **** 		      else if(mode[i] == PAL) //20200408 cvbs night no burst
3163:TP2824/TP2802.c **** 			  	printf("CVBS PAL   mode\r\n");
3164:TP2824/TP2802.c **** 		      else
3165:TP2824/TP2802.c ****                     printf("LINE=%d,TVI Mode\r\n",__LINE__ );
3166:TP2824/TP2802.c ****                     //gRxLoopFlg = 0 ;
3167:TP2824/TP2802.c ****                 }
3168:TP2824/TP2802.c ****            // }
3169:TP2824/TP2802.c ****  break;
ARM GAS  /tmp/ccFyOsmB.s 			page 106


3170:TP2824/TP2802.c **** 		   case Tp2802_Boot_Set_COC:
3171:TP2824/TP2802.c **** 		   //	{
3172:TP2824/TP2802.c ****                 if( TVI != std[i] )
3173:TP2824/TP2802.c ****                 {
3174:TP2824/TP2802.c ****                     ManualAGC(i);
3175:TP2824/TP2802.c ****                     SetCGain(0x0c);
3176:TP2824/TP2802.c ****                 }
3177:TP2824/TP2802.c ****                 else //TVI
3178:TP2824/TP2802.c ****                 {
3179:TP2824/TP2802.c ****                     if( TP2833 == chip || TP2834 == chip)
3180:TP2824/TP2802.c ****                     {
3181:TP2824/TP2802.c ****                         if( mode[i] & FLAG_MEGA_MODE )
3182:TP2824/TP2802.c ****                         {
3183:TP2824/TP2802.c ****                             SetCGain(0x16);
3184:TP2824/TP2802.c ****                         }
3185:TP2824/TP2802.c ****                     }
3186:TP2824/TP2802.c ****                 }
3187:TP2824/TP2802.c ****             //}
3188:TP2824/TP2802.c **** 			   if(state[i] == VIDEO_LOCKED)
3189:TP2824/TP2802.c **** 						   {
3190:TP2824/TP2802.c **** 							   tcByte *ptr_TP2824C;
3191:TP2824/TP2802.c **** 					   if( TVI == std[i] )
3192:TP2824/TP2802.c **** 					   {
3193:TP2824/TP2802.c **** 						   if(mode[i]==NTSC || mode[i]==PAL)
3194:TP2824/TP2802.c **** 						   {
3195:TP2824/TP2802.c **** 							   ptr_TP2824C=TP2824C_CVBS_PTZ_DataSet;
3196:TP2824/TP2802.c **** 						   }
3197:TP2824/TP2802.c **** 						   else
3198:TP2824/TP2802.c **** 						   {
3199:TP2824/TP2802.c **** 							   ptr_TP2824C=TP2824C_TVI_FHD_PTZ_DataSet;
3200:TP2824/TP2802.c **** 						   }
3201:TP2824/TP2802.c **** 						   
3202:TP2824/TP2802.c **** 						   I2CDeviceSet1( ptr_TP2824C );
3203:TP2824/TP2802.c **** 						   
3204:TP2824/TP2802.c **** 						   if(mode[i] == R1080P30 || mode[i] == R1080P25)
3205:TP2824/TP2802.c **** 						   {
3206:TP2824/TP2802.c **** 							   tp28xx_byte_write(0xc6, 0x19);
3207:TP2824/TP2802.c **** 						   }
3208:TP2824/TP2802.c **** 						   
3209:TP2824/TP2802.c **** 						   tp28xx_byte_write(0x40, i);
3210:TP2824/TP2802.c **** 						   
3211:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xbe, 0x80);
3212:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB6);
3213:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB5);
3214:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB4);
3215:TP2824/TP2802.c **** 			   
3216:TP2824/TP2802.c **** 					   
3217:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0x00);
3218:TP2824/TP2802.c **** 						   delay(1);//5ms
3219:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0x83);
3220:TP2824/TP2802.c **** 						   
3221:TP2824/TP2802.c **** 						   if(mode[i]==R1080P30 || mode[i]==R1080P25)
3222:TP2824/TP2802.c **** 						   {
3223:TP2824/TP2802.c **** 							   PtzTxChNum=i;
3224:TP2824/TP2802.c **** 							   printf("EQdet %d\r\n",  PtzTxChNum);
3225:TP2824/TP2802.c **** 						   }
3226:TP2824/TP2802.c **** 						   
ARM GAS  /tmp/ccFyOsmB.s 			page 107


3227:TP2824/TP2802.c **** 					   }
3228:TP2824/TP2802.c **** 			   
3229:TP2824/TP2802.c **** 					   if( HDA == std[i] )
3230:TP2824/TP2802.c **** 					   {
3231:TP2824/TP2802.c **** 						   ptr_TP2824C=TP2824C_AHD_FHD_PTZ_DataSet;
3232:TP2824/TP2802.c **** 						   I2CDeviceSet1( ptr_TP2824C );
3233:TP2824/TP2802.c **** 					   
3234:TP2824/TP2802.c **** 						   tp28xx_byte_write(0x40, i);
3235:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xbe, 0x80);
3236:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB6);
3237:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB5);
3238:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB4);
3239:TP2824/TP2802.c **** 			   
3240:TP2824/TP2802.c **** 					   
3241:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0x24);
3242:TP2824/TP2802.c **** 						   delay(1);//5ms
3243:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0xA7);
3244:TP2824/TP2802.c **** 					   }
3245:TP2824/TP2802.c **** 			   
3246:TP2824/TP2802.c **** 					   if( HDC == std[i] )
3247:TP2824/TP2802.c **** 					   {
3248:TP2824/TP2802.c **** 						   ptr_TP2824C=TP2824C_CVIHD_PTZ_DataSet;
3249:TP2824/TP2802.c **** 						   I2CDeviceSet1( ptr_TP2824C );
3250:TP2824/TP2802.c **** 					   
3251:TP2824/TP2802.c **** 						   tp28xx_byte_write(0x40, i);
3252:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xbe, 0x80);
3253:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB6);
3254:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB5);
3255:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB4);
3256:TP2824/TP2802.c **** 			   
3257:TP2824/TP2802.c **** 					   
3258:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xA4);
3259:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xA2);
3260:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xA3);
3261:TP2824/TP2802.c **** 						   
3262:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0x00);
3263:TP2824/TP2802.c **** 						   delay(1);//5ms
3264:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0x83);
3265:TP2824/TP2802.c **** 					   }
3266:TP2824/TP2802.c **** 
3267:TP2824/TP2802.c **** 			   	}
3268:TP2824/TP2802.c **** 			break;
3269:TP2824/TP2802.c **** 			//#endif
3270:TP2824/TP2802.c **** }
3271:TP2824/TP2802.c **** 
3272:TP2824/TP2802.c **** }
3273:TP2824/TP2802.c **** #endif
3274:TP2824/TP2802.c **** void ConvertData(unsigned char dat, unsigned char buf_index)
3275:TP2824/TP2802.c **** {
 2565              		.loc 1 3275 0
 2566              		.cfi_startproc
 2567              		@ args = 0, pretend = 0, frame = 0
 2568              		@ frame_needed = 0, uses_anonymous_args = 0
 2569              		@ link register save eliminated.
 2570              	.LVL352:
 2571 0000 10B4     		push	{r4}
 2572              	.LCFI21:
ARM GAS  /tmp/ccFyOsmB.s 			page 108


 2573              		.cfi_def_cfa_offset 4
 2574              		.cfi_offset 4, -4
3276:TP2824/TP2802.c ****     unsigned char i;
3277:TP2824/TP2802.c **** 
3278:TP2824/TP2802.c ****     PTZ_pelco=0;
 2575              		.loc 1 3278 0
 2576 0002 0022     		movs	r2, #0
 2577 0004 124B     		ldr	r3, .L248
 2578 0006 1A80     		strh	r2, [r3]	@ movhi
 2579              	.LVL353:
3279:TP2824/TP2802.c **** 
3280:TP2824/TP2802.c ****     for(i = 0; i < 8; i++)
 2580              		.loc 1 3280 0
 2581 0008 07E0     		b	.L241
 2582              	.LVL354:
 2583              	.L247:
3281:TP2824/TP2802.c ****     {
3282:TP2824/TP2802.c ****         PTZ_pelco <<= 3;
3283:TP2824/TP2802.c **** 
3284:TP2824/TP2802.c ****         if(0x80 & dat) PTZ_pelco |= 0x06;
 2584              		.loc 1 3284 0 discriminator 1
 2585 000a 43F00603 		orr	r3, r3, #6
 2586 000e 104C     		ldr	r4, .L248
 2587 0010 2380     		strh	r3, [r4]	@ movhi
 2588              	.L243:
3285:TP2824/TP2802.c ****         else PTZ_pelco |= 0x04;
3286:TP2824/TP2802.c **** 
3287:TP2824/TP2802.c ****         dat <<= 1;
 2589              		.loc 1 3287 0 discriminator 2
 2590 0012 4000     		lsls	r0, r0, #1
 2591              	.LVL355:
 2592 0014 C0B2     		uxtb	r0, r0
 2593              	.LVL356:
3280:TP2824/TP2802.c ****     {
 2594              		.loc 1 3280 0 discriminator 2
 2595 0016 0132     		adds	r2, r2, #1
 2596              	.LVL357:
 2597 0018 D2B2     		uxtb	r2, r2
 2598              	.LVL358:
 2599              	.L241:
3280:TP2824/TP2802.c ****     {
 2600              		.loc 1 3280 0 is_stmt 0 discriminator 1
 2601 001a 072A     		cmp	r2, #7
 2602 001c 0BD8     		bhi	.L246
3282:TP2824/TP2802.c **** 
 2603              		.loc 1 3282 0 is_stmt 1
 2604 001e 0C4B     		ldr	r3, .L248
 2605 0020 1B88     		ldrh	r3, [r3]
 2606 0022 DB00     		lsls	r3, r3, #3
 2607 0024 9BB2     		uxth	r3, r3
3284:TP2824/TP2802.c ****         else PTZ_pelco |= 0x04;
 2608              		.loc 1 3284 0
 2609 0026 10F0800F 		tst	r0, #128
 2610 002a EED1     		bne	.L247
3285:TP2824/TP2802.c **** 
 2611              		.loc 1 3285 0
 2612 002c 43F00403 		orr	r3, r3, #4
ARM GAS  /tmp/ccFyOsmB.s 			page 109


 2613 0030 074C     		ldr	r4, .L248
 2614 0032 2380     		strh	r3, [r4]	@ movhi
 2615 0034 EDE7     		b	.L243
 2616              	.L246:
3288:TP2824/TP2802.c ****     }
3289:TP2824/TP2802.c ****     PTZ_buf[buf_index]= (PTZ_pelco>>16)&0xff;
 2617              		.loc 1 3289 0
 2618 0036 074B     		ldr	r3, .L248+4
 2619 0038 0022     		movs	r2, #0
 2620              	.LVL359:
 2621 003a 5A54     		strb	r2, [r3, r1]
3290:TP2824/TP2802.c ****     PTZ_buf[buf_index+1]= (PTZ_pelco>>8)&0xff;
 2622              		.loc 1 3290 0
 2623 003c 044A     		ldr	r2, .L248
 2624 003e 1288     		ldrh	r2, [r2]
 2625 0040 481C     		adds	r0, r1, #1
 2626              	.LVL360:
 2627 0042 140A     		lsrs	r4, r2, #8
 2628 0044 1C54     		strb	r4, [r3, r0]
3291:TP2824/TP2802.c ****     PTZ_buf[buf_index+2]= (PTZ_pelco)&0xff;
 2629              		.loc 1 3291 0
 2630 0046 0231     		adds	r1, r1, #2
 2631              	.LVL361:
 2632 0048 5A54     		strb	r2, [r3, r1]
3292:TP2824/TP2802.c **** }
 2633              		.loc 1 3292 0
 2634 004a 10BC     		pop	{r4}
 2635              	.LCFI22:
 2636              		.cfi_restore 4
 2637              		.cfi_def_cfa_offset 0
 2638 004c 7047     		bx	lr
 2639              	.L249:
 2640 004e 00BF     		.align	2
 2641              	.L248:
 2642 0050 00000000 		.word	PTZ_pelco
 2643 0054 00000000 		.word	PTZ_buf
 2644              		.cfi_endproc
 2645              	.LFE91:
 2647              		.section	.text.SwapBit,"ax",%progbits
 2648              		.align	1
 2649              		.global	SwapBit
 2650              		.syntax unified
 2651              		.thumb
 2652              		.thumb_func
 2653              		.fpu softvfp
 2655              	SwapBit:
 2656              	.LFB92:
3293:TP2824/TP2802.c **** unsigned char SwapBit(unsigned char dat, unsigned char buf_index)
3294:TP2824/TP2802.c **** {
 2657              		.loc 1 3294 0
 2658              		.cfi_startproc
 2659              		@ args = 0, pretend = 0, frame = 0
 2660              		@ frame_needed = 0, uses_anonymous_args = 0
 2661              		@ link register save eliminated.
 2662              	.LVL362:
 2663 0000 30B4     		push	{r4, r5}
 2664              	.LCFI23:
ARM GAS  /tmp/ccFyOsmB.s 			page 110


 2665              		.cfi_def_cfa_offset 8
 2666              		.cfi_offset 4, -8
 2667              		.cfi_offset 5, -4
 2668 0002 0246     		mov	r2, r0
 2669              	.LVL363:
3295:TP2824/TP2802.c ****     unsigned char i;
3296:TP2824/TP2802.c ****     unsigned char ret=0;
3297:TP2824/TP2802.c ****     crc=0;
 2670              		.loc 1 3297 0
 2671 0004 0023     		movs	r3, #0
 2672 0006 1448     		ldr	r0, .L256
 2673              	.LVL364:
 2674 0008 0370     		strb	r3, [r0]
 2675              	.LVL365:
3296:TP2824/TP2802.c ****     crc=0;
 2676              		.loc 1 3296 0
 2677 000a 1846     		mov	r0, r3
3298:TP2824/TP2802.c ****     for(i = 0; i < 8; i++ )
 2678              		.loc 1 3298 0
 2679 000c 03E0     		b	.L251
 2680              	.LVL366:
 2681              	.L252:
3299:TP2824/TP2802.c ****     {
3300:TP2824/TP2802.c ****         ret >>= 1;
3301:TP2824/TP2802.c ****         if(0x80 & dat)
3302:TP2824/TP2802.c ****         {
3303:TP2824/TP2802.c ****             ret |= 0x80;
3304:TP2824/TP2802.c ****             crc +=0x80;
3305:TP2824/TP2802.c ****         }
3306:TP2824/TP2802.c ****         dat <<= 1;
 2682              		.loc 1 3306 0 discriminator 2
 2683 000e 5200     		lsls	r2, r2, #1
 2684              	.LVL367:
 2685 0010 D2B2     		uxtb	r2, r2
 2686              	.LVL368:
3298:TP2824/TP2802.c ****     for(i = 0; i < 8; i++ )
 2687              		.loc 1 3298 0 discriminator 2
 2688 0012 0133     		adds	r3, r3, #1
 2689              	.LVL369:
 2690 0014 DBB2     		uxtb	r3, r3
 2691              	.LVL370:
 2692              	.L251:
3298:TP2824/TP2802.c ****     for(i = 0; i < 8; i++ )
 2693              		.loc 1 3298 0 is_stmt 0 discriminator 1
 2694 0016 072B     		cmp	r3, #7
 2695 0018 0BD8     		bhi	.L255
3300:TP2824/TP2802.c ****         if(0x80 & dat)
 2696              		.loc 1 3300 0 is_stmt 1
 2697 001a 4008     		lsrs	r0, r0, #1
 2698              	.LVL371:
3301:TP2824/TP2802.c ****         {
 2699              		.loc 1 3301 0
 2700 001c 12F0800F 		tst	r2, #128
 2701 0020 F5D0     		beq	.L252
3303:TP2824/TP2802.c ****             crc +=0x80;
 2702              		.loc 1 3303 0
 2703 0022 60F07F00 		orn	r0, r0, #127
ARM GAS  /tmp/ccFyOsmB.s 			page 111


 2704              	.LVL372:
 2705 0026 C0B2     		uxtb	r0, r0
 2706              	.LVL373:
3304:TP2824/TP2802.c ****         }
 2707              		.loc 1 3304 0
 2708 0028 0B4D     		ldr	r5, .L256
 2709 002a 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 2710 002c 803C     		subs	r4, r4, #128
 2711 002e 2C70     		strb	r4, [r5]
 2712 0030 EDE7     		b	.L252
 2713              	.L255:
3307:TP2824/TP2802.c ****     }
3308:TP2824/TP2802.c ****     PTZ_buf[buf_index]= 0x02;
 2714              		.loc 1 3308 0
 2715 0032 0A4B     		ldr	r3, .L256+4
 2716              	.LVL374:
 2717 0034 0222     		movs	r2, #2
 2718              	.LVL375:
 2719 0036 5A54     		strb	r2, [r3, r1]
3309:TP2824/TP2802.c ****     PTZ_buf[buf_index+1]= ret;
 2720              		.loc 1 3309 0
 2721 0038 4A1C     		adds	r2, r1, #1
 2722 003a 9854     		strb	r0, [r3, r2]
3310:TP2824/TP2802.c ****     PTZ_buf[buf_index+2]= 0x7f|crc;
 2723              		.loc 1 3310 0
 2724 003c 8C1C     		adds	r4, r1, #2
 2725 003e 064A     		ldr	r2, .L256
 2726 0040 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2727 0042 42F07F02 		orr	r2, r2, #127
 2728 0046 1A55     		strb	r2, [r3, r4]
3311:TP2824/TP2802.c ****     PTZ_buf[buf_index+3]= 0xff;
 2729              		.loc 1 3311 0
 2730 0048 CA1C     		adds	r2, r1, #3
 2731 004a FF24     		movs	r4, #255
 2732 004c 9C54     		strb	r4, [r3, r2]
3312:TP2824/TP2802.c ****     PTZ_buf[buf_index+4]= 0xfc;
 2733              		.loc 1 3312 0
 2734 004e 0431     		adds	r1, r1, #4
 2735              	.LVL376:
 2736 0050 FC22     		movs	r2, #252
 2737 0052 5A54     		strb	r2, [r3, r1]
3313:TP2824/TP2802.c ****     return ret;
3314:TP2824/TP2802.c **** }
 2738              		.loc 1 3314 0
 2739 0054 30BC     		pop	{r4, r5}
 2740              	.LCFI24:
 2741              		.cfi_restore 5
 2742              		.cfi_restore 4
 2743              		.cfi_def_cfa_offset 0
 2744 0056 7047     		bx	lr
 2745              	.L257:
 2746              		.align	2
 2747              	.L256:
 2748 0058 00000000 		.word	crc
 2749 005c 00000000 		.word	PTZ_buf
 2750              		.cfi_endproc
 2751              	.LFE92:
ARM GAS  /tmp/ccFyOsmB.s 			page 112


 2753              		.section	.text.AHDBitsReverse,"ax",%progbits
 2754              		.align	1
 2755              		.global	AHDBitsReverse
 2756              		.syntax unified
 2757              		.thumb
 2758              		.thumb_func
 2759              		.fpu softvfp
 2761              	AHDBitsReverse:
 2762              	.LFB93:
3315:TP2824/TP2802.c **** 
3316:TP2824/TP2802.c **** BYTE AHDBitsReverse(BYTE val)
3317:TP2824/TP2802.c **** {
 2763              		.loc 1 3317 0
 2764              		.cfi_startproc
 2765              		@ args = 0, pretend = 0, frame = 0
 2766              		@ frame_needed = 0, uses_anonymous_args = 0
 2767              		@ link register save eliminated.
 2768              	.LVL377:
 2769 0000 30B4     		push	{r4, r5}
 2770              	.LCFI25:
 2771              		.cfi_def_cfa_offset 8
 2772              		.cfi_offset 4, -8
 2773              		.cfi_offset 5, -4
 2774 0002 0446     		mov	r4, r0
 2775              	.LVL378:
3318:TP2824/TP2802.c **** 	BYTE i;
3319:TP2824/TP2802.c **** 	BYTE cnt=7;
3320:TP2824/TP2802.c **** 	BYTE bitflag=0x01;
3321:TP2824/TP2802.c **** 	BYTE rval=0x00;
 2776              		.loc 1 3321 0
 2777 0004 0020     		movs	r0, #0
 2778              	.LVL379:
3320:TP2824/TP2802.c **** 	BYTE rval=0x00;
 2779              		.loc 1 3320 0
 2780 0006 0125     		movs	r5, #1
3319:TP2824/TP2802.c **** 	BYTE bitflag=0x01;
 2781              		.loc 1 3319 0
 2782 0008 0721     		movs	r1, #7
3322:TP2824/TP2802.c **** 	for(i=0;i<4;i++){
 2783              		.loc 1 3322 0
 2784 000a 0246     		mov	r2, r0
 2785 000c 0BE0     		b	.L259
 2786              	.LVL380:
 2787              	.L260:
3323:TP2824/TP2802.c **** 		rval|=((val>>cnt)&bitflag);
 2788              		.loc 1 3323 0 discriminator 3
 2789 000e 44FA01F3 		asr	r3, r4, r1
 2790 0012 2B40     		ands	r3, r3, r5
 2791 0014 5BB2     		sxtb	r3, r3
 2792 0016 0343     		orrs	r3, r3, r0
 2793 0018 D8B2     		uxtb	r0, r3
 2794              	.LVL381:
3324:TP2824/TP2802.c **** 		bitflag<<=1;
 2795              		.loc 1 3324 0 discriminator 3
 2796 001a 6D00     		lsls	r5, r5, #1
 2797              	.LVL382:
 2798 001c EDB2     		uxtb	r5, r5
ARM GAS  /tmp/ccFyOsmB.s 			page 113


 2799              	.LVL383:
3325:TP2824/TP2802.c **** 		cnt-=2;
 2800              		.loc 1 3325 0 discriminator 3
 2801 001e 0239     		subs	r1, r1, #2
 2802              	.LVL384:
 2803 0020 C9B2     		uxtb	r1, r1
 2804              	.LVL385:
3322:TP2824/TP2802.c **** 		rval|=((val>>cnt)&bitflag);
 2805              		.loc 1 3322 0 discriminator 3
 2806 0022 0132     		adds	r2, r2, #1
 2807              	.LVL386:
 2808 0024 D2B2     		uxtb	r2, r2
 2809              	.LVL387:
 2810              	.L259:
3322:TP2824/TP2802.c **** 		rval|=((val>>cnt)&bitflag);
 2811              		.loc 1 3322 0 is_stmt 0 discriminator 1
 2812 0026 032A     		cmp	r2, #3
 2813 0028 F1D9     		bls	.L260
3326:TP2824/TP2802.c **** 	}
3327:TP2824/TP2802.c **** 	cnt=7;
3328:TP2824/TP2802.c **** 	bitflag=0x80;
 2814              		.loc 1 3328 0 is_stmt 1
 2815 002a 8025     		movs	r5, #128
 2816              	.LVL388:
3327:TP2824/TP2802.c **** 	bitflag=0x80;
 2817              		.loc 1 3327 0
 2818 002c 0721     		movs	r1, #7
 2819              	.LVL389:
3329:TP2824/TP2802.c **** 	for(i=0;i<4;i++){
 2820              		.loc 1 3329 0
 2821 002e 0022     		movs	r2, #0
 2822              	.LVL390:
 2823 0030 0AE0     		b	.L261
 2824              	.LVL391:
 2825              	.L262:
3330:TP2824/TP2802.c **** 		rval|=((val<<cnt)&bitflag);
 2826              		.loc 1 3330 0 discriminator 3
 2827 0032 04FA01F3 		lsl	r3, r4, r1
 2828 0036 2B40     		ands	r3, r3, r5
 2829 0038 5BB2     		sxtb	r3, r3
 2830 003a 0343     		orrs	r3, r3, r0
 2831 003c D8B2     		uxtb	r0, r3
 2832              	.LVL392:
3331:TP2824/TP2802.c **** 		bitflag>>=1;
 2833              		.loc 1 3331 0 discriminator 3
 2834 003e 6D08     		lsrs	r5, r5, #1
 2835              	.LVL393:
3332:TP2824/TP2802.c **** 		cnt-=2;
 2836              		.loc 1 3332 0 discriminator 3
 2837 0040 0239     		subs	r1, r1, #2
 2838              	.LVL394:
 2839 0042 C9B2     		uxtb	r1, r1
 2840              	.LVL395:
3329:TP2824/TP2802.c **** 		rval|=((val<<cnt)&bitflag);
 2841              		.loc 1 3329 0 discriminator 3
 2842 0044 0132     		adds	r2, r2, #1
 2843              	.LVL396:
ARM GAS  /tmp/ccFyOsmB.s 			page 114


 2844 0046 D2B2     		uxtb	r2, r2
 2845              	.LVL397:
 2846              	.L261:
3329:TP2824/TP2802.c **** 		rval|=((val<<cnt)&bitflag);
 2847              		.loc 1 3329 0 is_stmt 0 discriminator 1
 2848 0048 032A     		cmp	r2, #3
 2849 004a F2D9     		bls	.L262
3333:TP2824/TP2802.c **** 	}
3334:TP2824/TP2802.c **** 	return rval;
3335:TP2824/TP2802.c **** }
 2850              		.loc 1 3335 0 is_stmt 1
 2851 004c 30BC     		pop	{r4, r5}
 2852              	.LCFI26:
 2853              		.cfi_restore 5
 2854              		.cfi_restore 4
 2855              		.cfi_def_cfa_offset 0
 2856              	.LVL398:
 2857 004e 7047     		bx	lr
 2858              		.cfi_endproc
 2859              	.LFE93:
 2861              		.section	.text.HDC_SetData,"ax",%progbits
 2862              		.align	1
 2863              		.global	HDC_SetData
 2864              		.syntax unified
 2865              		.thumb
 2866              		.thumb_func
 2867              		.fpu softvfp
 2869              	HDC_SetData:
 2870              	.LFB94:
3336:TP2824/TP2802.c **** 
3337:TP2824/TP2802.c **** void HDC_SetData(tByte reg,tByte dat)
3338:TP2824/TP2802.c **** {
 2871              		.loc 1 3338 0
 2872              		.cfi_startproc
 2873              		@ args = 0, pretend = 0, frame = 0
 2874              		@ frame_needed = 0, uses_anonymous_args = 0
 2875              	.LVL399:
 2876 0000 38B5     		push	{r3, r4, r5, lr}
 2877              	.LCFI27:
 2878              		.cfi_def_cfa_offset 16
 2879              		.cfi_offset 3, -16
 2880              		.cfi_offset 4, -12
 2881              		.cfi_offset 5, -8
 2882              		.cfi_offset 14, -4
 2883 0002 0446     		mov	r4, r0
 2884 0004 0D46     		mov	r5, r1
3339:TP2824/TP2802.c ****     //line1
3340:TP2824/TP2802.c ****     //tp28xx_byte_write(reg + 0 , 0x00);
3341:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 0 , 0x02);
 2885              		.loc 1 3341 0
 2886 0006 0221     		movs	r1, #2
 2887              	.LVL400:
 2888 0008 FFF7FEFF 		bl	tp28xx_byte_write
 2889              	.LVL401:
3342:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 1 , SwapBit(dat,1));
 2890              		.loc 1 3342 0
 2891 000c 0121     		movs	r1, #1
ARM GAS  /tmp/ccFyOsmB.s 			page 115


 2892 000e 2846     		mov	r0, r5
 2893 0010 FFF7FEFF 		bl	SwapBit
 2894              	.LVL402:
 2895 0014 631C     		adds	r3, r4, #1
 2896 0016 0146     		mov	r1, r0
 2897 0018 D8B2     		uxtb	r0, r3
 2898 001a FFF7FEFF 		bl	tp28xx_byte_write
 2899              	.LVL403:
3343:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 2 , 0x7f|crc);
 2900              		.loc 1 3343 0
 2901 001e 094B     		ldr	r3, .L266
 2902 0020 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2903 0022 A01C     		adds	r0, r4, #2
 2904 0024 41F07F01 		orr	r1, r1, #127
 2905 0028 C0B2     		uxtb	r0, r0
 2906 002a FFF7FEFF 		bl	tp28xx_byte_write
 2907              	.LVL404:
3344:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 3 , 0xff);
 2908              		.loc 1 3344 0
 2909 002e E01C     		adds	r0, r4, #3
 2910 0030 FF21     		movs	r1, #255
 2911 0032 C0B2     		uxtb	r0, r0
 2912 0034 FFF7FEFF 		bl	tp28xx_byte_write
 2913              	.LVL405:
3345:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 4 , 0xfc);
 2914              		.loc 1 3345 0
 2915 0038 201D     		adds	r0, r4, #4
 2916 003a FC21     		movs	r1, #252
 2917 003c C0B2     		uxtb	r0, r0
 2918 003e FFF7FEFF 		bl	tp28xx_byte_write
 2919              	.LVL406:
3346:TP2824/TP2802.c **** }
 2920              		.loc 1 3346 0
 2921 0042 38BD     		pop	{r3, r4, r5, pc}
 2922              	.L267:
 2923              		.align	2
 2924              	.L266:
 2925 0044 00000000 		.word	crc
 2926              		.cfi_endproc
 2927              	.LFE94:
 2929              		.section	.text.HDA_SetData,"ax",%progbits
 2930              		.align	1
 2931              		.global	HDA_SetData
 2932              		.syntax unified
 2933              		.thumb
 2934              		.thumb_func
 2935              		.fpu softvfp
 2937              	HDA_SetData:
 2938              	.LFB95:
3347:TP2824/TP2802.c **** 
3348:TP2824/TP2802.c **** void HDA_SetData(tByte reg,tByte dat)
3349:TP2824/TP2802.c **** {
 2939              		.loc 1 3349 0
 2940              		.cfi_startproc
 2941              		@ args = 0, pretend = 0, frame = 0
 2942              		@ frame_needed = 0, uses_anonymous_args = 0
 2943              	.LVL407:
ARM GAS  /tmp/ccFyOsmB.s 			page 116


 2944 0000 38B5     		push	{r3, r4, r5, lr}
 2945              	.LCFI28:
 2946              		.cfi_def_cfa_offset 16
 2947              		.cfi_offset 3, -16
 2948              		.cfi_offset 4, -12
 2949              		.cfi_offset 5, -8
 2950              		.cfi_offset 14, -4
 2951 0002 0446     		mov	r4, r0
 2952 0004 0846     		mov	r0, r1
 2953              	.LVL408:
3350:TP2824/TP2802.c ****     ConvertData(dat, 0);
 2954              		.loc 1 3350 0
 2955 0006 0021     		movs	r1, #0
 2956              	.LVL409:
 2957 0008 FFF7FEFF 		bl	ConvertData
 2958              	.LVL410:
3351:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 0 , PTZ_buf[0]);
 2959              		.loc 1 3351 0
 2960 000c 074D     		ldr	r5, .L270
 2961 000e 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 2962 0010 2046     		mov	r0, r4
 2963 0012 FFF7FEFF 		bl	tp28xx_byte_write
 2964              	.LVL411:
3352:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 1 , PTZ_buf[1]);
 2965              		.loc 1 3352 0
 2966 0016 601C     		adds	r0, r4, #1
 2967 0018 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 2968 001a C0B2     		uxtb	r0, r0
 2969 001c FFF7FEFF 		bl	tp28xx_byte_write
 2970              	.LVL412:
3353:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 2 , PTZ_buf[2]);
 2971              		.loc 1 3353 0
 2972 0020 A01C     		adds	r0, r4, #2
 2973 0022 A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 2974 0024 C0B2     		uxtb	r0, r0
 2975 0026 FFF7FEFF 		bl	tp28xx_byte_write
 2976              	.LVL413:
3354:TP2824/TP2802.c **** }
 2977              		.loc 1 3354 0
 2978 002a 38BD     		pop	{r3, r4, r5, pc}
 2979              	.L271:
 2980              		.align	2
 2981              	.L270:
 2982 002c 00000000 		.word	PTZ_buf
 2983              		.cfi_endproc
 2984              	.LFE95:
 2986              		.section	.text.TVICommandToAHData,"ax",%progbits
 2987              		.align	1
 2988              		.global	TVICommandToAHData
 2989              		.syntax unified
 2990              		.thumb
 2991              		.thumb_func
 2992              		.fpu softvfp
 2994              	TVICommandToAHData:
 2995              	.LFB96:
3355:TP2824/TP2802.c **** 			
3356:TP2824/TP2802.c **** //20200511 COC  >>
ARM GAS  /tmp/ccFyOsmB.s 			page 117


3357:TP2824/TP2802.c **** void TVICommandToAHData(void)
3358:TP2824/TP2802.c **** {
 2996              		.loc 1 3358 0
 2997              		.cfi_startproc
 2998              		@ args = 0, pretend = 0, frame = 0
 2999              		@ frame_needed = 0, uses_anonymous_args = 0
 3000              		@ link register save eliminated.
3359:TP2824/TP2802.c **** 	AHDcmd3=TVI_speed;
 3001              		.loc 1 3359 0
 3002 0000 6D4B     		ldr	r3, .L317
 3003 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3004 0004 6D4B     		ldr	r3, .L317+4
 3005 0006 1A70     		strb	r2, [r3]
3360:TP2824/TP2802.c **** 	AHDcmd4=presetNum;
 3006              		.loc 1 3360 0
 3007 0008 6D4B     		ldr	r3, .L317+8
 3008 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3009 000c 6D4B     		ldr	r3, .L317+12
 3010 000e 1A70     		strb	r2, [r3]
3361:TP2824/TP2802.c **** 	
3362:TP2824/TP2802.c **** 	if(TVI_Command==0x17)//KEY_PRESET_CALL//"preset xx"
 3011              		.loc 1 3362 0
 3012 0010 6D4B     		ldr	r3, .L317+16
 3013 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3014 0014 172B     		cmp	r3, #23
 3015 0016 30D0     		beq	.L295
3363:TP2824/TP2802.c **** 	{
3364:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3365:TP2824/TP2802.c **** 		AHDcmd2=0x07;
3366:TP2824/TP2802.c **** 		AHDcmd3=0;
3367:TP2824/TP2802.c **** 	}
3368:TP2824/TP2802.c **** 	else if(TVI_Command==0x06)//KEY_TILT_UP
 3016              		.loc 1 3368 0
 3017 0018 062B     		cmp	r3, #6
 3018 001a 37D0     		beq	.L296
3369:TP2824/TP2802.c **** 	{
3370:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3371:TP2824/TP2802.c **** 		AHDcmd2=0x08;
3372:TP2824/TP2802.c **** 	}
3373:TP2824/TP2802.c **** 	else if(TVI_Command==0x07)//KEY_TILT_DOWN
 3019              		.loc 1 3373 0
 3020 001c 072B     		cmp	r3, #7
 3021 001e 3CD0     		beq	.L297
3374:TP2824/TP2802.c **** 	{
3375:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3376:TP2824/TP2802.c **** 		AHDcmd2=0x10;
3377:TP2824/TP2802.c **** 	}
3378:TP2824/TP2802.c **** 	else if(TVI_Command==0x09)//KEY_PAN_LEFT
 3022              		.loc 1 3378 0
 3023 0020 092B     		cmp	r3, #9
 3024 0022 41D0     		beq	.L298
3379:TP2824/TP2802.c **** 	{
3380:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3381:TP2824/TP2802.c **** 		AHDcmd2=0x04;
3382:TP2824/TP2802.c **** 	}
3383:TP2824/TP2802.c **** 	else if(TVI_Command==0x08)//KEY_PAN_RIGHT
 3025              		.loc 1 3383 0
ARM GAS  /tmp/ccFyOsmB.s 			page 118


 3026 0024 082B     		cmp	r3, #8
 3027 0026 46D0     		beq	.L299
3384:TP2824/TP2802.c **** 	{
3385:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3386:TP2824/TP2802.c **** 		AHDcmd2=0x02;
3387:TP2824/TP2802.c **** 	}		
3388:TP2824/TP2802.c **** 	else if(TVI_Command==0x0A)//KEY_TILT_UP + KEY_PAN_LEFT
 3028              		.loc 1 3388 0
 3029 0028 0A2B     		cmp	r3, #10
 3030 002a 4BD0     		beq	.L300
3389:TP2824/TP2802.c **** 	{
3390:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3391:TP2824/TP2802.c **** 		AHDcmd2=0x0c;
3392:TP2824/TP2802.c **** 	}
3393:TP2824/TP2802.c **** 	else if(TVI_Command==0x0C)//KEY_TILT_UP + KEY_PAN_RIGHT
 3031              		.loc 1 3393 0
 3032 002c 0C2B     		cmp	r3, #12
 3033 002e 50D0     		beq	.L301
3394:TP2824/TP2802.c **** 	{
3395:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3396:TP2824/TP2802.c **** 		AHDcmd2=0x0a;
3397:TP2824/TP2802.c **** 	}
3398:TP2824/TP2802.c **** 	else if(TVI_Command==0x0B)//KEY_TILT_DOWN + KEY_PAN_LEFT
 3034              		.loc 1 3398 0
 3035 0030 0B2B     		cmp	r3, #11
 3036 0032 55D0     		beq	.L302
3399:TP2824/TP2802.c **** 	{
3400:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3401:TP2824/TP2802.c **** 		AHDcmd2=0x14;
3402:TP2824/TP2802.c **** 	}
3403:TP2824/TP2802.c **** 	else if(TVI_Command==0x0D)//KEY_TILT_DOWN + KEY_PAN_RIGHT
 3037              		.loc 1 3403 0
 3038 0034 0D2B     		cmp	r3, #13
 3039 0036 5AD0     		beq	.L303
3404:TP2824/TP2802.c **** 	{
3405:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3406:TP2824/TP2802.c **** 		AHDcmd2=0x12;
3407:TP2824/TP2802.c **** 	}		
3408:TP2824/TP2802.c **** 	else if(TVI_Command==0x0F)//KEY_IRIS_OPEN / OSD_MENU
 3040              		.loc 1 3408 0
 3041 0038 0F2B     		cmp	r3, #15
 3042 003a 5FD0     		beq	.L304
3409:TP2824/TP2802.c **** 	{
3410:TP2824/TP2802.c **** 		AHDcmd1=0x02;
3411:TP2824/TP2802.c **** 		AHDcmd2=0x00;
3412:TP2824/TP2802.c **** 	}
3413:TP2824/TP2802.c **** 	else if(TVI_Command==0x0E)//KEY_IRIS_CLOSE
 3043              		.loc 1 3413 0
 3044 003c 0E2B     		cmp	r3, #14
 3045 003e 64D0     		beq	.L305
3414:TP2824/TP2802.c **** 	{
3415:TP2824/TP2802.c **** 		AHDcmd1=0x04;
3416:TP2824/TP2802.c **** 		AHDcmd2=0x00;
3417:TP2824/TP2802.c **** 	}
3418:TP2824/TP2802.c **** 	else if(TVI_Command==0x11)//KEY_FOCUS_FAR
 3046              		.loc 1 3418 0
 3047 0040 112B     		cmp	r3, #17
ARM GAS  /tmp/ccFyOsmB.s 			page 119


 3048 0042 69D0     		beq	.L306
3419:TP2824/TP2802.c **** 	{
3420:TP2824/TP2802.c **** 		AHDcmd1=0x01;
3421:TP2824/TP2802.c **** 		AHDcmd2=0x00;
3422:TP2824/TP2802.c **** 	}
3423:TP2824/TP2802.c **** 	else if(TVI_Command==0x10)//KEY_FOCUS_NEAR
 3049              		.loc 1 3423 0
 3050 0044 102B     		cmp	r3, #16
 3051 0046 6ED0     		beq	.L307
3424:TP2824/TP2802.c **** 	{
3425:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3426:TP2824/TP2802.c **** 		AHDcmd2=0x80;
3427:TP2824/TP2802.c **** 	}
3428:TP2824/TP2802.c **** 	else if(TVI_Command==0x13)//KEY_ZOOM_TELE
 3052              		.loc 1 3428 0
 3053 0048 132B     		cmp	r3, #19
 3054 004a 73D0     		beq	.L308
3429:TP2824/TP2802.c **** 	{
3430:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3431:TP2824/TP2802.c **** 		AHDcmd2=0x20;
3432:TP2824/TP2802.c **** 	}
3433:TP2824/TP2802.c **** 	else if(TVI_Command==0x12)//KEY_ZOOM_WIDE
 3055              		.loc 1 3433 0
 3056 004c 122B     		cmp	r3, #18
 3057 004e 78D0     		beq	.L309
3434:TP2824/TP2802.c **** 	{
3435:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3436:TP2824/TP2802.c **** 		AHDcmd2=0x40;
3437:TP2824/TP2802.c **** 	}
3438:TP2824/TP2802.c **** 	else if(TVI_Command==0x14)//KEY_MOTOR_STOP
 3058              		.loc 1 3438 0
 3059 0050 142B     		cmp	r3, #20
 3060 0052 7DD0     		beq	.L310
3439:TP2824/TP2802.c **** 	{
3440:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3441:TP2824/TP2802.c **** 		AHDcmd2=0x00;
3442:TP2824/TP2802.c **** 		AHDcmd3=0x00;
3443:TP2824/TP2802.c **** 		AHDcmd4=0x00;
3444:TP2824/TP2802.c **** 	}
3445:TP2824/TP2802.c **** 	else if(TVI_Command==0x21)//TOA  PRESET SAVE
 3061              		.loc 1 3445 0
 3062 0054 212B     		cmp	r3, #33
 3063 0056 00F08580 		beq	.L311
3446:TP2824/TP2802.c **** 	{
3447:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3448:TP2824/TP2802.c **** 		AHDcmd2=0x03;
3449:TP2824/TP2802.c **** 	}
3450:TP2824/TP2802.c **** 	else if(TVI_Command==0x22)//TOA  PRESET LOAD
 3064              		.loc 1 3450 0
 3065 005a 222B     		cmp	r3, #34
 3066 005c 00F08980 		beq	.L312
3451:TP2824/TP2802.c **** 	{
3452:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3453:TP2824/TP2802.c **** 		AHDcmd2=0x07;
3454:TP2824/TP2802.c **** 	}
3455:TP2824/TP2802.c **** 	else if(TVI_Command==0x23)//TOA  Auto Scan
 3067              		.loc 1 3455 0
ARM GAS  /tmp/ccFyOsmB.s 			page 120


 3068 0060 232B     		cmp	r3, #35
 3069 0062 00F08D80 		beq	.L313
3456:TP2824/TP2802.c **** 	{
3457:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3458:TP2824/TP2802.c **** 		AHDcmd2=0x07;
3459:TP2824/TP2802.c **** 	}
3460:TP2824/TP2802.c **** 	else if(TVI_Command==0x24)//TOA  Group Tour
 3070              		.loc 1 3460 0
 3071 0066 242B     		cmp	r3, #36
 3072 0068 00F09180 		beq	.L314
3461:TP2824/TP2802.c **** 	{
3462:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3463:TP2824/TP2802.c **** 		AHDcmd2=0x07;
3464:TP2824/TP2802.c **** 	}
3465:TP2824/TP2802.c **** 	else if(TVI_Command==0x25)//TOA  OSD MENU
 3073              		.loc 1 3465 0
 3074 006c 252B     		cmp	r3, #37
 3075 006e 00F09580 		beq	.L315
3466:TP2824/TP2802.c **** 	{
3467:TP2824/TP2802.c **** //		AHDcmd1=0x00;
3468:TP2824/TP2802.c **** //		AHDcmd2=0x07;
3469:TP2824/TP2802.c **** 
3470:TP2824/TP2802.c **** 		AHDcmd1=0x02;
3471:TP2824/TP2802.c **** 		AHDcmd2=0x00;
3472:TP2824/TP2802.c **** 	}
3473:TP2824/TP2802.c **** 	else if(TVI_Command==0x26)//TOA  Focus Adjust
 3076              		.loc 1 3473 0
 3077 0072 262B     		cmp	r3, #38
 3078 0074 00F09980 		beq	.L316
 3079              	.L272:
3474:TP2824/TP2802.c **** 	{
3475:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3476:TP2824/TP2802.c **** 		AHDcmd2=0x07;
3477:TP2824/TP2802.c **** 	}
3478:TP2824/TP2802.c **** 
3479:TP2824/TP2802.c **** }
 3080              		.loc 1 3479 0
 3081 0078 7047     		bx	lr
 3082              	.L295:
3364:TP2824/TP2802.c **** 		AHDcmd2=0x07;
 3083              		.loc 1 3364 0
 3084 007a 0023     		movs	r3, #0
 3085 007c 534A     		ldr	r2, .L317+20
 3086 007e 1370     		strb	r3, [r2]
3365:TP2824/TP2802.c **** 		AHDcmd3=0;
 3087              		.loc 1 3365 0
 3088 0080 534A     		ldr	r2, .L317+24
 3089 0082 0721     		movs	r1, #7
 3090 0084 1170     		strb	r1, [r2]
3366:TP2824/TP2802.c **** 	}
 3091              		.loc 1 3366 0
 3092 0086 4D4A     		ldr	r2, .L317+4
 3093 0088 1370     		strb	r3, [r2]
 3094 008a 7047     		bx	lr
 3095              	.L296:
3370:TP2824/TP2802.c **** 		AHDcmd2=0x08;
 3096              		.loc 1 3370 0
ARM GAS  /tmp/ccFyOsmB.s 			page 121


 3097 008c 4F4B     		ldr	r3, .L317+20
 3098 008e 0022     		movs	r2, #0
 3099 0090 1A70     		strb	r2, [r3]
3371:TP2824/TP2802.c **** 	}
 3100              		.loc 1 3371 0
 3101 0092 4F4B     		ldr	r3, .L317+24
 3102 0094 0822     		movs	r2, #8
 3103 0096 1A70     		strb	r2, [r3]
 3104 0098 7047     		bx	lr
 3105              	.L297:
3375:TP2824/TP2802.c **** 		AHDcmd2=0x10;
 3106              		.loc 1 3375 0
 3107 009a 4C4B     		ldr	r3, .L317+20
 3108 009c 0022     		movs	r2, #0
 3109 009e 1A70     		strb	r2, [r3]
3376:TP2824/TP2802.c **** 	}
 3110              		.loc 1 3376 0
 3111 00a0 4B4B     		ldr	r3, .L317+24
 3112 00a2 1022     		movs	r2, #16
 3113 00a4 1A70     		strb	r2, [r3]
 3114 00a6 7047     		bx	lr
 3115              	.L298:
3380:TP2824/TP2802.c **** 		AHDcmd2=0x04;
 3116              		.loc 1 3380 0
 3117 00a8 484B     		ldr	r3, .L317+20
 3118 00aa 0022     		movs	r2, #0
 3119 00ac 1A70     		strb	r2, [r3]
3381:TP2824/TP2802.c **** 	}
 3120              		.loc 1 3381 0
 3121 00ae 484B     		ldr	r3, .L317+24
 3122 00b0 0422     		movs	r2, #4
 3123 00b2 1A70     		strb	r2, [r3]
 3124 00b4 7047     		bx	lr
 3125              	.L299:
3385:TP2824/TP2802.c **** 		AHDcmd2=0x02;
 3126              		.loc 1 3385 0
 3127 00b6 454B     		ldr	r3, .L317+20
 3128 00b8 0022     		movs	r2, #0
 3129 00ba 1A70     		strb	r2, [r3]
3386:TP2824/TP2802.c **** 	}		
 3130              		.loc 1 3386 0
 3131 00bc 444B     		ldr	r3, .L317+24
 3132 00be 0222     		movs	r2, #2
 3133 00c0 1A70     		strb	r2, [r3]
 3134 00c2 7047     		bx	lr
 3135              	.L300:
3390:TP2824/TP2802.c **** 		AHDcmd2=0x0c;
 3136              		.loc 1 3390 0
 3137 00c4 414B     		ldr	r3, .L317+20
 3138 00c6 0022     		movs	r2, #0
 3139 00c8 1A70     		strb	r2, [r3]
3391:TP2824/TP2802.c **** 	}
 3140              		.loc 1 3391 0
 3141 00ca 414B     		ldr	r3, .L317+24
 3142 00cc 0C22     		movs	r2, #12
 3143 00ce 1A70     		strb	r2, [r3]
 3144 00d0 7047     		bx	lr
ARM GAS  /tmp/ccFyOsmB.s 			page 122


 3145              	.L301:
3395:TP2824/TP2802.c **** 		AHDcmd2=0x0a;
 3146              		.loc 1 3395 0
 3147 00d2 3E4B     		ldr	r3, .L317+20
 3148 00d4 0022     		movs	r2, #0
 3149 00d6 1A70     		strb	r2, [r3]
3396:TP2824/TP2802.c **** 	}
 3150              		.loc 1 3396 0
 3151 00d8 3D4B     		ldr	r3, .L317+24
 3152 00da 0A22     		movs	r2, #10
 3153 00dc 1A70     		strb	r2, [r3]
 3154 00de 7047     		bx	lr
 3155              	.L302:
3400:TP2824/TP2802.c **** 		AHDcmd2=0x14;
 3156              		.loc 1 3400 0
 3157 00e0 3A4B     		ldr	r3, .L317+20
 3158 00e2 0022     		movs	r2, #0
 3159 00e4 1A70     		strb	r2, [r3]
3401:TP2824/TP2802.c **** 	}
 3160              		.loc 1 3401 0
 3161 00e6 3A4B     		ldr	r3, .L317+24
 3162 00e8 1422     		movs	r2, #20
 3163 00ea 1A70     		strb	r2, [r3]
 3164 00ec 7047     		bx	lr
 3165              	.L303:
3405:TP2824/TP2802.c **** 		AHDcmd2=0x12;
 3166              		.loc 1 3405 0
 3167 00ee 374B     		ldr	r3, .L317+20
 3168 00f0 0022     		movs	r2, #0
 3169 00f2 1A70     		strb	r2, [r3]
3406:TP2824/TP2802.c **** 	}		
 3170              		.loc 1 3406 0
 3171 00f4 364B     		ldr	r3, .L317+24
 3172 00f6 1222     		movs	r2, #18
 3173 00f8 1A70     		strb	r2, [r3]
 3174 00fa 7047     		bx	lr
 3175              	.L304:
3410:TP2824/TP2802.c **** 		AHDcmd2=0x00;
 3176              		.loc 1 3410 0
 3177 00fc 334B     		ldr	r3, .L317+20
 3178 00fe 0222     		movs	r2, #2
 3179 0100 1A70     		strb	r2, [r3]
3411:TP2824/TP2802.c **** 	}
 3180              		.loc 1 3411 0
 3181 0102 334B     		ldr	r3, .L317+24
 3182 0104 0022     		movs	r2, #0
 3183 0106 1A70     		strb	r2, [r3]
 3184 0108 7047     		bx	lr
 3185              	.L305:
3415:TP2824/TP2802.c **** 		AHDcmd2=0x00;
 3186              		.loc 1 3415 0
 3187 010a 304B     		ldr	r3, .L317+20
 3188 010c 0422     		movs	r2, #4
 3189 010e 1A70     		strb	r2, [r3]
3416:TP2824/TP2802.c **** 	}
 3190              		.loc 1 3416 0
 3191 0110 2F4B     		ldr	r3, .L317+24
ARM GAS  /tmp/ccFyOsmB.s 			page 123


 3192 0112 0022     		movs	r2, #0
 3193 0114 1A70     		strb	r2, [r3]
 3194 0116 7047     		bx	lr
 3195              	.L306:
3420:TP2824/TP2802.c **** 		AHDcmd2=0x00;
 3196              		.loc 1 3420 0
 3197 0118 2C4B     		ldr	r3, .L317+20
 3198 011a 0122     		movs	r2, #1
 3199 011c 1A70     		strb	r2, [r3]
3421:TP2824/TP2802.c **** 	}
 3200              		.loc 1 3421 0
 3201 011e 2C4B     		ldr	r3, .L317+24
 3202 0120 0022     		movs	r2, #0
 3203 0122 1A70     		strb	r2, [r3]
 3204 0124 7047     		bx	lr
 3205              	.L307:
3425:TP2824/TP2802.c **** 		AHDcmd2=0x80;
 3206              		.loc 1 3425 0
 3207 0126 294B     		ldr	r3, .L317+20
 3208 0128 0022     		movs	r2, #0
 3209 012a 1A70     		strb	r2, [r3]
3426:TP2824/TP2802.c **** 	}
 3210              		.loc 1 3426 0
 3211 012c 284B     		ldr	r3, .L317+24
 3212 012e 8022     		movs	r2, #128
 3213 0130 1A70     		strb	r2, [r3]
 3214 0132 7047     		bx	lr
 3215              	.L308:
3430:TP2824/TP2802.c **** 		AHDcmd2=0x20;
 3216              		.loc 1 3430 0
 3217 0134 254B     		ldr	r3, .L317+20
 3218 0136 0022     		movs	r2, #0
 3219 0138 1A70     		strb	r2, [r3]
3431:TP2824/TP2802.c **** 	}
 3220              		.loc 1 3431 0
 3221 013a 254B     		ldr	r3, .L317+24
 3222 013c 2022     		movs	r2, #32
 3223 013e 1A70     		strb	r2, [r3]
 3224 0140 7047     		bx	lr
 3225              	.L309:
3435:TP2824/TP2802.c **** 		AHDcmd2=0x40;
 3226              		.loc 1 3435 0
 3227 0142 224B     		ldr	r3, .L317+20
 3228 0144 0022     		movs	r2, #0
 3229 0146 1A70     		strb	r2, [r3]
3436:TP2824/TP2802.c **** 	}
 3230              		.loc 1 3436 0
 3231 0148 214B     		ldr	r3, .L317+24
 3232 014a 4022     		movs	r2, #64
 3233 014c 1A70     		strb	r2, [r3]
 3234 014e 7047     		bx	lr
 3235              	.L310:
3440:TP2824/TP2802.c **** 		AHDcmd2=0x00;
 3236              		.loc 1 3440 0
 3237 0150 0023     		movs	r3, #0
 3238 0152 1E4A     		ldr	r2, .L317+20
 3239 0154 1370     		strb	r3, [r2]
ARM GAS  /tmp/ccFyOsmB.s 			page 124


3441:TP2824/TP2802.c **** 		AHDcmd3=0x00;
 3240              		.loc 1 3441 0
 3241 0156 1E4A     		ldr	r2, .L317+24
 3242 0158 1370     		strb	r3, [r2]
3442:TP2824/TP2802.c **** 		AHDcmd4=0x00;
 3243              		.loc 1 3442 0
 3244 015a 184A     		ldr	r2, .L317+4
 3245 015c 1370     		strb	r3, [r2]
3443:TP2824/TP2802.c **** 	}
 3246              		.loc 1 3443 0
 3247 015e 194A     		ldr	r2, .L317+12
 3248 0160 1370     		strb	r3, [r2]
 3249 0162 7047     		bx	lr
 3250              	.L311:
3447:TP2824/TP2802.c **** 		AHDcmd2=0x03;
 3251              		.loc 1 3447 0
 3252 0164 194B     		ldr	r3, .L317+20
 3253 0166 0022     		movs	r2, #0
 3254 0168 1A70     		strb	r2, [r3]
3448:TP2824/TP2802.c **** 	}
 3255              		.loc 1 3448 0
 3256 016a 194B     		ldr	r3, .L317+24
 3257 016c 0322     		movs	r2, #3
 3258 016e 1A70     		strb	r2, [r3]
 3259 0170 7047     		bx	lr
 3260              	.L312:
3452:TP2824/TP2802.c **** 		AHDcmd2=0x07;
 3261              		.loc 1 3452 0
 3262 0172 164B     		ldr	r3, .L317+20
 3263 0174 0022     		movs	r2, #0
 3264 0176 1A70     		strb	r2, [r3]
3453:TP2824/TP2802.c **** 	}
 3265              		.loc 1 3453 0
 3266 0178 154B     		ldr	r3, .L317+24
 3267 017a 0722     		movs	r2, #7
 3268 017c 1A70     		strb	r2, [r3]
 3269 017e 7047     		bx	lr
 3270              	.L313:
3457:TP2824/TP2802.c **** 		AHDcmd2=0x07;
 3271              		.loc 1 3457 0
 3272 0180 124B     		ldr	r3, .L317+20
 3273 0182 0022     		movs	r2, #0
 3274 0184 1A70     		strb	r2, [r3]
3458:TP2824/TP2802.c **** 	}
 3275              		.loc 1 3458 0
 3276 0186 124B     		ldr	r3, .L317+24
 3277 0188 0722     		movs	r2, #7
 3278 018a 1A70     		strb	r2, [r3]
 3279 018c 7047     		bx	lr
 3280              	.L314:
3462:TP2824/TP2802.c **** 		AHDcmd2=0x07;
 3281              		.loc 1 3462 0
 3282 018e 0F4B     		ldr	r3, .L317+20
 3283 0190 0022     		movs	r2, #0
 3284 0192 1A70     		strb	r2, [r3]
3463:TP2824/TP2802.c **** 	}
 3285              		.loc 1 3463 0
ARM GAS  /tmp/ccFyOsmB.s 			page 125


 3286 0194 0E4B     		ldr	r3, .L317+24
 3287 0196 0722     		movs	r2, #7
 3288 0198 1A70     		strb	r2, [r3]
 3289 019a 7047     		bx	lr
 3290              	.L315:
3470:TP2824/TP2802.c **** 		AHDcmd2=0x00;
 3291              		.loc 1 3470 0
 3292 019c 0B4B     		ldr	r3, .L317+20
 3293 019e 0222     		movs	r2, #2
 3294 01a0 1A70     		strb	r2, [r3]
3471:TP2824/TP2802.c **** 	}
 3295              		.loc 1 3471 0
 3296 01a2 0B4B     		ldr	r3, .L317+24
 3297 01a4 0022     		movs	r2, #0
 3298 01a6 1A70     		strb	r2, [r3]
 3299 01a8 7047     		bx	lr
 3300              	.L316:
3475:TP2824/TP2802.c **** 		AHDcmd2=0x07;
 3301              		.loc 1 3475 0
 3302 01aa 084B     		ldr	r3, .L317+20
 3303 01ac 0022     		movs	r2, #0
 3304 01ae 1A70     		strb	r2, [r3]
3476:TP2824/TP2802.c **** 	}
 3305              		.loc 1 3476 0
 3306 01b0 074B     		ldr	r3, .L317+24
 3307 01b2 0722     		movs	r2, #7
 3308 01b4 1A70     		strb	r2, [r3]
 3309              		.loc 1 3479 0
 3310 01b6 5FE7     		b	.L272
 3311              	.L318:
 3312              		.align	2
 3313              	.L317:
 3314 01b8 00000000 		.word	TVI_speed
 3315 01bc 00000000 		.word	AHDcmd3
 3316 01c0 00000000 		.word	presetNum
 3317 01c4 00000000 		.word	AHDcmd4
 3318 01c8 00000000 		.word	TVI_Command
 3319 01cc 00000000 		.word	AHDcmd1
 3320 01d0 00000000 		.word	AHDcmd2
 3321              		.cfi_endproc
 3322              	.LFE96:
 3324              		.section	.text.ACPSTOPCOMMAND,"ax",%progbits
 3325              		.align	1
 3326              		.global	ACPSTOPCOMMAND
 3327              		.syntax unified
 3328              		.thumb
 3329              		.thumb_func
 3330              		.fpu softvfp
 3332              	ACPSTOPCOMMAND:
 3333              	.LFB97:
3480:TP2824/TP2802.c **** void ACPSTOPCOMMAND(void)
3481:TP2824/TP2802.c **** {
 3334              		.loc 1 3481 0
 3335              		.cfi_startproc
 3336              		@ args = 0, pretend = 0, frame = 0
 3337              		@ frame_needed = 0, uses_anonymous_args = 0
 3338 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccFyOsmB.s 			page 126


 3339              	.LCFI29:
 3340              		.cfi_def_cfa_offset 8
 3341              		.cfi_offset 3, -8
 3342              		.cfi_offset 14, -4
3482:TP2824/TP2802.c **** 	//stop command
3483:TP2824/TP2802.c **** 	tp28xx_byte_write(0x5a, 0x00);
 3343              		.loc 1 3483 0
 3344 0002 0021     		movs	r1, #0
 3345 0004 5A20     		movs	r0, #90
 3346 0006 FFF7FEFF 		bl	tp28xx_byte_write
 3347              	.LVL414:
3484:TP2824/TP2802.c **** 	tp28xx_byte_write(0x60, 0x00);
 3348              		.loc 1 3484 0
 3349 000a 0021     		movs	r1, #0
 3350 000c 6020     		movs	r0, #96
 3351 000e FFF7FEFF 		bl	tp28xx_byte_write
 3352              	.LVL415:
3485:TP2824/TP2802.c **** 	tp28xx_byte_write(0x66, 0x00);
 3353              		.loc 1 3485 0
 3354 0012 0021     		movs	r1, #0
 3355 0014 6620     		movs	r0, #102
 3356 0016 FFF7FEFF 		bl	tp28xx_byte_write
 3357              	.LVL416:
3486:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6c, 0x00);
 3358              		.loc 1 3486 0
 3359 001a 0021     		movs	r1, #0
 3360 001c 6C20     		movs	r0, #108
 3361 001e FFF7FEFF 		bl	tp28xx_byte_write
 3362              	.LVL417:
3487:TP2824/TP2802.c **** 	
3488:TP2824/TP2802.c **** 	
3489:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6f, 0x45);
 3363              		.loc 1 3489 0
 3364 0022 4521     		movs	r1, #69
 3365 0024 6F20     		movs	r0, #111
 3366 0026 FFF7FEFF 		bl	tp28xx_byte_write
 3367              	.LVL418:
3490:TP2824/TP2802.c **** 	//delay(5);//50ms	//20210514
3491:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6f, 0x44);
 3368              		.loc 1 3491 0
 3369 002a 4421     		movs	r1, #68
 3370 002c 6F20     		movs	r0, #111
 3371 002e FFF7FEFF 		bl	tp28xx_byte_write
 3372              	.LVL419:
3492:TP2824/TP2802.c **** 	
3493:TP2824/TP2802.c **** 	HAL_Delay(35);		 //Delay 1Vsync(~33.3msec)//20210514
 3373              		.loc 1 3493 0
 3374 0032 2320     		movs	r0, #35
 3375 0034 FFF7FEFF 		bl	HAL_Delay
 3376              	.LVL420:
3494:TP2824/TP2802.c **** 
3495:TP2824/TP2802.c **** 	//stop command
3496:TP2824/TP2802.c **** 	tp28xx_byte_write(0x5a, 0x00);
 3377              		.loc 1 3496 0
 3378 0038 0021     		movs	r1, #0
 3379 003a 5A20     		movs	r0, #90
 3380 003c FFF7FEFF 		bl	tp28xx_byte_write
ARM GAS  /tmp/ccFyOsmB.s 			page 127


 3381              	.LVL421:
3497:TP2824/TP2802.c **** 	tp28xx_byte_write(0x60, 0x00);
 3382              		.loc 1 3497 0
 3383 0040 0021     		movs	r1, #0
 3384 0042 6020     		movs	r0, #96
 3385 0044 FFF7FEFF 		bl	tp28xx_byte_write
 3386              	.LVL422:
3498:TP2824/TP2802.c **** 	tp28xx_byte_write(0x66, 0x00);
 3387              		.loc 1 3498 0
 3388 0048 0021     		movs	r1, #0
 3389 004a 6620     		movs	r0, #102
 3390 004c FFF7FEFF 		bl	tp28xx_byte_write
 3391              	.LVL423:
3499:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6c, 0x00);
 3392              		.loc 1 3499 0
 3393 0050 0021     		movs	r1, #0
 3394 0052 6C20     		movs	r0, #108
 3395 0054 FFF7FEFF 		bl	tp28xx_byte_write
 3396              	.LVL424:
3500:TP2824/TP2802.c **** 
3501:TP2824/TP2802.c **** 
3502:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6f, 0x45);
 3397              		.loc 1 3502 0
 3398 0058 4521     		movs	r1, #69
 3399 005a 6F20     		movs	r0, #111
 3400 005c FFF7FEFF 		bl	tp28xx_byte_write
 3401              	.LVL425:
3503:TP2824/TP2802.c **** 	//delay(5);//50ms	//20210514
3504:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6f, 0x44);
 3402              		.loc 1 3504 0
 3403 0060 4421     		movs	r1, #68
 3404 0062 6F20     		movs	r0, #111
 3405 0064 FFF7FEFF 		bl	tp28xx_byte_write
 3406              	.LVL426:
3505:TP2824/TP2802.c **** 
3506:TP2824/TP2802.c **** 	HAL_Delay(35);		 //Delay 1Vsync(~33.3msec)//20210514
 3407              		.loc 1 3506 0
 3408 0068 2320     		movs	r0, #35
 3409 006a FFF7FEFF 		bl	HAL_Delay
 3410              	.LVL427:
3507:TP2824/TP2802.c **** 
3508:TP2824/TP2802.c **** }
 3411              		.loc 1 3508 0
 3412 006e 08BD     		pop	{r3, pc}
 3413              		.cfi_endproc
 3414              	.LFE97:
 3416              		.section	.text.Get_2824cIrq,"ax",%progbits
 3417              		.align	1
 3418              		.global	Get_2824cIrq
 3419              		.syntax unified
 3420              		.thumb
 3421              		.thumb_func
 3422              		.fpu softvfp
 3424              	Get_2824cIrq:
 3425              	.LFB98:
3509:TP2824/TP2802.c **** 	
3510:TP2824/TP2802.c **** void Get_2824cIrq(void)//cocrx
ARM GAS  /tmp/ccFyOsmB.s 			page 128


3511:TP2824/TP2802.c **** {
 3426              		.loc 1 3511 0
 3427              		.cfi_startproc
 3428              		@ args = 0, pretend = 0, frame = 0
 3429              		@ frame_needed = 0, uses_anonymous_args = 0
3512:TP2824/TP2802.c **** 	tByte addr,pcnt,RegB6;
3513:TP2824/TP2802.c **** 	//tByte temp;
3514:TP2824/TP2802.c **** /*
3515:TP2824/TP2802.c **** 	if((count[0] > (EQ_COUNT+2) && state[0] == VIDEO_LOCKED) || 
3516:TP2824/TP2802.c **** 	    (count[1] > (EQ_COUNT+2) && state[1] == VIDEO_LOCKED) || 
3517:TP2824/TP2802.c **** 	    (count[2] > (EQ_COUNT+2) && state[2] == VIDEO_LOCKED) ||
3518:TP2824/TP2802.c **** 	    (count[3] > (EQ_COUNT+2) && state[3] == VIDEO_LOCKED))
3519:TP2824/TP2802.c **** 	*/
3520:TP2824/TP2802.c **** 		if((count[0] > (EQ_COUNT+2) && state[0] == VIDEO_LOCKED))
 3430              		.loc 1 3520 0
 3431 0000 B54B     		ldr	r3, .L398
 3432 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3433 0004 162B     		cmp	r3, #22
 3434 0006 40F2D583 		bls	.L388
3511:TP2824/TP2802.c **** 	tByte addr,pcnt,RegB6;
 3435              		.loc 1 3511 0 discriminator 1
 3436 000a 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3437              	.LCFI30:
 3438              		.cfi_def_cfa_offset 24
 3439              		.cfi_offset 4, -24
 3440              		.cfi_offset 5, -20
 3441              		.cfi_offset 6, -16
 3442              		.cfi_offset 7, -12
 3443              		.cfi_offset 8, -8
 3444              		.cfi_offset 14, -4
 3445 000e 82B0     		sub	sp, sp, #8
 3446              	.LCFI31:
 3447              		.cfi_def_cfa_offset 32
 3448              		.loc 1 3520 0 discriminator 1
 3449 0010 B24B     		ldr	r3, .L398+4
 3450 0012 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 3451 0014 022E     		cmp	r6, #2
 3452 0016 02D0     		beq	.L391
 3453              	.L321:
3521:TP2824/TP2802.c ****        {       
3522:TP2824/TP2802.c ****       			 
3523:TP2824/TP2802.c **** 		SetRegPage(0x04);
3524:TP2824/TP2802.c **** 		delay(1);//5ms
3525:TP2824/TP2802.c **** 
3526:TP2824/TP2802.c **** 			RegB6=tp28xx_byte_read(0xB6);
3527:TP2824/TP2802.c **** 			tp28xx_byte_read(0xB5);
3528:TP2824/TP2802.c **** 			tp28xx_byte_read(0xB4);
3529:TP2824/TP2802.c **** 
3530:TP2824/TP2802.c **** 			#if 1
3531:TP2824/TP2802.c **** //PTZ RX	//TVI_1080P COC
3532:TP2824/TP2802.c **** 		if((RegB6&0xF0) != 0)//VnRXIRQ
3533:TP2824/TP2802.c **** 		{
3534:TP2824/TP2802.c **** 			//V4RXIRQ---
3535:TP2824/TP2802.c **** 			if((RegB6&0x80) != 0  && count[3] > (EQ_COUNT+2)/*&&(state[3] == VIDEO_LOCKED)&&std[3]==TVI && m
3536:TP2824/TP2802.c **** 			{
3537:TP2824/TP2802.c **** 				SetRegPage(0x03);
3538:TP2824/TP2802.c **** 				//delay(1);//5ms
ARM GAS  /tmp/ccFyOsmB.s 			page 129


3539:TP2824/TP2802.c **** 				pcnt=0;
3540:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)//Line1 & Line2
3541:TP2824/TP2802.c **** 				{
3542:TP2824/TP2802.c **** 					tpRxD[pcnt] = tp28xx_byte_read(addr);
3543:TP2824/TP2802.c **** 					pcnt++;
3544:TP2824/TP2802.c **** 				}
3545:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x00);
3546:TP2824/TP2802.c **** 				//delay(1);//5ms
3547:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x83);
3548:TP2824/TP2802.c **** 				
3549:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<5;pcnt++)
3550:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+1];
3551:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
3552:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+2];
3553:TP2824/TP2802.c **** 		#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3554:TP2824/TP2802.c **** 			//GraphicsPrint(CYAN,"(TP_PRES_DOWN=%02x)",(WORD)TP_PRES_DOWN); 		
3555:TP2824/TP2802.c **** 				printf("\r\nCOC4:");
3556:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
3557:TP2824/TP2802.c **** 					printf(" %02X",COCRX4[pcnt]);
3558:TP2824/TP2802.c **** 				printf(" %02X",COCRX4[9]);
3559:TP2824/TP2802.c **** 		#endif		
3560:TP2824/TP2802.c **** 				
3561:TP2824/TP2802.c **** 				//BOX on line  return 0x61, 0x01, 0x04, 0x9E,Lcd VINn=0x01 / Box CHn=0x04
3562:TP2824/TP2802.c **** 				//COC2: 02 B5 01 61 01 02 9E
3563:TP2824/TP2802.c **** 				if(COCRX4[3]==0x61 && COCRX4[9]==0x9E )
3564:TP2824/TP2802.c **** 				{
3565:TP2824/TP2802.c **** 					QuadBoxId|=8;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
3566:TP2824/TP2802.c **** 
3567:TP2824/TP2802.c **** 				#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3568:TP2824/TP2802.c **** 					printf("QuadBoxId %02x\r\n",  QuadBoxId);
3569:TP2824/TP2802.c **** 				#endif
3570:TP2824/TP2802.c **** 
3571:TP2824/TP2802.c **** 				if(COCRX4[4]==0x38 && COCRX4[5]==0x02 )
3572:TP2824/TP2802.c **** 					{
3573:TP2824/TP2802.c **** 					//Flisheye_CAM[CH4]=TRUE;					
3574:TP2824/TP2802.c **** 					//WriteEEP(EEP_FlishCAM4,TRUE);
3575:TP2824/TP2802.c **** 					//Flisheye_VLOSS_Count[CH4]=0;
3576:TP2824/TP2802.c **** 					QuadBoxId&=~(0x08);
3577:TP2824/TP2802.c **** 					}
3578:TP2824/TP2802.c **** 				}
3579:TP2824/TP2802.c **** 			}
3580:TP2824/TP2802.c **** 			
3581:TP2824/TP2802.c **** 			//V3RXIRQ---
3582:TP2824/TP2802.c **** 			if((RegB6&0x40) != 0  && count[2] > (EQ_COUNT+2)/*&&(state[2] == VIDEO_LOCKED)&&std[2]==TVI && m
3583:TP2824/TP2802.c **** 			{
3584:TP2824/TP2802.c **** 				SetRegPage(0x02);
3585:TP2824/TP2802.c **** 				//delay(1);//5ms
3586:TP2824/TP2802.c **** 				
3587:TP2824/TP2802.c **** 				pcnt=0;
3588:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
3589:TP2824/TP2802.c **** 				{
3590:TP2824/TP2802.c **** 					tpRxD[pcnt] = tp28xx_byte_read(addr);
3591:TP2824/TP2802.c **** 					pcnt++;
3592:TP2824/TP2802.c **** 				}
3593:TP2824/TP2802.c **** 				
3594:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x00);
3595:TP2824/TP2802.c **** 				//delay(1);//5ms
ARM GAS  /tmp/ccFyOsmB.s 			page 130


3596:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x83);
3597:TP2824/TP2802.c **** 				
3598:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<5;pcnt++)
3599:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+1];
3600:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
3601:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+2];
3602:TP2824/TP2802.c **** 
3603:TP2824/TP2802.c **** 				#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3604:TP2824/TP2802.c **** 				printf("\r\nCOC3:");
3605:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
3606:TP2824/TP2802.c **** 					printf(" %02X",COCRX3[pcnt]);
3607:TP2824/TP2802.c **** 				printf(" %02X",COCRX3[9]);
3608:TP2824/TP2802.c **** 				#endif
3609:TP2824/TP2802.c **** 
3610:TP2824/TP2802.c **** 				//BOX on line  return 0x61, 0x01, 0x04, 0x9E,Lcd VINn=0x01 / Box CHn=0x04
3611:TP2824/TP2802.c **** 				//COC2: 02 B5 01 61 01 02 9E
3612:TP2824/TP2802.c **** 				if(COCRX3[3]==0x61 && COCRX3[9]==0x9E)
3613:TP2824/TP2802.c **** 				{
3614:TP2824/TP2802.c **** 					QuadBoxId|=4;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
3615:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3616:TP2824/TP2802.c **** 					printf("QuadBoxId %02x\r\n",  QuadBoxId);
3617:TP2824/TP2802.c **** 					#endif
3618:TP2824/TP2802.c **** 
3619:TP2824/TP2802.c **** 				if(COCRX3[4]==0x38 && COCRX3[5]==0x02 )
3620:TP2824/TP2802.c **** 					{
3621:TP2824/TP2802.c **** 					//Flisheye_CAM[CH3]=TRUE;	
3622:TP2824/TP2802.c **** 					//WriteEEP(EEP_FlishCAM3,TRUE);					
3623:TP2824/TP2802.c **** 					//Flisheye_VLOSS_Count[CH3]=0;
3624:TP2824/TP2802.c **** 					QuadBoxId&=~(0x04);
3625:TP2824/TP2802.c **** 					}
3626:TP2824/TP2802.c **** 				}	
3627:TP2824/TP2802.c **** 			}
3628:TP2824/TP2802.c **** 			
3629:TP2824/TP2802.c **** 			//V2RXIRQ---
3630:TP2824/TP2802.c **** 			if((RegB6&0x20) != 0  && count[1] > (EQ_COUNT+2)/*&&(state[1] == VIDEO_LOCKED) &&std[1]==TVI && 
3631:TP2824/TP2802.c **** 			{
3632:TP2824/TP2802.c **** 				SetRegPage(0x01);
3633:TP2824/TP2802.c **** 				//delay(1);//5ms
3634:TP2824/TP2802.c **** 				
3635:TP2824/TP2802.c **** 				pcnt=0;
3636:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
3637:TP2824/TP2802.c **** 				{
3638:TP2824/TP2802.c **** 					tpRxD[pcnt] = tp28xx_byte_read(addr);
3639:TP2824/TP2802.c **** 					pcnt++;
3640:TP2824/TP2802.c **** 				}
3641:TP2824/TP2802.c **** 				
3642:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x00);
3643:TP2824/TP2802.c **** 				//delay(1);//5ms
3644:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x83);
3645:TP2824/TP2802.c **** 				
3646:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<5;pcnt++)
3647:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+1];
3648:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
3649:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+2];
3650:TP2824/TP2802.c **** 
3651:TP2824/TP2802.c **** 				#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3652:TP2824/TP2802.c **** 				printf("\r\nCOC2:");
ARM GAS  /tmp/ccFyOsmB.s 			page 131


3653:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
3654:TP2824/TP2802.c **** 					printf(" %02X",COCRX2[pcnt]);
3655:TP2824/TP2802.c **** 				printf(" %02X",COCRX2[9]);
3656:TP2824/TP2802.c **** 				#endif
3657:TP2824/TP2802.c **** 				
3658:TP2824/TP2802.c **** 				//BOX on line  return 0x61, 0x01, 0x04, 0x9E,Lcd VINn=0x01 / Box CHn=0x04
3659:TP2824/TP2802.c **** 				//COC2: 02 B5 01 61 01 02 9E
3660:TP2824/TP2802.c **** 				if(COCRX2[3]==0x61 && COCRX2[9]==0x9E )
3661:TP2824/TP2802.c **** 				{
3662:TP2824/TP2802.c **** 					QuadBoxId|=2;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
3663:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3664:TP2824/TP2802.c **** 					printf("QuadBoxId %02x\r\n",  QuadBoxId);
3665:TP2824/TP2802.c **** 					#endif
3666:TP2824/TP2802.c **** 
3667:TP2824/TP2802.c **** 				if(COCRX2[4]==0x38 && COCRX2[5]==0x02 )
3668:TP2824/TP2802.c **** 					{
3669:TP2824/TP2802.c **** 					//Flisheye_CAM[CH2]=TRUE;					
3670:TP2824/TP2802.c **** 					//WriteEEP(EEP_FlishCAM2,TRUE);
3671:TP2824/TP2802.c **** 					//Flisheye_VLOSS_Count[CH2]=0;
3672:TP2824/TP2802.c **** 					QuadBoxId&=~(0x02);
3673:TP2824/TP2802.c **** 					}
3674:TP2824/TP2802.c **** 				}	
3675:TP2824/TP2802.c **** 			}
3676:TP2824/TP2802.c **** 			
3677:TP2824/TP2802.c **** 			//V1RXIRQ---
3678:TP2824/TP2802.c **** 			if((RegB6&0x10) != 0  && count[0] > (EQ_COUNT+2)/*&&(state[0] == VIDEO_LOCKED) &&std[0]==TVI && 
3679:TP2824/TP2802.c **** 			{
3680:TP2824/TP2802.c **** 				SetRegPage(0x00);
3681:TP2824/TP2802.c **** 				//delay(1);//5ms
3682:TP2824/TP2802.c **** 				
3683:TP2824/TP2802.c **** 				pcnt=0;
3684:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
3685:TP2824/TP2802.c **** 				{
3686:TP2824/TP2802.c **** 					tpRxD[pcnt] = tp28xx_byte_read(addr);
3687:TP2824/TP2802.c **** 					pcnt++;
3688:TP2824/TP2802.c **** 				}
3689:TP2824/TP2802.c **** 				
3690:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x00);
3691:TP2824/TP2802.c **** 				//delay(1);//5ms
3692:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x83);
3693:TP2824/TP2802.c **** 				
3694:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<5;pcnt++)
3695:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+1];
3696:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
3697:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+2];
3698:TP2824/TP2802.c **** 				
3699:TP2824/TP2802.c **** 				#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3700:TP2824/TP2802.c **** 				printf("\r\nCOC1:");
3701:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
3702:TP2824/TP2802.c **** 					printf(" %02X",COCRX1[pcnt]);
3703:TP2824/TP2802.c **** 				printf(" %02X",COCRX1[9]);
3704:TP2824/TP2802.c **** 				#endif
3705:TP2824/TP2802.c **** 				
3706:TP2824/TP2802.c **** 				//BOX on line  return 0x61, 0x01, 0x04, 0x9E,Lcd VINn=0x01 / Box CHn=0x04
3707:TP2824/TP2802.c **** 				//COC2: 02 B5 01 61 01 02 9E
3708:TP2824/TP2802.c **** 				if(COCRX1[3]==0x61 && COCRX1[9]==0x9E )
3709:TP2824/TP2802.c **** 				{
ARM GAS  /tmp/ccFyOsmB.s 			page 132


3710:TP2824/TP2802.c **** 					QuadBoxId|=1;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
3711:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3712:TP2824/TP2802.c **** 					printf("QuadBoxId %02x\r\n",  QuadBoxId);
3713:TP2824/TP2802.c **** 					#endif
3714:TP2824/TP2802.c **** 
3715:TP2824/TP2802.c **** 				if(COCRX1[4]==0x38 && COCRX1[5]==0x02)
3716:TP2824/TP2802.c **** 					{
3717:TP2824/TP2802.c **** 					//Flisheye_CAM[CH1]=TRUE;
3718:TP2824/TP2802.c **** 					//WriteEEP(EEP_FlishCAM1,TRUE);
3719:TP2824/TP2802.c **** 					//Flisheye_VLOSS_Count[CH1]=0;
3720:TP2824/TP2802.c **** 					QuadBoxId&=~(0x01);
3721:TP2824/TP2802.c **** 					}
3722:TP2824/TP2802.c **** 				}	
3723:TP2824/TP2802.c **** 			}		
3724:TP2824/TP2802.c **** 			//printf("\r\n");
3725:TP2824/TP2802.c **** 			
3726:TP2824/TP2802.c **** 		}
3727:TP2824/TP2802.c **** 		#endif
3728:TP2824/TP2802.c **** //PTZ TX	
3729:TP2824/TP2802.c **** 		//else
3730:TP2824/TP2802.c **** 		if(ptztxflag==1)//no any RXIRQ
3731:TP2824/TP2802.c **** 		{
3732:TP2824/TP2802.c **** 			if( TVI == std[PtzTxChNum] )
3733:TP2824/TP2802.c **** 			{
3734:TP2824/TP2802.c **** 				if(mode[PtzTxChNum]==NTSC || mode[PtzTxChNum]==PAL)
3735:TP2824/TP2802.c **** 					{
3736:TP2824/TP2802.c **** 						tByte cmd1=0,cmd2=0,dat1=0,dat2=0;
3737:TP2824/TP2802.c **** 						
3738:TP2824/TP2802.c **** 						dat1=(tByte)TVI_speed;
3739:TP2824/TP2802.c **** 						dat2=(tByte)presetNum;
3740:TP2824/TP2802.c **** 						
3741:TP2824/TP2802.c **** 						if(TVI_Command==0x0F)//SET//Iris +
3742:TP2824/TP2802.c **** 							cmd1=0x02;
3743:TP2824/TP2802.c **** 						else if(TVI_Command==0x0E)//Iris -
3744:TP2824/TP2802.c **** 							cmd1=0x04;
3745:TP2824/TP2802.c **** 						else if(TVI_Command==0x10)//Focus -
3746:TP2824/TP2802.c **** 							cmd1=0x01;
3747:TP2824/TP2802.c **** 						else if(TVI_Command==0x11)//Focus +
3748:TP2824/TP2802.c **** 							cmd2=0x80;
3749:TP2824/TP2802.c **** 						else if(TVI_Command==0x12)//Zoom -
3750:TP2824/TP2802.c **** 							cmd2=0x40;
3751:TP2824/TP2802.c **** 						else if(TVI_Command==0x13)//Zoom +
3752:TP2824/TP2802.c **** 							cmd2=0x20;
3753:TP2824/TP2802.c **** 						else if(TVI_Command==0x06)//up
3754:TP2824/TP2802.c **** 							cmd2=0x08;
3755:TP2824/TP2802.c **** 						else if(TVI_Command==0x07)//down
3756:TP2824/TP2802.c **** 							cmd2=0x10;
3757:TP2824/TP2802.c **** 						else if(TVI_Command==0x09)//left
3758:TP2824/TP2802.c **** 							cmd2=0x04;
3759:TP2824/TP2802.c **** 						else if(TVI_Command==0x08)//right
3760:TP2824/TP2802.c **** 							cmd2=0x02;
3761:TP2824/TP2802.c **** 						else if(TVI_Command==0x0A)//up + left
3762:TP2824/TP2802.c **** 							cmd2=0x0c;
3763:TP2824/TP2802.c **** 						else if(TVI_Command==0x0C)//up + right
3764:TP2824/TP2802.c **** 							cmd2=0x0a;
3765:TP2824/TP2802.c **** 						else if(TVI_Command==0x0B)//down + left
3766:TP2824/TP2802.c **** 							cmd2=0x14;
ARM GAS  /tmp/ccFyOsmB.s 			page 133


3767:TP2824/TP2802.c **** 						else if(TVI_Command==0x0D)//down + right
3768:TP2824/TP2802.c **** 							cmd2=0x12;
3769:TP2824/TP2802.c **** 						else if(TVI_Command==0x17)//PRESET x
3770:TP2824/TP2802.c **** 						{
3771:TP2824/TP2802.c **** 							cmd2=0x07;
3772:TP2824/TP2802.c **** 							dat1=0;
3773:TP2824/TP2802.c **** 							dat2=(tByte)presetNum;
3774:TP2824/TP2802.c **** 						}
3775:TP2824/TP2802.c **** 						//set:0x0f / dn:0x06 / up:0x07 / L:0x13 / R:0x12
3776:TP2824/TP2802.c **** 						cmd1=AHDBitsReverse(cmd1);//20200413
3777:TP2824/TP2802.c **** 						cmd2=AHDBitsReverse(cmd2);//20200413
3778:TP2824/TP2802.c **** 						dat1=AHDBitsReverse(dat1);//20200413
3779:TP2824/TP2802.c **** 						dat2=AHDBitsReverse(dat2);//20200413
3780:TP2824/TP2802.c **** 						
3781:TP2824/TP2802.c **** 						SetRegPage(PtzTxChNum);		                    
3782:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5a, cmd1);//command byte 1
3783:TP2824/TP2802.c **** 						tp28xx_byte_write(0x59, cmd2);//command byte 2
3784:TP2824/TP2802.c **** 
3785:TP2824/TP2802.c **** 						tp28xx_byte_write(0x60, dat1);//data byte 1
3786:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5f, dat2);//data byte 2
3787:TP2824/TP2802.c **** 
3788:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x61);
3789:TP2824/TP2802.c **** 						delay(10);//50ms
3790:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x60);
3791:TP2824/TP2802.c **** 						printf("CVBS-Tx %x,%x,%x,%x\n",cmd1,cmd2,dat1,dat2);
3792:TP2824/TP2802.c **** 
3793:TP2824/TP2802.c **** 					}
3794:TP2824/TP2802.c **** 					else//1080P
3795:TP2824/TP2802.c **** 					{
3796:TP2824/TP2802.c **** 						SetRegPage(PtzTxChNum);		                    
3797:TP2824/TP2802.c **** 						tp28xx_byte_write(0x59, (tByte)TVI_Command);
3798:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5a, (tByte)presetNum);
3799:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5d, (tByte)TVI_speed);//0x5f  check this????
3800:TP2824/TP2802.c **** 						tp28xx_byte_write(0x60, (tByte)TVI_Chksum);
3801:TP2824/TP2802.c **** 						
3802:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x41);
3803:TP2824/TP2802.c **** 						delay(10);//50ms
3804:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x40);
3805:TP2824/TP2802.c **** 						printf("TVI-Tx %x,%x,%x\n",TVI_Command,presetNum,TVI_speed);
3806:TP2824/TP2802.c **** 					}
3807:TP2824/TP2802.c **** 					
3808:TP2824/TP2802.c **** 					ptztxflag=0;
3809:TP2824/TP2802.c **** 				}
3810:TP2824/TP2802.c **** 			if( HDC == std[PtzTxChNum] )//1080P / 720P
3811:TP2824/TP2802.c **** 				{
3812:TP2824/TP2802.c **** 					SetRegPage(PtzTxChNum);	
3813:TP2824/TP2802.c **** 
3814:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6e, 0xA5);
3815:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6e, 0x02);
3816:TP2824/TP2802.c **** 					switch(TVI_Command)
3817:TP2824/TP2802.c **** 					{
3818:TP2824/TP2802.c **** 						case 0x0F://SET//Iris +
3819:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x50);
3820:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3821:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3822:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3823:TP2824/TP2802.c **** 							break;
ARM GAS  /tmp/ccFyOsmB.s 			page 134


3824:TP2824/TP2802.c **** 							
3825:TP2824/TP2802.c **** 						case 0x06://up
3826:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x08);
3827:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3828:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
3829:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3830:TP2824/TP2802.c **** 							break;
3831:TP2824/TP2802.c **** 							
3832:TP2824/TP2802.c **** 						case 0x07://down
3833:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x04);
3834:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3835:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
3836:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3837:TP2824/TP2802.c **** 							break;
3838:TP2824/TP2802.c **** 							
3839:TP2824/TP2802.c **** 						case 0x09://left
3840:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x02);
3841:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
3842:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3843:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3844:TP2824/TP2802.c **** 							break;
3845:TP2824/TP2802.c **** 							
3846:TP2824/TP2802.c **** 						case 0x08://right
3847:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x01);
3848:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
3849:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3850:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3851:TP2824/TP2802.c **** 							break;
3852:TP2824/TP2802.c **** 							
3853:TP2824/TP2802.c **** 						default:	
3854:TP2824/TP2802.c **** 						case 0x14://STOP
3855:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3856:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3857:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3858:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3859:TP2824/TP2802.c **** 							break;
3860:TP2824/TP2802.c **** 					}
3861:TP2824/TP2802.c **** 					
3862:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x49);
3863:TP2824/TP2802.c **** 					delay(5);//50ms
3864:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x48);
3865:TP2824/TP2802.c **** 					ptztxflag=0;
3866:TP2824/TP2802.c **** 					printf("CVI-Tx %x\n",TVI_Command);
3867:TP2824/TP2802.c **** 				}
3868:TP2824/TP2802.c **** 			if( HDA == std[PtzTxChNum] )//1080P / 720P
3869:TP2824/TP2802.c **** 			{
3870:TP2824/TP2802.c **** 
3871:TP2824/TP2802.c **** 					TVICommandToAHData();
3872:TP2824/TP2802.c **** 				
3873:TP2824/TP2802.c **** 				  	SetRegPage(PtzTxChNum);		
3874:TP2824/TP2802.c **** 					//SetRegPage(0x04);	
3875:TP2824/TP2802.c **** 				
3876:TP2824/TP2802.c **** #if 1
3877:TP2824/TP2802.c **** 				//	if(TVI_Command==0x22)//TOA  PRESET LOAD
3878:TP2824/TP2802.c **** 				//	ACPSTOPCOMMAND();
3879:TP2824/TP2802.c **** 
3880:TP2824/TP2802.c **** 					//stop command
ARM GAS  /tmp/ccFyOsmB.s 			page 135


3881:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a, 0x00);
3882:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, 0x00);
3883:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, 0x00);
3884:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, 0x00);
3885:TP2824/TP2802.c **** 					
3886:TP2824/TP2802.c **** 					
3887:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x45);
3888:TP2824/TP2802.c **** 					//delay(5);//50ms	//20210514
3889:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x44);
3890:TP2824/TP2802.c **** 					
3891:TP2824/TP2802.c **** 					HAL_Delay(35);       //Delay 1Vsync(~33.3msec)//20210514
3892:TP2824/TP2802.c **** 			
3893:TP2824/TP2802.c **** 					//command data
3894:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a, AHDBitsReverse(AHDcmd1));
3895:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, AHDBitsReverse(AHDcmd2));
3896:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, AHDBitsReverse(AHDcmd3));
3897:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, AHDBitsReverse(AHDcmd4));
3898:TP2824/TP2802.c **** 				
3899:TP2824/TP2802.c **** 
3900:TP2824/TP2802.c **** 					
3901:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x45);
3902:TP2824/TP2802.c **** 					//delay(5);//50ms	//20210514
3903:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x44);
3904:TP2824/TP2802.c **** 				
3905:TP2824/TP2802.c **** 					HAL_Delay(35);	 //Delay 1Vsync(~33.3msec)//20210514
3906:TP2824/TP2802.c **** 
3907:TP2824/TP2802.c **** 
3908:TP2824/TP2802.c **** #else
3909:TP2824/TP2802.c **** #if 0				
3910:TP2824/TP2802.c **** 					#if 0
3911:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a, 0xFF);
3912:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, 0xFF);
3913:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, 0xFF);
3914:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, 0xFF);
3915:TP2824/TP2802.c **** 					#else
3916:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a, 0x00);
3917:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, 0x00);
3918:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, 0x00);
3919:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, 0x00);
3920:TP2824/TP2802.c **** 					#endif
3921:TP2824/TP2802.c **** 					
3922:TP2824/TP2802.c **** 					#if 1
3923:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x45);
3924:TP2824/TP2802.c **** 					delay(5);//50ms
3925:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x44);
3926:TP2824/TP2802.c **** 					#else
3927:TP2824/TP2802.c **** 					Set_Mirror_COC();	
3928:TP2824/TP2802.c **** 					#endif
3929:TP2824/TP2802.c **** 
3930:TP2824/TP2802.c **** #endif				
3931:TP2824/TP2802.c **** 					//command data
3932:TP2824/TP2802.c **** 					#if 0
3933:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a,(AHDBitsReverse (AHDcmd1)));
3934:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60,( AHDBitsReverse(AHDcmd2)));
3935:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66,(AHDBitsReverse(AHDcmd3)));
3936:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c,(AHDBitsReverse(AHDcmd4)));
3937:TP2824/TP2802.c **** 					#else
ARM GAS  /tmp/ccFyOsmB.s 			page 136


3938:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a, AHDBitsReverse(AHDcmd1));
3939:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, AHDBitsReverse(AHDcmd2));
3940:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, AHDBitsReverse(AHDcmd3));
3941:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, AHDBitsReverse(AHDcmd4));
3942:TP2824/TP2802.c **** 					#endif
3943:TP2824/TP2802.c **** 
3944:TP2824/TP2802.c **** 					#if 1
3945:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x45);
3946:TP2824/TP2802.c **** 					delay(5);//50ms
3947:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x44);
3948:TP2824/TP2802.c **** 					#else
3949:TP2824/TP2802.c **** 					Set_Mirror_COC();	
3950:TP2824/TP2802.c **** 					#endif
3951:TP2824/TP2802.c **** #endif					
3952:TP2824/TP2802.c **** 					ptztxflag=0;
3953:TP2824/TP2802.c **** 				//printf("~AHD %x,%x,%x,%x\n",AHDBitsReverse(AHDcmd1),AHDBitsReverse(0xF1),AHDBitsReverse(0x02)
3954:TP2824/TP2802.c **** 			
3955:TP2824/TP2802.c **** 				Printf("AHD %02x,%02x,%02x to ",(WORD)TVI_Command,(WORD)presetNum,(WORD)TVI_speed);
3956:TP2824/TP2802.c **** 				Printf("Tx %02x,%02x,%02x,%02x",(WORD)AHDcmd1,(WORD)AHDcmd2,(WORD)AHDcmd3,(WORD)AHDcmd4);
3957:TP2824/TP2802.c **** 				}
3958:TP2824/TP2802.c **** 				ptztxflag=0;
3959:TP2824/TP2802.c **** 			}
3960:TP2824/TP2802.c **** 		}
3961:TP2824/TP2802.c **** }
 3454              		.loc 1 3961 0
 3455 0018 02B0     		add	sp, sp, #8
 3456              	.LCFI32:
 3457              		.cfi_remember_state
 3458              		.cfi_def_cfa_offset 24
 3459              		@ sp needed
 3460 001a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3461              	.L391:
 3462              	.LCFI33:
 3463              		.cfi_restore_state
3523:TP2824/TP2802.c **** 		delay(1);//5ms
 3464              		.loc 1 3523 0
 3465 001e 0420     		movs	r0, #4
 3466 0020 FFF7FEFF 		bl	SetRegPage
 3467              	.LVL428:
3524:TP2824/TP2802.c **** 
 3468              		.loc 1 3524 0
 3469 0024 0120     		movs	r0, #1
 3470 0026 FFF7FEFF 		bl	delay
 3471              	.LVL429:
3526:TP2824/TP2802.c **** 			tp28xx_byte_read(0xB5);
 3472              		.loc 1 3526 0
 3473 002a B620     		movs	r0, #182
 3474 002c FFF7FEFF 		bl	tp28xx_byte_read
 3475              	.LVL430:
 3476 0030 0746     		mov	r7, r0
 3477              	.LVL431:
3527:TP2824/TP2802.c **** 			tp28xx_byte_read(0xB4);
 3478              		.loc 1 3527 0
 3479 0032 B520     		movs	r0, #181
 3480 0034 FFF7FEFF 		bl	tp28xx_byte_read
 3481              	.LVL432:
3528:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccFyOsmB.s 			page 137


 3482              		.loc 1 3528 0
 3483 0038 B420     		movs	r0, #180
 3484 003a FFF7FEFF 		bl	tp28xx_byte_read
 3485              	.LVL433:
3532:TP2824/TP2802.c **** 		{
 3486              		.loc 1 3532 0
 3487 003e 17F0F00F 		tst	r7, #240
 3488 0042 1AD0     		beq	.L323
3535:TP2824/TP2802.c **** 			{
 3489              		.loc 1 3535 0
 3490 0044 17F0800F 		tst	r7, #128
 3491 0048 5FD1     		bne	.L392
 3492              	.L324:
3582:TP2824/TP2802.c **** 			{
 3493              		.loc 1 3582 0
 3494 004a 17F0400F 		tst	r7, #64
 3495 004e 04D0     		beq	.L333
3582:TP2824/TP2802.c **** 			{
 3496              		.loc 1 3582 0 is_stmt 0 discriminator 1
 3497 0050 A14B     		ldr	r3, .L398
 3498 0052 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3499 0054 162B     		cmp	r3, #22
 3500 0056 00F2BB80 		bhi	.L393
 3501              	.L333:
3630:TP2824/TP2802.c **** 			{
 3502              		.loc 1 3630 0 is_stmt 1
 3503 005a 17F0200F 		tst	r7, #32
 3504 005e 04D0     		beq	.L342
3630:TP2824/TP2802.c **** 			{
 3505              		.loc 1 3630 0 is_stmt 0 discriminator 1
 3506 0060 9D4B     		ldr	r3, .L398
 3507 0062 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3508 0064 162B     		cmp	r3, #22
 3509 0066 00F21281 		bhi	.L394
 3510              	.L342:
3678:TP2824/TP2802.c **** 			{
 3511              		.loc 1 3678 0 is_stmt 1
 3512 006a 17F0100F 		tst	r7, #16
 3513 006e 04D0     		beq	.L323
3678:TP2824/TP2802.c **** 			{
 3514              		.loc 1 3678 0 is_stmt 0 discriminator 1
 3515 0070 994B     		ldr	r3, .L398
 3516 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3517 0074 162B     		cmp	r3, #22
 3518 0076 00F28D81 		bhi	.L395
 3519              	.L323:
3730:TP2824/TP2802.c **** 		{
 3520              		.loc 1 3730 0 is_stmt 1
 3521 007a 994B     		ldr	r3, .L398+8
 3522 007c 1B68     		ldr	r3, [r3]
 3523 007e 012B     		cmp	r3, #1
 3524 0080 CAD1     		bne	.L321
3732:TP2824/TP2802.c **** 			{
 3525              		.loc 1 3732 0
 3526 0082 984B     		ldr	r3, .L398+12
 3527 0084 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 3528 0086 984B     		ldr	r3, .L398+16
ARM GAS  /tmp/ccFyOsmB.s 			page 138


 3529 0088 1D5D     		ldrb	r5, [r3, r4]	@ zero_extendqisi2
 3530 008a 002D     		cmp	r5, #0
 3531 008c 40F01B82 		bne	.L359
3734:TP2824/TP2802.c **** 					{
 3532              		.loc 1 3734 0
 3533 0090 964B     		ldr	r3, .L398+20
 3534 0092 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 3535 0094 083B     		subs	r3, r3, #8
 3536 0096 DBB2     		uxtb	r3, r3
 3537 0098 012B     		cmp	r3, #1
 3538 009a 00F24D82 		bhi	.L360
 3539              	.LVL434:
 3540              	.LBB2:
3738:TP2824/TP2802.c **** 						dat2=(tByte)presetNum;
 3541              		.loc 1 3738 0
 3542 009e 944B     		ldr	r3, .L398+24
 3543 00a0 1F78     		ldrb	r7, [r3]	@ zero_extendqisi2
 3544              	.LVL435:
3739:TP2824/TP2802.c **** 						
 3545              		.loc 1 3739 0
 3546 00a2 944B     		ldr	r3, .L398+28
 3547 00a4 93F80080 		ldrb	r8, [r3]	@ zero_extendqisi2
 3548              	.LVL436:
3741:TP2824/TP2802.c **** 							cmd1=0x02;
 3549              		.loc 1 3741 0
 3550 00a8 934B     		ldr	r3, .L398+32
 3551 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3552 00ac 0F2B     		cmp	r3, #15
 3553 00ae 00F0D181 		beq	.L361
3743:TP2824/TP2802.c **** 							cmd1=0x04;
 3554              		.loc 1 3743 0
 3555 00b2 0E2B     		cmp	r3, #14
 3556 00b4 00F0CD81 		beq	.L373
3745:TP2824/TP2802.c **** 							cmd1=0x01;
 3557              		.loc 1 3745 0
 3558 00b8 102B     		cmp	r3, #16
 3559 00ba 00F01582 		beq	.L374
3747:TP2824/TP2802.c **** 							cmd2=0x80;
 3560              		.loc 1 3747 0
 3561 00be 112B     		cmp	r3, #17
 3562 00c0 00F01482 		beq	.L375
3749:TP2824/TP2802.c **** 							cmd2=0x40;
 3563              		.loc 1 3749 0
 3564 00c4 122B     		cmp	r3, #18
 3565 00c6 00F01482 		beq	.L376
3751:TP2824/TP2802.c **** 							cmd2=0x20;
 3566              		.loc 1 3751 0
 3567 00ca 132B     		cmp	r3, #19
 3568 00cc 00F01482 		beq	.L377
3753:TP2824/TP2802.c **** 							cmd2=0x08;
 3569              		.loc 1 3753 0
 3570 00d0 062B     		cmp	r3, #6
 3571 00d2 00F01482 		beq	.L378
3755:TP2824/TP2802.c **** 							cmd2=0x10;
 3572              		.loc 1 3755 0
 3573 00d6 072B     		cmp	r3, #7
 3574 00d8 00F01482 		beq	.L379
ARM GAS  /tmp/ccFyOsmB.s 			page 139


3757:TP2824/TP2802.c **** 							cmd2=0x04;
 3575              		.loc 1 3757 0
 3576 00dc 092B     		cmp	r3, #9
 3577 00de 00F01482 		beq	.L380
3759:TP2824/TP2802.c **** 							cmd2=0x02;
 3578              		.loc 1 3759 0
 3579 00e2 082B     		cmp	r3, #8
 3580 00e4 00F01482 		beq	.L381
3761:TP2824/TP2802.c **** 							cmd2=0x0c;
 3581              		.loc 1 3761 0
 3582 00e8 0A2B     		cmp	r3, #10
 3583 00ea 00F01582 		beq	.L382
3763:TP2824/TP2802.c **** 							cmd2=0x0a;
 3584              		.loc 1 3763 0
 3585 00ee 0C2B     		cmp	r3, #12
 3586 00f0 00F01582 		beq	.L383
3765:TP2824/TP2802.c **** 							cmd2=0x14;
 3587              		.loc 1 3765 0
 3588 00f4 0B2B     		cmp	r3, #11
 3589 00f6 00F01582 		beq	.L384
3767:TP2824/TP2802.c **** 							cmd2=0x12;
 3590              		.loc 1 3767 0
 3591 00fa 0D2B     		cmp	r3, #13
 3592 00fc 00F01582 		beq	.L385
3769:TP2824/TP2802.c **** 						{
 3593              		.loc 1 3769 0
 3594 0100 172B     		cmp	r3, #23
 3595 0102 00F01582 		beq	.L386
3736:TP2824/TP2802.c **** 						
 3596              		.loc 1 3736 0
 3597 0106 2E46     		mov	r6, r5
 3598 0108 A4E1     		b	.L361
 3599              	.LVL437:
 3600              	.L392:
 3601              	.LBE2:
3535:TP2824/TP2802.c **** 			{
 3602              		.loc 1 3535 0 discriminator 1
 3603 010a 734B     		ldr	r3, .L398
 3604 010c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3605 010e 162B     		cmp	r3, #22
 3606 0110 9BD9     		bls	.L324
3537:TP2824/TP2802.c **** 				//delay(1);//5ms
 3607              		.loc 1 3537 0
 3608 0112 0320     		movs	r0, #3
 3609 0114 FFF7FEFF 		bl	SetRegPage
 3610              	.LVL438:
3539:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)//Line1 & Line2
 3611              		.loc 1 3539 0
 3612 0118 0025     		movs	r5, #0
3540:TP2824/TP2802.c **** 				{
 3613              		.loc 1 3540 0
 3614 011a 8A24     		movs	r4, #138
 3615 011c 08E0     		b	.L325
 3616              	.LVL439:
 3617              	.L326:
3542:TP2824/TP2802.c **** 					pcnt++;
 3618              		.loc 1 3542 0 discriminator 3
ARM GAS  /tmp/ccFyOsmB.s 			page 140


 3619 011e 2046     		mov	r0, r4
 3620 0120 FFF7FEFF 		bl	tp28xx_byte_read
 3621              	.LVL440:
 3622 0124 754B     		ldr	r3, .L398+36
 3623 0126 5855     		strb	r0, [r3, r5]
3543:TP2824/TP2802.c **** 				}
 3624              		.loc 1 3543 0 discriminator 3
 3625 0128 0135     		adds	r5, r5, #1
 3626              	.LVL441:
 3627 012a EDB2     		uxtb	r5, r5
 3628              	.LVL442:
3540:TP2824/TP2802.c **** 				{
 3629              		.loc 1 3540 0 discriminator 3
 3630 012c 0134     		adds	r4, r4, #1
 3631              	.LVL443:
 3632 012e E4B2     		uxtb	r4, r4
 3633              	.LVL444:
 3634              	.L325:
3540:TP2824/TP2802.c **** 				{
 3635              		.loc 1 3540 0 is_stmt 0 discriminator 1
 3636 0130 A12C     		cmp	r4, #161
 3637 0132 F4D9     		bls	.L326
3545:TP2824/TP2802.c **** 				//delay(1);//5ms
 3638              		.loc 1 3545 0 is_stmt 1
 3639 0134 0021     		movs	r1, #0
 3640 0136 A720     		movs	r0, #167
 3641 0138 FFF7FEFF 		bl	tp28xx_byte_write
 3642              	.LVL445:
3547:TP2824/TP2802.c **** 				
 3643              		.loc 1 3547 0
 3644 013c 8321     		movs	r1, #131
 3645 013e A720     		movs	r0, #167
 3646 0140 FFF7FEFF 		bl	tp28xx_byte_write
 3647              	.LVL446:
3549:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+1];
 3648              		.loc 1 3549 0
 3649 0144 0023     		movs	r3, #0
 3650 0146 05E0     		b	.L327
 3651              	.LVL447:
 3652              	.L328:
3550:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
 3653              		.loc 1 3550 0 discriminator 3
 3654 0148 5A1C     		adds	r2, r3, #1
 3655 014a 6C49     		ldr	r1, .L398+36
 3656 014c 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 3657 014e 6C49     		ldr	r1, .L398+40
 3658 0150 C854     		strb	r0, [r1, r3]
3549:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+1];
 3659              		.loc 1 3549 0 discriminator 3
 3660 0152 D3B2     		uxtb	r3, r2
 3661              	.LVL448:
 3662              	.L327:
3549:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+1];
 3663              		.loc 1 3549 0 is_stmt 0 discriminator 1
 3664 0154 042B     		cmp	r3, #4
 3665 0156 F7D9     		bls	.L328
3551:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+2];
ARM GAS  /tmp/ccFyOsmB.s 			page 141


 3666              		.loc 1 3551 0 is_stmt 1
 3667 0158 0523     		movs	r3, #5
 3668              	.LVL449:
 3669 015a 06E0     		b	.L329
 3670              	.LVL450:
 3671              	.L330:
3552:TP2824/TP2802.c **** 		#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
 3672              		.loc 1 3552 0 discriminator 3
 3673 015c 9A1C     		adds	r2, r3, #2
 3674 015e 6749     		ldr	r1, .L398+36
 3675 0160 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3676 0162 674A     		ldr	r2, .L398+40
 3677 0164 D154     		strb	r1, [r2, r3]
3551:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+2];
 3678              		.loc 1 3551 0 discriminator 3
 3679 0166 0133     		adds	r3, r3, #1
 3680              	.LVL451:
 3681 0168 DBB2     		uxtb	r3, r3
 3682              	.LVL452:
 3683              	.L329:
3551:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+2];
 3684              		.loc 1 3551 0 is_stmt 0 discriminator 1
 3685 016a 092B     		cmp	r3, #9
 3686 016c F6D9     		bls	.L330
3555:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 3687              		.loc 1 3555 0 is_stmt 1
 3688 016e 6548     		ldr	r0, .L398+44
 3689 0170 FFF7FEFF 		bl	printf
 3690              	.LVL453:
3556:TP2824/TP2802.c **** 					printf(" %02X",COCRX4[pcnt]);
 3691              		.loc 1 3556 0
 3692 0174 0024     		movs	r4, #0
 3693              	.LVL454:
 3694 0176 06E0     		b	.L331
 3695              	.LVL455:
 3696              	.L332:
3557:TP2824/TP2802.c **** 				printf(" %02X",COCRX4[9]);
 3697              		.loc 1 3557 0 discriminator 3
 3698 0178 614B     		ldr	r3, .L398+40
 3699 017a 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 3700 017c 6248     		ldr	r0, .L398+48
 3701 017e FFF7FEFF 		bl	printf
 3702              	.LVL456:
3556:TP2824/TP2802.c **** 					printf(" %02X",COCRX4[pcnt]);
 3703              		.loc 1 3556 0 discriminator 3
 3704 0182 0134     		adds	r4, r4, #1
 3705              	.LVL457:
 3706 0184 E4B2     		uxtb	r4, r4
 3707              	.LVL458:
 3708              	.L331:
3556:TP2824/TP2802.c **** 					printf(" %02X",COCRX4[pcnt]);
 3709              		.loc 1 3556 0 is_stmt 0 discriminator 1
 3710 0186 052C     		cmp	r4, #5
 3711 0188 F6D9     		bls	.L332
3558:TP2824/TP2802.c **** 		#endif		
 3712              		.loc 1 3558 0 is_stmt 1
 3713 018a 5D4C     		ldr	r4, .L398+40
ARM GAS  /tmp/ccFyOsmB.s 			page 142


 3714              	.LVL459:
 3715 018c 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 3716 018e 5E48     		ldr	r0, .L398+48
 3717 0190 FFF7FEFF 		bl	printf
 3718              	.LVL460:
3563:TP2824/TP2802.c **** 				{
 3719              		.loc 1 3563 0
 3720 0194 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 3721 0196 612B     		cmp	r3, #97
 3722 0198 7FF457AF 		bne	.L324
3563:TP2824/TP2802.c **** 				{
 3723              		.loc 1 3563 0 is_stmt 0 discriminator 1
 3724 019c 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 3725 019e 9E2B     		cmp	r3, #158
 3726 01a0 7FF453AF 		bne	.L324
3565:TP2824/TP2802.c **** 
 3727              		.loc 1 3565 0 is_stmt 1
 3728 01a4 594B     		ldr	r3, .L398+52
 3729 01a6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3730 01a8 41F00801 		orr	r1, r1, #8
 3731 01ac 1970     		strb	r1, [r3]
3568:TP2824/TP2802.c **** 				#endif
 3732              		.loc 1 3568 0
 3733 01ae 5848     		ldr	r0, .L398+56
 3734 01b0 FFF7FEFF 		bl	printf
 3735              	.LVL461:
3571:TP2824/TP2802.c **** 					{
 3736              		.loc 1 3571 0
 3737 01b4 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3738 01b6 382B     		cmp	r3, #56
 3739 01b8 7FF447AF 		bne	.L324
3571:TP2824/TP2802.c **** 					{
 3740              		.loc 1 3571 0 is_stmt 0 discriminator 1
 3741 01bc 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 3742 01be 022B     		cmp	r3, #2
 3743 01c0 7FF443AF 		bne	.L324
3576:TP2824/TP2802.c **** 					}
 3744              		.loc 1 3576 0 is_stmt 1
 3745 01c4 514A     		ldr	r2, .L398+52
 3746 01c6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3747 01c8 23F00803 		bic	r3, r3, #8
 3748 01cc 1370     		strb	r3, [r2]
 3749 01ce 3CE7     		b	.L324
 3750              	.L393:
3584:TP2824/TP2802.c **** 				//delay(1);//5ms
 3751              		.loc 1 3584 0
 3752 01d0 0220     		movs	r0, #2
 3753 01d2 FFF7FEFF 		bl	SetRegPage
 3754              	.LVL462:
3587:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
 3755              		.loc 1 3587 0
 3756 01d6 0025     		movs	r5, #0
3588:TP2824/TP2802.c **** 				{
 3757              		.loc 1 3588 0
 3758 01d8 8A24     		movs	r4, #138
 3759 01da 08E0     		b	.L334
 3760              	.LVL463:
ARM GAS  /tmp/ccFyOsmB.s 			page 143


 3761              	.L335:
3590:TP2824/TP2802.c **** 					pcnt++;
 3762              		.loc 1 3590 0 discriminator 3
 3763 01dc 2046     		mov	r0, r4
 3764 01de FFF7FEFF 		bl	tp28xx_byte_read
 3765              	.LVL464:
 3766 01e2 464B     		ldr	r3, .L398+36
 3767 01e4 5855     		strb	r0, [r3, r5]
3591:TP2824/TP2802.c **** 				}
 3768              		.loc 1 3591 0 discriminator 3
 3769 01e6 0135     		adds	r5, r5, #1
 3770              	.LVL465:
 3771 01e8 EDB2     		uxtb	r5, r5
 3772              	.LVL466:
3588:TP2824/TP2802.c **** 				{
 3773              		.loc 1 3588 0 discriminator 3
 3774 01ea 0134     		adds	r4, r4, #1
 3775              	.LVL467:
 3776 01ec E4B2     		uxtb	r4, r4
 3777              	.LVL468:
 3778              	.L334:
3588:TP2824/TP2802.c **** 				{
 3779              		.loc 1 3588 0 is_stmt 0 discriminator 1
 3780 01ee A12C     		cmp	r4, #161
 3781 01f0 F4D9     		bls	.L335
3594:TP2824/TP2802.c **** 				//delay(1);//5ms
 3782              		.loc 1 3594 0 is_stmt 1
 3783 01f2 0021     		movs	r1, #0
 3784 01f4 A720     		movs	r0, #167
 3785 01f6 FFF7FEFF 		bl	tp28xx_byte_write
 3786              	.LVL469:
3596:TP2824/TP2802.c **** 				
 3787              		.loc 1 3596 0
 3788 01fa 8321     		movs	r1, #131
 3789 01fc A720     		movs	r0, #167
 3790 01fe FFF7FEFF 		bl	tp28xx_byte_write
 3791              	.LVL470:
3598:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+1];
 3792              		.loc 1 3598 0
 3793 0202 0023     		movs	r3, #0
 3794 0204 05E0     		b	.L336
 3795              	.LVL471:
 3796              	.L337:
3599:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
 3797              		.loc 1 3599 0 discriminator 3
 3798 0206 5A1C     		adds	r2, r3, #1
 3799 0208 3C49     		ldr	r1, .L398+36
 3800 020a 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 3801 020c 4149     		ldr	r1, .L398+60
 3802 020e C854     		strb	r0, [r1, r3]
3598:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+1];
 3803              		.loc 1 3598 0 discriminator 3
 3804 0210 D3B2     		uxtb	r3, r2
 3805              	.LVL472:
 3806              	.L336:
3598:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+1];
 3807              		.loc 1 3598 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccFyOsmB.s 			page 144


 3808 0212 042B     		cmp	r3, #4
 3809 0214 F7D9     		bls	.L337
3600:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+2];
 3810              		.loc 1 3600 0 is_stmt 1
 3811 0216 0523     		movs	r3, #5
 3812              	.LVL473:
 3813 0218 06E0     		b	.L338
 3814              	.LVL474:
 3815              	.L339:
3601:TP2824/TP2802.c **** 
 3816              		.loc 1 3601 0 discriminator 3
 3817 021a 9A1C     		adds	r2, r3, #2
 3818 021c 3749     		ldr	r1, .L398+36
 3819 021e 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3820 0220 3C4A     		ldr	r2, .L398+60
 3821 0222 D154     		strb	r1, [r2, r3]
3600:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+2];
 3822              		.loc 1 3600 0 discriminator 3
 3823 0224 0133     		adds	r3, r3, #1
 3824              	.LVL475:
 3825 0226 DBB2     		uxtb	r3, r3
 3826              	.LVL476:
 3827              	.L338:
3600:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+2];
 3828              		.loc 1 3600 0 is_stmt 0 discriminator 1
 3829 0228 092B     		cmp	r3, #9
 3830 022a F6D9     		bls	.L339
3604:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 3831              		.loc 1 3604 0 is_stmt 1
 3832 022c 3A48     		ldr	r0, .L398+64
 3833 022e FFF7FEFF 		bl	printf
 3834              	.LVL477:
3605:TP2824/TP2802.c **** 					printf(" %02X",COCRX3[pcnt]);
 3835              		.loc 1 3605 0
 3836 0232 0024     		movs	r4, #0
 3837              	.LVL478:
 3838 0234 06E0     		b	.L340
 3839              	.LVL479:
 3840              	.L341:
3606:TP2824/TP2802.c **** 				printf(" %02X",COCRX3[9]);
 3841              		.loc 1 3606 0 discriminator 3
 3842 0236 374B     		ldr	r3, .L398+60
 3843 0238 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 3844 023a 3348     		ldr	r0, .L398+48
 3845 023c FFF7FEFF 		bl	printf
 3846              	.LVL480:
3605:TP2824/TP2802.c **** 					printf(" %02X",COCRX3[pcnt]);
 3847              		.loc 1 3605 0 discriminator 3
 3848 0240 0134     		adds	r4, r4, #1
 3849              	.LVL481:
 3850 0242 E4B2     		uxtb	r4, r4
 3851              	.LVL482:
 3852              	.L340:
3605:TP2824/TP2802.c **** 					printf(" %02X",COCRX3[pcnt]);
 3853              		.loc 1 3605 0 is_stmt 0 discriminator 1
 3854 0244 052C     		cmp	r4, #5
 3855 0246 F6D9     		bls	.L341
ARM GAS  /tmp/ccFyOsmB.s 			page 145


3607:TP2824/TP2802.c **** 				#endif
 3856              		.loc 1 3607 0 is_stmt 1
 3857 0248 324C     		ldr	r4, .L398+60
 3858              	.LVL483:
 3859 024a 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 3860 024c 2E48     		ldr	r0, .L398+48
 3861 024e FFF7FEFF 		bl	printf
 3862              	.LVL484:
3612:TP2824/TP2802.c **** 				{
 3863              		.loc 1 3612 0
 3864 0252 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 3865 0254 612B     		cmp	r3, #97
 3866 0256 7FF400AF 		bne	.L333
3612:TP2824/TP2802.c **** 				{
 3867              		.loc 1 3612 0 is_stmt 0 discriminator 1
 3868 025a 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 3869 025c 9E2B     		cmp	r3, #158
 3870 025e 7FF4FCAE 		bne	.L333
3614:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
 3871              		.loc 1 3614 0 is_stmt 1
 3872 0262 2A4B     		ldr	r3, .L398+52
 3873 0264 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3874 0266 41F00401 		orr	r1, r1, #4
 3875 026a 1970     		strb	r1, [r3]
3616:TP2824/TP2802.c **** 					#endif
 3876              		.loc 1 3616 0
 3877 026c 2848     		ldr	r0, .L398+56
 3878 026e FFF7FEFF 		bl	printf
 3879              	.LVL485:
3619:TP2824/TP2802.c **** 					{
 3880              		.loc 1 3619 0
 3881 0272 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3882 0274 382B     		cmp	r3, #56
 3883 0276 7FF4F0AE 		bne	.L333
3619:TP2824/TP2802.c **** 					{
 3884              		.loc 1 3619 0 is_stmt 0 discriminator 1
 3885 027a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 3886 027c 022B     		cmp	r3, #2
 3887 027e 7FF4ECAE 		bne	.L333
3624:TP2824/TP2802.c **** 					}
 3888              		.loc 1 3624 0 is_stmt 1
 3889 0282 224A     		ldr	r2, .L398+52
 3890 0284 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3891 0286 23F00403 		bic	r3, r3, #4
 3892 028a 1370     		strb	r3, [r2]
 3893 028c E5E6     		b	.L333
 3894              	.L394:
3632:TP2824/TP2802.c **** 				//delay(1);//5ms
 3895              		.loc 1 3632 0
 3896 028e 0120     		movs	r0, #1
 3897 0290 FFF7FEFF 		bl	SetRegPage
 3898              	.LVL486:
3635:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
 3899              		.loc 1 3635 0
 3900 0294 0025     		movs	r5, #0
3636:TP2824/TP2802.c **** 				{
 3901              		.loc 1 3636 0
ARM GAS  /tmp/ccFyOsmB.s 			page 146


 3902 0296 8A24     		movs	r4, #138
 3903 0298 08E0     		b	.L343
 3904              	.LVL487:
 3905              	.L344:
3638:TP2824/TP2802.c **** 					pcnt++;
 3906              		.loc 1 3638 0 discriminator 3
 3907 029a 2046     		mov	r0, r4
 3908 029c FFF7FEFF 		bl	tp28xx_byte_read
 3909              	.LVL488:
 3910 02a0 164B     		ldr	r3, .L398+36
 3911 02a2 5855     		strb	r0, [r3, r5]
3639:TP2824/TP2802.c **** 				}
 3912              		.loc 1 3639 0 discriminator 3
 3913 02a4 0135     		adds	r5, r5, #1
 3914              	.LVL489:
 3915 02a6 EDB2     		uxtb	r5, r5
 3916              	.LVL490:
3636:TP2824/TP2802.c **** 				{
 3917              		.loc 1 3636 0 discriminator 3
 3918 02a8 0134     		adds	r4, r4, #1
 3919              	.LVL491:
 3920 02aa E4B2     		uxtb	r4, r4
 3921              	.LVL492:
 3922              	.L343:
3636:TP2824/TP2802.c **** 				{
 3923              		.loc 1 3636 0 is_stmt 0 discriminator 1
 3924 02ac A12C     		cmp	r4, #161
 3925 02ae F4D9     		bls	.L344
3642:TP2824/TP2802.c **** 				//delay(1);//5ms
 3926              		.loc 1 3642 0 is_stmt 1
 3927 02b0 0021     		movs	r1, #0
 3928 02b2 A720     		movs	r0, #167
 3929 02b4 FFF7FEFF 		bl	tp28xx_byte_write
 3930              	.LVL493:
3644:TP2824/TP2802.c **** 				
 3931              		.loc 1 3644 0
 3932 02b8 8321     		movs	r1, #131
 3933 02ba A720     		movs	r0, #167
 3934 02bc FFF7FEFF 		bl	tp28xx_byte_write
 3935              	.LVL494:
3646:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+1];
 3936              		.loc 1 3646 0
 3937 02c0 0023     		movs	r3, #0
 3938 02c2 05E0     		b	.L345
 3939              	.LVL495:
 3940              	.L346:
3647:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
 3941              		.loc 1 3647 0 discriminator 3
 3942 02c4 5A1C     		adds	r2, r3, #1
 3943 02c6 0D49     		ldr	r1, .L398+36
 3944 02c8 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 3945 02ca 1449     		ldr	r1, .L398+68
 3946 02cc C854     		strb	r0, [r1, r3]
3646:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+1];
 3947              		.loc 1 3646 0 discriminator 3
 3948 02ce D3B2     		uxtb	r3, r2
 3949              	.LVL496:
ARM GAS  /tmp/ccFyOsmB.s 			page 147


 3950              	.L345:
3646:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+1];
 3951              		.loc 1 3646 0 is_stmt 0 discriminator 1
 3952 02d0 042B     		cmp	r3, #4
 3953 02d2 F7D9     		bls	.L346
3648:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+2];
 3954              		.loc 1 3648 0 is_stmt 1
 3955 02d4 0523     		movs	r3, #5
 3956              	.LVL497:
 3957 02d6 2AE0     		b	.L347
 3958              	.L399:
 3959              		.align	2
 3960              	.L398:
 3961 02d8 00000000 		.word	count
 3962 02dc 00000000 		.word	state
 3963 02e0 00000000 		.word	ptztxflag
 3964 02e4 00000000 		.word	.LANCHOR25
 3965 02e8 00000000 		.word	std
 3966 02ec 00000000 		.word	mode
 3967 02f0 00000000 		.word	TVI_speed
 3968 02f4 00000000 		.word	presetNum
 3969 02f8 00000000 		.word	TVI_Command
 3970 02fc 00000000 		.word	tpRxD
 3971 0300 00000000 		.word	COCRX4
 3972 0304 00000000 		.word	.LC30
 3973 0308 08000000 		.word	.LC31
 3974 030c 00000000 		.word	.LANCHOR24
 3975 0310 10000000 		.word	.LC32
 3976 0314 00000000 		.word	COCRX3
 3977 0318 24000000 		.word	.LC33
 3978 031c 00000000 		.word	COCRX2
 3979              	.LVL498:
 3980              	.L348:
3649:TP2824/TP2802.c **** 
 3981              		.loc 1 3649 0 discriminator 3
 3982 0320 9A1C     		adds	r2, r3, #2
 3983 0322 B749     		ldr	r1, .L400
 3984 0324 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3985 0326 B74A     		ldr	r2, .L400+4
 3986 0328 D154     		strb	r1, [r2, r3]
3648:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+2];
 3987              		.loc 1 3648 0 discriminator 3
 3988 032a 0133     		adds	r3, r3, #1
 3989              	.LVL499:
 3990 032c DBB2     		uxtb	r3, r3
 3991              	.LVL500:
 3992              	.L347:
3648:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+2];
 3993              		.loc 1 3648 0 is_stmt 0 discriminator 1
 3994 032e 092B     		cmp	r3, #9
 3995 0330 F6D9     		bls	.L348
3652:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 3996              		.loc 1 3652 0 is_stmt 1
 3997 0332 B548     		ldr	r0, .L400+8
 3998 0334 FFF7FEFF 		bl	printf
 3999              	.LVL501:
3653:TP2824/TP2802.c **** 					printf(" %02X",COCRX2[pcnt]);
ARM GAS  /tmp/ccFyOsmB.s 			page 148


 4000              		.loc 1 3653 0
 4001 0338 0024     		movs	r4, #0
 4002              	.LVL502:
 4003 033a 06E0     		b	.L349
 4004              	.LVL503:
 4005              	.L350:
3654:TP2824/TP2802.c **** 				printf(" %02X",COCRX2[9]);
 4006              		.loc 1 3654 0 discriminator 3
 4007 033c B14B     		ldr	r3, .L400+4
 4008 033e 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 4009 0340 B248     		ldr	r0, .L400+12
 4010 0342 FFF7FEFF 		bl	printf
 4011              	.LVL504:
3653:TP2824/TP2802.c **** 					printf(" %02X",COCRX2[pcnt]);
 4012              		.loc 1 3653 0 discriminator 3
 4013 0346 0134     		adds	r4, r4, #1
 4014              	.LVL505:
 4015 0348 E4B2     		uxtb	r4, r4
 4016              	.LVL506:
 4017              	.L349:
3653:TP2824/TP2802.c **** 					printf(" %02X",COCRX2[pcnt]);
 4018              		.loc 1 3653 0 is_stmt 0 discriminator 1
 4019 034a 052C     		cmp	r4, #5
 4020 034c F6D9     		bls	.L350
3655:TP2824/TP2802.c **** 				#endif
 4021              		.loc 1 3655 0 is_stmt 1
 4022 034e AD4C     		ldr	r4, .L400+4
 4023              	.LVL507:
 4024 0350 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 4025 0352 AE48     		ldr	r0, .L400+12
 4026 0354 FFF7FEFF 		bl	printf
 4027              	.LVL508:
3660:TP2824/TP2802.c **** 				{
 4028              		.loc 1 3660 0
 4029 0358 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 4030 035a 612B     		cmp	r3, #97
 4031 035c 7FF485AE 		bne	.L342
3660:TP2824/TP2802.c **** 				{
 4032              		.loc 1 3660 0 is_stmt 0 discriminator 1
 4033 0360 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 4034 0362 9E2B     		cmp	r3, #158
 4035 0364 7FF481AE 		bne	.L342
3662:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
 4036              		.loc 1 3662 0 is_stmt 1
 4037 0368 A94B     		ldr	r3, .L400+16
 4038 036a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4039 036c 41F00201 		orr	r1, r1, #2
 4040 0370 1970     		strb	r1, [r3]
3664:TP2824/TP2802.c **** 					#endif
 4041              		.loc 1 3664 0
 4042 0372 A848     		ldr	r0, .L400+20
 4043 0374 FFF7FEFF 		bl	printf
 4044              	.LVL509:
3667:TP2824/TP2802.c **** 					{
 4045              		.loc 1 3667 0
 4046 0378 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 4047 037a 382B     		cmp	r3, #56
ARM GAS  /tmp/ccFyOsmB.s 			page 149


 4048 037c 7FF475AE 		bne	.L342
3667:TP2824/TP2802.c **** 					{
 4049              		.loc 1 3667 0 is_stmt 0 discriminator 1
 4050 0380 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 4051 0382 022B     		cmp	r3, #2
 4052 0384 7FF471AE 		bne	.L342
3672:TP2824/TP2802.c **** 					}
 4053              		.loc 1 3672 0 is_stmt 1
 4054 0388 A14A     		ldr	r2, .L400+16
 4055 038a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4056 038c 23F00203 		bic	r3, r3, #2
 4057 0390 1370     		strb	r3, [r2]
 4058 0392 6AE6     		b	.L342
 4059              	.L395:
3680:TP2824/TP2802.c **** 				//delay(1);//5ms
 4060              		.loc 1 3680 0
 4061 0394 0020     		movs	r0, #0
 4062 0396 FFF7FEFF 		bl	SetRegPage
 4063              	.LVL510:
3683:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
 4064              		.loc 1 3683 0
 4065 039a 0025     		movs	r5, #0
3684:TP2824/TP2802.c **** 				{
 4066              		.loc 1 3684 0
 4067 039c 8A24     		movs	r4, #138
 4068 039e 08E0     		b	.L351
 4069              	.LVL511:
 4070              	.L352:
3686:TP2824/TP2802.c **** 					pcnt++;
 4071              		.loc 1 3686 0 discriminator 3
 4072 03a0 2046     		mov	r0, r4
 4073 03a2 FFF7FEFF 		bl	tp28xx_byte_read
 4074              	.LVL512:
 4075 03a6 964B     		ldr	r3, .L400
 4076 03a8 5855     		strb	r0, [r3, r5]
3687:TP2824/TP2802.c **** 				}
 4077              		.loc 1 3687 0 discriminator 3
 4078 03aa 0135     		adds	r5, r5, #1
 4079              	.LVL513:
 4080 03ac EDB2     		uxtb	r5, r5
 4081              	.LVL514:
3684:TP2824/TP2802.c **** 				{
 4082              		.loc 1 3684 0 discriminator 3
 4083 03ae 0134     		adds	r4, r4, #1
 4084              	.LVL515:
 4085 03b0 E4B2     		uxtb	r4, r4
 4086              	.LVL516:
 4087              	.L351:
3684:TP2824/TP2802.c **** 				{
 4088              		.loc 1 3684 0 is_stmt 0 discriminator 1
 4089 03b2 A12C     		cmp	r4, #161
 4090 03b4 F4D9     		bls	.L352
3690:TP2824/TP2802.c **** 				//delay(1);//5ms
 4091              		.loc 1 3690 0 is_stmt 1
 4092 03b6 0021     		movs	r1, #0
 4093 03b8 A720     		movs	r0, #167
 4094 03ba FFF7FEFF 		bl	tp28xx_byte_write
ARM GAS  /tmp/ccFyOsmB.s 			page 150


 4095              	.LVL517:
3692:TP2824/TP2802.c **** 				
 4096              		.loc 1 3692 0
 4097 03be 8321     		movs	r1, #131
 4098 03c0 A720     		movs	r0, #167
 4099 03c2 FFF7FEFF 		bl	tp28xx_byte_write
 4100              	.LVL518:
3694:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+1];
 4101              		.loc 1 3694 0
 4102 03c6 0023     		movs	r3, #0
 4103 03c8 05E0     		b	.L353
 4104              	.LVL519:
 4105              	.L354:
3695:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
 4106              		.loc 1 3695 0 discriminator 3
 4107 03ca 5A1C     		adds	r2, r3, #1
 4108 03cc 8C49     		ldr	r1, .L400
 4109 03ce 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 4110 03d0 9149     		ldr	r1, .L400+24
 4111 03d2 C854     		strb	r0, [r1, r3]
3694:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+1];
 4112              		.loc 1 3694 0 discriminator 3
 4113 03d4 D3B2     		uxtb	r3, r2
 4114              	.LVL520:
 4115              	.L353:
3694:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+1];
 4116              		.loc 1 3694 0 is_stmt 0 discriminator 1
 4117 03d6 042B     		cmp	r3, #4
 4118 03d8 F7D9     		bls	.L354
3696:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+2];
 4119              		.loc 1 3696 0 is_stmt 1
 4120 03da 0523     		movs	r3, #5
 4121              	.LVL521:
 4122 03dc 06E0     		b	.L355
 4123              	.LVL522:
 4124              	.L356:
3697:TP2824/TP2802.c **** 				
 4125              		.loc 1 3697 0 discriminator 3
 4126 03de 9A1C     		adds	r2, r3, #2
 4127 03e0 8749     		ldr	r1, .L400
 4128 03e2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 4129 03e4 8C4A     		ldr	r2, .L400+24
 4130 03e6 D154     		strb	r1, [r2, r3]
3696:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+2];
 4131              		.loc 1 3696 0 discriminator 3
 4132 03e8 0133     		adds	r3, r3, #1
 4133              	.LVL523:
 4134 03ea DBB2     		uxtb	r3, r3
 4135              	.LVL524:
 4136              	.L355:
3696:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+2];
 4137              		.loc 1 3696 0 is_stmt 0 discriminator 1
 4138 03ec 092B     		cmp	r3, #9
 4139 03ee F6D9     		bls	.L356
3700:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 4140              		.loc 1 3700 0 is_stmt 1
 4141 03f0 8A48     		ldr	r0, .L400+28
ARM GAS  /tmp/ccFyOsmB.s 			page 151


 4142 03f2 FFF7FEFF 		bl	printf
 4143              	.LVL525:
3701:TP2824/TP2802.c **** 					printf(" %02X",COCRX1[pcnt]);
 4144              		.loc 1 3701 0
 4145 03f6 0024     		movs	r4, #0
 4146              	.LVL526:
 4147 03f8 06E0     		b	.L357
 4148              	.LVL527:
 4149              	.L358:
3702:TP2824/TP2802.c **** 				printf(" %02X",COCRX1[9]);
 4150              		.loc 1 3702 0 discriminator 3
 4151 03fa 874B     		ldr	r3, .L400+24
 4152 03fc 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 4153 03fe 8348     		ldr	r0, .L400+12
 4154 0400 FFF7FEFF 		bl	printf
 4155              	.LVL528:
3701:TP2824/TP2802.c **** 					printf(" %02X",COCRX1[pcnt]);
 4156              		.loc 1 3701 0 discriminator 3
 4157 0404 0134     		adds	r4, r4, #1
 4158              	.LVL529:
 4159 0406 E4B2     		uxtb	r4, r4
 4160              	.LVL530:
 4161              	.L357:
3701:TP2824/TP2802.c **** 					printf(" %02X",COCRX1[pcnt]);
 4162              		.loc 1 3701 0 is_stmt 0 discriminator 1
 4163 0408 052C     		cmp	r4, #5
 4164 040a F6D9     		bls	.L358
3703:TP2824/TP2802.c **** 				#endif
 4165              		.loc 1 3703 0 is_stmt 1
 4166 040c 824C     		ldr	r4, .L400+24
 4167              	.LVL531:
 4168 040e 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 4169 0410 7E48     		ldr	r0, .L400+12
 4170 0412 FFF7FEFF 		bl	printf
 4171              	.LVL532:
3708:TP2824/TP2802.c **** 				{
 4172              		.loc 1 3708 0
 4173 0416 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 4174 0418 612B     		cmp	r3, #97
 4175 041a 7FF42EAE 		bne	.L323
3708:TP2824/TP2802.c **** 				{
 4176              		.loc 1 3708 0 is_stmt 0 discriminator 1
 4177 041e 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 4178 0420 9E2B     		cmp	r3, #158
 4179 0422 7FF42AAE 		bne	.L323
3710:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
 4180              		.loc 1 3710 0 is_stmt 1
 4181 0426 7A4B     		ldr	r3, .L400+16
 4182 0428 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4183 042a 41F00101 		orr	r1, r1, #1
 4184 042e 1970     		strb	r1, [r3]
3712:TP2824/TP2802.c **** 					#endif
 4185              		.loc 1 3712 0
 4186 0430 7848     		ldr	r0, .L400+20
 4187 0432 FFF7FEFF 		bl	printf
 4188              	.LVL533:
3715:TP2824/TP2802.c **** 					{
ARM GAS  /tmp/ccFyOsmB.s 			page 152


 4189              		.loc 1 3715 0
 4190 0436 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 4191 0438 382B     		cmp	r3, #56
 4192 043a 7FF41EAE 		bne	.L323
3715:TP2824/TP2802.c **** 					{
 4193              		.loc 1 3715 0 is_stmt 0 discriminator 1
 4194 043e 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 4195 0440 022B     		cmp	r3, #2
 4196 0442 7FF41AAE 		bne	.L323
3720:TP2824/TP2802.c **** 					}
 4197              		.loc 1 3720 0 is_stmt 1
 4198 0446 724A     		ldr	r2, .L400+16
 4199 0448 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4200 044a 23F00103 		bic	r3, r3, #1
 4201 044e 1370     		strb	r3, [r2]
 4202 0450 13E6     		b	.L323
 4203              	.LVL534:
 4204              	.L373:
 4205              	.LBB3:
3744:TP2824/TP2802.c **** 						else if(TVI_Command==0x10)//Focus -
 4206              		.loc 1 3744 0
 4207 0452 0426     		movs	r6, #4
 4208              	.LVL535:
 4209              	.L361:
3776:TP2824/TP2802.c **** 						cmd2=AHDBitsReverse(cmd2);//20200413
 4210              		.loc 1 3776 0
 4211 0454 3046     		mov	r0, r6
 4212 0456 FFF7FEFF 		bl	AHDBitsReverse
 4213              	.LVL536:
 4214 045a 0646     		mov	r6, r0
 4215              	.LVL537:
3777:TP2824/TP2802.c **** 						dat1=AHDBitsReverse(dat1);//20200413
 4216              		.loc 1 3777 0
 4217 045c 2846     		mov	r0, r5
 4218 045e FFF7FEFF 		bl	AHDBitsReverse
 4219              	.LVL538:
 4220 0462 0546     		mov	r5, r0
 4221              	.LVL539:
3778:TP2824/TP2802.c **** 						dat2=AHDBitsReverse(dat2);//20200413
 4222              		.loc 1 3778 0
 4223 0464 3846     		mov	r0, r7
 4224 0466 FFF7FEFF 		bl	AHDBitsReverse
 4225              	.LVL540:
 4226 046a 0746     		mov	r7, r0
 4227              	.LVL541:
3779:TP2824/TP2802.c **** 						
 4228              		.loc 1 3779 0
 4229 046c 4046     		mov	r0, r8
 4230 046e FFF7FEFF 		bl	AHDBitsReverse
 4231              	.LVL542:
 4232 0472 8046     		mov	r8, r0
 4233              	.LVL543:
3781:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5a, cmd1);//command byte 1
 4234              		.loc 1 3781 0
 4235 0474 2046     		mov	r0, r4
 4236 0476 FFF7FEFF 		bl	SetRegPage
 4237              	.LVL544:
ARM GAS  /tmp/ccFyOsmB.s 			page 153


3782:TP2824/TP2802.c **** 						tp28xx_byte_write(0x59, cmd2);//command byte 2
 4238              		.loc 1 3782 0
 4239 047a 3146     		mov	r1, r6
 4240 047c 5A20     		movs	r0, #90
 4241 047e FFF7FEFF 		bl	tp28xx_byte_write
 4242              	.LVL545:
3783:TP2824/TP2802.c **** 
 4243              		.loc 1 3783 0
 4244 0482 2946     		mov	r1, r5
 4245 0484 5920     		movs	r0, #89
 4246 0486 FFF7FEFF 		bl	tp28xx_byte_write
 4247              	.LVL546:
3785:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5f, dat2);//data byte 2
 4248              		.loc 1 3785 0
 4249 048a 3946     		mov	r1, r7
 4250 048c 6020     		movs	r0, #96
 4251 048e FFF7FEFF 		bl	tp28xx_byte_write
 4252              	.LVL547:
3786:TP2824/TP2802.c **** 
 4253              		.loc 1 3786 0
 4254 0492 4146     		mov	r1, r8
 4255 0494 5F20     		movs	r0, #95
 4256 0496 FFF7FEFF 		bl	tp28xx_byte_write
 4257              	.LVL548:
3788:TP2824/TP2802.c **** 						delay(10);//50ms
 4258              		.loc 1 3788 0
 4259 049a 6121     		movs	r1, #97
 4260 049c 6F20     		movs	r0, #111
 4261 049e FFF7FEFF 		bl	tp28xx_byte_write
 4262              	.LVL549:
3789:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x60);
 4263              		.loc 1 3789 0
 4264 04a2 0A20     		movs	r0, #10
 4265 04a4 FFF7FEFF 		bl	delay
 4266              	.LVL550:
3790:TP2824/TP2802.c **** 						printf("CVBS-Tx %x,%x,%x,%x\n",cmd1,cmd2,dat1,dat2);
 4267              		.loc 1 3790 0
 4268 04a8 6021     		movs	r1, #96
 4269 04aa 6F20     		movs	r0, #111
 4270 04ac FFF7FEFF 		bl	tp28xx_byte_write
 4271              	.LVL551:
3791:TP2824/TP2802.c **** 
 4272              		.loc 1 3791 0
 4273 04b0 CDF80080 		str	r8, [sp]
 4274 04b4 3B46     		mov	r3, r7
 4275 04b6 2A46     		mov	r2, r5
 4276 04b8 3146     		mov	r1, r6
 4277 04ba 5948     		ldr	r0, .L400+32
 4278 04bc FFF7FEFF 		bl	printf
 4279              	.LVL552:
 4280              	.L362:
 4281              	.LBE3:
3808:TP2824/TP2802.c **** 				}
 4282              		.loc 1 3808 0
 4283 04c0 584B     		ldr	r3, .L400+36
 4284 04c2 0022     		movs	r2, #0
 4285 04c4 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccFyOsmB.s 			page 154


 4286              	.L359:
3810:TP2824/TP2802.c **** 				{
 4287              		.loc 1 3810 0
 4288 04c6 584B     		ldr	r3, .L400+40
 4289 04c8 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4290 04ca 584B     		ldr	r3, .L400+44
 4291 04cc 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 4292 04ce 022B     		cmp	r3, #2
 4293 04d0 5BD0     		beq	.L396
 4294              	.L363:
3868:TP2824/TP2802.c **** 			{
 4295              		.loc 1 3868 0
 4296 04d2 554B     		ldr	r3, .L400+40
 4297 04d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4298 04d6 554A     		ldr	r2, .L400+44
 4299 04d8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4300 04da 012B     		cmp	r3, #1
 4301 04dc 00F00981 		beq	.L397
 4302              	.L372:
3958:TP2824/TP2802.c **** 			}
 4303              		.loc 1 3958 0
 4304 04e0 504B     		ldr	r3, .L400+36
 4305 04e2 0022     		movs	r2, #0
 4306 04e4 1A60     		str	r2, [r3]
 4307              		.loc 1 3961 0
 4308 04e6 97E5     		b	.L321
 4309              	.LVL553:
 4310              	.L374:
 4311              	.LBB4:
3746:TP2824/TP2802.c **** 						else if(TVI_Command==0x11)//Focus +
 4312              		.loc 1 3746 0
 4313 04e8 0126     		movs	r6, #1
 4314 04ea B3E7     		b	.L361
 4315              	.L375:
3736:TP2824/TP2802.c **** 						
 4316              		.loc 1 3736 0
 4317 04ec 2E46     		mov	r6, r5
3748:TP2824/TP2802.c **** 						else if(TVI_Command==0x12)//Zoom -
 4318              		.loc 1 3748 0
 4319 04ee 8025     		movs	r5, #128
 4320 04f0 B0E7     		b	.L361
 4321              	.L376:
3736:TP2824/TP2802.c **** 						
 4322              		.loc 1 3736 0
 4323 04f2 2E46     		mov	r6, r5
3750:TP2824/TP2802.c **** 						else if(TVI_Command==0x13)//Zoom +
 4324              		.loc 1 3750 0
 4325 04f4 4025     		movs	r5, #64
 4326 04f6 ADE7     		b	.L361
 4327              	.L377:
3736:TP2824/TP2802.c **** 						
 4328              		.loc 1 3736 0
 4329 04f8 2E46     		mov	r6, r5
3752:TP2824/TP2802.c **** 						else if(TVI_Command==0x06)//up
 4330              		.loc 1 3752 0
 4331 04fa 2025     		movs	r5, #32
 4332 04fc AAE7     		b	.L361
ARM GAS  /tmp/ccFyOsmB.s 			page 155


 4333              	.L378:
3736:TP2824/TP2802.c **** 						
 4334              		.loc 1 3736 0
 4335 04fe 2E46     		mov	r6, r5
3754:TP2824/TP2802.c **** 						else if(TVI_Command==0x07)//down
 4336              		.loc 1 3754 0
 4337 0500 0825     		movs	r5, #8
 4338 0502 A7E7     		b	.L361
 4339              	.L379:
3736:TP2824/TP2802.c **** 						
 4340              		.loc 1 3736 0
 4341 0504 2E46     		mov	r6, r5
3756:TP2824/TP2802.c **** 						else if(TVI_Command==0x09)//left
 4342              		.loc 1 3756 0
 4343 0506 1025     		movs	r5, #16
 4344 0508 A4E7     		b	.L361
 4345              	.L380:
3736:TP2824/TP2802.c **** 						
 4346              		.loc 1 3736 0
 4347 050a 2E46     		mov	r6, r5
3758:TP2824/TP2802.c **** 						else if(TVI_Command==0x08)//right
 4348              		.loc 1 3758 0
 4349 050c 0425     		movs	r5, #4
 4350 050e A1E7     		b	.L361
 4351              	.L381:
 4352 0510 3346     		mov	r3, r6
3736:TP2824/TP2802.c **** 						
 4353              		.loc 1 3736 0
 4354 0512 2E46     		mov	r6, r5
3760:TP2824/TP2802.c **** 						else if(TVI_Command==0x0A)//up + left
 4355              		.loc 1 3760 0
 4356 0514 1D46     		mov	r5, r3
 4357 0516 9DE7     		b	.L361
 4358              	.L382:
3736:TP2824/TP2802.c **** 						
 4359              		.loc 1 3736 0
 4360 0518 2E46     		mov	r6, r5
3762:TP2824/TP2802.c **** 						else if(TVI_Command==0x0C)//up + right
 4361              		.loc 1 3762 0
 4362 051a 0C25     		movs	r5, #12
 4363 051c 9AE7     		b	.L361
 4364              	.L383:
3736:TP2824/TP2802.c **** 						
 4365              		.loc 1 3736 0
 4366 051e 2E46     		mov	r6, r5
3764:TP2824/TP2802.c **** 						else if(TVI_Command==0x0B)//down + left
 4367              		.loc 1 3764 0
 4368 0520 0A25     		movs	r5, #10
 4369 0522 97E7     		b	.L361
 4370              	.L384:
3736:TP2824/TP2802.c **** 						
 4371              		.loc 1 3736 0
 4372 0524 2E46     		mov	r6, r5
3766:TP2824/TP2802.c **** 						else if(TVI_Command==0x0D)//down + right
 4373              		.loc 1 3766 0
 4374 0526 1425     		movs	r5, #20
 4375 0528 94E7     		b	.L361
ARM GAS  /tmp/ccFyOsmB.s 			page 156


 4376              	.L385:
3736:TP2824/TP2802.c **** 						
 4377              		.loc 1 3736 0
 4378 052a 2E46     		mov	r6, r5
3768:TP2824/TP2802.c **** 						else if(TVI_Command==0x17)//PRESET x
 4379              		.loc 1 3768 0
 4380 052c 1225     		movs	r5, #18
 4381 052e 91E7     		b	.L361
 4382              	.L386:
3772:TP2824/TP2802.c **** 							dat2=(tByte)presetNum;
 4383              		.loc 1 3772 0
 4384 0530 2F46     		mov	r7, r5
 4385              	.LVL554:
3736:TP2824/TP2802.c **** 						
 4386              		.loc 1 3736 0
 4387 0532 2E46     		mov	r6, r5
3771:TP2824/TP2802.c **** 							dat1=0;
 4388              		.loc 1 3771 0
 4389 0534 0725     		movs	r5, #7
 4390 0536 8DE7     		b	.L361
 4391              	.LVL555:
 4392              	.L360:
 4393              	.LBE4:
3796:TP2824/TP2802.c **** 						tp28xx_byte_write(0x59, (tByte)TVI_Command);
 4394              		.loc 1 3796 0
 4395 0538 2046     		mov	r0, r4
 4396 053a FFF7FEFF 		bl	SetRegPage
 4397              	.LVL556:
3797:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5a, (tByte)presetNum);
 4398              		.loc 1 3797 0
 4399 053e 3C4C     		ldr	r4, .L400+48
 4400 0540 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4401 0542 5920     		movs	r0, #89
 4402 0544 FFF7FEFF 		bl	tp28xx_byte_write
 4403              	.LVL557:
3798:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5d, (tByte)TVI_speed);//0x5f  check this????
 4404              		.loc 1 3798 0
 4405 0548 3A4D     		ldr	r5, .L400+52
 4406 054a 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 4407 054c 5A20     		movs	r0, #90
 4408 054e FFF7FEFF 		bl	tp28xx_byte_write
 4409              	.LVL558:
3799:TP2824/TP2802.c **** 						tp28xx_byte_write(0x60, (tByte)TVI_Chksum);
 4410              		.loc 1 3799 0
 4411 0552 394E     		ldr	r6, .L400+56
 4412 0554 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 4413 0556 5D20     		movs	r0, #93
 4414 0558 FFF7FEFF 		bl	tp28xx_byte_write
 4415              	.LVL559:
3800:TP2824/TP2802.c **** 						
 4416              		.loc 1 3800 0
 4417 055c 374B     		ldr	r3, .L400+60
 4418 055e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4419 0560 6020     		movs	r0, #96
 4420 0562 FFF7FEFF 		bl	tp28xx_byte_write
 4421              	.LVL560:
3802:TP2824/TP2802.c **** 						delay(10);//50ms
ARM GAS  /tmp/ccFyOsmB.s 			page 157


 4422              		.loc 1 3802 0
 4423 0566 4121     		movs	r1, #65
 4424 0568 6F20     		movs	r0, #111
 4425 056a FFF7FEFF 		bl	tp28xx_byte_write
 4426              	.LVL561:
3803:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x40);
 4427              		.loc 1 3803 0
 4428 056e 0A20     		movs	r0, #10
 4429 0570 FFF7FEFF 		bl	delay
 4430              	.LVL562:
3804:TP2824/TP2802.c **** 						printf("TVI-Tx %x,%x,%x\n",TVI_Command,presetNum,TVI_speed);
 4431              		.loc 1 3804 0
 4432 0574 4021     		movs	r1, #64
 4433 0576 6F20     		movs	r0, #111
 4434 0578 FFF7FEFF 		bl	tp28xx_byte_write
 4435              	.LVL563:
3805:TP2824/TP2802.c **** 					}
 4436              		.loc 1 3805 0
 4437 057c 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 4438 057e 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 4439 0580 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4440 0582 2F48     		ldr	r0, .L400+64
 4441 0584 FFF7FEFF 		bl	printf
 4442              	.LVL564:
 4443 0588 9AE7     		b	.L362
 4444              	.LVL565:
 4445              	.L396:
3812:TP2824/TP2802.c **** 
 4446              		.loc 1 3812 0
 4447 058a FFF7FEFF 		bl	SetRegPage
 4448              	.LVL566:
3814:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6e, 0x02);
 4449              		.loc 1 3814 0
 4450 058e A521     		movs	r1, #165
 4451 0590 6E20     		movs	r0, #110
 4452 0592 FFF7FEFF 		bl	tp28xx_byte_write
 4453              	.LVL567:
3815:TP2824/TP2802.c **** 					switch(TVI_Command)
 4454              		.loc 1 3815 0
 4455 0596 0221     		movs	r1, #2
 4456 0598 6E20     		movs	r0, #110
 4457 059a FFF7FEFF 		bl	tp28xx_byte_write
 4458              	.LVL568:
3816:TP2824/TP2802.c **** 					{
 4459              		.loc 1 3816 0
 4460 059e 244B     		ldr	r3, .L400+48
 4461 05a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4462 05a2 063B     		subs	r3, r3, #6
 4463 05a4 092B     		cmp	r3, #9
 4464 05a6 00F29380 		bhi	.L364
 4465 05aa DFE803F0 		tbb	[pc, r3]
 4466              	.L366:
 4467 05ae 4D       		.byte	(.L365-.L366)/2
 4468 05af 5E       		.byte	(.L367-.L366)/2
 4469 05b0 80       		.byte	(.L368-.L366)/2
 4470 05b1 6F       		.byte	(.L369-.L366)/2
 4471 05b2 91       		.byte	(.L364-.L366)/2
ARM GAS  /tmp/ccFyOsmB.s 			page 158


 4472 05b3 91       		.byte	(.L364-.L366)/2
 4473 05b4 91       		.byte	(.L364-.L366)/2
 4474 05b5 91       		.byte	(.L364-.L366)/2
 4475 05b6 91       		.byte	(.L364-.L366)/2
 4476 05b7 05       		.byte	(.L370-.L366)/2
 4477              		.p2align 1
 4478              	.L370:
3819:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4479              		.loc 1 3819 0
 4480 05b8 5021     		movs	r1, #80
 4481 05ba 6E20     		movs	r0, #110
 4482 05bc FFF7FEFF 		bl	tp28xx_byte_write
 4483              	.LVL569:
3820:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4484              		.loc 1 3820 0
 4485 05c0 0021     		movs	r1, #0
 4486 05c2 6E20     		movs	r0, #110
 4487 05c4 FFF7FEFF 		bl	tp28xx_byte_write
 4488              	.LVL570:
3821:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4489              		.loc 1 3821 0
 4490 05c8 0021     		movs	r1, #0
 4491 05ca 6E20     		movs	r0, #110
 4492 05cc FFF7FEFF 		bl	tp28xx_byte_write
 4493              	.LVL571:
3822:TP2824/TP2802.c **** 							break;
 4494              		.loc 1 3822 0
 4495 05d0 0021     		movs	r1, #0
 4496 05d2 6E20     		movs	r0, #110
 4497 05d4 FFF7FEFF 		bl	tp28xx_byte_write
 4498              	.LVL572:
 4499              	.L371:
3862:TP2824/TP2802.c **** 					delay(5);//50ms
 4500              		.loc 1 3862 0
 4501 05d8 4921     		movs	r1, #73
 4502 05da 6F20     		movs	r0, #111
 4503 05dc FFF7FEFF 		bl	tp28xx_byte_write
 4504              	.LVL573:
3863:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x48);
 4505              		.loc 1 3863 0
 4506 05e0 0520     		movs	r0, #5
 4507 05e2 FFF7FEFF 		bl	delay
 4508              	.LVL574:
3864:TP2824/TP2802.c **** 					ptztxflag=0;
 4509              		.loc 1 3864 0
 4510 05e6 4821     		movs	r1, #72
 4511 05e8 6F20     		movs	r0, #111
 4512 05ea FFF7FEFF 		bl	tp28xx_byte_write
 4513              	.LVL575:
3865:TP2824/TP2802.c **** 					printf("CVI-Tx %x\n",TVI_Command);
 4514              		.loc 1 3865 0
 4515 05ee 0D4B     		ldr	r3, .L400+36
 4516 05f0 0022     		movs	r2, #0
 4517 05f2 1A60     		str	r2, [r3]
3866:TP2824/TP2802.c **** 				}
 4518              		.loc 1 3866 0
 4519 05f4 0E4B     		ldr	r3, .L400+48
ARM GAS  /tmp/ccFyOsmB.s 			page 159


 4520 05f6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4521 05f8 1248     		ldr	r0, .L400+68
 4522 05fa FFF7FEFF 		bl	printf
 4523              	.LVL576:
 4524 05fe 68E7     		b	.L363
 4525              	.L401:
 4526              		.align	2
 4527              	.L400:
 4528 0600 00000000 		.word	tpRxD
 4529 0604 00000000 		.word	COCRX2
 4530 0608 2C000000 		.word	.LC34
 4531 060c 08000000 		.word	.LC31
 4532 0610 00000000 		.word	.LANCHOR24
 4533 0614 10000000 		.word	.LC32
 4534 0618 00000000 		.word	COCRX1
 4535 061c 34000000 		.word	.LC35
 4536 0620 3C000000 		.word	.LC36
 4537 0624 00000000 		.word	ptztxflag
 4538 0628 00000000 		.word	.LANCHOR25
 4539 062c 00000000 		.word	std
 4540 0630 00000000 		.word	TVI_Command
 4541 0634 00000000 		.word	presetNum
 4542 0638 00000000 		.word	TVI_speed
 4543 063c 00000000 		.word	TVI_Chksum
 4544 0640 54000000 		.word	.LC37
 4545 0644 68000000 		.word	.LC38
 4546              	.L365:
3826:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4547              		.loc 1 3826 0
 4548 0648 0821     		movs	r1, #8
 4549 064a 6E20     		movs	r0, #110
 4550 064c FFF7FEFF 		bl	tp28xx_byte_write
 4551              	.LVL577:
3827:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
 4552              		.loc 1 3827 0
 4553 0650 0021     		movs	r1, #0
 4554 0652 6E20     		movs	r0, #110
 4555 0654 FFF7FEFF 		bl	tp28xx_byte_write
 4556              	.LVL578:
3828:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4557              		.loc 1 3828 0
 4558 0658 FF21     		movs	r1, #255
 4559 065a 6E20     		movs	r0, #110
 4560 065c FFF7FEFF 		bl	tp28xx_byte_write
 4561              	.LVL579:
3829:TP2824/TP2802.c **** 							break;
 4562              		.loc 1 3829 0
 4563 0660 0021     		movs	r1, #0
 4564 0662 6E20     		movs	r0, #110
 4565 0664 FFF7FEFF 		bl	tp28xx_byte_write
 4566              	.LVL580:
3830:TP2824/TP2802.c **** 							
 4567              		.loc 1 3830 0
 4568 0668 B6E7     		b	.L371
 4569              	.L367:
3833:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4570              		.loc 1 3833 0
ARM GAS  /tmp/ccFyOsmB.s 			page 160


 4571 066a 0421     		movs	r1, #4
 4572 066c 6E20     		movs	r0, #110
 4573 066e FFF7FEFF 		bl	tp28xx_byte_write
 4574              	.LVL581:
3834:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
 4575              		.loc 1 3834 0
 4576 0672 0021     		movs	r1, #0
 4577 0674 6E20     		movs	r0, #110
 4578 0676 FFF7FEFF 		bl	tp28xx_byte_write
 4579              	.LVL582:
3835:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4580              		.loc 1 3835 0
 4581 067a FF21     		movs	r1, #255
 4582 067c 6E20     		movs	r0, #110
 4583 067e FFF7FEFF 		bl	tp28xx_byte_write
 4584              	.LVL583:
3836:TP2824/TP2802.c **** 							break;
 4585              		.loc 1 3836 0
 4586 0682 0021     		movs	r1, #0
 4587 0684 6E20     		movs	r0, #110
 4588 0686 FFF7FEFF 		bl	tp28xx_byte_write
 4589              	.LVL584:
3837:TP2824/TP2802.c **** 							
 4590              		.loc 1 3837 0
 4591 068a A5E7     		b	.L371
 4592              	.L369:
3840:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
 4593              		.loc 1 3840 0
 4594 068c 0221     		movs	r1, #2
 4595 068e 6E20     		movs	r0, #110
 4596 0690 FFF7FEFF 		bl	tp28xx_byte_write
 4597              	.LVL585:
3841:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4598              		.loc 1 3841 0
 4599 0694 FF21     		movs	r1, #255
 4600 0696 6E20     		movs	r0, #110
 4601 0698 FFF7FEFF 		bl	tp28xx_byte_write
 4602              	.LVL586:
3842:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4603              		.loc 1 3842 0
 4604 069c 0021     		movs	r1, #0
 4605 069e 6E20     		movs	r0, #110
 4606 06a0 FFF7FEFF 		bl	tp28xx_byte_write
 4607              	.LVL587:
3843:TP2824/TP2802.c **** 							break;
 4608              		.loc 1 3843 0
 4609 06a4 0021     		movs	r1, #0
 4610 06a6 6E20     		movs	r0, #110
 4611 06a8 FFF7FEFF 		bl	tp28xx_byte_write
 4612              	.LVL588:
3844:TP2824/TP2802.c **** 							
 4613              		.loc 1 3844 0
 4614 06ac 94E7     		b	.L371
 4615              	.L368:
3847:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
 4616              		.loc 1 3847 0
 4617 06ae 0121     		movs	r1, #1
ARM GAS  /tmp/ccFyOsmB.s 			page 161


 4618 06b0 6E20     		movs	r0, #110
 4619 06b2 FFF7FEFF 		bl	tp28xx_byte_write
 4620              	.LVL589:
3848:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4621              		.loc 1 3848 0
 4622 06b6 FF21     		movs	r1, #255
 4623 06b8 6E20     		movs	r0, #110
 4624 06ba FFF7FEFF 		bl	tp28xx_byte_write
 4625              	.LVL590:
3849:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4626              		.loc 1 3849 0
 4627 06be 0021     		movs	r1, #0
 4628 06c0 6E20     		movs	r0, #110
 4629 06c2 FFF7FEFF 		bl	tp28xx_byte_write
 4630              	.LVL591:
3850:TP2824/TP2802.c **** 							break;
 4631              		.loc 1 3850 0
 4632 06c6 0021     		movs	r1, #0
 4633 06c8 6E20     		movs	r0, #110
 4634 06ca FFF7FEFF 		bl	tp28xx_byte_write
 4635              	.LVL592:
3851:TP2824/TP2802.c **** 							
 4636              		.loc 1 3851 0
 4637 06ce 83E7     		b	.L371
 4638              	.L364:
3855:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4639              		.loc 1 3855 0
 4640 06d0 0021     		movs	r1, #0
 4641 06d2 6E20     		movs	r0, #110
 4642 06d4 FFF7FEFF 		bl	tp28xx_byte_write
 4643              	.LVL593:
3856:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4644              		.loc 1 3856 0
 4645 06d8 0021     		movs	r1, #0
 4646 06da 6E20     		movs	r0, #110
 4647 06dc FFF7FEFF 		bl	tp28xx_byte_write
 4648              	.LVL594:
3857:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4649              		.loc 1 3857 0
 4650 06e0 0021     		movs	r1, #0
 4651 06e2 6E20     		movs	r0, #110
 4652 06e4 FFF7FEFF 		bl	tp28xx_byte_write
 4653              	.LVL595:
3858:TP2824/TP2802.c **** 							break;
 4654              		.loc 1 3858 0
 4655 06e8 0021     		movs	r1, #0
 4656 06ea 6E20     		movs	r0, #110
 4657 06ec FFF7FEFF 		bl	tp28xx_byte_write
 4658              	.LVL596:
3859:TP2824/TP2802.c **** 					}
 4659              		.loc 1 3859 0
 4660 06f0 72E7     		b	.L371
 4661              	.L397:
3871:TP2824/TP2802.c **** 				
 4662              		.loc 1 3871 0
 4663 06f2 FFF7FEFF 		bl	TVICommandToAHData
 4664              	.LVL597:
ARM GAS  /tmp/ccFyOsmB.s 			page 162


3873:TP2824/TP2802.c **** 					//SetRegPage(0x04);	
 4665              		.loc 1 3873 0
 4666 06f6 304B     		ldr	r3, .L402
 4667 06f8 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4668 06fa FFF7FEFF 		bl	SetRegPage
 4669              	.LVL598:
3881:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, 0x00);
 4670              		.loc 1 3881 0
 4671 06fe 0021     		movs	r1, #0
 4672 0700 5A20     		movs	r0, #90
 4673 0702 FFF7FEFF 		bl	tp28xx_byte_write
 4674              	.LVL599:
3882:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, 0x00);
 4675              		.loc 1 3882 0
 4676 0706 0021     		movs	r1, #0
 4677 0708 6020     		movs	r0, #96
 4678 070a FFF7FEFF 		bl	tp28xx_byte_write
 4679              	.LVL600:
3883:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, 0x00);
 4680              		.loc 1 3883 0
 4681 070e 0021     		movs	r1, #0
 4682 0710 6620     		movs	r0, #102
 4683 0712 FFF7FEFF 		bl	tp28xx_byte_write
 4684              	.LVL601:
3884:TP2824/TP2802.c **** 					
 4685              		.loc 1 3884 0
 4686 0716 0021     		movs	r1, #0
 4687 0718 6C20     		movs	r0, #108
 4688 071a FFF7FEFF 		bl	tp28xx_byte_write
 4689              	.LVL602:
3887:TP2824/TP2802.c **** 					//delay(5);//50ms	//20210514
 4690              		.loc 1 3887 0
 4691 071e 4521     		movs	r1, #69
 4692 0720 6F20     		movs	r0, #111
 4693 0722 FFF7FEFF 		bl	tp28xx_byte_write
 4694              	.LVL603:
3889:TP2824/TP2802.c **** 					
 4695              		.loc 1 3889 0
 4696 0726 4421     		movs	r1, #68
 4697 0728 6F20     		movs	r0, #111
 4698 072a FFF7FEFF 		bl	tp28xx_byte_write
 4699              	.LVL604:
3891:TP2824/TP2802.c **** 			
 4700              		.loc 1 3891 0
 4701 072e 2320     		movs	r0, #35
 4702 0730 FFF7FEFF 		bl	HAL_Delay
 4703              	.LVL605:
3894:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, AHDBitsReverse(AHDcmd2));
 4704              		.loc 1 3894 0
 4705 0734 214D     		ldr	r5, .L402+4
 4706 0736 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 4707 0738 FFF7FEFF 		bl	AHDBitsReverse
 4708              	.LVL606:
 4709 073c 0146     		mov	r1, r0
 4710 073e 5A20     		movs	r0, #90
 4711 0740 FFF7FEFF 		bl	tp28xx_byte_write
 4712              	.LVL607:
ARM GAS  /tmp/ccFyOsmB.s 			page 163


3895:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, AHDBitsReverse(AHDcmd3));
 4713              		.loc 1 3895 0
 4714 0744 1E4E     		ldr	r6, .L402+8
 4715 0746 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 4716 0748 FFF7FEFF 		bl	AHDBitsReverse
 4717              	.LVL608:
 4718 074c 0146     		mov	r1, r0
 4719 074e 6020     		movs	r0, #96
 4720 0750 FFF7FEFF 		bl	tp28xx_byte_write
 4721              	.LVL609:
3896:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, AHDBitsReverse(AHDcmd4));
 4722              		.loc 1 3896 0
 4723 0754 1B4F     		ldr	r7, .L402+12
 4724 0756 3878     		ldrb	r0, [r7]	@ zero_extendqisi2
 4725 0758 FFF7FEFF 		bl	AHDBitsReverse
 4726              	.LVL610:
 4727 075c 0146     		mov	r1, r0
 4728 075e 6620     		movs	r0, #102
 4729 0760 FFF7FEFF 		bl	tp28xx_byte_write
 4730              	.LVL611:
3897:TP2824/TP2802.c **** 				
 4731              		.loc 1 3897 0
 4732 0764 184C     		ldr	r4, .L402+16
 4733 0766 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4734 0768 FFF7FEFF 		bl	AHDBitsReverse
 4735              	.LVL612:
 4736 076c 0146     		mov	r1, r0
 4737 076e 6C20     		movs	r0, #108
 4738 0770 FFF7FEFF 		bl	tp28xx_byte_write
 4739              	.LVL613:
3901:TP2824/TP2802.c **** 					//delay(5);//50ms	//20210514
 4740              		.loc 1 3901 0
 4741 0774 4521     		movs	r1, #69
 4742 0776 6F20     		movs	r0, #111
 4743 0778 FFF7FEFF 		bl	tp28xx_byte_write
 4744              	.LVL614:
3903:TP2824/TP2802.c **** 				
 4745              		.loc 1 3903 0
 4746 077c 4421     		movs	r1, #68
 4747 077e 6F20     		movs	r0, #111
 4748 0780 FFF7FEFF 		bl	tp28xx_byte_write
 4749              	.LVL615:
3905:TP2824/TP2802.c **** 
 4750              		.loc 1 3905 0
 4751 0784 2320     		movs	r0, #35
 4752 0786 FFF7FEFF 		bl	HAL_Delay
 4753              	.LVL616:
3952:TP2824/TP2802.c **** 				//printf("~AHD %x,%x,%x,%x\n",AHDBitsReverse(AHDcmd1),AHDBitsReverse(0xF1),AHDBitsReverse(0x02)
 4754              		.loc 1 3952 0
 4755 078a 104B     		ldr	r3, .L402+20
 4756 078c 0022     		movs	r2, #0
 4757 078e 1A60     		str	r2, [r3]
3955:TP2824/TP2802.c **** 				Printf("Tx %02x,%02x,%02x,%02x",(WORD)AHDcmd1,(WORD)AHDcmd2,(WORD)AHDcmd3,(WORD)AHDcmd4);
 4758              		.loc 1 3955 0
 4759 0790 0F4B     		ldr	r3, .L402+24
 4760 0792 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4761 0794 0F4A     		ldr	r2, .L402+28
ARM GAS  /tmp/ccFyOsmB.s 			page 164


 4762 0796 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4763 0798 0F49     		ldr	r1, .L402+32
 4764 079a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4765 079c 0F48     		ldr	r0, .L402+36
 4766 079e FFF7FEFF 		bl	Printf
 4767              	.LVL617:
3956:TP2824/TP2802.c **** 				}
 4768              		.loc 1 3956 0
 4769 07a2 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4770 07a4 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 4771 07a6 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 4772 07a8 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4773 07aa 0090     		str	r0, [sp]
 4774 07ac 0C48     		ldr	r0, .L402+40
 4775 07ae FFF7FEFF 		bl	Printf
 4776              	.LVL618:
 4777 07b2 95E6     		b	.L372
 4778              	.L388:
 4779              	.LCFI34:
 4780              		.cfi_def_cfa_offset 0
 4781              		.cfi_restore 4
 4782              		.cfi_restore 5
 4783              		.cfi_restore 6
 4784              		.cfi_restore 7
 4785              		.cfi_restore 8
 4786              		.cfi_restore 14
 4787 07b4 7047     		bx	lr
 4788              	.L403:
 4789 07b6 00BF     		.align	2
 4790              	.L402:
 4791 07b8 00000000 		.word	.LANCHOR25
 4792 07bc 00000000 		.word	AHDcmd1
 4793 07c0 00000000 		.word	AHDcmd2
 4794 07c4 00000000 		.word	AHDcmd3
 4795 07c8 00000000 		.word	AHDcmd4
 4796 07cc 00000000 		.word	ptztxflag
 4797 07d0 00000000 		.word	TVI_speed
 4798 07d4 00000000 		.word	presetNum
 4799 07d8 00000000 		.word	TVI_Command
 4800 07dc 74000000 		.word	.LC39
 4801 07e0 8C000000 		.word	.LC40
 4802              		.cfi_endproc
 4803              	.LFE98:
 4805              		.section	.text.TP2824_PTZ_init,"ax",%progbits
 4806              		.align	1
 4807              		.global	TP2824_PTZ_init
 4808              		.syntax unified
 4809              		.thumb
 4810              		.thumb_func
 4811              		.fpu softvfp
 4813              	TP2824_PTZ_init:
 4814              	.LFB99:
3962:TP2824/TP2802.c **** 
3963:TP2824/TP2802.c **** 
3964:TP2824/TP2802.c **** void TP2824_PTZ_init(void)
3965:TP2824/TP2802.c **** {
 4815              		.loc 1 3965 0
ARM GAS  /tmp/ccFyOsmB.s 			page 165


 4816              		.cfi_startproc
 4817              		@ args = 0, pretend = 0, frame = 0
 4818              		@ frame_needed = 0, uses_anonymous_args = 0
 4819 0000 08B5     		push	{r3, lr}
 4820              	.LCFI35:
 4821              		.cfi_def_cfa_offset 8
 4822              		.cfi_offset 3, -8
 4823              		.cfi_offset 14, -4
3966:TP2824/TP2802.c ****   //  unsigned int i;
3967:TP2824/TP2802.c **** 
3968:TP2824/TP2802.c ****   //  for( i = 0; i < 2; i++)
3969:TP2824/TP2802.c ****     //{
3970:TP2824/TP2802.c ****        // tp28xx_byte_write(chip, 0x40, i<<4); //bank
3971:TP2824/TP2802.c ****   SetRegPage(0x00);
 4824              		.loc 1 3971 0
 4825 0002 0020     		movs	r0, #0
 4826 0004 FFF7FEFF 		bl	SetRegPage
 4827              	.LVL619:
3972:TP2824/TP2802.c **** 
3973:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xc9, 0x00);
 4828              		.loc 1 3973 0
 4829 0008 0021     		movs	r1, #0
 4830 000a C920     		movs	r0, #201
 4831 000c FFF7FEFF 		bl	tp28xx_byte_write
 4832              	.LVL620:
3974:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xca, 0x00);
 4833              		.loc 1 3974 0
 4834 0010 0021     		movs	r1, #0
 4835 0012 CA20     		movs	r0, #202
 4836 0014 FFF7FEFF 		bl	tp28xx_byte_write
 4837              	.LVL621:
3975:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xcb, 0x06);
 4838              		.loc 1 3975 0
 4839 0018 0621     		movs	r1, #6
 4840 001a CB20     		movs	r0, #203
 4841 001c FFF7FEFF 		bl	tp28xx_byte_write
 4842              	.LVL622:
3976:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xcc, 0x07);
 4843              		.loc 1 3976 0
 4844 0020 0721     		movs	r1, #7
 4845 0022 CC20     		movs	r0, #204
 4846 0024 FFF7FEFF 		bl	tp28xx_byte_write
 4847              	.LVL623:
3977:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xcd, 0x08);
 4848              		.loc 1 3977 0
 4849 0028 0821     		movs	r1, #8
 4850 002a CD20     		movs	r0, #205
 4851 002c FFF7FEFF 		bl	tp28xx_byte_write
 4852              	.LVL624:
3978:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xce, 0x09); //line6,7,8,9
 4853              		.loc 1 3978 0
 4854 0030 0921     		movs	r1, #9
 4855 0032 CE20     		movs	r0, #206
 4856 0034 FFF7FEFF 		bl	tp28xx_byte_write
 4857              	.LVL625:
3979:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xcf, 0x03);
 4858              		.loc 1 3979 0
ARM GAS  /tmp/ccFyOsmB.s 			page 166


 4859 0038 0321     		movs	r1, #3
 4860 003a CF20     		movs	r0, #207
 4861 003c FFF7FEFF 		bl	tp28xx_byte_write
 4862              	.LVL626:
3980:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd0, 0x48);
 4863              		.loc 1 3980 0
 4864 0040 4821     		movs	r1, #72
 4865 0042 D020     		movs	r0, #208
 4866 0044 FFF7FEFF 		bl	tp28xx_byte_write
 4867              	.LVL627:
3981:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd1, 0x34); //39 clock per bit 0.526us
 4868              		.loc 1 3981 0
 4869 0048 3421     		movs	r1, #52
 4870 004a D120     		movs	r0, #209
 4871 004c FFF7FEFF 		bl	tp28xx_byte_write
 4872              	.LVL628:
3982:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd2, 0x60);
 4873              		.loc 1 3982 0
 4874 0050 6021     		movs	r1, #96
 4875 0052 D220     		movs	r0, #210
 4876 0054 FFF7FEFF 		bl	tp28xx_byte_write
 4877              	.LVL629:
3983:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd3, 0x10);
 4878              		.loc 1 3983 0
 4879 0058 1021     		movs	r1, #16
 4880 005a D320     		movs	r0, #211
 4881 005c FFF7FEFF 		bl	tp28xx_byte_write
 4882              	.LVL630:
3984:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd4, 0x04); //
 4883              		.loc 1 3984 0
 4884 0060 0421     		movs	r1, #4
 4885 0062 D420     		movs	r0, #212
 4886 0064 FFF7FEFF 		bl	tp28xx_byte_write
 4887              	.LVL631:
3985:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd5, 0xf0);
 4888              		.loc 1 3985 0
 4889 0068 F021     		movs	r1, #240
 4890 006a D520     		movs	r0, #213
 4891 006c FFF7FEFF 		bl	tp28xx_byte_write
 4892              	.LVL632:
3986:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd6, 0xd8);
 4893              		.loc 1 3986 0
 4894 0070 D821     		movs	r1, #216
 4895 0072 D620     		movs	r0, #214
 4896 0074 FFF7FEFF 		bl	tp28xx_byte_write
 4897              	.LVL633:
3987:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd7, 0x17); //24bit
 4898              		.loc 1 3987 0
 4899 0078 1721     		movs	r1, #23
 4900 007a D720     		movs	r0, #215
 4901 007c FFF7FEFF 		bl	tp28xx_byte_write
 4902              	.LVL634:
3988:TP2824/TP2802.c ****   
3989:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe1, 0x00);
 4903              		.loc 1 3989 0
 4904 0080 0021     		movs	r1, #0
 4905 0082 E120     		movs	r0, #225
ARM GAS  /tmp/ccFyOsmB.s 			page 167


 4906 0084 FFF7FEFF 		bl	tp28xx_byte_write
 4907              	.LVL635:
3990:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe2, 0x00);
 4908              		.loc 1 3990 0
 4909 0088 0021     		movs	r1, #0
 4910 008a E220     		movs	r0, #226
 4911 008c FFF7FEFF 		bl	tp28xx_byte_write
 4912              	.LVL636:
3991:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe3, 0x05);
 4913              		.loc 1 3991 0
 4914 0090 0521     		movs	r1, #5
 4915 0092 E320     		movs	r0, #227
 4916 0094 FFF7FEFF 		bl	tp28xx_byte_write
 4917              	.LVL637:
3992:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe4, 0x06);
 4918              		.loc 1 3992 0
 4919 0098 0621     		movs	r1, #6
 4920 009a E420     		movs	r0, #228
 4921 009c FFF7FEFF 		bl	tp28xx_byte_write
 4922              	.LVL638:
3993:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe5, 0x08);
 4923              		.loc 1 3993 0
 4924 00a0 0821     		movs	r1, #8
 4925 00a2 E520     		movs	r0, #229
 4926 00a4 FFF7FEFF 		bl	tp28xx_byte_write
 4927              	.LVL639:
3994:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe6, 0x09); //line6,7,8,9
 4928              		.loc 1 3994 0
 4929 00a8 0921     		movs	r1, #9
 4930 00aa E620     		movs	r0, #230
 4931 00ac FFF7FEFF 		bl	tp28xx_byte_write
 4932              	.LVL640:
3995:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe7, 0x03);
 4933              		.loc 1 3995 0
 4934 00b0 0321     		movs	r1, #3
 4935 00b2 E720     		movs	r0, #231
 4936 00b4 FFF7FEFF 		bl	tp28xx_byte_write
 4937              	.LVL641:
3996:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe8, 0x48);
 4938              		.loc 1 3996 0
 4939 00b8 4821     		movs	r1, #72
 4940 00ba E820     		movs	r0, #232
 4941 00bc FFF7FEFF 		bl	tp28xx_byte_write
 4942              	.LVL642:
3997:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe9, 0x34); //39 clock per bit 0.526us
 4943              		.loc 1 3997 0
 4944 00c0 3421     		movs	r1, #52
 4945 00c2 E920     		movs	r0, #233
 4946 00c4 FFF7FEFF 		bl	tp28xx_byte_write
 4947              	.LVL643:
3998:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xea, 0x60);
 4948              		.loc 1 3998 0
 4949 00c8 6021     		movs	r1, #96
 4950 00ca EA20     		movs	r0, #234
 4951 00cc FFF7FEFF 		bl	tp28xx_byte_write
 4952              	.LVL644:
3999:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xeb, 0x10);
ARM GAS  /tmp/ccFyOsmB.s 			page 168


 4953              		.loc 1 3999 0
 4954 00d0 1021     		movs	r1, #16
 4955 00d2 EB20     		movs	r0, #235
 4956 00d4 FFF7FEFF 		bl	tp28xx_byte_write
 4957              	.LVL645:
4000:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xec, 0x04); //
 4958              		.loc 1 4000 0
 4959 00d8 0421     		movs	r1, #4
 4960 00da EC20     		movs	r0, #236
 4961 00dc FFF7FEFF 		bl	tp28xx_byte_write
 4962              	.LVL646:
4001:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xed, 0xf0);
 4963              		.loc 1 4001 0
 4964 00e0 F021     		movs	r1, #240
 4965 00e2 ED20     		movs	r0, #237
 4966 00e4 FFF7FEFF 		bl	tp28xx_byte_write
 4967              	.LVL647:
4002:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xee, 0xd8);
 4968              		.loc 1 4002 0
 4969 00e8 D821     		movs	r1, #216
 4970 00ea EE20     		movs	r0, #238
 4971 00ec FFF7FEFF 		bl	tp28xx_byte_write
 4972              	.LVL648:
4003:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xef, 0x17); //24bit
 4973              		.loc 1 4003 0
 4974 00f0 1721     		movs	r1, #23
 4975 00f2 EF20     		movs	r0, #239
 4976 00f4 FFF7FEFF 		bl	tp28xx_byte_write
 4977              	.LVL649:
4004:TP2824/TP2802.c ****   //}
4005:TP2824/TP2802.c ****   
4006:TP2824/TP2802.c **** 	  tp28xx_byte_write( 0x7E, 0x0F);	//TX channel enable
 4978              		.loc 1 4006 0
 4979 00f8 0F21     		movs	r1, #15
 4980 00fa 7E20     		movs	r0, #126
 4981 00fc FFF7FEFF 		bl	tp28xx_byte_write
 4982              	.LVL650:
4007:TP2824/TP2802.c **** 	  tp28xx_byte_write( 0xB9, 0x0F);	//RX channel enable
 4983              		.loc 1 4007 0
 4984 0100 0F21     		movs	r1, #15
 4985 0102 B920     		movs	r0, #185
 4986 0104 FFF7FEFF 		bl	tp28xx_byte_write
 4987              	.LVL651:
4008:TP2824/TP2802.c **** 
4009:TP2824/TP2802.c **** }
 4988              		.loc 1 4009 0
 4989 0108 08BD     		pop	{r3, pc}
 4990              		.cfi_endproc
 4991              	.LFE99:
 4993              		.section	.text.TP2824_PTZ_mode,"ax",%progbits
 4994              		.align	1
 4995              		.global	TP2824_PTZ_mode
 4996              		.syntax unified
 4997              		.thumb
 4998              		.thumb_func
 4999              		.fpu softvfp
 5001              	TP2824_PTZ_mode:
ARM GAS  /tmp/ccFyOsmB.s 			page 169


 5002              	.LFB100:
4010:TP2824/TP2802.c **** 
4011:TP2824/TP2802.c **** void TP2824_PTZ_mode(unsigned char ch, unsigned char mod)
4012:TP2824/TP2802.c **** {
 5003              		.loc 1 4012 0
 5004              		.cfi_startproc
 5005              		@ args = 0, pretend = 0, frame = 0
 5006              		@ frame_needed = 0, uses_anonymous_args = 0
 5007              	.LVL652:
 5008 0000 38B5     		push	{r3, r4, r5, lr}
 5009              	.LCFI36:
 5010              		.cfi_def_cfa_offset 16
 5011              		.cfi_offset 3, -16
 5012              		.cfi_offset 4, -12
 5013              		.cfi_offset 5, -8
 5014              		.cfi_offset 14, -4
 5015 0002 0546     		mov	r5, r0
4013:TP2824/TP2802.c ****     unsigned int /*tmp,*/ i;
4014:TP2824/TP2802.c **** 
4015:TP2824/TP2802.c **** //    static const unsigned char PTZ_bank[4]= {0x00,0x00,0x10,0x10};
4016:TP2824/TP2802.c ****     static const unsigned char PTZ_reg[4][7]=
4017:TP2824/TP2802.c ****     {
4018:TP2824/TP2802.c ****         {0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8},
4019:TP2824/TP2802.c ****         {0xda,0xdb,0xdc,0xdd,0xde,0xdf,0xe0},
4020:TP2824/TP2802.c ****         {0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8},
4021:TP2824/TP2802.c ****         {0xda,0xdb,0xdc,0xdd,0xde,0xdf,0xe0}
4022:TP2824/TP2802.c ****     };
4023:TP2824/TP2802.c ****     static const unsigned char PTZ_dat[ ][7]=
4024:TP2824/TP2802.c ****     {
4025:TP2824/TP2802.c ****         {0x0b,0x0c,0x0d,0x0e,0x19,0x78,0x21}, //TVI1.0
4026:TP2824/TP2802.c ****         {0x0b,0x0c,0x0d,0x0e,0x33,0xf0,0x21}, //TVI2.0
4027:TP2824/TP2802.c ****         {0x0e,0x0f,0x10,0x11,0x66,0xf0,0x17}, //A1080p for 2833B 0.525
4028:TP2824/TP2802.c ****         {0x0e,0x0f,0x10,0x11,0x26,0xf0,0x57}, //A1080p for 2833C 0.525
4029:TP2824/TP2802.c ****         {0x0e,0x0f,0x00,0x00,0x26,0xe0,0xef}, //A720p for 2833C 0.525
4030:TP2824/TP2802.c ****         {0x0f,0x10,0x00,0x00,0x48,0xf0,0x6f}, //960H for 2833C
4031:TP2824/TP2802.c ****         {0x10,0x11,0x12,0x13,0x15,0xb8,0xa2}, //HDC 2833C
4032:TP2824/TP2802.c ****         {0x10,0x11,0x12,0x13,0x95,0xb8,0x22}, //HDC 2833B
4033:TP2824/TP2802.c ****     };
4034:TP2824/TP2802.c **** 
4035:TP2824/TP2802.c ****     //tmp = tp28xx_byte_read(chip, 0x40);
4036:TP2824/TP2802.c ****     //tmp &= 0xaf;
4037:TP2824/TP2802.c ****     //tmp |=PTZ_bank[ch];
4038:TP2824/TP2802.c ****     //tp28xx_byte_write(chip, 0x40, tmp); //reg bank1 switch for 2822
4039:TP2824/TP2802.c ****  //   tp28xx_byte_write(chip, 0x40, PTZ_bank[ch]); //reg bank1 switch for 2822
4040:TP2824/TP2802.c **** #if 1
4041:TP2824/TP2802.c **** SetRegPage(0x00);
 5016              		.loc 1 4041 0
 5017 0004 0020     		movs	r0, #0
 5018              	.LVL653:
 5019 0006 FFF7FEFF 		bl	SetRegPage
 5020              	.LVL654:
4042:TP2824/TP2802.c **** 
4043:TP2824/TP2802.c **** for(i = 0; i < 7; i++)//1080PAHD
 5021              		.loc 1 4043 0
 5022 000a 0024     		movs	r4, #0
 5023 000c 0AE0     		b	.L407
 5024              	.LVL655:
ARM GAS  /tmp/ccFyOsmB.s 			page 170


 5025              	.L408:
4044:TP2824/TP2802.c **** 	tp28xx_byte_write( PTZ_reg[ch][i], PTZ_dat[2][i]);
 5026              		.loc 1 4044 0 discriminator 3
 5027 000e 074A     		ldr	r2, .L410
 5028 0010 2244     		add	r2, r2, r4
 5029 0012 C5EBC501 		rsb	r1, r5, r5, lsl #3
 5030 0016 064B     		ldr	r3, .L410+4
 5031 0018 0B44     		add	r3, r3, r1
 5032 001a 917B     		ldrb	r1, [r2, #14]	@ zero_extendqisi2
 5033 001c 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 5034 001e FFF7FEFF 		bl	tp28xx_byte_write
 5035              	.LVL656:
4043:TP2824/TP2802.c **** 	tp28xx_byte_write( PTZ_reg[ch][i], PTZ_dat[2][i]);
 5036              		.loc 1 4043 0 discriminator 3
 5037 0022 0134     		adds	r4, r4, #1
 5038              	.LVL657:
 5039              	.L407:
4043:TP2824/TP2802.c **** 	tp28xx_byte_write( PTZ_reg[ch][i], PTZ_dat[2][i]);
 5040              		.loc 1 4043 0 is_stmt 0 discriminator 1
 5041 0024 062C     		cmp	r4, #6
 5042 0026 F2D9     		bls	.L408
4045:TP2824/TP2802.c **** 
4046:TP2824/TP2802.c **** #else
4047:TP2824/TP2802.c ****     for(i = 0; i < 7; i++)
4048:TP2824/TP2802.c ****     {
4049:TP2824/TP2802.c ****         if(PTZ_TVI == mod)
4050:TP2824/TP2802.c ****         {
4051:TP2824/TP2802.c ****             tmp = tp28xx_byte_read(chip, 0xf5); //check TVI 1 or 2
4052:TP2824/TP2802.c ****             if( (tmp >>ch) & 0x01)
4053:TP2824/TP2802.c ****             {
4054:TP2824/TP2802.c ****                 tp28xx_byte_write(chip, PTZ_reg[ch][i], PTZ_dat[1][i]);
4055:TP2824/TP2802.c ****             }
4056:TP2824/TP2802.c ****             else
4057:TP2824/TP2802.c ****             {
4058:TP2824/TP2802.c ****                 tp28xx_byte_write(chip, PTZ_reg[ch][i], PTZ_dat[0][i]);
4059:TP2824/TP2802.c ****             }
4060:TP2824/TP2802.c ****         }
4061:TP2824/TP2802.c ****         else if(PTZ_HDA_1080P == mod) //HDA 1080p
4062:TP2824/TP2802.c ****         {
4063:TP2824/TP2802.c ****                 tp28xx_byte_write(chip, PTZ_reg[ch][i], PTZ_dat[2][i]);
4064:TP2824/TP2802.c **** 
4065:TP2824/TP2802.c ****         }
4066:TP2824/TP2802.c ****         else if(PTZ_HDA_720P == mod) //HDA 720p
4067:TP2824/TP2802.c ****         {
4068:TP2824/TP2802.c ****                 tp28xx_byte_write(chip, PTZ_reg[ch][i], PTZ_dat[2][i]);
4069:TP2824/TP2802.c ****         }
4070:TP2824/TP2802.c ****         else if(PTZ_HDC == mod) // test
4071:TP2824/TP2802.c ****         {
4072:TP2824/TP2802.c ****                 tp28xx_byte_write(chip, PTZ_reg[ch][i], PTZ_dat[7][i]);
4073:TP2824/TP2802.c ****         }
4074:TP2824/TP2802.c **** 
4075:TP2824/TP2802.c ****     }
4076:TP2824/TP2802.c ****     tp28xx_byte_write(chip, 0xB7, 0x0f); //enable TX interrupt flag
4077:TP2824/TP2802.c **** #endif
4078:TP2824/TP2802.c **** }
 5043              		.loc 1 4078 0 is_stmt 1
 5044 0028 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccFyOsmB.s 			page 171


 5045              	.LVL658:
 5046              	.L411:
 5047 002a 00BF     		.align	2
 5048              	.L410:
 5049 002c 00000000 		.word	.LANCHOR26
 5050 0030 00000000 		.word	.LANCHOR27
 5051              		.cfi_endproc
 5052              	.LFE100:
 5054              		.section	.text.TP2824C_RX_init,"ax",%progbits
 5055              		.align	1
 5056              		.global	TP2824C_RX_init
 5057              		.syntax unified
 5058              		.thumb
 5059              		.thumb_func
 5060              		.fpu softvfp
 5062              	TP2824C_RX_init:
 5063              	.LFB101:
4079:TP2824/TP2802.c **** 
4080:TP2824/TP2802.c ****  void TP2824C_RX_init(unsigned char chip, unsigned char mod)
4081:TP2824/TP2802.c **** {
 5064              		.loc 1 4081 0
 5065              		.cfi_startproc
 5066              		@ args = 0, pretend = 0, frame = 0
 5067              		@ frame_needed = 0, uses_anonymous_args = 0
 5068              	.LVL659:
 5069 0000 10B5     		push	{r4, lr}
 5070              	.LCFI37:
 5071              		.cfi_def_cfa_offset 8
 5072              		.cfi_offset 4, -8
 5073              		.cfi_offset 14, -4
 5074              	.LVL660:
4082:TP2824/TP2802.c **** 
4083:TP2824/TP2802.c ****     int i, index=0;
4084:TP2824/TP2802.c **** 
4085:TP2824/TP2802.c ****     static const unsigned char PTZ_RX_dat[][15]=
4086:TP2824/TP2802.c ****     {
4087:TP2824/TP2802.c ****         {0x00,0x00,0x07,0x08,0x00,0x00,0x04,0x00,0x00,0x60,0x10,0x04,0xf0,0xd8,0x27}, //TVI command
4088:TP2824/TP2802.c ****         {0x00,0x00,0x07,0x08,0x09,0x0a,0x04,0x00,0x00,0x60,0x10,0x04,0xf0,0xd8,0x27}, //TVI burst
4089:TP2824/TP2802.c ****         {0x00,0x00,0x06,0x07,0x08,0x09,0x03,0x52,0x53,0x60,0x10,0x04,0xf0,0xd8,0x17}, //ACP1 0.525
4090:TP2824/TP2802.c ****         {0x00,0x00,0x06,0x07,0x08,0x09,0x02,0xdf,0x88,0x60,0x10,0x04,0xf0,0xd8,0x17}, //ACP2 0.6
4091:TP2824/TP2802.c ****         {0x00,0x00,0x06,0x07,0x08,0x09,0x04,0xec,0xe9,0x60,0x10,0x04,0xf0,0xd8,0x17}, //ACP3 0.35
4092:TP2824/TP2802.c ****     };
4093:TP2824/TP2802.c **** #if 0
4094:TP2824/TP2802.c ****         if(PTZ_RX_TVI_CMD == mod)
4095:TP2824/TP2802.c ****         {
4096:TP2824/TP2802.c ****             index = 0;
4097:TP2824/TP2802.c ****         }
4098:TP2824/TP2802.c ****         else if(PTZ_RX_TVI_BURST == mod)
4099:TP2824/TP2802.c ****         {
4100:TP2824/TP2802.c ****             index = 1;
4101:TP2824/TP2802.c ****         }
4102:TP2824/TP2802.c ****         else if(PTZ_RX_ACP1 == mod)
4103:TP2824/TP2802.c ****         {
4104:TP2824/TP2802.c ****             index = 2;
4105:TP2824/TP2802.c ****         }
4106:TP2824/TP2802.c ****         else if(PTZ_RX_ACP2 == mod)
4107:TP2824/TP2802.c ****         {
ARM GAS  /tmp/ccFyOsmB.s 			page 172


4108:TP2824/TP2802.c ****             index = 3;
4109:TP2824/TP2802.c ****         }
4110:TP2824/TP2802.c ****         else if(PTZ_RX_ACP3 == mod)
4111:TP2824/TP2802.c ****         {
4112:TP2824/TP2802.c ****             index = 4;
4113:TP2824/TP2802.c ****         }
4114:TP2824/TP2802.c **** 		#endif
4115:TP2824/TP2802.c **** 		index = 3;
4116:TP2824/TP2802.c **** 
4117:TP2824/TP2802.c ****         for(i = 0; i < 15; i++)
 5075              		.loc 1 4117 0
 5076 0002 0024     		movs	r4, #0
 5077 0004 09E0     		b	.L413
 5078              	.LVL661:
 5079              	.L414:
4118:TP2824/TP2802.c ****         {
4119:TP2824/TP2802.c **** //              tp28xx_byte_write(chip, 0xc9+i, PTZ_RX_dat[index][i]);
4120:TP2824/TP2802.c ****             tp28xx_byte_write(0xc9+i, PTZ_RX_dat[index][i]);
 5080              		.loc 1 4120 0 discriminator 3
 5081 0006 064B     		ldr	r3, .L416
 5082 0008 2344     		add	r3, r3, r4
 5083 000a A4F13700 		sub	r0, r4, #55
 5084 000e 93F82D10 		ldrb	r1, [r3, #45]	@ zero_extendqisi2
 5085 0012 C0B2     		uxtb	r0, r0
 5086 0014 FFF7FEFF 		bl	tp28xx_byte_write
 5087              	.LVL662:
4117:TP2824/TP2802.c ****         {
 5088              		.loc 1 4117 0 discriminator 3
 5089 0018 0134     		adds	r4, r4, #1
 5090              	.LVL663:
 5091              	.L413:
4117:TP2824/TP2802.c ****         {
 5092              		.loc 1 4117 0 is_stmt 0 discriminator 1
 5093 001a 0E2C     		cmp	r4, #14
 5094 001c F3DD     		ble	.L414
4121:TP2824/TP2802.c ****         }
4122:TP2824/TP2802.c **** 
4123:TP2824/TP2802.c **** }
 5095              		.loc 1 4123 0 is_stmt 1
 5096 001e 10BD     		pop	{r4, pc}
 5097              	.LVL664:
 5098              	.L417:
 5099              		.align	2
 5100              	.L416:
 5101 0020 00000000 		.word	.LANCHOR28
 5102              		.cfi_endproc
 5103              	.LFE101:
 5105              		.section	.text.TP2824C_PTZ_mode,"ax",%progbits
 5106              		.align	1
 5107              		.global	TP2824C_PTZ_mode
 5108              		.syntax unified
 5109              		.thumb
 5110              		.thumb_func
 5111              		.fpu softvfp
 5113              	TP2824C_PTZ_mode:
 5114              	.LFB102:
4124:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccFyOsmB.s 			page 173


4125:TP2824/TP2802.c **** void TP2824C_PTZ_mode(unsigned char chip, unsigned char ch, unsigned char mod)
4126:TP2824/TP2802.c **** {
 5115              		.loc 1 4126 0
 5116              		.cfi_startproc
 5117              		@ args = 0, pretend = 0, frame = 0
 5118              		@ frame_needed = 0, uses_anonymous_args = 0
 5119              	.LVL665:
 5120 0000 10B5     		push	{r4, lr}
 5121              	.LCFI38:
 5122              		.cfi_def_cfa_offset 8
 5123              		.cfi_offset 4, -8
 5124              		.cfi_offset 14, -4
 5125              	.LVL666:
4127:TP2824/TP2802.c ****     unsigned int /*tmp,*/ i, index=0;
4128:TP2824/TP2802.c **** 
4129:TP2824/TP2802.c ****     static const unsigned char PTZ_reg[12]=
4130:TP2824/TP2802.c ****     {
4131:TP2824/TP2802.c ****         0x6f,0x70,0x71,0xc0,0xc1,0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8
4132:TP2824/TP2802.c ****     };
4133:TP2824/TP2802.c ****     static const unsigned char PTZ_dat[][12]=
4134:TP2824/TP2802.c ****     {
4135:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x0b,0x0c,0x0d,0x0e,0x19,0x78,0x21}, //TVI1.0
4136:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x0b,0x0c,0x0d,0x0e,0x33,0xf0,0x21}, //TVI2.0
4137:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x0e,0x0f,0x10,0x11,0x26,0xf0,0x57}, //A1080p for 0.525
4138:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x0e,0x0f,0x00,0x00,0x26,0xe0,0xef}, //A720p for  0.525
4139:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x0f,0x10,0x00,0x00,0x4d,0xf0,0x6f}, //960H for
4140:TP2824/TP2802.c ****         //{0x4a,0x5d,0x00,0x00,0x00,0x10,0x11,0x12,0x13,0x15,0xb8,0x9f}, //HDC for
4141:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x10,0x11,0x12,0x15,0x15,0xb8,0xa2}, //HDC for
4142:TP2824/TP2802.c ****     };
4143:TP2824/TP2802.c **** 
4144:TP2824/TP2802.c ****    // tp28xx_byte_write(chip, 0x40, ch); //reg bank1 switch
4145:TP2824/TP2802.c ****     
4146:TP2824/TP2802.c **** #if 0
4147:TP2824/TP2802.c ****         if(PTZ_TVI == mod)
4148:TP2824/TP2802.c ****         {
4149:TP2824/TP2802.c ****             tmp = tp28xx_byte_read(chip, 0xf5); //check TVI 1 or 2
4150:TP2824/TP2802.c ****             if( (tmp >>ch) & 0x01)
4151:TP2824/TP2802.c ****             {
4152:TP2824/TP2802.c ****                 index = 1;
4153:TP2824/TP2802.c ****             }
4154:TP2824/TP2802.c ****             else
4155:TP2824/TP2802.c ****             {
4156:TP2824/TP2802.c ****                 index = 0;
4157:TP2824/TP2802.c ****             }
4158:TP2824/TP2802.c ****         }
4159:TP2824/TP2802.c ****         else if(PTZ_HDA_1080P == mod) //HDA 1080p
4160:TP2824/TP2802.c ****         {
4161:TP2824/TP2802.c ****                 index = 2;
4162:TP2824/TP2802.c ****         }
4163:TP2824/TP2802.c ****         else if(PTZ_HDA_720P == mod) //HDA 720p
4164:TP2824/TP2802.c ****         {
4165:TP2824/TP2802.c ****                 index = 3;
4166:TP2824/TP2802.c ****         }
4167:TP2824/TP2802.c ****         else if(PTZ_HDA_CVBS == mod) //HDA CVBS
4168:TP2824/TP2802.c ****         {
4169:TP2824/TP2802.c ****                 index = 4;
4170:TP2824/TP2802.c ****         }
ARM GAS  /tmp/ccFyOsmB.s 			page 174


4171:TP2824/TP2802.c ****         else if(PTZ_HDC == mod) // test
4172:TP2824/TP2802.c ****         {
4173:TP2824/TP2802.c ****                 index = 5;
4174:TP2824/TP2802.c ****         }
4175:TP2824/TP2802.c **** #endif
4176:TP2824/TP2802.c **** 	 SetRegPage(0x00);
 5126              		.loc 1 4176 0
 5127 0002 0020     		movs	r0, #0
 5128              	.LVL667:
 5129 0004 FFF7FEFF 		bl	SetRegPage
 5130              	.LVL668:
4177:TP2824/TP2802.c **** 	 index=2;
4178:TP2824/TP2802.c **** 
4179:TP2824/TP2802.c ****      for(i = 0; i < 12; i++)
 5131              		.loc 1 4179 0
 5132 0008 0024     		movs	r4, #0
 5133 000a 07E0     		b	.L419
 5134              	.LVL669:
 5135              	.L420:
4180:TP2824/TP2802.c ****      {
4181:TP2824/TP2802.c **** //         tp28xx_byte_write(chip, PTZ_reg[i], PTZ_dat[index][i]);
4182:TP2824/TP2802.c **** 	   tp28xx_byte_write(PTZ_reg[i], PTZ_dat[index][i]);
 5136              		.loc 1 4182 0 discriminator 3
 5137 000c 054B     		ldr	r3, .L422
 5138 000e 2344     		add	r3, r3, r4
 5139 0010 197E     		ldrb	r1, [r3, #24]	@ zero_extendqisi2
 5140 0012 054B     		ldr	r3, .L422+4
 5141 0014 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 5142 0016 FFF7FEFF 		bl	tp28xx_byte_write
 5143              	.LVL670:
4179:TP2824/TP2802.c ****      {
 5144              		.loc 1 4179 0 discriminator 3
 5145 001a 0134     		adds	r4, r4, #1
 5146              	.LVL671:
 5147              	.L419:
4179:TP2824/TP2802.c ****      {
 5148              		.loc 1 4179 0 is_stmt 0 discriminator 1
 5149 001c 0B2C     		cmp	r4, #11
 5150 001e F5D9     		bls	.L420
4183:TP2824/TP2802.c ****      }
4184:TP2824/TP2802.c **** 
4185:TP2824/TP2802.c **** }
 5151              		.loc 1 4185 0 is_stmt 1
 5152 0020 10BD     		pop	{r4, pc}
 5153              	.LVL672:
 5154              	.L423:
 5155 0022 00BF     		.align	2
 5156              	.L422:
 5157 0024 00000000 		.word	.LANCHOR29
 5158 0028 00000000 		.word	.LANCHOR30
 5159              		.cfi_endproc
 5160              	.LFE102:
 5162              		.section	.text.HDA_SetACPV2Data,"ax",%progbits
 5163              		.align	1
 5164              		.global	HDA_SetACPV2Data
 5165              		.syntax unified
 5166              		.thumb
ARM GAS  /tmp/ccFyOsmB.s 			page 175


 5167              		.thumb_func
 5168              		.fpu softvfp
 5170              	HDA_SetACPV2Data:
 5171              	.LFB103:
4186:TP2824/TP2802.c **** 
4187:TP2824/TP2802.c **** void HDA_SetACPV2Data(unsigned char chip, unsigned char reg,unsigned char dat)
4188:TP2824/TP2802.c **** 	{
 5172              		.loc 1 4188 0
 5173              		.cfi_startproc
 5174              		@ args = 0, pretend = 0, frame = 0
 5175              		@ frame_needed = 0, uses_anonymous_args = 0
 5176              	.LVL673:
 5177 0000 38B5     		push	{r3, r4, r5, lr}
 5178              	.LCFI39:
 5179              		.cfi_def_cfa_offset 16
 5180              		.cfi_offset 3, -16
 5181              		.cfi_offset 4, -12
 5182              		.cfi_offset 5, -8
 5183              		.cfi_offset 14, -4
 5184 0002 0D46     		mov	r5, r1
 5185              	.LVL674:
4189:TP2824/TP2802.c **** 		unsigned int i;
4190:TP2824/TP2802.c **** 		unsigned int PTZ_pelco=0;
 5186              		.loc 1 4190 0
 5187 0004 0024     		movs	r4, #0
4191:TP2824/TP2802.c **** 	
4192:TP2824/TP2802.c **** 		for(i = 0; i < 8; i++)
 5188              		.loc 1 4192 0
 5189 0006 2346     		mov	r3, r4
 5190 0008 04E0     		b	.L425
 5191              	.LVL675:
 5192              	.L431:
4193:TP2824/TP2802.c **** 		{
4194:TP2824/TP2802.c **** 			PTZ_pelco <<= 3;
4195:TP2824/TP2802.c **** 	
4196:TP2824/TP2802.c **** 			if(0x80 & dat) PTZ_pelco |= 0x06;
 5193              		.loc 1 4196 0 discriminator 1
 5194 000a 44F00604 		orr	r4, r4, #6
 5195              	.LVL676:
 5196              	.L427:
4197:TP2824/TP2802.c **** 			else PTZ_pelco |= 0x04;
4198:TP2824/TP2802.c **** 	
4199:TP2824/TP2802.c **** 			dat <<= 1;
 5197              		.loc 1 4199 0 discriminator 2
 5198 000e 5200     		lsls	r2, r2, #1
 5199              	.LVL677:
 5200 0010 D2B2     		uxtb	r2, r2
 5201              	.LVL678:
4192:TP2824/TP2802.c **** 		{
 5202              		.loc 1 4192 0 discriminator 2
 5203 0012 0133     		adds	r3, r3, #1
 5204              	.LVL679:
 5205              	.L425:
4192:TP2824/TP2802.c **** 		{
 5206              		.loc 1 4192 0 is_stmt 0 discriminator 1
 5207 0014 072B     		cmp	r3, #7
 5208 0016 06D8     		bhi	.L430
ARM GAS  /tmp/ccFyOsmB.s 			page 176


4194:TP2824/TP2802.c **** 	
 5209              		.loc 1 4194 0 is_stmt 1
 5210 0018 E400     		lsls	r4, r4, #3
 5211              	.LVL680:
4196:TP2824/TP2802.c **** 			else PTZ_pelco |= 0x04;
 5212              		.loc 1 4196 0
 5213 001a 12F0800F 		tst	r2, #128
 5214 001e F4D1     		bne	.L431
4197:TP2824/TP2802.c **** 	
 5215              		.loc 1 4197 0
 5216 0020 44F00404 		orr	r4, r4, #4
 5217              	.LVL681:
 5218 0024 F3E7     		b	.L427
 5219              	.L430:
4200:TP2824/TP2802.c **** 		}
4201:TP2824/TP2802.c **** 	
4202:TP2824/TP2802.c **** 		tp28xx_byte_write( reg + 0 , (PTZ_pelco>>16)&0xff);
 5220              		.loc 1 4202 0
 5221 0026 C4F30741 		ubfx	r1, r4, #16, #8
 5222              	.LVL682:
 5223 002a 2846     		mov	r0, r5
 5224              	.LVL683:
 5225 002c FFF7FEFF 		bl	tp28xx_byte_write
 5226              	.LVL684:
4203:TP2824/TP2802.c **** 		tp28xx_byte_write( reg + 1 , (PTZ_pelco>>8)&0xff);
 5227              		.loc 1 4203 0
 5228 0030 681C     		adds	r0, r5, #1
 5229 0032 C4F30721 		ubfx	r1, r4, #8, #8
 5230 0036 C0B2     		uxtb	r0, r0
 5231 0038 FFF7FEFF 		bl	tp28xx_byte_write
 5232              	.LVL685:
4204:TP2824/TP2802.c **** 		tp28xx_byte_write( reg + 2 , (PTZ_pelco)&0xff);
 5233              		.loc 1 4204 0
 5234 003c A81C     		adds	r0, r5, #2
 5235 003e 04F0FE01 		and	r1, r4, #254
 5236 0042 C0B2     		uxtb	r0, r0
 5237 0044 FFF7FEFF 		bl	tp28xx_byte_write
 5238              	.LVL686:
4205:TP2824/TP2802.c **** 	}
 5239              		.loc 1 4205 0
 5240 0048 38BD     		pop	{r3, r4, r5, pc}
 5241              		.cfi_endproc
 5242              	.LFE103:
 5244              		.section	.text.TP2824C_StartTX,"ax",%progbits
 5245              		.align	1
 5246              		.global	TP2824C_StartTX
 5247              		.syntax unified
 5248              		.thumb
 5249              		.thumb_func
 5250              		.fpu softvfp
 5252              	TP2824C_StartTX:
 5253              	.LFB104:
4206:TP2824/TP2802.c **** 
4207:TP2824/TP2802.c **** 
4208:TP2824/TP2802.c **** void TP2824C_StartTX(unsigned char chip, unsigned char ch)
4209:TP2824/TP2802.c **** {
 5254              		.loc 1 4209 0
ARM GAS  /tmp/ccFyOsmB.s 			page 177


 5255              		.cfi_startproc
 5256              		@ args = 0, pretend = 0, frame = 0
 5257              		@ frame_needed = 0, uses_anonymous_args = 0
 5258              	.LVL687:
 5259 0000 38B5     		push	{r3, r4, r5, lr}
 5260              	.LCFI40:
 5261              		.cfi_def_cfa_offset 16
 5262              		.cfi_offset 3, -16
 5263              		.cfi_offset 4, -12
 5264              		.cfi_offset 5, -8
 5265              		.cfi_offset 14, -4
 5266 0002 0D46     		mov	r5, r1
4210:TP2824/TP2802.c **** 	unsigned char tmp;
4211:TP2824/TP2802.c **** 	int i;
4212:TP2824/TP2802.c **** 
4213:TP2824/TP2802.c **** 	tp28xx_byte_write( 0xB6, (0x01<<(ch))); //clear flag
 5267              		.loc 1 4213 0
 5268 0004 0121     		movs	r1, #1
 5269              	.LVL688:
 5270 0006 A940     		lsls	r1, r1, r5
 5271 0008 C9B2     		uxtb	r1, r1
 5272 000a B620     		movs	r0, #182
 5273              	.LVL689:
 5274 000c FFF7FEFF 		bl	tp28xx_byte_write
 5275              	.LVL690:
4214:TP2824/TP2802.c **** 
4215:TP2824/TP2802.c **** 	tmp = tp28xx_byte_read( 0x6f);
 5276              		.loc 1 4215 0
 5277 0010 6F20     		movs	r0, #111
 5278 0012 FFF7FEFF 		bl	tp28xx_byte_read
 5279              	.LVL691:
 5280 0016 0446     		mov	r4, r0
 5281              	.LVL692:
4216:TP2824/TP2802.c ****     tmp |= 0x01;
 5282              		.loc 1 4216 0
 5283 0018 40F00101 		orr	r1, r0, #1
 5284              	.LVL693:
4217:TP2824/TP2802.c ****     tp28xx_byte_write( 0x6f, tmp); //TX enable
 5285              		.loc 1 4217 0
 5286 001c C9B2     		uxtb	r1, r1
 5287 001e 6F20     		movs	r0, #111
 5288 0020 FFF7FEFF 		bl	tp28xx_byte_write
 5289              	.LVL694:
4218:TP2824/TP2802.c ****     tmp &= 0xfe;
4219:TP2824/TP2802.c ****     tp28xx_byte_write( 0x6f, tmp); //TX disable
 5290              		.loc 1 4219 0
 5291 0024 04F0FE01 		and	r1, r4, #254
 5292 0028 6F20     		movs	r0, #111
 5293 002a FFF7FEFF 		bl	tp28xx_byte_write
 5294              	.LVL695:
4220:TP2824/TP2802.c **** 
4221:TP2824/TP2802.c ****     i = 100;
 5295              		.loc 1 4221 0
 5296 002e 6423     		movs	r3, #100
 5297              	.LVL696:
 5298              	.L433:
4222:TP2824/TP2802.c ****     while(i--)
ARM GAS  /tmp/ccFyOsmB.s 			page 178


 5299              		.loc 1 4222 0
 5300 0030 5C1E     		subs	r4, r3, #1
 5301              	.LVL697:
 5302 0032 5BB1     		cbz	r3, .L432
4223:TP2824/TP2802.c ****     {
4224:TP2824/TP2802.c ****         if( (0x01<<(ch)) & tp28xx_byte_read( 0xb6)) break;
 5303              		.loc 1 4224 0
 5304 0034 B620     		movs	r0, #182
 5305 0036 FFF7FEFF 		bl	tp28xx_byte_read
 5306              	.LVL698:
 5307 003a 2841     		asrs	r0, r0, r5
 5308 003c 10F0010F 		tst	r0, #1
 5309 0040 04D1     		bne	.L432
4225:TP2824/TP2802.c ****         //udelay(1000);
4226:TP2824/TP2802.c ****         msleep(2);
 5310              		.loc 1 4226 0
 5311 0042 0220     		movs	r0, #2
 5312 0044 FFF7FEFF 		bl	msleep
 5313              	.LVL699:
4222:TP2824/TP2802.c ****     {
 5314              		.loc 1 4222 0
 5315 0048 2346     		mov	r3, r4
 5316 004a F1E7     		b	.L433
 5317              	.L432:
4227:TP2824/TP2802.c ****     }
4228:TP2824/TP2802.c **** 
4229:TP2824/TP2802.c **** }
 5318              		.loc 1 4229 0
 5319 004c 38BD     		pop	{r3, r4, r5, pc}
 5320              		.cfi_endproc
 5321              	.LFE104:
 5323              		.section	.text.COC_test,"ax",%progbits
 5324              		.align	1
 5325              		.global	COC_test
 5326              		.syntax unified
 5327              		.thumb
 5328              		.thumb_func
 5329              		.fpu softvfp
 5331              	COC_test:
 5332              	.LFB105:
4230:TP2824/TP2802.c **** 
4231:TP2824/TP2802.c **** void COC_test(void)
4232:TP2824/TP2802.c **** {
 5333              		.loc 1 4232 0
 5334              		.cfi_startproc
 5335              		@ args = 0, pretend = 0, frame = 0
 5336              		@ frame_needed = 0, uses_anonymous_args = 0
 5337              		@ link register save eliminated.
4233:TP2824/TP2802.c **** 
4234:TP2824/TP2802.c **** 
4235:TP2824/TP2802.c **** 
4236:TP2824/TP2802.c **** 		TVI_Command=0x0F;
 5338              		.loc 1 4236 0
 5339 0000 074B     		ldr	r3, .L438
 5340 0002 0F22     		movs	r2, #15
 5341 0004 1A70     		strb	r2, [r3]
4237:TP2824/TP2802.c **** 		presetNum=0;
ARM GAS  /tmp/ccFyOsmB.s 			page 179


 5342              		.loc 1 4237 0
 5343 0006 0023     		movs	r3, #0
 5344 0008 064A     		ldr	r2, .L438+4
 5345 000a 1370     		strb	r3, [r2]
4238:TP2824/TP2802.c **** 		TVI_speed=0;
 5346              		.loc 1 4238 0
 5347 000c 064A     		ldr	r2, .L438+8
 5348 000e 1370     		strb	r3, [r2]
4239:TP2824/TP2802.c **** 		TVI_Chksum=0xC5;
 5349              		.loc 1 4239 0
 5350 0010 064B     		ldr	r3, .L438+12
 5351 0012 C522     		movs	r2, #197
 5352 0014 1A70     		strb	r2, [r3]
4240:TP2824/TP2802.c **** 		ptztxflag=1;
 5353              		.loc 1 4240 0
 5354 0016 064B     		ldr	r3, .L438+16
 5355 0018 0122     		movs	r2, #1
 5356 001a 1A60     		str	r2, [r3]
4241:TP2824/TP2802.c **** 		
4242:TP2824/TP2802.c **** 	
4243:TP2824/TP2802.c **** 
4244:TP2824/TP2802.c **** }
 5357              		.loc 1 4244 0
 5358 001c 7047     		bx	lr
 5359              	.L439:
 5360 001e 00BF     		.align	2
 5361              	.L438:
 5362 0020 00000000 		.word	TVI_Command
 5363 0024 00000000 		.word	presetNum
 5364 0028 00000000 		.word	TVI_speed
 5365 002c 00000000 		.word	TVI_Chksum
 5366 0030 00000000 		.word	ptztxflag
 5367              		.cfi_endproc
 5368              	.LFE105:
 5370              		.section	.text.Init_COC_PTZOUT1,"ax",%progbits
 5371              		.align	1
 5372              		.global	Init_COC_PTZOUT1
 5373              		.syntax unified
 5374              		.thumb
 5375              		.thumb_func
 5376              		.fpu softvfp
 5378              	Init_COC_PTZOUT1:
 5379              	.LFB106:
4245:TP2824/TP2802.c **** void Init_COC_PTZOUT1(void)
4246:TP2824/TP2802.c **** {
 5380              		.loc 1 4246 0
 5381              		.cfi_startproc
 5382              		@ args = 0, pretend = 0, frame = 0
 5383              		@ frame_needed = 0, uses_anonymous_args = 0
 5384 0000 08B5     		push	{r3, lr}
 5385              	.LCFI41:
 5386              		.cfi_def_cfa_offset 8
 5387              		.cfi_offset 3, -8
 5388              		.cfi_offset 14, -4
4247:TP2824/TP2802.c **** 	printf("\r\n Init_COC_PTZOUT1..");
 5389              		.loc 1 4247 0
 5390 0002 4448     		ldr	r0, .L442
ARM GAS  /tmp/ccFyOsmB.s 			page 180


 5391 0004 FFF7FEFF 		bl	printf
 5392              	.LVL700:
4248:TP2824/TP2802.c **** 
4249:TP2824/TP2802.c **** 	
4250:TP2824/TP2802.c **** 	tp28xx_byte_write(0x40,0x04);
 5393              		.loc 1 4250 0
 5394 0008 0421     		movs	r1, #4
 5395 000a 4020     		movs	r0, #64
 5396 000c FFF7FEFF 		bl	tp28xx_byte_write
 5397              	.LVL701:
4251:TP2824/TP2802.c **** 	tp28xx_byte_write(0xa7,0x83);
 5398              		.loc 1 4251 0
 5399 0010 8321     		movs	r1, #131
 5400 0012 A720     		movs	r0, #167
 5401 0014 FFF7FEFF 		bl	tp28xx_byte_write
 5402              	.LVL702:
4252:TP2824/TP2802.c **** 	tp28xx_byte_write(0xbe,0x80);
 5403              		.loc 1 4252 0
 5404 0018 8021     		movs	r1, #128
 5405 001a BE20     		movs	r0, #190
 5406 001c FFF7FEFF 		bl	tp28xx_byte_write
 5407              	.LVL703:
4253:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6f,0x42);
 5408              		.loc 1 4253 0
 5409 0020 4221     		movs	r1, #66
 5410 0022 6F20     		movs	r0, #111
 5411 0024 FFF7FEFF 		bl	tp28xx_byte_write
 5412              	.LVL704:
4254:TP2824/TP2802.c **** 
4255:TP2824/TP2802.c **** 	tp28xx_byte_write(0x70,0x40);
 5413              		.loc 1 4255 0
 5414 0028 4021     		movs	r1, #64
 5415 002a 7020     		movs	r0, #112
 5416 002c FFF7FEFF 		bl	tp28xx_byte_write
 5417              	.LVL705:
4256:TP2824/TP2802.c **** 	tp28xx_byte_write(0x71,0x20);
 5418              		.loc 1 4256 0
 5419 0030 2021     		movs	r1, #32
 5420 0032 7120     		movs	r0, #113
 5421 0034 FFF7FEFF 		bl	tp28xx_byte_write
 5422              	.LVL706:
4257:TP2824/TP2802.c **** 	tp28xx_byte_write(0x72,0x00);
 5423              		.loc 1 4257 0
 5424 0038 0021     		movs	r1, #0
 5425 003a 7220     		movs	r0, #114
 5426 003c FFF7FEFF 		bl	tp28xx_byte_write
 5427              	.LVL707:
4258:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc0,0x00);
 5428              		.loc 1 4258 0
 5429 0040 0021     		movs	r1, #0
 5430 0042 C020     		movs	r0, #192
 5431 0044 FFF7FEFF 		bl	tp28xx_byte_write
 5432              	.LVL708:
4259:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc1,0x00);
 5433              		.loc 1 4259 0
 5434 0048 0021     		movs	r1, #0
 5435 004a C120     		movs	r0, #193
ARM GAS  /tmp/ccFyOsmB.s 			page 181


 5436 004c FFF7FEFF 		bl	tp28xx_byte_write
 5437              	.LVL709:
4260:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc2,0x0b);
 5438              		.loc 1 4260 0
 5439 0050 0B21     		movs	r1, #11
 5440 0052 C220     		movs	r0, #194
 5441 0054 FFF7FEFF 		bl	tp28xx_byte_write
 5442              	.LVL710:
4261:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc3,0x0c);
 5443              		.loc 1 4261 0
 5444 0058 0C21     		movs	r1, #12
 5445 005a C320     		movs	r0, #195
 5446 005c FFF7FEFF 		bl	tp28xx_byte_write
 5447              	.LVL711:
4262:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc4,0x0d);
 5448              		.loc 1 4262 0
 5449 0060 0D21     		movs	r1, #13
 5450 0062 C420     		movs	r0, #196
 5451 0064 FFF7FEFF 		bl	tp28xx_byte_write
 5452              	.LVL712:
4263:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc5,0x0e);
 5453              		.loc 1 4263 0
 5454 0068 0E21     		movs	r1, #14
 5455 006a C520     		movs	r0, #197
 5456 006c FFF7FEFF 		bl	tp28xx_byte_write
 5457              	.LVL713:
4264:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc6,0x19);
 5458              		.loc 1 4264 0
 5459 0070 1921     		movs	r1, #25
 5460 0072 C620     		movs	r0, #198
 5461 0074 FFF7FEFF 		bl	tp28xx_byte_write
 5462              	.LVL714:
4265:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc7,0x78);
 5463              		.loc 1 4265 0
 5464 0078 7821     		movs	r1, #120
 5465 007a C720     		movs	r0, #199
 5466 007c FFF7FEFF 		bl	tp28xx_byte_write
 5467              	.LVL715:
4266:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc8,0x21);
 5468              		.loc 1 4266 0
 5469 0080 2121     		movs	r1, #33
 5470 0082 C820     		movs	r0, #200
 5471 0084 FFF7FEFF 		bl	tp28xx_byte_write
 5472              	.LVL716:
4267:TP2824/TP2802.c **** 						
4268:TP2824/TP2802.c **** 	tp28xx_byte_write(0xcb,0x07); 
 5473              		.loc 1 4268 0
 5474 0088 0721     		movs	r1, #7
 5475 008a CB20     		movs	r0, #203
 5476 008c FFF7FEFF 		bl	tp28xx_byte_write
 5477              	.LVL717:
4269:TP2824/TP2802.c **** 	tp28xx_byte_write(0xcc,0x08); 
 5478              		.loc 1 4269 0
 5479 0090 0821     		movs	r1, #8
 5480 0092 CC20     		movs	r0, #204
 5481 0094 FFF7FEFF 		bl	tp28xx_byte_write
 5482              	.LVL718:
ARM GAS  /tmp/ccFyOsmB.s 			page 182


4270:TP2824/TP2802.c **** 	tp28xx_byte_write(0xcd,0x09); 
 5483              		.loc 1 4270 0
 5484 0098 0921     		movs	r1, #9
 5485 009a CD20     		movs	r0, #205
 5486 009c FFF7FEFF 		bl	tp28xx_byte_write
 5487              	.LVL719:
4271:TP2824/TP2802.c **** 	tp28xx_byte_write(0xce,0x0a); 
 5488              		.loc 1 4271 0
 5489 00a0 0A21     		movs	r1, #10
 5490 00a2 CE20     		movs	r0, #206
 5491 00a4 FFF7FEFF 		bl	tp28xx_byte_write
 5492              	.LVL720:
4272:TP2824/TP2802.c **** 	tp28xx_byte_write(0xcf,0x04); 
 5493              		.loc 1 4272 0
 5494 00a8 0421     		movs	r1, #4
 5495 00aa CF20     		movs	r0, #207
 5496 00ac FFF7FEFF 		bl	tp28xx_byte_write
 5497              	.LVL721:
4273:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd0,0x00); 
 5498              		.loc 1 4273 0
 5499 00b0 0021     		movs	r1, #0
 5500 00b2 D020     		movs	r0, #208
 5501 00b4 FFF7FEFF 		bl	tp28xx_byte_write
 5502              	.LVL722:
4274:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd1,0x00); 
 5503              		.loc 1 4274 0
 5504 00b8 0021     		movs	r1, #0
 5505 00ba D120     		movs	r0, #209
 5506 00bc FFF7FEFF 		bl	tp28xx_byte_write
 5507              	.LVL723:
4275:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd2,0x60); 
 5508              		.loc 1 4275 0
 5509 00c0 6021     		movs	r1, #96
 5510 00c2 D220     		movs	r0, #210
 5511 00c4 FFF7FEFF 		bl	tp28xx_byte_write
 5512              	.LVL724:
4276:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd3,0x10); 
 5513              		.loc 1 4276 0
 5514 00c8 1021     		movs	r1, #16
 5515 00ca D320     		movs	r0, #211
 5516 00cc FFF7FEFF 		bl	tp28xx_byte_write
 5517              	.LVL725:
4277:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd4,0x06); 
 5518              		.loc 1 4277 0
 5519 00d0 0621     		movs	r1, #6
 5520 00d2 D420     		movs	r0, #212
 5521 00d4 FFF7FEFF 		bl	tp28xx_byte_write
 5522              	.LVL726:
4278:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd5,0xbe); 
 5523              		.loc 1 4278 0
 5524 00d8 BE21     		movs	r1, #190
 5525 00da D520     		movs	r0, #213
 5526 00dc FFF7FEFF 		bl	tp28xx_byte_write
 5527              	.LVL727:
4279:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd6,0x39); 
 5528              		.loc 1 4279 0
 5529 00e0 3921     		movs	r1, #57
ARM GAS  /tmp/ccFyOsmB.s 			page 183


 5530 00e2 D620     		movs	r0, #214
 5531 00e4 FFF7FEFF 		bl	tp28xx_byte_write
 5532              	.LVL728:
4280:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd7,0x27); 
 5533              		.loc 1 4280 0
 5534 00e8 2721     		movs	r1, #39
 5535 00ea D720     		movs	r0, #215
 5536 00ec FFF7FEFF 		bl	tp28xx_byte_write
 5537              	.LVL729:
4281:TP2824/TP2802.c **** 
4282:TP2824/TP2802.c **** #if 1//ryan@20201231
4283:TP2824/TP2802.c **** tp28xx_byte_write(0xc2,0x0E);
 5538              		.loc 1 4283 0
 5539 00f0 0E21     		movs	r1, #14
 5540 00f2 C220     		movs	r0, #194
 5541 00f4 FFF7FEFF 		bl	tp28xx_byte_write
 5542              	.LVL730:
4284:TP2824/TP2802.c **** tp28xx_byte_write(0xc3,0x0F);
 5543              		.loc 1 4284 0
 5544 00f8 0F21     		movs	r1, #15
 5545 00fa C320     		movs	r0, #195
 5546 00fc FFF7FEFF 		bl	tp28xx_byte_write
 5547              	.LVL731:
4285:TP2824/TP2802.c **** tp28xx_byte_write(0xc4,0x10);
 5548              		.loc 1 4285 0
 5549 0100 1021     		movs	r1, #16
 5550 0102 C420     		movs	r0, #196
 5551 0104 FFF7FEFF 		bl	tp28xx_byte_write
 5552              	.LVL732:
4286:TP2824/TP2802.c **** tp28xx_byte_write(0xc5,0x11);
 5553              		.loc 1 4286 0
 5554 0108 1121     		movs	r1, #17
 5555 010a C520     		movs	r0, #197
 5556 010c FFF7FEFF 		bl	tp28xx_byte_write
 5557              	.LVL733:
4287:TP2824/TP2802.c **** #endif
4288:TP2824/TP2802.c **** 
4289:TP2824/TP2802.c **** }
 5558              		.loc 1 4289 0
 5559 0110 08BD     		pop	{r3, pc}
 5560              	.L443:
 5561 0112 00BF     		.align	2
 5562              	.L442:
 5563 0114 00000000 		.word	.LC41
 5564              		.cfi_endproc
 5565              	.LFE106:
 5567              		.section	.text.EQ_Detect,"ax",%progbits
 5568              		.align	1
 5569              		.global	EQ_Detect
 5570              		.syntax unified
 5571              		.thumb
 5572              		.thumb_func
 5573              		.fpu softvfp
 5575              	EQ_Detect:
 5576              	.LFB85:
1746:TP2824/TP2802.c ****     //tByte tmpval;
 5577              		.loc 1 1746 0
ARM GAS  /tmp/ccFyOsmB.s 			page 184


 5578              		.cfi_startproc
 5579              		@ args = 0, pretend = 0, frame = 0
 5580              		@ frame_needed = 0, uses_anonymous_args = 0
 5581 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5582              	.LCFI42:
 5583              		.cfi_def_cfa_offset 20
 5584              		.cfi_offset 4, -20
 5585              		.cfi_offset 5, -16
 5586              		.cfi_offset 6, -12
 5587              		.cfi_offset 7, -8
 5588              		.cfi_offset 14, -4
 5589 0002 83B0     		sub	sp, sp, #12
 5590              	.LCFI43:
 5591              		.cfi_def_cfa_offset 32
 5592              	.LVL734:
1751:TP2824/TP2802.c ****     {
 5593              		.loc 1 1751 0
 5594 0004 0024     		movs	r4, #0
 5595              	.LVL735:
 5596              	.L445:
1751:TP2824/TP2802.c ****     {
 5597              		.loc 1 1751 0 is_stmt 0 discriminator 1
 5598 0006 0CB1     		cbz	r4, .L505
2497:TP2824/TP2802.c **** #if 0
 5599              		.loc 1 2497 0 is_stmt 1
 5600 0008 03B0     		add	sp, sp, #12
 5601              	.LCFI44:
 5602              		.cfi_remember_state
 5603              		.cfi_def_cfa_offset 20
 5604              		@ sp needed
 5605 000a F0BD     		pop	{r4, r5, r6, r7, pc}
 5606              	.LVL736:
 5607              	.L505:
 5608              	.LCFI45:
 5609              		.cfi_restore_state
1757:TP2824/TP2802.c ****         status = tp28xx_byte_read(0x01);
 5610              		.loc 1 1757 0
 5611 000c 2046     		mov	r0, r4
 5612 000e FFF7FEFF 		bl	SetRegPage
 5613              	.LVL737:
1758:TP2824/TP2802.c **** 
 5614              		.loc 1 1758 0
 5615 0012 0120     		movs	r0, #1
 5616 0014 FFF7FEFF 		bl	tp28xx_byte_read
 5617              	.LVL738:
 5618 0018 0646     		mov	r6, r0
 5619              	.LVL739:
1761:TP2824/TP2802.c ****         {
 5620              		.loc 1 1761 0
 5621 001a 10F0800F 		tst	r0, #128
 5622 001e 34D1     		bne	.L518
1812:TP2824/TP2802.c ****                 flag_LOCKED = CVBS_FLAG_LOCKED;
 5623              		.loc 1 1812 0
 5624 0020 2546     		mov	r5, r4
 5625 0022 A44B     		ldr	r3, .L564
 5626 0024 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 5627 0026 083B     		subs	r3, r3, #8
ARM GAS  /tmp/ccFyOsmB.s 			page 185


 5628 0028 DBB2     		uxtb	r3, r3
 5629 002a 012B     		cmp	r3, #1
 5630 002c 5CD9     		bls	.L519
1815:TP2824/TP2802.c **** 
 5631              		.loc 1 1815 0
 5632 002e A24B     		ldr	r3, .L564+4
 5633 0030 6022     		movs	r2, #96
 5634 0032 1A70     		strb	r2, [r3]
 5635              	.L453:
1817:TP2824/TP2802.c ****             {
 5636              		.loc 1 1817 0
 5637 0034 A04B     		ldr	r3, .L564+4
 5638 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5639 0038 B343     		bics	r3, r3, r6
 5640 003a 59D0     		beq	.L520
1864:TP2824/TP2802.c ****                 {
 5641              		.loc 1 1864 0
 5642 003c 9F4B     		ldr	r3, .L564+8
 5643 003e 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5644 0040 002B     		cmp	r3, #0
 5645 0042 78D0     		beq	.L521
1870:TP2824/TP2802.c ****                 {
 5646              		.loc 1 1870 0
 5647 0044 022B     		cmp	r3, #2
 5648 0046 00F08180 		beq	.L522
1887:TP2824/TP2802.c ****                     if(VIDEO_UNLOCK == state[i] && count[i] > 2)
 5649              		.loc 1 1887 0
 5650 004a 9D4A     		ldr	r2, .L564+12
 5651 004c 525D     		ldrb	r2, [r2, r5]	@ zero_extendqisi2
 5652 004e FF2A     		cmp	r2, #255
 5653 0050 02D0     		beq	.L459
1887:TP2824/TP2802.c ****                     if(VIDEO_UNLOCK == state[i] && count[i] > 2)
 5654              		.loc 1 1887 0 is_stmt 0 discriminator 1
 5655 0052 0132     		adds	r2, r2, #1
 5656 0054 9A49     		ldr	r1, .L564+12
 5657 0056 4A55     		strb	r2, [r1, r5]
 5658              	.L459:
1888:TP2824/TP2802.c ****                     {
 5659              		.loc 1 1888 0 is_stmt 1
 5660 0058 032B     		cmp	r3, #3
 5661 005a 23D1     		bne	.L451
1888:TP2824/TP2802.c ****                     {
 5662              		.loc 1 1888 0 is_stmt 0 discriminator 1
 5663 005c 984B     		ldr	r3, .L564+12
 5664 005e 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5665 0060 022B     		cmp	r3, #2
 5666 0062 1FD9     		bls	.L451
1890:TP2824/TP2802.c ****                         count[i] = 0;
 5667              		.loc 1 1890 0 is_stmt 1
 5668 0064 954B     		ldr	r3, .L564+8
 5669 0066 0122     		movs	r2, #1
 5670 0068 5A55     		strb	r2, [r3, r5]
1891:TP2824/TP2802.c ****                         TP28xx_reset_default(chip, i);
 5671              		.loc 1 1891 0
 5672 006a 954B     		ldr	r3, .L564+12
 5673 006c 0022     		movs	r2, #0
 5674 006e 5A55     		strb	r2, [r3, r5]
ARM GAS  /tmp/ccFyOsmB.s 			page 186


1892:TP2824/TP2802.c ****                         printf("video unlocked ch%02x \r\n", (tWord)i);                        
 5675              		.loc 1 1892 0
 5676 0070 2146     		mov	r1, r4
 5677 0072 944B     		ldr	r3, .L564+16
 5678 0074 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5679              	.LVL740:
 5680 0076 FFF7FEFF 		bl	TP28xx_reset_default
 5681              	.LVL741:
1893:TP2824/TP2802.c ****                         VS4210_Rx_NoSignal(i) ;//chunyu
 5682              		.loc 1 1893 0
 5683 007a 2946     		mov	r1, r5
 5684 007c 9248     		ldr	r0, .L564+20
 5685 007e FFF7FEFF 		bl	printf
 5686              	.LVL742:
1894:TP2824/TP2802.c ****                     }
 5687              		.loc 1 1894 0
 5688 0082 2046     		mov	r0, r4
 5689 0084 FFF7FEFF 		bl	VS4210_Rx_NoSignal
 5690              	.LVL743:
 5691 0088 0CE0     		b	.L451
 5692              	.LVL744:
 5693              	.L518:
1765:TP2824/TP2802.c ****             {
 5694              		.loc 1 1765 0
 5695 008a 8C4B     		ldr	r3, .L564+8
 5696 008c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 5697 008e B3B1     		cbz	r3, .L523
1774:TP2824/TP2802.c **** 				 	{
 5698              		.loc 1 1774 0
 5699 0090 8E4B     		ldr	r3, .L564+24
 5700 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5701 0094 012B     		cmp	r3, #1
 5702 0096 1AD0     		beq	.L524
 5703              	.LVL745:
 5704              	.L450:
1782:TP2824/TP2802.c **** 
 5705              		.loc 1 1782 0
 5706 0098 FFF7FEFF 		bl	Init_TP280x_RegSet
 5707              	.LVL746:
1784:TP2824/TP2802.c **** 				 	{
 5708              		.loc 1 1784 0
 5709 009c 8B4B     		ldr	r3, .L564+24
 5710 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5711 00a0 012B     		cmp	r3, #1
 5712 00a2 1DD0     		beq	.L525
 5713              	.L451:
1902:TP2824/TP2802.c ****         {
 5714              		.loc 1 1902 0
 5715 00a4 2546     		mov	r5, r4
 5716 00a6 854B     		ldr	r3, .L564+8
 5717 00a8 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 5718 00aa 012B     		cmp	r3, #1
 5719 00ac 59D0     		beq	.L526
 5720              	.L460:
1983:TP2824/TP2802.c ****         {
 5721              		.loc 1 1983 0
 5722 00ae 834B     		ldr	r3, .L564+8
ARM GAS  /tmp/ccFyOsmB.s 			page 187


 5723 00b0 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5724 00b2 022B     		cmp	r3, #2
 5725 00b4 00F0CC80 		beq	.L527
 5726              	.L449:
1751:TP2824/TP2802.c ****     {
 5727              		.loc 1 1751 0 discriminator 2
 5728 00b8 0134     		adds	r4, r4, #1
 5729              	.LVL747:
 5730 00ba E4B2     		uxtb	r4, r4
 5731              	.LVL748:
 5732 00bc A3E7     		b	.L445
 5733              	.LVL749:
 5734              	.L523:
1767:TP2824/TP2802.c ****                 continue;
 5735              		.loc 1 1767 0
 5736 00be 804B     		ldr	r3, .L564+12
 5737 00c0 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 5738 00c2 FF2B     		cmp	r3, #255
 5739 00c4 F8D0     		beq	.L449
1767:TP2824/TP2802.c ****                 continue;
 5740              		.loc 1 1767 0 is_stmt 0 discriminator 1
 5741 00c6 0133     		adds	r3, r3, #1
 5742 00c8 7D49     		ldr	r1, .L564+12
 5743 00ca 0B55     		strb	r3, [r1, r4]
1768:TP2824/TP2802.c ****             }
 5744              		.loc 1 1768 0 is_stmt 1 discriminator 1
 5745 00cc F4E7     		b	.L449
 5746              	.L524:
1776:TP2824/TP2802.c **** 					VXISI2CWrite( 0x32, 0x00 );
 5747              		.loc 1 1776 0
 5748 00ce 0121     		movs	r1, #1
 5749 00d0 0846     		mov	r0, r1
 5750              	.LVL750:
 5751 00d2 FFF7FEFF 		bl	Set_Video_Loss_OSD
 5752              	.LVL751:
1777:TP2824/TP2802.c **** 				 	}
 5753              		.loc 1 1777 0
 5754 00d6 0021     		movs	r1, #0
 5755 00d8 3220     		movs	r0, #50
 5756 00da FFF7FEFF 		bl	VXISI2CWrite
 5757              	.LVL752:
 5758 00de DBE7     		b	.L450
 5759              	.L525:
1787:TP2824/TP2802.c **** 				 	}
 5760              		.loc 1 1787 0
 5761 00e0 0120     		movs	r0, #1
 5762 00e2 FFF7FEFF 		bl	HS_Select_Win
 5763              	.LVL753:
 5764 00e6 DDE7     		b	.L451
 5765              	.LVL754:
 5766              	.L519:
1813:TP2824/TP2802.c ****             else
 5767              		.loc 1 1813 0
 5768 00e8 734B     		ldr	r3, .L564+4
 5769 00ea 6022     		movs	r2, #96
 5770 00ec 1A70     		strb	r2, [r3]
 5771 00ee A1E7     		b	.L453
ARM GAS  /tmp/ccFyOsmB.s 			page 188


 5772              	.L520:
1819:TP2824/TP2802.c ****                 {
 5773              		.loc 1 1819 0
 5774 00f0 724B     		ldr	r3, .L564+8
 5775 00f2 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5776 00f4 022B     		cmp	r3, #2
 5777 00f6 0BD0     		beq	.L528
1848:TP2824/TP2802.c ****                 {
 5778              		.loc 1 1848 0
 5779 00f8 93B9     		cbnz	r3, .L456
1850:TP2824/TP2802.c ****                     count[i] = 0;
 5780              		.loc 1 1850 0
 5781 00fa 704B     		ldr	r3, .L564+8
 5782 00fc 0122     		movs	r2, #1
 5783 00fe 5A55     		strb	r2, [r3, r5]
1851:TP2824/TP2802.c ****                     printf("1video in ch%02x \r\n", (tWord)i);
 5784              		.loc 1 1851 0
 5785 0100 6F4B     		ldr	r3, .L564+12
 5786 0102 0022     		movs	r2, #0
 5787 0104 5A55     		strb	r2, [r3, r5]
1852:TP2824/TP2802.c ****                 }
 5788              		.loc 1 1852 0
 5789 0106 2946     		mov	r1, r5
 5790 0108 7148     		ldr	r0, .L564+28
 5791              	.LVL755:
 5792 010a FFF7FEFF 		bl	printf
 5793              	.LVL756:
 5794 010e C9E7     		b	.L451
 5795              	.LVL757:
 5796              	.L528:
1821:TP2824/TP2802.c **** 				#if 0
 5797              		.loc 1 1821 0
 5798 0110 6B4B     		ldr	r3, .L564+12
 5799 0112 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5800 0114 FF2B     		cmp	r3, #255
 5801 0116 C5D0     		beq	.L451
1821:TP2824/TP2802.c **** 				#if 0
 5802              		.loc 1 1821 0 is_stmt 0 discriminator 1
 5803 0118 0133     		adds	r3, r3, #1
 5804 011a 694A     		ldr	r2, .L564+12
 5805 011c 5355     		strb	r3, [r2, r5]
 5806 011e C1E7     		b	.L451
 5807              	.L456:
1856:TP2824/TP2802.c ****                     count[i] = 0;
 5808              		.loc 1 1856 0 is_stmt 1
 5809 0120 664B     		ldr	r3, .L564+8
 5810 0122 0222     		movs	r2, #2
 5811 0124 5A55     		strb	r2, [r3, r5]
1857:TP2824/TP2802.c ****                     printf("video locked ch%02x \r\n", (tWord)i);
 5812              		.loc 1 1857 0
 5813 0126 664B     		ldr	r3, .L564+12
 5814 0128 0022     		movs	r2, #0
 5815 012a 5A55     		strb	r2, [r3, r5]
1858:TP2824/TP2802.c ****                 }
 5816              		.loc 1 1858 0
 5817 012c 2946     		mov	r1, r5
 5818 012e 6948     		ldr	r0, .L564+32
ARM GAS  /tmp/ccFyOsmB.s 			page 189


 5819              	.LVL758:
 5820 0130 FFF7FEFF 		bl	printf
 5821              	.LVL759:
 5822 0134 B6E7     		b	.L451
 5823              	.LVL760:
 5824              	.L521:
1866:TP2824/TP2802.c ****                     count[i] = 0;
 5825              		.loc 1 1866 0
 5826 0136 614B     		ldr	r3, .L564+8
 5827 0138 0122     		movs	r2, #1
 5828 013a 5A55     		strb	r2, [r3, r5]
1867:TP2824/TP2802.c ****                     printf("video in ch%02x \r\n", (tWord)i);
 5829              		.loc 1 1867 0
 5830 013c 604B     		ldr	r3, .L564+12
 5831 013e 0022     		movs	r2, #0
 5832 0140 5A55     		strb	r2, [r3, r5]
1868:TP2824/TP2802.c ****                 }
 5833              		.loc 1 1868 0
 5834 0142 2946     		mov	r1, r5
 5835 0144 6448     		ldr	r0, .L564+36
 5836              	.LVL761:
 5837 0146 FFF7FEFF 		bl	printf
 5838              	.LVL762:
 5839 014a ABE7     		b	.L451
 5840              	.LVL763:
 5841              	.L522:
1880:TP2824/TP2802.c ****                     count[i] = 0;
 5842              		.loc 1 1880 0
 5843 014c 5B4B     		ldr	r3, .L564+8
 5844 014e 0322     		movs	r2, #3
 5845 0150 5A55     		strb	r2, [r3, r5]
1881:TP2824/TP2802.c ****                     printf("video unstable ch%02x \r\n", (tWord)i);
 5846              		.loc 1 1881 0
 5847 0152 5B4B     		ldr	r3, .L564+12
 5848 0154 0022     		movs	r2, #0
 5849 0156 5A55     		strb	r2, [r3, r5]
1882:TP2824/TP2802.c **** 			}		
 5850              		.loc 1 1882 0
 5851 0158 2946     		mov	r1, r5
 5852 015a 6048     		ldr	r0, .L564+40
 5853              	.LVL764:
 5854 015c FFF7FEFF 		bl	printf
 5855              	.LVL765:
 5856 0160 A0E7     		b	.L451
 5857              	.L526:
1904:TP2824/TP2802.c ****             sywd = cvstd & 0x08;
 5858              		.loc 1 1904 0
 5859 0162 0320     		movs	r0, #3
 5860 0164 FFF7FEFF 		bl	tp28xx_byte_read
 5861              	.LVL766:
1905:TP2824/TP2802.c ****             cvstd &= 0x07;
 5862              		.loc 1 1905 0
 5863 0168 00F00802 		and	r2, r0, #8
 5864 016c 5C4B     		ldr	r3, .L564+44
 5865 016e 1A60     		str	r2, [r3]
1906:TP2824/TP2802.c ****             fmt = mode[i];
 5866              		.loc 1 1906 0
ARM GAS  /tmp/ccFyOsmB.s 			page 190


 5867 0170 00F00702 		and	r2, r0, #7
 5868              	.LVL767:
1907:TP2824/TP2802.c ****             if(NTPAL == cvstd && flag_CVBS)
 5869              		.loc 1 1907 0
 5870 0174 4F4B     		ldr	r3, .L564
 5871 0176 1F5D     		ldrb	r7, [r3, r4]	@ zero_extendqisi2
 5872              	.LVL768:
1908:TP2824/TP2802.c ****             {
 5873              		.loc 1 1908 0
 5874 0178 062A     		cmp	r2, #6
 5875 017a 11D0     		beq	.L529
 5876              	.L461:
1916:TP2824/TP2802.c ****             {
 5877              		.loc 1 1916 0
 5878 017c 042A     		cmp	r2, #4
 5879 017e 18D0     		beq	.L530
1923:TP2824/TP2802.c ****             {
 5880              		.loc 1 1923 0
 5881 0180 052A     		cmp	r2, #5
 5882 0182 4FD0     		beq	.L509
1927:TP2824/TP2802.c ****             {
 5883              		.loc 1 1927 0
 5884 0184 022A     		cmp	r2, #2
 5885 0186 1ED0     		beq	.L531
1934:TP2824/TP2802.c ****             {
 5886              		.loc 1 1934 0
 5887 0188 3ABB     		cbnz	r2, .L465
1936:TP2824/TP2802.c ****                     fmt = R4M30;
 5888              		.loc 1 1936 0
 5889 018a 564B     		ldr	r3, .L564+48
 5890 018c 1B68     		ldr	r3, [r3]
 5891 018e 002B     		cmp	r3, #0
 5892 0190 49D0     		beq	.L462
1936:TP2824/TP2802.c ****                     fmt = R4M30;
 5893              		.loc 1 1936 0 is_stmt 0 discriminator 1
 5894 0192 4B4B     		ldr	r3, .L564+12
 5895 0194 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5896 0196 13F0020F 		tst	r3, #2
 5897 019a 44D0     		beq	.L462
1937:TP2824/TP2802.c ****                 else
 5898              		.loc 1 1937 0 is_stmt 1
 5899 019c 2622     		movs	r2, #38
 5900              	.LVL769:
 5901 019e 42E0     		b	.L462
 5902              	.LVL770:
 5903              	.L529:
1908:TP2824/TP2802.c ****             {
 5904              		.loc 1 1908 0 discriminator 1
 5905 01a0 514B     		ldr	r3, .L564+52
 5906 01a2 1B68     		ldr	r3, [r3]
 5907 01a4 002B     		cmp	r3, #0
 5908 01a6 E9D0     		beq	.L461
1911:TP2824/TP2802.c ****                     fmt = PAL;
 5909              		.loc 1 1911 0
 5910 01a8 16F0040F 		tst	r6, #4
 5911 01ac 34D0     		beq	.L506
1912:TP2824/TP2802.c ****                 else
ARM GAS  /tmp/ccFyOsmB.s 			page 191


 5912              		.loc 1 1912 0
 5913 01ae 0922     		movs	r2, #9
 5914              	.LVL771:
 5915 01b0 39E0     		b	.L462
 5916              	.LVL772:
 5917              	.L530:
1918:TP2824/TP2802.c ****                     fmt = R4M12;
 5918              		.loc 1 1918 0
 5919 01b2 4C4B     		ldr	r3, .L564+48
 5920 01b4 1B68     		ldr	r3, [r3]
 5921 01b6 8BB3     		cbz	r3, .L507
1918:TP2824/TP2802.c ****                     fmt = R4M12;
 5922              		.loc 1 1918 0 is_stmt 0 discriminator 1
 5923 01b8 414B     		ldr	r3, .L564+12
 5924 01ba 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5925 01bc 13F0020F 		tst	r3, #2
 5926 01c0 2ED1     		bne	.L508
1921:TP2824/TP2802.c ****             }
 5927              		.loc 1 1921 0 is_stmt 1
 5928 01c2 0C22     		movs	r2, #12
 5929              	.LVL773:
 5930 01c4 2FE0     		b	.L462
 5931              	.LVL774:
 5932              	.L531:
1929:TP2824/TP2802.c ****                     fmt = R3M20;
 5933              		.loc 1 1929 0
 5934 01c6 474B     		ldr	r3, .L564+48
 5935 01c8 1B68     		ldr	r3, [r3]
 5936 01ca 63B3     		cbz	r3, .L462
1929:TP2824/TP2802.c ****                     fmt = R3M20;
 5937              		.loc 1 1929 0 is_stmt 0 discriminator 1
 5938 01cc 3C4B     		ldr	r3, .L564+12
 5939 01ce 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5940 01d0 13F0020F 		tst	r3, #2
 5941 01d4 27D0     		beq	.L462
1930:TP2824/TP2802.c ****                 else
 5942              		.loc 1 1930 0 is_stmt 1
 5943 01d6 2322     		movs	r2, #35
 5944              	.LVL775:
 5945 01d8 25E0     		b	.L462
 5946              	.LVL776:
 5947              	.L465:
1941:TP2824/TP2802.c ****             {
 5948              		.loc 1 1941 0
 5949 01da 032A     		cmp	r2, #3
 5950 01dc 23D9     		bls	.L462
1947:TP2824/TP2802.c ****                 {
 5951              		.loc 1 1947 0
 5952 01de 414B     		ldr	r3, .L564+48
 5953 01e0 1B68     		ldr	r3, [r3]
 5954 01e2 0BB9     		cbnz	r3, .L532
1907:TP2824/TP2802.c ****             if(NTPAL == cvstd && flag_CVBS)
 5955              		.loc 1 1907 0
 5956 01e4 3A46     		mov	r2, r7
 5957              	.LVL777:
 5958 01e6 1EE0     		b	.L462
 5959              	.LVL778:
ARM GAS  /tmp/ccFyOsmB.s 			page 192


 5960              	.L532:
1949:TP2824/TP2802.c ****                     tmp = tp28xx_byte_read(0x04);
 5961              		.loc 1 1949 0
 5962 01e8 0921     		movs	r1, #9
 5963 01ea 2F20     		movs	r0, #47
 5964 01ec FFF7FEFF 		bl	tp28xx_byte_write
 5965              	.LVL779:
1950:TP2824/TP2802.c ****                     if((tmp > 0x48) && (tmp < 0x55))
 5966              		.loc 1 1950 0
 5967 01f0 0420     		movs	r0, #4
 5968 01f2 FFF7FEFF 		bl	tp28xx_byte_read
 5969              	.LVL780:
1951:TP2824/TP2802.c ****                     {
 5970              		.loc 1 1951 0
 5971 01f6 A0F14903 		sub	r3, r0, #73
 5972 01fa DBB2     		uxtb	r3, r3
 5973 01fc 0B2B     		cmp	r3, #11
 5974 01fe 21D9     		bls	.L513
1955:TP2824/TP2802.c ****                     {
 5975              		.loc 1 1955 0
 5976 0200 A0F15603 		sub	r3, r0, #86
 5977 0204 DBB2     		uxtb	r3, r3
 5978 0206 0B2B     		cmp	r3, #11
 5979 0208 1ED9     		bls	.L514
1959:TP2824/TP2802.c ****                     {
 5980              		.loc 1 1959 0
 5981 020a A0F17103 		sub	r3, r0, #113
 5982 020e DBB2     		uxtb	r3, r3
 5983 0210 0E2B     		cmp	r3, #14
 5984 0212 1BD9     		bls	.L515
1907:TP2824/TP2802.c ****             if(NTPAL == cvstd && flag_CVBS)
 5985              		.loc 1 1907 0
 5986 0214 3A46     		mov	r2, r7
 5987 0216 06E0     		b	.L462
 5988              	.LVL781:
 5989              	.L506:
1914:TP2824/TP2802.c ****             }
 5990              		.loc 1 1914 0
 5991 0218 0822     		movs	r2, #8
 5992              	.LVL782:
 5993 021a 04E0     		b	.L462
 5994              	.LVL783:
 5995              	.L507:
1921:TP2824/TP2802.c ****             }
 5996              		.loc 1 1921 0
 5997 021c 0C22     		movs	r2, #12
 5998              	.LVL784:
 5999 021e 02E0     		b	.L462
 6000              	.LVL785:
 6001              	.L508:
1919:TP2824/TP2802.c ****                 else
 6002              		.loc 1 1919 0
 6003 0220 2422     		movs	r2, #36
 6004              	.LVL786:
 6005 0222 00E0     		b	.L462
 6006              	.LVL787:
 6007              	.L509:
ARM GAS  /tmp/ccFyOsmB.s 			page 193


1925:TP2824/TP2802.c ****             }
 6008              		.loc 1 1925 0
 6009 0224 0D22     		movs	r2, #13
 6010              	.LVL788:
 6011              	.L462:
1974:TP2824/TP2802.c **** 		            {
 6012              		.loc 1 1974 0
 6013 0226 234B     		ldr	r3, .L564
 6014 0228 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6015 022a 9342     		cmp	r3, r2
 6016 022c 3FF43FAF 		beq	.L460
1976:TP2824/TP2802.c **** 		                printf("Set_VidResmode[%d] =%d\r\n",(int)i, (int)fmt);
 6017              		.loc 1 1976 0
 6018 0230 204B     		ldr	r3, .L564
 6019 0232 5A55     		strb	r2, [r3, r5]
1977:TP2824/TP2802.c **** 		                Set_VidRes(i);
 6020              		.loc 1 1977 0
 6021 0234 2946     		mov	r1, r5
 6022 0236 2D48     		ldr	r0, .L564+56
 6023 0238 FFF7FEFF 		bl	printf
 6024              	.LVL789:
1978:TP2824/TP2802.c **** 		            }
 6025              		.loc 1 1978 0
 6026 023c 2046     		mov	r0, r4
 6027 023e FFF7FEFF 		bl	Set_VidRes
 6028              	.LVL790:
 6029 0242 34E7     		b	.L460
 6030              	.LVL791:
 6031              	.L513:
1953:TP2824/TP2802.c ****                     }
 6032              		.loc 1 1953 0
 6033 0244 2022     		movs	r2, #32
 6034 0246 EEE7     		b	.L462
 6035              	.L514:
1957:TP2824/TP2802.c ****                     }
 6036              		.loc 1 1957 0
 6037 0248 2222     		movs	r2, #34
 6038 024a ECE7     		b	.L462
 6039              	.L515:
1961:TP2824/TP2802.c ****                     }
 6040              		.loc 1 1961 0
 6041 024c 2522     		movs	r2, #37
 6042 024e EAE7     		b	.L462
 6043              	.LVL792:
 6044              	.L527:
1985:TP2824/TP2802.c ****             {
 6045              		.loc 1 1985 0
 6046 0250 1B4B     		ldr	r3, .L564+12
 6047 0252 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6048 0254 002B     		cmp	r3, #0
 6049 0256 7AD1     		bne	.L466
1987:TP2824/TP2802.c ****                 CurCH = i;
 6050              		.loc 1 1987 0
 6051 0258 254B     		ldr	r3, .L564+60
 6052 025a 0022     		movs	r2, #0
 6053 025c 5A55     		strb	r2, [r3, r5]
1988:TP2824/TP2802.c ****                 if( (R720P30V2 == mode[i]) || (R720P25V2 == mode[i]) )
ARM GAS  /tmp/ccFyOsmB.s 			page 194


 6054              		.loc 1 1988 0
 6055 025e 254B     		ldr	r3, .L564+64
 6056 0260 1C70     		strb	r4, [r3]
1989:TP2824/TP2802.c ****                 {
 6057              		.loc 1 1989 0
 6058 0262 144B     		ldr	r3, .L564
 6059 0264 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6060 0266 0C3B     		subs	r3, r3, #12
 6061 0268 DBB2     		uxtb	r3, r3
 6062 026a 012B     		cmp	r3, #1
 6063 026c 50D9     		bls	.L533
 6064              	.L467:
2000:TP2824/TP2802.c **** 
 6065              		.loc 1 2000 0
 6066 026e A4F10A00 		sub	r0, r4, #10
 6067 0272 214B     		ldr	r3, .L564+68
 6068 0274 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6069 0276 C0B2     		uxtb	r0, r0
 6070 0278 FFF7FEFF 		bl	tp28xx_byte_write
 6071              	.LVL793:
2003:TP2824/TP2802.c ****                 {
 6072              		.loc 1 2003 0
 6073 027c 114B     		ldr	r3, .L564+16
 6074 027e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6075 0280 2F2B     		cmp	r3, #47
 6076 0282 54D0     		beq	.L534
2011:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfa, REG_FA[i]);
 6077              		.loc 1 2011 0
 6078 0284 1D4B     		ldr	r3, .L564+72
 6079 0286 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6080 0288 F720     		movs	r0, #247
 6081 028a FFF7FEFF 		bl	tp28xx_byte_write
 6082              	.LVL794:
2012:TP2824/TP2802.c ****                     //printf("set output ch%02x \r\n", (tWord)CH[i]);
 6083              		.loc 1 2012 0
 6084 028e 1C4B     		ldr	r3, .L564+76
 6085 0290 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6086 0292 FA20     		movs	r0, #250
 6087 0294 FFF7FEFF 		bl	tp28xx_byte_write
 6088              	.LVL795:
 6089              	.L469:
2121:TP2824/TP2802.c ****                 {
 6090              		.loc 1 2121 0
 6091 0298 1A4B     		ldr	r3, .L564+80
 6092 029a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6093 029c 1A4A     		ldr	r2, .L564+84
 6094 029e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 6095 02a0 8B42     		cmp	r3, r1
 6096 02a2 3FF409AF 		beq	.L449
2123:TP2824/TP2802.c ****                     //CreateMDIN340VideoInstance();  //chunyu
 6097              		.loc 1 2123 0
 6098 02a6 174B     		ldr	r3, .L564+80
 6099 02a8 1970     		strb	r1, [r3]
2125:TP2824/TP2802.c **** 
 6100              		.loc 1 2125 0
 6101 02aa 1848     		ldr	r0, .L564+88
 6102 02ac FFF7FEFF 		bl	printf
ARM GAS  /tmp/ccFyOsmB.s 			page 195


 6103              	.LVL796:
 6104 02b0 02E7     		b	.L449
 6105              	.L565:
 6106 02b2 00BF     		.align	2
 6107              	.L564:
 6108 02b4 00000000 		.word	mode
 6109 02b8 00000000 		.word	flag_LOCKED
 6110 02bc 00000000 		.word	state
 6111 02c0 00000000 		.word	count
 6112 02c4 00000000 		.word	chip
 6113 02c8 5C000000 		.word	.LC46
 6114 02cc 00000000 		.word	SelectInputMode
 6115 02d0 00000000 		.word	.LC42
 6116 02d4 14000000 		.word	.LC43
 6117 02d8 2C000000 		.word	.LC44
 6118 02dc 40000000 		.word	.LC45
 6119 02e0 00000000 		.word	sywd
 6120 02e4 00000000 		.word	flag_MEGA
 6121 02e8 00000000 		.word	flag_CVBS
 6122 02ec 78000000 		.word	.LC47
 6123 02f0 00000000 		.word	std
 6124 02f4 00000000 		.word	CurCH
 6125 02f8 00000000 		.word	.LANCHOR33
 6126 02fc 00000000 		.word	.LANCHOR34
 6127 0300 00000000 		.word	.LANCHOR35
 6128 0304 00000000 		.word	CurRes
 6129 0308 00000000 		.word	ManVidResRx
 6130 030c 94000000 		.word	.LC48
 6131              	.L533:
1991:TP2824/TP2802.c ****                     {
 6132              		.loc 1 1991 0
 6133 0310 0320     		movs	r0, #3
 6134 0312 FFF7FEFF 		bl	tp28xx_byte_read
 6135              	.LVL797:
 6136 0316 10F0080F 		tst	r0, #8
 6137 031a A8D1     		bne	.L467
1993:TP2824/TP2802.c ****                         Set_VidRes(i);
 6138              		.loc 1 1993 0
 6139 031c BA4A     		ldr	r2, .L566
 6140 031e 535D     		ldrb	r3, [r2, r5]	@ zero_extendqisi2
 6141 0320 23F00803 		bic	r3, r3, #8
 6142 0324 5355     		strb	r3, [r2, r5]
1994:TP2824/TP2802.c ****                         //printf("TVI_Set_VidRes\r\n");
 6143              		.loc 1 1994 0
 6144 0326 2046     		mov	r0, r4
 6145 0328 FFF7FEFF 		bl	Set_VidRes
 6146              	.LVL798:
 6147 032c 9FE7     		b	.L467
 6148              	.L534:
2005:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfa, REG_FA[i]);
 6149              		.loc 1 2005 0
 6150 032e B74B     		ldr	r3, .L566+4
 6151 0330 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6152 0332 F820     		movs	r0, #248
 6153 0334 FFF7FEFF 		bl	tp28xx_byte_write
 6154              	.LVL799:
2006:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfb, REG_FA[i]);
ARM GAS  /tmp/ccFyOsmB.s 			page 196


 6155              		.loc 1 2006 0
 6156 0338 B54B     		ldr	r3, .L566+8
 6157 033a 5D5D     		ldrb	r5, [r3, r5]	@ zero_extendqisi2
 6158 033c 2946     		mov	r1, r5
 6159 033e FA20     		movs	r0, #250
 6160 0340 FFF7FEFF 		bl	tp28xx_byte_write
 6161              	.LVL800:
2007:TP2824/TP2802.c ****                 }
 6162              		.loc 1 2007 0
 6163 0344 2946     		mov	r1, r5
 6164 0346 FB20     		movs	r0, #251
 6165 0348 FFF7FEFF 		bl	tp28xx_byte_write
 6166              	.LVL801:
 6167 034c A4E7     		b	.L469
 6168              	.L466:
2129:TP2824/TP2802.c ****             {
 6169              		.loc 1 2129 0
 6170 034e 012B     		cmp	r3, #1
 6171 0350 7ED0     		beq	.L535
2150:TP2824/TP2802.c ****             {
 6172              		.loc 1 2150 0
 6173 0352 022B     		cmp	r3, #2
 6174 0354 00F0B880 		beq	.L536
2173:TP2824/TP2802.c ****             {
 6175              		.loc 1 2173 0
 6176 0358 032B     		cmp	r3, #3
 6177 035a 00F0F380 		beq	.L537
2198:TP2824/TP2802.c ****             {
 6178              		.loc 1 2198 0
 6179 035e 062B     		cmp	r3, #6
 6180 0360 40F24281 		bls	.L538
2207:TP2824/TP2802.c ****             {
 6181              		.loc 1 2207 0
 6182 0364 132B     		cmp	r3, #19
 6183 0366 40F27181 		bls	.L539
2221:TP2824/TP2802.c ****             {
 6184              		.loc 1 2221 0
 6185 036a 142B     		cmp	r3, #20
 6186 036c 00F09281 		beq	.L540
2347:TP2824/TP2802.c ****             {
 6187              		.loc 1 2347 0
 6188 0370 152B     		cmp	r3, #21
 6189 0372 00F02482 		beq	.L541
2365:TP2824/TP2802.c ****             {	
 6190              		.loc 1 2365 0
 6191 0376 162B     		cmp	r3, #22
 6192 0378 7FF49EAE 		bne	.L449
 6193              	.LBB5:
2370:TP2824/TP2802.c **** 				{
 6194              		.loc 1 2370 0
 6195 037c A54B     		ldr	r3, .L566+12
 6196 037e 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6197 0380 9BBB     		cbnz	r3, .L501
2372:TP2824/TP2802.c **** 					{
 6198              		.loc 1 2372 0
 6199 0382 A14B     		ldr	r3, .L566
 6200 0384 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
ARM GAS  /tmp/ccFyOsmB.s 			page 197


 6201 0386 083B     		subs	r3, r3, #8
 6202 0388 DBB2     		uxtb	r3, r3
 6203 038a 012B     		cmp	r3, #1
 6204 038c 40F23282 		bls	.L542
2378:TP2824/TP2802.c **** 					}
 6205              		.loc 1 2378 0
 6206 0390 A148     		ldr	r0, .L566+16
 6207              	.L502:
 6208              	.LVL802:
2381:TP2824/TP2802.c **** 					
 6209              		.loc 1 2381 0
 6210 0392 FFF7FEFF 		bl	I2CDeviceSet1
 6211              	.LVL803:
2383:TP2824/TP2802.c **** 					{
 6212              		.loc 1 2383 0
 6213 0396 9C4B     		ldr	r3, .L566
 6214 0398 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6215 039a 023B     		subs	r3, r3, #2
 6216 039c DBB2     		uxtb	r3, r3
 6217 039e 012B     		cmp	r3, #1
 6218 03a0 40F22A82 		bls	.L543
 6219              	.L503:
2388:TP2824/TP2802.c **** 					
 6220              		.loc 1 2388 0
 6221 03a4 2146     		mov	r1, r4
 6222 03a6 4020     		movs	r0, #64
 6223 03a8 FFF7FEFF 		bl	tp28xx_byte_write
 6224              	.LVL804:
2390:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB6);
 6225              		.loc 1 2390 0
 6226 03ac 8021     		movs	r1, #128
 6227 03ae BE20     		movs	r0, #190
 6228 03b0 FFF7FEFF 		bl	tp28xx_byte_write
 6229              	.LVL805:
2391:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB5);
 6230              		.loc 1 2391 0
 6231 03b4 B620     		movs	r0, #182
 6232 03b6 FFF7FEFF 		bl	tp28xx_byte_read
 6233              	.LVL806:
2392:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB4);
 6234              		.loc 1 2392 0
 6235 03ba B520     		movs	r0, #181
 6236 03bc FFF7FEFF 		bl	tp28xx_byte_read
 6237              	.LVL807:
2393:TP2824/TP2802.c **** 
 6238              		.loc 1 2393 0
 6239 03c0 B420     		movs	r0, #180
 6240 03c2 FFF7FEFF 		bl	tp28xx_byte_read
 6241              	.LVL808:
2396:TP2824/TP2802.c **** 					delay(1);//5ms
 6242              		.loc 1 2396 0
 6243 03c6 0021     		movs	r1, #0
 6244 03c8 A720     		movs	r0, #167
 6245 03ca FFF7FEFF 		bl	tp28xx_byte_write
 6246              	.LVL809:
2397:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x83);
 6247              		.loc 1 2397 0
ARM GAS  /tmp/ccFyOsmB.s 			page 198


 6248 03ce 0120     		movs	r0, #1
 6249 03d0 FFF7FEFF 		bl	delay
 6250              	.LVL810:
2398:TP2824/TP2802.c **** 					
 6251              		.loc 1 2398 0
 6252 03d4 8321     		movs	r1, #131
 6253 03d6 A720     		movs	r0, #167
 6254 03d8 FFF7FEFF 		bl	tp28xx_byte_write
 6255              	.LVL811:
2400:TP2824/TP2802.c **** 					{
 6256              		.loc 1 2400 0
 6257 03dc 8A4B     		ldr	r3, .L566
 6258 03de 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6259 03e0 023B     		subs	r3, r3, #2
 6260 03e2 DBB2     		uxtb	r3, r3
 6261 03e4 012B     		cmp	r3, #1
 6262 03e6 40F20C82 		bls	.L544
 6263              	.L501:
2408:TP2824/TP2802.c **** 				{
 6264              		.loc 1 2408 0
 6265 03ea 8A4B     		ldr	r3, .L566+12
 6266 03ec 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6267 03ee 012B     		cmp	r3, #1
 6268 03f0 00F00E82 		beq	.L545
 6269              	.L504:
2443:TP2824/TP2802.c **** 				{
 6270              		.loc 1 2443 0
 6271 03f4 874B     		ldr	r3, .L566+12
 6272 03f6 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6273 03f8 022B     		cmp	r3, #2
 6274 03fa 7FF45DAE 		bne	.L449
 6275              	.LVL812:
2446:TP2824/TP2802.c **** 				
 6276              		.loc 1 2446 0
 6277 03fe 8748     		ldr	r0, .L566+20
 6278 0400 FFF7FEFF 		bl	I2CDeviceSet1
 6279              	.LVL813:
2448:TP2824/TP2802.c **** 					tp28xx_byte_write(0xbe, 0x80);
 6280              		.loc 1 2448 0
 6281 0404 2146     		mov	r1, r4
 6282 0406 4020     		movs	r0, #64
 6283 0408 FFF7FEFF 		bl	tp28xx_byte_write
 6284              	.LVL814:
2449:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB6);
 6285              		.loc 1 2449 0
 6286 040c 8021     		movs	r1, #128
 6287 040e BE20     		movs	r0, #190
 6288 0410 FFF7FEFF 		bl	tp28xx_byte_write
 6289              	.LVL815:
2450:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB5);
 6290              		.loc 1 2450 0
 6291 0414 B620     		movs	r0, #182
 6292 0416 FFF7FEFF 		bl	tp28xx_byte_read
 6293              	.LVL816:
2451:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB4);
 6294              		.loc 1 2451 0
 6295 041a B520     		movs	r0, #181
ARM GAS  /tmp/ccFyOsmB.s 			page 199


 6296 041c FFF7FEFF 		bl	tp28xx_byte_read
 6297              	.LVL817:
2452:TP2824/TP2802.c **** 
 6298              		.loc 1 2452 0
 6299 0420 B420     		movs	r0, #180
 6300 0422 FFF7FEFF 		bl	tp28xx_byte_read
 6301              	.LVL818:
2455:TP2824/TP2802.c **** 					tp28xx_byte_read(0xA2);
 6302              		.loc 1 2455 0
 6303 0426 A420     		movs	r0, #164
 6304 0428 FFF7FEFF 		bl	tp28xx_byte_read
 6305              	.LVL819:
2456:TP2824/TP2802.c **** 					tp28xx_byte_read(0xA3);
 6306              		.loc 1 2456 0
 6307 042c A220     		movs	r0, #162
 6308 042e FFF7FEFF 		bl	tp28xx_byte_read
 6309              	.LVL820:
2457:TP2824/TP2802.c **** 					
 6310              		.loc 1 2457 0
 6311 0432 A320     		movs	r0, #163
 6312 0434 FFF7FEFF 		bl	tp28xx_byte_read
 6313              	.LVL821:
2459:TP2824/TP2802.c **** 					delay(1);//5ms
 6314              		.loc 1 2459 0
 6315 0438 0021     		movs	r1, #0
 6316 043a A720     		movs	r0, #167
 6317 043c FFF7FEFF 		bl	tp28xx_byte_write
 6318              	.LVL822:
2460:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x83);
 6319              		.loc 1 2460 0
 6320 0440 0120     		movs	r0, #1
 6321 0442 FFF7FEFF 		bl	delay
 6322              	.LVL823:
2461:TP2824/TP2802.c **** 
 6323              		.loc 1 2461 0
 6324 0446 8321     		movs	r1, #131
 6325 0448 A720     		movs	r0, #167
 6326 044a FFF7FEFF 		bl	tp28xx_byte_write
 6327              	.LVL824:
 6328 044e 33E6     		b	.L449
 6329              	.LVL825:
 6330              	.L535:
 6331              	.LBE5:
2131:TP2824/TP2802.c ****                 {
 6332              		.loc 1 2131 0
 6333 0450 734B     		ldr	r3, .L566+24
 6334 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6335 0454 232B     		cmp	r3, #35
 6336 0456 7FF62FAE 		bls	.L449
2133:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
 6337              		.loc 1 2133 0
 6338 045a 0120     		movs	r0, #1
 6339 045c FFF7FEFF 		bl	tp28xx_byte_read
 6340              	.LVL826:
 6341 0460 0646     		mov	r6, r0
 6342              	.LVL827:
2134:TP2824/TP2802.c ****                     if(mode[i] == NTSC || mode[i] == PAL)
ARM GAS  /tmp/ccFyOsmB.s 			page 200


 6343              		.loc 1 2134 0
 6344 0462 0146     		mov	r1, r0
 6345 0464 6F48     		ldr	r0, .L566+28
 6346              	.LVL828:
 6347 0466 FFF7FEFF 		bl	printf
 6348              	.LVL829:
2135:TP2824/TP2802.c ****                              printf("CVBS  mode:%d\r\n", (tWord)mode[i]);
 6349              		.loc 1 2135 0
 6350 046a 674B     		ldr	r3, .L566
 6351 046c 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6352 046e A1F10803 		sub	r3, r1, #8
 6353 0472 DBB2     		uxtb	r3, r3
 6354 0474 012B     		cmp	r3, #1
 6355 0476 23D9     		bls	.L546
2138:TP2824/TP2802.c ****             			   (mode[i] != R720P30 && mode[i] != R720P25 && mode[i] != R720P30V2 && mode[i] != R
 6356              		.loc 1 2138 0
 6357 0478 06F06406 		and	r6, r6, #100
 6358 047c 602E     		cmp	r6, #96
 6359 047e 7FF41BAE 		bne	.L449
2139:TP2824/TP2802.c ****                     {
 6360              		.loc 1 2139 0 discriminator 1
 6361 0482 0B1F     		subs	r3, r1, #4
 6362 0484 DBB2     		uxtb	r3, r3
2138:TP2824/TP2802.c ****             			   (mode[i] != R720P30 && mode[i] != R720P25 && mode[i] != R720P30V2 && mode[i] != R
 6363              		.loc 1 2138 0 discriminator 1
 6364 0486 012B     		cmp	r3, #1
 6365 0488 7FF616AE 		bls	.L449
2139:TP2824/TP2802.c ****                     {
 6366              		.loc 1 2139 0
 6367 048c 0C29     		cmp	r1, #12
 6368 048e 3FF413AE 		beq	.L449
2139:TP2824/TP2802.c ****                     {
 6369              		.loc 1 2139 0 is_stmt 0 discriminator 1
 6370 0492 0D29     		cmp	r1, #13
 6371 0494 3FF410AE 		beq	.L449
2139:TP2824/TP2802.c ****                     {
 6372              		.loc 1 2139 0 discriminator 2
 6373 0498 0029     		cmp	r1, #0
 6374 049a 3FF40DAE 		beq	.L449
2139:TP2824/TP2802.c ****                     {
 6375              		.loc 1 2139 0 discriminator 3
 6376 049e 0129     		cmp	r1, #1
 6377 04a0 3FF40AAE 		beq	.L449
2142:TP2824/TP2802.c ****                         {
 6378              		.loc 1 2142 0 is_stmt 1
 6379 04a4 2046     		mov	r0, r4
 6380 04a6 FFF7FEFF 		bl	Set_HDC
 6381              	.LVL830:
 6382 04aa 0028     		cmp	r0, #0
 6383 04ac 3FF404AE 		beq	.L449
2144:TP2824/TP2802.c ****                             printf("turn to C ch%02x\r\n", (tWord)i);
 6384              		.loc 1 2144 0
 6385 04b0 584B     		ldr	r3, .L566+12
 6386 04b2 0222     		movs	r2, #2
 6387 04b4 5A55     		strb	r2, [r3, r5]
2145:TP2824/TP2802.c ****                         }
 6388              		.loc 1 2145 0
ARM GAS  /tmp/ccFyOsmB.s 			page 201


 6389 04b6 2946     		mov	r1, r5
 6390 04b8 5B48     		ldr	r0, .L566+32
 6391 04ba FFF7FEFF 		bl	printf
 6392              	.LVL831:
 6393 04be FBE5     		b	.L449
 6394              	.L546:
2136:TP2824/TP2802.c **** //                 if( 0x60 == (0x64 & tmp))
 6395              		.loc 1 2136 0
 6396 04c0 5A48     		ldr	r0, .L566+36
 6397 04c2 FFF7FEFF 		bl	printf
 6398              	.LVL832:
 6399 04c6 F7E5     		b	.L449
 6400              	.L536:
2152:TP2824/TP2802.c ****                 {
 6401              		.loc 1 2152 0
 6402 04c8 554B     		ldr	r3, .L566+24
 6403 04ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6404 04cc 232B     		cmp	r3, #35
 6405 04ce 7FF6F3AD 		bls	.L449
2154:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
 6406              		.loc 1 2154 0
 6407 04d2 0120     		movs	r0, #1
 6408 04d4 FFF7FEFF 		bl	tp28xx_byte_read
 6409              	.LVL833:
 6410 04d8 0646     		mov	r6, r0
 6411              	.LVL834:
2155:TP2824/TP2802.c **** 			if(mode[i] == NTSC || mode[i] == PAL)
 6412              		.loc 1 2155 0
 6413 04da 0146     		mov	r1, r0
 6414 04dc 5148     		ldr	r0, .L566+28
 6415              	.LVL835:
 6416 04de FFF7FEFF 		bl	printf
 6417              	.LVL836:
2156:TP2824/TP2802.c ****                              printf("CVBS  mode:%d\r\n", (tWord)mode[i]);
 6418              		.loc 1 2156 0
 6419 04e2 494B     		ldr	r3, .L566
 6420 04e4 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6421 04e6 A1F10803 		sub	r3, r1, #8
 6422 04ea DBB2     		uxtb	r3, r3
 6423 04ec 012B     		cmp	r3, #1
 6424 04ee 25D9     		bls	.L547
2159:TP2824/TP2802.c **** 		                 (0x00 == (0x04 & tmp) && 
 6425              		.loc 1 2159 0
 6426 04f0 06F01103 		and	r3, r6, #17
 6427 04f4 102B     		cmp	r3, #16
 6428 04f6 03D0     		beq	.L474
2159:TP2824/TP2802.c **** 		                 (0x00 == (0x04 & tmp) && 
 6429              		.loc 1 2159 0 is_stmt 0 discriminator 1
 6430 04f8 464B     		ldr	r3, .L566+12
 6431 04fa 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6432 04fc 022B     		cmp	r3, #2
 6433 04fe 0FD0     		beq	.L475
 6434              	.L474:
2159:TP2824/TP2802.c **** 		                 (0x00 == (0x04 & tmp) && 
 6435              		.loc 1 2159 0 discriminator 3
 6436 0500 16F0040F 		tst	r6, #4
 6437 0504 7FF4D8AD 		bne	.L449
ARM GAS  /tmp/ccFyOsmB.s 			page 202


2161:TP2824/TP2802.c ****                     {
 6438              		.loc 1 2161 0 is_stmt 1
 6439 0508 0B1F     		subs	r3, r1, #4
 6440 050a DBB2     		uxtb	r3, r3
2160:TP2824/TP2802.c **** 		                 (mode[i] == R720P30 || mode[i] == R720P25 || mode[i] == R720P30V2 || mode[i] == 
 6441              		.loc 1 2160 0
 6442 050c 012B     		cmp	r3, #1
 6443 050e 07D9     		bls	.L475
2161:TP2824/TP2802.c ****                     {
 6444              		.loc 1 2161 0
 6445 0510 0C29     		cmp	r1, #12
 6446 0512 05D0     		beq	.L475
2161:TP2824/TP2802.c ****                     {
 6447              		.loc 1 2161 0 is_stmt 0 discriminator 1
 6448 0514 0D29     		cmp	r1, #13
 6449 0516 03D0     		beq	.L475
2161:TP2824/TP2802.c ****                     {
 6450              		.loc 1 2161 0 discriminator 2
 6451 0518 11B1     		cbz	r1, .L475
2161:TP2824/TP2802.c ****                     {
 6452              		.loc 1 2161 0 discriminator 3
 6453 051a 0129     		cmp	r1, #1
 6454 051c 7FF4CCAD 		bne	.L449
 6455              	.L475:
2163:TP2824/TP2802.c ****                         {
 6456              		.loc 1 2163 0 is_stmt 1
 6457 0520 2046     		mov	r0, r4
 6458 0522 FFF7FEFF 		bl	Set_HDA
 6459              	.LVL837:
 6460 0526 0028     		cmp	r0, #0
 6461 0528 3FF4C6AD 		beq	.L449
2165:TP2824/TP2802.c ****                             printf("turn to A ch%02x\r\n", (tWord)i);
 6462              		.loc 1 2165 0
 6463 052c 394B     		ldr	r3, .L566+12
 6464 052e 0122     		movs	r2, #1
 6465 0530 5A55     		strb	r2, [r3, r5]
2166:TP2824/TP2802.c ****                         }
 6466              		.loc 1 2166 0
 6467 0532 2946     		mov	r1, r5
 6468 0534 3E48     		ldr	r0, .L566+40
 6469 0536 FFF7FEFF 		bl	printf
 6470              	.LVL838:
 6471 053a BDE5     		b	.L449
 6472              	.L547:
2157:TP2824/TP2802.c **** //                 if( 0x10 != (0x11 & tmp) && HDC == std[i])
 6473              		.loc 1 2157 0
 6474 053c 3B48     		ldr	r0, .L566+36
 6475 053e FFF7FEFF 		bl	printf
 6476              	.LVL839:
 6477 0542 B9E5     		b	.L449
 6478              	.L537:
2175:TP2824/TP2802.c ****                 {
 6479              		.loc 1 2175 0
 6480 0544 364B     		ldr	r3, .L566+24
 6481 0546 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6482 0548 232B     		cmp	r3, #35
 6483 054a 7FF6B5AD 		bls	.L449
ARM GAS  /tmp/ccFyOsmB.s 			page 203


2177:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
 6484              		.loc 1 2177 0
 6485 054e 0120     		movs	r0, #1
 6486 0550 FFF7FEFF 		bl	tp28xx_byte_read
 6487              	.LVL840:
 6488 0554 0646     		mov	r6, r0
 6489              	.LVL841:
2178:TP2824/TP2802.c **** 
 6490              		.loc 1 2178 0
 6491 0556 0146     		mov	r1, r0
 6492 0558 3248     		ldr	r0, .L566+28
 6493              	.LVL842:
 6494 055a FFF7FEFF 		bl	printf
 6495              	.LVL843:
2180:TP2824/TP2802.c ****                         printf("AHD 1080P30/P25  mode:%d\r\n", (tWord)mode[i]);
 6496              		.loc 1 2180 0
 6497 055e 2A4B     		ldr	r3, .L566
 6498 0560 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6499 0562 8B1E     		subs	r3, r1, #2
 6500 0564 DBB2     		uxtb	r3, r3
 6501 0566 012B     		cmp	r3, #1
 6502 0568 24D9     		bls	.L548
 6503              	.L477:
2182:TP2824/TP2802.c ****                         printf("TVI 1080P30/P25   mode:%d\r\n", (tWord)mode[i]);
 6504              		.loc 1 2182 0
 6505 056a 012B     		cmp	r3, #1
 6506 056c 29D9     		bls	.L549
 6507              	.L478:
2184:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6508              		.loc 1 2184 0
 6509 056e 0B1F     		subs	r3, r1, #4
 6510 0570 DBB2     		uxtb	r3, r3
 6511 0572 012B     		cmp	r3, #1
 6512 0574 06D9     		bls	.L479
2184:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6513              		.loc 1 2184 0 is_stmt 0 discriminator 2
 6514 0576 0C29     		cmp	r1, #12
 6515 0578 04D0     		beq	.L479
2184:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6516              		.loc 1 2184 0 discriminator 4
 6517 057a 0D29     		cmp	r1, #13
 6518 057c 02D0     		beq	.L479
2184:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6519              		.loc 1 2184 0 discriminator 6
 6520 057e 09B1     		cbz	r1, .L479
2184:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6521              		.loc 1 2184 0 discriminator 8
 6522 0580 0129     		cmp	r1, #1
 6523 0582 06D1     		bne	.L480
 6524              	.L479:
2184:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6525              		.loc 1 2184 0 discriminator 9
 6526 0584 16F0040F 		tst	r6, #4
 6527 0588 03D1     		bne	.L480
2185:TP2824/TP2802.c ****                         printf("AHD 720P30/P25/P60/P50   mode:%d\r\n", (tWord)mode[i]);
 6528              		.loc 1 2185 0 is_stmt 1
 6529 058a 224B     		ldr	r3, .L566+12
ARM GAS  /tmp/ccFyOsmB.s 			page 204


 6530 058c 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6531 058e 012B     		cmp	r3, #1
 6532 0590 22D0     		beq	.L550
 6533              	.L480:
2187:TP2824/TP2802.c ****                              printf("CVBS    mode:%d\r\n", (tWord)mode[i]);
 6534              		.loc 1 2187 0
 6535 0592 A1F10803 		sub	r3, r1, #8
 6536 0596 DBB2     		uxtb	r3, r3
 6537 0598 012B     		cmp	r3, #1
 6538 059a 21D9     		bls	.L551
2190:TP2824/TP2802.c ****                     {
 6539              		.loc 1 2190 0
 6540 059c 16F0010F 		tst	r6, #1
 6541 05a0 3FF48AAD 		beq	.L449
2193:TP2824/TP2802.c ****                         printf("back to T ch%02x\r\n", (tWord)i); //chunyu
 6542              		.loc 1 2193 0
 6543 05a4 2046     		mov	r0, r4
 6544 05a6 FFF7FEFF 		bl	Set_VidRes
 6545              	.LVL844:
2194:TP2824/TP2802.c ****                     }
 6546              		.loc 1 2194 0
 6547 05aa 2946     		mov	r1, r5
 6548 05ac 2148     		ldr	r0, .L566+44
 6549 05ae FFF7FEFF 		bl	printf
 6550              	.LVL845:
 6551 05b2 81E5     		b	.L449
 6552              	.L548:
2180:TP2824/TP2802.c ****                         printf("AHD 1080P30/P25  mode:%d\r\n", (tWord)mode[i]);
 6553              		.loc 1 2180 0 discriminator 1
 6554 05b4 16F0040F 		tst	r6, #4
 6555 05b8 D7D1     		bne	.L477
2181:TP2824/TP2802.c **** 		      else if((mode[i] == R1080P30 || mode[i] == R1080P25) && 0x04 == (0x04 & tmp) && std[i] == T
 6556              		.loc 1 2181 0
 6557 05ba 1F48     		ldr	r0, .L566+48
 6558 05bc FFF7FEFF 		bl	printf
 6559              	.LVL846:
 6560 05c0 7AE5     		b	.L449
 6561              	.L549:
2182:TP2824/TP2802.c ****                         printf("TVI 1080P30/P25   mode:%d\r\n", (tWord)mode[i]);
 6562              		.loc 1 2182 0 discriminator 1
 6563 05c2 16F0040F 		tst	r6, #4
 6564 05c6 D2D0     		beq	.L478
2182:TP2824/TP2802.c ****                         printf("TVI 1080P30/P25   mode:%d\r\n", (tWord)mode[i]);
 6565              		.loc 1 2182 0 is_stmt 0 discriminator 2
 6566 05c8 124B     		ldr	r3, .L566+12
 6567 05ca 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6568 05cc 002B     		cmp	r3, #0
 6569 05ce CED1     		bne	.L478
2183:TP2824/TP2802.c **** 		      else if((mode[i] == R720P30 || mode[i] == R720P25 || mode[i] == R720P30V2 || mode[i] == R72
 6570              		.loc 1 2183 0 is_stmt 1
 6571 05d0 1A48     		ldr	r0, .L566+52
 6572 05d2 FFF7FEFF 		bl	printf
 6573              	.LVL847:
 6574 05d6 6FE5     		b	.L449
 6575              	.L550:
2186:TP2824/TP2802.c **** 		      else if(mode[i] == NTSC || mode[i] == PAL)
 6576              		.loc 1 2186 0
ARM GAS  /tmp/ccFyOsmB.s 			page 205


 6577 05d8 1948     		ldr	r0, .L566+56
 6578 05da FFF7FEFF 		bl	printf
 6579              	.LVL848:
 6580 05de 6BE5     		b	.L449
 6581              	.L551:
2188:TP2824/TP2802.c **** //		      if( 0x00 != (0x01 & tmp))
 6582              		.loc 1 2188 0
 6583 05e0 1848     		ldr	r0, .L566+60
 6584 05e2 FFF7FEFF 		bl	printf
 6585              	.LVL849:
 6586 05e6 67E5     		b	.L449
 6587              	.L538:
2200:TP2824/TP2802.c ****                 egain[i][2] = egain[i][1];
 6588              		.loc 1 2200 0
 6589 05e8 174E     		ldr	r6, .L566+64
 6590 05ea 06EB8503 		add	r3, r6, r5, lsl #2
 6591 05ee 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 6592 05f0 DA70     		strb	r2, [r3, #3]
2201:TP2824/TP2802.c ****                 egain[i][1] = egain[i][0];
 6593              		.loc 1 2201 0
 6594 05f2 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 6595 05f4 9A70     		strb	r2, [r3, #2]
2202:TP2824/TP2802.c **** 
 6596              		.loc 1 2202 0
 6597 05f6 16F82520 		ldrb	r2, [r6, r5, lsl #2]	@ zero_extendqisi2
 6598 05fa 5A70     		strb	r2, [r3, #1]
2204:TP2824/TP2802.c ****                 egain[i][0] = gain;
 6599              		.loc 1 2204 0
 6600 05fc FFF7FEFF 		bl	ReadGain
 6601              	.LVL850:
2205:TP2824/TP2802.c ****             }
 6602              		.loc 1 2205 0
 6603 0600 06F82500 		strb	r0, [r6, r5, lsl #2]
 6604 0604 58E5     		b	.L449
 6605              	.L567:
 6606 0606 00BF     		.align	2
 6607              	.L566:
 6608 0608 00000000 		.word	mode
 6609 060c 00000000 		.word	.LANCHOR34
 6610 0610 00000000 		.word	.LANCHOR35
 6611 0614 00000000 		.word	std
 6612 0618 00000000 		.word	.LANCHOR32
 6613 061c 00000000 		.word	.LANCHOR37
 6614 0620 00000000 		.word	chip
 6615 0624 AC000000 		.word	.LC49
 6616 0628 CC000000 		.word	.LC51
 6617 062c BC000000 		.word	.LC50
 6618 0630 E0000000 		.word	.LC52
 6619 0634 64010000 		.word	.LC57
 6620 0638 F4000000 		.word	.LC53
 6621 063c 10010000 		.word	.LC54
 6622 0640 2C010000 		.word	.LC55
 6623 0644 50010000 		.word	.LC56
 6624 0648 00000000 		.word	egain
 6625              	.LVL851:
 6626              	.L539:
2209:TP2824/TP2802.c ****                 egain[i][2] = egain[i][1];
ARM GAS  /tmp/ccFyOsmB.s 			page 206


 6627              		.loc 1 2209 0
 6628 064c 864F     		ldr	r7, .L568
 6629 064e 07EB8506 		add	r6, r7, r5, lsl #2
 6630 0652 B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 6631 0654 F370     		strb	r3, [r6, #3]
2210:TP2824/TP2802.c ****                 egain[i][1] = egain[i][0];
 6632              		.loc 1 2210 0
 6633 0656 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 6634 0658 B370     		strb	r3, [r6, #2]
2211:TP2824/TP2802.c **** 
 6635              		.loc 1 2211 0
 6636 065a 17F82530 		ldrb	r3, [r7, r5, lsl #2]	@ zero_extendqisi2
 6637 065e 7370     		strb	r3, [r6, #1]
2213:TP2824/TP2802.c ****                 egain[i][0] = gain;
 6638              		.loc 1 2213 0
 6639 0660 FFF7FEFF 		bl	ReadGain
 6640              	.LVL852:
2214:TP2824/TP2802.c **** 
 6641              		.loc 1 2214 0
 6642 0664 07F82500 		strb	r0, [r7, r5, lsl #2]
2216:TP2824/TP2802.c ****                 {
 6643              		.loc 1 2216 0
 6644 0668 F378     		ldrb	r3, [r6, #3]	@ zero_extendqisi2
 6645 066a 1B1A     		subs	r3, r3, r0
 6646 066c 0133     		adds	r3, r3, #1
 6647 066e 022B     		cmp	r3, #2
 6648 0670 3FF622AD 		bhi	.L449
2216:TP2824/TP2802.c ****                 {
 6649              		.loc 1 2216 0 is_stmt 0 discriminator 1
 6650 0674 B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 6651 0676 1B1A     		subs	r3, r3, r0
 6652 0678 0133     		adds	r3, r3, #1
 6653 067a 022B     		cmp	r3, #2
 6654 067c 3FF61CAD 		bhi	.L449
2216:TP2824/TP2802.c ****                 {
 6655              		.loc 1 2216 0 discriminator 2
 6656 0680 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 6657 0682 1B1A     		subs	r3, r3, r0
 6658 0684 0133     		adds	r3, r3, #1
 6659 0686 022B     		cmp	r3, #2
 6660 0688 3FF616AD 		bhi	.L449
2218:TP2824/TP2802.c ****                 }
 6661              		.loc 1 2218 0 is_stmt 1
 6662 068c 774B     		ldr	r3, .L568+4
 6663 068e 1322     		movs	r2, #19
 6664 0690 5A55     		strb	r2, [r3, r5]
 6665 0692 11E5     		b	.L449
 6666              	.LVL853:
 6667              	.L540:
2223:TP2824/TP2802.c ****                 printf("Egain=0x%02x ch%02x,std=%d,mode=0x%02X\r\n", (tWord)gain, (tWord)i, (tWord)
 6668              		.loc 1 2223 0
 6669 0694 FFF7FEFF 		bl	ReadGain
 6670              	.LVL854:
 6671 0698 0646     		mov	r6, r0
 6672              	.LVL855:
2224:TP2824/TP2802.c **** 
 6673              		.loc 1 2224 0
ARM GAS  /tmp/ccFyOsmB.s 			page 207


 6674 069a 754B     		ldr	r3, .L568+8
 6675 069c 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6676 069e 754F     		ldr	r7, .L568+12
 6677 06a0 7A5D     		ldrb	r2, [r7, r5]	@ zero_extendqisi2
 6678 06a2 0092     		str	r2, [sp]
 6679 06a4 2A46     		mov	r2, r5
 6680 06a6 0146     		mov	r1, r0
 6681 06a8 7348     		ldr	r0, .L568+16
 6682              	.LVL856:
 6683 06aa FFF7FEFF 		bl	printf
 6684              	.LVL857:
2226:TP2824/TP2802.c ****                 {
 6685              		.loc 1 2226 0
 6686 06ae 7B5D     		ldrb	r3, [r7, r5]	@ zero_extendqisi2
 6687 06b0 9A1E     		subs	r2, r3, #2
 6688 06b2 D2B2     		uxtb	r2, r2
 6689 06b4 012A     		cmp	r2, #1
 6690 06b6 12D9     		bls	.L552
2230:TP2824/TP2802.c ****                 {
 6691              		.loc 1 2230 0
 6692 06b8 012B     		cmp	r3, #1
 6693 06ba 3CD9     		bls	.L553
2234:TP2824/TP2802.c ****                 {
 6694              		.loc 1 2234 0
 6695 06bc 1A1F     		subs	r2, r3, #4
 6696 06be D2B2     		uxtb	r2, r2
 6697 06c0 012A     		cmp	r2, #1
 6698 06c2 3CD9     		bls	.L554
2238:TP2824/TP2802.c ****                 {
 6699              		.loc 1 2238 0
 6700 06c4 A3F10C02 		sub	r2, r3, #12
 6701 06c8 D2B2     		uxtb	r2, r2
 6702 06ca 012A     		cmp	r2, #1
 6703 06cc 3BD9     		bls	.L555
2242:TP2824/TP2802.c ****                 {
 6704              		.loc 1 2242 0
 6705 06ce 082B     		cmp	r3, #8
 6706 06d0 3DD0     		beq	.L556
2246:TP2824/TP2802.c ****                 {
 6707              		.loc 1 2246 0
 6708 06d2 092B     		cmp	r3, #9
 6709 06d4 3FD1     		bne	.L491
2248:TP2824/TP2802.c ****                 }
 6710              		.loc 1 2248 0
 6711 06d6 694B     		ldr	r3, .L568+20
 6712 06d8 0122     		movs	r2, #1
 6713 06da 5A55     		strb	r2, [r3, r5]
 6714 06dc 02E0     		b	.L486
 6715              	.L552:
2228:TP2824/TP2802.c ****                 }
 6716              		.loc 1 2228 0
 6717 06de 674B     		ldr	r3, .L568+20
 6718 06e0 0622     		movs	r2, #6
 6719 06e2 5A55     		strb	r2, [r3, r5]
 6720              	.L486:
2255:TP2824/TP2802.c **** 				   if(SelectInputMode==1)
 6721              		.loc 1 2255 0
ARM GAS  /tmp/ccFyOsmB.s 			page 208


 6722 06e4 654B     		ldr	r3, .L568+20
 6723 06e6 5A5D     		ldrb	r2, [r3, r5]	@ zero_extendqisi2
 6724 06e8 654B     		ldr	r3, .L568+24
 6725 06ea 1A70     		strb	r2, [r3]
2256:TP2824/TP2802.c **** 					   {
 6726              		.loc 1 2256 0
 6727 06ec 654B     		ldr	r3, .L568+28
 6728 06ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6729 06f0 012B     		cmp	r3, #1
 6730 06f2 34D0     		beq	.L557
 6731              	.L492:
2262:TP2824/TP2802.c ****                 {
 6732              		.loc 1 2262 0
 6733 06f4 614B     		ldr	r3, .L568+20
 6734 06f6 5A5D     		ldrb	r2, [r3, r5]	@ zero_extendqisi2
 6735 06f8 634B     		ldr	r3, .L568+32
 6736 06fa 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6737 06fc 9A42     		cmp	r2, r3
 6738 06fe 05D0     		beq	.L493
2279:TP2824/TP2802.c **** 
 6739              		.loc 1 2279 0
 6740 0700 624B     		ldr	r3, .L568+36
 6741 0702 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6742 0704 2946     		mov	r1, r5
 6743 0706 6248     		ldr	r0, .L568+40
 6744 0708 FFF7FEFF 		bl	printf
 6745              	.LVL858:
 6746              	.L493:
2317:TP2824/TP2802.c ****                 {
 6747              		.loc 1 2317 0
 6748 070c 584B     		ldr	r3, .L568+8
 6749 070e 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6750 0710 5BBB     		cbnz	r3, .L558
2331:TP2824/TP2802.c ****                     {
 6751              		.loc 1 2331 0
 6752 0712 604B     		ldr	r3, .L568+44
 6753 0714 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6754 0716 243B     		subs	r3, r3, #36
 6755 0718 DBB2     		uxtb	r3, r3
 6756 071a 012B     		cmp	r3, #1
 6757 071c 38D9     		bls	.L559
 6758              	.L496:
2338:TP2824/TP2802.c **** 			  	printf("CVBS NTSC   mode\r\n");
 6759              		.loc 1 2338 0
 6760 071e 554B     		ldr	r3, .L568+12
 6761 0720 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6762 0722 082B     		cmp	r3, #8
 6763 0724 43D0     		beq	.L560
2340:TP2824/TP2802.c **** 			  	printf("CVBS PAL   mode\r\n");
 6764              		.loc 1 2340 0
 6765 0726 092B     		cmp	r3, #9
 6766 0728 45D0     		beq	.L561
2343:TP2824/TP2802.c ****                     //gRxLoopFlg = 0 ;
 6767              		.loc 1 2343 0
 6768 072a 40F62711 		movw	r1, #2343
 6769 072e 5A48     		ldr	r0, .L568+48
 6770 0730 FFF7FEFF 		bl	printf
ARM GAS  /tmp/ccFyOsmB.s 			page 209


 6771              	.LVL859:
 6772 0734 C0E4     		b	.L449
 6773              	.L553:
2232:TP2824/TP2802.c ****                 }
 6774              		.loc 1 2232 0
 6775 0736 514B     		ldr	r3, .L568+20
 6776 0738 0522     		movs	r2, #5
 6777 073a 5A55     		strb	r2, [r3, r5]
 6778 073c D2E7     		b	.L486
 6779              	.L554:
2236:TP2824/TP2802.c ****                 }
 6780              		.loc 1 2236 0
 6781 073e 4F4B     		ldr	r3, .L568+20
 6782 0740 0522     		movs	r2, #5
 6783 0742 5A55     		strb	r2, [r3, r5]
 6784 0744 CEE7     		b	.L486
 6785              	.L555:
2240:TP2824/TP2802.c ****                 }
 6786              		.loc 1 2240 0
 6787 0746 4D4B     		ldr	r3, .L568+20
 6788 0748 0522     		movs	r2, #5
 6789 074a 5A55     		strb	r2, [r3, r5]
 6790 074c CAE7     		b	.L486
 6791              	.L556:
2244:TP2824/TP2802.c ****                 }
 6792              		.loc 1 2244 0
 6793 074e 4B4B     		ldr	r3, .L568+20
 6794 0750 0022     		movs	r2, #0
 6795 0752 5A55     		strb	r2, [r3, r5]
 6796 0754 C6E7     		b	.L486
 6797              	.L491:
2252:TP2824/TP2802.c ****                 }
 6798              		.loc 1 2252 0
 6799 0756 494B     		ldr	r3, .L568+20
 6800 0758 1422     		movs	r2, #20
 6801 075a 5A55     		strb	r2, [r3, r5]
 6802 075c C2E7     		b	.L486
 6803              	.L557:
2258:TP2824/TP2802.c **** 				   //MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);
 6804              		.loc 1 2258 0
 6805 075e 4021     		movs	r1, #64
 6806 0760 4FF47A70 		mov	r0, #1000
 6807 0764 FFF7FEFF 		bl	MCUTimerActiveTimerEvent
 6808              	.LVL860:
 6809 0768 C4E7     		b	.L492
 6810              	.L558:
2319:TP2824/TP2802.c ****                     if (std[i]== HDA )
 6811              		.loc 1 2319 0
 6812 076a B108     		lsrs	r1, r6, #2
 6813 076c 61F07F01 		orn	r1, r1, #127
 6814 0770 C9B2     		uxtb	r1, r1
 6815 0772 0720     		movs	r0, #7
 6816 0774 FFF7FEFF 		bl	tp28xx_byte_write
 6817              	.LVL861:
2320:TP2824/TP2802.c ****                     {
 6818              		.loc 1 2320 0
 6819 0778 3D4B     		ldr	r3, .L568+8
ARM GAS  /tmp/ccFyOsmB.s 			page 210


 6820 077a 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6821 077c 012B     		cmp	r3, #1
 6822 077e 03D0     		beq	.L562
2326:TP2824/TP2802.c ****                     }
 6823              		.loc 1 2326 0
 6824 0780 4648     		ldr	r0, .L568+52
 6825 0782 FFF7FEFF 		bl	puts
 6826              	.LVL862:
 6827 0786 97E4     		b	.L449
 6828              	.L562:
2322:TP2824/TP2802.c ****                     }
 6829              		.loc 1 2322 0
 6830 0788 4548     		ldr	r0, .L568+56
 6831 078a FFF7FEFF 		bl	puts
 6832              	.LVL863:
 6833 078e 93E4     		b	.L449
 6834              	.L559:
2333:TP2824/TP2802.c ****                         {
 6835              		.loc 1 2333 0
 6836 0790 384B     		ldr	r3, .L568+12
 6837 0792 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6838 0794 13F0200F 		tst	r3, #32
 6839 0798 C1D0     		beq	.L496
2335:TP2824/TP2802.c ****                         }
 6840              		.loc 1 2335 0
 6841 079a 0321     		movs	r1, #3
 6842 079c B6FBF1F1 		udiv	r1, r6, r1
 6843 07a0 61F07F01 		orn	r1, r1, #127
 6844 07a4 C9B2     		uxtb	r1, r1
 6845 07a6 0720     		movs	r0, #7
 6846 07a8 FFF7FEFF 		bl	tp28xx_byte_write
 6847              	.LVL864:
 6848 07ac B7E7     		b	.L496
 6849              	.L560:
2339:TP2824/TP2802.c **** 		      else if(mode[i] == PAL) //20200408 cvbs night no burst
 6850              		.loc 1 2339 0
 6851 07ae 3D48     		ldr	r0, .L568+60
 6852 07b0 FFF7FEFF 		bl	puts
 6853              	.LVL865:
 6854 07b4 80E4     		b	.L449
 6855              	.L561:
2341:TP2824/TP2802.c **** 		      else
 6856              		.loc 1 2341 0
 6857 07b6 3C48     		ldr	r0, .L568+64
 6858 07b8 FFF7FEFF 		bl	puts
 6859              	.LVL866:
 6860 07bc 7CE4     		b	.L449
 6861              	.L541:
2349:TP2824/TP2802.c ****                 {
 6862              		.loc 1 2349 0
 6863 07be 2C4B     		ldr	r3, .L568+8
 6864 07c0 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6865 07c2 83B9     		cbnz	r3, .L563
2356:TP2824/TP2802.c ****                     {
 6866              		.loc 1 2356 0
 6867 07c4 334B     		ldr	r3, .L568+44
 6868 07c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccFyOsmB.s 			page 211


 6869 07c8 243B     		subs	r3, r3, #36
 6870 07ca DBB2     		uxtb	r3, r3
 6871 07cc 012B     		cmp	r3, #1
 6872 07ce 3FF673AC 		bhi	.L449
2358:TP2824/TP2802.c ****                         {
 6873              		.loc 1 2358 0
 6874 07d2 284B     		ldr	r3, .L568+12
 6875 07d4 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6876 07d6 13F0200F 		tst	r3, #32
 6877 07da 3FF46DAC 		beq	.L449
2360:TP2824/TP2802.c ****                         }
 6878              		.loc 1 2360 0
 6879 07de 1620     		movs	r0, #22
 6880 07e0 FFF7FEFF 		bl	SetCGain
 6881              	.LVL867:
 6882 07e4 68E4     		b	.L449
 6883              	.L563:
2351:TP2824/TP2802.c ****                     SetCGain(0x0c);
 6884              		.loc 1 2351 0
 6885 07e6 2046     		mov	r0, r4
 6886 07e8 FFF7FEFF 		bl	ManualAGC
 6887              	.LVL868:
2352:TP2824/TP2802.c ****                 }
 6888              		.loc 1 2352 0
 6889 07ec 0C20     		movs	r0, #12
 6890 07ee FFF7FEFF 		bl	SetCGain
 6891              	.LVL869:
 6892 07f2 61E4     		b	.L449
 6893              	.L542:
 6894              	.LBB6:
2374:TP2824/TP2802.c **** 					}
 6895              		.loc 1 2374 0
 6896 07f4 2D48     		ldr	r0, .L568+68
 6897 07f6 CCE5     		b	.L502
 6898              	.L543:
2385:TP2824/TP2802.c **** 					}
 6899              		.loc 1 2385 0
 6900 07f8 1921     		movs	r1, #25
 6901 07fa C620     		movs	r0, #198
 6902 07fc FFF7FEFF 		bl	tp28xx_byte_write
 6903              	.LVL870:
 6904 0800 D0E5     		b	.L503
 6905              	.L544:
2402:TP2824/TP2802.c **** 						printf("EQdet %d\r\n",  PtzTxChNum);
 6906              		.loc 1 2402 0
 6907 0802 2B4B     		ldr	r3, .L568+72
 6908 0804 1C70     		strb	r4, [r3]
2403:TP2824/TP2802.c **** 					}
 6909              		.loc 1 2403 0
 6910 0806 2946     		mov	r1, r5
 6911 0808 2A48     		ldr	r0, .L568+76
 6912 080a FFF7FEFF 		bl	printf
 6913              	.LVL871:
 6914 080e ECE5     		b	.L501
 6915              	.L545:
2412:TP2824/TP2802.c **** 						//#else
 6916              		.loc 1 2412 0
ARM GAS  /tmp/ccFyOsmB.s 			page 212


 6917 0810 FFF7FEFF 		bl	Init_COC_PTZOUT1
 6918              	.LVL872:
2415:TP2824/TP2802.c **** 					
 6919              		.loc 1 2415 0
 6920 0814 2848     		ldr	r0, .L568+80
 6921 0816 FFF7FEFF 		bl	I2CDeviceSet1
 6922              	.LVL873:
2417:TP2824/TP2802.c **** 							tp28xx_byte_write(0x40,0x04);
 6923              		.loc 1 2417 0
 6924 081a 2146     		mov	r1, r4
 6925 081c 4020     		movs	r0, #64
 6926 081e FFF7FEFF 		bl	tp28xx_byte_write
 6927              	.LVL874:
2418:TP2824/TP2802.c **** 						tp28xx_byte_write(0xbe, 0x80);
 6928              		.loc 1 2418 0
 6929 0822 0421     		movs	r1, #4
 6930 0824 4020     		movs	r0, #64
 6931 0826 FFF7FEFF 		bl	tp28xx_byte_write
 6932              	.LVL875:
2419:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB6);
 6933              		.loc 1 2419 0
 6934 082a 8021     		movs	r1, #128
 6935 082c BE20     		movs	r0, #190
 6936 082e FFF7FEFF 		bl	tp28xx_byte_write
 6937              	.LVL876:
2420:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB5);
 6938              		.loc 1 2420 0
 6939 0832 B620     		movs	r0, #182
 6940 0834 FFF7FEFF 		bl	tp28xx_byte_read
 6941              	.LVL877:
2421:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB4);
 6942              		.loc 1 2421 0
 6943 0838 B520     		movs	r0, #181
 6944 083a FFF7FEFF 		bl	tp28xx_byte_read
 6945              	.LVL878:
2422:TP2824/TP2802.c **** 
 6946              		.loc 1 2422 0
 6947 083e B420     		movs	r0, #180
 6948 0840 FFF7FEFF 		bl	tp28xx_byte_read
 6949              	.LVL879:
2425:TP2824/TP2802.c **** 						delay(1);//5ms
 6950              		.loc 1 2425 0
 6951 0844 2421     		movs	r1, #36
 6952 0846 A720     		movs	r0, #167
 6953 0848 FFF7FEFF 		bl	tp28xx_byte_write
 6954              	.LVL880:
2426:TP2824/TP2802.c **** 						tp28xx_byte_write(0xa7, 0xA7);
 6955              		.loc 1 2426 0
 6956 084c 0120     		movs	r0, #1
 6957 084e FFF7FEFF 		bl	delay
 6958              	.LVL881:
2427:TP2824/TP2802.c **** 						#endif
 6959              		.loc 1 2427 0
 6960 0852 A721     		movs	r1, #167
 6961 0854 0846     		mov	r0, r1
 6962 0856 FFF7FEFF 		bl	tp28xx_byte_write
 6963              	.LVL882:
ARM GAS  /tmp/ccFyOsmB.s 			page 213


2440:TP2824/TP2802.c **** 				}
 6964              		.loc 1 2440 0
 6965 085a 154B     		ldr	r3, .L568+72
 6966 085c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6967 085e 1748     		ldr	r0, .L568+84
 6968 0860 FFF7FEFF 		bl	printf
 6969              	.LVL883:
 6970 0864 C6E5     		b	.L504
 6971              	.L569:
 6972 0866 00BF     		.align	2
 6973              	.L568:
 6974 0868 00000000 		.word	egain
 6975 086c 00000000 		.word	count
 6976 0870 00000000 		.word	std
 6977 0874 00000000 		.word	mode
 6978 0878 78010000 		.word	.LC58
 6979 087c 00000000 		.word	.LANCHOR23
 6980 0880 00000000 		.word	.LANCHOR22
 6981 0884 00000000 		.word	SelectInputMode
 6982 0888 00000000 		.word	gbVXIS_InputMode
 6983 088c 00000000 		.word	gbVXIS_OuputModeflg
 6984 0890 A4010000 		.word	.LC59
 6985 0894 00000000 		.word	chip
 6986 0898 24020000 		.word	.LC64
 6987 089c F0010000 		.word	.LC61
 6988 08a0 E4010000 		.word	.LC60
 6989 08a4 FC010000 		.word	.LC62
 6990 08a8 10020000 		.word	.LC63
 6991 08ac 00000000 		.word	.LANCHOR31
 6992 08b0 00000000 		.word	.LANCHOR25
 6993 08b4 38020000 		.word	.LC65
 6994 08b8 00000000 		.word	.LANCHOR36
 6995 08bc 44020000 		.word	.LC66
 6996              	.LBE6:
 6997              		.cfi_endproc
 6998              	.LFE85:
 7000              		.section	.text.Set_Mirror_COC,"ax",%progbits
 7001              		.align	1
 7002              		.global	Set_Mirror_COC
 7003              		.syntax unified
 7004              		.thumb
 7005              		.thumb_func
 7006              		.fpu softvfp
 7008              	Set_Mirror_COC:
 7009              	.LFB107:
4290:TP2824/TP2802.c **** 
4291:TP2824/TP2802.c **** void Set_Mirror_COC(void)
4292:TP2824/TP2802.c **** {
 7010              		.loc 1 4292 0
 7011              		.cfi_startproc
 7012              		@ args = 0, pretend = 0, frame = 0
 7013              		@ frame_needed = 0, uses_anonymous_args = 0
 7014 0000 08B5     		push	{r3, lr}
 7015              	.LCFI46:
 7016              		.cfi_def_cfa_offset 8
 7017              		.cfi_offset 3, -8
 7018              		.cfi_offset 14, -4
ARM GAS  /tmp/ccFyOsmB.s 			page 214


4293:TP2824/TP2802.c **** #if 0
4294:TP2824/TP2802.c **** VXISI2CWrite(0x40,0x04);
4295:TP2824/TP2802.c **** VXISI2CWrite(0x56,0x02);
4296:TP2824/TP2802.c **** VXISI2CWrite(0x57,0x00);
4297:TP2824/TP2802.c **** VXISI2CWrite(0x58,0x3C);
4298:TP2824/TP2802.c **** VXISI2CWrite(0x59,0x89);
4299:TP2824/TP2802.c **** VXISI2CWrite(0x5a,0x9A);
4300:TP2824/TP2802.c **** 
4301:TP2824/TP2802.c **** VXISI2CWrite(0x5c,0x02);
4302:TP2824/TP2802.c **** VXISI2CWrite(0x5d,0x02);
4303:TP2824/TP2802.c **** VXISI2CWrite(0x5e,0x00);
4304:TP2824/TP2802.c **** VXISI2CWrite(0x5f,0x3E);
4305:TP2824/TP2802.c **** VXISI2CWrite(0x60,0x9F);
4306:TP2824/TP2802.c **** #endif
4307:TP2824/TP2802.c **** VXISI2CWrite(0x6f,0x43);
 7019              		.loc 1 4307 0
 7020 0002 4321     		movs	r1, #67
 7021 0004 6F20     		movs	r0, #111
 7022 0006 FFF7FEFF 		bl	VXISI2CWrite
 7023              	.LVL884:
4308:TP2824/TP2802.c **** delay(5);//50ms
 7024              		.loc 1 4308 0
 7025 000a 0520     		movs	r0, #5
 7026 000c FFF7FEFF 		bl	delay
 7027              	.LVL885:
4309:TP2824/TP2802.c **** VXISI2CWrite(0x6f,0x42);
 7028              		.loc 1 4309 0
 7029 0010 4221     		movs	r1, #66
 7030 0012 6F20     		movs	r0, #111
 7031 0014 FFF7FEFF 		bl	VXISI2CWrite
 7032              	.LVL886:
4310:TP2824/TP2802.c **** }
 7033              		.loc 1 4310 0
 7034 0018 08BD     		pop	{r3, pc}
 7035              		.cfi_endproc
 7036              	.LFE107:
 7038              		.global	TP2802_FORMAT_DataSet
 7039              		.global	TP2824C_CVIHD_PTZ_DataSet
 7040              		.global	TP2824C_CVBS_PTZ_DataSet
 7041              		.global	TP2824C_AHD_FHD_PTZ_DataSet
 7042              		.global	TP2824C_TVI_FHD_PTZ_DataSet
 7043              		.global	TP2802D_DataSet
 7044              		.global	TP2822_DataSet
 7045              		.global	TP2823_MODE_DataSet
 7046              		.global	TP2823_DataSet
 7047              		.global	TP2834_MODE_DataSet
 7048              		.global	TP2834_DataSet
 7049              		.global	TP2833_HDA_DataSet
 7050              		.global	TP2833_MODE_DataSet
 7051              		.global	TP2833_DataSet
 7052              		.global	TP2834_Audio_DataSet
 7053              		.global	TP2853C_HDC_DataSet
 7054              		.global	TP2853C_HDA_DataSet
 7055              		.global	TP2853C_MODE_DataSet
 7056              		.global	TP2853C_DataSet
 7057              		.global	TP2824C_HDC_DataSet
 7058              		.global	TP2826_HDC_DataSet
ARM GAS  /tmp/ccFyOsmB.s 			page 215


 7059              		.global	TP2824C_HDA_DataSet
 7060              		.global	TP2826_HDA_DataSet
 7061              		.global	TP2824C_MODE_DataSet
 7062              		.global	TP2826_MODE_DataSet
 7063              		.global	TP2826_DataSet
 7064              		.global	TP2824C_DataSet
 7065              		.global	QuadBoxMode
 7066              		.global	QuadBoxId
 7067              		.global	PtzTxChNum
 7068              		.global	PreCOCSelectModeType
 7069              		.global	COCSelectModeType
 7070              		.global	Flisheye_VLOSS_Count
 7071              		.global	TP_InputMode
 7072              		.comm	Flisheye_COC,1,1
 7073              		.global	Flisheye_CAM
 7074              		.comm	ptztxflag,4,4
 7075              		.comm	TVI_speed,1,1
 7076              		.comm	TVI_Chksum,1,1
 7077              		.comm	presetNum,1,1
 7078              		.comm	TVI_Command,1,1
 7079              		.comm	AHDcmd4,1,1
 7080              		.comm	AHDcmd3,1,1
 7081              		.comm	AHDcmd2,1,1
 7082              		.comm	AHDcmd1,1,1
 7083              		.comm	COCRX4,12,4
 7084              		.comm	COCRX3,12,4
 7085              		.comm	COCRX2,12,4
 7086              		.comm	COCRX1,12,4
 7087              		.comm	tpRxD,26,4
 7088              		.global	REG_FA
 7089              		.global	REG_F7
 7090              		.global	REG_F6
 7091              		.global	SYS_AND
 7092              		.global	SYS_MODE
 7093              		.comm	flag_MEGA,4,4
 7094              		.comm	flag_AUDIO,4,4
 7095              		.comm	flag_CVBS,4,4
 7096              		.comm	sywd,4,4
 7097              		.comm	crc,1,1
 7098              		.comm	CurCH,1,1
 7099              		.comm	CurRes,1,1
 7100              		.comm	PTZ_pelco,2,2
 7101              		.comm	PTZ_buf,16,4
 7102              		.comm	TVII2CAddress,1,1
 7103              		.comm	flag_LOCKED,1,1
 7104              		.comm	chip,1,1
 7105              		.comm	revision,1,1
 7106              		.comm	VideoSave,1,4
 7107              		.comm	egain,4,4
 7108              		.comm	std,1,4
 7109              		.comm	mode,1,4
 7110              		.comm	count,1,4
 7111              		.comm	state,1,4
 7112              		.comm	ManVidResRx,1,1
 7113              		.global	newInRes
 7114              		.section	.bss.Flisheye_CAM,"aw",%nobits
 7115              		.align	2
ARM GAS  /tmp/ccFyOsmB.s 			page 216


 7118              	Flisheye_CAM:
 7119 0000 00000000 		.space	4
 7120              		.section	.bss.Flisheye_VLOSS_Count,"aw",%nobits
 7121              		.align	2
 7124              	Flisheye_VLOSS_Count:
 7125 0000 00000000 		.space	16
 7125      00000000 
 7125      00000000 
 7125      00000000 
 7126              		.section	.bss.PtzTxChNum,"aw",%nobits
 7127              		.set	.LANCHOR25,. + 0
 7130              	PtzTxChNum:
 7131 0000 00       		.space	1
 7132              		.section	.bss.QuadBoxId,"aw",%nobits
 7133              		.set	.LANCHOR24,. + 0
 7136              	QuadBoxId:
 7137 0000 00       		.space	1
 7138              		.section	.bss.QuadBoxMode,"aw",%nobits
 7141              	QuadBoxMode:
 7142 0000 00       		.space	1
 7143              		.section	.data.COCSelectModeType,"aw",%progbits
 7144              		.align	2
 7147              	COCSelectModeType:
 7148 0000 05       		.byte	5
 7149 0001 05       		.byte	5
 7150 0002 05       		.byte	5
 7151 0003 05       		.byte	5
 7152              		.section	.data.PreCOCSelectModeType,"aw",%progbits
 7153              		.align	2
 7156              	PreCOCSelectModeType:
 7157 0000 05       		.byte	5
 7158 0001 05       		.byte	5
 7159 0002 05       		.byte	5
 7160 0003 05       		.byte	5
 7161              		.section	.data.TP_InputMode,"aw",%progbits
 7162              		.set	.LANCHOR22,. + 0
 7165              	TP_InputMode:
 7166 0000 07       		.byte	7
 7167              		.section	.data.newInRes,"aw",%progbits
 7168              		.align	2
 7169              		.set	.LANCHOR23,. + 0
 7172              	newInRes:
 7173 0000 07       		.byte	7
 7174 0001 07       		.byte	7
 7175 0002 07       		.byte	7
 7176 0003 07       		.byte	7
 7177              		.section	.rodata.Det_VidRes.str1.4,"aMS",%progbits,1
 7178              		.align	2
 7179              	.LC20:
 7180 0000 0D0A4E2F 		.ascii	"\015\012N/P detected\000"
 7180      50206465 
 7180      74656374 
 7180      656400
 7181 000f 00       		.space	1
 7182              	.LC21:
 7183 0010 0D0A4E6F 		.ascii	"\015\012No res detect...\000"
 7183      20726573 
ARM GAS  /tmp/ccFyOsmB.s 			page 217


 7183      20646574 
 7183      6563742E 
 7183      2E2E00
 7184              		.section	.rodata.Det_VideoLoss.str1.4,"aMS",%progbits,1
 7185              		.align	2
 7186              	.LC22:
 7187 0000 4E6F2000 		.ascii	"No \000"
 7188              	.LC23:
 7189 0004 76696465 		.ascii	"video detected\000"
 7189      6F206465 
 7189      74656374 
 7189      656400
 7190              		.section	.rodata.EQ_Detect.str1.4,"aMS",%progbits,1
 7191              		.align	2
 7192              	.LC42:
 7193 0000 31766964 		.ascii	"1video in ch%02x \015\012\000"
 7193      656F2069 
 7193      6E206368 
 7193      25303278 
 7193      200D0A00 
 7194              	.LC43:
 7195 0014 76696465 		.ascii	"video locked ch%02x \015\012\000"
 7195      6F206C6F 
 7195      636B6564 
 7195      20636825 
 7195      30327820 
 7196 002b 00       		.space	1
 7197              	.LC44:
 7198 002c 76696465 		.ascii	"video in ch%02x \015\012\000"
 7198      6F20696E 
 7198      20636825 
 7198      30327820 
 7198      0D0A00
 7199 003f 00       		.space	1
 7200              	.LC45:
 7201 0040 76696465 		.ascii	"video unstable ch%02x \015\012\000"
 7201      6F20756E 
 7201      73746162 
 7201      6C652063 
 7201      68253032 
 7202 0059 000000   		.space	3
 7203              	.LC46:
 7204 005c 76696465 		.ascii	"video unlocked ch%02x \015\012\000"
 7204      6F20756E 
 7204      6C6F636B 
 7204      65642063 
 7204      68253032 
 7205 0075 000000   		.space	3
 7206              	.LC47:
 7207 0078 5365745F 		.ascii	"Set_VidResmode[%d] =%d\015\012\000"
 7207      56696452 
 7207      65736D6F 
 7207      64655B25 
 7207      645D203D 
 7208 0091 000000   		.space	3
 7209              	.LC48:
 7210 0094 4D616E56 		.ascii	"ManVidResRx=0x%02x\015\012\000"
ARM GAS  /tmp/ccFyOsmB.s 			page 218


 7210      69645265 
 7210      7352783D 
 7210      30782530 
 7210      32780D0A 
 7211 00a9 000000   		.space	3
 7212              	.LC49:
 7213 00ac 52656730 		.ascii	"Reg01 %02x\015\012\000"
 7213      31202530 
 7213      32780D0A 
 7213      00
 7214 00b9 000000   		.space	3
 7215              	.LC50:
 7216 00bc 43564253 		.ascii	"CVBS  mode:%d\015\012\000"
 7216      20206D6F 
 7216      64653A25 
 7216      640D0A00 
 7217              	.LC51:
 7218 00cc 7475726E 		.ascii	"turn to C ch%02x\015\012\000"
 7218      20746F20 
 7218      43206368 
 7218      25303278 
 7218      0D0A00
 7219 00df 00       		.space	1
 7220              	.LC52:
 7221 00e0 7475726E 		.ascii	"turn to A ch%02x\015\012\000"
 7221      20746F20 
 7221      41206368 
 7221      25303278 
 7221      0D0A00
 7222 00f3 00       		.space	1
 7223              	.LC53:
 7224 00f4 41484420 		.ascii	"AHD 1080P30/P25  mode:%d\015\012\000"
 7224      31303830 
 7224      5033302F 
 7224      50323520 
 7224      206D6F64 
 7225 010f 00       		.space	1
 7226              	.LC54:
 7227 0110 54564920 		.ascii	"TVI 1080P30/P25   mode:%d\015\012\000"
 7227      31303830 
 7227      5033302F 
 7227      50323520 
 7227      20206D6F 
 7228              	.LC55:
 7229 012c 41484420 		.ascii	"AHD 720P30/P25/P60/P50   mode:%d\015\012\000"
 7229      37323050 
 7229      33302F50 
 7229      32352F50 
 7229      36302F50 
 7230 014f 00       		.space	1
 7231              	.LC56:
 7232 0150 43564253 		.ascii	"CVBS    mode:%d\015\012\000"
 7232      20202020 
 7232      6D6F6465 
 7232      3A25640D 
 7232      0A00
 7233 0162 0000     		.space	2
ARM GAS  /tmp/ccFyOsmB.s 			page 219


 7234              	.LC57:
 7235 0164 6261636B 		.ascii	"back to T ch%02x\015\012\000"
 7235      20746F20 
 7235      54206368 
 7235      25303278 
 7235      0D0A00
 7236 0177 00       		.space	1
 7237              	.LC58:
 7238 0178 45676169 		.ascii	"Egain=0x%02x ch%02x,std=%d,mode=0x%02X\015\012\000"
 7238      6E3D3078 
 7238      25303278 
 7238      20636825 
 7238      3032782C 
 7239 01a1 000000   		.space	3
 7240              	.LC59:
 7241 01a4 56533432 		.ascii	"VS4210_SetInModeOutMode(),i=%d,newInRes=%d,OuputMod"
 7241      31305F53 
 7241      6574496E 
 7241      4D6F6465 
 7241      4F75744D 
 7242 01d7 65666C67 		.ascii	"eflg=%d\015\012\000"
 7242      3D25640D 
 7242      0A00
 7243 01e1 000000   		.space	3
 7244              	.LC60:
 7245 01e4 41484420 		.ascii	"AHD Mode\015\000"
 7245      4D6F6465 
 7245      0D00
 7246 01ee 0000     		.space	2
 7247              	.LC61:
 7248 01f0 43564920 		.ascii	"CVI Mode\015\000"
 7248      4D6F6465 
 7248      0D00
 7249 01fa 0000     		.space	2
 7250              	.LC62:
 7251 01fc 43564253 		.ascii	"CVBS NTSC   mode\015\000"
 7251      204E5453 
 7251      43202020 
 7251      6D6F6465 
 7251      0D00
 7252 020e 0000     		.space	2
 7253              	.LC63:
 7254 0210 43564253 		.ascii	"CVBS PAL   mode\015\000"
 7254      2050414C 
 7254      2020206D 
 7254      6F64650D 
 7254      00
 7255 0221 000000   		.space	3
 7256              	.LC64:
 7257 0224 4C494E45 		.ascii	"LINE=%d,TVI Mode\015\012\000"
 7257      3D25642C 
 7257      54564920 
 7257      4D6F6465 
 7257      0D0A00
 7258 0237 00       		.space	1
 7259              	.LC65:
 7260 0238 45516465 		.ascii	"EQdet %d\015\012\000"
ARM GAS  /tmp/ccFyOsmB.s 			page 220


 7260      74202564 
 7260      0D0A00
 7261 0243 00       		.space	1
 7262              	.LC66:
 7263 0244 0D0A4148 		.ascii	"\015\012AHD COC Ready CH=%d\015\012\000"
 7263      4420434F 
 7263      43205265 
 7263      61647920 
 7263      43483D25 
 7264              		.section	.rodata.Get_2824cIrq.str1.4,"aMS",%progbits,1
 7265              		.align	2
 7266              	.LC30:
 7267 0000 0D0A434F 		.ascii	"\015\012COC4:\000"
 7267      43343A00 
 7268              	.LC31:
 7269 0008 20253032 		.ascii	" %02X\000"
 7269      5800
 7270 000e 0000     		.space	2
 7271              	.LC32:
 7272 0010 51756164 		.ascii	"QuadBoxId %02x\015\012\000"
 7272      426F7849 
 7272      64202530 
 7272      32780D0A 
 7272      00
 7273 0021 000000   		.space	3
 7274              	.LC33:
 7275 0024 0D0A434F 		.ascii	"\015\012COC3:\000"
 7275      43333A00 
 7276              	.LC34:
 7277 002c 0D0A434F 		.ascii	"\015\012COC2:\000"
 7277      43323A00 
 7278              	.LC35:
 7279 0034 0D0A434F 		.ascii	"\015\012COC1:\000"
 7279      43313A00 
 7280              	.LC36:
 7281 003c 43564253 		.ascii	"CVBS-Tx %x,%x,%x,%x\012\000"
 7281      2D547820 
 7281      25782C25 
 7281      782C2578 
 7281      2C25780A 
 7282 0051 000000   		.space	3
 7283              	.LC37:
 7284 0054 5456492D 		.ascii	"TVI-Tx %x,%x,%x\012\000"
 7284      54782025 
 7284      782C2578 
 7284      2C25780A 
 7284      00
 7285 0065 000000   		.space	3
 7286              	.LC38:
 7287 0068 4356492D 		.ascii	"CVI-Tx %x\012\000"
 7287      54782025 
 7287      780A00
 7288 0073 00       		.space	1
 7289              	.LC39:
 7290 0074 41484420 		.ascii	"AHD %02x,%02x,%02x to \000"
 7290      25303278 
 7290      2C253032 
ARM GAS  /tmp/ccFyOsmB.s 			page 221


 7290      782C2530 
 7290      32782074 
 7291 008b 00       		.space	1
 7292              	.LC40:
 7293 008c 54782025 		.ascii	"Tx %02x,%02x,%02x,%02x\000"
 7293      3032782C 
 7293      25303278 
 7293      2C253032 
 7293      782C2530 
 7294              		.section	.rodata.Init_COC_PTZOUT1.str1.4,"aMS",%progbits,1
 7295              		.align	2
 7296              	.LC41:
 7297 0000 0D0A2049 		.ascii	"\015\012 Init_COC_PTZOUT1..\000"
 7297      6E69745F 
 7297      434F435F 
 7297      50545A4F 
 7297      5554312E 
 7298              		.section	.rodata.Init_TP280x_RegSet.str1.4,"aMS",%progbits,1
 7299              		.align	2
 7300              	.LC26:
 7301 0000 0D0A6368 		.ascii	"\015\012chip %02x revision %02x\015\012\000"
 7301      69702025 
 7301      30327820 
 7301      72657669 
 7301      73696F6E 
 7302              	.LC27:
 7303 001c 454F4C20 		.ascii	"EOL ID\015\000"
 7303      49440D00 
 7304              	.LC28:
 7305 0024 54503238 		.ascii	"TP2824C test\015\000"
 7305      32344320 
 7305      74657374 
 7305      0D00
 7306 0032 0000     		.space	2
 7307              	.LC29:
 7308 0034 756E6B6E 		.ascii	"unknown ID\015\000"
 7308      6F776E20 
 7308      49440D00 
 7309              		.section	.rodata.ManualAGC.str1.4,"aMS",%progbits,1
 7310              		.align	2
 7311              	.LC24:
 7312 0000 72657375 		.ascii	"result AGC=0X%04x ch%02X\015\012\000"
 7312      6C742041 
 7312      47433D30 
 7312      58253034 
 7312      78206368 
 7313              		.section	.rodata.PTZ_RX_dat.8822,"a",%progbits
 7314              		.align	2
 7315              		.set	.LANCHOR28,. + 0
 7318              	PTZ_RX_dat.8822:
 7319 0000 00       		.byte	0
 7320 0001 00       		.byte	0
 7321 0002 07       		.byte	7
 7322 0003 08       		.byte	8
 7323 0004 00       		.byte	0
 7324 0005 00       		.byte	0
 7325 0006 04       		.byte	4
ARM GAS  /tmp/ccFyOsmB.s 			page 222


 7326 0007 00       		.byte	0
 7327 0008 00       		.byte	0
 7328 0009 60       		.byte	96
 7329 000a 10       		.byte	16
 7330 000b 04       		.byte	4
 7331 000c F0       		.byte	-16
 7332 000d D8       		.byte	-40
 7333 000e 27       		.byte	39
 7334 000f 00       		.byte	0
 7335 0010 00       		.byte	0
 7336 0011 07       		.byte	7
 7337 0012 08       		.byte	8
 7338 0013 09       		.byte	9
 7339 0014 0A       		.byte	10
 7340 0015 04       		.byte	4
 7341 0016 00       		.byte	0
 7342 0017 00       		.byte	0
 7343 0018 60       		.byte	96
 7344 0019 10       		.byte	16
 7345 001a 04       		.byte	4
 7346 001b F0       		.byte	-16
 7347 001c D8       		.byte	-40
 7348 001d 27       		.byte	39
 7349 001e 00       		.byte	0
 7350 001f 00       		.byte	0
 7351 0020 06       		.byte	6
 7352 0021 07       		.byte	7
 7353 0022 08       		.byte	8
 7354 0023 09       		.byte	9
 7355 0024 03       		.byte	3
 7356 0025 52       		.byte	82
 7357 0026 53       		.byte	83
 7358 0027 60       		.byte	96
 7359 0028 10       		.byte	16
 7360 0029 04       		.byte	4
 7361 002a F0       		.byte	-16
 7362 002b D8       		.byte	-40
 7363 002c 17       		.byte	23
 7364 002d 00       		.byte	0
 7365 002e 00       		.byte	0
 7366 002f 06       		.byte	6
 7367 0030 07       		.byte	7
 7368 0031 08       		.byte	8
 7369 0032 09       		.byte	9
 7370 0033 02       		.byte	2
 7371 0034 DF       		.byte	-33
 7372 0035 88       		.byte	-120
 7373 0036 60       		.byte	96
 7374 0037 10       		.byte	16
 7375 0038 04       		.byte	4
 7376 0039 F0       		.byte	-16
 7377 003a D8       		.byte	-40
 7378 003b 17       		.byte	23
 7379 003c 00       		.byte	0
 7380 003d 00       		.byte	0
 7381 003e 06       		.byte	6
 7382 003f 07       		.byte	7
ARM GAS  /tmp/ccFyOsmB.s 			page 223


 7383 0040 08       		.byte	8
 7384 0041 09       		.byte	9
 7385 0042 04       		.byte	4
 7386 0043 EC       		.byte	-20
 7387 0044 E9       		.byte	-23
 7388 0045 60       		.byte	96
 7389 0046 10       		.byte	16
 7390 0047 04       		.byte	4
 7391 0048 F0       		.byte	-16
 7392 0049 D8       		.byte	-40
 7393 004a 17       		.byte	23
 7394              		.section	.rodata.PTZ_dat.8812,"a",%progbits
 7395              		.align	2
 7396              		.set	.LANCHOR26,. + 0
 7399              	PTZ_dat.8812:
 7400 0000 0B       		.byte	11
 7401 0001 0C       		.byte	12
 7402 0002 0D       		.byte	13
 7403 0003 0E       		.byte	14
 7404 0004 19       		.byte	25
 7405 0005 78       		.byte	120
 7406 0006 21       		.byte	33
 7407 0007 0B       		.byte	11
 7408 0008 0C       		.byte	12
 7409 0009 0D       		.byte	13
 7410 000a 0E       		.byte	14
 7411 000b 33       		.byte	51
 7412 000c F0       		.byte	-16
 7413 000d 21       		.byte	33
 7414 000e 0E       		.byte	14
 7415 000f 0F       		.byte	15
 7416 0010 10       		.byte	16
 7417 0011 11       		.byte	17
 7418 0012 66       		.byte	102
 7419 0013 F0       		.byte	-16
 7420 0014 17       		.byte	23
 7421 0015 0E       		.byte	14
 7422 0016 0F       		.byte	15
 7423 0017 10       		.byte	16
 7424 0018 11       		.byte	17
 7425 0019 26       		.byte	38
 7426 001a F0       		.byte	-16
 7427 001b 57       		.byte	87
 7428 001c 0E       		.byte	14
 7429 001d 0F       		.byte	15
 7430 001e 00       		.byte	0
 7431 001f 00       		.byte	0
 7432 0020 26       		.byte	38
 7433 0021 E0       		.byte	-32
 7434 0022 EF       		.byte	-17
 7435 0023 0F       		.byte	15
 7436 0024 10       		.byte	16
 7437 0025 00       		.byte	0
 7438 0026 00       		.byte	0
 7439 0027 48       		.byte	72
 7440 0028 F0       		.byte	-16
 7441 0029 6F       		.byte	111
ARM GAS  /tmp/ccFyOsmB.s 			page 224


 7442 002a 10       		.byte	16
 7443 002b 11       		.byte	17
 7444 002c 12       		.byte	18
 7445 002d 13       		.byte	19
 7446 002e 15       		.byte	21
 7447 002f B8       		.byte	-72
 7448 0030 A2       		.byte	-94
 7449 0031 10       		.byte	16
 7450 0032 11       		.byte	17
 7451 0033 12       		.byte	18
 7452 0034 13       		.byte	19
 7453 0035 95       		.byte	-107
 7454 0036 B8       		.byte	-72
 7455 0037 22       		.byte	34
 7456              		.section	.rodata.PTZ_dat.8834,"a",%progbits
 7457              		.align	2
 7458              		.set	.LANCHOR29,. + 0
 7461              	PTZ_dat.8834:
 7462 0000 42       		.byte	66
 7463 0001 40       		.byte	64
 7464 0002 00       		.byte	0
 7465 0003 00       		.byte	0
 7466 0004 00       		.byte	0
 7467 0005 0B       		.byte	11
 7468 0006 0C       		.byte	12
 7469 0007 0D       		.byte	13
 7470 0008 0E       		.byte	14
 7471 0009 19       		.byte	25
 7472 000a 78       		.byte	120
 7473 000b 21       		.byte	33
 7474 000c 42       		.byte	66
 7475 000d 40       		.byte	64
 7476 000e 00       		.byte	0
 7477 000f 00       		.byte	0
 7478 0010 00       		.byte	0
 7479 0011 0B       		.byte	11
 7480 0012 0C       		.byte	12
 7481 0013 0D       		.byte	13
 7482 0014 0E       		.byte	14
 7483 0015 33       		.byte	51
 7484 0016 F0       		.byte	-16
 7485 0017 21       		.byte	33
 7486 0018 42       		.byte	66
 7487 0019 40       		.byte	64
 7488 001a 00       		.byte	0
 7489 001b 00       		.byte	0
 7490 001c 00       		.byte	0
 7491 001d 0E       		.byte	14
 7492 001e 0F       		.byte	15
 7493 001f 10       		.byte	16
 7494 0020 11       		.byte	17
 7495 0021 26       		.byte	38
 7496 0022 F0       		.byte	-16
 7497 0023 57       		.byte	87
 7498 0024 42       		.byte	66
 7499 0025 40       		.byte	64
 7500 0026 00       		.byte	0
ARM GAS  /tmp/ccFyOsmB.s 			page 225


 7501 0027 00       		.byte	0
 7502 0028 00       		.byte	0
 7503 0029 0E       		.byte	14
 7504 002a 0F       		.byte	15
 7505 002b 00       		.byte	0
 7506 002c 00       		.byte	0
 7507 002d 26       		.byte	38
 7508 002e E0       		.byte	-32
 7509 002f EF       		.byte	-17
 7510 0030 42       		.byte	66
 7511 0031 40       		.byte	64
 7512 0032 00       		.byte	0
 7513 0033 00       		.byte	0
 7514 0034 00       		.byte	0
 7515 0035 0F       		.byte	15
 7516 0036 10       		.byte	16
 7517 0037 00       		.byte	0
 7518 0038 00       		.byte	0
 7519 0039 4D       		.byte	77
 7520 003a F0       		.byte	-16
 7521 003b 6F       		.byte	111
 7522 003c 42       		.byte	66
 7523 003d 40       		.byte	64
 7524 003e 00       		.byte	0
 7525 003f 00       		.byte	0
 7526 0040 00       		.byte	0
 7527 0041 10       		.byte	16
 7528 0042 11       		.byte	17
 7529 0043 12       		.byte	18
 7530 0044 15       		.byte	21
 7531 0045 15       		.byte	21
 7532 0046 B8       		.byte	-72
 7533 0047 A2       		.byte	-94
 7534              		.section	.rodata.PTZ_reg.8811,"a",%progbits
 7535              		.align	2
 7536              		.set	.LANCHOR27,. + 0
 7539              	PTZ_reg.8811:
 7540 0000 C2       		.byte	-62
 7541 0001 C3       		.byte	-61
 7542 0002 C4       		.byte	-60
 7543 0003 C5       		.byte	-59
 7544 0004 C6       		.byte	-58
 7545 0005 C7       		.byte	-57
 7546 0006 C8       		.byte	-56
 7547 0007 DA       		.byte	-38
 7548 0008 DB       		.byte	-37
 7549 0009 DC       		.byte	-36
 7550 000a DD       		.byte	-35
 7551 000b DE       		.byte	-34
 7552 000c DF       		.byte	-33
 7553 000d E0       		.byte	-32
 7554 000e C2       		.byte	-62
 7555 000f C3       		.byte	-61
 7556 0010 C4       		.byte	-60
 7557 0011 C5       		.byte	-59
 7558 0012 C6       		.byte	-58
 7559 0013 C7       		.byte	-57
ARM GAS  /tmp/ccFyOsmB.s 			page 226


 7560 0014 C8       		.byte	-56
 7561 0015 DA       		.byte	-38
 7562 0016 DB       		.byte	-37
 7563 0017 DC       		.byte	-36
 7564 0018 DD       		.byte	-35
 7565 0019 DE       		.byte	-34
 7566 001a DF       		.byte	-33
 7567 001b E0       		.byte	-32
 7568              		.section	.rodata.PTZ_reg.8833,"a",%progbits
 7569              		.align	2
 7570              		.set	.LANCHOR30,. + 0
 7573              	PTZ_reg.8833:
 7574 0000 6F       		.byte	111
 7575 0001 70       		.byte	112
 7576 0002 71       		.byte	113
 7577 0003 C0       		.byte	-64
 7578 0004 C1       		.byte	-63
 7579 0005 C2       		.byte	-62
 7580 0006 C3       		.byte	-61
 7581 0007 C4       		.byte	-60
 7582 0008 C5       		.byte	-59
 7583 0009 C6       		.byte	-58
 7584 000a C7       		.byte	-57
 7585 000b C8       		.byte	-56
 7586              		.section	.rodata.REG_F6,"a",%progbits
 7587              		.align	2
 7588              		.set	.LANCHOR33,. + 0
 7591              	REG_F6:
 7592 0000 00       		.byte	0
 7593 0001 11       		.byte	17
 7594 0002 22       		.byte	34
 7595 0003 33       		.byte	51
 7596              		.section	.rodata.REG_F7,"a",%progbits
 7597              		.align	2
 7598              		.set	.LANCHOR34,. + 0
 7601              	REG_F7:
 7602 0000 44       		.byte	68
 7603 0001 55       		.byte	85
 7604 0002 66       		.byte	102
 7605 0003 77       		.byte	119
 7606              		.section	.rodata.REG_FA,"a",%progbits
 7607              		.align	2
 7608              		.set	.LANCHOR35,. + 0
 7611              	REG_FA:
 7612 0000 BB       		.byte	-69
 7613 0001 CC       		.byte	-52
 7614 0002 DD       		.byte	-35
 7615 0003 EE       		.byte	-18
 7616              		.section	.rodata.SYS_AND,"a",%progbits
 7617              		.align	2
 7618              		.set	.LANCHOR0,. + 0
 7621              	SYS_AND:
 7622 0000 FE       		.byte	-2
 7623 0001 FD       		.byte	-3
 7624 0002 FB       		.byte	-5
 7625 0003 F7       		.byte	-9
 7626 0004 F0       		.byte	-16
ARM GAS  /tmp/ccFyOsmB.s 			page 227


 7627              		.section	.rodata.SYS_MODE,"a",%progbits
 7628              		.align	2
 7629              		.set	.LANCHOR1,. + 0
 7632              	SYS_MODE:
 7633 0000 01       		.byte	1
 7634 0001 02       		.byte	2
 7635 0002 04       		.byte	4
 7636 0003 08       		.byte	8
 7637 0004 0F       		.byte	15
 7638              		.section	.rodata.Set_ResWithAutoDet.str1.4,"aMS",%progbits,1
 7639              		.align	2
 7640              	.LC25:
 7641 0000 482F5620 		.ascii	"H/V is not locked\015\000"
 7641      6973206E 
 7641      6F74206C 
 7641      6F636B65 
 7641      640D00
 7642              		.section	.rodata.Set_VidRes.str1.4,"aMS",%progbits,1
 7643              		.align	2
 7644              	.LC0:
 7645 0000 31303830 		.ascii	"1080p30\000"
 7645      70333000 
 7646              	.LC1:
 7647 0008 31303830 		.ascii	"1080p25\000"
 7647      70323500 
 7648              	.LC2:
 7649 0010 37323070 		.ascii	"720p60\000"
 7649      363000
 7650 0017 00       		.space	1
 7651              	.LC3:
 7652 0018 37323070 		.ascii	"720p30V2\000"
 7652      33305632 
 7652      00
 7653 0021 000000   		.space	3
 7654              	.LC4:
 7655 0024 37323070 		.ascii	"720p50\000"
 7655      353000
 7656 002b 00       		.space	1
 7657              	.LC5:
 7658 002c 37323070 		.ascii	"720p25V2\000"
 7658      32355632 
 7658      00
 7659 0035 000000   		.space	3
 7660              	.LC6:
 7661 0038 37323070 		.ascii	"720p30\000"
 7661      333000
 7662 003f 00       		.space	1
 7663              	.LC7:
 7664 0040 37323070 		.ascii	"720p25\000"
 7664      323500
 7665 0047 00       		.space	1
 7666              	.LC8:
 7667 0048 50414C00 		.ascii	"PAL\000"
 7668              	.LC9:
 7669 004c 4E545343 		.ascii	"NTSC\000"
 7669      00
 7670 0051 000000   		.space	3
ARM GAS  /tmp/ccFyOsmB.s 			page 228


 7671              	.LC10:
 7672 0054 334D3138 		.ascii	"3M18\000"
 7672      00
 7673 0059 000000   		.space	3
 7674              	.LC11:
 7675 005c 354D3132 		.ascii	"5M12\000"
 7675      00
 7676 0061 000000   		.space	3
 7677              	.LC12:
 7678 0064 344D3135 		.ascii	"4M15\000"
 7678      00
 7679 0069 000000   		.space	3
 7680              	.LC13:
 7681 006c 334D3230 		.ascii	"3M20\000"
 7681      00
 7682 0071 000000   		.space	3
 7683              	.LC14:
 7684 0074 344D3132 		.ascii	"4M12\000"
 7684      00
 7685 0079 000000   		.space	3
 7686              	.LC15:
 7687 007c 364D3130 		.ascii	"6M10\000"
 7687      00
 7688 0081 000000   		.space	3
 7689              	.LC16:
 7690 0084 344D3330 		.ascii	"4M30\000"
 7690      00
 7691 0089 000000   		.space	3
 7692              	.LC17:
 7693 008c 2E2E2E0D 		.ascii	"...\015\000"
 7693      00
 7694 0091 000000   		.space	3
 7695              	.LC18:
 7696 0094 74703238 		.ascii	"tp2826MODEDATASET\015\000"
 7696      32364D4F 
 7696      44454441 
 7696      54415345 
 7696      540D00
 7697 00a7 00       		.space	1
 7698              	.LC19:
 7699 00a8 74703238 		.ascii	"tp2824C MODEDATASET\015\000"
 7699      32344320 
 7699      4D4F4445 
 7699      44415441 
 7699      5345540D 
 7700              		.section	.rodata.TP2802D_DataSet,"a",%progbits
 7701              		.align	2
 7704              	TP2802D_DataSet:
 7705 0000 40       		.byte	64
 7706 0001 04       		.byte	4
 7707 0002 2B       		.byte	43
 7708 0003 44       		.byte	68
 7709 0004 23       		.byte	35
 7710 0005 50       		.byte	80
 7711 0006 39       		.byte	57
 7712 0007 42       		.byte	66
 7713 0008 3A       		.byte	58
ARM GAS  /tmp/ccFyOsmB.s 			page 229


 7714 0009 01       		.byte	1
 7715 000a 30       		.byte	48
 7716 000b 48       		.byte	72
 7717 000c 31       		.byte	49
 7718 000d BB       		.byte	-69
 7719 000e 32       		.byte	50
 7720 000f 2E       		.byte	46
 7721 0010 33       		.byte	51
 7722 0011 90       		.byte	-112
 7723 0012 4D       		.byte	77
 7724 0013 0F       		.byte	15
 7725 0014 4E       		.byte	78
 7726 0015 FF       		.byte	-1
 7727 0016 40       		.byte	64
 7728 0017 01       		.byte	1
 7729 0018 50       		.byte	80
 7730 0019 00       		.byte	0
 7731 001a 51       		.byte	81
 7732 001b 00       		.byte	0
 7733 001c 52       		.byte	82
 7734 001d 00       		.byte	0
 7735 001e 7F       		.byte	127
 7736 001f 00       		.byte	0
 7737 0020 80       		.byte	-128
 7738 0021 00       		.byte	0
 7739 0022 81       		.byte	-127
 7740 0023 00       		.byte	0
 7741 0024 40       		.byte	64
 7742 0025 00       		.byte	0
 7743 0026 50       		.byte	80
 7744 0027 00       		.byte	0
 7745 0028 51       		.byte	81
 7746 0029 0B       		.byte	11
 7747 002a 52       		.byte	82
 7748 002b 0C       		.byte	12
 7749 002c 53       		.byte	83
 7750 002d 19       		.byte	25
 7751 002e 54       		.byte	84
 7752 002f 78       		.byte	120
 7753 0030 55       		.byte	85
 7754 0031 21       		.byte	33
 7755 0032 7E       		.byte	126
 7756 0033 0F       		.byte	15
 7757 0034 7F       		.byte	127
 7758 0035 00       		.byte	0
 7759 0036 80       		.byte	-128
 7760 0037 07       		.byte	7
 7761 0038 81       		.byte	-127
 7762 0039 08       		.byte	8
 7763 003a 82       		.byte	-126
 7764 003b 04       		.byte	4
 7765 003c 83       		.byte	-125
 7766 003d 00       		.byte	0
 7767 003e 84       		.byte	-124
 7768 003f 00       		.byte	0
 7769 0040 85       		.byte	-123
 7770 0041 60       		.byte	96
ARM GAS  /tmp/ccFyOsmB.s 			page 230


 7771 0042 86       		.byte	-122
 7772 0043 10       		.byte	16
 7773 0044 87       		.byte	-121
 7774 0045 06       		.byte	6
 7775 0046 88       		.byte	-120
 7776 0047 BE       		.byte	-66
 7777 0048 89       		.byte	-119
 7778 0049 39       		.byte	57
 7779 004a 8A       		.byte	-118
 7780 004b 27       		.byte	39
 7781 004c B9       		.byte	-71
 7782 004d 0F       		.byte	15
 7783 004e FF       		.byte	-1
 7784 004f FF       		.byte	-1
 7785              		.section	.rodata.TP2802_FORMAT_DataSet,"a",%progbits
 7786              		.align	2
 7787              		.set	.LANCHOR2,. + 0
 7790              	TP2802_FORMAT_DataSet:
 7791 0000 02       		.byte	2
 7792 0001 15       		.byte	21
 7793 0002 16       		.byte	22
 7794 0003 17       		.byte	23
 7795 0004 18       		.byte	24
 7796 0005 19       		.byte	25
 7797 0006 1A       		.byte	26
 7798 0007 1C       		.byte	28
 7799 0008 1D       		.byte	29
 7800 0009 35       		.byte	53
 7801 000a 36       		.byte	54
 7802 000b 14       		.byte	20
 7803 000c FF       		.byte	-1
 7804 000d 48       		.byte	72
 7805 000e 03       		.byte	3
 7806 000f D3       		.byte	-45
 7807 0010 80       		.byte	-128
 7808 0011 29       		.byte	41
 7809 0012 38       		.byte	56
 7810 0013 47       		.byte	71
 7811 0014 08       		.byte	8
 7812 0015 98       		.byte	-104
 7813 0016 05       		.byte	5
 7814 0017 DC       		.byte	-36
 7815 0018 0A       		.byte	10
 7816 0019 FF       		.byte	-1
 7817 001a 48       		.byte	72
 7818 001b 03       		.byte	3
 7819 001c D3       		.byte	-45
 7820 001d 80       		.byte	-128
 7821 001e 29       		.byte	41
 7822 001f 38       		.byte	56
 7823 0020 47       		.byte	71
 7824 0021 0A       		.byte	10
 7825 0022 50       		.byte	80
 7826 0023 05       		.byte	5
 7827 0024 DC       		.byte	-36
 7828 0025 0A       		.byte	10
 7829 0026 FF       		.byte	-1
ARM GAS  /tmp/ccFyOsmB.s 			page 231


 7830 0027 4A       		.byte	74
 7831 0028 13       		.byte	19
 7832 0029 16       		.byte	22
 7833 002a 00       		.byte	0
 7834 002b 19       		.byte	25
 7835 002c D0       		.byte	-48
 7836 002d 25       		.byte	37
 7837 002e 06       		.byte	6
 7838 002f 72       		.byte	114
 7839 0030 05       		.byte	5
 7840 0031 DC       		.byte	-36
 7841 0032 0A       		.byte	10
 7842 0033 FF       		.byte	-1
 7843 0034 4A       		.byte	74
 7844 0035 13       		.byte	19
 7845 0036 16       		.byte	22
 7846 0037 00       		.byte	0
 7847 0038 19       		.byte	25
 7848 0039 D0       		.byte	-48
 7849 003a 25       		.byte	37
 7850 003b 07       		.byte	7
 7851 003c BC       		.byte	-68
 7852 003d 05       		.byte	5
 7853 003e DC       		.byte	-36
 7854 003f 0A       		.byte	10
 7855 0040 FF       		.byte	-1
 7856 0041 4A       		.byte	74
 7857 0042 13       		.byte	19
 7858 0043 16       		.byte	22
 7859 0044 00       		.byte	0
 7860 0045 19       		.byte	25
 7861 0046 D0       		.byte	-48
 7862 0047 25       		.byte	37
 7863 0048 0C       		.byte	12
 7864 0049 E4       		.byte	-28
 7865 004a 05       		.byte	5
 7866 004b DC       		.byte	-36
 7867 004c 0A       		.byte	10
 7868 004d FF       		.byte	-1
 7869 004e 4A       		.byte	74
 7870 004f 13       		.byte	19
 7871 0050 16       		.byte	22
 7872 0051 00       		.byte	0
 7873 0052 19       		.byte	25
 7874 0053 D0       		.byte	-48
 7875 0054 25       		.byte	37
 7876 0055 0F       		.byte	15
 7877 0056 78       		.byte	120
 7878 0057 05       		.byte	5
 7879 0058 DC       		.byte	-36
 7880 0059 0A       		.byte	10
 7881 005a FF       		.byte	-1
 7882 005b 4F       		.byte	79
 7883 005c 13       		.byte	19
 7884 005d 4E       		.byte	78
 7885 005e BC       		.byte	-68
 7886 005f 15       		.byte	21
ARM GAS  /tmp/ccFyOsmB.s 			page 232


 7887 0060 F0       		.byte	-16
 7888 0061 07       		.byte	7
 7889 0062 09       		.byte	9
 7890 0063 38       		.byte	56
 7891 0064 25       		.byte	37
 7892 0065 DC       		.byte	-36
 7893 0066 0A       		.byte	10
 7894 0067 FF       		.byte	-1
 7895 0068 4F       		.byte	79
 7896 0069 13       		.byte	19
 7897 006a 5F       		.byte	95
 7898 006b BC       		.byte	-68
 7899 006c 17       		.byte	23
 7900 006d 20       		.byte	32
 7901 006e 17       		.byte	23
 7902 006f 09       		.byte	9
 7903 0070 48       		.byte	72
 7904 0071 25       		.byte	37
 7905 0072 DC       		.byte	-36
 7906 0073 0A       		.byte	10
 7907 0074 FF       		.byte	-1
 7908 0075 48       		.byte	72
 7909 0076 13       		.byte	19
 7910 0077 6C       		.byte	108
 7911 0078 00       		.byte	0
 7912 0079 2C       		.byte	44
 7913 007a 00       		.byte	0
 7914 007b 68       		.byte	104
 7915 007c 09       		.byte	9
 7916 007d C4       		.byte	-60
 7917 007e 16       		.byte	22
 7918 007f 30       		.byte	48
 7919 0080 0A       		.byte	10
 7920 0081 FF       		.byte	-1
 7921 0082 48       		.byte	72
 7922 0083 13       		.byte	19
 7923 0084 1F       		.byte	31
 7924 0085 20       		.byte	32
 7925 0086 34       		.byte	52
 7926 0087 98       		.byte	-104
 7927 0088 7A       		.byte	122
 7928 0089 0B       		.byte	11
 7929 008a 9A       		.byte	-102
 7930 008b 17       		.byte	23
 7931 008c D0       		.byte	-48
 7932 008d 0A       		.byte	10
 7933 008e FF       		.byte	-1
 7934 008f 4A       		.byte	74
 7935 0090 13       		.byte	19
 7936 0091 16       		.byte	22
 7937 0092 00       		.byte	0
 7938 0093 19       		.byte	25
 7939 0094 D0       		.byte	-48
 7940 0095 25       		.byte	37
 7941 0096 06       		.byte	6
 7942 0097 72       		.byte	114
 7943 0098 25       		.byte	37
ARM GAS  /tmp/ccFyOsmB.s 			page 233


 7944 0099 DC       		.byte	-36
 7945 009a 0A       		.byte	10
 7946 009b FF       		.byte	-1
 7947 009c 4A       		.byte	74
 7948 009d 13       		.byte	19
 7949 009e 16       		.byte	22
 7950 009f 00       		.byte	0
 7951 00a0 19       		.byte	25
 7952 00a1 D0       		.byte	-48
 7953 00a2 25       		.byte	37
 7954 00a3 07       		.byte	7
 7955 00a4 BC       		.byte	-68
 7956 00a5 25       		.byte	37
 7957 00a6 DC       		.byte	-36
 7958 00a7 0A       		.byte	10
 7959 00a8 FF       		.byte	-1
 7960 00a9 48       		.byte	72
 7961 00aa 13       		.byte	19
 7962 00ab 1F       		.byte	31
 7963 00ac 80       		.byte	-128
 7964 00ad 7D       		.byte	125
 7965 00ae F0       		.byte	-16
 7966 00af 5A       		.byte	90
 7967 00b0 0B       		.byte	11
 7968 00b1 B8       		.byte	-72
 7969 00b2 16       		.byte	22
 7970 00b3 72       		.byte	114
 7971 00b4 0A       		.byte	10
 7972 00b5 FF       		.byte	-1
 7973 00b6 48       		.byte	72
 7974 00b7 13       		.byte	19
 7975 00b8 6C       		.byte	108
 7976 00b9 00       		.byte	0
 7977 00ba 2C       		.byte	44
 7978 00bb 00       		.byte	0
 7979 00bc 68       		.byte	104
 7980 00bd 09       		.byte	9
 7981 00be C4       		.byte	-60
 7982 00bf 16       		.byte	22
 7983 00c0 72       		.byte	114
 7984 00c1 0A       		.byte	10
 7985 00c2 FF       		.byte	-1
 7986 00c3 48       		.byte	72
 7987 00c4 23       		.byte	35
 7988 00c5 34       		.byte	52
 7989 00c6 78       		.byte	120
 7990 00c7 8C       		.byte	-116
 7991 00c8 F0       		.byte	-16
 7992 00c9 5A       		.byte	90
 7993 00ca 0C       		.byte	12
 7994 00cb E4       		.byte	-28
 7995 00cc 17       		.byte	23
 7996 00cd 08       		.byte	8
 7997 00ce 0A       		.byte	10
 7998 00cf FF       		.byte	-1
 7999 00d0 48       		.byte	72
 8000 00d1 13       		.byte	19
ARM GAS  /tmp/ccFyOsmB.s 			page 234


 8001 00d2 EC       		.byte	-20
 8002 00d3 80       		.byte	-128
 8003 00d4 B0       		.byte	-80
 8004 00d5 08       		.byte	8
 8005 00d6 7C       		.byte	124
 8006 00d7 0E       		.byte	14
 8007 00d8 A6       		.byte	-90
 8008 00d9 17       		.byte	23
 8009 00da BC       		.byte	-68
 8010 00db 0A       		.byte	10
 8011 00dc FF       		.byte	-1
 8012 00dd 48       		.byte	72
 8013 00de 13       		.byte	19
 8014 00df 0F       		.byte	15
 8015 00e0 00       		.byte	0
 8016 00e1 32       		.byte	50
 8017 00e2 A0       		.byte	-96
 8018 00e3 55       		.byte	85
 8019 00e4 06       		.byte	6
 8020 00e5 72       		.byte	114
 8021 00e6 15       		.byte	21
 8022 00e7 DC       		.byte	-36
 8023 00e8 0A       		.byte	10
 8024 00e9 FF       		.byte	-1
 8025 00ea 48       		.byte	72
 8026 00eb 13       		.byte	19
 8027 00ec 20       		.byte	32
 8028 00ed 00       		.byte	0
 8029 00ee 20       		.byte	32
 8030 00ef A0       		.byte	-96
 8031 00f0 55       		.byte	85
 8032 00f1 07       		.byte	7
 8033 00f2 BC       		.byte	-68
 8034 00f3 15       		.byte	21
 8035 00f4 DC       		.byte	-36
 8036 00f5 0A       		.byte	10
 8037 00f6 FF       		.byte	-1
 8038              		.section	.rodata.TP2822_DataSet,"a",%progbits
 8039              		.align	2
 8042              	TP2822_DataSet:
 8043 0000 40       		.byte	64
 8044 0001 04       		.byte	4
 8045 0002 39       		.byte	57
 8046 0003 00       		.byte	0
 8047 0004 3D       		.byte	61
 8048 0005 08       		.byte	8
 8049 0006 3A       		.byte	58
 8050 0007 01       		.byte	1
 8051 0008 30       		.byte	48
 8052 0009 48       		.byte	72
 8053 000a 31       		.byte	49
 8054 000b BB       		.byte	-69
 8055 000c 32       		.byte	50
 8056 000d 2E       		.byte	46
 8057 000e 33       		.byte	51
 8058 000f 90       		.byte	-112
 8059 0010 4D       		.byte	77
ARM GAS  /tmp/ccFyOsmB.s 			page 235


 8060 0011 03       		.byte	3
 8061 0012 4E       		.byte	78
 8062 0013 33       		.byte	51
 8063 0014 3D       		.byte	61
 8064 0015 00       		.byte	0
 8065 0016 FF       		.byte	-1
 8066 0017 FF       		.byte	-1
 8067              		.section	.rodata.TP2823_DataSet,"a",%progbits
 8068              		.align	2
 8069              		.set	.LANCHOR16,. + 0
 8072              	TP2823_DataSet:
 8073 0000 40       		.byte	64
 8074 0001 04       		.byte	4
 8075 0002 0B       		.byte	11
 8076 0003 60       		.byte	96
 8077 0004 22       		.byte	34
 8078 0005 34       		.byte	52
 8079 0006 23       		.byte	35
 8080 0007 44       		.byte	68
 8081 0008 26       		.byte	38
 8082 0009 01       		.byte	1
 8083 000a 38       		.byte	56
 8084 000b 40       		.byte	64
 8085 000c 3F       		.byte	63
 8086 000d 08       		.byte	8
 8087 000e 4D       		.byte	77
 8088 000f 03       		.byte	3
 8089 0010 4E       		.byte	78
 8090 0011 33       		.byte	51
 8091 0012 FA       		.byte	-6
 8092 0013 00       		.byte	0
 8093 0014 FF       		.byte	-1
 8094 0015 FF       		.byte	-1
 8095              		.section	.rodata.TP2823_MODE_DataSet,"a",%progbits
 8096              		.align	2
 8099              	TP2823_MODE_DataSet:
 8100 0000 0C       		.byte	12
 8101 0001 0D       		.byte	13
 8102 0002 20       		.byte	32
 8103 0003 26       		.byte	38
 8104 0004 2B       		.byte	43
 8105 0005 2D       		.byte	45
 8106 0006 2E       		.byte	46
 8107 0007 30       		.byte	48
 8108 0008 31       		.byte	49
 8109 0009 32       		.byte	50
 8110 000a 33       		.byte	51
 8111 000b 39       		.byte	57
 8112 000c FF       		.byte	-1
 8113 000d 43       		.byte	67
 8114 000e 10       		.byte	16
 8115 000f 60       		.byte	96
 8116 0010 02       		.byte	2
 8117 0011 58       		.byte	88
 8118 0012 30       		.byte	48
 8119 0013 70       		.byte	112
 8120 0014 48       		.byte	72
ARM GAS  /tmp/ccFyOsmB.s 			page 236


 8121 0015 BB       		.byte	-69
 8122 0016 2E       		.byte	46
 8123 0017 90       		.byte	-112
 8124 0018 30       		.byte	48
 8125 0019 FF       		.byte	-1
 8126 001a 53       		.byte	83
 8127 001b 10       		.byte	16
 8128 001c 60       		.byte	96
 8129 001d 02       		.byte	2
 8130 001e 58       		.byte	88
 8131 001f 30       		.byte	48
 8132 0020 70       		.byte	112
 8133 0021 48       		.byte	72
 8134 0022 BB       		.byte	-69
 8135 0023 2E       		.byte	46
 8136 0024 90       		.byte	-112
 8137 0025 20       		.byte	32
 8138 0026 FF       		.byte	-1
 8139 0027 53       		.byte	83
 8140 0028 10       		.byte	16
 8141 0029 A0       		.byte	-96
 8142 002a 12       		.byte	18
 8143 002b 70       		.byte	112
 8144 002c 68       		.byte	104
 8145 002d 5E       		.byte	94
 8146 002e 62       		.byte	98
 8147 002f BB       		.byte	-69
 8148 0030 96       		.byte	-106
 8149 0031 C0       		.byte	-64
 8150 0032 10       		.byte	16
 8151 0033 FF       		.byte	-1
 8152 0034 53       		.byte	83
 8153 0035 11       		.byte	17
 8154 0036 B0       		.byte	-80
 8155 0037 02       		.byte	2
 8156 0038 70       		.byte	112
 8157 0039 60       		.byte	96
 8158 003a 5E       		.byte	94
 8159 003b 7A       		.byte	122
 8160 003c 4A       		.byte	74
 8161 003d 4D       		.byte	77
 8162 003e F0       		.byte	-16
 8163 003f 10       		.byte	16
 8164 0040 FF       		.byte	-1
 8165              		.section	.rodata.TP2824C_AHD_FHD_PTZ_DataSet,"a",%progbits
 8166              		.align	2
 8167              		.set	.LANCHOR36,. + 0
 8170              	TP2824C_AHD_FHD_PTZ_DataSet:
 8171 0000 C0       		.byte	-64
 8172 0001 00       		.byte	0
 8173 0002 C2       		.byte	-62
 8174 0003 0E       		.byte	14
 8175 0004 C3       		.byte	-61
 8176 0005 0F       		.byte	15
 8177 0006 C1       		.byte	-63
 8178 0007 00       		.byte	0
 8179 0008 C4       		.byte	-60
ARM GAS  /tmp/ccFyOsmB.s 			page 237


 8180 0009 10       		.byte	16
 8181 000a C5       		.byte	-59
 8182 000b 11       		.byte	17
 8183 000c C6       		.byte	-58
 8184 000d 27       		.byte	39
 8185 000e C7       		.byte	-57
 8186 000f 15       		.byte	21
 8187 0010 C8       		.byte	-56
 8188 0011 97       		.byte	-105
 8189 0012 6F       		.byte	111
 8190 0013 44       		.byte	68
 8191 0014 70       		.byte	112
 8192 0015 00       		.byte	0
 8193 0016 55       		.byte	85
 8194 0017 00       		.byte	0
 8195 0018 56       		.byte	86
 8196 0019 00       		.byte	0
 8197 001a 57       		.byte	87
 8198 001b 00       		.byte	0
 8199 001c 58       		.byte	88
 8200 001d 00       		.byte	0
 8201 001e 59       		.byte	89
 8202 001f 00       		.byte	0
 8203 0020 5A       		.byte	90
 8204 0021 00       		.byte	0
 8205 0022 5B       		.byte	91
 8206 0023 00       		.byte	0
 8207 0024 5C       		.byte	92
 8208 0025 00       		.byte	0
 8209 0026 5D       		.byte	93
 8210 0027 00       		.byte	0
 8211 0028 5E       		.byte	94
 8212 0029 00       		.byte	0
 8213 002a 5F       		.byte	95
 8214 002b 00       		.byte	0
 8215 002c 60       		.byte	96
 8216 002d 00       		.byte	0
 8217 002e 62       		.byte	98
 8218 002f 00       		.byte	0
 8219 0030 63       		.byte	99
 8220 0031 00       		.byte	0
 8221 0032 64       		.byte	100
 8222 0033 00       		.byte	0
 8223 0034 65       		.byte	101
 8224 0035 00       		.byte	0
 8225 0036 66       		.byte	102
 8226 0037 00       		.byte	0
 8227 0038 68       		.byte	104
 8228 0039 00       		.byte	0
 8229 003a 69       		.byte	105
 8230 003b 00       		.byte	0
 8231 003c 6A       		.byte	106
 8232 003d 00       		.byte	0
 8233 003e 6B       		.byte	107
 8234 003f 00       		.byte	0
 8235 0040 6C       		.byte	108
 8236 0041 00       		.byte	0
ARM GAS  /tmp/ccFyOsmB.s 			page 238


 8237 0042 CB       		.byte	-53
 8238 0043 07       		.byte	7
 8239 0044 CC       		.byte	-52
 8240 0045 08       		.byte	8
 8241 0046 CD       		.byte	-51
 8242 0047 00       		.byte	0
 8243 0048 CE       		.byte	-50
 8244 0049 00       		.byte	0
 8245 004a CF       		.byte	-49
 8246 004b 04       		.byte	4
 8247 004c D0       		.byte	-48
 8248 004d 00       		.byte	0
 8249 004e D1       		.byte	-47
 8250 004f 00       		.byte	0
 8251 0050 D2       		.byte	-46
 8252 0051 60       		.byte	96
 8253 0052 D3       		.byte	-45
 8254 0053 10       		.byte	16
 8255 0054 D4       		.byte	-44
 8256 0055 06       		.byte	6
 8257 0056 D5       		.byte	-43
 8258 0057 BE       		.byte	-66
 8259 0058 D6       		.byte	-42
 8260 0059 39       		.byte	57
 8261 005a D7       		.byte	-41
 8262 005b 27       		.byte	39
 8263 005c A7       		.byte	-89
 8264 005d 24       		.byte	36
 8265 005e FF       		.byte	-1
 8266 005f FF       		.byte	-1
 8267              		.section	.rodata.TP2824C_CVBS_PTZ_DataSet,"a",%progbits
 8268              		.align	2
 8269              		.set	.LANCHOR31,. + 0
 8272              	TP2824C_CVBS_PTZ_DataSet:
 8273 0000 C0       		.byte	-64
 8274 0001 00       		.byte	0
 8275 0002 C2       		.byte	-62
 8276 0003 0F       		.byte	15
 8277 0004 C3       		.byte	-61
 8278 0005 10       		.byte	16
 8279 0006 C1       		.byte	-63
 8280 0007 00       		.byte	0
 8281 0008 C4       		.byte	-60
 8282 0009 00       		.byte	0
 8283 000a C5       		.byte	-59
 8284 000b 00       		.byte	0
 8285 000c C6       		.byte	-58
 8286 000d 49       		.byte	73
 8287 000e C7       		.byte	-57
 8288 000f 14       		.byte	20
 8289 0010 C8       		.byte	-56
 8290 0011 AF       		.byte	-81
 8291 0012 6F       		.byte	111
 8292 0013 60       		.byte	96
 8293 0014 70       		.byte	112
 8294 0015 00       		.byte	0
 8295 0016 55       		.byte	85
ARM GAS  /tmp/ccFyOsmB.s 			page 239


 8296 0017 00       		.byte	0
 8297 0018 56       		.byte	86
 8298 0019 00       		.byte	0
 8299 001a 57       		.byte	87
 8300 001b 00       		.byte	0
 8301 001c 58       		.byte	88
 8302 001d 00       		.byte	0
 8303 001e 59       		.byte	89
 8304 001f 00       		.byte	0
 8305 0020 5A       		.byte	90
 8306 0021 00       		.byte	0
 8307 0022 5B       		.byte	91
 8308 0023 00       		.byte	0
 8309 0024 5C       		.byte	92
 8310 0025 00       		.byte	0
 8311 0026 5D       		.byte	93
 8312 0027 00       		.byte	0
 8313 0028 5E       		.byte	94
 8314 0029 00       		.byte	0
 8315 002a 5F       		.byte	95
 8316 002b 00       		.byte	0
 8317 002c 60       		.byte	96
 8318 002d 00       		.byte	0
 8319 002e 62       		.byte	98
 8320 002f 00       		.byte	0
 8321 0030 63       		.byte	99
 8322 0031 00       		.byte	0
 8323 0032 64       		.byte	100
 8324 0033 00       		.byte	0
 8325 0034 65       		.byte	101
 8326 0035 00       		.byte	0
 8327 0036 66       		.byte	102
 8328 0037 00       		.byte	0
 8329 0038 68       		.byte	104
 8330 0039 00       		.byte	0
 8331 003a 69       		.byte	105
 8332 003b 00       		.byte	0
 8333 003c 6A       		.byte	106
 8334 003d 00       		.byte	0
 8335 003e 6B       		.byte	107
 8336 003f 00       		.byte	0
 8337 0040 6C       		.byte	108
 8338 0041 00       		.byte	0
 8339 0042 FF       		.byte	-1
 8340 0043 FF       		.byte	-1
 8341              		.section	.rodata.TP2824C_CVIHD_PTZ_DataSet,"a",%progbits
 8342              		.align	2
 8343              		.set	.LANCHOR37,. + 0
 8346              	TP2824C_CVIHD_PTZ_DataSet:
 8347 0000 70       		.byte	112
 8348 0001 1D       		.byte	29
 8349 0002 C0       		.byte	-64
 8350 0003 00       		.byte	0
 8351 0004 C2       		.byte	-62
 8352 0005 10       		.byte	16
 8353 0006 C3       		.byte	-61
 8354 0007 00       		.byte	0
ARM GAS  /tmp/ccFyOsmB.s 			page 240


 8355 0008 C1       		.byte	-63
 8356 0009 00       		.byte	0
 8357 000a C4       		.byte	-60
 8358 000b 00       		.byte	0
 8359 000c C5       		.byte	-59
 8360 000d 00       		.byte	0
 8361 000e C6       		.byte	-58
 8362 000f 15       		.byte	21
 8363 0010 C7       		.byte	-57
 8364 0011 5B       		.byte	91
 8365 0012 C8       		.byte	-56
 8366 0013 A4       		.byte	-92
 8367 0014 6F       		.byte	111
 8368 0015 48       		.byte	72
 8369 0016 55       		.byte	85
 8370 0017 00       		.byte	0
 8371 0018 56       		.byte	86
 8372 0019 00       		.byte	0
 8373 001a 57       		.byte	87
 8374 001b 00       		.byte	0
 8375 001c 58       		.byte	88
 8376 001d 00       		.byte	0
 8377 001e 59       		.byte	89
 8378 001f 00       		.byte	0
 8379 0020 5A       		.byte	90
 8380 0021 00       		.byte	0
 8381 0022 5B       		.byte	91
 8382 0023 00       		.byte	0
 8383 0024 5C       		.byte	92
 8384 0025 00       		.byte	0
 8385 0026 5D       		.byte	93
 8386 0027 00       		.byte	0
 8387 0028 5E       		.byte	94
 8388 0029 00       		.byte	0
 8389 002a 5F       		.byte	95
 8390 002b 00       		.byte	0
 8391 002c 60       		.byte	96
 8392 002d 00       		.byte	0
 8393 002e 62       		.byte	98
 8394 002f 00       		.byte	0
 8395 0030 63       		.byte	99
 8396 0031 00       		.byte	0
 8397 0032 64       		.byte	100
 8398 0033 00       		.byte	0
 8399 0034 65       		.byte	101
 8400 0035 00       		.byte	0
 8401 0036 66       		.byte	102
 8402 0037 00       		.byte	0
 8403 0038 68       		.byte	104
 8404 0039 00       		.byte	0
 8405 003a 69       		.byte	105
 8406 003b 00       		.byte	0
 8407 003c 6A       		.byte	106
 8408 003d 00       		.byte	0
 8409 003e 6B       		.byte	107
 8410 003f 00       		.byte	0
 8411 0040 6C       		.byte	108
ARM GAS  /tmp/ccFyOsmB.s 			page 241


 8412 0041 00       		.byte	0
 8413 0042 FF       		.byte	-1
 8414 0043 FF       		.byte	-1
 8415              		.section	.rodata.TP2824C_DataSet,"a",%progbits
 8416              		.align	2
 8417              		.set	.LANCHOR15,. + 0
 8420              	TP2824C_DataSet:
 8421 0000 40       		.byte	64
 8422 0001 04       		.byte	4
 8423 0002 07       		.byte	7
 8424 0003 C0       		.byte	-64
 8425 0004 0B       		.byte	11
 8426 0005 C0       		.byte	-64
 8427 0006 21       		.byte	33
 8428 0007 84       		.byte	-124
 8429 0008 38       		.byte	56
 8430 0009 00       		.byte	0
 8431 000a 3A       		.byte	58
 8432 000b 22       		.byte	34
 8433 000c 3B       		.byte	59
 8434 000d 05       		.byte	5
 8435 000e 26       		.byte	38
 8436 000f 04       		.byte	4
 8437 0010 4D       		.byte	77
 8438 0011 0F       		.byte	15
 8439 0012 4E       		.byte	78
 8440 0013 0F       		.byte	15
 8441 0014 F1       		.byte	-15
 8442 0015 00       		.byte	0
 8443 0016 FF       		.byte	-1
 8444 0017 FF       		.byte	-1
 8445              		.section	.rodata.TP2824C_HDA_DataSet,"a",%progbits
 8446              		.align	2
 8447              		.set	.LANCHOR11,. + 0
 8450              	TP2824C_HDA_DataSet:
 8451 0000 0C       		.byte	12
 8452 0001 20       		.byte	32
 8453 0002 2B       		.byte	43
 8454 0003 2D       		.byte	45
 8455 0004 2E       		.byte	46
 8456 0005 30       		.byte	48
 8457 0006 31       		.byte	49
 8458 0007 32       		.byte	50
 8459 0008 33       		.byte	51
 8460 0009 21       		.byte	33
 8461 000a 25       		.byte	37
 8462 000b 10       		.byte	16
 8463 000c 11       		.byte	17
 8464 000d 12       		.byte	18
 8465 000e 14       		.byte	20
 8466 000f FF       		.byte	-1
 8467 0010 03       		.byte	3
 8468 0011 40       		.byte	64
 8469 0012 60       		.byte	96
 8470 0013 48       		.byte	72
 8471 0014 40       		.byte	64
 8472 0015 27       		.byte	39
ARM GAS  /tmp/ccFyOsmB.s 			page 242


 8473 0016 72       		.byte	114
 8474 0017 80       		.byte	-128
 8475 0018 77       		.byte	119
 8476 0019 46       		.byte	70
 8477 001a FE       		.byte	-2
 8478 001b 50       		.byte	80
 8479 001c 50       		.byte	80
 8480 001d 40       		.byte	64
 8481 001e 0A       		.byte	10
 8482 001f FF       		.byte	-1
 8483 0020 03       		.byte	3
 8484 0021 40       		.byte	64
 8485 0022 60       		.byte	96
 8486 0023 48       		.byte	72
 8487 0024 40       		.byte	64
 8488 0025 27       		.byte	39
 8489 0026 88       		.byte	-120
 8490 0027 04       		.byte	4
 8491 0028 23       		.byte	35
 8492 0029 46       		.byte	70
 8493 002a FE       		.byte	-2
 8494 002b 50       		.byte	80
 8495 002c 50       		.byte	80
 8496 002d 40       		.byte	64
 8497 002e 0A       		.byte	10
 8498 002f FF       		.byte	-1
 8499 0030 03       		.byte	3
 8500 0031 38       		.byte	56
 8501 0032 60       		.byte	96
 8502 0033 44       		.byte	68
 8503 0034 40       		.byte	64
 8504 0035 29       		.byte	41
 8505 0036 65       		.byte	101
 8506 0037 78       		.byte	120
 8507 0038 16       		.byte	22
 8508 0039 46       		.byte	70
 8509 003a FE       		.byte	-2
 8510 003b 50       		.byte	80
 8511 003c 50       		.byte	80
 8512 003d 40       		.byte	64
 8513 003e 0A       		.byte	10
 8514 003f FF       		.byte	-1
 8515 0040 03       		.byte	3
 8516 0041 3C       		.byte	60
 8517 0042 60       		.byte	96
 8518 0043 44       		.byte	68
 8519 0044 40       		.byte	64
 8520 0045 29       		.byte	41
 8521 0046 61       		.byte	97
 8522 0047 78       		.byte	120
 8523 0048 16       		.byte	22
 8524 0049 46       		.byte	70
 8525 004a FE       		.byte	-2
 8526 004b 50       		.byte	80
 8527 004c 50       		.byte	80
 8528 004d 40       		.byte	64
 8529 004e 0A       		.byte	10
ARM GAS  /tmp/ccFyOsmB.s 			page 243


 8530 004f FF       		.byte	-1
 8531              		.section	.rodata.TP2824C_HDC_DataSet,"a",%progbits
 8532              		.align	2
 8533              		.set	.LANCHOR14,. + 0
 8536              	TP2824C_HDC_DataSet:
 8537 0000 0C       		.byte	12
 8538 0001 15       		.byte	21
 8539 0002 16       		.byte	22
 8540 0003 17       		.byte	23
 8541 0004 18       		.byte	24
 8542 0005 19       		.byte	25
 8543 0006 1A       		.byte	26
 8544 0007 1C       		.byte	28
 8545 0008 1D       		.byte	29
 8546 0009 20       		.byte	32
 8547 000a 2B       		.byte	43
 8548 000b 2D       		.byte	45
 8549 000c 2E       		.byte	46
 8550 000d 30       		.byte	48
 8551 000e 31       		.byte	49
 8552 000f 32       		.byte	50
 8553 0010 33       		.byte	51
 8554 0011 27       		.byte	39
 8555 0012 28       		.byte	40
 8556 0013 FF       		.byte	-1
 8557 0014 03       		.byte	3
 8558 0015 13       		.byte	19
 8559 0016 08       		.byte	8
 8560 0017 00       		.byte	0
 8561 0018 19       		.byte	25
 8562 0019 D0       		.byte	-48
 8563 001a 25       		.byte	37
 8564 001b 06       		.byte	6
 8565 001c 72       		.byte	114
 8566 001d 30       		.byte	48
 8567 001e 60       		.byte	96
 8568 001f 37       		.byte	55
 8569 0020 40       		.byte	64
 8570 0021 48       		.byte	72
 8571 0022 67       		.byte	103
 8572 0023 6F       		.byte	111
 8573 0024 30       		.byte	48
 8574 0025 5A       		.byte	90
 8575 0026 04       		.byte	4
 8576 0027 FF       		.byte	-1
 8577 0028 03       		.byte	3
 8578 0029 13       		.byte	19
 8579 002a 0A       		.byte	10
 8580 002b 00       		.byte	0
 8581 002c 19       		.byte	25
 8582 002d D0       		.byte	-48
 8583 002e 25       		.byte	37
 8584 002f 06       		.byte	6
 8585 0030 7A       		.byte	122
 8586 0031 3A       		.byte	58
 8587 0032 60       		.byte	96
 8588 0033 42       		.byte	66
ARM GAS  /tmp/ccFyOsmB.s 			page 244


 8589 0034 40       		.byte	64
 8590 0035 48       		.byte	72
 8591 0036 67       		.byte	103
 8592 0037 6F       		.byte	111
 8593 0038 33       		.byte	51
 8594 0039 5A       		.byte	90
 8595 003a 04       		.byte	4
 8596 003b FF       		.byte	-1
 8597 003c 03       		.byte	3
 8598 003d 13       		.byte	19
 8599 003e 60       		.byte	96
 8600 003f 80       		.byte	-128
 8601 0040 29       		.byte	41
 8602 0041 38       		.byte	56
 8603 0042 47       		.byte	71
 8604 0043 09       		.byte	9
 8605 0044 60       		.byte	96
 8606 0045 3C       		.byte	60
 8607 0046 60       		.byte	96
 8608 0047 47       		.byte	71
 8609 0048 40       		.byte	64
 8610 0049 41       		.byte	65
 8611 004a 82       		.byte	-126
 8612 004b 27       		.byte	39
 8613 004c A4       		.byte	-92
 8614 004d 5A       		.byte	90
 8615 004e 04       		.byte	4
 8616 004f FF       		.byte	-1
 8617 0050 03       		.byte	3
 8618 0051 13       		.byte	19
 8619 0052 60       		.byte	96
 8620 0053 80       		.byte	-128
 8621 0054 29       		.byte	41
 8622 0055 38       		.byte	56
 8623 0056 47       		.byte	71
 8624 0057 09       		.byte	9
 8625 0058 60       		.byte	96
 8626 0059 50       		.byte	80
 8627 005a 60       		.byte	96
 8628 005b 54       		.byte	84
 8629 005c 40       		.byte	64
 8630 005d 41       		.byte	65
 8631 005e 82       		.byte	-126
 8632 005f 27       		.byte	39
 8633 0060 A2       		.byte	-94
 8634 0061 5A       		.byte	90
 8635 0062 04       		.byte	4
 8636 0063 FF       		.byte	-1
 8637              		.section	.rodata.TP2824C_MODE_DataSet,"a",%progbits
 8638              		.align	2
 8639              		.set	.LANCHOR7,. + 0
 8642              	TP2824C_MODE_DataSet:
 8643 0000 0C       		.byte	12
 8644 0001 0D       		.byte	13
 8645 0002 20       		.byte	32
 8646 0003 26       		.byte	38
 8647 0004 2B       		.byte	43
ARM GAS  /tmp/ccFyOsmB.s 			page 245


 8648 0005 2D       		.byte	45
 8649 0006 2E       		.byte	46
 8650 0007 30       		.byte	48
 8651 0008 31       		.byte	49
 8652 0009 32       		.byte	50
 8653 000a 33       		.byte	51
 8654 000b 39       		.byte	57
 8655 000c 2C       		.byte	44
 8656 000d 21       		.byte	33
 8657 000e 22       		.byte	34
 8658 000f 23       		.byte	35
 8659 0010 25       		.byte	37
 8660 0011 27       		.byte	39
 8661 0012 28       		.byte	40
 8662 0013 10       		.byte	16
 8663 0014 11       		.byte	17
 8664 0015 12       		.byte	18
 8665 0016 FF       		.byte	-1
 8666 0017 03       		.byte	3
 8667 0018 50       		.byte	80
 8668 0019 30       		.byte	48
 8669 001a 05       		.byte	5
 8670 001b 60       		.byte	96
 8671 001c 30       		.byte	48
 8672 001d 70       		.byte	112
 8673 001e 48       		.byte	72
 8674 001f BB       		.byte	-69
 8675 0020 2E       		.byte	46
 8676 0021 90       		.byte	-112
 8677 0022 1C       		.byte	28
 8678 0023 0A       		.byte	10
 8679 0024 84       		.byte	-124
 8680 0025 36       		.byte	54
 8681 0026 3C       		.byte	60
 8682 0027 FF       		.byte	-1
 8683 0028 2D       		.byte	45
 8684 0029 00       		.byte	0
 8685 002a 00       		.byte	0
 8686 002b 40       		.byte	64
 8687 002c 40       		.byte	64
 8688 002d FF       		.byte	-1
 8689 002e 13       		.byte	19
 8690 002f 50       		.byte	80
 8691 0030 30       		.byte	48
 8692 0031 05       		.byte	5
 8693 0032 60       		.byte	96
 8694 0033 30       		.byte	48
 8695 0034 70       		.byte	112
 8696 0035 48       		.byte	72
 8697 0036 BB       		.byte	-69
 8698 0037 2E       		.byte	46
 8699 0038 90       		.byte	-112
 8700 0039 18       		.byte	24
 8701 003a 0A       		.byte	10
 8702 003b 84       		.byte	-124
 8703 003c 36       		.byte	54
 8704 003d 3C       		.byte	60
ARM GAS  /tmp/ccFyOsmB.s 			page 246


 8705 003e FF       		.byte	-1
 8706 003f 2D       		.byte	45
 8707 0040 00       		.byte	0
 8708 0041 00       		.byte	0
 8709 0042 40       		.byte	64
 8710 0043 40       		.byte	64
 8711 0044 FF       		.byte	-1
 8712 0045 13       		.byte	19
 8713 0046 50       		.byte	80
 8714 0047 40       		.byte	64
 8715 0048 05       		.byte	5
 8716 0049 70       		.byte	112
 8717 004a 68       		.byte	104
 8718 004b 5E       		.byte	94
 8719 004c 62       		.byte	98
 8720 004d BB       		.byte	-69
 8721 004e 96       		.byte	-106
 8722 004f C0       		.byte	-64
 8723 0050 04       		.byte	4
 8724 0051 2A       		.byte	42
 8725 0052 84       		.byte	-124
 8726 0053 36       		.byte	54
 8727 0054 3C       		.byte	60
 8728 0055 FF       		.byte	-1
 8729 0056 2D       		.byte	45
 8730 0057 00       		.byte	0
 8731 0058 50       		.byte	80
 8732 0059 58       		.byte	88
 8733 005a 40       		.byte	64
 8734 005b FF       		.byte	-1
 8735 005c 13       		.byte	19
 8736 005d 51       		.byte	81
 8737 005e 48       		.byte	72
 8738 005f 05       		.byte	5
 8739 0060 70       		.byte	112
 8740 0061 60       		.byte	96
 8741 0062 5E       		.byte	94
 8742 0063 7A       		.byte	122
 8743 0064 4A       		.byte	74
 8744 0065 4D       		.byte	77
 8745 0066 F0       		.byte	-16
 8746 0067 04       		.byte	4
 8747 0068 2A       		.byte	42
 8748 0069 84       		.byte	-124
 8749 006a 37       		.byte	55
 8750 006b 3F       		.byte	63
 8751 006c FF       		.byte	-1
 8752 006d 2D       		.byte	45
 8753 006e 00       		.byte	0
 8754 006f 00       		.byte	0
 8755 0070 40       		.byte	64
 8756 0071 40       		.byte	64
 8757 0072 FF       		.byte	-1
 8758              		.section	.rodata.TP2824C_TVI_FHD_PTZ_DataSet,"a",%progbits
 8759              		.align	2
 8760              		.set	.LANCHOR32,. + 0
 8763              	TP2824C_TVI_FHD_PTZ_DataSet:
ARM GAS  /tmp/ccFyOsmB.s 			page 247


 8764 0000 C0       		.byte	-64
 8765 0001 00       		.byte	0
 8766 0002 C2       		.byte	-62
 8767 0003 0B       		.byte	11
 8768 0004 C3       		.byte	-61
 8769 0005 0C       		.byte	12
 8770 0006 C1       		.byte	-63
 8771 0007 00       		.byte	0
 8772 0008 C4       		.byte	-60
 8773 0009 00       		.byte	0
 8774 000a C5       		.byte	-59
 8775 000b 00       		.byte	0
 8776 000c C6       		.byte	-58
 8777 000d 33       		.byte	51
 8778 000e C7       		.byte	-57
 8779 000f 78       		.byte	120
 8780 0010 C8       		.byte	-56
 8781 0011 21       		.byte	33
 8782 0012 6F       		.byte	111
 8783 0013 40       		.byte	64
 8784 0014 70       		.byte	112
 8785 0015 00       		.byte	0
 8786 0016 55       		.byte	85
 8787 0017 00       		.byte	0
 8788 0018 56       		.byte	86
 8789 0019 02       		.byte	2
 8790 001a 57       		.byte	87
 8791 001b B5       		.byte	-75
 8792 001c 58       		.byte	88
 8793 001d 01       		.byte	1
 8794 001e 59       		.byte	89
 8795 001f 17       		.byte	23
 8796 0020 5A       		.byte	90
 8797 0021 01       		.byte	1
 8798 0022 5B       		.byte	91
 8799 0023 00       		.byte	0
 8800 0024 5C       		.byte	92
 8801 0025 02       		.byte	2
 8802 0026 5D       		.byte	93
 8803 0027 00       		.byte	0
 8804 0028 5E       		.byte	94
 8805 0029 00       		.byte	0
 8806 002a 5F       		.byte	95
 8807 002b 00       		.byte	0
 8808 002c 60       		.byte	96
 8809 002d CE       		.byte	-50
 8810 002e CB       		.byte	-53
 8811 002f 07       		.byte	7
 8812 0030 CC       		.byte	-52
 8813 0031 08       		.byte	8
 8814 0032 CD       		.byte	-51
 8815 0033 00       		.byte	0
 8816 0034 CE       		.byte	-50
 8817 0035 00       		.byte	0
 8818 0036 CF       		.byte	-49
 8819 0037 04       		.byte	4
 8820 0038 D0       		.byte	-48
ARM GAS  /tmp/ccFyOsmB.s 			page 248


 8821 0039 00       		.byte	0
 8822 003a D1       		.byte	-47
 8823 003b 00       		.byte	0
 8824 003c D2       		.byte	-46
 8825 003d 60       		.byte	96
 8826 003e D3       		.byte	-45
 8827 003f 10       		.byte	16
 8828 0040 D4       		.byte	-44
 8829 0041 06       		.byte	6
 8830 0042 D5       		.byte	-43
 8831 0043 BE       		.byte	-66
 8832 0044 D6       		.byte	-42
 8833 0045 39       		.byte	57
 8834 0046 D7       		.byte	-41
 8835 0047 21       		.byte	33
 8836 0048 A7       		.byte	-89
 8837 0049 00       		.byte	0
 8838 004a FF       		.byte	-1
 8839 004b FF       		.byte	-1
 8840              		.section	.rodata.TP2826_DataSet,"a",%progbits
 8841              		.align	2
 8842              		.set	.LANCHOR20,. + 0
 8845              	TP2826_DataSet:
 8846 0000 40       		.byte	64
 8847 0001 04       		.byte	4
 8848 0002 07       		.byte	7
 8849 0003 C0       		.byte	-64
 8850 0004 0B       		.byte	11
 8851 0005 C0       		.byte	-64
 8852 0006 21       		.byte	33
 8853 0007 84       		.byte	-124
 8854 0008 38       		.byte	56
 8855 0009 00       		.byte	0
 8856 000a 3A       		.byte	58
 8857 000b 22       		.byte	34
 8858 000c 3B       		.byte	59
 8859 000d 05       		.byte	5
 8860 000e 26       		.byte	38
 8861 000f 04       		.byte	4
 8862 0010 4D       		.byte	77
 8863 0011 07       		.byte	7
 8864 0012 4E       		.byte	78
 8865 0013 05       		.byte	5
 8866 0014 F1       		.byte	-15
 8867 0015 07       		.byte	7
 8868 0016 FF       		.byte	-1
 8869 0017 FF       		.byte	-1
 8870              		.section	.rodata.TP2826_HDA_DataSet,"a",%progbits
 8871              		.align	2
 8872              		.set	.LANCHOR10,. + 0
 8875              	TP2826_HDA_DataSet:
 8876 0000 0C       		.byte	12
 8877 0001 20       		.byte	32
 8878 0002 2B       		.byte	43
 8879 0003 2D       		.byte	45
 8880 0004 2E       		.byte	46
 8881 0005 30       		.byte	48
ARM GAS  /tmp/ccFyOsmB.s 			page 249


 8882 0006 31       		.byte	49
 8883 0007 32       		.byte	50
 8884 0008 33       		.byte	51
 8885 0009 21       		.byte	33
 8886 000a 25       		.byte	37
 8887 000b FF       		.byte	-1
 8888 000c 03       		.byte	3
 8889 000d 40       		.byte	64
 8890 000e 60       		.byte	96
 8891 000f 48       		.byte	72
 8892 0010 40       		.byte	64
 8893 0011 27       		.byte	39
 8894 0012 72       		.byte	114
 8895 0013 80       		.byte	-128
 8896 0014 77       		.byte	119
 8897 0015 46       		.byte	70
 8898 0016 FE       		.byte	-2
 8899 0017 FF       		.byte	-1
 8900 0018 03       		.byte	3
 8901 0019 40       		.byte	64
 8902 001a 60       		.byte	96
 8903 001b 48       		.byte	72
 8904 001c 40       		.byte	64
 8905 001d 27       		.byte	39
 8906 001e 88       		.byte	-120
 8907 001f 04       		.byte	4
 8908 0020 23       		.byte	35
 8909 0021 46       		.byte	70
 8910 0022 FE       		.byte	-2
 8911 0023 FF       		.byte	-1
 8912 0024 03       		.byte	3
 8913 0025 38       		.byte	56
 8914 0026 60       		.byte	96
 8915 0027 44       		.byte	68
 8916 0028 40       		.byte	64
 8917 0029 29       		.byte	41
 8918 002a 65       		.byte	101
 8919 002b 78       		.byte	120
 8920 002c 16       		.byte	22
 8921 002d 46       		.byte	70
 8922 002e FE       		.byte	-2
 8923 002f FF       		.byte	-1
 8924 0030 03       		.byte	3
 8925 0031 3C       		.byte	60
 8926 0032 60       		.byte	96
 8927 0033 44       		.byte	68
 8928 0034 40       		.byte	64
 8929 0035 29       		.byte	41
 8930 0036 61       		.byte	97
 8931 0037 78       		.byte	120
 8932 0038 16       		.byte	22
 8933 0039 46       		.byte	70
 8934 003a FE       		.byte	-2
 8935 003b FF       		.byte	-1
 8936              		.section	.rodata.TP2826_HDC_DataSet,"a",%progbits
 8937              		.align	2
 8938              		.set	.LANCHOR13,. + 0
ARM GAS  /tmp/ccFyOsmB.s 			page 250


 8941              	TP2826_HDC_DataSet:
 8942 0000 0C       		.byte	12
 8943 0001 15       		.byte	21
 8944 0002 16       		.byte	22
 8945 0003 17       		.byte	23
 8946 0004 18       		.byte	24
 8947 0005 19       		.byte	25
 8948 0006 1A       		.byte	26
 8949 0007 1C       		.byte	28
 8950 0008 1D       		.byte	29
 8951 0009 20       		.byte	32
 8952 000a 2B       		.byte	43
 8953 000b 2D       		.byte	45
 8954 000c 2E       		.byte	46
 8955 000d 30       		.byte	48
 8956 000e 31       		.byte	49
 8957 000f 32       		.byte	50
 8958 0010 33       		.byte	51
 8959 0011 27       		.byte	39
 8960 0012 28       		.byte	40
 8961 0013 FF       		.byte	-1
 8962 0014 03       		.byte	3
 8963 0015 13       		.byte	19
 8964 0016 08       		.byte	8
 8965 0017 00       		.byte	0
 8966 0018 19       		.byte	25
 8967 0019 D0       		.byte	-48
 8968 001a 25       		.byte	37
 8969 001b 06       		.byte	6
 8970 001c 72       		.byte	114
 8971 001d 30       		.byte	48
 8972 001e 60       		.byte	96
 8973 001f 37       		.byte	55
 8974 0020 40       		.byte	64
 8975 0021 48       		.byte	72
 8976 0022 67       		.byte	103
 8977 0023 6F       		.byte	111
 8978 0024 30       		.byte	48
 8979 0025 5A       		.byte	90
 8980 0026 04       		.byte	4
 8981 0027 FF       		.byte	-1
 8982 0028 03       		.byte	3
 8983 0029 13       		.byte	19
 8984 002a 0A       		.byte	10
 8985 002b 00       		.byte	0
 8986 002c 19       		.byte	25
 8987 002d D0       		.byte	-48
 8988 002e 25       		.byte	37
 8989 002f 06       		.byte	6
 8990 0030 7A       		.byte	122
 8991 0031 3A       		.byte	58
 8992 0032 60       		.byte	96
 8993 0033 42       		.byte	66
 8994 0034 40       		.byte	64
 8995 0035 48       		.byte	72
 8996 0036 67       		.byte	103
 8997 0037 6F       		.byte	111
ARM GAS  /tmp/ccFyOsmB.s 			page 251


 8998 0038 33       		.byte	51
 8999 0039 5A       		.byte	90
 9000 003a 04       		.byte	4
 9001 003b FF       		.byte	-1
 9002 003c 03       		.byte	3
 9003 003d 13       		.byte	19
 9004 003e 60       		.byte	96
 9005 003f 80       		.byte	-128
 9006 0040 29       		.byte	41
 9007 0041 38       		.byte	56
 9008 0042 47       		.byte	71
 9009 0043 09       		.byte	9
 9010 0044 60       		.byte	96
 9011 0045 3C       		.byte	60
 9012 0046 60       		.byte	96
 9013 0047 47       		.byte	71
 9014 0048 40       		.byte	64
 9015 0049 41       		.byte	65
 9016 004a 82       		.byte	-126
 9017 004b 27       		.byte	39
 9018 004c A4       		.byte	-92
 9019 004d 5A       		.byte	90
 9020 004e 04       		.byte	4
 9021 004f FF       		.byte	-1
 9022 0050 03       		.byte	3
 9023 0051 13       		.byte	19
 9024 0052 60       		.byte	96
 9025 0053 80       		.byte	-128
 9026 0054 29       		.byte	41
 9027 0055 38       		.byte	56
 9028 0056 47       		.byte	71
 9029 0057 09       		.byte	9
 9030 0058 60       		.byte	96
 9031 0059 50       		.byte	80
 9032 005a 60       		.byte	96
 9033 005b 54       		.byte	84
 9034 005c 40       		.byte	64
 9035 005d 41       		.byte	65
 9036 005e 82       		.byte	-126
 9037 005f 27       		.byte	39
 9038 0060 A2       		.byte	-94
 9039 0061 5A       		.byte	90
 9040 0062 04       		.byte	4
 9041 0063 FF       		.byte	-1
 9042              		.section	.rodata.TP2826_MODE_DataSet,"a",%progbits
 9043              		.align	2
 9044              		.set	.LANCHOR6,. + 0
 9047              	TP2826_MODE_DataSet:
 9048 0000 0C       		.byte	12
 9049 0001 0D       		.byte	13
 9050 0002 20       		.byte	32
 9051 0003 26       		.byte	38
 9052 0004 2B       		.byte	43
 9053 0005 2D       		.byte	45
 9054 0006 2E       		.byte	46
 9055 0007 30       		.byte	48
 9056 0008 31       		.byte	49
ARM GAS  /tmp/ccFyOsmB.s 			page 252


 9057 0009 32       		.byte	50
 9058 000a 33       		.byte	51
 9059 000b 39       		.byte	57
 9060 000c 2C       		.byte	44
 9061 000d 21       		.byte	33
 9062 000e 22       		.byte	34
 9063 000f 23       		.byte	35
 9064 0010 25       		.byte	37
 9065 0011 27       		.byte	39
 9066 0012 28       		.byte	40
 9067 0013 FF       		.byte	-1
 9068 0014 03       		.byte	3
 9069 0015 50       		.byte	80
 9070 0016 30       		.byte	48
 9071 0017 05       		.byte	5
 9072 0018 60       		.byte	96
 9073 0019 30       		.byte	48
 9074 001a 70       		.byte	112
 9075 001b 48       		.byte	72
 9076 001c BB       		.byte	-69
 9077 001d 2E       		.byte	46
 9078 001e 90       		.byte	-112
 9079 001f 1C       		.byte	28
 9080 0020 0A       		.byte	10
 9081 0021 84       		.byte	-124
 9082 0022 36       		.byte	54
 9083 0023 3C       		.byte	60
 9084 0024 FF       		.byte	-1
 9085 0025 2D       		.byte	45
 9086 0026 00       		.byte	0
 9087 0027 FF       		.byte	-1
 9088 0028 13       		.byte	19
 9089 0029 50       		.byte	80
 9090 002a 30       		.byte	48
 9091 002b 05       		.byte	5
 9092 002c 60       		.byte	96
 9093 002d 30       		.byte	48
 9094 002e 70       		.byte	112
 9095 002f 48       		.byte	72
 9096 0030 BB       		.byte	-69
 9097 0031 2E       		.byte	46
 9098 0032 90       		.byte	-112
 9099 0033 18       		.byte	24
 9100 0034 0A       		.byte	10
 9101 0035 84       		.byte	-124
 9102 0036 36       		.byte	54
 9103 0037 3C       		.byte	60
 9104 0038 FF       		.byte	-1
 9105 0039 2D       		.byte	45
 9106 003a 00       		.byte	0
 9107 003b FF       		.byte	-1
 9108 003c 13       		.byte	19
 9109 003d 50       		.byte	80
 9110 003e 40       		.byte	64
 9111 003f 05       		.byte	5
 9112 0040 70       		.byte	112
 9113 0041 68       		.byte	104
ARM GAS  /tmp/ccFyOsmB.s 			page 253


 9114 0042 5E       		.byte	94
 9115 0043 62       		.byte	98
 9116 0044 BB       		.byte	-69
 9117 0045 96       		.byte	-106
 9118 0046 C0       		.byte	-64
 9119 0047 04       		.byte	4
 9120 0048 2A       		.byte	42
 9121 0049 84       		.byte	-124
 9122 004a 36       		.byte	54
 9123 004b 3C       		.byte	60
 9124 004c FF       		.byte	-1
 9125 004d 2D       		.byte	45
 9126 004e 00       		.byte	0
 9127 004f FF       		.byte	-1
 9128 0050 13       		.byte	19
 9129 0051 51       		.byte	81
 9130 0052 48       		.byte	72
 9131 0053 05       		.byte	5
 9132 0054 70       		.byte	112
 9133 0055 60       		.byte	96
 9134 0056 5E       		.byte	94
 9135 0057 7A       		.byte	122
 9136 0058 4A       		.byte	74
 9137 0059 4D       		.byte	77
 9138 005a F0       		.byte	-16
 9139 005b 04       		.byte	4
 9140 005c 2A       		.byte	42
 9141 005d 84       		.byte	-124
 9142 005e 37       		.byte	55
 9143 005f 3F       		.byte	63
 9144 0060 FF       		.byte	-1
 9145 0061 2D       		.byte	45
 9146 0062 00       		.byte	0
 9147 0063 FF       		.byte	-1
 9148              		.section	.rodata.TP2833_DataSet,"a",%progbits
 9149              		.align	2
 9150              		.set	.LANCHOR19,. + 0
 9153              	TP2833_DataSet:
 9154 0000 40       		.byte	64
 9155 0001 04       		.byte	4
 9156 0002 07       		.byte	7
 9157 0003 C0       		.byte	-64
 9158 0004 0B       		.byte	11
 9159 0005 C0       		.byte	-64
 9160 0006 22       		.byte	34
 9161 0007 36       		.byte	54
 9162 0008 38       		.byte	56
 9163 0009 40       		.byte	64
 9164 000a 26       		.byte	38
 9165 000b 04       		.byte	4
 9166 000c 4D       		.byte	77
 9167 000d 03       		.byte	3
 9168 000e 4E       		.byte	78
 9169 000f 03       		.byte	3
 9170 0010 4F       		.byte	79
 9171 0011 01       		.byte	1
 9172 0012 FF       		.byte	-1
ARM GAS  /tmp/ccFyOsmB.s 			page 254


 9173 0013 FF       		.byte	-1
 9174              		.section	.rodata.TP2833_HDA_DataSet,"a",%progbits
 9175              		.align	2
 9176              		.set	.LANCHOR9,. + 0
 9179              	TP2833_HDA_DataSet:
 9180 0000 2B       		.byte	43
 9181 0001 2D       		.byte	45
 9182 0002 2E       		.byte	46
 9183 0003 30       		.byte	48
 9184 0004 31       		.byte	49
 9185 0005 32       		.byte	50
 9186 0006 33       		.byte	51
 9187 0007 FF       		.byte	-1
 9188 0008 70       		.byte	112
 9189 0009 48       		.byte	72
 9190 000a 5E       		.byte	94
 9191 000b 27       		.byte	39
 9192 000c 72       		.byte	114
 9193 000d 80       		.byte	-128
 9194 000e 77       		.byte	119
 9195 000f FF       		.byte	-1
 9196 0010 70       		.byte	112
 9197 0011 48       		.byte	72
 9198 0012 5E       		.byte	94
 9199 0013 27       		.byte	39
 9200 0014 88       		.byte	-120
 9201 0015 04       		.byte	4
 9202 0016 23       		.byte	35
 9203 0017 FF       		.byte	-1
 9204 0018 58       		.byte	88
 9205 0019 45       		.byte	69
 9206 001a 50       		.byte	80
 9207 001b 29       		.byte	41
 9208 001c 65       		.byte	101
 9209 001d 78       		.byte	120
 9210 001e 16       		.byte	22
 9211 001f FF       		.byte	-1
 9212 0020 58       		.byte	88
 9213 0021 45       		.byte	69
 9214 0022 40       		.byte	64
 9215 0023 29       		.byte	41
 9216 0024 61       		.byte	97
 9217 0025 78       		.byte	120
 9218 0026 16       		.byte	22
 9219 0027 FF       		.byte	-1
 9220              		.section	.rodata.TP2833_MODE_DataSet,"a",%progbits
 9221              		.align	2
 9222              		.set	.LANCHOR4,. + 0
 9225              	TP2833_MODE_DataSet:
 9226 0000 0C       		.byte	12
 9227 0001 0D       		.byte	13
 9228 0002 20       		.byte	32
 9229 0003 26       		.byte	38
 9230 0004 2B       		.byte	43
 9231 0005 2D       		.byte	45
 9232 0006 2E       		.byte	46
 9233 0007 30       		.byte	48
ARM GAS  /tmp/ccFyOsmB.s 			page 255


 9234 0008 31       		.byte	49
 9235 0009 32       		.byte	50
 9236 000a 33       		.byte	51
 9237 000b 39       		.byte	57
 9238 000c 18       		.byte	24
 9239 000d FF       		.byte	-1
 9240 000e 03       		.byte	3
 9241 000f 50       		.byte	80
 9242 0010 30       		.byte	48
 9243 0011 05       		.byte	5
 9244 0012 58       		.byte	88
 9245 0013 30       		.byte	48
 9246 0014 70       		.byte	112
 9247 0015 48       		.byte	72
 9248 0016 BB       		.byte	-69
 9249 0017 2E       		.byte	46
 9250 0018 90       		.byte	-112
 9251 0019 0C       		.byte	12
 9252 001a 12       		.byte	18
 9253 001b FF       		.byte	-1
 9254 001c 13       		.byte	19
 9255 001d 50       		.byte	80
 9256 001e 30       		.byte	48
 9257 001f 05       		.byte	5
 9258 0020 58       		.byte	88
 9259 0021 30       		.byte	48
 9260 0022 70       		.byte	112
 9261 0023 48       		.byte	72
 9262 0024 BB       		.byte	-69
 9263 0025 2E       		.byte	46
 9264 0026 90       		.byte	-112
 9265 0027 08       		.byte	8
 9266 0028 12       		.byte	18
 9267 0029 FF       		.byte	-1
 9268 002a 13       		.byte	19
 9269 002b 50       		.byte	80
 9270 002c 40       		.byte	64
 9271 002d 05       		.byte	5
 9272 002e 70       		.byte	112
 9273 002f 68       		.byte	104
 9274 0030 5E       		.byte	94
 9275 0031 62       		.byte	98
 9276 0032 BB       		.byte	-69
 9277 0033 96       		.byte	-106
 9278 0034 C0       		.byte	-64
 9279 0035 04       		.byte	4
 9280 0036 11       		.byte	17
 9281 0037 FF       		.byte	-1
 9282 0038 13       		.byte	19
 9283 0039 51       		.byte	81
 9284 003a 48       		.byte	72
 9285 003b 05       		.byte	5
 9286 003c 70       		.byte	112
 9287 003d 60       		.byte	96
 9288 003e 5E       		.byte	94
 9289 003f 7A       		.byte	122
 9290 0040 4A       		.byte	74
ARM GAS  /tmp/ccFyOsmB.s 			page 256


 9291 0041 4D       		.byte	77
 9292 0042 F0       		.byte	-16
 9293 0043 04       		.byte	4
 9294 0044 11       		.byte	17
 9295 0045 FF       		.byte	-1
 9296              		.section	.rodata.TP2834_Audio_DataSet,"a",%progbits
 9297              		.align	2
 9298              		.set	.LANCHOR21,. + 0
 9301              	TP2834_Audio_DataSet:
 9302 0000 40       		.byte	64
 9303 0001 40       		.byte	64
 9304 0002 00       		.byte	0
 9305 0003 01       		.byte	1
 9306 0004 01       		.byte	1
 9307 0005 02       		.byte	2
 9308 0006 02       		.byte	2
 9309 0007 03       		.byte	3
 9310 0008 03       		.byte	3
 9311 0009 04       		.byte	4
 9312 000a 04       		.byte	4
 9313 000b 11       		.byte	17
 9314 000c 17       		.byte	23
 9315 000d 00       		.byte	0
 9316 000e 18       		.byte	24
 9317 000f 10       		.byte	16
 9318 0010 19       		.byte	25
 9319 0011 0F       		.byte	15
 9320 0012 1A       		.byte	26
 9321 0013 15       		.byte	21
 9322 0014 1B       		.byte	27
 9323 0015 01       		.byte	1
 9324 0016 37       		.byte	55
 9325 0017 20       		.byte	32
 9326 0018 1D       		.byte	29
 9327 0019 08       		.byte	8
 9328 001a 1D       		.byte	29
 9329 001b 00       		.byte	0
 9330 001c 3C       		.byte	60
 9331 001d 3F       		.byte	63
 9332 001e 3C       		.byte	60
 9333 001f 00       		.byte	0
 9334 0020 3D       		.byte	61
 9335 0021 01       		.byte	1
 9336 0022 FF       		.byte	-1
 9337 0023 FF       		.byte	-1
 9338              		.section	.rodata.TP2834_DataSet,"a",%progbits
 9339              		.align	2
 9340              		.set	.LANCHOR17,. + 0
 9343              	TP2834_DataSet:
 9344 0000 40       		.byte	64
 9345 0001 04       		.byte	4
 9346 0002 07       		.byte	7
 9347 0003 C0       		.byte	-64
 9348 0004 0B       		.byte	11
 9349 0005 C0       		.byte	-64
 9350 0006 3A       		.byte	58
 9351 0007 70       		.byte	112
ARM GAS  /tmp/ccFyOsmB.s 			page 257


 9352 0008 26       		.byte	38
 9353 0009 01       		.byte	1
 9354 000a 4D       		.byte	77
 9355 000b 0F       		.byte	15
 9356 000c 4E       		.byte	78
 9357 000d 0F       		.byte	15
 9358 000e FF       		.byte	-1
 9359 000f FF       		.byte	-1
 9360              		.section	.rodata.TP2834_MODE_DataSet,"a",%progbits
 9361              		.align	2
 9362              		.set	.LANCHOR5,. + 0
 9365              	TP2834_MODE_DataSet:
 9366 0000 0C       		.byte	12
 9367 0001 0D       		.byte	13
 9368 0002 20       		.byte	32
 9369 0003 26       		.byte	38
 9370 0004 2B       		.byte	43
 9371 0005 2D       		.byte	45
 9372 0006 2E       		.byte	46
 9373 0007 30       		.byte	48
 9374 0008 31       		.byte	49
 9375 0009 32       		.byte	50
 9376 000a 33       		.byte	51
 9377 000b 39       		.byte	57
 9378 000c FF       		.byte	-1
 9379 000d 03       		.byte	3
 9380 000e 10       		.byte	16
 9381 000f 60       		.byte	96
 9382 0010 02       		.byte	2
 9383 0011 58       		.byte	88
 9384 0012 30       		.byte	48
 9385 0013 70       		.byte	112
 9386 0014 48       		.byte	72
 9387 0015 BB       		.byte	-69
 9388 0016 2E       		.byte	46
 9389 0017 90       		.byte	-112
 9390 0018 8C       		.byte	-116
 9391 0019 FF       		.byte	-1
 9392 001a 03       		.byte	3
 9393 001b 10       		.byte	16
 9394 001c 60       		.byte	96
 9395 001d 02       		.byte	2
 9396 001e 58       		.byte	88
 9397 001f 30       		.byte	48
 9398 0020 70       		.byte	112
 9399 0021 48       		.byte	72
 9400 0022 BB       		.byte	-69
 9401 0023 2E       		.byte	46
 9402 0024 90       		.byte	-112
 9403 0025 88       		.byte	-120
 9404 0026 FF       		.byte	-1
 9405 0027 43       		.byte	67
 9406 0028 10       		.byte	16
 9407 0029 A0       		.byte	-96
 9408 002a 12       		.byte	18
 9409 002b 70       		.byte	112
 9410 002c 68       		.byte	104
ARM GAS  /tmp/ccFyOsmB.s 			page 258


 9411 002d 5E       		.byte	94
 9412 002e 62       		.byte	98
 9413 002f BB       		.byte	-69
 9414 0030 96       		.byte	-106
 9415 0031 C0       		.byte	-64
 9416 0032 84       		.byte	-124
 9417 0033 FF       		.byte	-1
 9418 0034 43       		.byte	67
 9419 0035 11       		.byte	17
 9420 0036 B0       		.byte	-80
 9421 0037 02       		.byte	2
 9422 0038 70       		.byte	112
 9423 0039 60       		.byte	96
 9424 003a 5E       		.byte	94
 9425 003b 7A       		.byte	122
 9426 003c 4A       		.byte	74
 9427 003d 4D       		.byte	77
 9428 003e F0       		.byte	-16
 9429 003f 84       		.byte	-124
 9430 0040 FF       		.byte	-1
 9431              		.section	.rodata.TP2853C_DataSet,"a",%progbits
 9432              		.align	2
 9433              		.set	.LANCHOR18,. + 0
 9436              	TP2853C_DataSet:
 9437 0000 40       		.byte	64
 9438 0001 04       		.byte	4
 9439 0002 07       		.byte	7
 9440 0003 C0       		.byte	-64
 9441 0004 0B       		.byte	11
 9442 0005 C0       		.byte	-64
 9443 0006 21       		.byte	33
 9444 0007 84       		.byte	-124
 9445 0008 38       		.byte	56
 9446 0009 00       		.byte	0
 9447 000a 3A       		.byte	58
 9448 000b 32       		.byte	50
 9449 000c 3B       		.byte	59
 9450 000d 05       		.byte	5
 9451 000e 26       		.byte	38
 9452 000f 04       		.byte	4
 9453 0010 4D       		.byte	77
 9454 0011 03       		.byte	3
 9455 0012 4E       		.byte	78
 9456 0013 03       		.byte	3
 9457 0014 4F       		.byte	79
 9458 0015 01       		.byte	1
 9459 0016 F5       		.byte	-11
 9460 0017 F0       		.byte	-16
 9461 0018 F1       		.byte	-15
 9462 0019 07       		.byte	7
 9463 001a FF       		.byte	-1
 9464 001b FF       		.byte	-1
 9465              		.section	.rodata.TP2853C_HDA_DataSet,"a",%progbits
 9466              		.align	2
 9467              		.set	.LANCHOR8,. + 0
 9470              	TP2853C_HDA_DataSet:
 9471 0000 2B       		.byte	43
ARM GAS  /tmp/ccFyOsmB.s 			page 259


 9472 0001 2D       		.byte	45
 9473 0002 2E       		.byte	46
 9474 0003 30       		.byte	48
 9475 0004 31       		.byte	49
 9476 0005 32       		.byte	50
 9477 0006 33       		.byte	51
 9478 0007 21       		.byte	33
 9479 0008 25       		.byte	37
 9480 0009 FF       		.byte	-1
 9481 000a 70       		.byte	112
 9482 000b 48       		.byte	72
 9483 000c 5E       		.byte	94
 9484 000d 27       		.byte	39
 9485 000e 72       		.byte	114
 9486 000f 80       		.byte	-128
 9487 0010 77       		.byte	119
 9488 0011 44       		.byte	68
 9489 0012 F0       		.byte	-16
 9490 0013 FF       		.byte	-1
 9491 0014 70       		.byte	112
 9492 0015 48       		.byte	72
 9493 0016 5E       		.byte	94
 9494 0017 27       		.byte	39
 9495 0018 88       		.byte	-120
 9496 0019 04       		.byte	4
 9497 001a 23       		.byte	35
 9498 001b 44       		.byte	68
 9499 001c F0       		.byte	-16
 9500 001d FF       		.byte	-1
 9501 001e 58       		.byte	88
 9502 001f 45       		.byte	69
 9503 0020 50       		.byte	80
 9504 0021 29       		.byte	41
 9505 0022 65       		.byte	101
 9506 0023 78       		.byte	120
 9507 0024 16       		.byte	22
 9508 0025 44       		.byte	68
 9509 0026 F0       		.byte	-16
 9510 0027 FF       		.byte	-1
 9511 0028 58       		.byte	88
 9512 0029 45       		.byte	69
 9513 002a 40       		.byte	64
 9514 002b 29       		.byte	41
 9515 002c 61       		.byte	97
 9516 002d 78       		.byte	120
 9517 002e 16       		.byte	22
 9518 002f 44       		.byte	68
 9519 0030 F0       		.byte	-16
 9520 0031 FF       		.byte	-1
 9521              		.section	.rodata.TP2853C_HDC_DataSet,"a",%progbits
 9522              		.align	2
 9523              		.set	.LANCHOR12,. + 0
 9526              	TP2853C_HDC_DataSet:
 9527 0000 15       		.byte	21
 9528 0001 16       		.byte	22
 9529 0002 20       		.byte	32
 9530 0003 2B       		.byte	43
ARM GAS  /tmp/ccFyOsmB.s 			page 260


 9531 0004 2D       		.byte	45
 9532 0005 2E       		.byte	46
 9533 0006 30       		.byte	48
 9534 0007 31       		.byte	49
 9535 0008 32       		.byte	50
 9536 0009 33       		.byte	51
 9537 000a 27       		.byte	39
 9538 000b 28       		.byte	40
 9539 000c FF       		.byte	-1
 9540 000d 13       		.byte	19
 9541 000e 40       		.byte	64
 9542 000f 50       		.byte	80
 9543 0010 60       		.byte	96
 9544 0011 42       		.byte	66
 9545 0012 40       		.byte	64
 9546 0013 48       		.byte	72
 9547 0014 67       		.byte	103
 9548 0015 2E       		.byte	46
 9549 0016 90       		.byte	-112
 9550 0017 5A       		.byte	90
 9551 0018 04       		.byte	4
 9552 0019 FF       		.byte	-1
 9553 001a 13       		.byte	19
 9554 001b 40       		.byte	64
 9555 001c 50       		.byte	80
 9556 001d 60       		.byte	96
 9557 001e 42       		.byte	66
 9558 001f 40       		.byte	64
 9559 0020 48       		.byte	72
 9560 0021 67       		.byte	103
 9561 0022 2E       		.byte	46
 9562 0023 90       		.byte	-112
 9563 0024 5A       		.byte	90
 9564 0025 04       		.byte	4
 9565 0026 FF       		.byte	-1
 9566 0027 13       		.byte	19
 9567 0028 20       		.byte	32
 9568 0029 48       		.byte	72
 9569 002a 60       		.byte	96
 9570 002b 45       		.byte	69
 9571 002c 40       		.byte	64
 9572 002d 41       		.byte	65
 9573 002e 83       		.byte	-125
 9574 002f 2E       		.byte	46
 9575 0030 90       		.byte	-112
 9576 0031 5A       		.byte	90
 9577 0032 04       		.byte	4
 9578 0033 FF       		.byte	-1
 9579 0034 13       		.byte	19
 9580 0035 84       		.byte	-124
 9581 0036 48       		.byte	72
 9582 0037 60       		.byte	96
 9583 0038 45       		.byte	69
 9584 0039 40       		.byte	64
 9585 003a 41       		.byte	65
 9586 003b 83       		.byte	-125
 9587 003c 2E       		.byte	46
ARM GAS  /tmp/ccFyOsmB.s 			page 261


 9588 003d 90       		.byte	-112
 9589 003e 5A       		.byte	90
 9590 003f 04       		.byte	4
 9591 0040 FF       		.byte	-1
 9592              		.section	.rodata.TP2853C_MODE_DataSet,"a",%progbits
 9593              		.align	2
 9594              		.set	.LANCHOR3,. + 0
 9597              	TP2853C_MODE_DataSet:
 9598 0000 0C       		.byte	12
 9599 0001 0D       		.byte	13
 9600 0002 20       		.byte	32
 9601 0003 26       		.byte	38
 9602 0004 2B       		.byte	43
 9603 0005 2D       		.byte	45
 9604 0006 2E       		.byte	46
 9605 0007 30       		.byte	48
 9606 0008 31       		.byte	49
 9607 0009 32       		.byte	50
 9608 000a 33       		.byte	51
 9609 000b 39       		.byte	57
 9610 000c 2C       		.byte	44
 9611 000d 21       		.byte	33
 9612 000e 25       		.byte	37
 9613 000f 27       		.byte	39
 9614 0010 28       		.byte	40
 9615 0011 FF       		.byte	-1
 9616 0012 03       		.byte	3
 9617 0013 50       		.byte	80
 9618 0014 30       		.byte	48
 9619 0015 05       		.byte	5
 9620 0016 60       		.byte	96
 9621 0017 30       		.byte	48
 9622 0018 70       		.byte	112
 9623 0019 48       		.byte	72
 9624 001a BB       		.byte	-69
 9625 001b 2E       		.byte	46
 9626 001c 90       		.byte	-112
 9627 001d 0C       		.byte	12
 9628 001e 0A       		.byte	10
 9629 001f 84       		.byte	-124
 9630 0020 F0       		.byte	-16
 9631 0021 2D       		.byte	45
 9632 0022 00       		.byte	0
 9633 0023 FF       		.byte	-1
 9634 0024 13       		.byte	19
 9635 0025 50       		.byte	80
 9636 0026 30       		.byte	48
 9637 0027 05       		.byte	5
 9638 0028 60       		.byte	96
 9639 0029 30       		.byte	48
 9640 002a 70       		.byte	112
 9641 002b 48       		.byte	72
 9642 002c BB       		.byte	-69
 9643 002d 2E       		.byte	46
 9644 002e 90       		.byte	-112
 9645 002f 08       		.byte	8
 9646 0030 0A       		.byte	10
ARM GAS  /tmp/ccFyOsmB.s 			page 262


 9647 0031 84       		.byte	-124
 9648 0032 F0       		.byte	-16
 9649 0033 2D       		.byte	45
 9650 0034 00       		.byte	0
 9651 0035 FF       		.byte	-1
 9652 0036 13       		.byte	19
 9653 0037 50       		.byte	80
 9654 0038 40       		.byte	64
 9655 0039 05       		.byte	5
 9656 003a 70       		.byte	112
 9657 003b 68       		.byte	104
 9658 003c 5E       		.byte	94
 9659 003d 62       		.byte	98
 9660 003e BB       		.byte	-69
 9661 003f 96       		.byte	-106
 9662 0040 C0       		.byte	-64
 9663 0041 04       		.byte	4
 9664 0042 2A       		.byte	42
 9665 0043 84       		.byte	-124
 9666 0044 F0       		.byte	-16
 9667 0045 2D       		.byte	45
 9668 0046 00       		.byte	0
 9669 0047 FF       		.byte	-1
 9670 0048 13       		.byte	19
 9671 0049 51       		.byte	81
 9672 004a 48       		.byte	72
 9673 004b 05       		.byte	5
 9674 004c 70       		.byte	112
 9675 004d 60       		.byte	96
 9676 004e 5E       		.byte	94
 9677 004f 7A       		.byte	122
 9678 0050 4A       		.byte	74
 9679 0051 4D       		.byte	77
 9680 0052 F0       		.byte	-16
 9681 0053 04       		.byte	4
 9682 0054 2A       		.byte	42
 9683 0055 84       		.byte	-124
 9684 0056 F0       		.byte	-16
 9685 0057 2D       		.byte	45
 9686 0058 00       		.byte	0
 9687 0059 FF       		.byte	-1
 9688              		.text
 9689              	.Letext0:
 9690              		.file 2 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_
 9691              		.file 3 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 9692              		.file 4 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 9693              		.file 5 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 9694              		.file 6 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 9695              		.file 7 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 9696              		.file 8 "VS4210/VXIS_Extern_Define.h"
 9697              		.file 9 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 9698              		.file 10 "TP2824/tpinc/TP2802.h"
 9699              		.file 11 "sw_i2c/VX_swi2c.h"
 9700              		.file 12 "VS4210/VS4210.h"
 9701              		.file 13 "Drivers/CMSIS/Include/core_cm3.h"
 9702              		.file 14 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 9703              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccFyOsmB.s 			page 263


 9704              		.file 16 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdio.h"
 9705              		.file 17 "VS4210/Printf.h"
 9706              		.file 18 "VS4210/keyremo.h"
 9707              		.file 19 "<built-in>"
ARM GAS  /tmp/ccFyOsmB.s 			page 264


DEFINED SYMBOLS
                            *ABS*:0000000000000000 TP2802.c
     /tmp/ccFyOsmB.s:16     .text.tp2824_reset_default:0000000000000000 $t
     /tmp/ccFyOsmB.s:22     .text.tp2824_reset_default:0000000000000000 tp2824_reset_default
     /tmp/ccFyOsmB.s:45     .text.tp28xx_SYSCLK_V1:0000000000000000 $t
     /tmp/ccFyOsmB.s:51     .text.tp28xx_SYSCLK_V1:0000000000000000 tp28xx_SYSCLK_V1
     /tmp/ccFyOsmB.s:94     .text.tp28xx_SYSCLK_V1:0000000000000028 $d
     /tmp/ccFyOsmB.s:99     .text.tp28xx_SYSCLK_V2:0000000000000000 $t
     /tmp/ccFyOsmB.s:105    .text.tp28xx_SYSCLK_V2:0000000000000000 tp28xx_SYSCLK_V2
     /tmp/ccFyOsmB.s:150    .text.tp28xx_SYSCLK_V2:000000000000002c $d
     /tmp/ccFyOsmB.s:155    .text.tp2853C_reset_default:0000000000000000 $t
     /tmp/ccFyOsmB.s:161    .text.tp2853C_reset_default:0000000000000000 tp2853C_reset_default
     /tmp/ccFyOsmB.s:208    .text.TP28xx_reset_default:0000000000000000 $t
     /tmp/ccFyOsmB.s:214    .text.TP28xx_reset_default:0000000000000000 TP28xx_reset_default
     /tmp/ccFyOsmB.s:263    .text.I2CDeviceSet1:0000000000000000 $t
     /tmp/ccFyOsmB.s:270    .text.I2CDeviceSet1:0000000000000000 I2CDeviceSet1
     /tmp/ccFyOsmB.s:310    .text.I2CDeviceSet2:0000000000000000 $t
     /tmp/ccFyOsmB.s:317    .text.I2CDeviceSet2:0000000000000000 I2CDeviceSet2
     /tmp/ccFyOsmB.s:361    .text.SetRegPage:0000000000000000 $t
     /tmp/ccFyOsmB.s:368    .text.SetRegPage:0000000000000000 SetRegPage
     /tmp/ccFyOsmB.s:392    .text.Set_VidRes:0000000000000000 $t
     /tmp/ccFyOsmB.s:399    .text.Set_VidRes:0000000000000000 Set_VidRes
     /tmp/ccFyOsmB.s:422    .text.Set_VidRes:0000000000000012 $d
     /tmp/ccFyOsmB.s:461    .text.Set_VidRes:0000000000000060 $t
     /tmp/ccFyOsmB.s:888    .text.Set_VidRes:0000000000000278 $d
                            *COM*:0000000000000001 mode
                            *COM*:0000000000000001 ManVidResRx
                            *COM*:0000000000000001 chip
     /tmp/ccFyOsmB.s:921    .text.Set_HDA:0000000000000000 $t
     /tmp/ccFyOsmB.s:928    .text.Set_HDA:0000000000000000 Set_HDA
     /tmp/ccFyOsmB.s:948    .text.Set_HDA:000000000000000e $d
     /tmp/ccFyOsmB.s:962    .text.Set_HDA:000000000000001c $t
     /tmp/ccFyOsmB.s:1056   .text.Set_HDA:0000000000000098 $d
     /tmp/ccFyOsmB.s:1066   .text.Set_HDC:0000000000000000 $t
     /tmp/ccFyOsmB.s:1073   .text.Set_HDC:0000000000000000 Set_HDC
     /tmp/ccFyOsmB.s:1093   .text.Set_HDC:000000000000000e $d
     /tmp/ccFyOsmB.s:1107   .text.Set_HDC:000000000000001c $t
     /tmp/ccFyOsmB.s:1201   .text.Set_HDC:000000000000009c $d
     /tmp/ccFyOsmB.s:1210   .text.Det_VidRes:0000000000000000 $t
     /tmp/ccFyOsmB.s:1217   .text.Det_VidRes:0000000000000000 Det_VidRes
     /tmp/ccFyOsmB.s:1267   .text.Det_VidRes:000000000000002c $d
     /tmp/ccFyOsmB.s:1273   .text.Det_VideoLoss:0000000000000000 $t
     /tmp/ccFyOsmB.s:1280   .text.Det_VideoLoss:0000000000000000 Det_VideoLoss
     /tmp/ccFyOsmB.s:1325   .text.Det_VideoLoss:000000000000002c $d
     /tmp/ccFyOsmB.s:1331   .text.ManualAGC:0000000000000000 $t
     /tmp/ccFyOsmB.s:1338   .text.ManualAGC:0000000000000000 ManualAGC
     /tmp/ccFyOsmB.s:1425   .text.ManualAGC:0000000000000064 $d
     /tmp/ccFyOsmB.s:1430   .text.ReadGain:0000000000000000 $t
     /tmp/ccFyOsmB.s:1437   .text.ReadGain:0000000000000000 ReadGain
     /tmp/ccFyOsmB.s:1463   .text.SetCGain:0000000000000000 $t
     /tmp/ccFyOsmB.s:1470   .text.SetCGain:0000000000000000 SetCGain
     /tmp/ccFyOsmB.s:1620   .text.INPUT_VIDEO_CHECK:0000000000000000 $t
     /tmp/ccFyOsmB.s:1627   .text.INPUT_VIDEO_CHECK:0000000000000000 INPUT_VIDEO_CHECK
     /tmp/ccFyOsmB.s:1642   .text.INPUT_VIDEO_CHECK:000000000000000c $d
     /tmp/ccFyOsmB.s:1939   .text.INPUT_VIDEO_CHECK:0000000000000114 $d
     /tmp/ccFyOsmB.s:1944   .text.Det_HLock:0000000000000000 $t
     /tmp/ccFyOsmB.s:1951   .text.Det_HLock:0000000000000000 Det_HLock
ARM GAS  /tmp/ccFyOsmB.s 			page 265


     /tmp/ccFyOsmB.s:1985   .text.Set_ResWithAutoDet:0000000000000000 $t
     /tmp/ccFyOsmB.s:1992   .text.Set_ResWithAutoDet:0000000000000000 Set_ResWithAutoDet
     /tmp/ccFyOsmB.s:2063   .text.Set_ResWithAutoDet:0000000000000044 $d
     /tmp/ccFyOsmB.s:2068   .text.Scan_Channels:0000000000000000 $t
     /tmp/ccFyOsmB.s:2075   .text.Scan_Channels:0000000000000000 Scan_Channels
     /tmp/ccFyOsmB.s:2132   .text.Set_PLL_StartUp:0000000000000000 $t
     /tmp/ccFyOsmB.s:2139   .text.Set_PLL_StartUp:0000000000000000 Set_PLL_StartUp
     /tmp/ccFyOsmB.s:2174   .text.Init_TP280x_RegSet:0000000000000000 $t
     /tmp/ccFyOsmB.s:2181   .text.Init_TP280x_RegSet:0000000000000000 Init_TP280x_RegSet
     /tmp/ccFyOsmB.s:2265   .text.Init_TP280x_RegSet:0000000000000064 $d
     /tmp/ccFyOsmB.s:2303   .text.Init_TP280x_RegSet:000000000000008a $t
     /tmp/ccFyOsmB.s:2527   .text.Init_TP280x_RegSet:0000000000000194 $d
                            *COM*:0000000000000001 TVII2CAddress
                            *COM*:0000000000000001 revision
                            *COM*:0000000000000004 flag_CVBS
                            *COM*:0000000000000004 flag_AUDIO
                            *COM*:0000000000000004 flag_MEGA
                            *COM*:0000000000000001 CurRes
                            *COM*:0000000000000001 count
                            *COM*:0000000000000001 state
                            *COM*:0000000000000001 std
     /tmp/ccFyOsmB.s:2556   .text.ConvertData:0000000000000000 $t
     /tmp/ccFyOsmB.s:2563   .text.ConvertData:0000000000000000 ConvertData
     /tmp/ccFyOsmB.s:2642   .text.ConvertData:0000000000000050 $d
                            *COM*:0000000000000002 PTZ_pelco
                            *COM*:0000000000000010 PTZ_buf
     /tmp/ccFyOsmB.s:2648   .text.SwapBit:0000000000000000 $t
     /tmp/ccFyOsmB.s:2655   .text.SwapBit:0000000000000000 SwapBit
     /tmp/ccFyOsmB.s:2748   .text.SwapBit:0000000000000058 $d
                            *COM*:0000000000000001 crc
     /tmp/ccFyOsmB.s:2754   .text.AHDBitsReverse:0000000000000000 $t
     /tmp/ccFyOsmB.s:2761   .text.AHDBitsReverse:0000000000000000 AHDBitsReverse
     /tmp/ccFyOsmB.s:2862   .text.HDC_SetData:0000000000000000 $t
     /tmp/ccFyOsmB.s:2869   .text.HDC_SetData:0000000000000000 HDC_SetData
     /tmp/ccFyOsmB.s:2925   .text.HDC_SetData:0000000000000044 $d
     /tmp/ccFyOsmB.s:2930   .text.HDA_SetData:0000000000000000 $t
     /tmp/ccFyOsmB.s:2937   .text.HDA_SetData:0000000000000000 HDA_SetData
     /tmp/ccFyOsmB.s:2982   .text.HDA_SetData:000000000000002c $d
     /tmp/ccFyOsmB.s:2987   .text.TVICommandToAHData:0000000000000000 $t
     /tmp/ccFyOsmB.s:2994   .text.TVICommandToAHData:0000000000000000 TVICommandToAHData
     /tmp/ccFyOsmB.s:3314   .text.TVICommandToAHData:00000000000001b8 $d
                            *COM*:0000000000000001 TVI_speed
                            *COM*:0000000000000001 AHDcmd3
                            *COM*:0000000000000001 presetNum
                            *COM*:0000000000000001 AHDcmd4
                            *COM*:0000000000000001 TVI_Command
                            *COM*:0000000000000001 AHDcmd1
                            *COM*:0000000000000001 AHDcmd2
     /tmp/ccFyOsmB.s:3325   .text.ACPSTOPCOMMAND:0000000000000000 $t
     /tmp/ccFyOsmB.s:3332   .text.ACPSTOPCOMMAND:0000000000000000 ACPSTOPCOMMAND
     /tmp/ccFyOsmB.s:3417   .text.Get_2824cIrq:0000000000000000 $t
     /tmp/ccFyOsmB.s:3424   .text.Get_2824cIrq:0000000000000000 Get_2824cIrq
     /tmp/ccFyOsmB.s:3961   .text.Get_2824cIrq:00000000000002d8 $d
                            *COM*:0000000000000004 ptztxflag
                            *COM*:000000000000001a tpRxD
                            *COM*:000000000000000c COCRX4
                            *COM*:000000000000000c COCRX3
ARM GAS  /tmp/ccFyOsmB.s 			page 266


                            *COM*:000000000000000c COCRX2
     /tmp/ccFyOsmB.s:3982   .text.Get_2824cIrq:0000000000000320 $t
     /tmp/ccFyOsmB.s:4467   .text.Get_2824cIrq:00000000000005ae $d
     /tmp/ccFyOsmB.s:4477   .text.Get_2824cIrq:00000000000005b8 $t
     /tmp/ccFyOsmB.s:4528   .text.Get_2824cIrq:0000000000000600 $d
                            *COM*:000000000000000c COCRX1
                            *COM*:0000000000000001 TVI_Chksum
     /tmp/ccFyOsmB.s:4548   .text.Get_2824cIrq:0000000000000648 $t
     /tmp/ccFyOsmB.s:4791   .text.Get_2824cIrq:00000000000007b8 $d
     /tmp/ccFyOsmB.s:4806   .text.TP2824_PTZ_init:0000000000000000 $t
     /tmp/ccFyOsmB.s:4813   .text.TP2824_PTZ_init:0000000000000000 TP2824_PTZ_init
     /tmp/ccFyOsmB.s:4994   .text.TP2824_PTZ_mode:0000000000000000 $t
     /tmp/ccFyOsmB.s:5001   .text.TP2824_PTZ_mode:0000000000000000 TP2824_PTZ_mode
     /tmp/ccFyOsmB.s:5049   .text.TP2824_PTZ_mode:000000000000002c $d
     /tmp/ccFyOsmB.s:5055   .text.TP2824C_RX_init:0000000000000000 $t
     /tmp/ccFyOsmB.s:5062   .text.TP2824C_RX_init:0000000000000000 TP2824C_RX_init
     /tmp/ccFyOsmB.s:5101   .text.TP2824C_RX_init:0000000000000020 $d
     /tmp/ccFyOsmB.s:5106   .text.TP2824C_PTZ_mode:0000000000000000 $t
     /tmp/ccFyOsmB.s:5113   .text.TP2824C_PTZ_mode:0000000000000000 TP2824C_PTZ_mode
     /tmp/ccFyOsmB.s:5157   .text.TP2824C_PTZ_mode:0000000000000024 $d
     /tmp/ccFyOsmB.s:5163   .text.HDA_SetACPV2Data:0000000000000000 $t
     /tmp/ccFyOsmB.s:5170   .text.HDA_SetACPV2Data:0000000000000000 HDA_SetACPV2Data
     /tmp/ccFyOsmB.s:5245   .text.TP2824C_StartTX:0000000000000000 $t
     /tmp/ccFyOsmB.s:5252   .text.TP2824C_StartTX:0000000000000000 TP2824C_StartTX
     /tmp/ccFyOsmB.s:5324   .text.COC_test:0000000000000000 $t
     /tmp/ccFyOsmB.s:5331   .text.COC_test:0000000000000000 COC_test
     /tmp/ccFyOsmB.s:5362   .text.COC_test:0000000000000020 $d
     /tmp/ccFyOsmB.s:5371   .text.Init_COC_PTZOUT1:0000000000000000 $t
     /tmp/ccFyOsmB.s:5378   .text.Init_COC_PTZOUT1:0000000000000000 Init_COC_PTZOUT1
     /tmp/ccFyOsmB.s:5563   .text.Init_COC_PTZOUT1:0000000000000114 $d
     /tmp/ccFyOsmB.s:5568   .text.EQ_Detect:0000000000000000 $t
     /tmp/ccFyOsmB.s:5575   .text.EQ_Detect:0000000000000000 EQ_Detect
     /tmp/ccFyOsmB.s:6108   .text.EQ_Detect:00000000000002b4 $d
                            *COM*:0000000000000001 flag_LOCKED
                            *COM*:0000000000000004 sywd
                            *COM*:0000000000000001 CurCH
     /tmp/ccFyOsmB.s:6133   .text.EQ_Detect:0000000000000310 $t
     /tmp/ccFyOsmB.s:6608   .text.EQ_Detect:0000000000000608 $d
                            *COM*:0000000000000004 egain
     /tmp/ccFyOsmB.s:6628   .text.EQ_Detect:000000000000064c $t
     /tmp/ccFyOsmB.s:6974   .text.EQ_Detect:0000000000000868 $d
     /tmp/ccFyOsmB.s:7001   .text.Set_Mirror_COC:0000000000000000 $t
     /tmp/ccFyOsmB.s:7008   .text.Set_Mirror_COC:0000000000000000 Set_Mirror_COC
     /tmp/ccFyOsmB.s:7790   .rodata.TP2802_FORMAT_DataSet:0000000000000000 TP2802_FORMAT_DataSet
     /tmp/ccFyOsmB.s:8346   .rodata.TP2824C_CVIHD_PTZ_DataSet:0000000000000000 TP2824C_CVIHD_PTZ_DataSet
     /tmp/ccFyOsmB.s:8272   .rodata.TP2824C_CVBS_PTZ_DataSet:0000000000000000 TP2824C_CVBS_PTZ_DataSet
     /tmp/ccFyOsmB.s:8170   .rodata.TP2824C_AHD_FHD_PTZ_DataSet:0000000000000000 TP2824C_AHD_FHD_PTZ_DataSet
     /tmp/ccFyOsmB.s:8763   .rodata.TP2824C_TVI_FHD_PTZ_DataSet:0000000000000000 TP2824C_TVI_FHD_PTZ_DataSet
     /tmp/ccFyOsmB.s:7704   .rodata.TP2802D_DataSet:0000000000000000 TP2802D_DataSet
     /tmp/ccFyOsmB.s:8042   .rodata.TP2822_DataSet:0000000000000000 TP2822_DataSet
     /tmp/ccFyOsmB.s:8099   .rodata.TP2823_MODE_DataSet:0000000000000000 TP2823_MODE_DataSet
     /tmp/ccFyOsmB.s:8072   .rodata.TP2823_DataSet:0000000000000000 TP2823_DataSet
     /tmp/ccFyOsmB.s:9365   .rodata.TP2834_MODE_DataSet:0000000000000000 TP2834_MODE_DataSet
     /tmp/ccFyOsmB.s:9343   .rodata.TP2834_DataSet:0000000000000000 TP2834_DataSet
     /tmp/ccFyOsmB.s:9179   .rodata.TP2833_HDA_DataSet:0000000000000000 TP2833_HDA_DataSet
     /tmp/ccFyOsmB.s:9225   .rodata.TP2833_MODE_DataSet:0000000000000000 TP2833_MODE_DataSet
     /tmp/ccFyOsmB.s:9153   .rodata.TP2833_DataSet:0000000000000000 TP2833_DataSet
ARM GAS  /tmp/ccFyOsmB.s 			page 267


     /tmp/ccFyOsmB.s:9301   .rodata.TP2834_Audio_DataSet:0000000000000000 TP2834_Audio_DataSet
     /tmp/ccFyOsmB.s:9526   .rodata.TP2853C_HDC_DataSet:0000000000000000 TP2853C_HDC_DataSet
     /tmp/ccFyOsmB.s:9470   .rodata.TP2853C_HDA_DataSet:0000000000000000 TP2853C_HDA_DataSet
     /tmp/ccFyOsmB.s:9597   .rodata.TP2853C_MODE_DataSet:0000000000000000 TP2853C_MODE_DataSet
     /tmp/ccFyOsmB.s:9436   .rodata.TP2853C_DataSet:0000000000000000 TP2853C_DataSet
     /tmp/ccFyOsmB.s:8536   .rodata.TP2824C_HDC_DataSet:0000000000000000 TP2824C_HDC_DataSet
     /tmp/ccFyOsmB.s:8941   .rodata.TP2826_HDC_DataSet:0000000000000000 TP2826_HDC_DataSet
     /tmp/ccFyOsmB.s:8450   .rodata.TP2824C_HDA_DataSet:0000000000000000 TP2824C_HDA_DataSet
     /tmp/ccFyOsmB.s:8875   .rodata.TP2826_HDA_DataSet:0000000000000000 TP2826_HDA_DataSet
     /tmp/ccFyOsmB.s:8642   .rodata.TP2824C_MODE_DataSet:0000000000000000 TP2824C_MODE_DataSet
     /tmp/ccFyOsmB.s:9047   .rodata.TP2826_MODE_DataSet:0000000000000000 TP2826_MODE_DataSet
     /tmp/ccFyOsmB.s:8845   .rodata.TP2826_DataSet:0000000000000000 TP2826_DataSet
     /tmp/ccFyOsmB.s:8420   .rodata.TP2824C_DataSet:0000000000000000 TP2824C_DataSet
     /tmp/ccFyOsmB.s:7141   .bss.QuadBoxMode:0000000000000000 QuadBoxMode
     /tmp/ccFyOsmB.s:7136   .bss.QuadBoxId:0000000000000000 QuadBoxId
     /tmp/ccFyOsmB.s:7130   .bss.PtzTxChNum:0000000000000000 PtzTxChNum
     /tmp/ccFyOsmB.s:7156   .data.PreCOCSelectModeType:0000000000000000 PreCOCSelectModeType
     /tmp/ccFyOsmB.s:7147   .data.COCSelectModeType:0000000000000000 COCSelectModeType
     /tmp/ccFyOsmB.s:7124   .bss.Flisheye_VLOSS_Count:0000000000000000 Flisheye_VLOSS_Count
     /tmp/ccFyOsmB.s:7165   .data.TP_InputMode:0000000000000000 TP_InputMode
                            *COM*:0000000000000001 Flisheye_COC
     /tmp/ccFyOsmB.s:7118   .bss.Flisheye_CAM:0000000000000000 Flisheye_CAM
     /tmp/ccFyOsmB.s:7611   .rodata.REG_FA:0000000000000000 REG_FA
     /tmp/ccFyOsmB.s:7601   .rodata.REG_F7:0000000000000000 REG_F7
     /tmp/ccFyOsmB.s:7591   .rodata.REG_F6:0000000000000000 REG_F6
     /tmp/ccFyOsmB.s:7621   .rodata.SYS_AND:0000000000000000 SYS_AND
     /tmp/ccFyOsmB.s:7632   .rodata.SYS_MODE:0000000000000000 SYS_MODE
                            *COM*:0000000000000001 VideoSave
     /tmp/ccFyOsmB.s:7172   .data.newInRes:0000000000000000 newInRes
     /tmp/ccFyOsmB.s:7115   .bss.Flisheye_CAM:0000000000000000 $d
     /tmp/ccFyOsmB.s:7121   .bss.Flisheye_VLOSS_Count:0000000000000000 $d
     /tmp/ccFyOsmB.s:7131   .bss.PtzTxChNum:0000000000000000 $d
     /tmp/ccFyOsmB.s:7137   .bss.QuadBoxId:0000000000000000 $d
     /tmp/ccFyOsmB.s:7142   .bss.QuadBoxMode:0000000000000000 $d
     /tmp/ccFyOsmB.s:7144   .data.COCSelectModeType:0000000000000000 $d
     /tmp/ccFyOsmB.s:7153   .data.PreCOCSelectModeType:0000000000000000 $d
     /tmp/ccFyOsmB.s:7168   .data.newInRes:0000000000000000 $d
     /tmp/ccFyOsmB.s:7178   .rodata.Det_VidRes.str1.4:0000000000000000 $d
     /tmp/ccFyOsmB.s:7185   .rodata.Det_VideoLoss.str1.4:0000000000000000 $d
     /tmp/ccFyOsmB.s:7191   .rodata.EQ_Detect.str1.4:0000000000000000 $d
     /tmp/ccFyOsmB.s:7265   .rodata.Get_2824cIrq.str1.4:0000000000000000 $d
     /tmp/ccFyOsmB.s:7295   .rodata.Init_COC_PTZOUT1.str1.4:0000000000000000 $d
     /tmp/ccFyOsmB.s:7299   .rodata.Init_TP280x_RegSet.str1.4:0000000000000000 $d
     /tmp/ccFyOsmB.s:7310   .rodata.ManualAGC.str1.4:0000000000000000 $d
     /tmp/ccFyOsmB.s:7314   .rodata.PTZ_RX_dat.8822:0000000000000000 $d
     /tmp/ccFyOsmB.s:7318   .rodata.PTZ_RX_dat.8822:0000000000000000 PTZ_RX_dat.8822
     /tmp/ccFyOsmB.s:7395   .rodata.PTZ_dat.8812:0000000000000000 $d
     /tmp/ccFyOsmB.s:7399   .rodata.PTZ_dat.8812:0000000000000000 PTZ_dat.8812
     /tmp/ccFyOsmB.s:7457   .rodata.PTZ_dat.8834:0000000000000000 $d
     /tmp/ccFyOsmB.s:7461   .rodata.PTZ_dat.8834:0000000000000000 PTZ_dat.8834
     /tmp/ccFyOsmB.s:7535   .rodata.PTZ_reg.8811:0000000000000000 $d
     /tmp/ccFyOsmB.s:7539   .rodata.PTZ_reg.8811:0000000000000000 PTZ_reg.8811
     /tmp/ccFyOsmB.s:7569   .rodata.PTZ_reg.8833:0000000000000000 $d
     /tmp/ccFyOsmB.s:7573   .rodata.PTZ_reg.8833:0000000000000000 PTZ_reg.8833
     /tmp/ccFyOsmB.s:7587   .rodata.REG_F6:0000000000000000 $d
     /tmp/ccFyOsmB.s:7597   .rodata.REG_F7:0000000000000000 $d
     /tmp/ccFyOsmB.s:7607   .rodata.REG_FA:0000000000000000 $d
ARM GAS  /tmp/ccFyOsmB.s 			page 268


     /tmp/ccFyOsmB.s:7617   .rodata.SYS_AND:0000000000000000 $d
     /tmp/ccFyOsmB.s:7628   .rodata.SYS_MODE:0000000000000000 $d
     /tmp/ccFyOsmB.s:7639   .rodata.Set_ResWithAutoDet.str1.4:0000000000000000 $d
     /tmp/ccFyOsmB.s:7643   .rodata.Set_VidRes.str1.4:0000000000000000 $d
     /tmp/ccFyOsmB.s:7701   .rodata.TP2802D_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:7786   .rodata.TP2802_FORMAT_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:8039   .rodata.TP2822_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:8068   .rodata.TP2823_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:8096   .rodata.TP2823_MODE_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:8166   .rodata.TP2824C_AHD_FHD_PTZ_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:8268   .rodata.TP2824C_CVBS_PTZ_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:8342   .rodata.TP2824C_CVIHD_PTZ_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:8416   .rodata.TP2824C_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:8446   .rodata.TP2824C_HDA_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:8532   .rodata.TP2824C_HDC_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:8638   .rodata.TP2824C_MODE_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:8759   .rodata.TP2824C_TVI_FHD_PTZ_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:8841   .rodata.TP2826_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:8871   .rodata.TP2826_HDA_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:8937   .rodata.TP2826_HDC_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:9043   .rodata.TP2826_MODE_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:9149   .rodata.TP2833_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:9175   .rodata.TP2833_HDA_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:9221   .rodata.TP2833_MODE_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:9297   .rodata.TP2834_Audio_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:9339   .rodata.TP2834_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:9361   .rodata.TP2834_MODE_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:9432   .rodata.TP2853C_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:9466   .rodata.TP2853C_HDA_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:9522   .rodata.TP2853C_HDC_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:9593   .rodata.TP2853C_MODE_DataSet:0000000000000000 $d
     /tmp/ccFyOsmB.s:1677   .text.INPUT_VIDEO_CHECK:000000000000002f $d
     /tmp/ccFyOsmB.s:1677   .text.INPUT_VIDEO_CHECK:0000000000000030 $t

UNDEFINED SYMBOLS
tp28xx_byte_write
tp28xx_byte_read
delay
printf
puts
CURRENT_CH
VS4210_Rx_NoSignal
Set_Video_Loss_OSD
SelectInputMode
HAL_Delay
Printf
msleep
VXISI2CWrite
HS_Select_Win
MCUTimerActiveTimerEvent
gbVXIS_InputMode
gbVXIS_OuputModeflg
