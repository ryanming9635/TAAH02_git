ARM GAS  /tmp/ccnKW75d.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"TP2802.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.tp2824_reset_default,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	tp2824_reset_default:
  23              	.LFB79:
  24              		.file 1 "TP2824/TP2802.c"
   1:TP2824/TP2802.c **** // *****************************************************
   2:TP2824/TP2802.c **** // Company : Techpoint Inc
   3:TP2824/TP2802.c **** // $Date: 2014-03-10
   4:TP2824/TP2802.c **** // $Log:  $
   5:TP2824/TP2802.c **** // ******************************************************
   6:TP2824/TP2802.c **** #include "VXIS_Extern_Define.h"
   7:TP2824/TP2802.c **** #include "stdlib.h"
   8:TP2824/TP2802.c **** //#include "tpinc/Device_Rx.h"
   9:TP2824/TP2802.c **** #include "tpinc/TP2802.h"
  10:TP2824/TP2802.c **** 
  11:TP2824/TP2802.c **** #include "VX_swi2c.h"
  12:TP2824/TP2802.c **** #include "VS4210.h"
  13:TP2824/TP2802.c **** #include "etc_eep.h"
  14:TP2824/TP2802.c **** #include "keyremo.h"
  15:TP2824/TP2802.c **** #include "Printf.h"
  16:TP2824/TP2802.c **** #include "stm32f1xx_hal.h"
  17:TP2824/TP2802.c **** 
  18:TP2824/TP2802.c **** //extern tByte ManVidResRx;
  19:TP2824/TP2802.c **** 
  20:TP2824/TP2802.c **** tByte ManVidResRx;
  21:TP2824/TP2802.c **** extern tByte ManSelCh;
  22:TP2824/TP2802.c **** extern tByte gRxLoopFlg;
  23:TP2824/TP2802.c **** 
  24:TP2824/TP2802.c **** #ifndef TRUE
  25:TP2824/TP2802.c **** #define TRUE 1
  26:TP2824/TP2802.c **** #endif
  27:TP2824/TP2802.c **** 
  28:TP2824/TP2802.c **** #ifndef FALSE
  29:TP2824/TP2802.c **** #define FALSE 0
  30:TP2824/TP2802.c **** #endif
  31:TP2824/TP2802.c **** 
  32:TP2824/TP2802.c **** //TP2802D EQ for short cable option
  33:TP2824/TP2802.c **** #define TP2802D_EQ_SHORT 0x0d
  34:TP2824/TP2802.c **** #define TP2802D_CGAIN_SHORT 0x74
ARM GAS  /tmp/ccnKW75d.s 			page 2


  35:TP2824/TP2802.c **** //#define TP2802D_EQ_SHORT 0x01
  36:TP2824/TP2802.c **** //#define TP2802D_CGAIN_SHORT 0x70
  37:TP2824/TP2802.c **** 
  38:TP2824/TP2802.c **** //#define CVI_TEST 0
  39:TP2824/TP2802.c **** //#define AHD_TEST 1
  40:TP2824/TP2802.c **** 
  41:TP2824/TP2802.c **** #define CH_PER_CHIP 1//0x04
  42:TP2824/TP2802.c **** #define MAX_COUNT 	0xff
  43:TP2824/TP2802.c **** 
  44:TP2824/TP2802.c **** //extern void CreateMDIN340VideoInstance(void);
  45:TP2824/TP2802.c **** 
  46:TP2824/TP2802.c **** tByte newInRes[4] = {7,7,7,7} ;
  47:TP2824/TP2802.c **** 
  48:TP2824/TP2802.c **** extern bit DetAutoRes;
  49:TP2824/TP2802.c **** tByte	state[CH_PER_CHIP];
  50:TP2824/TP2802.c **** tByte	count[CH_PER_CHIP];
  51:TP2824/TP2802.c **** tByte	mode[CH_PER_CHIP];
  52:TP2824/TP2802.c **** tByte	std[CH_PER_CHIP];
  53:TP2824/TP2802.c **** tByte	egain[CH_PER_CHIP][4];
  54:TP2824/TP2802.c **** tByte	VideoSave[CH_PER_CHIP];
  55:TP2824/TP2802.c **** //tByte	ch_boot_reset[CH_PER_CHIP]={0,0,0,0};
  56:TP2824/TP2802.c **** tByte	revision;
  57:TP2824/TP2802.c **** tByte	chip;
  58:TP2824/TP2802.c **** tByte	flag_LOCKED;
  59:TP2824/TP2802.c **** tByte   TVII2CAddress;
  60:TP2824/TP2802.c **** tByte	PTZ_buf[16];
  61:TP2824/TP2802.c **** tWord   PTZ_pelco;
  62:TP2824/TP2802.c **** tByte   CurRes;
  63:TP2824/TP2802.c **** tByte   CurCH;
  64:TP2824/TP2802.c **** tByte crc;
  65:TP2824/TP2802.c **** bit sywd;
  66:TP2824/TP2802.c **** bit flag_CVBS;
  67:TP2824/TP2802.c **** bit flag_AUDIO;
  68:TP2824/TP2802.c **** bit flag_MEGA;
  69:TP2824/TP2802.c **** 
  70:TP2824/TP2802.c **** tcByte SYS_MODE[]= {0x01,0x02,0x04,0x08,0x0f};
  71:TP2824/TP2802.c **** tcByte SYS_AND[] = {0xfe,0xfd,0xfb,0xf7,0xf0};
  72:TP2824/TP2802.c **** 
  73:TP2824/TP2802.c **** tcByte REG_F6[4]= {0x00,0x11,0x22,0x33};
  74:TP2824/TP2802.c **** tcByte REG_F7[4]= {0x44,0x55,0x66,0x77};
  75:TP2824/TP2802.c **** tcByte REG_FA[4]= {0xBB,0xCC,0xDD,0xEE};
  76:TP2824/TP2802.c **** 
  77:TP2824/TP2802.c **** //cocrx
  78:TP2824/TP2802.c **** tByte     tpRxD[26];
  79:TP2824/TP2802.c **** BYTE COCRX1[12];
  80:TP2824/TP2802.c **** BYTE COCRX2[12];
  81:TP2824/TP2802.c **** BYTE COCRX3[12];
  82:TP2824/TP2802.c **** BYTE COCRX4[12];
  83:TP2824/TP2802.c **** /*
  84:TP2824/TP2802.c **** extern BYTE AHDcmd1,AHDcmd2,AHDcmd3,AHDcmd4;
  85:TP2824/TP2802.c **** extern BYTE TVI_Command;
  86:TP2824/TP2802.c **** extern BYTE presetNum;
  87:TP2824/TP2802.c **** extern BYTE TVI_Chksum;
  88:TP2824/TP2802.c **** extern BYTE TVI_speed;
  89:TP2824/TP2802.c **** extern bit ptztxflag;
  90:TP2824/TP2802.c **** */
  91:TP2824/TP2802.c **** BYTE AHDcmd1,AHDcmd2,AHDcmd3,AHDcmd4;
ARM GAS  /tmp/ccnKW75d.s 			page 3


  92:TP2824/TP2802.c **** BYTE TVI_Command;
  93:TP2824/TP2802.c **** BYTE presetNum;
  94:TP2824/TP2802.c **** BYTE TVI_Chksum;
  95:TP2824/TP2802.c **** BYTE TVI_speed;
  96:TP2824/TP2802.c **** bit ptztxflag;
  97:TP2824/TP2802.c **** BYTE Flisheye_CAM[4]={0};
  98:TP2824/TP2802.c **** BYTE Flisheye_COC;
  99:TP2824/TP2802.c **** tByte TP_InputMode=7;
 100:TP2824/TP2802.c **** 
 101:TP2824/TP2802.c **** WORD Flisheye_VLOSS_Count[4]={0};
 102:TP2824/TP2802.c **** 
 103:TP2824/TP2802.c **** //BYTE Flisheye_CAM[4]={1,1,1,1};
 104:TP2824/TP2802.c **** BYTE	COCSelectModeType[4]={5,5,5,5};
 105:TP2824/TP2802.c **** BYTE	PreCOCSelectModeType[4]={5,5,5,5};
 106:TP2824/TP2802.c **** 
 107:TP2824/TP2802.c **** //extern BYTE PtzTxChNum;//0:ch1 / 1:ch2 / 2:ch3 / 3:ch4
 108:TP2824/TP2802.c **** 
 109:TP2824/TP2802.c **** BYTE PtzTxChNum=0;//0:ch1 / 1:ch2 / 2:ch3 / 3:ch4
 110:TP2824/TP2802.c **** //extern BYTE QuadBoxId;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
 111:TP2824/TP2802.c **** BYTE QuadBoxId=0;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
 112:TP2824/TP2802.c **** BYTE QuadBoxMode=0;
 113:TP2824/TP2802.c **** 
 114:TP2824/TP2802.c **** extern BYTE SelectInputMode;
 115:TP2824/TP2802.c **** extern BYTE BOOT_ISSUE;
 116:TP2824/TP2802.c **** extern tByte  OSDSecCount;
 117:TP2824/TP2802.c **** extern tByte  OSDStateFlg;
 118:TP2824/TP2802.c **** 
 119:TP2824/TP2802.c **** 
 120:TP2824/TP2802.c **** extern BYTE	SelectModeType;
 121:TP2824/TP2802.c **** extern volatile BYTE MainSetSelectMode[13];
 122:TP2824/TP2802.c **** extern BYTE BOOT_ISSUE;
 123:TP2824/TP2802.c **** extern  BYTE CURRENT_CH;
 124:TP2824/TP2802.c **** extern BYTE BOX_ISSUE;
 125:TP2824/TP2802.c **** extern BYTE TriggerStatus;
 126:TP2824/TP2802.c **** extern BYTE TriggerFlag;
 127:TP2824/TP2802.c **** extern BYTE TriggerMode;
 128:TP2824/TP2802.c **** extern BYTE	PowerFlag;
 129:TP2824/TP2802.c **** 
 130:TP2824/TP2802.c **** 
 131:TP2824/TP2802.c **** enum
 132:TP2824/TP2802.c **** {
 133:TP2824/TP2802.c ****     TP2802C=0x02,
 134:TP2824/TP2802.c ****     TP2804 =0x04,
 135:TP2824/TP2802.c ****     TP2802D=0x05,
 136:TP2824/TP2802.c ****     TP2822 =0x22,
 137:TP2824/TP2802.c ****     TP2823 =0x23,
 138:TP2824/TP2802.c ****     TP2834 =0x24,
 139:TP2824/TP2802.c ****     TP2833 =0x25,
 140:TP2824/TP2802.c ****     TP2853C=0x26,
 141:TP2824/TP2802.c ****     TP2824C=0x27,
 142:TP2824/TP2802.c ****     TP2826 =0x2f
 143:TP2824/TP2802.c **** };
 144:TP2824/TP2802.c **** 
 145:TP2824/TP2802.c **** tcByte TP2824C_DataSet[] =
 146:TP2824/TP2802.c **** {
 147:TP2824/TP2802.c ****     0x40, 0x04,
 148:TP2824/TP2802.c ****     0x07, 0xC0,
ARM GAS  /tmp/ccnKW75d.s 			page 4


 149:TP2824/TP2802.c ****     0x0B, 0xC0,
 150:TP2824/TP2802.c ****     0x21, 0x84,
 151:TP2824/TP2802.c ****     0x38, 0x00,
 152:TP2824/TP2802.c ****     0x3A, 0x22,
 153:TP2824/TP2802.c ****     0x3B, 0x05,
 154:TP2824/TP2802.c ****     0x26, 0x04,
 155:TP2824/TP2802.c ****     //0x4d, 0x07,
 156:TP2824/TP2802.c ****     //0x4e, 0x05,
 157:TP2824/TP2802.c ****     0x4d, 0x0F,
 158:TP2824/TP2802.c ****     0x4e, 0x0F,  //chunyu
 159:TP2824/TP2802.c ****     0xf1, 0x00,//different with TP2826
 160:TP2824/TP2802.c **** //    0x10,0x67,//ryan@20210611 TOA changes the Brighness=0x67
 161:TP2824/TP2802.c **** //    0x12,0x70,//ryan@20210611 TOA changes the UVGAIN=0x70	
 162:TP2824/TP2802.c **** 
 163:TP2824/TP2802.c **** //    0x10,0x50,//ryan@20210629 TOA changes the Brighness=0x50  ///NTSC
 164:TP2824/TP2802.c **** //    0x11,0x58,//ryan@20210629 TOA changes the Contrast=0x58  ///NTSC
 165:TP2824/TP2802.c **** //    0x12,0x40,//ryan@20210629 TOA changes the UVGAME=0x40  ///NTSC
 166:TP2824/TP2802.c ****         
 167:TP2824/TP2802.c **** /*cocrx
 168:TP2824/TP2802.c **** //PTZ RX
 169:TP2824/TP2802.c **** //	0xc6, 0x1F,//0x19,	//TXBITCNNUM
 170:TP2824/TP2802.c **** //	0xc7, 0x78,		//TXHST
 171:TP2824/TP2802.c **** 	0xcb, 0x07,		//RXLINE1
 172:TP2824/TP2802.c **** 	0xcc, 0x08,		//RXLINE2
 173:TP2824/TP2802.c **** 	0xcd, 0x00,//0x09,		//RXLINE3
 174:TP2824/TP2802.c **** 	0xce, 0x00,//0x0a,		//RXLINE4
 175:TP2824/TP2802.c **** 	0xcf, 0x04,		//RXFREQ
 176:TP2824/TP2802.c **** 	0xd0, 0x00,		//RXFREQ
 177:TP2824/TP2802.c **** 	0xd1, 0x00,		//RXFREQ
 178:TP2824/TP2802.c **** 	0xd2, 0x60,		//RXTHLEVEL
 179:TP2824/TP2802.c **** 	0xd3, 0x10,		//RXHINUM
 180:TP2824/TP2802.c **** 	0xd4, 0x06,		//RXHST / RXHEND
 181:TP2824/TP2802.c **** 	0xd5, 0xbe,		//RXHST
 182:TP2824/TP2802.c **** 	0xd6, 0x39,		//RXHEND
 183:TP2824/TP2802.c **** 	0xd7, 0x27,		//RXBITNUM
 184:TP2824/TP2802.c **** */	
 185:TP2824/TP2802.c ****     0xff, 0xff
 186:TP2824/TP2802.c **** };
 187:TP2824/TP2802.c **** 
 188:TP2824/TP2802.c **** tcByte TP2826_DataSet[] =
 189:TP2824/TP2802.c **** {
 190:TP2824/TP2802.c ****     0x40, 0x04,
 191:TP2824/TP2802.c ****     0x07, 0xC0,
 192:TP2824/TP2802.c ****     0x0B, 0xC0,
 193:TP2824/TP2802.c ****     0x21, 0x84,
 194:TP2824/TP2802.c ****     0x38, 0x00,
 195:TP2824/TP2802.c ****     0x3A, 0x22,
 196:TP2824/TP2802.c ****     0x3B, 0x05,
 197:TP2824/TP2802.c ****     0x26, 0x04,
 198:TP2824/TP2802.c ****     0x4d, 0x07,
 199:TP2824/TP2802.c ****     0x4e, 0x05,
 200:TP2824/TP2802.c ****     0xf1, 0x07,
 201:TP2824/TP2802.c ****     0xff, 0xff
 202:TP2824/TP2802.c **** };
 203:TP2824/TP2802.c **** 
 204:TP2824/TP2802.c **** 
 205:TP2824/TP2802.c **** tcByte TP2826_MODE_DataSet[5][20]=
ARM GAS  /tmp/ccnKW75d.s 			page 5


 206:TP2824/TP2802.c **** {
 207:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0x2c,0x21,0x22,0x23,0x25,0x27,0x28
 208:TP2824/TP2802.c ****     {0x03,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x1c,0x0a,0x84,0x36,0x3c,0xff,0x2d,0x00
 209:TP2824/TP2802.c ****     {0x13,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x18,0x0a,0x84,0x36,0x3c,0xff,0x2d,0x00
 210:TP2824/TP2802.c ****     {0x13,0x50,0x40,0x05,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x04,0x2a,0x84,0x36,0x3c,0xff,0x2d,0x00
 211:TP2824/TP2802.c ****     {0x13,0x51,0x48,0x05,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x04,0x2a,0x84,0x37,0x3f,0xff,0x2d,0x00
 212:TP2824/TP2802.c **** };
 213:TP2824/TP2802.c **** tcByte TP2824C_MODE_DataSet[5][20+3]=
 214:TP2824/TP2802.c **** {
 215:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0x2c,0x21,0x22,0x23,0x25,0x27,0x28
 216:TP2824/TP2802.c ****     {0x03,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x1c,0x0a,0x84,0x36,0x3c,0xff,0x2d,0x00
 217:TP2824/TP2802.c ****     {0x13,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x18,0x0a,0x84,0x36,0x3c,0xff,0x2d,0x00
 218:TP2824/TP2802.c ****     {0x13,0x50,0x40,0x05,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x04,0x2a,0x84,0x36,0x3c,0xff,0x2d,0x00
 219:TP2824/TP2802.c ****     {0x13,0x51,0x48,0x05,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x04,0x2a,0x84,0x37,0x3f,0xff,0x2d,0x00
 220:TP2824/TP2802.c **** };
 221:TP2824/TP2802.c **** 
 222:TP2824/TP2802.c **** tcByte TP2826_HDA_DataSet[5][12]=
 223:TP2824/TP2802.c **** {
 224:TP2824/TP2802.c ****     {0x0c,0x20,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x21,0x25,0xff}, //ADDR
 225:TP2824/TP2802.c ****     {0x03,0x40,0x60,0x48,0x40,0x27,0x72,0x80,0x77,0x46,0xfe,0xff}, //720p30
 226:TP2824/TP2802.c ****     {0x03,0x40,0x60,0x48,0x40,0x27,0x88,0x04,0x23,0x46,0xfe,0xff}, //720p25
 227:TP2824/TP2802.c ****     {0x03,0x38,0x60,0x44,0x40,0x29,0x65,0x78,0x16,0x46,0xfe,0xff}, //1080p30
 228:TP2824/TP2802.c ****     {0x03,0x3c,0x60,0x44,0x40,0x29,0x61,0x78,0x16,0x46,0xfe,0xff}, //1080p25
 229:TP2824/TP2802.c **** };
 230:TP2824/TP2802.c **** tcByte TP2824C_HDA_DataSet[5][12+4]=
 231:TP2824/TP2802.c **** {
 232:TP2824/TP2802.c ****     {0x0c,0x20,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x21,0x25,0x10,0x11,0x12,0x14,0xff}, //ADDR
 233:TP2824/TP2802.c ****     {0x03,0x40,0x60,0x48,0x40,0x27,0x72,0x80,0x77,0x46,0xfe,0x50,0x50,0x40,0x4A,0xff}, //720p30
 234:TP2824/TP2802.c ****     {0x03,0x40,0x60,0x48,0x40,0x27,0x88,0x04,0x23,0x46,0xfe,0x50,0x50,0x40,0x4A,0xff}, //720p25
 235:TP2824/TP2802.c ****     {0x03,0x38,0x60,0x44,0x40,0x29,0x65,0x78,0x16,0x46,0xfe,0x50,0x50,0x40,0x4A,0xff}, //1080p30
 236:TP2824/TP2802.c ****     {0x03,0x3c,0x60,0x44,0x40,0x29,0x61,0x78,0x16,0x46,0xfe,0x50,0x50,0x40,0x4A,0xff}, //1080p25
 237:TP2824/TP2802.c **** };
 238:TP2824/TP2802.c **** tcByte TP2826_HDC_DataSet[5][20]=
 239:TP2824/TP2802.c **** {
 240:TP2824/TP2802.c ****     {0x0c,0x15,0x16,0x17,0x18,0x19,0x1a,0x1c,0x1d,0x20,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x27,0x28
 241:TP2824/TP2802.c ****     {0x03,0x13,0x08,0x00,0x19,0xd0,0x25,0x06,0x72,0x30,0x60,0x37,0x40,0x48,0x67,0x6f,0x30,0x5a,0x04
 242:TP2824/TP2802.c ****     {0x03,0x13,0x0a,0x00,0x19,0xd0,0x25,0x06,0x7a,0x3a,0x60,0x42,0x40,0x48,0x67,0x6f,0x33,0x5a,0x04
 243:TP2824/TP2802.c ****     {0x03,0x13,0x60,0x80,0x29,0x38,0x47,0x09,0x60,0x3c,0x60,0x47,0x40,0x41,0x82,0x27,0xa4,0x5a,0x04
 244:TP2824/TP2802.c ****     {0x03,0x13,0x60,0x80,0x29,0x38,0x47,0x09,0x60,0x50,0x60,0x54,0x40,0x41,0x82,0x27,0xa2,0x5a,0x04
 245:TP2824/TP2802.c **** };
 246:TP2824/TP2802.c **** tcByte TP2824C_HDC_DataSet[5][20]=
 247:TP2824/TP2802.c **** {
 248:TP2824/TP2802.c ****     {0x0c,0x15,0x16,0x17,0x18,0x19,0x1a,0x1c,0x1d,0x20,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x27,0x28
 249:TP2824/TP2802.c ****     {0x03,0x13,0x08,0x00,0x19,0xd0,0x25,0x06,0x72,0x30,0x60,0x37,0x40,0x48,0x67,0x6f,0x30,0x5a,0x04
 250:TP2824/TP2802.c ****     {0x03,0x13,0x0a,0x00,0x19,0xd0,0x25,0x06,0x7a,0x3a,0x60,0x42,0x40,0x48,0x67,0x6f,0x33,0x5a,0x04
 251:TP2824/TP2802.c ****     {0x03,0x13,0x60,0x80,0x29,0x38,0x47,0x09,0x60,0x3c,0x60,0x47,0x40,0x41,0x82,0x27,0xa4,0x5a,0x04
 252:TP2824/TP2802.c ****     {0x03,0x13,0x60,0x80,0x29,0x38,0x47,0x09,0x60,0x50,0x60,0x54,0x40,0x41,0x82,0x27,0xa2,0x5a,0x04
 253:TP2824/TP2802.c **** };
 254:TP2824/TP2802.c **** tcByte TP2853C_DataSet[] =
 255:TP2824/TP2802.c **** {
 256:TP2824/TP2802.c ****     0x40, 0x04,
 257:TP2824/TP2802.c ****     0x07, 0xC0,
 258:TP2824/TP2802.c ****     0x0B, 0xC0,
 259:TP2824/TP2802.c ****     0x21, 0x84,
 260:TP2824/TP2802.c ****     0x38, 0x00,
 261:TP2824/TP2802.c ****     0x3A, 0x32,
 262:TP2824/TP2802.c ****     0x3B, 0x05,
ARM GAS  /tmp/ccnKW75d.s 			page 6


 263:TP2824/TP2802.c ****     0x26, 0x04,
 264:TP2824/TP2802.c ****     0x4d, 0x03,
 265:TP2824/TP2802.c ****     0x4e, 0x03,
 266:TP2824/TP2802.c ****     0x4f, 0x01,
 267:TP2824/TP2802.c ****     0xf5, 0xf0,
 268:TP2824/TP2802.c ****     0xf1,0x07,//tp2826c
 269:TP2824/TP2802.c **** 
 270:TP2824/TP2802.c ****     0xff, 0xff
 271:TP2824/TP2802.c **** };
 272:TP2824/TP2802.c **** tcByte TP2853C_MODE_DataSet[5][18]=
 273:TP2824/TP2802.c **** {
 274:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0x2c,0x21,0x25,0x27,0x28,0xff}, //
 275:TP2824/TP2802.c ****     {0x03,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x0c,0x0a,0x84,0xf0,0x2d,0x00,0xff}, //
 276:TP2824/TP2802.c ****     {0x13,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x08,0x0a,0x84,0xf0,0x2d,0x00,0xff},	//
 277:TP2824/TP2802.c ****     {0x13,0x50,0x40,0x05,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x04,0x2a,0x84,0xf0,0x2d,0x00,0xff}, //
 278:TP2824/TP2802.c ****     {0x13,0x51,0x48,0x05,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x04,0x2a,0x84,0xf0,0x2d,0x00,0xff}  //
 279:TP2824/TP2802.c **** };
 280:TP2824/TP2802.c **** tcByte TP2853C_HDA_DataSet[5][10]=
 281:TP2824/TP2802.c **** {
 282:TP2824/TP2802.c ****     {0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x21,0x25,0xff}, //ADDR
 283:TP2824/TP2802.c ****     {0x70,0x48,0x5e,0x27,0x72,0x80,0x77,0x44,0xf0,0xff}, //720p30
 284:TP2824/TP2802.c ****     {0x70,0x48,0x5e,0x27,0x88,0x04,0x23,0x44,0xf0,0xff}, //720p25
 285:TP2824/TP2802.c ****     {0x58,0x45,0x50,0x29,0x65,0x78,0x16,0x44,0xf0,0xff}, //1080p30
 286:TP2824/TP2802.c ****     {0x58,0x45,0x40,0x29,0x61,0x78,0x16,0x44,0xf0,0xff}, //1080p25
 287:TP2824/TP2802.c **** };
 288:TP2824/TP2802.c **** tcByte TP2853C_HDC_DataSet[5][13]=
 289:TP2824/TP2802.c **** {
 290:TP2824/TP2802.c ****     {0x15,0x16,0x20,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x27,0x28,0xff}, //ADDR
 291:TP2824/TP2802.c ****     {0x13,0x40,0x50,0x60,0x42,0x40,0x48,0x67,0x2e,0x90,0x5a,0x04,0xff}, //720p30
 292:TP2824/TP2802.c ****     {0x13,0x40,0x50,0x60,0x42,0x40,0x48,0x67,0x2e,0x90,0x5a,0x04,0xff}, //720p25
 293:TP2824/TP2802.c ****     {0x13,0x20,0x48,0x60,0x45,0x40,0x41,0x83,0x2e,0x90,0x5a,0x04,0xff}, //1080p30
 294:TP2824/TP2802.c ****     {0x13,0x84,0x48,0x60,0x45,0x40,0x41,0x83,0x2e,0x90,0x5a,0x04,0xff}, //1080p25
 295:TP2824/TP2802.c **** };
 296:TP2824/TP2802.c **** 
 297:TP2824/TP2802.c **** tcByte TP2834_Audio_DataSet[]=
 298:TP2824/TP2802.c **** {
 299:TP2824/TP2802.c **** //audio
 300:TP2824/TP2802.c ****     0x40, 0x40, //audio page
 301:TP2824/TP2802.c ****     0x00, 0x01, //A1
 302:TP2824/TP2802.c ****     0x01, 0x02, //A2
 303:TP2824/TP2802.c ****     0x02, 0x03, //A3
 304:TP2824/TP2802.c ****     0x03, 0x04, //A4
 305:TP2824/TP2802.c ****     0x04, 0x11, //AUX
 306:TP2824/TP2802.c ****     0x17, 0x00,
 307:TP2824/TP2802.c ****     0x18, 0x10, //5ch mode
 308:TP2824/TP2802.c ****     0x19, 0x0f,
 309:TP2824/TP2802.c ****     0x1A, 0x15, //PB to DAC
 310:TP2824/TP2802.c ****     0x1b, 0x01, //PB master
 311:TP2824/TP2802.c ****     0x37, 0x20,
 312:TP2824/TP2802.c **** 
 313:TP2824/TP2802.c ****     0x1d, 0x08,
 314:TP2824/TP2802.c ****     0x1d, 0x00,
 315:TP2824/TP2802.c **** 
 316:TP2824/TP2802.c ****     0x3c, 0x3f,
 317:TP2824/TP2802.c ****     0x3c, 0x00,
 318:TP2824/TP2802.c **** 
 319:TP2824/TP2802.c ****     0x3d, 0x01, //ADC reset
ARM GAS  /tmp/ccnKW75d.s 			page 7


 320:TP2824/TP2802.c ****     0xff, 0xff
 321:TP2824/TP2802.c **** };
 322:TP2824/TP2802.c **** 
 323:TP2824/TP2802.c **** tcByte TP2833_DataSet[] =
 324:TP2824/TP2802.c **** {
 325:TP2824/TP2802.c **** 
 326:TP2824/TP2802.c ****     0x40, 0x04,
 327:TP2824/TP2802.c ****     0x07, 0xC0,
 328:TP2824/TP2802.c ****     0x0B, 0xC0,
 329:TP2824/TP2802.c ****     0x22, 0x36,
 330:TP2824/TP2802.c ****     0x38, 0x40,
 331:TP2824/TP2802.c ****     0x26, 0x04,
 332:TP2824/TP2802.c ****     0x4d, 0x03,
 333:TP2824/TP2802.c ****     0x4e, 0x03,
 334:TP2824/TP2802.c ****     0x4f, 0x01,
 335:TP2824/TP2802.c ****     0xff, 0xff
 336:TP2824/TP2802.c **** };
 337:TP2824/TP2802.c **** tcByte TP2833_MODE_DataSet[5][14]=
 338:TP2824/TP2802.c **** {
 339:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0x18,0xff},
 340:TP2824/TP2802.c ****     {0x03,0x50,0x30,0x05,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x0c,0x12,0xff},
 341:TP2824/TP2802.c ****     {0x13,0x50,0x30,0x05,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x08,0x12,0xff},
 342:TP2824/TP2802.c ****     {0x13,0x50,0x40,0x05,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x04,0x11,0xff},
 343:TP2824/TP2802.c ****     {0x13,0x51,0x48,0x05,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x04,0x11,0xff}
 344:TP2824/TP2802.c **** };
 345:TP2824/TP2802.c **** tcByte TP2833_HDA_DataSet[5][8]=
 346:TP2824/TP2802.c **** {
 347:TP2824/TP2802.c ****     {0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0xff}, //ADDR
 348:TP2824/TP2802.c ****     {0x70,0x48,0x5e,0x27,0x72,0x80,0x77,0xff}, //720p30
 349:TP2824/TP2802.c ****     {0x70,0x48,0x5e,0x27,0x88,0x04,0x23,0xff}, //720p25
 350:TP2824/TP2802.c ****     {0x58,0x45,0x50,0x29,0x65,0x78,0x16,0xff}, //1080p30
 351:TP2824/TP2802.c ****     {0x58,0x45,0x40,0x29,0x61,0x78,0x16,0xff}, //1080p25
 352:TP2824/TP2802.c **** };
 353:TP2824/TP2802.c **** 
 354:TP2824/TP2802.c **** tcByte TP2834_DataSet[] =
 355:TP2824/TP2802.c **** {
 356:TP2824/TP2802.c **** 
 357:TP2824/TP2802.c ****     //video
 358:TP2824/TP2802.c ****     0x40, 0x04,
 359:TP2824/TP2802.c ****     0x07, 0xc0,
 360:TP2824/TP2802.c ****     0x0b, 0xc0,
 361:TP2824/TP2802.c ****     0x3a, 0x70,
 362:TP2824/TP2802.c ****     0x26, 0x01,
 363:TP2824/TP2802.c **** 
 364:TP2824/TP2802.c ****     0x4d, 0x0f,
 365:TP2824/TP2802.c ****     0x4e, 0x0f,
 366:TP2824/TP2802.c **** 
 367:TP2824/TP2802.c ****     0xff, 0xff
 368:TP2824/TP2802.c **** };
 369:TP2824/TP2802.c **** tcByte TP2834_MODE_DataSet[5][13]=
 370:TP2824/TP2802.c **** {
 371:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0xff},
 372:TP2824/TP2802.c ****     {0x03,0x10,0x60,0x02,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x8c,0xff},
 373:TP2824/TP2802.c ****     {0x03,0x10,0x60,0x02,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x88,0xff},
 374:TP2824/TP2802.c ****     {0x43,0x10,0xa0,0x12,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x84,0xff},
 375:TP2824/TP2802.c ****     {0x43,0x11,0xb0,0x02,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x84,0xff}
 376:TP2824/TP2802.c **** };
ARM GAS  /tmp/ccnKW75d.s 			page 8


 377:TP2824/TP2802.c **** 
 378:TP2824/TP2802.c **** //////////////////////////////////////////////////////
 379:TP2824/TP2802.c **** ////
 380:TP2824/TP2802.c **** /////////////////////////////////////////////////////
 381:TP2824/TP2802.c **** 
 382:TP2824/TP2802.c **** tcByte TP2823_DataSet[] =
 383:TP2824/TP2802.c **** {
 384:TP2824/TP2802.c **** 
 385:TP2824/TP2802.c ****     //video
 386:TP2824/TP2802.c ****     0x40, 0x04,
 387:TP2824/TP2802.c ****     0x0b, 0x60,
 388:TP2824/TP2802.c ****     0x22, 0x34,
 389:TP2824/TP2802.c ****     0x23, 0x44,
 390:TP2824/TP2802.c ****     0x26, 0x01,
 391:TP2824/TP2802.c ****     0x38, 0x40,
 392:TP2824/TP2802.c ****     0x3f, 0x08,
 393:TP2824/TP2802.c **** 
 394:TP2824/TP2802.c ****     0x4d, 0x03,
 395:TP2824/TP2802.c ****     0x4e, 0x33,
 396:TP2824/TP2802.c ****     0xfa, 0x00,
 397:TP2824/TP2802.c **** 
 398:TP2824/TP2802.c ****     0xff, 0xff
 399:TP2824/TP2802.c **** };
 400:TP2824/TP2802.c **** tcByte TP2823_MODE_DataSet[5][13]=
 401:TP2824/TP2802.c **** {
 402:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0xff},
 403:TP2824/TP2802.c ****     {0x43,0x10,0x60,0x02,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x30,0xff},
 404:TP2824/TP2802.c ****     {0x53,0x10,0x60,0x02,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x20,0xff},
 405:TP2824/TP2802.c ****     {0x53,0x10,0xa0,0x12,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x10,0xff},
 406:TP2824/TP2802.c ****     {0x53,0x11,0xb0,0x02,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x10,0xff}
 407:TP2824/TP2802.c **** };
 408:TP2824/TP2802.c **** tcByte TP2822_DataSet[] =
 409:TP2824/TP2802.c **** {
 410:TP2824/TP2802.c **** 
 411:TP2824/TP2802.c ****     0x40, 0x04,
 412:TP2824/TP2802.c ****     0x39, 0x00,
 413:TP2824/TP2802.c ****     0x3d, 0x08,
 414:TP2824/TP2802.c ****     0x3a, 0x01,
 415:TP2824/TP2802.c **** 
 416:TP2824/TP2802.c ****     0x30, 0x48,
 417:TP2824/TP2802.c ****     0x31, 0xbb,
 418:TP2824/TP2802.c ****     0x32, 0x2e,
 419:TP2824/TP2802.c ****     0x33, 0x90,
 420:TP2824/TP2802.c **** 
 421:TP2824/TP2802.c ****     0x4d, 0x03,
 422:TP2824/TP2802.c ****     0x4e, 0x33,
 423:TP2824/TP2802.c ****     0x3d, 0x00,
 424:TP2824/TP2802.c **** 
 425:TP2824/TP2802.c ****     0xff, 0xff
 426:TP2824/TP2802.c **** };
 427:TP2824/TP2802.c **** 
 428:TP2824/TP2802.c **** tcByte TP2802D_DataSet[] =
 429:TP2824/TP2802.c **** {
 430:TP2824/TP2802.c ****     0x40, 0x04,
 431:TP2824/TP2802.c **** //		0x07, 0xc0,
 432:TP2824/TP2802.c **** //		0x0b, 0xc0,
 433:TP2824/TP2802.c ****     0x2b, 0x44,
ARM GAS  /tmp/ccnKW75d.s 			page 9


 434:TP2824/TP2802.c ****     0x23, 0x50,
 435:TP2824/TP2802.c ****     0x39, 0x42,
 436:TP2824/TP2802.c ****     0x3a, 0x01,
 437:TP2824/TP2802.c **** 
 438:TP2824/TP2802.c ****     0x30, 0x48,
 439:TP2824/TP2802.c ****     0x31, 0xbb,
 440:TP2824/TP2802.c ****     0x32, 0x2e,
 441:TP2824/TP2802.c ****     0x33, 0x90,
 442:TP2824/TP2802.c **** 
 443:TP2824/TP2802.c ****     0x4d, 0x0f,
 444:TP2824/TP2802.c ****     0x4e, 0xff,
 445:TP2824/TP2802.c **** 
 446:TP2824/TP2802.c ****     //now TP2801A just support 2 lines, to disable line3&4, else IRQ is in trouble.
 447:TP2824/TP2802.c ****     0x40, 0x01,
 448:TP2824/TP2802.c ****     0x50, 0x00,
 449:TP2824/TP2802.c ****     0x51, 0x00,
 450:TP2824/TP2802.c ****     0x52, 0x00,
 451:TP2824/TP2802.c ****     0x7F, 0x00,
 452:TP2824/TP2802.c ****     0x80, 0x00,
 453:TP2824/TP2802.c ****     0x81, 0x00,
 454:TP2824/TP2802.c **** 
 455:TP2824/TP2802.c ****     //0x50~0xb2 need bank switch
 456:TP2824/TP2802.c ****     0x40, 0x00,
 457:TP2824/TP2802.c ****     //TX total 34bit, valid load 32bit
 458:TP2824/TP2802.c ****     0x50, 0x00,
 459:TP2824/TP2802.c ****     0x51, 0x0b,
 460:TP2824/TP2802.c ****     0x52, 0x0c,
 461:TP2824/TP2802.c ****     0x53, 0x19,
 462:TP2824/TP2802.c ****     0x54, 0x78,
 463:TP2824/TP2802.c ****     0x55, 0x21,
 464:TP2824/TP2802.c ****     0x7e, 0x0f,   //
 465:TP2824/TP2802.c **** 
 466:TP2824/TP2802.c ****     // RX total 40bit, valid load 39bit
 467:TP2824/TP2802.c ****     0x7F, 0x00,
 468:TP2824/TP2802.c ****     0x80, 0x07,
 469:TP2824/TP2802.c ****     0x81, 0x08,
 470:TP2824/TP2802.c ****     0x82, 0x04,
 471:TP2824/TP2802.c ****     0x83, 0x00,
 472:TP2824/TP2802.c ****     0x84, 0x00,
 473:TP2824/TP2802.c ****     0x85, 0x60,
 474:TP2824/TP2802.c ****     0x86, 0x10,
 475:TP2824/TP2802.c ****     0x87, 0x06,
 476:TP2824/TP2802.c ****     0x88, 0xBE,
 477:TP2824/TP2802.c ****     0x89, 0x39,
 478:TP2824/TP2802.c ****     0x8A, 0x27,   //
 479:TP2824/TP2802.c ****     0xB9, 0x0F,   //RX channel enable
 480:TP2824/TP2802.c ****     0xff, 0xff
 481:TP2824/TP2802.c **** };
 482:TP2824/TP2802.c **** 
 483:TP2824/TP2802.c **** /*
 484:TP2824/TP2802.c **** //total 34bit, valid load 32bit
 485:TP2824/TP2802.c **** tcByte TP2822_PTZ_DataSet[] = {
 486:TP2824/TP2802.c **** 
 487:TP2824/TP2802.c **** 		//PTZ
 488:TP2824/TP2802.c **** 		0x40, 0x10,
 489:TP2824/TP2802.c **** 		0xc8, 0x21,
 490:TP2824/TP2802.c **** 		0xe0, 0x21,
ARM GAS  /tmp/ccnKW75d.s 			page 10


 491:TP2824/TP2802.c **** 		0x40, 0x00,
 492:TP2824/TP2802.c **** 		0xc8, 0x21,
 493:TP2824/TP2802.c **** 		0xe0, 0x21,
 494:TP2824/TP2802.c **** 		0x7e, 0x0f,
 495:TP2824/TP2802.c **** 		0xb9, 0x0f,
 496:TP2824/TP2802.c **** 
 497:TP2824/TP2802.c **** 	0xff, 0xff
 498:TP2824/TP2802.c **** };
 499:TP2824/TP2802.c **** */
 500:TP2824/TP2802.c **** 
 501:TP2824/TP2802.c **** #if 1
 502:TP2824/TP2802.c **** tcByte TP2824C_TVI_FHD_PTZ_DataSet[] = {//1080P30/25 TVI
 503:TP2824/TP2802.c **** 
 504:TP2824/TP2802.c **** 		//PTZ COC
 505:TP2824/TP2802.c **** //TX		
 506:TP2824/TP2802.c **** 	 0xc0, 0x00,
 507:TP2824/TP2802.c **** 	 0xc2, 0x0B,
 508:TP2824/TP2802.c **** 	 0xc3, 0x0C,
 509:TP2824/TP2802.c **** 	 0xc1, 0x00,
 510:TP2824/TP2802.c **** 	 0xc4, 0x00,
 511:TP2824/TP2802.c **** 	 0xc5, 0x00,
 512:TP2824/TP2802.c **** 	 0xc6, 0x33,
 513:TP2824/TP2802.c **** 	 0xc7, 0x78,
 514:TP2824/TP2802.c **** 	 0xc8, 0x21,
 515:TP2824/TP2802.c **** 	 0x6f, 0x40,
 516:TP2824/TP2802.c ****         0x70, 0x00,
 517:TP2824/TP2802.c ****         
 518:TP2824/TP2802.c **** 	 0x55, 0x00,
 519:TP2824/TP2802.c **** 	 0x56, 0x02,
 520:TP2824/TP2802.c **** 	 0x57, 0xB5,
 521:TP2824/TP2802.c **** 	 0x58, 0x01,
 522:TP2824/TP2802.c **** 	 0x59, 0x17,
 523:TP2824/TP2802.c **** 	 0x5a, 0x01,
 524:TP2824/TP2802.c **** 	 0x5b, 0x00,
 525:TP2824/TP2802.c **** 	 0x5c, 0x02,
 526:TP2824/TP2802.c **** 	 0x5d, 0x00,
 527:TP2824/TP2802.c **** 	 0x5e, 0x00,
 528:TP2824/TP2802.c **** 	 0x5f, 0x00,
 529:TP2824/TP2802.c **** 	 0x60, 0xCE,
 530:TP2824/TP2802.c **** 	
 531:TP2824/TP2802.c ****  //RX
 532:TP2824/TP2802.c **** 	0xcb, 0x07,
 533:TP2824/TP2802.c **** 	0xcc, 0x08,
 534:TP2824/TP2802.c **** 	0xcd, 0x00,
 535:TP2824/TP2802.c **** 	0xce, 0x00,
 536:TP2824/TP2802.c **** 	0xcf, 0x04,
 537:TP2824/TP2802.c **** 	0xd0, 0x00,
 538:TP2824/TP2802.c **** 	0xd1, 0x00,
 539:TP2824/TP2802.c **** 	0xd2, 0x60,
 540:TP2824/TP2802.c **** 	0xd3, 0x10,
 541:TP2824/TP2802.c **** 	0xd4, 0x06,
 542:TP2824/TP2802.c **** 	0xd5, 0xbe,
 543:TP2824/TP2802.c **** 	0xd6, 0x39,
 544:TP2824/TP2802.c **** 	0xd7, 0x21,
 545:TP2824/TP2802.c **** 	0xa7, 0x00,
 546:TP2824/TP2802.c **** 	0xff, 0xff
 547:TP2824/TP2802.c **** };
ARM GAS  /tmp/ccnKW75d.s 			page 11


 548:TP2824/TP2802.c **** 
 549:TP2824/TP2802.c **** tcByte TP2824C_AHD_FHD_PTZ_DataSet[] = {//1080P30/25 AHD
 550:TP2824/TP2802.c **** 
 551:TP2824/TP2802.c **** 		//PTZ COC
 552:TP2824/TP2802.c **** //TX		
 553:TP2824/TP2802.c **** 	 0xc0, 0x00,
 554:TP2824/TP2802.c **** 	 0xc2, 0x0E,	
 555:TP2824/TP2802.c **** 	 0xc3, 0x0F,
 556:TP2824/TP2802.c **** 	 0xc1, 0x00, 
 557:TP2824/TP2802.c **** 	 0xc4, 0x10,
 558:TP2824/TP2802.c **** 	 0xc5, 0x11,
 559:TP2824/TP2802.c **** //	 0xc6, 0x2c,////pulse of cap  500->600ns 0x24, 
 560:TP2824/TP2802.c ****  	 0xc6, 0x27,////pulse of cap  600->520ns  //ryan@20210630 TOA require this
 561:TP2824/TP2802.c **** 	 0xc7, 0x15,
 562:TP2824/TP2802.c **** 	 0xc8, 0x97,		
 563:TP2824/TP2802.c **** 	0x6f, 0x44,
 564:TP2824/TP2802.c ****         0x70, 0x00,
 565:TP2824/TP2802.c **** 	 0x55, 0x00,
 566:TP2824/TP2802.c **** 	 0x56, 0x00,
 567:TP2824/TP2802.c **** 	 0x57, 0x00,
 568:TP2824/TP2802.c **** 	 0x58, 0x00,
 569:TP2824/TP2802.c **** 	 0x59, 0x00,
 570:TP2824/TP2802.c **** 	 0x5a, 0x00,
 571:TP2824/TP2802.c **** 	 0x5b, 0x00,
 572:TP2824/TP2802.c **** 	 0x5c, 0x00,
 573:TP2824/TP2802.c **** 	 0x5d, 0x00,
 574:TP2824/TP2802.c **** 	 0x5e, 0x00,
 575:TP2824/TP2802.c **** 	 0x5f, 0x00,
 576:TP2824/TP2802.c **** 	 0x60, 0x00,
 577:TP2824/TP2802.c **** 	 0x62, 0x00,
 578:TP2824/TP2802.c **** 	 0x63, 0x00,
 579:TP2824/TP2802.c **** 	 0x64, 0x00,
 580:TP2824/TP2802.c **** 	 0x65, 0x00,
 581:TP2824/TP2802.c **** 	 0x66, 0x00,
 582:TP2824/TP2802.c **** 	 0x68, 0x00,
 583:TP2824/TP2802.c **** 	 0x69, 0x00,
 584:TP2824/TP2802.c **** 	 0x6a, 0x00,
 585:TP2824/TP2802.c **** 	 0x6b, 0x00,
 586:TP2824/TP2802.c **** 	 0x6c, 0x00,
 587:TP2824/TP2802.c ****  	
 588:TP2824/TP2802.c ****  //RX
 589:TP2824/TP2802.c **** 	0xcb, 0x07,
 590:TP2824/TP2802.c **** 	0xcc, 0x08,
 591:TP2824/TP2802.c **** 	0xcd, 0x00,
 592:TP2824/TP2802.c **** 	0xce, 0x00,
 593:TP2824/TP2802.c **** 	0xcf, 0x04,
 594:TP2824/TP2802.c **** 	0xd0, 0x00,	
 595:TP2824/TP2802.c **** 	0xd1, 0x00,		
 596:TP2824/TP2802.c **** 	0xd2, 0x60,		
 597:TP2824/TP2802.c **** 	0xd3, 0x10,		
 598:TP2824/TP2802.c **** 	0xd4, 0x06,		
 599:TP2824/TP2802.c **** 	0xd5, 0xbe,		
 600:TP2824/TP2802.c **** 	0xd6, 0x39,		
 601:TP2824/TP2802.c **** 	0xd7, 0x27,	
 602:TP2824/TP2802.c **** 	
 603:TP2824/TP2802.c **** 	0xa7, 0x24,
 604:TP2824/TP2802.c **** 	
ARM GAS  /tmp/ccnKW75d.s 			page 12


 605:TP2824/TP2802.c **** 	0xff, 0xff
 606:TP2824/TP2802.c **** };
 607:TP2824/TP2802.c **** 
 608:TP2824/TP2802.c **** tcByte TP2824C_CVBS_PTZ_DataSet[] = {//CVBS NTSC/PAL
 609:TP2824/TP2802.c **** 
 610:TP2824/TP2802.c **** 		//PTZ COC
 611:TP2824/TP2802.c **** //TX		
 612:TP2824/TP2802.c **** 	 0xc0, 0x00,
 613:TP2824/TP2802.c **** 	 0xc2, 0x0F,	
 614:TP2824/TP2802.c **** 	 0xc3, 0x10,	
 615:TP2824/TP2802.c **** 	 0xc1, 0x00,	
 616:TP2824/TP2802.c **** 	 0xc4, 0x00,	
 617:TP2824/TP2802.c **** 	 0xc5, 0x00,	
 618:TP2824/TP2802.c **** 	 0xc6, 0x49,	
 619:TP2824/TP2802.c **** 	 0xc7, 0x14,	
 620:TP2824/TP2802.c **** 	 0xc8, 0xAF,	
 621:TP2824/TP2802.c **** 	 0x6f, 0x60,	
 622:TP2824/TP2802.c ****         0x70, 0x00,   
 623:TP2824/TP2802.c ****         
 624:TP2824/TP2802.c **** 	 0x55, 0x00,
 625:TP2824/TP2802.c **** 	 0x56, 0x00,
 626:TP2824/TP2802.c **** 	 0x57, 0x00,
 627:TP2824/TP2802.c **** 	 0x58, 0x00,
 628:TP2824/TP2802.c **** 	 0x59, 0x00,
 629:TP2824/TP2802.c **** 	 0x5a, 0x00,
 630:TP2824/TP2802.c **** 	 0x5b, 0x00,
 631:TP2824/TP2802.c **** 	 0x5c, 0x00,
 632:TP2824/TP2802.c **** 	 0x5d, 0x00,
 633:TP2824/TP2802.c **** 	 0x5e, 0x00,
 634:TP2824/TP2802.c **** 	 0x5f, 0x00,
 635:TP2824/TP2802.c **** 	 0x60, 0x00,
 636:TP2824/TP2802.c **** 	 0x62, 0x00,
 637:TP2824/TP2802.c **** 	 0x63, 0x00,
 638:TP2824/TP2802.c **** 	 0x64, 0x00,
 639:TP2824/TP2802.c **** 	 0x65, 0x00,
 640:TP2824/TP2802.c **** 	 0x66, 0x00,
 641:TP2824/TP2802.c **** 	 0x68, 0x00,
 642:TP2824/TP2802.c **** 	 0x69, 0x00,
 643:TP2824/TP2802.c **** 	 0x6a, 0x00,
 644:TP2824/TP2802.c **** 	 0x6b, 0x00,
 645:TP2824/TP2802.c **** 	 0x6c, 0x00,
 646:TP2824/TP2802.c **** 
 647:TP2824/TP2802.c **** 	0xff, 0xff
 648:TP2824/TP2802.c **** };
 649:TP2824/TP2802.c **** 
 650:TP2824/TP2802.c **** tcByte TP2824C_CVIHD_PTZ_DataSet[] = {//CVI CHD
 651:TP2824/TP2802.c **** 
 652:TP2824/TP2802.c **** 		//PTZ COC
 653:TP2824/TP2802.c **** //TX	
 654:TP2824/TP2802.c **** 	 0x70, 0x1D,
 655:TP2824/TP2802.c **** 	 0xc0, 0x00,	
 656:TP2824/TP2802.c **** 	 0xc2, 0x10,	
 657:TP2824/TP2802.c **** 	 0xc3, 0x00,	
 658:TP2824/TP2802.c **** 	 0xc1, 0x00,	
 659:TP2824/TP2802.c **** 	 0xc4, 0x00,	
 660:TP2824/TP2802.c **** 	 0xc5, 0x00,	
 661:TP2824/TP2802.c **** 	 0xc6, 0x15,	
ARM GAS  /tmp/ccnKW75d.s 			page 13


 662:TP2824/TP2802.c **** 	 0xc7, 0x5B,	
 663:TP2824/TP2802.c **** 	 0xc8, 0xa4,
 664:TP2824/TP2802.c **** 	 0x6f, 0x48,
 665:TP2824/TP2802.c **** 
 666:TP2824/TP2802.c **** 	 0x55, 0x00,
 667:TP2824/TP2802.c **** 	 0x56, 0x00,
 668:TP2824/TP2802.c **** 	 0x57, 0x00,
 669:TP2824/TP2802.c **** 	 0x58, 0x00,
 670:TP2824/TP2802.c **** 	 0x59, 0x00,
 671:TP2824/TP2802.c **** 	 0x5a, 0x00,
 672:TP2824/TP2802.c **** 	 0x5b, 0x00,
 673:TP2824/TP2802.c **** 	 0x5c, 0x00,
 674:TP2824/TP2802.c **** 	 0x5d, 0x00,
 675:TP2824/TP2802.c **** 	 0x5e, 0x00,
 676:TP2824/TP2802.c **** 	 0x5f, 0x00,
 677:TP2824/TP2802.c **** 	 0x60, 0x00,
 678:TP2824/TP2802.c **** 	 0x62, 0x00,
 679:TP2824/TP2802.c **** 	 0x63, 0x00,
 680:TP2824/TP2802.c **** 	 0x64, 0x00,
 681:TP2824/TP2802.c **** 	 0x65, 0x00,
 682:TP2824/TP2802.c **** 	 0x66, 0x00,
 683:TP2824/TP2802.c **** 	 0x68, 0x00,
 684:TP2824/TP2802.c **** 	 0x69, 0x00,
 685:TP2824/TP2802.c **** 	 0x6a, 0x00,
 686:TP2824/TP2802.c **** 	 0x6b, 0x00,
 687:TP2824/TP2802.c **** 	 0x6c, 0x00,
 688:TP2824/TP2802.c **** 	
 689:TP2824/TP2802.c **** 	0xff, 0xff
 690:TP2824/TP2802.c **** };
 691:TP2824/TP2802.c **** 
 692:TP2824/TP2802.c **** #else
 693:TP2824/TP2802.c **** tcByte TP2824C_TVI_FHD_PTZ_DataSet[] = {//1080P30/25 TVI
 694:TP2824/TP2802.c **** 
 695:TP2824/TP2802.c **** 		//PTZ COC
 696:TP2824/TP2802.c **** //TX		
 697:TP2824/TP2802.c **** 	 0xc0, 0x00,	//TXLINE2  / TXLINE1
 698:TP2824/TP2802.c **** 	 0xc2, 0x0B,	//TXLINE1
 699:TP2824/TP2802.c **** 	 0xc3, 0x0C,	//TXLINE2
 700:TP2824/TP2802.c **** 	 0xc1, 0x00,	//TXLINE4  / TXLINE3
 701:TP2824/TP2802.c **** 	 0xc4, 0x00,	//TXLINE3
 702:TP2824/TP2802.c **** 	 0xc5, 0x00,	//TXLINE4
 703:TP2824/TP2802.c **** 	 0xc6, 0x33,	//TXBITCKNUM  0x19  0x1F  //0x19 for 1080P  ;  0x33 for 720P   // TVI 720P ptz 202005
 704:TP2824/TP2802.c **** 	 0xc7, 0x78,	//TXHST
 705:TP2824/TP2802.c **** 	 0xc8, 0x21,	//TXBITNUM  //0x21  0x27
 706:TP2824/TP2802.c **** 	 0x6f, 0x40,	//TXn pin enable
 707:TP2824/TP2802.c ****         0x70, 0x00,   //TXLMD[3]=0 / TXLNUM[2:0]=0
 708:TP2824/TP2802.c ****         
 709:TP2824/TP2802.c **** //PRESET 1
 710:TP2824/TP2802.c **** 	 //TXLINE1DATA
 711:TP2824/TP2802.c **** 	 0x55, 0x00,
 712:TP2824/TP2802.c **** 	 0x56, 0x02,
 713:TP2824/TP2802.c **** 	 0x57, 0xB5,
 714:TP2824/TP2802.c **** 	 0x58, 0x01,
 715:TP2824/TP2802.c **** 	 0x59, 0x17,
 716:TP2824/TP2802.c **** 	 0x5a, 0x01,
 717:TP2824/TP2802.c **** 	 //TXLINE2DATA
 718:TP2824/TP2802.c **** 	 0x5b, 0x00,
ARM GAS  /tmp/ccnKW75d.s 			page 14


 719:TP2824/TP2802.c **** 	 0x5c, 0x02,
 720:TP2824/TP2802.c **** 	 0x5d, 0x00,
 721:TP2824/TP2802.c **** 	 0x5e, 0x00,
 722:TP2824/TP2802.c **** 	 0x5f, 0x00,
 723:TP2824/TP2802.c **** 	 0x60, 0xCE,
 724:TP2824/TP2802.c **** 	
 725:TP2824/TP2802.c ****  //RX
 726:TP2824/TP2802.c **** 	0xcb, 0x07,		//RXLINE1
 727:TP2824/TP2802.c **** 	0xcc, 0x08,		//RXLINE2
 728:TP2824/TP2802.c **** 	0xcd, 0x00,//0x09,		//RXLINE3
 729:TP2824/TP2802.c **** 	0xce, 0x00,//0x0a,		//RXLINE4
 730:TP2824/TP2802.c **** 	0xcf, 0x04,		//RXFREQ
 731:TP2824/TP2802.c **** 	0xd0, 0x00,		//RXFREQ
 732:TP2824/TP2802.c **** 	0xd1, 0x00,		//RXFREQ
 733:TP2824/TP2802.c **** 	0xd2, 0x60,		//RXTHLEVEL
 734:TP2824/TP2802.c **** 	0xd3, 0x10,		//RXHINUM
 735:TP2824/TP2802.c **** 	0xd4, 0x06,		//RXHST / RXHEND
 736:TP2824/TP2802.c **** 	0xd5, 0xbe,		//RXHST
 737:TP2824/TP2802.c **** 	0xd6, 0x39,		//RXHEND
 738:TP2824/TP2802.c **** 	0xd7, 0x21,//0x27,		//RXBITNUM
 739:TP2824/TP2802.c **** 	0xa7, 0x00,//
 740:TP2824/TP2802.c **** 	0xff, 0xff
 741:TP2824/TP2802.c **** };
 742:TP2824/TP2802.c **** 
 743:TP2824/TP2802.c **** tcByte TP2824C_AHD_FHD_PTZ_DataSet[] = {//1080P30/25 AHD
 744:TP2824/TP2802.c **** 
 745:TP2824/TP2802.c **** 		//PTZ COC
 746:TP2824/TP2802.c **** //TX		
 747:TP2824/TP2802.c **** 	 0xc0, 0x00,	//TXLINE2  / TXLINE1
 748:TP2824/TP2802.c **** 	 0xc2, 0x0E,	//TXLINE1
 749:TP2824/TP2802.c **** 	 0xc3, 0x0F,	//TXLINE2
 750:TP2824/TP2802.c **** 	 0xc1, 0x00,	//TXLINE4  / TXLINE3
 751:TP2824/TP2802.c **** 	 0xc4, 0x10,	//TXLINE3
 752:TP2824/TP2802.c **** 	 0xc5, 0x11,	//TXLINE4
 753:TP2824/TP2802.c **** 	 0xc6, 0x24,	//TXBITCKNUM
 754:TP2824/TP2802.c **** 	 0xc7, 0x15,	//TXHST[7:0]		//TXHST=0x215
 755:TP2824/TP2802.c **** 	 0xc8, 0x97,	//TXHST[9:8] / TXBITNUM:0x17
 756:TP2824/TP2802.c **** 	 0x6f, 0x44,	//TXn pin enable / TXACP
 757:TP2824/TP2802.c ****         0x70, 0x00,   //TXLMD[3]=0 / TXLNUM[2:0]=0
 758:TP2824/TP2802.c ****         
 759:TP2824/TP2802.c **** 	 //TXLINE1DATA
 760:TP2824/TP2802.c **** 	 0x55, 0x00,
 761:TP2824/TP2802.c **** 	 0x56, 0x00,
 762:TP2824/TP2802.c **** 	 0x57, 0x00,
 763:TP2824/TP2802.c **** 	 0x58, 0x00,
 764:TP2824/TP2802.c **** 	 0x59, 0x00,
 765:TP2824/TP2802.c **** 	 0x5a, 0x00,
 766:TP2824/TP2802.c **** 	 //TXLINE2DATA
 767:TP2824/TP2802.c **** 	 0x5b, 0x00,
 768:TP2824/TP2802.c **** 	 0x5c, 0x00,
 769:TP2824/TP2802.c **** 	 0x5d, 0x00,
 770:TP2824/TP2802.c **** 	 0x5e, 0x00,
 771:TP2824/TP2802.c **** 	 0x5f, 0x00,
 772:TP2824/TP2802.c **** 	 0x60, 0x00,
 773:TP2824/TP2802.c **** 	 //TXLINE3DATA
 774:TP2824/TP2802.c **** 	 0x62, 0x00,
 775:TP2824/TP2802.c **** 	 0x63, 0x00,
ARM GAS  /tmp/ccnKW75d.s 			page 15


 776:TP2824/TP2802.c **** 	 0x64, 0x00,
 777:TP2824/TP2802.c **** 	 0x65, 0x00,
 778:TP2824/TP2802.c **** 	 0x66, 0x00,
 779:TP2824/TP2802.c ****  	 //TXLINE4DATA
 780:TP2824/TP2802.c **** 	 0x68, 0x00,
 781:TP2824/TP2802.c **** 	 0x69, 0x00,
 782:TP2824/TP2802.c **** 	 0x6a, 0x00,
 783:TP2824/TP2802.c **** 	 0x6b, 0x00,
 784:TP2824/TP2802.c **** 	 0x6c, 0x00,
 785:TP2824/TP2802.c ****  	
 786:TP2824/TP2802.c ****  //RX
 787:TP2824/TP2802.c **** 	0xcb, 0x07,		//RXLINE1
 788:TP2824/TP2802.c **** 	0xcc, 0x08,		//RXLINE2
 789:TP2824/TP2802.c **** 	0xcd, 0x00,//0x09,		//RXLINE3
 790:TP2824/TP2802.c **** 	0xce, 0x00,//0x0a,		//RXLINE4
 791:TP2824/TP2802.c **** 	0xcf, 0x04,		//RXFREQ
 792:TP2824/TP2802.c **** 	0xd0, 0x00,		//RXFREQ
 793:TP2824/TP2802.c **** 	0xd1, 0x00,		//RXFREQ
 794:TP2824/TP2802.c **** 	0xd2, 0x60,		//RXTHLEVEL
 795:TP2824/TP2802.c **** 	0xd3, 0x10,		//RXHINUM
 796:TP2824/TP2802.c **** 	0xd4, 0x06,		//RXHST / RXHEND
 797:TP2824/TP2802.c **** 	0xd5, 0xbe,		//RXHST
 798:TP2824/TP2802.c **** 	0xd6, 0x39,		//RXHEND
 799:TP2824/TP2802.c **** 	0xd7, 0x27,		//RXBITNUM
 800:TP2824/TP2802.c **** 	
 801:TP2824/TP2802.c **** 	0xa7, 0x24,//RXPWM / RXACP
 802:TP2824/TP2802.c **** 	
 803:TP2824/TP2802.c **** 	0xff, 0xff
 804:TP2824/TP2802.c **** };
 805:TP2824/TP2802.c **** 
 806:TP2824/TP2802.c **** tcByte TP2824C_CVBS_PTZ_DataSet[] = {//CVBS NTSC/PAL
 807:TP2824/TP2802.c **** 
 808:TP2824/TP2802.c **** 		//PTZ COC
 809:TP2824/TP2802.c **** //TX		
 810:TP2824/TP2802.c **** 	 0xc0, 0x00,	//TXLINE2  / TXLINE1
 811:TP2824/TP2802.c **** 	 0xc2, 0x0F,	//TXLINE1		//line18
 812:TP2824/TP2802.c **** 	 0xc3, 0x10,	//TXLINE2		//line19
 813:TP2824/TP2802.c **** 	 0xc1, 0x00,	//TXLINE4  / TXLINE3
 814:TP2824/TP2802.c **** 	 0xc4, 0x00,	//TXLINE3
 815:TP2824/TP2802.c **** 	 0xc5, 0x00,	//TXLINE4
 816:TP2824/TP2802.c **** 	 0xc6, 0x49,	//TXBITCKNUM
 817:TP2824/TP2802.c **** 	 0xc7, 0x14,	//TXHST[7:0]		//TXHST=0x214
 818:TP2824/TP2802.c **** 	 0xc8, 0xAF,	//TXHST[9:8] / TXBITNUM:0x2F
 819:TP2824/TP2802.c **** 	 0x6f, 0x60,	//TXn pin enable / TXPELCO2
 820:TP2824/TP2802.c ****         0x70, 0x00,   //TXLMD[3]=0 / TXLNUM[2:0]=0
 821:TP2824/TP2802.c ****         
 822:TP2824/TP2802.c **** 	 //TXLINE1DATA
 823:TP2824/TP2802.c **** 	 0x55, 0x00,
 824:TP2824/TP2802.c **** 	 0x56, 0x00,
 825:TP2824/TP2802.c **** 	 0x57, 0x00,
 826:TP2824/TP2802.c **** 	 0x58, 0x00,
 827:TP2824/TP2802.c **** 	 0x59, 0x00,//cmd2 [LSB first]
 828:TP2824/TP2802.c **** 	 0x5a, 0x00,//cmd1 [LSB first]
 829:TP2824/TP2802.c **** 	 //TXLINE2DATA
 830:TP2824/TP2802.c **** 	 0x5b, 0x00,
 831:TP2824/TP2802.c **** 	 0x5c, 0x00,
 832:TP2824/TP2802.c **** 	 0x5d, 0x00,
ARM GAS  /tmp/ccnKW75d.s 			page 16


 833:TP2824/TP2802.c **** 	 0x5e, 0x00,
 834:TP2824/TP2802.c **** 	 0x5f, 0x00,//data2 [LSB first]
 835:TP2824/TP2802.c **** 	 0x60, 0x00,//data1 [LSB first]
 836:TP2824/TP2802.c **** 	 //TXLINE3DATA
 837:TP2824/TP2802.c **** 	 0x62, 0x00,
 838:TP2824/TP2802.c **** 	 0x63, 0x00,
 839:TP2824/TP2802.c **** 	 0x64, 0x00,
 840:TP2824/TP2802.c **** 	 0x65, 0x00,
 841:TP2824/TP2802.c **** 	 0x66, 0x00,
 842:TP2824/TP2802.c ****  	 //TXLINE4DATA
 843:TP2824/TP2802.c **** 	 0x68, 0x00,
 844:TP2824/TP2802.c **** 	 0x69, 0x00,
 845:TP2824/TP2802.c **** 	 0x6a, 0x00,
 846:TP2824/TP2802.c **** 	 0x6b, 0x00,
 847:TP2824/TP2802.c **** 	 0x6c, 0x00,
 848:TP2824/TP2802.c **** /* 	
 849:TP2824/TP2802.c ****  //RX
 850:TP2824/TP2802.c **** 	0xcb, 0x07,		//RXLINE1
 851:TP2824/TP2802.c **** 	0xcc, 0x08,		//RXLINE2
 852:TP2824/TP2802.c **** 	0xcd, 0x00,//0x09,		//RXLINE3
 853:TP2824/TP2802.c **** 	0xce, 0x00,//0x0a,		//RXLINE4
 854:TP2824/TP2802.c **** 	0xcf, 0x04,		//RXFREQ
 855:TP2824/TP2802.c **** 	0xd0, 0x00,		//RXFREQ
 856:TP2824/TP2802.c **** 	0xd1, 0x00,		//RXFREQ
 857:TP2824/TP2802.c **** 	0xd2, 0x60,		//RXTHLEVEL
 858:TP2824/TP2802.c **** 	0xd3, 0x10,		//RXHINUM
 859:TP2824/TP2802.c **** 	0xd4, 0x06,		//RXHST / RXHEND
 860:TP2824/TP2802.c **** 	0xd5, 0xbe,		//RXHST
 861:TP2824/TP2802.c **** 	0xd6, 0x39,		//RXHEND
 862:TP2824/TP2802.c **** 	0xd7, 0x27,		//RXBITNUM
 863:TP2824/TP2802.c **** 	
 864:TP2824/TP2802.c **** 	0xa7, 0x24,//RXPWM / RXACP
 865:TP2824/TP2802.c **** */	
 866:TP2824/TP2802.c **** 	0xff, 0xff
 867:TP2824/TP2802.c **** };
 868:TP2824/TP2802.c **** 
 869:TP2824/TP2802.c **** tcByte TP2824C_CVIHD_PTZ_DataSet[] = {//CVI CHD
 870:TP2824/TP2802.c **** 
 871:TP2824/TP2802.c **** 		//PTZ COC
 872:TP2824/TP2802.c **** //TX	
 873:TP2824/TP2802.c **** 	 0x70, 0x1D,   //TCMFR[4]=1 / TXLMD[3]=1 / TXLNUM[2:0]=5
 874:TP2824/TP2802.c **** 	 0xc0, 0x00,	//TXLINE2  / TXLINE1
 875:TP2824/TP2802.c **** 	 0xc2, 0x10,	//TXLINE1		//line18
 876:TP2824/TP2802.c **** 	 0xc3, 0x00,	//TXLINE2		//line19
 877:TP2824/TP2802.c **** 	 0xc1, 0x00,	//TXLINE4  / TXLINE3
 878:TP2824/TP2802.c **** 	 0xc4, 0x00,	//TXLINE3
 879:TP2824/TP2802.c **** 	 0xc5, 0x00,	//TXLINE4
 880:TP2824/TP2802.c **** 	 0xc6, 0x15,	//TXBITCKNUM
 881:TP2824/TP2802.c **** 	 0xc7, 0x5B,	//TXHST[7:0]		//TXHST=0x25B
 882:TP2824/TP2802.c **** 	 0xc8, 0xa4,//0x97,	//TXHST[9:8]0b10xx xxxx / TXBITNUM:0x17=>0x24
 883:TP2824/TP2802.c **** 	 0x6f, 0x48,	//TXn pin enable / TXDAH
 884:TP2824/TP2802.c **** 
 885:TP2824/TP2802.c **** 	 //TXLINE1DATA
 886:TP2824/TP2802.c **** 	 0x55, 0x00,
 887:TP2824/TP2802.c **** 	 0x56, 0x00,
 888:TP2824/TP2802.c **** 	 0x57, 0x00,
 889:TP2824/TP2802.c **** 	 0x58, 0x00,
ARM GAS  /tmp/ccnKW75d.s 			page 17


 890:TP2824/TP2802.c **** 	 0x59, 0x00,//cmd2 [LSB first]
 891:TP2824/TP2802.c **** 	 0x5a, 0x00,//cmd1 [LSB first]
 892:TP2824/TP2802.c **** 	 //TXLINE2DATA
 893:TP2824/TP2802.c **** 	 0x5b, 0x00,
 894:TP2824/TP2802.c **** 	 0x5c, 0x00,
 895:TP2824/TP2802.c **** 	 0x5d, 0x00,
 896:TP2824/TP2802.c **** 	 0x5e, 0x00,
 897:TP2824/TP2802.c **** 	 0x5f, 0x00,//data2 [LSB first]
 898:TP2824/TP2802.c **** 	 0x60, 0x00,//data1 [LSB first]
 899:TP2824/TP2802.c **** 	 //TXLINE3DATA
 900:TP2824/TP2802.c **** 	 0x62, 0x00,
 901:TP2824/TP2802.c **** 	 0x63, 0x00,
 902:TP2824/TP2802.c **** 	 0x64, 0x00,
 903:TP2824/TP2802.c **** 	 0x65, 0x00,
 904:TP2824/TP2802.c **** 	 0x66, 0x00,
 905:TP2824/TP2802.c ****  	 //TXLINE4DATA
 906:TP2824/TP2802.c **** 	 0x68, 0x00,
 907:TP2824/TP2802.c **** 	 0x69, 0x00,
 908:TP2824/TP2802.c **** 	 0x6a, 0x00,
 909:TP2824/TP2802.c **** 	 0x6b, 0x00,
 910:TP2824/TP2802.c **** 	 0x6c, 0x00,
 911:TP2824/TP2802.c **** /* 	
 912:TP2824/TP2802.c ****  //RX
 913:TP2824/TP2802.c **** 	0xcb, 0x07,		//RXLINE1
 914:TP2824/TP2802.c **** 	0xcc, 0x08,		//RXLINE2
 915:TP2824/TP2802.c **** 	0xcd, 0x00,//0x09,		//RXLINE3
 916:TP2824/TP2802.c **** 	0xce, 0x00,//0x0a,		//RXLINE4
 917:TP2824/TP2802.c **** 	0xcf, 0x04,		//RXFREQ
 918:TP2824/TP2802.c **** 	0xd0, 0x00,		//RXFREQ
 919:TP2824/TP2802.c **** 	0xd1, 0x00,		//RXFREQ
 920:TP2824/TP2802.c **** 	0xd2, 0x60,		//RXTHLEVEL
 921:TP2824/TP2802.c **** 	0xd3, 0x10,		//RXHINUM
 922:TP2824/TP2802.c **** 	0xd4, 0x06,		//RXHST / RXHEND
 923:TP2824/TP2802.c **** 	0xd5, 0xbe,		//RXHST
 924:TP2824/TP2802.c **** 	0xd6, 0x39,		//RXHEND
 925:TP2824/TP2802.c **** 	0xd7, 0x27,		//RXBITNUM
 926:TP2824/TP2802.c **** 	
 927:TP2824/TP2802.c **** 	0xa7, 0x24,//RXPWM / RXACP
 928:TP2824/TP2802.c **** */	
 929:TP2824/TP2802.c **** 	0xff, 0xff
 930:TP2824/TP2802.c **** };
 931:TP2824/TP2802.c **** #endif
 932:TP2824/TP2802.c **** 	 
 933:TP2824/TP2802.c **** //chunyu
 934:TP2824/TP2802.c **** void I2CDeviceSet1( tcByte *RegSet)
 935:TP2824/TP2802.c **** {
 936:TP2824/TP2802.c **** 	int	cnt=0;
 937:TP2824/TP2802.c **** 	tByte index, val;
 938:TP2824/TP2802.c **** 
 939:TP2824/TP2802.c **** 	// Output discription
 940:TP2824/TP2802.c **** 	#ifdef TASKING
 941:TP2824/TP2802.c **** 	while( *RegSet ) 
 942:TP2824/TP2802.c **** 		RS_tx( *RegSet++ );
 943:TP2824/TP2802.c **** 	RegSet++;
 944:TP2824/TP2802.c **** 	#endif
 945:TP2824/TP2802.c **** 
 946:TP2824/TP2802.c **** 	while ( *RegSet != 0xFF ) {
ARM GAS  /tmp/ccnKW75d.s 			page 18


 947:TP2824/TP2802.c **** 
 948:TP2824/TP2802.c **** 		index = *RegSet;
 949:TP2824/TP2802.c **** 		val = *(RegSet+1);
 950:TP2824/TP2802.c **** //		MonWriteI2C(addr, index, val);
 951:TP2824/TP2802.c **** 		tp28xx_byte_write(index, val);
 952:TP2824/TP2802.c **** 
 953:TP2824/TP2802.c **** //		Puts("\r\n");
 954:TP2824/TP2802.c **** 
 955:TP2824/TP2802.c **** 		RegSet+=2;
 956:TP2824/TP2802.c **** 
 957:TP2824/TP2802.c **** 		cnt--;
 958:TP2824/TP2802.c **** 	}	
 959:TP2824/TP2802.c ****     delay(50); //50*5 =250ms
 960:TP2824/TP2802.c **** }
 961:TP2824/TP2802.c **** 
 962:TP2824/TP2802.c **** 
 963:TP2824/TP2802.c **** void I2CDeviceSet2( tcByte *RegSet, tcByte *DatSet)
 964:TP2824/TP2802.c **** {
 965:TP2824/TP2802.c **** 	int	cnt=0;
 966:TP2824/TP2802.c **** 	tByte index, val;
 967:TP2824/TP2802.c **** 
 968:TP2824/TP2802.c **** 	while ( *RegSet != 0xFF ) {
 969:TP2824/TP2802.c **** 
 970:TP2824/TP2802.c **** 		index = *RegSet;
 971:TP2824/TP2802.c **** 		val = *DatSet;
 972:TP2824/TP2802.c **** //		MonWriteI2C(addr, index, val);
 973:TP2824/TP2802.c **** 		tp28xx_byte_write(index, val);
 974:TP2824/TP2802.c **** 
 975:TP2824/TP2802.c **** //		Puts("\r\n");
 976:TP2824/TP2802.c **** 
 977:TP2824/TP2802.c **** 		RegSet++;
 978:TP2824/TP2802.c **** 		DatSet++;
 979:TP2824/TP2802.c **** 
 980:TP2824/TP2802.c **** 		cnt--;
 981:TP2824/TP2802.c **** 	}
 982:TP2824/TP2802.c ****     delay(50); //50*5 =250ms
 983:TP2824/TP2802.c **** }
 984:TP2824/TP2802.c **** 
 985:TP2824/TP2802.c **** void SetRegPage(tByte channel)
 986:TP2824/TP2802.c **** {
 987:TP2824/TP2802.c ****     //tByte tmp;
 988:TP2824/TP2802.c ****     //tmp = tp28xx_byte_read(tByte index);
 989:TP2824/TP2802.c ****     tp28xx_byte_write(0x40,channel);
 990:TP2824/TP2802.c ****     //tp28xx_byte_write(0x40,0x04); //chunyu
 991:TP2824/TP2802.c ****  //  printf("\r\nChannel-%02x ",(tWord)channel);
 992:TP2824/TP2802.c **** }
 993:TP2824/TP2802.c **** 
 994:TP2824/TP2802.c **** /*
 995:TP2824/TP2802.c **** void Write_AllRegPage(tByte addr, tByte bitpos, tByte bitval){
 996:TP2824/TP2802.c **** 	tByte ch;
 997:TP2824/TP2802.c **** 	tByte val;
 998:TP2824/TP2802.c **** 	tByte mask=0x00;
 999:TP2824/TP2802.c **** 	tByte maskb;
1000:TP2824/TP2802.c **** 	tByte Reg40;
1001:TP2824/TP2802.c **** 
1002:TP2824/TP2802.c **** 	Reg40 = tp28xx_byte_read(TVII2CAddress,0x40);
1003:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccnKW75d.s 			page 19


1004:TP2824/TP2802.c **** 	mask = 0x01 << bitpos;
1005:TP2824/TP2802.c **** 	maskb = ~mask;
1006:TP2824/TP2802.c **** 
1007:TP2824/TP2802.c **** 	for(ch=CH1;ch<=CH4;ch++){
1008:TP2824/TP2802.c **** 		tp28xx_byte_write(TVII2CAddress,0x40,ch);
1009:TP2824/TP2802.c **** 		val = tp28xx_byte_read(TVII2CAddress,addr);
1010:TP2824/TP2802.c **** 		if(bitval)
1011:TP2824/TP2802.c **** 			tp28xx_byte_write(TVII2CAddress,addr,(val|mask));
1012:TP2824/TP2802.c **** 		else
1013:TP2824/TP2802.c **** 			tp28xx_byte_write(TVII2CAddress,addr,(val&maskb));
1014:TP2824/TP2802.c **** 	}
1015:TP2824/TP2802.c **** 
1016:TP2824/TP2802.c **** 	tp28xx_byte_write(TVII2CAddress,0x40,Reg40);
1017:TP2824/TP2802.c **** }
1018:TP2824/TP2802.c **** */
1019:TP2824/TP2802.c **** 
1020:TP2824/TP2802.c **** /*
1021:TP2824/TP2802.c **** void Set_16Bits_VDCLK_Out(){
1022:TP2824/TP2802.c **** 
1023:TP2824/TP2802.c **** 	Write_AllRegPage(0x02,7,0);
1024:TP2824/TP2802.c **** 	tp28xx_byte_write(TVII2CAddress,0x4b,0x40);
1025:TP2824/TP2802.c **** }
1026:TP2824/TP2802.c **** 
1027:TP2824/TP2802.c **** void Set_16Bits_VD_Out(tByte channel){
1028:TP2824/TP2802.c **** 	tByte Reg02,Reg4b;
1029:TP2824/TP2802.c **** 	tByte VD2SEL;
1030:TP2824/TP2802.c **** 	tByte VD1SEL;
1031:TP2824/TP2802.c **** 	tByte dat;
1032:TP2824/TP2802.c **** 
1033:TP2824/TP2802.c **** 	Reg02 = tp28xx_byte_read(TVII2CAddress,0x02);
1034:TP2824/TP2802.c **** 	Reg4b = tp28xx_byte_read(TVII2CAddress,0x4b);
1035:TP2824/TP2802.c **** 
1036:TP2824/TP2802.c **** 
1037:TP2824/TP2802.c **** 	tp28xx_byte_write(TVII2CAddress,0x02,(Reg02&0x7f));
1038:TP2824/TP2802.c **** 
1039:TP2824/TP2802.c **** 	switch (channel){
1040:TP2824/TP2802.c **** 		case CH1:
1041:TP2824/TP2802.c **** 			VD2SEL = VIN1_C;
1042:TP2824/TP2802.c **** 			VD1SEL = VIN1_Y;
1043:TP2824/TP2802.c **** 			break;
1044:TP2824/TP2802.c **** 		case CH2:
1045:TP2824/TP2802.c **** 			VD2SEL = VIN2_C;
1046:TP2824/TP2802.c **** 			VD1SEL = VIN2_Y;
1047:TP2824/TP2802.c **** 			break;
1048:TP2824/TP2802.c **** 		case CH3:
1049:TP2824/TP2802.c **** 			VD2SEL = VIN3_C;
1050:TP2824/TP2802.c **** 			VD1SEL = VIN3_Y;
1051:TP2824/TP2802.c **** 			break;
1052:TP2824/TP2802.c **** 		case CH4:
1053:TP2824/TP2802.c **** 			VD2SEL = VIN4_C;
1054:TP2824/TP2802.c **** 			VD1SEL = VIN4_Y;
1055:TP2824/TP2802.c **** 			break;
1056:TP2824/TP2802.c **** 		}
1057:TP2824/TP2802.c **** 	dat = (VD2SEL<<4)|VD1SEL;
1058:TP2824/TP2802.c **** 	tp28xx_byte_write(TVII2CAddress,0x4b,dat);
1059:TP2824/TP2802.c **** 
1060:TP2824/TP2802.c **** }
ARM GAS  /tmp/ccnKW75d.s 			page 20


1061:TP2824/TP2802.c **** */
1062:TP2824/TP2802.c **** 
1063:TP2824/TP2802.c **** tcByte TP2802_FORMAT_DataSet[][12+1] =
1064:TP2824/TP2802.c **** {
1065:TP2824/TP2802.c ****     {0x02,0x15,0x16,0x17,0x18,0x19,0x1a,0x1c,0x1d,0x35,0x36,0x14,0xff}, //reg
1066:TP2824/TP2802.c ****     {0x48,0x03,0xd3,0x80,0x29,0x38,0x47,0x08,0x98,0x05,0xdc,0x0A,0xff}, //1080p30
1067:TP2824/TP2802.c ****     {0x48,0x03,0xd3,0x80,0x29,0x38,0x47,0x0a,0x50,0x05,0xdc,0x0A,0xff}, //1080p25
1068:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x06,0x72,0x05,0xdc,0x0A,0xff}, //720p60 720p30V2
1069:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x07,0xbc,0x05,0xdc,0x0A,0xff}, //720p50 720p25V2
1070:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x0c,0xe4,0x05,0xdc,0x0A,0xff}, //720p30    //5
1071:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x0f,0x78,0x05,0xdc,0x0A,0xff}, //720p25
1072:TP2824/TP2802.c ****     {0x4f,0x13,0x4e,0xbc,0x15,0xf0,0x07,0x09,0x38,0x25,0xdc,0x0A,0xff}, //NTSC
1073:TP2824/TP2802.c ****     {0x4f,0x13,0x5f,0xbc,0x17,0x20,0x17,0x09,0x48,0x25,0xdc,0x0A,0xff}, //PAL
1074:TP2824/TP2802.c ****     {0x48,0x13,0x6c,0x00,0x2c,0x00,0x68,0x09,0xc4,0x16,0x30,0x0A,0xff}, //3M18
1075:TP2824/TP2802.c ****     {0x48,0x13,0x1f,0x20,0x34,0x98,0x7a,0x0b,0x9a,0x17,0xd0,0x0A,0xff}, //5M12      //10
1076:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x06,0x72,0x25,0xdc,0x0A,0xff}, //720p30V2
1077:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x07,0xbc,0x25,0xdc,0x0A,0xff}, //720p25V2
1078:TP2824/TP2802.c ****     {0x48,0x13,0x1f,0x80,0x7d,0xf0,0x5a,0x0b,0xb8,0x16,0x72,0x0A,0xff}, //4M15
1079:TP2824/TP2802.c ****     {0x48,0x13,0x6c,0x00,0x2c,0x00,0x68,0x09,0xc4,0x16,0x72,0x0A,0xff}, //3M20
1080:TP2824/TP2802.c ****     {0x48,0x23,0x34,0x78,0x8c,0xf0,0x5a,0x0c,0xe4,0x17,0x08,0x0A,0xff}, //4M12
1081:TP2824/TP2802.c ****     {0x48,0x13,0xec,0x80,0xb0,0x08,0x7c,0x0e,0xa6,0x17,0xbc,0x0A,0xff}, //6M10
1082:TP2824/TP2802.c ****     {0x48,0x13,0x0f,0x00,0x32,0xa0,0x55,0x06,0x72,0x15,0xdc,0x0A,0xff}, //4M30
1083:TP2824/TP2802.c ****     {0x48,0x13,0x20,0x00,0x20,0xa0,0x55,0x07,0xbc,0x15,0xdc,0x0A,0xff}  //4M25
1084:TP2824/TP2802.c **** 
1085:TP2824/TP2802.c ****     //{0xc8,0x13,0x6c,0x20,0x2c,0xf0,0x5a,0x0b,0xb8,0x16,0x72,0xff}, //2592x1520p15
1086:TP2824/TP2802.c **** };
1087:TP2824/TP2802.c **** 
1088:TP2824/TP2802.c **** static void tp28xx_SYSCLK_V2(unsigned char ch)
1089:TP2824/TP2802.c **** {
1090:TP2824/TP2802.c ****     unsigned char tmp;
1091:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0xf5);
1092:TP2824/TP2802.c ****     tmp |= SYS_MODE[ch];
1093:TP2824/TP2802.c ****     tp28xx_byte_write(0xf5, tmp);
1094:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x35);
1095:TP2824/TP2802.c ****     tmp |= 0x20;
1096:TP2824/TP2802.c ****     tp28xx_byte_write(0x35, tmp);
1097:TP2824/TP2802.c **** }
1098:TP2824/TP2802.c **** static void tp28xx_SYSCLK_V1(unsigned char ch)
1099:TP2824/TP2802.c **** {
1100:TP2824/TP2802.c ****     unsigned char tmp;
1101:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0xf5);
1102:TP2824/TP2802.c ****     tmp &= SYS_AND[ch];
1103:TP2824/TP2802.c ****     tp28xx_byte_write(0xf5, tmp);
1104:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x35);
1105:TP2824/TP2802.c ****     tmp &= 0xdf;
1106:TP2824/TP2802.c ****     tp28xx_byte_write(0x35, tmp);
1107:TP2824/TP2802.c **** }
1108:TP2824/TP2802.c **** 
1109:TP2824/TP2802.c **** void Set_VidRes(tByte ch)
1110:TP2824/TP2802.c **** {
1111:TP2824/TP2802.c ****     tByte index, sys, tmp;
1112:TP2824/TP2802.c **** 	sys = 1;  //V1
1113:TP2824/TP2802.c ****     //printf("Set_VidRes");
1114:TP2824/TP2802.c ****     switch(mode[ch])
1115:TP2824/TP2802.c ****     {
1116:TP2824/TP2802.c ****     case R1080P30:
1117:TP2824/TP2802.c ****         index=1;//1080p30
ARM GAS  /tmp/ccnKW75d.s 			page 21


1118:TP2824/TP2802.c ****         sys=1;//V1
1119:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1120:TP2824/TP2802.c ****         printf("1080p30");
1121:TP2824/TP2802.c ****         break;
1122:TP2824/TP2802.c **** 
1123:TP2824/TP2802.c ****     case R1080P25:
1124:TP2824/TP2802.c ****         index=2;//1080p25
1125:TP2824/TP2802.c ****         sys=1;//V1
1126:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1127:TP2824/TP2802.c ****         printf("1080p25");
1128:TP2824/TP2802.c ****         break;
1129:TP2824/TP2802.c **** 
1130:TP2824/TP2802.c ****     case R720P60:
1131:TP2824/TP2802.c ****         index=3;//720p60 720p30V2
1132:TP2824/TP2802.c ****         sys=1;//V1
1133:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1134:TP2824/TP2802.c ****         printf("720p60");
1135:TP2824/TP2802.c ****         break;
1136:TP2824/TP2802.c **** 
1137:TP2824/TP2802.c ****     case R720P30V2:
1138:TP2824/TP2802.c ****         index=11;//720p30V2 
1139:TP2824/TP2802.c ****         sys=2;//V2
1140:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1141:TP2824/TP2802.c ****         printf("720p30V2");
1142:TP2824/TP2802.c ****         break;
1143:TP2824/TP2802.c **** 
1144:TP2824/TP2802.c ****     case R720P50:
1145:TP2824/TP2802.c ****         index=4;//720p50 720p25V2
1146:TP2824/TP2802.c ****         sys=1;//V1
1147:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1148:TP2824/TP2802.c ****         printf("720p50");
1149:TP2824/TP2802.c ****         break;
1150:TP2824/TP2802.c **** 
1151:TP2824/TP2802.c ****     case R720P25V2:
1152:TP2824/TP2802.c ****         index=12;//720p25V2 
1153:TP2824/TP2802.c ****         sys=2;//V2
1154:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1155:TP2824/TP2802.c ****         printf("720p25V2");
1156:TP2824/TP2802.c ****         break;
1157:TP2824/TP2802.c **** 
1158:TP2824/TP2802.c ****     case R720P30:
1159:TP2824/TP2802.c ****         index=5;//720p30
1160:TP2824/TP2802.c ****         sys=1;//V1
1161:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1162:TP2824/TP2802.c ****         printf("720p30");
1163:TP2824/TP2802.c ****         break;
1164:TP2824/TP2802.c **** 
1165:TP2824/TP2802.c ****     case R720P25:
1166:TP2824/TP2802.c ****         index=6;//720p25
1167:TP2824/TP2802.c ****         sys=1;//V1
1168:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1169:TP2824/TP2802.c ****         printf("720p25");
1170:TP2824/TP2802.c ****         break;
1171:TP2824/TP2802.c **** 
1172:TP2824/TP2802.c ****     case PAL:
1173:TP2824/TP2802.c ****         index=8;
1174:TP2824/TP2802.c ****         sys=4;
ARM GAS  /tmp/ccnKW75d.s 			page 22


1175:TP2824/TP2802.c ****         ManVidResRx=RES1920X576;
1176:TP2824/TP2802.c ****         printf("PAL");
1177:TP2824/TP2802.c ****         break;
1178:TP2824/TP2802.c **** 
1179:TP2824/TP2802.c ****     case NTSC:
1180:TP2824/TP2802.c ****         index=7;
1181:TP2824/TP2802.c ****         sys=3;
1182:TP2824/TP2802.c ****         ManVidResRx=RES1920X480;
1183:TP2824/TP2802.c ****         printf("NTSC");
1184:TP2824/TP2802.c ****         break;
1185:TP2824/TP2802.c **** 
1186:TP2824/TP2802.c ****     case R3M18:
1187:TP2824/TP2802.c ****         index=9;//3M18           
1188:TP2824/TP2802.c ****         sys=1;//V1
1189:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1190:TP2824/TP2802.c ****         printf("3M18");
1191:TP2824/TP2802.c ****         break;
1192:TP2824/TP2802.c **** 
1193:TP2824/TP2802.c ****     case R5M12:
1194:TP2824/TP2802.c ****         index=10;//5M12 
1195:TP2824/TP2802.c ****         sys=1;//V1
1196:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1197:TP2824/TP2802.c ****         printf("5M12");
1198:TP2824/TP2802.c ****         break;
1199:TP2824/TP2802.c **** 
1200:TP2824/TP2802.c ****     case R4M15:
1201:TP2824/TP2802.c ****         index=13;//4M15
1202:TP2824/TP2802.c ****         sys=1;//V1
1203:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1204:TP2824/TP2802.c ****         printf("4M15");
1205:TP2824/TP2802.c ****         break;
1206:TP2824/TP2802.c **** 
1207:TP2824/TP2802.c ****     case R3M20:
1208:TP2824/TP2802.c ****         index=14;//3M20
1209:TP2824/TP2802.c ****         sys=1;//V1
1210:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1211:TP2824/TP2802.c ****         printf("3M20");
1212:TP2824/TP2802.c ****         break;
1213:TP2824/TP2802.c **** 
1214:TP2824/TP2802.c ****     case R4M12:
1215:TP2824/TP2802.c ****         index=15;//4M12
1216:TP2824/TP2802.c ****         sys=1;//V1
1217:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1218:TP2824/TP2802.c ****         printf("4M12");
1219:TP2824/TP2802.c ****         break;
1220:TP2824/TP2802.c **** 
1221:TP2824/TP2802.c ****     case R6M10:
1222:TP2824/TP2802.c ****         index=16;//6M10
1223:TP2824/TP2802.c ****         sys=1;//V1
1224:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1225:TP2824/TP2802.c ****         printf("6M10");
1226:TP2824/TP2802.c ****         break;
1227:TP2824/TP2802.c **** 
1228:TP2824/TP2802.c ****     case R4M30:
1229:TP2824/TP2802.c ****         index=17;//4M30
1230:TP2824/TP2802.c ****         sys=1;//V1
1231:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
ARM GAS  /tmp/ccnKW75d.s 			page 23


1232:TP2824/TP2802.c ****         printf("4M30");
1233:TP2824/TP2802.c ****         break;
1234:TP2824/TP2802.c **** 
1235:TP2824/TP2802.c ****     default:
1236:TP2824/TP2802.c ****         index=1;//1080p30
1237:TP2824/TP2802.c ****         break;
1238:TP2824/TP2802.c ****     }
1239:TP2824/TP2802.c ****     printf("...\r\n");
1240:TP2824/TP2802.c **** 
1241:TP2824/TP2802.c ****     //I2CDeviceSet(TVII2CAddress, ptr_TP2802_Res );
1242:TP2824/TP2802.c ****     I2CDeviceSet2( TP2802_FORMAT_DataSet[0],TP2802_FORMAT_DataSet[index] );
1243:TP2824/TP2802.c ****     //	printf("chip= 0x%4x\r\n",chip);
1244:TP2824/TP2802.c **** if( mode[ch]==R1080P30)
1245:TP2824/TP2802.c **** {
1246:TP2824/TP2802.c ****     tp28xx_byte_write(0x16, 0xCE);
1247:TP2824/TP2802.c **** }
1248:TP2824/TP2802.c **** 
1249:TP2824/TP2802.c ****     if(TP2853C == chip)
1250:TP2824/TP2802.c ****     {
1251:TP2824/TP2802.c ****         I2CDeviceSet2( TP2853C_MODE_DataSet[0],TP2853C_MODE_DataSet[sys] );
1252:TP2824/TP2802.c ****     }
1253:TP2824/TP2802.c ****     else if(TP2833 == chip)
1254:TP2824/TP2802.c ****     {
1255:TP2824/TP2802.c ****         I2CDeviceSet2( TP2833_MODE_DataSet[0],TP2833_MODE_DataSet[sys] );
1256:TP2824/TP2802.c ****     }
1257:TP2824/TP2802.c ****     else if(TP2834 == chip)
1258:TP2824/TP2802.c ****     {
1259:TP2824/TP2802.c ****         I2CDeviceSet2( TP2834_MODE_DataSet[0],TP2834_MODE_DataSet[sys] );
1260:TP2824/TP2802.c ****     }
1261:TP2824/TP2802.c ****     if(TP2826 == chip)
1262:TP2824/TP2802.c ****     {
1263:TP2824/TP2802.c ****         printf("tp2826MODEDATASET\r\n");
1264:TP2824/TP2802.c ****         I2CDeviceSet2( TP2826_MODE_DataSet[0],TP2826_MODE_DataSet[sys] );
1265:TP2824/TP2802.c ****     }
1266:TP2824/TP2802.c ****     if(TP2824C == chip)
1267:TP2824/TP2802.c ****     {
1268:TP2824/TP2802.c ****         printf("tp2824C MODEDATASET\r\n");
1269:TP2824/TP2802.c ****         I2CDeviceSet2( TP2824C_MODE_DataSet[0],TP2824C_MODE_DataSet[sys] );
1270:TP2824/TP2802.c ****     }
1271:TP2824/TP2802.c **** 
1272:TP2824/TP2802.c ****     if(1 == sys)
1273:TP2824/TP2802.c ****         tp28xx_SYSCLK_V1(ch);
1274:TP2824/TP2802.c ****     else
1275:TP2824/TP2802.c ****         tp28xx_SYSCLK_V2(ch);
1276:TP2824/TP2802.c **** 
1277:TP2824/TP2802.c ****     tp28xx_byte_write(0x13, 0x00);
1278:TP2824/TP2802.c ****     tmp=tp28xx_byte_read(0x14);
1279:TP2824/TP2802.c ****     tmp &= 0x9f;
1280:TP2824/TP2802.c ****     tp28xx_byte_write(0x14, tmp);
1281:TP2824/TP2802.c **** 
1282:TP2824/TP2802.c **** #if(OUTPUT == Bits16out)
1283:TP2824/TP2802.c ****     tmp=tp28xx_byte_read(0x02);
1284:TP2824/TP2802.c ****     tmp &= 0x7f;
1285:TP2824/TP2802.c ****     tp28xx_byte_write(0x02, tmp);
1286:TP2824/TP2802.c **** #else
1287:TP2824/TP2802.c ****     tmp=tp28xx_byte_read(0x02);
1288:TP2824/TP2802.c ****     tmp |= 0x80;
ARM GAS  /tmp/ccnKW75d.s 			page 24


1289:TP2824/TP2802.c ****     tp28xx_byte_write(0x02, tmp);
1290:TP2824/TP2802.c **** #endif
1291:TP2824/TP2802.c **** }
1292:TP2824/TP2802.c **** 
1293:TP2824/TP2802.c **** tByte Set_HDA(tByte ch)
1294:TP2824/TP2802.c **** {
1295:TP2824/TP2802.c **** 
1296:TP2824/TP2802.c ****     tByte index,tmp;
1297:TP2824/TP2802.c ****     index=0;
1298:TP2824/TP2802.c **** 
1299:TP2824/TP2802.c ****     switch(mode[ch])
1300:TP2824/TP2802.c ****     {
1301:TP2824/TP2802.c ****     case R1080P30:
1302:TP2824/TP2802.c ****         index=3;
1303:TP2824/TP2802.c ****         break;
1304:TP2824/TP2802.c **** 
1305:TP2824/TP2802.c ****     case R1080P25:
1306:TP2824/TP2802.c ****         index=4;
1307:TP2824/TP2802.c ****         break;
1308:TP2824/TP2802.c **** 		
1309:TP2824/TP2802.c ****     case R720P60://20200507    
1310:TP2824/TP2802.c ****     case R720P30V2:
1311:TP2824/TP2802.c ****         index=1;
1312:TP2824/TP2802.c ****         break;
1313:TP2824/TP2802.c **** 		
1314:TP2824/TP2802.c ****     case R720P50://20200507    
1315:TP2824/TP2802.c ****     case R720P25V2:
1316:TP2824/TP2802.c ****         index=2;
1317:TP2824/TP2802.c ****         break;
1318:TP2824/TP2802.c ****     }
1319:TP2824/TP2802.c ****     if(index)
1320:TP2824/TP2802.c ****     {
1321:TP2824/TP2802.c ****         Set_VidRes(ch);
1322:TP2824/TP2802.c **** 
1323:TP2824/TP2802.c ****         if(TP2853C == chip)
1324:TP2824/TP2802.c ****         {
1325:TP2824/TP2802.c ****             I2CDeviceSet2(TP2853C_HDA_DataSet[0],TP2853C_HDA_DataSet[index] );
1326:TP2824/TP2802.c ****         }
1327:TP2824/TP2802.c ****         else if(TP2833 == chip || TP2834 == chip )
1328:TP2824/TP2802.c ****         {
1329:TP2824/TP2802.c ****             I2CDeviceSet2(TP2833_HDA_DataSet[0],TP2833_HDA_DataSet[index] );
1330:TP2824/TP2802.c ****         }
1331:TP2824/TP2802.c ****         else if(TP2826 == chip)
1332:TP2824/TP2802.c ****         {
1333:TP2824/TP2802.c ****             I2CDeviceSet2(TP2826_HDA_DataSet[0],TP2826_HDA_DataSet[index] );
1334:TP2824/TP2802.c ****         }
1335:TP2824/TP2802.c ****         else if(TP2824C == chip)
1336:TP2824/TP2802.c ****         {
1337:TP2824/TP2802.c ****             I2CDeviceSet2(TP2824C_HDA_DataSet[0],TP2824C_HDA_DataSet[index] );
1338:TP2824/TP2802.c **** 
1339:TP2824/TP2802.c **** 		if(mode[ch]==R1080P30)
1340:TP2824/TP2802.c **** 			    tp28xx_byte_write(0x19, 0x3A);
1341:TP2824/TP2802.c **** 			
1342:TP2824/TP2802.c ****         }
1343:TP2824/TP2802.c ****         tmp=tp28xx_byte_read(0x14);
1344:TP2824/TP2802.c ****         tmp |= 0x40;
1345:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccnKW75d.s 			page 25


1346:TP2824/TP2802.c **** 		
1347:TP2824/TP2802.c **** //   	tmp|=0x0a;//0x14 sharpness   =0x0a ryan@20210317
1348:TP2824/TP2802.c **** //   	tmp=0x0a;//0x14 sharpness   =0x0a ryan@20210629
1349:TP2824/TP2802.c ****    
1350:TP2824/TP2802.c ****  //       tp28xx_byte_write(0x14, tmp);
1351:TP2824/TP2802.c **** 
1352:TP2824/TP2802.c ****     }
1353:TP2824/TP2802.c ****     return index;
1354:TP2824/TP2802.c **** }
1355:TP2824/TP2802.c **** 
1356:TP2824/TP2802.c **** tByte Set_HDC(tByte ch)
1357:TP2824/TP2802.c **** {
1358:TP2824/TP2802.c **** 
1359:TP2824/TP2802.c ****     tByte index;
1360:TP2824/TP2802.c **** 
1361:TP2824/TP2802.c ****     index=0;
1362:TP2824/TP2802.c **** 
1363:TP2824/TP2802.c ****     switch(mode[ch])
1364:TP2824/TP2802.c ****     {
1365:TP2824/TP2802.c **** 
1366:TP2824/TP2802.c ****     case R1080P30:
1367:TP2824/TP2802.c ****         index=3;
1368:TP2824/TP2802.c ****         break;
1369:TP2824/TP2802.c **** 
1370:TP2824/TP2802.c ****     case R1080P25:
1371:TP2824/TP2802.c ****         index=4;
1372:TP2824/TP2802.c ****         break;
1373:TP2824/TP2802.c **** 
1374:TP2824/TP2802.c ****     case R720P60://20200507    
1375:TP2824/TP2802.c ****     case R720P30V2:
1376:TP2824/TP2802.c ****         index=1;
1377:TP2824/TP2802.c ****         break;
1378:TP2824/TP2802.c **** 
1379:TP2824/TP2802.c ****     case R720P50://20200507    
1380:TP2824/TP2802.c ****     case R720P25V2:
1381:TP2824/TP2802.c ****         index=2;
1382:TP2824/TP2802.c ****         break;
1383:TP2824/TP2802.c ****     }
1384:TP2824/TP2802.c ****     if(index)
1385:TP2824/TP2802.c ****     {
1386:TP2824/TP2802.c ****         Set_VidRes(ch);
1387:TP2824/TP2802.c **** 
1388:TP2824/TP2802.c ****         if(TP2853C == chip)
1389:TP2824/TP2802.c ****         {
1390:TP2824/TP2802.c ****             I2CDeviceSet2( TP2853C_HDC_DataSet[0],TP2853C_HDC_DataSet[index] );
1391:TP2824/TP2802.c ****         }
1392:TP2824/TP2802.c ****         else if(TP2833 == chip || TP2834 == chip )
1393:TP2824/TP2802.c ****         {
1394:TP2824/TP2802.c ****             I2CDeviceSet2( TP2853C_HDC_DataSet[0],TP2853C_HDC_DataSet[index] );
1395:TP2824/TP2802.c ****         }
1396:TP2824/TP2802.c ****         else if(TP2826 == chip)
1397:TP2824/TP2802.c ****         {
1398:TP2824/TP2802.c ****             I2CDeviceSet2( TP2826_HDC_DataSet[0],TP2826_HDC_DataSet[index] );
1399:TP2824/TP2802.c ****         }
1400:TP2824/TP2802.c ****         else if(TP2824C == chip)
1401:TP2824/TP2802.c ****         {
1402:TP2824/TP2802.c ****             I2CDeviceSet2( TP2824C_HDC_DataSet[0],TP2824C_HDC_DataSet[index] );
ARM GAS  /tmp/ccnKW75d.s 			page 26


1403:TP2824/TP2802.c ****         }
1404:TP2824/TP2802.c ****         tp28xx_byte_write(0x13, 0x40);
1405:TP2824/TP2802.c ****     }
1406:TP2824/TP2802.c ****     return index;
1407:TP2824/TP2802.c **** }
1408:TP2824/TP2802.c **** 
1409:TP2824/TP2802.c **** tByte Det_VidRes()
1410:TP2824/TP2802.c **** {
1411:TP2824/TP2802.c ****     tByte CVSTD;
1412:TP2824/TP2802.c ****     tByte RES;
1413:TP2824/TP2802.c **** 
1414:TP2824/TP2802.c ****     CVSTD = tp28xx_byte_read(0x03) & 0x07;
1415:TP2824/TP2802.c **** 
1416:TP2824/TP2802.c ****     switch (CVSTD)
1417:TP2824/TP2802.c ****     {
1418:TP2824/TP2802.c **** 
1419:TP2824/TP2802.c ****     case 0x00:
1420:TP2824/TP2802.c ****         RES = R720P60;
1421:TP2824/TP2802.c ****         break;
1422:TP2824/TP2802.c ****     case 0x01:
1423:TP2824/TP2802.c ****         RES = R720P50;
1424:TP2824/TP2802.c ****         break;
1425:TP2824/TP2802.c ****     case 0x02:
1426:TP2824/TP2802.c ****         RES = R1080P30;
1427:TP2824/TP2802.c ****         break;
1428:TP2824/TP2802.c ****     case 0x03:
1429:TP2824/TP2802.c ****         RES = R1080P25;
1430:TP2824/TP2802.c ****         break;
1431:TP2824/TP2802.c ****     case 0x04:
1432:TP2824/TP2802.c ****         RES = R720P30;
1433:TP2824/TP2802.c ****         break;
1434:TP2824/TP2802.c ****     case 0x05:
1435:TP2824/TP2802.c ****         RES = R720P25;
1436:TP2824/TP2802.c ****         break;
1437:TP2824/TP2802.c ****     case 0x06:
1438:TP2824/TP2802.c ****         printf("\r\nN/P detected");
1439:TP2824/TP2802.c ****         RES = NTPAL;
1440:TP2824/TP2802.c ****         break;
1441:TP2824/TP2802.c ****     default:
1442:TP2824/TP2802.c ****         printf("\r\nNo res detect...");
1443:TP2824/TP2802.c ****         RES = NoDet;
1444:TP2824/TP2802.c ****         break;
1445:TP2824/TP2802.c ****     }
1446:TP2824/TP2802.c **** 
1447:TP2824/TP2802.c ****     return RES;
1448:TP2824/TP2802.c **** 
1449:TP2824/TP2802.c **** }
1450:TP2824/TP2802.c **** tByte Det_VideoLoss(tByte ch)
1451:TP2824/TP2802.c **** {
1452:TP2824/TP2802.c **** 
1453:TP2824/TP2802.c ****     tByte VDLOSS;
1454:TP2824/TP2802.c **** 
1455:TP2824/TP2802.c ****     tp28xx_byte_write(0x40,ch&0x03);
1456:TP2824/TP2802.c ****     VDLOSS = tp28xx_byte_read(0x01);
1457:TP2824/TP2802.c **** //	printf("video status 0x%02x on ch%01x\r\n",(tWord)VDLOSS,(tWord)ch);
1458:TP2824/TP2802.c **** 
1459:TP2824/TP2802.c ****     if(VDLOSS)	printf("No ");
ARM GAS  /tmp/ccnKW75d.s 			page 27


1460:TP2824/TP2802.c **** 
1461:TP2824/TP2802.c ****     printf("video detected");
1462:TP2824/TP2802.c **** 
1463:TP2824/TP2802.c **** 
1464:TP2824/TP2802.c ****     VDLOSS = VDLOSS>>7;
1465:TP2824/TP2802.c ****     return VDLOSS;
1466:TP2824/TP2802.c **** }
1467:TP2824/TP2802.c **** 
1468:TP2824/TP2802.c **** void ManualAGC(unsigned char ch)
1469:TP2824/TP2802.c **** {
1470:TP2824/TP2802.c ****     unsigned int agc;
1471:TP2824/TP2802.c ****     unsigned char tmp;
1472:TP2824/TP2802.c ****     //unsigned int i;
1473:TP2824/TP2802.c **** 
1474:TP2824/TP2802.c ****     tp28xx_byte_write(0x2F, 0x02);
1475:TP2824/TP2802.c ****     agc = tp28xx_byte_read(0x04);
1476:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
1477:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
1478:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
1479:TP2824/TP2802.c ****     agc &= 0x3f0;
1480:TP2824/TP2802.c ****     agc >>=1;
1481:TP2824/TP2802.c ****     if(agc > 0x1ff) agc = 0x1ff;
1482:TP2824/TP2802.c **** 
1483:TP2824/TP2802.c ****     printf("result AGC=0X%04x ch%02X\r\n", (tWord)agc, (tWord)ch);
1484:TP2824/TP2802.c ****     tp28xx_byte_write(0x08, agc&0xff);
1485:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x06);
1486:TP2824/TP2802.c ****     tmp &=0xf9;
1487:TP2824/TP2802.c ****     tmp |=(agc>>7)&0x02;
1488:TP2824/TP2802.c ****     tmp |=0x04;
1489:TP2824/TP2802.c ****     tp28xx_byte_write(0x06,tmp);
1490:TP2824/TP2802.c ****     
1491:TP2824/TP2802.c **** //test Dump Reg 
1492:TP2824/TP2802.c **** /*
1493:TP2824/TP2802.c ****     printf("DumpReg@strat\r\n") ;  
1494:TP2824/TP2802.c ****     tp28xx_byte_write(0x40,01); //
1495:TP2824/TP2802.c ****     for (i = 2 ; i< 255 ;i++)
1496:TP2824/TP2802.c ****     {
1497:TP2824/TP2802.c ****         tmp = tp28xx_byte_read((tByte)i);
1498:TP2824/TP2802.c ****         printf("88,%02X,%02X\r\n", i , (int)tmp ) ; 
1499:TP2824/TP2802.c ****     }
1500:TP2824/TP2802.c ****     printf("DumpReg@end\r\n") ; 
1501:TP2824/TP2802.c **** */
1502:TP2824/TP2802.c ****     
1503:TP2824/TP2802.c **** }
1504:TP2824/TP2802.c **** 
1505:TP2824/TP2802.c **** 
1506:TP2824/TP2802.c **** /*
1507:TP2824/TP2802.c **** static void tp2802D_reset_default(unsigned char ch)
1508:TP2824/TP2802.c **** {
1509:TP2824/TP2802.c ****     unsigned char tmp;
1510:TP2824/TP2802.c ****     tp28xx_byte_write(0x3A, 0x01);
1511:TP2824/TP2802.c ****     tp28xx_byte_write(0x0B, 0xC0);
1512:TP2824/TP2802.c ****     tp28xx_byte_write(0x07, 0xC0);
1513:TP2824/TP2802.c ****     tp28xx_byte_write(0x2e, 0x70);
1514:TP2824/TP2802.c ****     tp28xx_byte_write(0x39, 0x42);
1515:TP2824/TP2802.c ****     tp28xx_byte_write(0x09, 0x24);
1516:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x06);   // soft reset and auto agc when cable is unplug
ARM GAS  /tmp/ccnKW75d.s 			page 28


1517:TP2824/TP2802.c ****     tmp &= 0x7b;
1518:TP2824/TP2802.c ****     tp28xx_byte_write(0x06, tmp);
1519:TP2824/TP2802.c **** 
1520:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0xf5);
1521:TP2824/TP2802.c ****     if( tmp & SYS_MODE[ch])
1522:TP2824/TP2802.c ****     {
1523:TP2824/TP2802.c ****         tmp &= SYS_AND[ch];
1524:TP2824/TP2802.c ****         tp28xx_byte_write(0xf5, tmp);
1525:TP2824/TP2802.c ****     }
1526:TP2824/TP2802.c **** }
1527:TP2824/TP2802.c **** */
1528:TP2824/TP2802.c **** /*  //chunyu
1529:TP2824/TP2802.c **** static void tp282x_reset_AGC_CLK(unsigned char ch)
1530:TP2824/TP2802.c **** {
1531:TP2824/TP2802.c ****     unsigned char tmp;
1532:TP2824/TP2802.c **** 
1533:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x06);
1534:TP2824/TP2802.c ****     tmp &= 0xfb;
1535:TP2824/TP2802.c ****     tp28xx_byte_write(0x06, tmp);
1536:TP2824/TP2802.c **** 
1537:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0xf5);
1538:TP2824/TP2802.c ****     tmp &= SYS_AND[ch];
1539:TP2824/TP2802.c ****     tp28xx_byte_write(0xf5, tmp);
1540:TP2824/TP2802.c **** 
1541:TP2824/TP2802.c ****     tp28xx_byte_write(0x35, 0x05);
1542:TP2824/TP2802.c ****     tp28xx_byte_write(0x26, 0x01);
1543:TP2824/TP2802.c **** }
1544:TP2824/TP2802.c **** */
1545:TP2824/TP2802.c **** static void tp2824_reset_default(void)
1546:TP2824/TP2802.c **** {
  25              		.loc 1 1546 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29 0000 08B5     		push	{r3, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 3, -8
  33              		.cfi_offset 14, -4
1547:TP2824/TP2802.c ****     //unsigned char tmp;
1548:TP2824/TP2802.c ****     //tp28xx_byte_write(addr, 0x07, 0x40);
1549:TP2824/TP2802.c ****     //tp28xx_byte_write(addr, 0x0b, 0x40);
1550:TP2824/TP2802.c ****     //tp28xx_byte_write(addr, 0x3A, 0x88);
1551:TP2824/TP2802.c ****     tp28xx_byte_write(0x26, 0x01);
  34              		.loc 1 1551 0
  35 0002 0121     		movs	r1, #1
  36 0004 2620     		movs	r0, #38
  37 0006 FFF7FEFF 		bl	tp28xx_byte_write
  38              	.LVL0:
1552:TP2824/TP2802.c **** }
  39              		.loc 1 1552 0
  40 000a 08BD     		pop	{r3, pc}
  41              		.cfi_endproc
  42              	.LFE79:
  44              		.section	.text.tp28xx_SYSCLK_V1,"ax",%progbits
  45              		.align	1
  46              		.syntax unified
ARM GAS  /tmp/ccnKW75d.s 			page 29


  47              		.thumb
  48              		.thumb_func
  49              		.fpu softvfp
  51              	tp28xx_SYSCLK_V1:
  52              	.LFB72:
1099:TP2824/TP2802.c ****     unsigned char tmp;
  53              		.loc 1 1099 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              	.LVL1:
  58 0000 10B5     		push	{r4, lr}
  59              	.LCFI1:
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 4, -8
  62              		.cfi_offset 14, -4
  63 0002 0446     		mov	r4, r0
1101:TP2824/TP2802.c ****     tmp &= SYS_AND[ch];
  64              		.loc 1 1101 0
  65 0004 F520     		movs	r0, #245
  66              	.LVL2:
  67 0006 FFF7FEFF 		bl	tp28xx_byte_read
  68              	.LVL3:
1102:TP2824/TP2802.c ****     tp28xx_byte_write(0xf5, tmp);
  69              		.loc 1 1102 0
  70 000a 074B     		ldr	r3, .L5
  71 000c 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
  72              	.LVL4:
1103:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x35);
  73              		.loc 1 1103 0
  74 000e 0140     		ands	r1, r1, r0
  75              	.LVL5:
  76 0010 F520     		movs	r0, #245
  77 0012 FFF7FEFF 		bl	tp28xx_byte_write
  78              	.LVL6:
1104:TP2824/TP2802.c ****     tmp &= 0xdf;
  79              		.loc 1 1104 0
  80 0016 3520     		movs	r0, #53
  81 0018 FFF7FEFF 		bl	tp28xx_byte_read
  82              	.LVL7:
1106:TP2824/TP2802.c **** }
  83              		.loc 1 1106 0
  84 001c 00F0DF01 		and	r1, r0, #223
  85 0020 3520     		movs	r0, #53
  86              	.LVL8:
  87 0022 FFF7FEFF 		bl	tp28xx_byte_write
  88              	.LVL9:
1107:TP2824/TP2802.c **** 
  89              		.loc 1 1107 0
  90 0026 10BD     		pop	{r4, pc}
  91              	.L6:
  92              		.align	2
  93              	.L5:
  94 0028 00000000 		.word	.LANCHOR0
  95              		.cfi_endproc
  96              	.LFE72:
  98              		.section	.text.tp28xx_SYSCLK_V2,"ax",%progbits
ARM GAS  /tmp/ccnKW75d.s 			page 30


  99              		.align	1
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 103              		.fpu softvfp
 105              	tp28xx_SYSCLK_V2:
 106              	.LFB71:
1089:TP2824/TP2802.c ****     unsigned char tmp;
 107              		.loc 1 1089 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              	.LVL10:
 112 0000 10B5     		push	{r4, lr}
 113              	.LCFI2:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
 117 0002 0446     		mov	r4, r0
1091:TP2824/TP2802.c ****     tmp |= SYS_MODE[ch];
 118              		.loc 1 1091 0
 119 0004 F520     		movs	r0, #245
 120              	.LVL11:
 121 0006 FFF7FEFF 		bl	tp28xx_byte_read
 122              	.LVL12:
1092:TP2824/TP2802.c ****     tp28xx_byte_write(0xf5, tmp);
 123              		.loc 1 1092 0
 124 000a 084B     		ldr	r3, .L9
 125 000c 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 126 000e 0143     		orrs	r1, r1, r0
 127              	.LVL13:
1093:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x35);
 128              		.loc 1 1093 0
 129 0010 C9B2     		uxtb	r1, r1
 130 0012 F520     		movs	r0, #245
 131 0014 FFF7FEFF 		bl	tp28xx_byte_write
 132              	.LVL14:
1094:TP2824/TP2802.c ****     tmp |= 0x20;
 133              		.loc 1 1094 0
 134 0018 3520     		movs	r0, #53
 135 001a FFF7FEFF 		bl	tp28xx_byte_read
 136              	.LVL15:
1095:TP2824/TP2802.c ****     tp28xx_byte_write(0x35, tmp);
 137              		.loc 1 1095 0
 138 001e 40F02001 		orr	r1, r0, #32
 139              	.LVL16:
1096:TP2824/TP2802.c **** }
 140              		.loc 1 1096 0
 141 0022 C9B2     		uxtb	r1, r1
 142 0024 3520     		movs	r0, #53
 143 0026 FFF7FEFF 		bl	tp28xx_byte_write
 144              	.LVL17:
1097:TP2824/TP2802.c **** static void tp28xx_SYSCLK_V1(unsigned char ch)
 145              		.loc 1 1097 0
 146 002a 10BD     		pop	{r4, pc}
 147              	.L10:
 148              		.align	2
ARM GAS  /tmp/ccnKW75d.s 			page 31


 149              	.L9:
 150 002c 00000000 		.word	.LANCHOR1
 151              		.cfi_endproc
 152              	.LFE71:
 154              		.section	.text.tp2853C_reset_default,"ax",%progbits
 155              		.align	1
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu softvfp
 161              	tp2853C_reset_default:
 162              	.LFB80:
1553:TP2824/TP2802.c **** static void tp2853C_reset_default(void)
1554:TP2824/TP2802.c **** {
 163              		.loc 1 1554 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 08B5     		push	{r3, lr}
 168              	.LCFI3:
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 3, -8
 171              		.cfi_offset 14, -4
1555:TP2824/TP2802.c ****     unsigned char tmp;
1556:TP2824/TP2802.c ****     tp28xx_byte_write(0x07, 0xC0);
 172              		.loc 1 1556 0
 173 0002 C021     		movs	r1, #192
 174 0004 0720     		movs	r0, #7
 175 0006 FFF7FEFF 		bl	tp28xx_byte_write
 176              	.LVL18:
1557:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x14);
 177              		.loc 1 1557 0
 178 000a 1420     		movs	r0, #20
 179 000c FFF7FEFF 		bl	tp28xx_byte_read
 180              	.LVL19:
1558:TP2824/TP2802.c ****     tmp &= 0x9f;
1559:TP2824/TP2802.c ****     tp28xx_byte_write(0x14, tmp);
 181              		.loc 1 1559 0
 182 0010 00F09F01 		and	r1, r0, #159
 183 0014 1420     		movs	r0, #20
 184              	.LVL20:
 185 0016 FFF7FEFF 		bl	tp28xx_byte_write
 186              	.LVL21:
1560:TP2824/TP2802.c ****     tp28xx_byte_write(0x13, 0x00);
 187              		.loc 1 1560 0
 188 001a 0021     		movs	r1, #0
 189 001c 1320     		movs	r0, #19
 190 001e FFF7FEFF 		bl	tp28xx_byte_write
 191              	.LVL22:
1561:TP2824/TP2802.c ****     tp28xx_byte_write(0x26, 0x04);
 192              		.loc 1 1561 0
 193 0022 0421     		movs	r1, #4
 194 0024 2620     		movs	r0, #38
 195 0026 FFF7FEFF 		bl	tp28xx_byte_write
 196              	.LVL23:
1562:TP2824/TP2802.c ****     tp28xx_byte_write(0x06, 0xb2);
 197              		.loc 1 1562 0
ARM GAS  /tmp/ccnKW75d.s 			page 32


 198 002a B221     		movs	r1, #178
 199 002c 0620     		movs	r0, #6
 200 002e FFF7FEFF 		bl	tp28xx_byte_write
 201              	.LVL24:
1563:TP2824/TP2802.c **** }
 202              		.loc 1 1563 0
 203 0032 08BD     		pop	{r3, pc}
 204              		.cfi_endproc
 205              	.LFE80:
 207              		.section	.text.TP28xx_reset_default,"ax",%progbits
 208              		.align	1
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 212              		.fpu softvfp
 214              	TP28xx_reset_default:
 215              	.LFB81:
1564:TP2824/TP2802.c **** static void TP28xx_reset_default(int chip, unsigned char ch)
1565:TP2824/TP2802.c **** {
 216              		.loc 1 1565 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              	.LVL25:
 221 0000 08B5     		push	{r3, lr}
 222              	.LCFI4:
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 3, -8
 225              		.cfi_offset 14, -4
1566:TP2824/TP2802.c ****     /*    if(TP2823 == chip )
1567:TP2824/TP2802.c ****     	{
1568:TP2824/TP2802.c ****                tp282x_reset_AGC_CLK(ch);
1569:TP2824/TP2802.c ****     	}
1570:TP2824/TP2802.c ****         else if(TP2822 == chip )
1571:TP2824/TP2802.c ****     	{
1572:TP2824/TP2802.c ****                tp282x_reset_AGC_CLK(ch);
1573:TP2824/TP2802.c ****     		   tp28xx_byte_write(0x07, 0x40);
1574:TP2824/TP2802.c ****     	}
1575:TP2824/TP2802.c ****         else if(TP2802D == chip )
1576:TP2824/TP2802.c ****         {
1577:TP2824/TP2802.c ****                tp2802D_reset_default( ch);
1578:TP2824/TP2802.c ****         }
1579:TP2824/TP2802.c ****     */
1580:TP2824/TP2802.c ****     if(TP2834 == chip )
 226              		.loc 1 1580 0
 227 0002 2428     		cmp	r0, #36
 228 0004 06D0     		beq	.L19
1581:TP2824/TP2802.c ****     {
1582:TP2824/TP2802.c ****         tp2824_reset_default();
1583:TP2824/TP2802.c ****     }
1584:TP2824/TP2802.c ****     else if(TP2833 == chip )
 229              		.loc 1 1584 0
 230 0006 2528     		cmp	r0, #37
 231 0008 07D0     		beq	.L20
1585:TP2824/TP2802.c ****     {
1586:TP2824/TP2802.c ****         tp2853C_reset_default();
1587:TP2824/TP2802.c ****     }
ARM GAS  /tmp/ccnKW75d.s 			page 33


1588:TP2824/TP2802.c ****     else if(TP2853C == chip )
 232              		.loc 1 1588 0
 233 000a 2628     		cmp	r0, #38
 234 000c 08D0     		beq	.L21
1589:TP2824/TP2802.c ****     {
1590:TP2824/TP2802.c ****         tp2853C_reset_default();
1591:TP2824/TP2802.c ****     }
1592:TP2824/TP2802.c **** 	else  //chunyu
1593:TP2824/TP2802.c **** 	{	
1594:TP2824/TP2802.c ****         tp2824_reset_default() ;   //chunyu
 235              		.loc 1 1594 0
 236 000e FFF7FEFF 		bl	tp2824_reset_default
 237              	.LVL26:
 238              	.L13:
1595:TP2824/TP2802.c **** 	}
1596:TP2824/TP2802.c **** }
 239              		.loc 1 1596 0
 240 0012 08BD     		pop	{r3, pc}
 241              	.LVL27:
 242              	.L19:
1582:TP2824/TP2802.c ****     }
 243              		.loc 1 1582 0
 244 0014 FFF7FEFF 		bl	tp2824_reset_default
 245              	.LVL28:
 246 0018 FBE7     		b	.L13
 247              	.LVL29:
 248              	.L20:
1586:TP2824/TP2802.c ****     }
 249              		.loc 1 1586 0
 250 001a FFF7FEFF 		bl	tp2853C_reset_default
 251              	.LVL30:
 252 001e F8E7     		b	.L13
 253              	.LVL31:
 254              	.L21:
1590:TP2824/TP2802.c ****     }
 255              		.loc 1 1590 0
 256 0020 FFF7FEFF 		bl	tp2853C_reset_default
 257              	.LVL32:
 258 0024 F5E7     		b	.L13
 259              		.cfi_endproc
 260              	.LFE81:
 262              		.section	.text.I2CDeviceSet1,"ax",%progbits
 263              		.align	1
 264              		.global	I2CDeviceSet1
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu softvfp
 270              	I2CDeviceSet1:
 271              	.LFB68:
 935:TP2824/TP2802.c **** 	int	cnt=0;
 272              		.loc 1 935 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              	.LVL33:
 277 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccnKW75d.s 			page 34


 278              	.LCFI5:
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 4, -8
 281              		.cfi_offset 14, -4
 282 0002 0446     		mov	r4, r0
 283              	.LVL34:
 946:TP2824/TP2802.c **** 
 284              		.loc 1 946 0
 285 0004 03E0     		b	.L23
 286              	.LVL35:
 287              	.L24:
 951:TP2824/TP2802.c **** 
 288              		.loc 1 951 0
 289 0006 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 290 0008 FFF7FEFF 		bl	tp28xx_byte_write
 291              	.LVL36:
 955:TP2824/TP2802.c **** 
 292              		.loc 1 955 0
 293 000c 0234     		adds	r4, r4, #2
 294              	.LVL37:
 295              	.L23:
 946:TP2824/TP2802.c **** 
 296              		.loc 1 946 0
 297 000e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 298 0010 FF28     		cmp	r0, #255
 299 0012 F8D1     		bne	.L24
 959:TP2824/TP2802.c **** }
 300              		.loc 1 959 0
 301 0014 3220     		movs	r0, #50
 302 0016 FFF7FEFF 		bl	delay
 303              	.LVL38:
 960:TP2824/TP2802.c **** 
 304              		.loc 1 960 0
 305 001a 10BD     		pop	{r4, pc}
 306              		.cfi_endproc
 307              	.LFE68:
 309              		.section	.text.I2CDeviceSet2,"ax",%progbits
 310              		.align	1
 311              		.global	I2CDeviceSet2
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu softvfp
 317              	I2CDeviceSet2:
 318              	.LFB69:
 964:TP2824/TP2802.c **** 	int	cnt=0;
 319              		.loc 1 964 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              	.LVL39:
 324 0000 38B5     		push	{r3, r4, r5, lr}
 325              	.LCFI6:
 326              		.cfi_def_cfa_offset 16
 327              		.cfi_offset 3, -16
 328              		.cfi_offset 4, -12
 329              		.cfi_offset 5, -8
ARM GAS  /tmp/ccnKW75d.s 			page 35


 330              		.cfi_offset 14, -4
 331 0002 0446     		mov	r4, r0
 332 0004 0D46     		mov	r5, r1
 333              	.LVL40:
 968:TP2824/TP2802.c **** 
 334              		.loc 1 968 0
 335 0006 04E0     		b	.L27
 336              	.LVL41:
 337              	.L28:
 973:TP2824/TP2802.c **** 
 338              		.loc 1 973 0
 339 0008 15F8011B 		ldrb	r1, [r5], #1	@ zero_extendqisi2
 340              	.LVL42:
 341 000c FFF7FEFF 		bl	tp28xx_byte_write
 342              	.LVL43:
 977:TP2824/TP2802.c **** 		DatSet++;
 343              		.loc 1 977 0
 344 0010 0134     		adds	r4, r4, #1
 345              	.LVL44:
 346              	.L27:
 968:TP2824/TP2802.c **** 
 347              		.loc 1 968 0
 348 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 349 0014 FF28     		cmp	r0, #255
 350 0016 F7D1     		bne	.L28
 982:TP2824/TP2802.c **** }
 351              		.loc 1 982 0
 352 0018 3220     		movs	r0, #50
 353 001a FFF7FEFF 		bl	delay
 354              	.LVL45:
 983:TP2824/TP2802.c **** 
 355              		.loc 1 983 0
 356 001e 38BD     		pop	{r3, r4, r5, pc}
 357              		.cfi_endproc
 358              	.LFE69:
 360              		.section	.text.SetRegPage,"ax",%progbits
 361              		.align	1
 362              		.global	SetRegPage
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 366              		.fpu softvfp
 368              	SetRegPage:
 369              	.LFB70:
 986:TP2824/TP2802.c ****     //tByte tmp;
 370              		.loc 1 986 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              	.LVL46:
 375 0000 08B5     		push	{r3, lr}
 376              	.LCFI7:
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 3, -8
 379              		.cfi_offset 14, -4
 989:TP2824/TP2802.c ****     //tp28xx_byte_write(0x40,0x04); //chunyu
 380              		.loc 1 989 0
ARM GAS  /tmp/ccnKW75d.s 			page 36


 381 0002 0146     		mov	r1, r0
 382 0004 4020     		movs	r0, #64
 383              	.LVL47:
 384 0006 FFF7FEFF 		bl	tp28xx_byte_write
 385              	.LVL48:
 992:TP2824/TP2802.c **** 
 386              		.loc 1 992 0
 387 000a 08BD     		pop	{r3, pc}
 388              		.cfi_endproc
 389              	.LFE70:
 391              		.section	.text.Set_VidRes,"ax",%progbits
 392              		.align	1
 393              		.global	Set_VidRes
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 397              		.fpu softvfp
 399              	Set_VidRes:
 400              	.LFB73:
1110:TP2824/TP2802.c ****     tByte index, sys, tmp;
 401              		.loc 1 1110 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              	.LVL49:
 406 0000 70B5     		push	{r4, r5, r6, lr}
 407              	.LCFI8:
 408              		.cfi_def_cfa_offset 16
 409              		.cfi_offset 4, -16
 410              		.cfi_offset 5, -12
 411              		.cfi_offset 6, -8
 412              		.cfi_offset 14, -4
 413 0002 0646     		mov	r6, r0
 414              	.LVL50:
1114:TP2824/TP2802.c ****     {
 415              		.loc 1 1114 0
 416 0004 9C4B     		ldr	r3, .L69
 417 0006 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 418 0008 262B     		cmp	r3, #38
 419 000a 00F2F980 		bhi	.L60
 420 000e DFE813F0 		tbh	[pc, r3, lsl #1]
 421              	.L35:
 422 0012 7600     		.2byte	(.L34-.L35)/2
 423 0014 8800     		.2byte	(.L36-.L35)/2
 424 0016 2700     		.2byte	(.L37-.L35)/2
 425 0018 6E00     		.2byte	(.L38-.L35)/2
 426 001a 9A00     		.2byte	(.L39-.L35)/2
 427 001c A300     		.2byte	(.L40-.L35)/2
 428 001e F700     		.2byte	(.L60-.L35)/2
 429 0020 F700     		.2byte	(.L60-.L35)/2
 430 0022 B500     		.2byte	(.L41-.L35)/2
 431 0024 AC00     		.2byte	(.L42-.L35)/2
 432 0026 F700     		.2byte	(.L60-.L35)/2
 433 0028 F700     		.2byte	(.L60-.L35)/2
 434 002a 7F00     		.2byte	(.L43-.L35)/2
 435 002c 9100     		.2byte	(.L44-.L35)/2
 436 002e F700     		.2byte	(.L60-.L35)/2
ARM GAS  /tmp/ccnKW75d.s 			page 37


 437 0030 F700     		.2byte	(.L60-.L35)/2
 438 0032 F700     		.2byte	(.L60-.L35)/2
 439 0034 F700     		.2byte	(.L60-.L35)/2
 440 0036 F700     		.2byte	(.L60-.L35)/2
 441 0038 F700     		.2byte	(.L60-.L35)/2
 442 003a F700     		.2byte	(.L60-.L35)/2
 443 003c F700     		.2byte	(.L60-.L35)/2
 444 003e F700     		.2byte	(.L60-.L35)/2
 445 0040 F700     		.2byte	(.L60-.L35)/2
 446 0042 F700     		.2byte	(.L60-.L35)/2
 447 0044 F700     		.2byte	(.L60-.L35)/2
 448 0046 F700     		.2byte	(.L60-.L35)/2
 449 0048 F700     		.2byte	(.L60-.L35)/2
 450 004a F700     		.2byte	(.L60-.L35)/2
 451 004c F700     		.2byte	(.L60-.L35)/2
 452 004e F700     		.2byte	(.L60-.L35)/2
 453 0050 F700     		.2byte	(.L60-.L35)/2
 454 0052 BE00     		.2byte	(.L45-.L35)/2
 455 0054 C600     		.2byte	(.L46-.L35)/2
 456 0056 CE00     		.2byte	(.L47-.L35)/2
 457 0058 D600     		.2byte	(.L48-.L35)/2
 458 005a DE00     		.2byte	(.L49-.L35)/2
 459 005c E600     		.2byte	(.L50-.L35)/2
 460 005e EE00     		.2byte	(.L51-.L35)/2
 461              		.p2align 1
 462              	.L37:
 463              	.LVL51:
1119:TP2824/TP2802.c ****         printf("1080p30");
 464              		.loc 1 1119 0
 465 0060 0124     		movs	r4, #1
 466 0062 864B     		ldr	r3, .L69+4
 467 0064 1C70     		strb	r4, [r3]
1120:TP2824/TP2802.c ****         break;
 468              		.loc 1 1120 0
 469 0066 8648     		ldr	r0, .L69+8
 470              	.LVL52:
 471 0068 FFF7FEFF 		bl	printf
 472              	.LVL53:
1118:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
 473              		.loc 1 1118 0
 474 006c 2546     		mov	r5, r4
 475              	.LVL54:
 476              	.L33:
1239:TP2824/TP2802.c **** 
 477              		.loc 1 1239 0
 478 006e 8548     		ldr	r0, .L69+12
 479 0070 FFF7FEFF 		bl	puts
 480              	.LVL55:
1242:TP2824/TP2802.c ****     //	printf("chip= 0x%4x\r\n",chip);
 481              		.loc 1 1242 0
 482 0074 8448     		ldr	r0, .L69+16
 483 0076 04EB4401 		add	r1, r4, r4, lsl #1
 484 007a 04EB8101 		add	r1, r4, r1, lsl #2
 485 007e 0144     		add	r1, r1, r0
 486 0080 FFF7FEFF 		bl	I2CDeviceSet2
 487              	.LVL56:
1244:TP2824/TP2802.c **** {
ARM GAS  /tmp/ccnKW75d.s 			page 38


 488              		.loc 1 1244 0
 489 0084 7C4B     		ldr	r3, .L69
 490 0086 9B5D     		ldrb	r3, [r3, r6]	@ zero_extendqisi2
 491 0088 022B     		cmp	r3, #2
 492 008a 00F0BC80 		beq	.L62
 493              	.L52:
1249:TP2824/TP2802.c ****     {
 494              		.loc 1 1249 0
 495 008e 7F4B     		ldr	r3, .L69+20
 496 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 497 0092 262B     		cmp	r3, #38
 498 0094 00F0BC80 		beq	.L63
1253:TP2824/TP2802.c ****     {
 499              		.loc 1 1253 0
 500 0098 252B     		cmp	r3, #37
 501 009a 00F0C180 		beq	.L64
1257:TP2824/TP2802.c ****     {
 502              		.loc 1 1257 0
 503 009e 242B     		cmp	r3, #36
 504 00a0 00F0C680 		beq	.L65
 505              	.L54:
1261:TP2824/TP2802.c ****     {
 506              		.loc 1 1261 0
 507 00a4 794B     		ldr	r3, .L69+20
 508 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 509 00a8 2F2B     		cmp	r3, #47
 510 00aa 00F0CA80 		beq	.L66
 511              	.L56:
1266:TP2824/TP2802.c ****     {
 512              		.loc 1 1266 0
 513 00ae 774B     		ldr	r3, .L69+20
 514 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 515 00b2 272B     		cmp	r3, #39
 516 00b4 00F0D080 		beq	.L67
 517              	.L57:
1272:TP2824/TP2802.c ****         tp28xx_SYSCLK_V1(ch);
 518              		.loc 1 1272 0
 519 00b8 012D     		cmp	r5, #1
 520 00ba 00F0D980 		beq	.L68
1275:TP2824/TP2802.c **** 
 521              		.loc 1 1275 0
 522 00be 3046     		mov	r0, r6
 523 00c0 FFF7FEFF 		bl	tp28xx_SYSCLK_V2
 524              	.LVL57:
 525              	.L59:
1277:TP2824/TP2802.c ****     tmp=tp28xx_byte_read(0x14);
 526              		.loc 1 1277 0
 527 00c4 0021     		movs	r1, #0
 528 00c6 1320     		movs	r0, #19
 529 00c8 FFF7FEFF 		bl	tp28xx_byte_write
 530              	.LVL58:
1278:TP2824/TP2802.c ****     tmp &= 0x9f;
 531              		.loc 1 1278 0
 532 00cc 1420     		movs	r0, #20
 533 00ce FFF7FEFF 		bl	tp28xx_byte_read
 534              	.LVL59:
1280:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccnKW75d.s 			page 39


 535              		.loc 1 1280 0
 536 00d2 00F09F01 		and	r1, r0, #159
 537 00d6 1420     		movs	r0, #20
 538              	.LVL60:
 539 00d8 FFF7FEFF 		bl	tp28xx_byte_write
 540              	.LVL61:
1283:TP2824/TP2802.c ****     tmp &= 0x7f;
 541              		.loc 1 1283 0
 542 00dc 0220     		movs	r0, #2
 543 00de FFF7FEFF 		bl	tp28xx_byte_read
 544              	.LVL62:
1285:TP2824/TP2802.c **** #else
 545              		.loc 1 1285 0
 546 00e2 00F07F01 		and	r1, r0, #127
 547 00e6 0220     		movs	r0, #2
 548              	.LVL63:
 549 00e8 FFF7FEFF 		bl	tp28xx_byte_write
 550              	.LVL64:
1291:TP2824/TP2802.c **** 
 551              		.loc 1 1291 0
 552 00ec 70BD     		pop	{r4, r5, r6, pc}
 553              	.LVL65:
 554              	.L38:
1126:TP2824/TP2802.c ****         printf("1080p25");
 555              		.loc 1 1126 0
 556 00ee 0125     		movs	r5, #1
 557 00f0 624B     		ldr	r3, .L69+4
 558 00f2 1D70     		strb	r5, [r3]
1127:TP2824/TP2802.c ****         break;
 559              		.loc 1 1127 0
 560 00f4 6648     		ldr	r0, .L69+24
 561              	.LVL66:
 562 00f6 FFF7FEFF 		bl	printf
 563              	.LVL67:
1124:TP2824/TP2802.c ****         sys=1;//V1
 564              		.loc 1 1124 0
 565 00fa 0224     		movs	r4, #2
1128:TP2824/TP2802.c **** 
 566              		.loc 1 1128 0
 567 00fc B7E7     		b	.L33
 568              	.LVL68:
 569              	.L34:
1133:TP2824/TP2802.c ****         printf("720p60");
 570              		.loc 1 1133 0
 571 00fe 5F4B     		ldr	r3, .L69+4
 572 0100 0022     		movs	r2, #0
 573 0102 1A70     		strb	r2, [r3]
1134:TP2824/TP2802.c ****         break;
 574              		.loc 1 1134 0
 575 0104 6348     		ldr	r0, .L69+28
 576              	.LVL69:
 577 0106 FFF7FEFF 		bl	printf
 578              	.LVL70:
1132:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 579              		.loc 1 1132 0
 580 010a 0125     		movs	r5, #1
1131:TP2824/TP2802.c ****         sys=1;//V1
ARM GAS  /tmp/ccnKW75d.s 			page 40


 581              		.loc 1 1131 0
 582 010c 0324     		movs	r4, #3
1135:TP2824/TP2802.c **** 
 583              		.loc 1 1135 0
 584 010e AEE7     		b	.L33
 585              	.LVL71:
 586              	.L43:
1140:TP2824/TP2802.c ****         printf("720p30V2");
 587              		.loc 1 1140 0
 588 0110 5A4B     		ldr	r3, .L69+4
 589 0112 0022     		movs	r2, #0
 590 0114 1A70     		strb	r2, [r3]
1141:TP2824/TP2802.c ****         break;
 591              		.loc 1 1141 0
 592 0116 6048     		ldr	r0, .L69+32
 593              	.LVL72:
 594 0118 FFF7FEFF 		bl	printf
 595              	.LVL73:
1139:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 596              		.loc 1 1139 0
 597 011c 0225     		movs	r5, #2
1138:TP2824/TP2802.c ****         sys=2;//V2
 598              		.loc 1 1138 0
 599 011e 0B24     		movs	r4, #11
1142:TP2824/TP2802.c **** 
 600              		.loc 1 1142 0
 601 0120 A5E7     		b	.L33
 602              	.LVL74:
 603              	.L36:
1147:TP2824/TP2802.c ****         printf("720p50");
 604              		.loc 1 1147 0
 605 0122 564B     		ldr	r3, .L69+4
 606 0124 0022     		movs	r2, #0
 607 0126 1A70     		strb	r2, [r3]
1148:TP2824/TP2802.c ****         break;
 608              		.loc 1 1148 0
 609 0128 5C48     		ldr	r0, .L69+36
 610              	.LVL75:
 611 012a FFF7FEFF 		bl	printf
 612              	.LVL76:
1146:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 613              		.loc 1 1146 0
 614 012e 0125     		movs	r5, #1
1145:TP2824/TP2802.c ****         sys=1;//V1
 615              		.loc 1 1145 0
 616 0130 0424     		movs	r4, #4
1149:TP2824/TP2802.c **** 
 617              		.loc 1 1149 0
 618 0132 9CE7     		b	.L33
 619              	.LVL77:
 620              	.L44:
1154:TP2824/TP2802.c ****         printf("720p25V2");
 621              		.loc 1 1154 0
 622 0134 514B     		ldr	r3, .L69+4
 623 0136 0022     		movs	r2, #0
 624 0138 1A70     		strb	r2, [r3]
1155:TP2824/TP2802.c ****         break;
ARM GAS  /tmp/ccnKW75d.s 			page 41


 625              		.loc 1 1155 0
 626 013a 5948     		ldr	r0, .L69+40
 627              	.LVL78:
 628 013c FFF7FEFF 		bl	printf
 629              	.LVL79:
1153:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 630              		.loc 1 1153 0
 631 0140 0225     		movs	r5, #2
1152:TP2824/TP2802.c ****         sys=2;//V2
 632              		.loc 1 1152 0
 633 0142 0C24     		movs	r4, #12
1156:TP2824/TP2802.c **** 
 634              		.loc 1 1156 0
 635 0144 93E7     		b	.L33
 636              	.LVL80:
 637              	.L39:
1161:TP2824/TP2802.c ****         printf("720p30");
 638              		.loc 1 1161 0
 639 0146 4D4B     		ldr	r3, .L69+4
 640 0148 0022     		movs	r2, #0
 641 014a 1A70     		strb	r2, [r3]
1162:TP2824/TP2802.c ****         break;
 642              		.loc 1 1162 0
 643 014c 5548     		ldr	r0, .L69+44
 644              	.LVL81:
 645 014e FFF7FEFF 		bl	printf
 646              	.LVL82:
1160:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 647              		.loc 1 1160 0
 648 0152 0125     		movs	r5, #1
1159:TP2824/TP2802.c ****         sys=1;//V1
 649              		.loc 1 1159 0
 650 0154 0524     		movs	r4, #5
1163:TP2824/TP2802.c **** 
 651              		.loc 1 1163 0
 652 0156 8AE7     		b	.L33
 653              	.LVL83:
 654              	.L40:
1168:TP2824/TP2802.c ****         printf("720p25");
 655              		.loc 1 1168 0
 656 0158 484B     		ldr	r3, .L69+4
 657 015a 0022     		movs	r2, #0
 658 015c 1A70     		strb	r2, [r3]
1169:TP2824/TP2802.c ****         break;
 659              		.loc 1 1169 0
 660 015e 5248     		ldr	r0, .L69+48
 661              	.LVL84:
 662 0160 FFF7FEFF 		bl	printf
 663              	.LVL85:
1167:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 664              		.loc 1 1167 0
 665 0164 0125     		movs	r5, #1
1166:TP2824/TP2802.c ****         sys=1;//V1
 666              		.loc 1 1166 0
 667 0166 0624     		movs	r4, #6
1170:TP2824/TP2802.c **** 
 668              		.loc 1 1170 0
ARM GAS  /tmp/ccnKW75d.s 			page 42


 669 0168 81E7     		b	.L33
 670              	.LVL86:
 671              	.L42:
1175:TP2824/TP2802.c ****         printf("PAL");
 672              		.loc 1 1175 0
 673 016a 444B     		ldr	r3, .L69+4
 674 016c 0322     		movs	r2, #3
 675 016e 1A70     		strb	r2, [r3]
1176:TP2824/TP2802.c ****         break;
 676              		.loc 1 1176 0
 677 0170 4E48     		ldr	r0, .L69+52
 678              	.LVL87:
 679 0172 FFF7FEFF 		bl	printf
 680              	.LVL88:
1174:TP2824/TP2802.c ****         ManVidResRx=RES1920X576;
 681              		.loc 1 1174 0
 682 0176 0425     		movs	r5, #4
1173:TP2824/TP2802.c ****         sys=4;
 683              		.loc 1 1173 0
 684 0178 0824     		movs	r4, #8
1177:TP2824/TP2802.c **** 
 685              		.loc 1 1177 0
 686 017a 78E7     		b	.L33
 687              	.LVL89:
 688              	.L41:
1182:TP2824/TP2802.c ****         printf("NTSC");
 689              		.loc 1 1182 0
 690 017c 3F4B     		ldr	r3, .L69+4
 691 017e 0222     		movs	r2, #2
 692 0180 1A70     		strb	r2, [r3]
1183:TP2824/TP2802.c ****         break;
 693              		.loc 1 1183 0
 694 0182 4B48     		ldr	r0, .L69+56
 695              	.LVL90:
 696 0184 FFF7FEFF 		bl	printf
 697              	.LVL91:
1181:TP2824/TP2802.c ****         ManVidResRx=RES1920X480;
 698              		.loc 1 1181 0
 699 0188 0325     		movs	r5, #3
1180:TP2824/TP2802.c ****         sys=3;
 700              		.loc 1 1180 0
 701 018a 0724     		movs	r4, #7
1184:TP2824/TP2802.c **** 
 702              		.loc 1 1184 0
 703 018c 6FE7     		b	.L33
 704              	.LVL92:
 705              	.L45:
1189:TP2824/TP2802.c ****         printf("3M18");
 706              		.loc 1 1189 0
 707 018e 0125     		movs	r5, #1
 708 0190 3A4B     		ldr	r3, .L69+4
 709 0192 1D70     		strb	r5, [r3]
1190:TP2824/TP2802.c ****         break;
 710              		.loc 1 1190 0
 711 0194 4748     		ldr	r0, .L69+60
 712              	.LVL93:
 713 0196 FFF7FEFF 		bl	printf
ARM GAS  /tmp/ccnKW75d.s 			page 43


 714              	.LVL94:
1187:TP2824/TP2802.c ****         sys=1;//V1
 715              		.loc 1 1187 0
 716 019a 0924     		movs	r4, #9
1191:TP2824/TP2802.c **** 
 717              		.loc 1 1191 0
 718 019c 67E7     		b	.L33
 719              	.LVL95:
 720              	.L46:
1196:TP2824/TP2802.c ****         printf("5M12");
 721              		.loc 1 1196 0
 722 019e 0125     		movs	r5, #1
 723 01a0 364B     		ldr	r3, .L69+4
 724 01a2 1D70     		strb	r5, [r3]
1197:TP2824/TP2802.c ****         break;
 725              		.loc 1 1197 0
 726 01a4 4448     		ldr	r0, .L69+64
 727              	.LVL96:
 728 01a6 FFF7FEFF 		bl	printf
 729              	.LVL97:
1194:TP2824/TP2802.c ****         sys=1;//V1
 730              		.loc 1 1194 0
 731 01aa 0A24     		movs	r4, #10
1198:TP2824/TP2802.c **** 
 732              		.loc 1 1198 0
 733 01ac 5FE7     		b	.L33
 734              	.LVL98:
 735              	.L47:
1203:TP2824/TP2802.c ****         printf("4M15");
 736              		.loc 1 1203 0
 737 01ae 0125     		movs	r5, #1
 738 01b0 324B     		ldr	r3, .L69+4
 739 01b2 1D70     		strb	r5, [r3]
1204:TP2824/TP2802.c ****         break;
 740              		.loc 1 1204 0
 741 01b4 4148     		ldr	r0, .L69+68
 742              	.LVL99:
 743 01b6 FFF7FEFF 		bl	printf
 744              	.LVL100:
1201:TP2824/TP2802.c ****         sys=1;//V1
 745              		.loc 1 1201 0
 746 01ba 0D24     		movs	r4, #13
1205:TP2824/TP2802.c **** 
 747              		.loc 1 1205 0
 748 01bc 57E7     		b	.L33
 749              	.LVL101:
 750              	.L48:
1210:TP2824/TP2802.c ****         printf("3M20");
 751              		.loc 1 1210 0
 752 01be 0125     		movs	r5, #1
 753 01c0 2E4B     		ldr	r3, .L69+4
 754 01c2 1D70     		strb	r5, [r3]
1211:TP2824/TP2802.c ****         break;
 755              		.loc 1 1211 0
 756 01c4 3E48     		ldr	r0, .L69+72
 757              	.LVL102:
 758 01c6 FFF7FEFF 		bl	printf
ARM GAS  /tmp/ccnKW75d.s 			page 44


 759              	.LVL103:
1208:TP2824/TP2802.c ****         sys=1;//V1
 760              		.loc 1 1208 0
 761 01ca 0E24     		movs	r4, #14
1212:TP2824/TP2802.c **** 
 762              		.loc 1 1212 0
 763 01cc 4FE7     		b	.L33
 764              	.LVL104:
 765              	.L49:
1217:TP2824/TP2802.c ****         printf("4M12");
 766              		.loc 1 1217 0
 767 01ce 0125     		movs	r5, #1
 768 01d0 2A4B     		ldr	r3, .L69+4
 769 01d2 1D70     		strb	r5, [r3]
1218:TP2824/TP2802.c ****         break;
 770              		.loc 1 1218 0
 771 01d4 3B48     		ldr	r0, .L69+76
 772              	.LVL105:
 773 01d6 FFF7FEFF 		bl	printf
 774              	.LVL106:
1215:TP2824/TP2802.c ****         sys=1;//V1
 775              		.loc 1 1215 0
 776 01da 0F24     		movs	r4, #15
1219:TP2824/TP2802.c **** 
 777              		.loc 1 1219 0
 778 01dc 47E7     		b	.L33
 779              	.LVL107:
 780              	.L50:
1224:TP2824/TP2802.c ****         printf("6M10");
 781              		.loc 1 1224 0
 782 01de 0125     		movs	r5, #1
 783 01e0 264B     		ldr	r3, .L69+4
 784 01e2 1D70     		strb	r5, [r3]
1225:TP2824/TP2802.c ****         break;
 785              		.loc 1 1225 0
 786 01e4 3848     		ldr	r0, .L69+80
 787              	.LVL108:
 788 01e6 FFF7FEFF 		bl	printf
 789              	.LVL109:
1222:TP2824/TP2802.c ****         sys=1;//V1
 790              		.loc 1 1222 0
 791 01ea 1024     		movs	r4, #16
1226:TP2824/TP2802.c **** 
 792              		.loc 1 1226 0
 793 01ec 3FE7     		b	.L33
 794              	.LVL110:
 795              	.L51:
1231:TP2824/TP2802.c ****         printf("4M30");
 796              		.loc 1 1231 0
 797 01ee 234B     		ldr	r3, .L69+4
 798 01f0 0022     		movs	r2, #0
 799 01f2 1A70     		strb	r2, [r3]
1232:TP2824/TP2802.c ****         break;
 800              		.loc 1 1232 0
 801 01f4 3548     		ldr	r0, .L69+84
 802              	.LVL111:
 803 01f6 FFF7FEFF 		bl	printf
ARM GAS  /tmp/ccnKW75d.s 			page 45


 804              	.LVL112:
1230:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 805              		.loc 1 1230 0
 806 01fa 0125     		movs	r5, #1
1229:TP2824/TP2802.c ****         sys=1;//V1
 807              		.loc 1 1229 0
 808 01fc 1124     		movs	r4, #17
1233:TP2824/TP2802.c **** 
 809              		.loc 1 1233 0
 810 01fe 36E7     		b	.L33
 811              	.LVL113:
 812              	.L60:
1112:TP2824/TP2802.c ****     //printf("Set_VidRes");
 813              		.loc 1 1112 0
 814 0200 0125     		movs	r5, #1
1236:TP2824/TP2802.c ****         break;
 815              		.loc 1 1236 0
 816 0202 2C46     		mov	r4, r5
 817 0204 33E7     		b	.L33
 818              	.LVL114:
 819              	.L62:
1246:TP2824/TP2802.c **** }
 820              		.loc 1 1246 0
 821 0206 CE21     		movs	r1, #206
 822 0208 1620     		movs	r0, #22
 823 020a FFF7FEFF 		bl	tp28xx_byte_write
 824              	.LVL115:
 825 020e 3EE7     		b	.L52
 826              	.L63:
1251:TP2824/TP2802.c ****     }
 827              		.loc 1 1251 0
 828 0210 2F48     		ldr	r0, .L69+88
 829 0212 05EBC503 		add	r3, r5, r5, lsl #3
 830 0216 5900     		lsls	r1, r3, #1
 831 0218 0144     		add	r1, r1, r0
 832 021a FFF7FEFF 		bl	I2CDeviceSet2
 833              	.LVL116:
 834 021e 41E7     		b	.L54
 835              	.L64:
1255:TP2824/TP2802.c ****     }
 836              		.loc 1 1255 0
 837 0220 2C48     		ldr	r0, .L69+92
 838 0222 C5EBC503 		rsb	r3, r5, r5, lsl #3
 839 0226 5900     		lsls	r1, r3, #1
 840 0228 0144     		add	r1, r1, r0
 841 022a FFF7FEFF 		bl	I2CDeviceSet2
 842              	.LVL117:
 843 022e 39E7     		b	.L54
 844              	.L65:
1259:TP2824/TP2802.c ****     }
 845              		.loc 1 1259 0
 846 0230 2948     		ldr	r0, .L69+96
 847 0232 05EB4501 		add	r1, r5, r5, lsl #1
 848 0236 05EB8101 		add	r1, r5, r1, lsl #2
 849 023a 0144     		add	r1, r1, r0
 850 023c FFF7FEFF 		bl	I2CDeviceSet2
 851              	.LVL118:
ARM GAS  /tmp/ccnKW75d.s 			page 46


 852 0240 30E7     		b	.L54
 853              	.L66:
1263:TP2824/TP2802.c ****         I2CDeviceSet2( TP2826_MODE_DataSet[0],TP2826_MODE_DataSet[sys] );
 854              		.loc 1 1263 0
 855 0242 2648     		ldr	r0, .L69+100
 856 0244 FFF7FEFF 		bl	puts
 857              	.LVL119:
1264:TP2824/TP2802.c ****     }
 858              		.loc 1 1264 0
 859 0248 2548     		ldr	r0, .L69+104
 860 024a 05EB8503 		add	r3, r5, r5, lsl #2
 861 024e 9900     		lsls	r1, r3, #2
 862 0250 0144     		add	r1, r1, r0
 863 0252 FFF7FEFF 		bl	I2CDeviceSet2
 864              	.LVL120:
 865 0256 2AE7     		b	.L56
 866              	.L67:
1268:TP2824/TP2802.c ****         I2CDeviceSet2( TP2824C_MODE_DataSet[0],TP2824C_MODE_DataSet[sys] );
 867              		.loc 1 1268 0
 868 0258 2248     		ldr	r0, .L69+108
 869 025a FFF7FEFF 		bl	puts
 870              	.LVL121:
1269:TP2824/TP2802.c ****     }
 871              		.loc 1 1269 0
 872 025e 2248     		ldr	r0, .L69+112
 873 0260 05EB4501 		add	r1, r5, r5, lsl #1
 874 0264 C5EBC101 		rsb	r1, r5, r1, lsl #3
 875 0268 0144     		add	r1, r1, r0
 876 026a FFF7FEFF 		bl	I2CDeviceSet2
 877              	.LVL122:
 878 026e 23E7     		b	.L57
 879              	.L68:
1273:TP2824/TP2802.c ****     else
 880              		.loc 1 1273 0
 881 0270 3046     		mov	r0, r6
 882 0272 FFF7FEFF 		bl	tp28xx_SYSCLK_V1
 883              	.LVL123:
 884 0276 25E7     		b	.L59
 885              	.L70:
 886              		.align	2
 887              	.L69:
 888 0278 00000000 		.word	mode
 889 027c 00000000 		.word	ManVidResRx
 890 0280 00000000 		.word	.LC0
 891 0284 8C000000 		.word	.LC17
 892 0288 00000000 		.word	.LANCHOR2
 893 028c 00000000 		.word	chip
 894 0290 08000000 		.word	.LC1
 895 0294 10000000 		.word	.LC2
 896 0298 18000000 		.word	.LC3
 897 029c 24000000 		.word	.LC4
 898 02a0 2C000000 		.word	.LC5
 899 02a4 38000000 		.word	.LC6
 900 02a8 40000000 		.word	.LC7
 901 02ac 48000000 		.word	.LC8
 902 02b0 4C000000 		.word	.LC9
 903 02b4 54000000 		.word	.LC10
ARM GAS  /tmp/ccnKW75d.s 			page 47


 904 02b8 5C000000 		.word	.LC11
 905 02bc 64000000 		.word	.LC12
 906 02c0 6C000000 		.word	.LC13
 907 02c4 74000000 		.word	.LC14
 908 02c8 7C000000 		.word	.LC15
 909 02cc 84000000 		.word	.LC16
 910 02d0 00000000 		.word	.LANCHOR3
 911 02d4 00000000 		.word	.LANCHOR4
 912 02d8 00000000 		.word	.LANCHOR5
 913 02dc 94000000 		.word	.LC18
 914 02e0 00000000 		.word	.LANCHOR6
 915 02e4 A8000000 		.word	.LC19
 916 02e8 00000000 		.word	.LANCHOR7
 917              		.cfi_endproc
 918              	.LFE73:
 920              		.section	.text.Set_HDA,"ax",%progbits
 921              		.align	1
 922              		.global	Set_HDA
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 926              		.fpu softvfp
 928              	Set_HDA:
 929              	.LFB74:
1294:TP2824/TP2802.c **** 
 930              		.loc 1 1294 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934              	.LVL124:
 935 0000 38B5     		push	{r3, r4, r5, lr}
 936              	.LCFI9:
 937              		.cfi_def_cfa_offset 16
 938              		.cfi_offset 3, -16
 939              		.cfi_offset 4, -12
 940              		.cfi_offset 5, -8
 941              		.cfi_offset 14, -4
 942              	.LVL125:
1299:TP2824/TP2802.c ****     {
 943              		.loc 1 1299 0
 944 0002 274B     		ldr	r3, .L89
 945 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 946 0006 0D2B     		cmp	r3, #13
 947 0008 48D8     		bhi	.L82
 948 000a DFE803F0 		tbb	[pc, r3]
 949              	.L74:
 950 000e 0D       		.byte	(.L83-.L74)/2
 951 000f 07       		.byte	(.L75-.L74)/2
 952 0010 0B       		.byte	(.L76-.L74)/2
 953 0011 09       		.byte	(.L77-.L74)/2
 954 0012 47       		.byte	(.L82-.L74)/2
 955 0013 47       		.byte	(.L82-.L74)/2
 956 0014 47       		.byte	(.L82-.L74)/2
 957 0015 47       		.byte	(.L82-.L74)/2
 958 0016 47       		.byte	(.L82-.L74)/2
 959 0017 47       		.byte	(.L82-.L74)/2
 960 0018 47       		.byte	(.L82-.L74)/2
ARM GAS  /tmp/ccnKW75d.s 			page 48


 961 0019 47       		.byte	(.L82-.L74)/2
 962 001a 0D       		.byte	(.L83-.L74)/2
 963 001b 07       		.byte	(.L75-.L74)/2
 964              		.p2align 1
 965              	.L75:
1316:TP2824/TP2802.c ****         break;
 966              		.loc 1 1316 0
 967 001c 0225     		movs	r5, #2
 968 001e 04E0     		b	.L73
 969              	.L77:
 970              	.LVL126:
1306:TP2824/TP2802.c ****         break;
 971              		.loc 1 1306 0
 972 0020 0425     		movs	r5, #4
 973 0022 02E0     		b	.L73
 974              	.LVL127:
 975              	.L76:
1302:TP2824/TP2802.c ****         break;
 976              		.loc 1 1302 0
 977 0024 0325     		movs	r5, #3
 978 0026 00E0     		b	.L73
 979              	.LVL128:
 980              	.L83:
1311:TP2824/TP2802.c ****         break;
 981              		.loc 1 1311 0
 982 0028 0125     		movs	r5, #1
 983              	.LVL129:
 984              	.L73:
 985 002a 0446     		mov	r4, r0
1321:TP2824/TP2802.c **** 
 986              		.loc 1 1321 0
 987 002c FFF7FEFF 		bl	Set_VidRes
 988              	.LVL130:
1323:TP2824/TP2802.c ****         {
 989              		.loc 1 1323 0
 990 0030 1C4B     		ldr	r3, .L89+4
 991 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 992 0034 262B     		cmp	r3, #38
 993 0036 0DD0     		beq	.L85
1327:TP2824/TP2802.c ****         {
 994              		.loc 1 1327 0
 995 0038 A3F12402 		sub	r2, r3, #36
 996 003c D2B2     		uxtb	r2, r2
 997 003e 012A     		cmp	r2, #1
 998 0040 10D9     		bls	.L86
1331:TP2824/TP2802.c ****         {
 999              		.loc 1 1331 0
 1000 0042 2F2B     		cmp	r3, #47
 1001 0044 14D0     		beq	.L87
1335:TP2824/TP2802.c ****         {
 1002              		.loc 1 1335 0
 1003 0046 272B     		cmp	r3, #39
 1004 0048 1AD0     		beq	.L88
 1005              	.L79:
1343:TP2824/TP2802.c ****         tmp |= 0x40;
 1006              		.loc 1 1343 0
 1007 004a 1420     		movs	r0, #20
ARM GAS  /tmp/ccnKW75d.s 			page 49


 1008 004c FFF7FEFF 		bl	tp28xx_byte_read
 1009              	.LVL131:
 1010              	.L72:
1354:TP2824/TP2802.c **** 
 1011              		.loc 1 1354 0
 1012 0050 2846     		mov	r0, r5
 1013 0052 38BD     		pop	{r3, r4, r5, pc}
 1014              	.L85:
1325:TP2824/TP2802.c ****         }
 1015              		.loc 1 1325 0
 1016 0054 1448     		ldr	r0, .L89+8
 1017 0056 05EB8503 		add	r3, r5, r5, lsl #2
 1018 005a 5900     		lsls	r1, r3, #1
 1019 005c 0144     		add	r1, r1, r0
 1020 005e FFF7FEFF 		bl	I2CDeviceSet2
 1021              	.LVL132:
 1022 0062 F2E7     		b	.L79
 1023              	.L86:
1329:TP2824/TP2802.c ****         }
 1024              		.loc 1 1329 0
 1025 0064 1148     		ldr	r0, .L89+12
 1026 0066 00EBC501 		add	r1, r0, r5, lsl #3
 1027 006a FFF7FEFF 		bl	I2CDeviceSet2
 1028              	.LVL133:
 1029 006e ECE7     		b	.L79
 1030              	.L87:
1333:TP2824/TP2802.c ****         }
 1031              		.loc 1 1333 0
 1032 0070 0F48     		ldr	r0, .L89+16
 1033 0072 05EB4503 		add	r3, r5, r5, lsl #1
 1034 0076 9900     		lsls	r1, r3, #2
 1035 0078 0144     		add	r1, r1, r0
 1036 007a FFF7FEFF 		bl	I2CDeviceSet2
 1037              	.LVL134:
 1038 007e E4E7     		b	.L79
 1039              	.L88:
1337:TP2824/TP2802.c **** 
 1040              		.loc 1 1337 0
 1041 0080 0C48     		ldr	r0, .L89+20
 1042 0082 00EB0511 		add	r1, r0, r5, lsl #4
 1043 0086 FFF7FEFF 		bl	I2CDeviceSet2
 1044              	.LVL135:
1339:TP2824/TP2802.c **** 			    tp28xx_byte_write(0x19, 0x3A);
 1045              		.loc 1 1339 0
 1046 008a 054B     		ldr	r3, .L89
 1047 008c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1048 008e 022B     		cmp	r3, #2
 1049 0090 DBD1     		bne	.L79
1340:TP2824/TP2802.c **** 			
 1050              		.loc 1 1340 0
 1051 0092 3A21     		movs	r1, #58
 1052 0094 1920     		movs	r0, #25
 1053 0096 FFF7FEFF 		bl	tp28xx_byte_write
 1054              	.LVL136:
 1055 009a D6E7     		b	.L79
 1056              	.LVL137:
 1057              	.L82:
ARM GAS  /tmp/ccnKW75d.s 			page 50


1297:TP2824/TP2802.c **** 
 1058              		.loc 1 1297 0
 1059 009c 0025     		movs	r5, #0
 1060 009e D7E7     		b	.L72
 1061              	.L90:
 1062              		.align	2
 1063              	.L89:
 1064 00a0 00000000 		.word	mode
 1065 00a4 00000000 		.word	chip
 1066 00a8 00000000 		.word	.LANCHOR8
 1067 00ac 00000000 		.word	.LANCHOR9
 1068 00b0 00000000 		.word	.LANCHOR10
 1069 00b4 00000000 		.word	.LANCHOR11
 1070              		.cfi_endproc
 1071              	.LFE74:
 1073              		.section	.text.Set_HDC,"ax",%progbits
 1074              		.align	1
 1075              		.global	Set_HDC
 1076              		.syntax unified
 1077              		.thumb
 1078              		.thumb_func
 1079              		.fpu softvfp
 1081              	Set_HDC:
 1082              	.LFB75:
1357:TP2824/TP2802.c **** 
 1083              		.loc 1 1357 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 1087              	.LVL138:
 1088 0000 10B5     		push	{r4, lr}
 1089              	.LCFI10:
 1090              		.cfi_def_cfa_offset 8
 1091              		.cfi_offset 4, -8
 1092              		.cfi_offset 14, -4
 1093              	.LVL139:
1363:TP2824/TP2802.c ****     {
 1094              		.loc 1 1363 0
 1095 0002 264B     		ldr	r3, .L109
 1096 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 1097 0006 0D2B     		cmp	r3, #13
 1098 0008 46D8     		bhi	.L102
 1099 000a DFE803F0 		tbb	[pc, r3]
 1100              	.L94:
 1101 000e 0D       		.byte	(.L103-.L94)/2
 1102 000f 07       		.byte	(.L95-.L94)/2
 1103 0010 0B       		.byte	(.L96-.L94)/2
 1104 0011 09       		.byte	(.L97-.L94)/2
 1105 0012 45       		.byte	(.L102-.L94)/2
 1106 0013 45       		.byte	(.L102-.L94)/2
 1107 0014 45       		.byte	(.L102-.L94)/2
 1108 0015 45       		.byte	(.L102-.L94)/2
 1109 0016 45       		.byte	(.L102-.L94)/2
 1110 0017 45       		.byte	(.L102-.L94)/2
 1111 0018 45       		.byte	(.L102-.L94)/2
 1112 0019 45       		.byte	(.L102-.L94)/2
 1113 001a 0D       		.byte	(.L103-.L94)/2
ARM GAS  /tmp/ccnKW75d.s 			page 51


 1114 001b 07       		.byte	(.L95-.L94)/2
 1115              		.p2align 1
 1116              	.L95:
1381:TP2824/TP2802.c ****         break;
 1117              		.loc 1 1381 0
 1118 001c 0224     		movs	r4, #2
 1119 001e 04E0     		b	.L93
 1120              	.L97:
 1121              	.LVL140:
1371:TP2824/TP2802.c ****         break;
 1122              		.loc 1 1371 0
 1123 0020 0424     		movs	r4, #4
 1124 0022 02E0     		b	.L93
 1125              	.LVL141:
 1126              	.L96:
1367:TP2824/TP2802.c ****         break;
 1127              		.loc 1 1367 0
 1128 0024 0324     		movs	r4, #3
 1129 0026 00E0     		b	.L93
 1130              	.LVL142:
 1131              	.L103:
1376:TP2824/TP2802.c ****         break;
 1132              		.loc 1 1376 0
 1133 0028 0124     		movs	r4, #1
 1134              	.LVL143:
 1135              	.L93:
1386:TP2824/TP2802.c **** 
 1136              		.loc 1 1386 0
 1137 002a FFF7FEFF 		bl	Set_VidRes
 1138              	.LVL144:
1388:TP2824/TP2802.c ****         {
 1139              		.loc 1 1388 0
 1140 002e 1C4B     		ldr	r3, .L109+4
 1141 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1142 0032 262B     		cmp	r3, #38
 1143 0034 0ED0     		beq	.L105
1392:TP2824/TP2802.c ****         {
 1144              		.loc 1 1392 0
 1145 0036 A3F12402 		sub	r2, r3, #36
 1146 003a D2B2     		uxtb	r2, r2
 1147 003c 012A     		cmp	r2, #1
 1148 003e 12D9     		bls	.L106
1396:TP2824/TP2802.c ****         {
 1149              		.loc 1 1396 0
 1150 0040 2F2B     		cmp	r3, #47
 1151 0042 19D0     		beq	.L107
1400:TP2824/TP2802.c ****         {
 1152              		.loc 1 1400 0
 1153 0044 272B     		cmp	r3, #39
 1154 0046 1FD0     		beq	.L108
 1155              	.L99:
1404:TP2824/TP2802.c ****     }
 1156              		.loc 1 1404 0
 1157 0048 4021     		movs	r1, #64
 1158 004a 1320     		movs	r0, #19
 1159 004c FFF7FEFF 		bl	tp28xx_byte_write
 1160              	.LVL145:
ARM GAS  /tmp/ccnKW75d.s 			page 52


 1161              	.L92:
1407:TP2824/TP2802.c **** 
 1162              		.loc 1 1407 0
 1163 0050 2046     		mov	r0, r4
 1164 0052 10BD     		pop	{r4, pc}
 1165              	.L105:
1390:TP2824/TP2802.c ****         }
 1166              		.loc 1 1390 0
 1167 0054 1348     		ldr	r0, .L109+8
 1168 0056 04EB4401 		add	r1, r4, r4, lsl #1
 1169 005a 04EB8101 		add	r1, r4, r1, lsl #2
 1170 005e 0144     		add	r1, r1, r0
 1171 0060 FFF7FEFF 		bl	I2CDeviceSet2
 1172              	.LVL146:
 1173 0064 F0E7     		b	.L99
 1174              	.L106:
1394:TP2824/TP2802.c ****         }
 1175              		.loc 1 1394 0
 1176 0066 0F48     		ldr	r0, .L109+8
 1177 0068 04EB4401 		add	r1, r4, r4, lsl #1
 1178 006c 04EB8101 		add	r1, r4, r1, lsl #2
 1179 0070 0144     		add	r1, r1, r0
 1180 0072 FFF7FEFF 		bl	I2CDeviceSet2
 1181              	.LVL147:
 1182 0076 E7E7     		b	.L99
 1183              	.L107:
1398:TP2824/TP2802.c ****         }
 1184              		.loc 1 1398 0
 1185 0078 0B48     		ldr	r0, .L109+12
 1186 007a 04EB8403 		add	r3, r4, r4, lsl #2
 1187 007e 9900     		lsls	r1, r3, #2
 1188 0080 0144     		add	r1, r1, r0
 1189 0082 FFF7FEFF 		bl	I2CDeviceSet2
 1190              	.LVL148:
 1191 0086 DFE7     		b	.L99
 1192              	.L108:
1402:TP2824/TP2802.c ****         }
 1193              		.loc 1 1402 0
 1194 0088 0848     		ldr	r0, .L109+16
 1195 008a 04EB8403 		add	r3, r4, r4, lsl #2
 1196 008e 9900     		lsls	r1, r3, #2
 1197 0090 0144     		add	r1, r1, r0
 1198 0092 FFF7FEFF 		bl	I2CDeviceSet2
 1199              	.LVL149:
 1200 0096 D7E7     		b	.L99
 1201              	.LVL150:
 1202              	.L102:
1361:TP2824/TP2802.c **** 
 1203              		.loc 1 1361 0
 1204 0098 0024     		movs	r4, #0
 1205 009a D9E7     		b	.L92
 1206              	.L110:
 1207              		.align	2
 1208              	.L109:
 1209 009c 00000000 		.word	mode
 1210 00a0 00000000 		.word	chip
 1211 00a4 00000000 		.word	.LANCHOR12
ARM GAS  /tmp/ccnKW75d.s 			page 53


 1212 00a8 00000000 		.word	.LANCHOR13
 1213 00ac 00000000 		.word	.LANCHOR14
 1214              		.cfi_endproc
 1215              	.LFE75:
 1217              		.section	.text.Det_VidRes,"ax",%progbits
 1218              		.align	1
 1219              		.global	Det_VidRes
 1220              		.syntax unified
 1221              		.thumb
 1222              		.thumb_func
 1223              		.fpu softvfp
 1225              	Det_VidRes:
 1226              	.LFB76:
1410:TP2824/TP2802.c ****     tByte CVSTD;
 1227              		.loc 1 1410 0
 1228              		.cfi_startproc
 1229              		@ args = 0, pretend = 0, frame = 0
 1230              		@ frame_needed = 0, uses_anonymous_args = 0
 1231 0000 10B5     		push	{r4, lr}
 1232              	.LCFI11:
 1233              		.cfi_def_cfa_offset 8
 1234              		.cfi_offset 4, -8
 1235              		.cfi_offset 14, -4
1414:TP2824/TP2802.c **** 
 1236              		.loc 1 1414 0
 1237 0002 0320     		movs	r0, #3
 1238 0004 FFF7FEFF 		bl	tp28xx_byte_read
 1239              	.LVL151:
 1240 0008 00F00704 		and	r4, r0, #7
 1241              	.LVL152:
1416:TP2824/TP2802.c ****     {
 1242              		.loc 1 1416 0
 1243 000c 052C     		cmp	r4, #5
 1244 000e 01D8     		bhi	.L117
 1245              	.LVL153:
 1246              	.L113:
1449:TP2824/TP2802.c **** tByte Det_VideoLoss(tByte ch)
 1247              		.loc 1 1449 0
 1248 0010 2046     		mov	r0, r4
 1249 0012 10BD     		pop	{r4, pc}
 1250              	.LVL154:
 1251              	.L117:
1416:TP2824/TP2802.c ****     {
 1252              		.loc 1 1416 0
 1253 0014 062C     		cmp	r4, #6
 1254 0016 03D1     		bne	.L115
1438:TP2824/TP2802.c ****         RES = NTPAL;
 1255              		.loc 1 1438 0
 1256 0018 0448     		ldr	r0, .L118
 1257 001a FFF7FEFF 		bl	printf
 1258              	.LVL155:
1440:TP2824/TP2802.c ****     default:
 1259              		.loc 1 1440 0
 1260 001e F7E7     		b	.L113
 1261              	.LVL156:
 1262              	.L115:
1442:TP2824/TP2802.c ****         RES = NoDet;
ARM GAS  /tmp/ccnKW75d.s 			page 54


 1263              		.loc 1 1442 0
 1264 0020 0348     		ldr	r0, .L118+4
 1265 0022 FFF7FEFF 		bl	printf
 1266              	.LVL157:
1443:TP2824/TP2802.c ****         break;
 1267              		.loc 1 1443 0
 1268 0026 0724     		movs	r4, #7
 1269              	.LVL158:
1444:TP2824/TP2802.c ****     }
 1270              		.loc 1 1444 0
 1271 0028 F2E7     		b	.L113
 1272              	.L119:
 1273 002a 00BF     		.align	2
 1274              	.L118:
 1275 002c 00000000 		.word	.LC20
 1276 0030 10000000 		.word	.LC21
 1277              		.cfi_endproc
 1278              	.LFE76:
 1280              		.section	.text.Det_VideoLoss,"ax",%progbits
 1281              		.align	1
 1282              		.global	Det_VideoLoss
 1283              		.syntax unified
 1284              		.thumb
 1285              		.thumb_func
 1286              		.fpu softvfp
 1288              	Det_VideoLoss:
 1289              	.LFB77:
1451:TP2824/TP2802.c **** 
 1290              		.loc 1 1451 0
 1291              		.cfi_startproc
 1292              		@ args = 0, pretend = 0, frame = 0
 1293              		@ frame_needed = 0, uses_anonymous_args = 0
 1294              	.LVL159:
 1295 0000 10B5     		push	{r4, lr}
 1296              	.LCFI12:
 1297              		.cfi_def_cfa_offset 8
 1298              		.cfi_offset 4, -8
 1299              		.cfi_offset 14, -4
1455:TP2824/TP2802.c ****     VDLOSS = tp28xx_byte_read(0x01);
 1300              		.loc 1 1455 0
 1301 0002 00F00301 		and	r1, r0, #3
 1302 0006 4020     		movs	r0, #64
 1303              	.LVL160:
 1304 0008 FFF7FEFF 		bl	tp28xx_byte_write
 1305              	.LVL161:
1456:TP2824/TP2802.c **** //	printf("video status 0x%02x on ch%01x\r\n",(tWord)VDLOSS,(tWord)ch);
 1306              		.loc 1 1456 0
 1307 000c 0120     		movs	r0, #1
 1308 000e FFF7FEFF 		bl	tp28xx_byte_read
 1309              	.LVL162:
1459:TP2824/TP2802.c **** 
 1310              		.loc 1 1459 0
 1311 0012 0446     		mov	r4, r0
 1312 0014 28B9     		cbnz	r0, .L123
 1313              	.LVL163:
 1314              	.L121:
1461:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccnKW75d.s 			page 55


 1315              		.loc 1 1461 0
 1316 0016 0548     		ldr	r0, .L124
 1317 0018 FFF7FEFF 		bl	printf
 1318              	.LVL164:
1466:TP2824/TP2802.c **** 
 1319              		.loc 1 1466 0
 1320 001c C4F3C710 		ubfx	r0, r4, #7, #8
 1321 0020 10BD     		pop	{r4, pc}
 1322              	.LVL165:
 1323              	.L123:
1459:TP2824/TP2802.c **** 
 1324              		.loc 1 1459 0 discriminator 1
 1325 0022 0348     		ldr	r0, .L124+4
 1326              	.LVL166:
 1327 0024 FFF7FEFF 		bl	printf
 1328              	.LVL167:
 1329 0028 F5E7     		b	.L121
 1330              	.L125:
 1331 002a 00BF     		.align	2
 1332              	.L124:
 1333 002c 04000000 		.word	.LC23
 1334 0030 00000000 		.word	.LC22
 1335              		.cfi_endproc
 1336              	.LFE77:
 1338              		.section	.text.ManualAGC,"ax",%progbits
 1339              		.align	1
 1340              		.global	ManualAGC
 1341              		.syntax unified
 1342              		.thumb
 1343              		.thumb_func
 1344              		.fpu softvfp
 1346              	ManualAGC:
 1347              	.LFB78:
1469:TP2824/TP2802.c ****     unsigned int agc;
 1348              		.loc 1 1469 0
 1349              		.cfi_startproc
 1350              		@ args = 0, pretend = 0, frame = 0
 1351              		@ frame_needed = 0, uses_anonymous_args = 0
 1352              	.LVL168:
 1353 0000 38B5     		push	{r3, r4, r5, lr}
 1354              	.LCFI13:
 1355              		.cfi_def_cfa_offset 16
 1356              		.cfi_offset 3, -16
 1357              		.cfi_offset 4, -12
 1358              		.cfi_offset 5, -8
 1359              		.cfi_offset 14, -4
 1360 0002 0546     		mov	r5, r0
1474:TP2824/TP2802.c ****     agc = tp28xx_byte_read(0x04);
 1361              		.loc 1 1474 0
 1362 0004 0221     		movs	r1, #2
 1363 0006 2F20     		movs	r0, #47
 1364              	.LVL169:
 1365 0008 FFF7FEFF 		bl	tp28xx_byte_write
 1366              	.LVL170:
1475:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
 1367              		.loc 1 1475 0
 1368 000c 0420     		movs	r0, #4
ARM GAS  /tmp/ccnKW75d.s 			page 56


 1369 000e FFF7FEFF 		bl	tp28xx_byte_read
 1370              	.LVL171:
 1371 0012 0446     		mov	r4, r0
 1372              	.LVL172:
1476:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
 1373              		.loc 1 1476 0
 1374 0014 0420     		movs	r0, #4
 1375              	.LVL173:
 1376 0016 FFF7FEFF 		bl	tp28xx_byte_read
 1377              	.LVL174:
 1378 001a 0444     		add	r4, r4, r0
 1379              	.LVL175:
1477:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
 1380              		.loc 1 1477 0
 1381 001c 0420     		movs	r0, #4
 1382 001e FFF7FEFF 		bl	tp28xx_byte_read
 1383              	.LVL176:
 1384 0022 0444     		add	r4, r4, r0
 1385              	.LVL177:
1478:TP2824/TP2802.c ****     agc &= 0x3f0;
 1386              		.loc 1 1478 0
 1387 0024 0420     		movs	r0, #4
 1388 0026 FFF7FEFF 		bl	tp28xx_byte_read
 1389              	.LVL178:
 1390 002a 0444     		add	r4, r4, r0
 1391              	.LVL179:
 1392 002c 6408     		lsrs	r4, r4, #1
 1393              	.LVL180:
1480:TP2824/TP2802.c ****     if(agc > 0x1ff) agc = 0x1ff;
 1394              		.loc 1 1480 0
 1395 002e 04F4FC74 		and	r4, r4, #504
 1396              	.LVL181:
1483:TP2824/TP2802.c ****     tp28xx_byte_write(0x08, agc&0xff);
 1397              		.loc 1 1483 0
 1398 0032 2A46     		mov	r2, r5
 1399 0034 2146     		mov	r1, r4
 1400 0036 0B48     		ldr	r0, .L130
 1401 0038 FFF7FEFF 		bl	printf
 1402              	.LVL182:
1484:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x06);
 1403              		.loc 1 1484 0
 1404 003c 04F0F801 		and	r1, r4, #248
 1405 0040 0820     		movs	r0, #8
 1406 0042 FFF7FEFF 		bl	tp28xx_byte_write
 1407              	.LVL183:
1485:TP2824/TP2802.c ****     tmp &=0xf9;
 1408              		.loc 1 1485 0
 1409 0046 0620     		movs	r0, #6
 1410 0048 FFF7FEFF 		bl	tp28xx_byte_read
 1411              	.LVL184:
1486:TP2824/TP2802.c ****     tmp |=(agc>>7)&0x02;
 1412              		.loc 1 1486 0
 1413 004c 00F0F900 		and	r0, r0, #249
 1414              	.LVL185:
1487:TP2824/TP2802.c ****     tmp |=0x04;
 1415              		.loc 1 1487 0
 1416 0050 E109     		lsrs	r1, r4, #7
ARM GAS  /tmp/ccnKW75d.s 			page 57


 1417 0052 01F00201 		and	r1, r1, #2
 1418 0056 0143     		orrs	r1, r1, r0
 1419              	.LVL186:
1489:TP2824/TP2802.c ****     
 1420              		.loc 1 1489 0
 1421 0058 41F00401 		orr	r1, r1, #4
 1422              	.LVL187:
 1423 005c 0620     		movs	r0, #6
 1424              	.LVL188:
 1425 005e FFF7FEFF 		bl	tp28xx_byte_write
 1426              	.LVL189:
1503:TP2824/TP2802.c **** 
 1427              		.loc 1 1503 0
 1428 0062 38BD     		pop	{r3, r4, r5, pc}
 1429              	.LVL190:
 1430              	.L131:
 1431              		.align	2
 1432              	.L130:
 1433 0064 00000000 		.word	.LC24
 1434              		.cfi_endproc
 1435              	.LFE78:
 1437              		.section	.text.ReadGain,"ax",%progbits
 1438              		.align	1
 1439              		.global	ReadGain
 1440              		.syntax unified
 1441              		.thumb
 1442              		.thumb_func
 1443              		.fpu softvfp
 1445              	ReadGain:
 1446              	.LFB82:
1597:TP2824/TP2802.c **** ////////////////////////////////////////
1598:TP2824/TP2802.c **** tByte ReadGain(void)
1599:TP2824/TP2802.c **** {
 1447              		.loc 1 1599 0
 1448              		.cfi_startproc
 1449              		@ args = 0, pretend = 0, frame = 0
 1450              		@ frame_needed = 0, uses_anonymous_args = 0
 1451 0000 08B5     		push	{r3, lr}
 1452              	.LCFI14:
 1453              		.cfi_def_cfa_offset 8
 1454              		.cfi_offset 3, -8
 1455              		.cfi_offset 14, -4
1600:TP2824/TP2802.c ****     tp28xx_byte_write(0x2f, 0x00);
 1456              		.loc 1 1600 0
 1457 0002 0021     		movs	r1, #0
 1458 0004 2F20     		movs	r0, #47
 1459 0006 FFF7FEFF 		bl	tp28xx_byte_write
 1460              	.LVL191:
1601:TP2824/TP2802.c ****     return tp28xx_byte_read(0x04);
 1461              		.loc 1 1601 0
 1462 000a 0420     		movs	r0, #4
 1463 000c FFF7FEFF 		bl	tp28xx_byte_read
 1464              	.LVL192:
1602:TP2824/TP2802.c **** }
 1465              		.loc 1 1602 0
 1466 0010 08BD     		pop	{r3, pc}
 1467              		.cfi_endproc
ARM GAS  /tmp/ccnKW75d.s 			page 58


 1468              	.LFE82:
 1470              		.section	.text.SetCGain,"ax",%progbits
 1471              		.align	1
 1472              		.global	SetCGain
 1473              		.syntax unified
 1474              		.thumb
 1475              		.thumb_func
 1476              		.fpu softvfp
 1478              	SetCGain:
 1479              	.LFB83:
1603:TP2824/TP2802.c **** ////////////////////////////////////////
1604:TP2824/TP2802.c **** void SetCGain(unsigned char CGAIN_STD)
1605:TP2824/TP2802.c **** {
 1480              		.loc 1 1605 0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 0
 1483              		@ frame_needed = 0, uses_anonymous_args = 0
 1484              	.LVL193:
 1485 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1486              	.LCFI15:
 1487              		.cfi_def_cfa_offset 24
 1488              		.cfi_offset 3, -24
 1489              		.cfi_offset 4, -20
 1490              		.cfi_offset 5, -16
 1491              		.cfi_offset 6, -12
 1492              		.cfi_offset 7, -8
 1493              		.cfi_offset 14, -4
 1494 0002 0646     		mov	r6, r0
 1495              	.LVL194:
1606:TP2824/TP2802.c ****     unsigned char tmp, cgain;
1607:TP2824/TP2802.c ****     unsigned char retry = 30;
1608:TP2824/TP2802.c **** 
1609:TP2824/TP2802.c ****     tp28xx_byte_write(0x2f, 0x06);
 1496              		.loc 1 1609 0
 1497 0004 0621     		movs	r1, #6
 1498 0006 2F20     		movs	r0, #47
 1499              	.LVL195:
 1500 0008 FFF7FEFF 		bl	tp28xx_byte_write
 1501              	.LVL196:
1610:TP2824/TP2802.c ****     cgain = tp28xx_byte_read(0x04);
 1502              		.loc 1 1610 0
 1503 000c 0420     		movs	r0, #4
 1504 000e FFF7FEFF 		bl	tp28xx_byte_read
 1505              	.LVL197:
1611:TP2824/TP2802.c **** 
1612:TP2824/TP2802.c ****     if(cgain < CGAIN_STD )
 1506              		.loc 1 1612 0
 1507 0012 B042     		cmp	r0, r6
 1508 0014 43D2     		bcs	.L134
 1509 0016 0446     		mov	r4, r0
1607:TP2824/TP2802.c **** 
 1510              		.loc 1 1607 0
 1511 0018 1E27     		movs	r7, #30
 1512 001a 17E0     		b	.L135
 1513              	.LVL198:
 1514              	.L138:
1613:TP2824/TP2802.c ****     {
ARM GAS  /tmp/ccnKW75d.s 			page 59


1614:TP2824/TP2802.c ****         while(retry)
1615:TP2824/TP2802.c ****         {
1616:TP2824/TP2802.c ****             retry--;
1617:TP2824/TP2802.c **** 
1618:TP2824/TP2802.c ****             tmp = tp28xx_byte_read(0x07);
1619:TP2824/TP2802.c ****             tmp &=0x3f;
1620:TP2824/TP2802.c ****             while(abs(CGAIN_STD-cgain))
1621:TP2824/TP2802.c ****             {
1622:TP2824/TP2802.c ****                 if(tmp) tmp--;
1623:TP2824/TP2802.c ****                 else break;
1624:TP2824/TP2802.c ****                 cgain++;
1625:TP2824/TP2802.c ****             }
1626:TP2824/TP2802.c **** 
1627:TP2824/TP2802.c ****             tp28xx_byte_write(0x07, 0x80|tmp);
 1515              		.loc 1 1627 0
 1516 001c 45F08001 		orr	r1, r5, #128
 1517 0020 0720     		movs	r0, #7
 1518 0022 FFF7FEFF 		bl	tp28xx_byte_write
 1519              	.LVL199:
1628:TP2824/TP2802.c ****             if(0 == tmp) break;
 1520              		.loc 1 1628 0
 1521 0026 D5B3     		cbz	r5, .L134
1629:TP2824/TP2802.c ****             delay(8); //delay 40ms
 1522              		.loc 1 1629 0
 1523 0028 0820     		movs	r0, #8
 1524 002a FFF7FEFF 		bl	delay
 1525              	.LVL200:
1630:TP2824/TP2802.c ****             tp28xx_byte_write(0x2f, 0x06);
 1526              		.loc 1 1630 0
 1527 002e 0621     		movs	r1, #6
 1528 0030 2F20     		movs	r0, #47
 1529 0032 FFF7FEFF 		bl	tp28xx_byte_write
 1530              	.LVL201:
1631:TP2824/TP2802.c ****             cgain = tp28xx_byte_read(0x04);
 1531              		.loc 1 1631 0
 1532 0036 0420     		movs	r0, #4
 1533 0038 FFF7FEFF 		bl	tp28xx_byte_read
 1534              	.LVL202:
 1535 003c 0446     		mov	r4, r0
 1536              	.LVL203:
1632:TP2824/TP2802.c **** 
1633:TP2824/TP2802.c ****             if(cgain > (CGAIN_STD+1))
 1537              		.loc 1 1633 0
 1538 003e 731C     		adds	r3, r6, #1
 1539 0040 9842     		cmp	r0, r3
 1540 0042 14DC     		bgt	.L146
 1541              	.LVL204:
 1542              	.L140:
1634:TP2824/TP2802.c ****             {
1635:TP2824/TP2802.c ****                 tmp = tp28xx_byte_read(0x07);
1636:TP2824/TP2802.c ****                 tmp &=0x3f;
1637:TP2824/TP2802.c ****                 //tmp +=0x02;
1638:TP2824/TP2802.c ****                 tmp++;
1639:TP2824/TP2802.c ****                 tmp++;
1640:TP2824/TP2802.c ****                 if(tmp > 0x3f) tmp = 0x3f;
1641:TP2824/TP2802.c ****                 tp28xx_byte_write(0x07, 0x80|tmp);
1642:TP2824/TP2802.c ****                 if(0x3f == tmp) break;
ARM GAS  /tmp/ccnKW75d.s 			page 60


1643:TP2824/TP2802.c ****                 delay(8); //delay 40ms
1644:TP2824/TP2802.c ****                 cgain = tp28xx_byte_read(0x04);
1645:TP2824/TP2802.c **** 
1646:TP2824/TP2802.c ****             }
1647:TP2824/TP2802.c ****             if(abs(cgain-CGAIN_STD) < 2)  break;
 1543              		.loc 1 1647 0
 1544 0044 A31B     		subs	r3, r4, r6
 1545 0046 0133     		adds	r3, r3, #1
 1546 0048 022B     		cmp	r3, #2
 1547 004a 28D9     		bls	.L134
 1548              	.LVL205:
 1549              	.L135:
1614:TP2824/TP2802.c ****         {
 1550              		.loc 1 1614 0
 1551 004c 3FB3     		cbz	r7, .L134
1616:TP2824/TP2802.c **** 
 1552              		.loc 1 1616 0
 1553 004e 013F     		subs	r7, r7, #1
 1554              	.LVL206:
 1555 0050 FFB2     		uxtb	r7, r7
 1556              	.LVL207:
1618:TP2824/TP2802.c ****             tmp &=0x3f;
 1557              		.loc 1 1618 0
 1558 0052 0720     		movs	r0, #7
 1559 0054 FFF7FEFF 		bl	tp28xx_byte_read
 1560              	.LVL208:
1619:TP2824/TP2802.c ****             while(abs(CGAIN_STD-cgain))
 1561              		.loc 1 1619 0
 1562 0058 00F03F05 		and	r5, r0, #63
 1563              	.LVL209:
 1564              	.L137:
1620:TP2824/TP2802.c ****             {
 1565              		.loc 1 1620 0
 1566 005c B442     		cmp	r4, r6
 1567 005e DDD0     		beq	.L138
1622:TP2824/TP2802.c ****                 else break;
 1568              		.loc 1 1622 0
 1569 0060 002D     		cmp	r5, #0
 1570 0062 DBD0     		beq	.L138
1622:TP2824/TP2802.c ****                 else break;
 1571              		.loc 1 1622 0 is_stmt 0 discriminator 1
 1572 0064 013D     		subs	r5, r5, #1
 1573              	.LVL210:
 1574 0066 EDB2     		uxtb	r5, r5
 1575              	.LVL211:
1624:TP2824/TP2802.c ****             }
 1576              		.loc 1 1624 0 is_stmt 1 discriminator 1
 1577 0068 0134     		adds	r4, r4, #1
 1578              	.LVL212:
 1579 006a E4B2     		uxtb	r4, r4
 1580              	.LVL213:
 1581 006c F6E7     		b	.L137
 1582              	.LVL214:
 1583              	.L146:
1635:TP2824/TP2802.c ****                 tmp &=0x3f;
 1584              		.loc 1 1635 0
 1585 006e 0720     		movs	r0, #7
ARM GAS  /tmp/ccnKW75d.s 			page 61


 1586              	.LVL215:
 1587 0070 FFF7FEFF 		bl	tp28xx_byte_read
 1588              	.LVL216:
1636:TP2824/TP2802.c ****                 //tmp +=0x02;
 1589              		.loc 1 1636 0
 1590 0074 00F03F00 		and	r0, r0, #63
 1591              	.LVL217:
1639:TP2824/TP2802.c ****                 if(tmp > 0x3f) tmp = 0x3f;
 1592              		.loc 1 1639 0
 1593 0078 841C     		adds	r4, r0, #2
 1594              	.LVL218:
1640:TP2824/TP2802.c ****                 tp28xx_byte_write(0x07, 0x80|tmp);
 1595              		.loc 1 1640 0
 1596 007a 3F2C     		cmp	r4, #63
 1597 007c 00D9     		bls	.L141
 1598 007e 3F24     		movs	r4, #63
 1599              	.LVL219:
 1600              	.L141:
1641:TP2824/TP2802.c ****                 if(0x3f == tmp) break;
 1601              		.loc 1 1641 0
 1602 0080 44F08001 		orr	r1, r4, #128
 1603 0084 0720     		movs	r0, #7
 1604 0086 FFF7FEFF 		bl	tp28xx_byte_write
 1605              	.LVL220:
1642:TP2824/TP2802.c ****                 delay(8); //delay 40ms
 1606              		.loc 1 1642 0
 1607 008a 3F2C     		cmp	r4, #63
 1608 008c 07D0     		beq	.L134
1643:TP2824/TP2802.c ****                 cgain = tp28xx_byte_read(0x04);
 1609              		.loc 1 1643 0
 1610 008e 0820     		movs	r0, #8
 1611 0090 FFF7FEFF 		bl	delay
 1612              	.LVL221:
1644:TP2824/TP2802.c **** 
 1613              		.loc 1 1644 0
 1614 0094 0420     		movs	r0, #4
 1615 0096 FFF7FEFF 		bl	tp28xx_byte_read
 1616              	.LVL222:
 1617 009a 0446     		mov	r4, r0
 1618              	.LVL223:
 1619 009c D2E7     		b	.L140
 1620              	.LVL224:
 1621              	.L134:
1648:TP2824/TP2802.c ****         }
1649:TP2824/TP2802.c **** 
1650:TP2824/TP2802.c ****     }
1651:TP2824/TP2802.c **** }
 1622              		.loc 1 1651 0
 1623 009e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1624              		.cfi_endproc
 1625              	.LFE83:
 1627              		.section	.text.INPUT_VIDEO_CHECK,"ax",%progbits
 1628              		.align	1
 1629              		.global	INPUT_VIDEO_CHECK
 1630              		.syntax unified
 1631              		.thumb
 1632              		.thumb_func
ARM GAS  /tmp/ccnKW75d.s 			page 62


 1633              		.fpu softvfp
 1635              	INPUT_VIDEO_CHECK:
 1636              	.LFB84:
1652:TP2824/TP2802.c **** ////////////////////////////////////////
1653:TP2824/TP2802.c **** 
1654:TP2824/TP2802.c **** BYTE INPUT_VIDEO_CHECK(BYTE ch)
1655:TP2824/TP2802.c **** {
 1637              		.loc 1 1655 0
 1638              		.cfi_startproc
 1639              		@ args = 0, pretend = 0, frame = 0
 1640              		@ frame_needed = 0, uses_anonymous_args = 0
 1641              		@ link register save eliminated.
 1642              	.LVL225:
1656:TP2824/TP2802.c **** 
1657:TP2824/TP2802.c **** 	  BYTE ret=0;
1658:TP2824/TP2802.c **** 	
1659:TP2824/TP2802.c **** 	 switch(CURRENT_CH)
 1643              		.loc 1 1659 0
 1644 0000 444B     		ldr	r3, .L186
 1645 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1646 0004 222B     		cmp	r3, #34
 1647 0006 5ED8     		bhi	.L164
 1648 0008 DFE803F0 		tbb	[pc, r3]
 1649              	.L150:
 1650 000c 12       		.byte	(.L149-.L150)/2
 1651 000d 18       		.byte	(.L151-.L150)/2
 1652 000e 20       		.byte	(.L152-.L150)/2
 1653 000f 26       		.byte	(.L153-.L150)/2
 1654 0010 5D       		.byte	(.L164-.L150)/2
 1655 0011 5D       		.byte	(.L164-.L150)/2
 1656 0012 36       		.byte	(.L154-.L150)/2
 1657 0013 36       		.byte	(.L154-.L150)/2
 1658 0014 36       		.byte	(.L154-.L150)/2
 1659 0015 2A       		.byte	(.L155-.L150)/2
 1660 0016 40       		.byte	(.L156-.L150)/2
 1661 0017 30       		.byte	(.L157-.L150)/2
 1662 0018 4A       		.byte	(.L158-.L150)/2
 1663 0019 40       		.byte	(.L156-.L150)/2
 1664 001a 2A       		.byte	(.L155-.L150)/2
 1665 001b 3A       		.byte	(.L159-.L150)/2
 1666 001c 4A       		.byte	(.L158-.L150)/2
 1667 001d 44       		.byte	(.L160-.L150)/2
 1668 001e 44       		.byte	(.L160-.L150)/2
 1669 001f 3A       		.byte	(.L159-.L150)/2
 1670 0020 50       		.byte	(.L161-.L150)/2
 1671 0021 36       		.byte	(.L154-.L150)/2
 1672 0022 50       		.byte	(.L161-.L150)/2
 1673 0023 54       		.byte	(.L162-.L150)/2
 1674 0024 36       		.byte	(.L154-.L150)/2
 1675 0025 50       		.byte	(.L161-.L150)/2
 1676 0026 58       		.byte	(.L163-.L150)/2
 1677 0027 36       		.byte	(.L154-.L150)/2
 1678 0028 54       		.byte	(.L162-.L150)/2
 1679 0029 58       		.byte	(.L163-.L150)/2
 1680 002a 50       		.byte	(.L161-.L150)/2
 1681 002b 54       		.byte	(.L162-.L150)/2
 1682 002c 58       		.byte	(.L163-.L150)/2
ARM GAS  /tmp/ccnKW75d.s 			page 63


 1683 002d 54       		.byte	(.L162-.L150)/2
 1684 002e 58       		.byte	(.L163-.L150)/2
 1685 002f 00       		.p2align 1
 1686              	.L149:
1660:TP2824/TP2802.c ****  	{
1661:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE0_w0: 
1662:TP2824/TP2802.c **** 			if((ch==CH2)||(ch==CH3)||(ch==CH4))
 1687              		.loc 1 1662 0
 1688 0030 0138     		subs	r0, r0, #1
 1689              	.LVL226:
 1690 0032 C0B2     		uxtb	r0, r0
 1691 0034 0228     		cmp	r0, #2
 1692 0036 48D9     		bls	.L165
1657:TP2824/TP2802.c **** 	
 1693              		.loc 1 1657 0
 1694 0038 0020     		movs	r0, #0
 1695 003a 7047     		bx	lr
 1696              	.LVL227:
 1697              	.L151:
1663:TP2824/TP2802.c **** 		           ret=_TRUE;		
1664:TP2824/TP2802.c **** 		break;
1665:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE0_w1: 
1666:TP2824/TP2802.c **** 			if((ch==CH1)||(ch==CH3)||(ch==CH4))
 1698              		.loc 1 1666 0
 1699 003c 0028     		cmp	r0, #0
 1700 003e 46D0     		beq	.L166
 1701              		.loc 1 1666 0 is_stmt 0 discriminator 1
 1702 0040 0228     		cmp	r0, #2
 1703 0042 46D0     		beq	.L167
 1704              		.loc 1 1666 0 discriminator 2
 1705 0044 0328     		cmp	r0, #3
 1706 0046 46D0     		beq	.L168
1657:TP2824/TP2802.c **** 	
 1707              		.loc 1 1657 0 is_stmt 1
 1708 0048 0020     		movs	r0, #0
 1709              	.LVL228:
 1710 004a 7047     		bx	lr
 1711              	.LVL229:
 1712              	.L152:
1667:TP2824/TP2802.c **** 							   ret=_TRUE;	
1668:TP2824/TP2802.c **** 		break;
1669:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE0_w2: 
1670:TP2824/TP2802.c **** 			if((ch==CH1)||(ch==CH2)||(ch==CH4))
 1713              		.loc 1 1670 0
 1714 004c 0128     		cmp	r0, #1
 1715 004e 44D9     		bls	.L169
 1716              		.loc 1 1670 0 is_stmt 0 discriminator 1
 1717 0050 0328     		cmp	r0, #3
 1718 0052 44D0     		beq	.L170
1657:TP2824/TP2802.c **** 	
 1719              		.loc 1 1657 0 is_stmt 1
 1720 0054 0020     		movs	r0, #0
 1721              	.LVL230:
 1722 0056 7047     		bx	lr
 1723              	.LVL231:
 1724              	.L153:
1671:TP2824/TP2802.c **** 							   ret=_TRUE;	
ARM GAS  /tmp/ccnKW75d.s 			page 64


1672:TP2824/TP2802.c **** 					break;
1673:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE0_w3: 
1674:TP2824/TP2802.c **** 			if((ch==CH1)||(ch==CH2)||(ch==CH3))
 1725              		.loc 1 1674 0
 1726 0058 0228     		cmp	r0, #2
 1727 005a 42D9     		bls	.L171
1657:TP2824/TP2802.c **** 	
 1728              		.loc 1 1657 0
 1729 005c 0020     		movs	r0, #0
 1730              	.LVL232:
 1731 005e 7047     		bx	lr
 1732              	.LVL233:
 1733              	.L155:
1675:TP2824/TP2802.c **** 		           ret=_TRUE;	
1676:TP2824/TP2802.c **** 				break;
1677:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE12_12: 
1678:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE12_21:			
1679:TP2824/TP2802.c **** 			if((ch==CH3)||(ch==CH4))
 1734              		.loc 1 1679 0
 1735 0060 0238     		subs	r0, r0, #2
 1736              	.LVL234:
 1737 0062 C0B2     		uxtb	r0, r0
 1738 0064 0128     		cmp	r0, #1
 1739 0066 3ED9     		bls	.L172
1657:TP2824/TP2802.c **** 	
 1740              		.loc 1 1657 0
 1741 0068 0020     		movs	r0, #0
 1742 006a 7047     		bx	lr
 1743              	.LVL235:
 1744              	.L157:
1680:TP2824/TP2802.c **** 		           ret=_TRUE;	
1681:TP2824/TP2802.c **** 		break;
1682:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE12_14:
1683:TP2824/TP2802.c **** 			if((ch==CH2)||(ch==CH3))
 1745              		.loc 1 1683 0
 1746 006c 0138     		subs	r0, r0, #1
 1747              	.LVL236:
 1748 006e C0B2     		uxtb	r0, r0
 1749 0070 0128     		cmp	r0, #1
 1750 0072 3AD9     		bls	.L173
1657:TP2824/TP2802.c **** 	
 1751              		.loc 1 1657 0
 1752 0074 0020     		movs	r0, #0
 1753 0076 7047     		bx	lr
 1754              	.LVL237:
 1755              	.L154:
1684:TP2824/TP2802.c **** 		           ret=_TRUE;	
1685:TP2824/TP2802.c **** 			break;
1686:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE10_123:
1687:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8:		
1688:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_123:
1689:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_213:
1690:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_312:
1691:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE9:		
1692:TP2824/TP2802.c **** 		if(ch==CH4)
 1756              		.loc 1 1692 0
 1757 0078 0328     		cmp	r0, #3
ARM GAS  /tmp/ccnKW75d.s 			page 65


 1758 007a 38D0     		beq	.L174
1657:TP2824/TP2802.c **** 	
 1759              		.loc 1 1657 0
 1760 007c 0020     		movs	r0, #0
 1761              	.LVL238:
 1762 007e 7047     		bx	lr
 1763              	.LVL239:
 1764              	.L159:
1693:TP2824/TP2802.c **** 		   ret=_TRUE;	
1694:TP2824/TP2802.c **** 		break;
1695:TP2824/TP2802.c **** 
1696:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_23:
1697:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_32:
1698:TP2824/TP2802.c **** 		if((ch==CH1)||(ch==CH4))
 1765              		.loc 1 1698 0
 1766 0080 0028     		cmp	r0, #0
 1767 0082 36D0     		beq	.L175
 1768              		.loc 1 1698 0 is_stmt 0 discriminator 1
 1769 0084 0328     		cmp	r0, #3
 1770 0086 36D0     		beq	.L176
1657:TP2824/TP2802.c **** 	
 1771              		.loc 1 1657 0 is_stmt 1
 1772 0088 0020     		movs	r0, #0
 1773              	.LVL240:
 1774 008a 7047     		bx	lr
 1775              	.LVL241:
 1776              	.L156:
1699:TP2824/TP2802.c **** 			   ret=_TRUE;	
1700:TP2824/TP2802.c **** 					break;
1701:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_34:
1702:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_43:
1703:TP2824/TP2802.c **** 		if((ch==CH1)||(ch==CH2))
 1777              		.loc 1 1703 0
 1778 008c 0128     		cmp	r0, #1
 1779 008e 34D9     		bls	.L177
1657:TP2824/TP2802.c **** 	
 1780              		.loc 1 1657 0
 1781 0090 0020     		movs	r0, #0
 1782              	.LVL242:
 1783 0092 7047     		bx	lr
 1784              	.LVL243:
 1785              	.L160:
1704:TP2824/TP2802.c **** 			   ret=_TRUE;	
1705:TP2824/TP2802.c **** 				break;
1706:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_31:
1707:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_13:	
1708:TP2824/TP2802.c **** 		if((ch==CH2)||(ch==CH4))
 1786              		.loc 1 1708 0
 1787 0094 0128     		cmp	r0, #1
 1788 0096 32D0     		beq	.L178
 1789              		.loc 1 1708 0 is_stmt 0 discriminator 1
 1790 0098 0328     		cmp	r0, #3
 1791 009a 32D0     		beq	.L179
1657:TP2824/TP2802.c **** 	
 1792              		.loc 1 1657 0 is_stmt 1
 1793 009c 0020     		movs	r0, #0
 1794              	.LVL244:
ARM GAS  /tmp/ccnKW75d.s 			page 66


 1795 009e 7047     		bx	lr
 1796              	.LVL245:
 1797              	.L158:
1709:TP2824/TP2802.c **** 				   ret=_TRUE;			
1710:TP2824/TP2802.c **** 					break;
1711:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE1:
1712:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE2:
1713:TP2824/TP2802.c **** 		ret=_FALSE;
1714:TP2824/TP2802.c **** 		break;
1715:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_42:
1716:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_24:
1717:TP2824/TP2802.c **** 		if((ch==CH1)||(ch==CH3))
 1798              		.loc 1 1717 0
 1799 00a0 0028     		cmp	r0, #0
 1800 00a2 30D0     		beq	.L180
 1801              		.loc 1 1717 0 is_stmt 0 discriminator 1
 1802 00a4 0228     		cmp	r0, #2
 1803 00a6 30D0     		beq	.L181
1657:TP2824/TP2802.c **** 	
 1804              		.loc 1 1657 0 is_stmt 1
 1805 00a8 0020     		movs	r0, #0
 1806              	.LVL246:
 1807 00aa 7047     		bx	lr
 1808              	.LVL247:
 1809              	.L161:
1718:TP2824/TP2802.c **** 				   ret=_TRUE;		
1719:TP2824/TP2802.c **** 		break;
1720:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_412:	
1721:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_124:
1722:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_214: 
1723:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE10_412:
1724:TP2824/TP2802.c **** 			if(ch==CH3)
 1810              		.loc 1 1724 0
 1811 00ac 0228     		cmp	r0, #2
 1812 00ae 2ED0     		beq	.L182
1657:TP2824/TP2802.c **** 	
 1813              		.loc 1 1657 0
 1814 00b0 0020     		movs	r0, #0
 1815              	.LVL248:
 1816 00b2 7047     		bx	lr
 1817              	.LVL249:
 1818              	.L162:
1725:TP2824/TP2802.c **** 			   ret=_TRUE;		
1726:TP2824/TP2802.c **** 		break;
1727:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_134:
1728:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_314:
1729:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE10_413:
1730:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_413: 
1731:TP2824/TP2802.c **** 			if(ch==CH2)
 1819              		.loc 1 1731 0
 1820 00b4 0128     		cmp	r0, #1
 1821 00b6 03D0     		beq	.L148
1657:TP2824/TP2802.c **** 	
 1822              		.loc 1 1657 0
 1823 00b8 0020     		movs	r0, #0
 1824              	.LVL250:
 1825 00ba 7047     		bx	lr
ARM GAS  /tmp/ccnKW75d.s 			page 67


 1826              	.LVL251:
 1827              	.L163:
1732:TP2824/TP2802.c **** 			   ret=_TRUE;		
1733:TP2824/TP2802.c **** 		break;
1734:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_234:
1735:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_324: 
1736:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE10_423:
1737:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_423:			
1738:TP2824/TP2802.c **** 		if(ch==CH1)
 1828              		.loc 1 1738 0
 1829 00bc 08B9     		cbnz	r0, .L185
1739:TP2824/TP2802.c **** 		   ret=_TRUE;		
 1830              		.loc 1 1739 0
 1831 00be 0120     		movs	r0, #1
 1832              	.LVL252:
 1833              	.L148:
1740:TP2824/TP2802.c **** 				break;
1741:TP2824/TP2802.c **** 	default:
1742:TP2824/TP2802.c **** 		ret=0;
1743:TP2824/TP2802.c **** 		break;
1744:TP2824/TP2802.c ****  	}
1745:TP2824/TP2802.c **** 	 
1746:TP2824/TP2802.c **** 	 return ret;
1747:TP2824/TP2802.c **** }
 1834              		.loc 1 1747 0
 1835 00c0 7047     		bx	lr
 1836              	.LVL253:
 1837              	.L185:
1657:TP2824/TP2802.c **** 	
 1838              		.loc 1 1657 0
 1839 00c2 0020     		movs	r0, #0
 1840              	.LVL254:
 1841 00c4 7047     		bx	lr
 1842              	.LVL255:
 1843              	.L164:
1713:TP2824/TP2802.c **** 		break;
 1844              		.loc 1 1713 0
 1845 00c6 0020     		movs	r0, #0
 1846              	.LVL256:
 1847 00c8 7047     		bx	lr
 1848              	.L165:
1663:TP2824/TP2802.c **** 		break;
 1849              		.loc 1 1663 0
 1850 00ca 0120     		movs	r0, #1
 1851 00cc 7047     		bx	lr
 1852              	.LVL257:
 1853              	.L166:
1667:TP2824/TP2802.c **** 		break;
 1854              		.loc 1 1667 0
 1855 00ce 0120     		movs	r0, #1
 1856              	.LVL258:
 1857 00d0 7047     		bx	lr
 1858              	.LVL259:
 1859              	.L167:
 1860 00d2 0120     		movs	r0, #1
 1861              	.LVL260:
 1862 00d4 7047     		bx	lr
ARM GAS  /tmp/ccnKW75d.s 			page 68


 1863              	.LVL261:
 1864              	.L168:
 1865 00d6 0120     		movs	r0, #1
 1866              	.LVL262:
 1867 00d8 7047     		bx	lr
 1868              	.LVL263:
 1869              	.L169:
1671:TP2824/TP2802.c **** 					break;
 1870              		.loc 1 1671 0
 1871 00da 0120     		movs	r0, #1
 1872              	.LVL264:
 1873 00dc 7047     		bx	lr
 1874              	.LVL265:
 1875              	.L170:
 1876 00de 0120     		movs	r0, #1
 1877              	.LVL266:
 1878 00e0 7047     		bx	lr
 1879              	.LVL267:
 1880              	.L171:
1675:TP2824/TP2802.c **** 				break;
 1881              		.loc 1 1675 0
 1882 00e2 0120     		movs	r0, #1
 1883              	.LVL268:
 1884 00e4 7047     		bx	lr
 1885              	.L172:
1680:TP2824/TP2802.c **** 		break;
 1886              		.loc 1 1680 0
 1887 00e6 0120     		movs	r0, #1
 1888 00e8 7047     		bx	lr
 1889              	.L173:
1684:TP2824/TP2802.c **** 			break;
 1890              		.loc 1 1684 0
 1891 00ea 0120     		movs	r0, #1
 1892 00ec 7047     		bx	lr
 1893              	.LVL269:
 1894              	.L174:
1693:TP2824/TP2802.c **** 		break;
 1895              		.loc 1 1693 0
 1896 00ee 0120     		movs	r0, #1
 1897              	.LVL270:
 1898 00f0 7047     		bx	lr
 1899              	.LVL271:
 1900              	.L175:
1699:TP2824/TP2802.c **** 					break;
 1901              		.loc 1 1699 0
 1902 00f2 0120     		movs	r0, #1
 1903              	.LVL272:
 1904 00f4 7047     		bx	lr
 1905              	.LVL273:
 1906              	.L176:
 1907 00f6 0120     		movs	r0, #1
 1908              	.LVL274:
 1909 00f8 7047     		bx	lr
 1910              	.LVL275:
 1911              	.L177:
1704:TP2824/TP2802.c **** 				break;
 1912              		.loc 1 1704 0
ARM GAS  /tmp/ccnKW75d.s 			page 69


 1913 00fa 0120     		movs	r0, #1
 1914              	.LVL276:
 1915 00fc 7047     		bx	lr
 1916              	.LVL277:
 1917              	.L178:
1709:TP2824/TP2802.c **** 					break;
 1918              		.loc 1 1709 0
 1919 00fe 0120     		movs	r0, #1
 1920              	.LVL278:
 1921 0100 7047     		bx	lr
 1922              	.LVL279:
 1923              	.L179:
 1924 0102 0120     		movs	r0, #1
 1925              	.LVL280:
 1926 0104 7047     		bx	lr
 1927              	.LVL281:
 1928              	.L180:
1718:TP2824/TP2802.c **** 		break;
 1929              		.loc 1 1718 0
 1930 0106 0120     		movs	r0, #1
 1931              	.LVL282:
 1932 0108 7047     		bx	lr
 1933              	.LVL283:
 1934              	.L181:
 1935 010a 0120     		movs	r0, #1
 1936              	.LVL284:
 1937 010c 7047     		bx	lr
 1938              	.LVL285:
 1939              	.L182:
1725:TP2824/TP2802.c **** 		break;
 1940              		.loc 1 1725 0
 1941 010e 0120     		movs	r0, #1
 1942              	.LVL286:
 1943 0110 7047     		bx	lr
 1944              	.L187:
 1945 0112 00BF     		.align	2
 1946              	.L186:
 1947 0114 00000000 		.word	CURRENT_CH
 1948              		.cfi_endproc
 1949              	.LFE84:
 1951              		.section	.text.Det_HLock,"ax",%progbits
 1952              		.align	1
 1953              		.global	Det_HLock
 1954              		.syntax unified
 1955              		.thumb
 1956              		.thumb_func
 1957              		.fpu softvfp
 1959              	Det_HLock:
 1960              	.LFB86:
1748:TP2824/TP2802.c **** 
1749:TP2824/TP2802.c **** void EQ_Detect()
1750:TP2824/TP2802.c **** {
1751:TP2824/TP2802.c ****     //tByte tmpval;
1752:TP2824/TP2802.c ****     tByte cvstd,status,i;
1753:TP2824/TP2802.c ****     tByte gain, tmp, fmt/*, tmpab*/;
1754:TP2824/TP2802.c **** 	
1755:TP2824/TP2802.c ****     for(i = 0; i < CH_PER_CHIP; i++)//scan four inputs:
ARM GAS  /tmp/ccnKW75d.s 			page 70


1756:TP2824/TP2802.c ****     {
1757:TP2824/TP2802.c **** 	//	if((INPUT_VIDEO_CHECK(i))&&(BOOT_ISSUE==ON))
1758:TP2824/TP2802.c ****           //      continue;
1759:TP2824/TP2802.c **** 
1760:TP2824/TP2802.c **** 		
1761:TP2824/TP2802.c ****         SetRegPage(i);
1762:TP2824/TP2802.c ****         status = tp28xx_byte_read(0x01);
1763:TP2824/TP2802.c **** 
1764:TP2824/TP2802.c ****         //state machine for video checking
1765:TP2824/TP2802.c ****         if(status & FLAG_LOSS)
1766:TP2824/TP2802.c ****         {
1767:TP2824/TP2802.c **** 	
1768:TP2824/TP2802.c **** 		
1769:TP2824/TP2802.c ****             if(VIDEO_UNPLUG == state[i])
1770:TP2824/TP2802.c ****             {
1771:TP2824/TP2802.c ****                 if(count[i] < MAX_COUNT) count[i]++;
1772:TP2824/TP2802.c ****                 continue;
1773:TP2824/TP2802.c ****             }
1774:TP2824/TP2802.c ****             else
1775:TP2824/TP2802.c ****             {
1776:TP2824/TP2802.c **** 
1777:TP2824/TP2802.c **** 
1778:TP2824/TP2802.c **** 				 if(SelectInputMode==_AHD_Input)
1779:TP2824/TP2802.c **** 				 	{
1780:TP2824/TP2802.c **** 					 Set_Video_Loss_OSD(1,ON);	 
1781:TP2824/TP2802.c **** 					VXISI2CWrite( 0x32, 0x00 );
1782:TP2824/TP2802.c **** 				 	}
1783:TP2824/TP2802.c **** 
1784:TP2824/TP2802.c **** 				
1785:TP2824/TP2802.c **** 				 
1786:TP2824/TP2802.c **** 				 Init_TP280x_RegSet();
1787:TP2824/TP2802.c **** 
1788:TP2824/TP2802.c **** 				 if(SelectInputMode==_AHD_Input)
1789:TP2824/TP2802.c **** 				 	{
1790:TP2824/TP2802.c **** 
1791:TP2824/TP2802.c **** 				  HS_Select_Win(1);
1792:TP2824/TP2802.c **** 				 	}
1793:TP2824/TP2802.c **** 			#if 0
1794:TP2824/TP2802.c ****                  state[i] = VIDEO_UNPLUG;
1795:TP2824/TP2802.c ****                 count[i] = 0;
1796:TP2824/TP2802.c ****                 mode[i] = NoDet;
1797:TP2824/TP2802.c ****                 TP28xx_reset_default(chip, i);
1798:TP2824/TP2802.c ****                 printf("video loss ch%02x \r\n", (tWord)i);                
1799:TP2824/TP2802.c ****               	VS4210_Rx_NoSignal(1/*i*/) ; //chunyu
1800:TP2824/TP2802.c **** 		TP_InputMode=7;
1801:TP2824/TP2802.c **** 		    newInRes[0] = _OSD_No_Signal; 
1802:TP2824/TP2802.c **** 				
1803:TP2824/TP2802.c **** 		if(SelectInputMode==_AHD_Input)
1804:TP2824/TP2802.c **** 		Set_Video_Loss_OSD(1,ON);	
1805:TP2824/TP2802.c **** 		//MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);
1806:TP2824/TP2802.c **** 		//MCUTimerActiveTimerEvent(SEC(3), _SYSTEM_TIMER_EVENT_VIDEO_RESET);
1807:TP2824/TP2802.c **** 
1808:TP2824/TP2802.c **** 		OSDSecCount = 0 ;
1809:TP2824/TP2802.c **** 		 OSDStateFlg = 1 ;	
1810:TP2824/TP2802.c **** 			#endif
1811:TP2824/TP2802.c ****             }
1812:TP2824/TP2802.c **** 			
ARM GAS  /tmp/ccnKW75d.s 			page 71


1813:TP2824/TP2802.c ****         }
1814:TP2824/TP2802.c ****         else
1815:TP2824/TP2802.c ****         {
1816:TP2824/TP2802.c ****             if(PAL == mode[i] || NTSC == mode[i])
1817:TP2824/TP2802.c ****                 flag_LOCKED = CVBS_FLAG_LOCKED;
1818:TP2824/TP2802.c ****             else
1819:TP2824/TP2802.c ****                 flag_LOCKED = TVI_FLAG_LOCKED;
1820:TP2824/TP2802.c **** 
1821:TP2824/TP2802.c ****             if( flag_LOCKED == (status & flag_LOCKED) ) //video locked
1822:TP2824/TP2802.c ****             {
1823:TP2824/TP2802.c ****                 if(VIDEO_LOCKED == state[i])
1824:TP2824/TP2802.c ****                 {
1825:TP2824/TP2802.c ****                     if(count[i] < MAX_COUNT) count[i]++;
1826:TP2824/TP2802.c **** 				#if 0
1827:TP2824/TP2802.c **** 				if(VideoSave[i]==_TRUE)
1828:TP2824/TP2802.c **** 				{
1829:TP2824/TP2802.c **** 			 		if((count[i]==1)&&((mode[i] == NTSC) ||( mode[i] == PAL)))
1830:TP2824/TP2802.c **** 			 		count[i]=20;//ryan@20200903
1831:TP2824/TP2802.c **** 			 		else if((count[i]==1)/*&&(ReadEEP(EEP_TP2824_STD0+(i*3))==HDA)*/)
1832:TP2824/TP2802.c **** 			 			{
1833:TP2824/TP2802.c **** 			 			std[i]=ReadEEP(EEP_TP2824_STD0+(i*3));
1834:TP2824/TP2802.c **** 						
1835:TP2824/TP2802.c **** 		 			 		if(std[i]==HDC)
1836:TP2824/TP2802.c **** 							{
1837:TP2824/TP2802.c **** 							Set_HDC(i);
1838:TP2824/TP2802.c **** 							printf("(Set_HDC)");
1839:TP2824/TP2802.c **** 							}
1840:TP2824/TP2802.c **** 							 if(std[i]==HDA)
1841:TP2824/TP2802.c **** 						 	{
1842:TP2824/TP2802.c **** 						 	Set_HDA(i);
1843:TP2824/TP2802.c **** 							printf("(Set_HDA)");
1844:TP2824/TP2802.c **** 						 	}
1845:TP2824/TP2802.c **** 							 
1846:TP2824/TP2802.c **** 						count[i]=20;
1847:TP2824/TP2802.c **** 			 			}
1848:TP2824/TP2802.c **** 					
1849:TP2824/TP2802.c **** 				}	
1850:TP2824/TP2802.c **** 				#endif
1851:TP2824/TP2802.c ****                 }
1852:TP2824/TP2802.c ****                 else if(VIDEO_UNPLUG == state[i])
1853:TP2824/TP2802.c ****                 {
1854:TP2824/TP2802.c ****                     state[i] = VIDEO_IN;
1855:TP2824/TP2802.c ****                     count[i] = 0;
1856:TP2824/TP2802.c ****                     printf("1video in ch%02x \r\n", (tWord)i);
1857:TP2824/TP2802.c ****                 }
1858:TP2824/TP2802.c ****                 else
1859:TP2824/TP2802.c ****                 {
1860:TP2824/TP2802.c ****                     state[i] = VIDEO_LOCKED;
1861:TP2824/TP2802.c ****                     count[i] = 0;
1862:TP2824/TP2802.c ****                     printf("video locked ch%02x \r\n", (tWord)i);
1863:TP2824/TP2802.c ****                 }
1864:TP2824/TP2802.c ****             }
1865:TP2824/TP2802.c ****             else  //video in but unlocked
1866:TP2824/TP2802.c ****             {
1867:TP2824/TP2802.c ****          
1868:TP2824/TP2802.c ****                 if(VIDEO_UNPLUG == state[i])
1869:TP2824/TP2802.c ****                 {
ARM GAS  /tmp/ccnKW75d.s 			page 72


1870:TP2824/TP2802.c ****                     state[i] = VIDEO_IN;
1871:TP2824/TP2802.c ****                     count[i] = 0;
1872:TP2824/TP2802.c ****                     printf("video in ch%02x \r\n", (tWord)i);
1873:TP2824/TP2802.c ****                 }
1874:TP2824/TP2802.c ****                 else if(VIDEO_LOCKED == state[i])
1875:TP2824/TP2802.c ****                 {
1876:TP2824/TP2802.c **** /*
1877:TP2824/TP2802.c **** 			if(Flisheye_VLOSS_Count[i]<100)
1878:TP2824/TP2802.c **** 			{
1879:TP2824/TP2802.c **** 			Flisheye_VLOSS_Count[i]++;
1880:TP2824/TP2802.c **** 			}
1881:TP2824/TP2802.c **** 		else
1882:TP2824/TP2802.c **** 			*/
1883:TP2824/TP2802.c **** 			{
1884:TP2824/TP2802.c ****                     state[i] = VIDEO_UNLOCK;
1885:TP2824/TP2802.c ****                     count[i] = 0;
1886:TP2824/TP2802.c ****                     printf("video unstable ch%02x \r\n", (tWord)i);
1887:TP2824/TP2802.c **** 			}		
1888:TP2824/TP2802.c ****                 }
1889:TP2824/TP2802.c ****                 else
1890:TP2824/TP2802.c ****                 {
1891:TP2824/TP2802.c ****                     if(count[i] < MAX_COUNT) count[i]++;
1892:TP2824/TP2802.c ****                     if(VIDEO_UNLOCK == state[i] && count[i] > 2)
1893:TP2824/TP2802.c ****                     {
1894:TP2824/TP2802.c ****                         state[i] = VIDEO_IN;
1895:TP2824/TP2802.c ****                         count[i] = 0;
1896:TP2824/TP2802.c ****                         TP28xx_reset_default(chip, i);
1897:TP2824/TP2802.c ****                         printf("video unlocked ch%02x \r\n", (tWord)i);                        
1898:TP2824/TP2802.c ****                         VS4210_Rx_NoSignal(i) ;//chunyu
1899:TP2824/TP2802.c ****                     }
1900:TP2824/TP2802.c ****                 }
1901:TP2824/TP2802.c **** 				
1902:TP2824/TP2802.c ****             }
1903:TP2824/TP2802.c **** 			
1904:TP2824/TP2802.c ****         }
1905:TP2824/TP2802.c **** 
1906:TP2824/TP2802.c ****         if( VIDEO_IN == state[i])
1907:TP2824/TP2802.c ****         {
1908:TP2824/TP2802.c ****             cvstd = tp28xx_byte_read(0x03);
1909:TP2824/TP2802.c ****             sywd = cvstd & 0x08;
1910:TP2824/TP2802.c ****             cvstd &= 0x07;
1911:TP2824/TP2802.c ****             fmt = mode[i];
1912:TP2824/TP2802.c ****             if(NTPAL == cvstd && flag_CVBS)
1913:TP2824/TP2802.c ****             {
1914:TP2824/TP2802.c ****                 //if(count[i] & 0x01)
1915:TP2824/TP2802.c ****                 if(status & 0x04)
1916:TP2824/TP2802.c ****                     fmt = PAL;
1917:TP2824/TP2802.c ****                 else
1918:TP2824/TP2802.c ****                     fmt = NTSC;
1919:TP2824/TP2802.c ****             }
1920:TP2824/TP2802.c ****             else if(cvstd == R720P30 )
1921:TP2824/TP2802.c ****             {
1922:TP2824/TP2802.c ****                 if( flag_MEGA && (count[i]&0x02) )// 3M auto detect test
1923:TP2824/TP2802.c ****                     fmt = R4M12;
1924:TP2824/TP2802.c ****                 else
1925:TP2824/TP2802.c ****                     fmt = R720P30V2;
1926:TP2824/TP2802.c ****             }
ARM GAS  /tmp/ccnKW75d.s 			page 73


1927:TP2824/TP2802.c ****             else if(cvstd == R720P25 )
1928:TP2824/TP2802.c ****             {
1929:TP2824/TP2802.c ****                 fmt = R720P25V2;
1930:TP2824/TP2802.c ****             }
1931:TP2824/TP2802.c ****             else if(cvstd == R1080P30 )
1932:TP2824/TP2802.c ****             {
1933:TP2824/TP2802.c ****                 if( flag_MEGA && (count[i]&0x02) )//TP2853C 3M auto detect test
1934:TP2824/TP2802.c ****                     fmt = R3M20;
1935:TP2824/TP2802.c ****                 else
1936:TP2824/TP2802.c ****                     fmt = R1080P30;
1937:TP2824/TP2802.c ****             }
1938:TP2824/TP2802.c ****             else if(cvstd == R720P60 )
1939:TP2824/TP2802.c ****             {
1940:TP2824/TP2802.c ****                 if( flag_MEGA && (count[i]&0x02) )//TP2853C 3M auto detect test
1941:TP2824/TP2802.c ****                     fmt = R4M30;
1942:TP2824/TP2802.c ****                 else
1943:TP2824/TP2802.c ****                     fmt = R720P60;
1944:TP2824/TP2802.c ****             }
1945:TP2824/TP2802.c ****             else if(cvstd < 4 )
1946:TP2824/TP2802.c ****             {
1947:TP2824/TP2802.c ****                 fmt = cvstd;
1948:TP2824/TP2802.c ****             }
1949:TP2824/TP2802.c ****             else
1950:TP2824/TP2802.c ****             {
1951:TP2824/TP2802.c ****                 if( flag_MEGA )//TP2853C 3M auto detect test
1952:TP2824/TP2802.c ****                 {
1953:TP2824/TP2802.c ****                     tp28xx_byte_write(0x2f, 0x09);
1954:TP2824/TP2802.c ****                     tmp = tp28xx_byte_read(0x04);
1955:TP2824/TP2802.c ****                     if((tmp > 0x48) && (tmp < 0x55))
1956:TP2824/TP2802.c ****                     {
1957:TP2824/TP2802.c ****                         fmt = R3M18;
1958:TP2824/TP2802.c ****                     }
1959:TP2824/TP2802.c ****                     else if((tmp > 0x55) && (tmp < 0x62))
1960:TP2824/TP2802.c ****                     {
1961:TP2824/TP2802.c ****                         fmt = R4M15;
1962:TP2824/TP2802.c ****                     }
1963:TP2824/TP2802.c ****                     else if((tmp > 0x70) && (tmp < 0x80))
1964:TP2824/TP2802.c ****                     {
1965:TP2824/TP2802.c ****                         fmt = R6M10;
1966:TP2824/TP2802.c ****                     }
1967:TP2824/TP2802.c ****                 }
1968:TP2824/TP2802.c ****             }
1969:TP2824/TP2802.c **** /*
1970:TP2824/TP2802.c **** 		if(VideoSave[i]==_TRUE)
1971:TP2824/TP2802.c **** 		{
1972:TP2824/TP2802.c **** 		printf("(B)");
1973:TP2824/TP2802.c **** 		Set_VidRes(i);      
1974:TP2824/TP2802.c **** 		}
1975:TP2824/TP2802.c **** 		else
1976:TP2824/TP2802.c **** 			*/
1977:TP2824/TP2802.c **** 		{
1978:TP2824/TP2802.c **** 		   	if( mode[i] != fmt )
1979:TP2824/TP2802.c **** 		            {
1980:TP2824/TP2802.c **** 		                mode[i] = fmt;
1981:TP2824/TP2802.c **** 		                printf("Set_VidResmode[%d] =%d\r\n",(int)i, (int)fmt);
1982:TP2824/TP2802.c **** 		                Set_VidRes(i);
1983:TP2824/TP2802.c **** 		            }
ARM GAS  /tmp/ccnKW75d.s 			page 74


1984:TP2824/TP2802.c **** 		}
1985:TP2824/TP2802.c ****         }
1986:TP2824/TP2802.c **** 
1987:TP2824/TP2802.c ****         if( VIDEO_LOCKED == state[i]) //check signal lock
1988:TP2824/TP2802.c ****         {
1989:TP2824/TP2802.c ****             if(0 == count[i])
1990:TP2824/TP2802.c ****             {
1991:TP2824/TP2802.c ****                 std[i] = TVI;
1992:TP2824/TP2802.c ****                 CurCH = i;
1993:TP2824/TP2802.c ****                 if( (R720P30V2 == mode[i]) || (R720P25V2 == mode[i]) )
1994:TP2824/TP2802.c ****                 {
1995:TP2824/TP2802.c ****                     if( 0x00 == (0x08 & tp28xx_byte_read(0x03)))
1996:TP2824/TP2802.c ****                     {
1997:TP2824/TP2802.c ****                         mode[i] &= 0xf7;
1998:TP2824/TP2802.c ****                         Set_VidRes(i);
1999:TP2824/TP2802.c ****                         //printf("TVI_Set_VidRes\r\n");
2000:TP2824/TP2802.c ****                     }
2001:TP2824/TP2802.c ****                 }
2002:TP2824/TP2802.c **** 
2003:TP2824/TP2802.c ****                 //tp28xx_byte_write(0xf6  , REG_F6[i]);
2004:TP2824/TP2802.c ****                 tp28xx_byte_write(0xf6 +i  , REG_F6[i]);  //chunyu
2005:TP2824/TP2802.c **** 
2006:TP2824/TP2802.c **** #if(OUTPUT == Bits16out)
2007:TP2824/TP2802.c ****                 if( TP2826 == chip )
2008:TP2824/TP2802.c ****                 {
2009:TP2824/TP2802.c ****                     tp28xx_byte_write(0xf8, REG_F7[i]);
2010:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfa, REG_FA[i]);
2011:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfb, REG_FA[i]);
2012:TP2824/TP2802.c ****                 }
2013:TP2824/TP2802.c ****                 else
2014:TP2824/TP2802.c ****                 {                    
2015:TP2824/TP2802.c ****                     tp28xx_byte_write(0xf7, REG_F7[i]);
2016:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfa, REG_FA[i]);
2017:TP2824/TP2802.c ****                     //printf("set output ch%02x \r\n", (tWord)CH[i]);
2018:TP2824/TP2802.c ****                 }
2019:TP2824/TP2802.c **** #else //BT656																				
2020:TP2824/TP2802.c **** 
2021:TP2824/TP2802.c ****                 tmp=tp28xx_byte_read(0xf5);
2022:TP2824/TP2802.c ****                 if( tmp &= SYS_MODE[i])
2023:TP2824/TP2802.c ****                 {
2024:TP2824/TP2802.c ****                     printf("//75.25M output\r\n") ;
2025:TP2824/TP2802.c **** 
2026:TP2824/TP2802.c ****                     if (i == 0)
2027:TP2824/TP2802.c ****                     {
2028:TP2824/TP2802.c ****                         tmpab = tp28xx_byte_read(0xfa) ;
2029:TP2824/TP2802.c ****                         tmpab = (tmpab & 0xF0) | 0x0A ;
2030:TP2824/TP2802.c ****                         tp28xx_byte_write(0xfa, tmpab);
2031:TP2824/TP2802.c ****                     }
2032:TP2824/TP2802.c ****                     else if (i == 1)
2033:TP2824/TP2802.c ****                     {
2034:TP2824/TP2802.c ****                         tmpab = tp28xx_byte_read(0xfa) ;
2035:TP2824/TP2802.c ****                         tmpab = (tmpab & 0x0F) | 0xA0 ;
2036:TP2824/TP2802.c ****                         tp28xx_byte_write(0xfa, tmpab);
2037:TP2824/TP2802.c ****                     }
2038:TP2824/TP2802.c **** 
2039:TP2824/TP2802.c ****                     if (i == 2)
2040:TP2824/TP2802.c ****                     {
ARM GAS  /tmp/ccnKW75d.s 			page 75


2041:TP2824/TP2802.c ****                         tmpab = tp28xx_byte_read(0xfb) ;
2042:TP2824/TP2802.c ****                         tmpab = (tmpab & 0xF0) | 0x0A ;
2043:TP2824/TP2802.c ****                         tp28xx_byte_write(0xfb, tmpab);
2044:TP2824/TP2802.c ****                     }
2045:TP2824/TP2802.c ****                     else if (i == 3)
2046:TP2824/TP2802.c ****                     {
2047:TP2824/TP2802.c ****                         tmpab = tp28xx_byte_read(0xfb) ;
2048:TP2824/TP2802.c ****                         tmpab = (tmpab & 0x0F) | 0xA0 ;
2049:TP2824/TP2802.c ****                         tp28xx_byte_write(0xfb, tmpab);
2050:TP2824/TP2802.c ****                     }
2051:TP2824/TP2802.c ****                 }
2052:TP2824/TP2802.c ****                 else
2053:TP2824/TP2802.c ****                 {
2054:TP2824/TP2802.c ****                     extern tByte half_scaler;
2055:TP2824/TP2802.c ****                     if(half_scaler) //down scaler output
2056:TP2824/TP2802.c ****                     {
2057:TP2824/TP2802.c ****                         tmp=tp28xx_byte_read(0x35);
2058:TP2824/TP2802.c ****                         tmp |= 0x40;
2059:TP2824/TP2802.c ****                         tp28xx_byte_write(0x35, tmp);                        
2060:TP2824/TP2802.c **** 
2061:TP2824/TP2802.c ****                         if (i == 0)
2062:TP2824/TP2802.c ****                         {
2063:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfa) ;
2064:TP2824/TP2802.c ****                             tmpab = (tmpab & 0xF0) | 0x0A ;
2065:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfa, tmpab);
2066:TP2824/TP2802.c ****                         }
2067:TP2824/TP2802.c ****                         else if (i == 1)
2068:TP2824/TP2802.c ****                         {
2069:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfa) ;
2070:TP2824/TP2802.c ****                             tmpab = (tmpab & 0x0F) | 0xA0 ;
2071:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfa, tmpab);
2072:TP2824/TP2802.c ****                         }
2073:TP2824/TP2802.c **** 
2074:TP2824/TP2802.c **** 
2075:TP2824/TP2802.c ****                         if (i == 2)
2076:TP2824/TP2802.c ****                         {
2077:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfb) ;
2078:TP2824/TP2802.c ****                             tmpab = (tmpab & 0xF0) | 0x0A ;
2079:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfb, tmpab);
2080:TP2824/TP2802.c ****                         }
2081:TP2824/TP2802.c ****                         else if (i == 3)
2082:TP2824/TP2802.c ****                         {
2083:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfb) ;
2084:TP2824/TP2802.c ****                             tmpab = (tmpab & 0x0F) | 0xA0 ;
2085:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfb, tmpab);
2086:TP2824/TP2802.c ****                         }
2087:TP2824/TP2802.c **** 
2088:TP2824/TP2802.c ****                     }
2089:TP2824/TP2802.c ****                     else
2090:TP2824/TP2802.c ****                     {
2091:TP2824/TP2802.c ****                         tmp=tp28xx_byte_read(0x35);
2092:TP2824/TP2802.c ****                         tmp &= 0xbf;
2093:TP2824/TP2802.c ****                         tp28xx_byte_write(0x35, tmp);
2094:TP2824/TP2802.c **** 
2095:TP2824/TP2802.c **** 
2096:TP2824/TP2802.c ****                         if (i == 0)
2097:TP2824/TP2802.c ****                         {
ARM GAS  /tmp/ccnKW75d.s 			page 76


2098:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfa) ;
2099:TP2824/TP2802.c ****                             tmpab = (tmpab & 0xF0) | 0x08 ;
2100:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfa, tmpab);
2101:TP2824/TP2802.c ****                         }
2102:TP2824/TP2802.c ****                         else if (i == 1)
2103:TP2824/TP2802.c ****                         {
2104:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfa) ;
2105:TP2824/TP2802.c ****                             tmpab = (tmpab & 0x0F) | 0x80 ;
2106:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfa, tmpab);
2107:TP2824/TP2802.c ****                         }
2108:TP2824/TP2802.c **** 
2109:TP2824/TP2802.c **** 
2110:TP2824/TP2802.c ****                         if (i == 2)
2111:TP2824/TP2802.c ****                         {
2112:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfb) ;
2113:TP2824/TP2802.c ****                             tmpab = (tmpab & 0xF0) | 0x08 ;
2114:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfb, tmpab);
2115:TP2824/TP2802.c ****                         }
2116:TP2824/TP2802.c ****                         else if (i == 3)
2117:TP2824/TP2802.c ****                         {
2118:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfb) ;
2119:TP2824/TP2802.c ****                             tmpab = (tmpab & 0x0F) | 0x80 ;
2120:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfb, tmpab);
2121:TP2824/TP2802.c ****                         }
2122:TP2824/TP2802.c ****                     }
2123:TP2824/TP2802.c ****                 }
2124:TP2824/TP2802.c **** #endif
2125:TP2824/TP2802.c ****                 if( CurRes != ManVidResRx)
2126:TP2824/TP2802.c ****                 {
2127:TP2824/TP2802.c ****                     CurRes = ManVidResRx;
2128:TP2824/TP2802.c ****                     //CreateMDIN340VideoInstance();  //chunyu
2129:TP2824/TP2802.c ****                     printf("ManVidResRx=0x%02x\r\n",ManVidResRx ) ;
2130:TP2824/TP2802.c **** 
2131:TP2824/TP2802.c ****                 }
2132:TP2824/TP2802.c ****             }
2133:TP2824/TP2802.c ****             else if(1 == count[i])
2134:TP2824/TP2802.c ****             {
2135:TP2824/TP2802.c ****                 if( chip > TP2823 )
2136:TP2824/TP2802.c ****                 {
2137:TP2824/TP2802.c ****                     tmp = tp28xx_byte_read(0x01);
2138:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
2139:TP2824/TP2802.c ****                     if(mode[i] == NTSC || mode[i] == PAL)
2140:TP2824/TP2802.c ****                              printf("CVBS  mode:%d\r\n", (tWord)mode[i]);
2141:TP2824/TP2802.c **** //                 if( 0x60 == (0x64 & tmp))
2142:TP2824/TP2802.c ****                     else if((0x60 == (0x64 & tmp)) &&
2143:TP2824/TP2802.c ****             			   (mode[i] != R720P30 && mode[i] != R720P25 && mode[i] != R720P30V2 && mode[i] != R
2144:TP2824/TP2802.c ****                     {
2145:TP2824/TP2802.c ****                         //if(Set_HDA(mode[i])) printf("turn to A ch%02x\r\n", (tWord)i);
2146:TP2824/TP2802.c ****                         if(Set_HDC(i))
2147:TP2824/TP2802.c ****                         {
2148:TP2824/TP2802.c ****                             std[i] = HDC;
2149:TP2824/TP2802.c ****                             printf("turn to C ch%02x\r\n", (tWord)i);
2150:TP2824/TP2802.c ****                         }
2151:TP2824/TP2802.c ****                     }
2152:TP2824/TP2802.c ****                 }
2153:TP2824/TP2802.c ****             }
2154:TP2824/TP2802.c ****             else if(2 == count[i])
ARM GAS  /tmp/ccnKW75d.s 			page 77


2155:TP2824/TP2802.c ****             {
2156:TP2824/TP2802.c ****                 if( chip > TP2823 )
2157:TP2824/TP2802.c ****                 {
2158:TP2824/TP2802.c ****                     tmp = tp28xx_byte_read(0x01);
2159:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
2160:TP2824/TP2802.c **** 			if(mode[i] == NTSC || mode[i] == PAL)
2161:TP2824/TP2802.c ****                              printf("CVBS  mode:%d\r\n", (tWord)mode[i]);
2162:TP2824/TP2802.c **** //                 if( 0x10 != (0x11 & tmp) && HDC == std[i])
2163:TP2824/TP2802.c **** 		      else if((0x10 != (0x11 & tmp) && HDC == std[i]) ||
2164:TP2824/TP2802.c **** 		                 (0x00 == (0x04 & tmp) && 
2165:TP2824/TP2802.c **** 		                 (mode[i] == R720P30 || mode[i] == R720P25 || mode[i] == R720P30V2 || mode[i] == 
2166:TP2824/TP2802.c ****                     {
2167:TP2824/TP2802.c ****                         if(Set_HDA(i))
2168:TP2824/TP2802.c ****                         {
2169:TP2824/TP2802.c ****                             std[i] = HDA;
2170:TP2824/TP2802.c ****                             printf("turn to A ch%02x\r\n", (tWord)i);
2171:TP2824/TP2802.c ****                         }
2172:TP2824/TP2802.c ****                     }
2173:TP2824/TP2802.c **** 
2174:TP2824/TP2802.c ****                 }
2175:TP2824/TP2802.c **** 
2176:TP2824/TP2802.c ****             }
2177:TP2824/TP2802.c ****             else if(3 == count[i])
2178:TP2824/TP2802.c ****             {
2179:TP2824/TP2802.c ****                 if( chip > TP2823 )
2180:TP2824/TP2802.c ****                 {
2181:TP2824/TP2802.c ****                     tmp = tp28xx_byte_read(0x01);
2182:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
2183:TP2824/TP2802.c **** 
2184:TP2824/TP2802.c ****                     if((mode[i] == R1080P30 || mode[i] == R1080P25)&& 0x00 == (0x04 & tmp))
2185:TP2824/TP2802.c ****                         printf("AHD 1080P30/P25  mode:%d\r\n", (tWord)mode[i]);
2186:TP2824/TP2802.c **** 		      else if((mode[i] == R1080P30 || mode[i] == R1080P25) && 0x04 == (0x04 & tmp) && std[i] == T
2187:TP2824/TP2802.c ****                         printf("TVI 1080P30/P25   mode:%d\r\n", (tWord)mode[i]);
2188:TP2824/TP2802.c **** 		      else if((mode[i] == R720P30 || mode[i] == R720P25 || mode[i] == R720P30V2 || mode[i] == R72
2189:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
2190:TP2824/TP2802.c ****                         printf("AHD 720P30/P25/P60/P50   mode:%d\r\n", (tWord)mode[i]);
2191:TP2824/TP2802.c **** 		      else if(mode[i] == NTSC || mode[i] == PAL)
2192:TP2824/TP2802.c ****                              printf("CVBS    mode:%d\r\n", (tWord)mode[i]);
2193:TP2824/TP2802.c **** //		      if( 0x00 != (0x01 & tmp))
2194:TP2824/TP2802.c **** 		      else if( 0x00 != (0x01 & tmp)) 
2195:TP2824/TP2802.c ****                     {
2196:TP2824/TP2802.c ****                       //  Set_VidRes(mode[i]); //chunyu
2197:TP2824/TP2802.c ****                         Set_VidRes(i); //is it right? ryan@20200904
2198:TP2824/TP2802.c ****                         printf("back to T ch%02x\r\n", (tWord)i); //chunyu
2199:TP2824/TP2802.c ****                     }
2200:TP2824/TP2802.c ****                 }
2201:TP2824/TP2802.c ****             }
2202:TP2824/TP2802.c ****             else if(count[i] < 7) //skip first 3 second
2203:TP2824/TP2802.c ****             {
2204:TP2824/TP2802.c ****                 egain[i][3] = egain[i][2];
2205:TP2824/TP2802.c ****                 egain[i][2] = egain[i][1];
2206:TP2824/TP2802.c ****                 egain[i][1] = egain[i][0];
2207:TP2824/TP2802.c **** 
2208:TP2824/TP2802.c ****                 gain = ReadGain();
2209:TP2824/TP2802.c ****                 egain[i][0] = gain;
2210:TP2824/TP2802.c ****             }
2211:TP2824/TP2802.c ****             else if( count[i] < EQ_COUNT)
ARM GAS  /tmp/ccnKW75d.s 			page 78


2212:TP2824/TP2802.c ****             {
2213:TP2824/TP2802.c ****                 egain[i][3] = egain[i][2];
2214:TP2824/TP2802.c ****                 egain[i][2] = egain[i][1];
2215:TP2824/TP2802.c ****                 egain[i][1] = egain[i][0];
2216:TP2824/TP2802.c **** 
2217:TP2824/TP2802.c ****                 gain = ReadGain();
2218:TP2824/TP2802.c ****                 egain[i][0] = gain;
2219:TP2824/TP2802.c **** 
2220:TP2824/TP2802.c ****                 if(abs(egain[i][3] - egain[i][0])< EQ_DIFF && abs(egain[i][2] - egain[i][0])< EQ_DI
2221:TP2824/TP2802.c ****                 {
2222:TP2824/TP2802.c ****                     count[i] = EQ_COUNT-1;
2223:TP2824/TP2802.c ****                 }
2224:TP2824/TP2802.c ****             }
2225:TP2824/TP2802.c ****             else if(EQ_COUNT == count[i])
2226:TP2824/TP2802.c ****             {
2227:TP2824/TP2802.c ****                 gain = ReadGain();
2228:TP2824/TP2802.c ****                 printf("Egain=0x%02x ch%02x,std=%d,mode=0x%02X\r\n", (tWord)gain, (tWord)i, (tWord)
2229:TP2824/TP2802.c **** 
2230:TP2824/TP2802.c ****                 if ((mode[i] == R1080P30 ) || (mode[i] == R1080P25 ))
2231:TP2824/TP2802.c ****                 {
2232:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1920X1080P ;
2233:TP2824/TP2802.c ****                 }
2234:TP2824/TP2802.c ****                 else if ((mode[i] == R720P50 ) || (mode[i] == R720P60 ))
2235:TP2824/TP2802.c ****                 {
2236:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
2237:TP2824/TP2802.c ****                 }
2238:TP2824/TP2802.c ****                 else if ((mode[i] == R720P25 ) || (mode[i] == R720P30 ))
2239:TP2824/TP2802.c ****                 {
2240:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
2241:TP2824/TP2802.c ****                 }
2242:TP2824/TP2802.c ****                 else if ((mode[i] == R720P30V2 ) || (mode[i] == R720P25V2 ))
2243:TP2824/TP2802.c ****                 {
2244:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
2245:TP2824/TP2802.c ****                 }
2246:TP2824/TP2802.c ****                 else if (mode[i] == NTSC )
2247:TP2824/TP2802.c ****                 {
2248:TP2824/TP2802.c ****                     newInRes[i] = _OSD_720X480I60 ;
2249:TP2824/TP2802.c ****                 }
2250:TP2824/TP2802.c ****                 else if (mode[i] == PAL )
2251:TP2824/TP2802.c ****                 {
2252:TP2824/TP2802.c ****                     newInRes[i] = _OSD_720X576I50 ;
2253:TP2824/TP2802.c ****                 }
2254:TP2824/TP2802.c ****                 else
2255:TP2824/TP2802.c ****                 {
2256:TP2824/TP2802.c ****                     newInRes[i] = _OSD_No_Signal ;
2257:TP2824/TP2802.c ****                 }
2258:TP2824/TP2802.c **** 
2259:TP2824/TP2802.c **** 				TP_InputMode=newInRes[i] ;
2260:TP2824/TP2802.c **** 				   if(SelectInputMode==1)
2261:TP2824/TP2802.c **** 					   {
2262:TP2824/TP2802.c **** 					   MCUTimerActiveTimerEvent(SEC(1), _SYSTEM_TIMER_EVENT_VIDEO_RESET);
2263:TP2824/TP2802.c **** 				   //MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);
2264:TP2824/TP2802.c **** 					   }
2265:TP2824/TP2802.c **** 
2266:TP2824/TP2802.c ****                 if (newInRes[i] != gbVXIS_InputMode[i] )
2267:TP2824/TP2802.c ****                 {
2268:TP2824/TP2802.c ****                  //   VS4210_SetInModeOutMode(i,newInRes[i] ,gbVXIS_OuputModeflg )  ;
ARM GAS  /tmp/ccnKW75d.s 			page 79


2269:TP2824/TP2802.c **** 
2270:TP2824/TP2802.c **** /*
2271:TP2824/TP2802.c **** 		//save tp2824 data
2272:TP2824/TP2802.c **** 			if( ReadEEP(EEP_TP2824_STD0+(i*3)+2)==0)
2273:TP2824/TP2802.c **** 			{
2274:TP2824/TP2802.c **** 			 WriteEEP(EEP_TP2824_STD0+(i*3),std[i]);
2275:TP2824/TP2802.c **** 			 WriteEEP(EEP_TP2824_STD0+(i*3)+1,mode[i]);		
2276:TP2824/TP2802.c **** 		    	  WriteEEP(EEP_TP2824_STD0+(i*3)+2,1);
2277:TP2824/TP2802.c **** 			  VideoSave[i]=1;
2278:TP2824/TP2802.c **** 
2279:TP2824/TP2802.c **** 			 printf("\r\n(WriteModeDataToEEPROM ch=%02x)",(WORD)i) ;
2280:TP2824/TP2802.c **** 			}
2281:TP2824/TP2802.c **** */
2282:TP2824/TP2802.c **** 			
2283:TP2824/TP2802.c ****         printf("VS4210_SetInModeOutMode(),i=%d,newInRes=%d,OuputModeflg=%d\r\n",(int)i ,(int)newInR
2284:TP2824/TP2802.c **** 
2285:TP2824/TP2802.c **** //                    tp28xx_byte_write(0xF6,0x00);
2286:TP2824/TP2802.c **** //
2287:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x40);
2288:TP2824/TP2802.c **** //                    printf("0x40=0x%02x\r\n",tmpval ) ;
2289:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x4d);
2290:TP2824/TP2802.c **** //                    printf("0x4D=0x%02x\r\n",tmpval ) ;
2291:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x4E);
2292:TP2824/TP2802.c **** //                    printf("0x4E=0x%02x\r\n",tmpval ) ;
2293:TP2824/TP2802.c **** //
2294:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x50);
2295:TP2824/TP2802.c **** //                    printf("0x50=0x%02x\r\n",tmpval ) ;
2296:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x51);
2297:TP2824/TP2802.c **** //                    printf("0x51=0x%02x\r\n",tmpval ) ;
2298:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x52);
2299:TP2824/TP2802.c **** //                    printf("0x52=0x%02x\r\n",tmpval ) ;
2300:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x53);
2301:TP2824/TP2802.c **** //                    printf("0x53=0x%02x\r\n",tmpval ) ;
2302:TP2824/TP2802.c **** //
2303:TP2824/TP2802.c **** //
2304:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xF6);
2305:TP2824/TP2802.c **** //                    printf("0xF6=0x%02x\r\n",tmpval ) ;
2306:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xF7);
2307:TP2824/TP2802.c **** //                    printf("0xF7=0x%02x\r\n",tmpval ) ;
2308:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xF8);
2309:TP2824/TP2802.c **** //                    printf("0xF8=0x%02x\r\n",tmpval ) ;
2310:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xF9);
2311:TP2824/TP2802.c **** //                    printf("0xF9=0x%02x\r\n",tmpval ) ;
2312:TP2824/TP2802.c **** //
2313:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xFA);
2314:TP2824/TP2802.c **** //                    printf("0xFA=0x%02x\r\n",tmpval ) ;
2315:TP2824/TP2802.c **** //
2316:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xFB);
2317:TP2824/TP2802.c **** //                    printf("0xFB=0x%02x\r\n",tmpval ) ;
2318:TP2824/TP2802.c **** 
2319:TP2824/TP2802.c ****                 }
2320:TP2824/TP2802.c **** 
2321:TP2824/TP2802.c ****                 if( TVI != std[i] )
2322:TP2824/TP2802.c ****                 {
2323:TP2824/TP2802.c ****                     tp28xx_byte_write(0x07, 0x80|(gain>>2));  // manual mode
2324:TP2824/TP2802.c ****                     if (std[i]== HDA )
2325:TP2824/TP2802.c ****                     {
ARM GAS  /tmp/ccnKW75d.s 			page 80


2326:TP2824/TP2802.c ****                         printf("AHD Mode\r\n");
2327:TP2824/TP2802.c ****                     }
2328:TP2824/TP2802.c ****                     else
2329:TP2824/TP2802.c ****                     {
2330:TP2824/TP2802.c ****                         printf("CVI Mode\r\n");
2331:TP2824/TP2802.c ****                     }
2332:TP2824/TP2802.c ****                 }
2333:TP2824/TP2802.c ****                 else //TVI
2334:TP2824/TP2802.c ****                 {
2335:TP2824/TP2802.c ****                     if( TP2833 == chip || TP2834 == chip)
2336:TP2824/TP2802.c ****                     {
2337:TP2824/TP2802.c ****                         if( mode[i] & FLAG_MEGA_MODE )
2338:TP2824/TP2802.c ****                         {
2339:TP2824/TP2802.c ****                             tp28xx_byte_write(0x07, 0x80|(gain/3));  // manual mode
2340:TP2824/TP2802.c ****                         }
2341:TP2824/TP2802.c ****                     }
2342:TP2824/TP2802.c **** 		      if(mode[i] == NTSC) //20200408 cvbs night no burst
2343:TP2824/TP2802.c **** 			  	printf("CVBS NTSC   mode\r\n");
2344:TP2824/TP2802.c **** 		      else if(mode[i] == PAL) //20200408 cvbs night no burst
2345:TP2824/TP2802.c **** 			  	printf("CVBS PAL   mode\r\n");
2346:TP2824/TP2802.c **** 		      else
2347:TP2824/TP2802.c ****                     printf("LINE=%d,TVI Mode\r\n",__LINE__ );
2348:TP2824/TP2802.c ****                     //gRxLoopFlg = 0 ;
2349:TP2824/TP2802.c ****                 }
2350:TP2824/TP2802.c ****             }
2351:TP2824/TP2802.c ****             else if(EQ_COUNT+1 == count[i])
2352:TP2824/TP2802.c ****             {
2353:TP2824/TP2802.c ****                 if( TVI != std[i] )
2354:TP2824/TP2802.c ****                 {
2355:TP2824/TP2802.c ****                     ManualAGC(i);
2356:TP2824/TP2802.c ****                     SetCGain(0x0c);
2357:TP2824/TP2802.c ****                 }
2358:TP2824/TP2802.c ****                 else //TVI
2359:TP2824/TP2802.c ****                 {
2360:TP2824/TP2802.c ****                     if( TP2833 == chip || TP2834 == chip)
2361:TP2824/TP2802.c ****                     {
2362:TP2824/TP2802.c ****                         if( mode[i] & FLAG_MEGA_MODE )
2363:TP2824/TP2802.c ****                         {
2364:TP2824/TP2802.c ****                             SetCGain(0x16);
2365:TP2824/TP2802.c ****                         }
2366:TP2824/TP2802.c ****                     }
2367:TP2824/TP2802.c ****                 }
2368:TP2824/TP2802.c ****             }
2369:TP2824/TP2802.c **** 	     else if(EQ_COUNT+2 == count[i])//cocrx
2370:TP2824/TP2802.c ****             {	
2371:TP2824/TP2802.c ****             		if(state[i] == VIDEO_LOCKED)
2372:TP2824/TP2802.c ****             		{
2373:TP2824/TP2802.c **** 	            		tcByte *ptr_TP2824C;
2374:TP2824/TP2802.c **** 				if( TVI == std[i] )
2375:TP2824/TP2802.c **** 				{
2376:TP2824/TP2802.c **** 					if(mode[i]==NTSC || mode[i]==PAL)
2377:TP2824/TP2802.c **** 					{
2378:TP2824/TP2802.c **** 						ptr_TP2824C=TP2824C_CVBS_PTZ_DataSet;
2379:TP2824/TP2802.c **** 					}
2380:TP2824/TP2802.c **** 					else
2381:TP2824/TP2802.c **** 					{
2382:TP2824/TP2802.c **** 						ptr_TP2824C=TP2824C_TVI_FHD_PTZ_DataSet;
ARM GAS  /tmp/ccnKW75d.s 			page 81


2383:TP2824/TP2802.c **** 					}
2384:TP2824/TP2802.c **** 					
2385:TP2824/TP2802.c **** 					I2CDeviceSet1( ptr_TP2824C );
2386:TP2824/TP2802.c **** 					
2387:TP2824/TP2802.c **** 					if(mode[i] == R1080P30 || mode[i] == R1080P25)
2388:TP2824/TP2802.c **** 					{
2389:TP2824/TP2802.c **** 						tp28xx_byte_write(0xc6, 0x19);
2390:TP2824/TP2802.c **** 					}
2391:TP2824/TP2802.c **** 					
2392:TP2824/TP2802.c **** 					tp28xx_byte_write(0x40, i);
2393:TP2824/TP2802.c **** 					
2394:TP2824/TP2802.c **** 					tp28xx_byte_write(0xbe, 0x80);
2395:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB6);
2396:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB5);
2397:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB4);
2398:TP2824/TP2802.c **** 
2399:TP2824/TP2802.c **** 				
2400:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x00);
2401:TP2824/TP2802.c **** 					delay(1);//5ms
2402:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x83);
2403:TP2824/TP2802.c **** 					
2404:TP2824/TP2802.c **** 					if(mode[i]==R1080P30 || mode[i]==R1080P25)
2405:TP2824/TP2802.c **** 					{
2406:TP2824/TP2802.c **** 						PtzTxChNum=i;
2407:TP2824/TP2802.c **** 						printf("EQdet %d\r\n",  PtzTxChNum);
2408:TP2824/TP2802.c **** 					}
2409:TP2824/TP2802.c **** 					
2410:TP2824/TP2802.c **** 				}
2411:TP2824/TP2802.c **** 
2412:TP2824/TP2802.c **** 				if( HDA == std[i] )
2413:TP2824/TP2802.c **** 				{
2414:TP2824/TP2802.c **** 					#if 1
2415:TP2824/TP2802.c **** 						#if 1
2416:TP2824/TP2802.c **** 						Init_COC_PTZOUT1();
2417:TP2824/TP2802.c **** 						//#else
2418:TP2824/TP2802.c **** 						ptr_TP2824C=TP2824C_AHD_FHD_PTZ_DataSet;
2419:TP2824/TP2802.c **** 						I2CDeviceSet1( ptr_TP2824C );
2420:TP2824/TP2802.c **** 					
2421:TP2824/TP2802.c **** 						tp28xx_byte_write(0x40, i);
2422:TP2824/TP2802.c **** 							tp28xx_byte_write(0x40,0x04);
2423:TP2824/TP2802.c **** 						tp28xx_byte_write(0xbe, 0x80);
2424:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB6);
2425:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB5);
2426:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB4);
2427:TP2824/TP2802.c **** 
2428:TP2824/TP2802.c **** 					
2429:TP2824/TP2802.c **** 						tp28xx_byte_write(0xa7, 0x24);
2430:TP2824/TP2802.c **** 						delay(1);//5ms
2431:TP2824/TP2802.c **** 						tp28xx_byte_write(0xa7, 0xA7);
2432:TP2824/TP2802.c **** 						#endif
2433:TP2824/TP2802.c **** 				
2434:TP2824/TP2802.c **** 					#else
2435:TP2824/TP2802.c **** 
2436:TP2824/TP2802.c **** 					TP2824_PTZ_init();
2437:TP2824/TP2802.c **** 					 TP2824C_RX_init(0, 0);
2438:TP2824/TP2802.c **** 					//TP2824_PTZ_mode(0,0);
2439:TP2824/TP2802.c **** 					TP2824C_PTZ_mode(0,0,0);
ARM GAS  /tmp/ccnKW75d.s 			page 82


2440:TP2824/TP2802.c **** 					
2441:TP2824/TP2802.c **** 					
2442:TP2824/TP2802.c **** 					#endif
2443:TP2824/TP2802.c **** 					
2444:TP2824/TP2802.c **** 					printf("\r\nAHD COC Ready CH=%d\r\n",  PtzTxChNum);
2445:TP2824/TP2802.c **** 				}
2446:TP2824/TP2802.c **** 
2447:TP2824/TP2802.c **** 				if( HDC == std[i] )
2448:TP2824/TP2802.c **** 				{
2449:TP2824/TP2802.c **** 					ptr_TP2824C=TP2824C_CVIHD_PTZ_DataSet;
2450:TP2824/TP2802.c **** 					I2CDeviceSet1( ptr_TP2824C );
2451:TP2824/TP2802.c **** 				
2452:TP2824/TP2802.c **** 					tp28xx_byte_write(0x40, i);
2453:TP2824/TP2802.c **** 					tp28xx_byte_write(0xbe, 0x80);
2454:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB6);
2455:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB5);
2456:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB4);
2457:TP2824/TP2802.c **** 
2458:TP2824/TP2802.c **** 				
2459:TP2824/TP2802.c **** 					tp28xx_byte_read(0xA4);
2460:TP2824/TP2802.c **** 					tp28xx_byte_read(0xA2);
2461:TP2824/TP2802.c **** 					tp28xx_byte_read(0xA3);
2462:TP2824/TP2802.c **** 					
2463:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x00);
2464:TP2824/TP2802.c **** 					delay(1);//5ms
2465:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x83);
2466:TP2824/TP2802.c **** 
2467:TP2824/TP2802.c **** 
2468:TP2824/TP2802.c **** 					
2469:TP2824/TP2802.c **** 				}
2470:TP2824/TP2802.c **** 
2471:TP2824/TP2802.c **** 			#if 0
2472:TP2824/TP2802.c **** 		if((std[i]==TVI)&&(mode[i]!=NTSC) &&( mode[i]!=PAL)&& (state[i]==VIDEO_LOCKED))
2473:TP2824/TP2802.c **** 			   {
2474:TP2824/TP2802.c **** 
2475:TP2824/TP2802.c **** 			/*
2476:TP2824/TP2802.c **** 				   
2477:TP2824/TP2802.c **** 		 	SetCOCCom(_COCOSD_BOX_Sel,i);  
2478:TP2824/TP2802.c **** 	 	 	SetCOCCom(_COCOSD_BOXONLINE,0); 
2479:TP2824/TP2802.c **** 			 Get_2824cIrq();
2480:TP2824/TP2802.c **** 
2481:TP2824/TP2802.c **** 			 msleep(50);
2482:TP2824/TP2802.c **** 			 
2483:TP2824/TP2802.c **** 			 SetCOCCom(_COCOSD_BOX_Channel_Sel,5); 
2484:TP2824/TP2802.c **** 			// COCSelectModeType=5;
2485:TP2824/TP2802.c **** 			 Get_2824cIrq();
2486:TP2824/TP2802.c **** 			msleep(50);
2487:TP2824/TP2802.c **** */		
2488:TP2824/TP2802.c **** 
2489:TP2824/TP2802.c **** 			 BOX_ISSUE=0;
2490:TP2824/TP2802.c **** 
2491:TP2824/TP2802.c **** 			 MCUTimerCancelTimerEvent( _SYSTEM_TIMER_EVENT_TVI_BOX_Set);		 
2492:TP2824/TP2802.c **** 			MCUTimerActiveTimerEvent(SEC(0.5), _SYSTEM_TIMER_EVENT_TVI_BOX_Set);
2493:TP2824/TP2802.c **** 			
2494:TP2824/TP2802.c **** 		
2495:TP2824/TP2802.c **** 			   }
2496:TP2824/TP2802.c **** 			#endif
ARM GAS  /tmp/ccnKW75d.s 			page 83


2497:TP2824/TP2802.c ****      			}
2498:TP2824/TP2802.c ****             }	
2499:TP2824/TP2802.c ****         }
2500:TP2824/TP2802.c ****     }
2501:TP2824/TP2802.c **** }
2502:TP2824/TP2802.c **** #if 0
2503:TP2824/TP2802.c **** void TVI_BOX_Set(void)
2504:TP2824/TP2802.c **** {
2505:TP2824/TP2802.c **** BYTE i;
2506:TP2824/TP2802.c **** 
2507:TP2824/TP2802.c **** 	//TriggerHandler(CheckTrigger());
2508:TP2824/TP2802.c **** 
2509:TP2824/TP2802.c **** 	for(i=0;i<4;i++)
2510:TP2824/TP2802.c **** 	{
2511:TP2824/TP2802.c **** 			
2512:TP2824/TP2802.c **** 					if((std[i]==TVI)&&(mode[i]!=NTSC) &&( mode[i]!=PAL)&& (state[i] == VIDEO_LOCKED))
2513:TP2824/TP2802.c **** 					   {
2514:TP2824/TP2802.c **** 					  
2515:TP2824/TP2802.c **** 				 	SetCOCCom(_COCOSD_BOX_Sel,i);  
2516:TP2824/TP2802.c **** 			 	 	SetCOCCom(_COCOSD_BOXONLINE,0); 
2517:TP2824/TP2802.c **** 					 Get_2824cIrq();
2518:TP2824/TP2802.c **** 								 
2519:TP2824/TP2802.c **** 					 SetCOCCom(_COCOSD_BOX_Channel_Sel,5); 
2520:TP2824/TP2802.c **** 					 COCSelectModeType[SelectModeType]=5;
2521:TP2824/TP2802.c **** 					 Get_2824cIrq();		 
2522:TP2824/TP2802.c **** 					
2523:TP2824/TP2802.c **** 						}
2524:TP2824/TP2802.c **** 		
2525:TP2824/TP2802.c **** 	}
2526:TP2824/TP2802.c **** }
2527:TP2824/TP2802.c **** #endif
2528:TP2824/TP2802.c **** tByte Det_HLock()
2529:TP2824/TP2802.c **** {
 1961              		.loc 1 2529 0
 1962              		.cfi_startproc
 1963              		@ args = 0, pretend = 0, frame = 0
 1964              		@ frame_needed = 0, uses_anonymous_args = 0
 1965 0000 08B5     		push	{r3, lr}
 1966              	.LCFI16:
 1967              		.cfi_def_cfa_offset 8
 1968              		.cfi_offset 3, -8
 1969              		.cfi_offset 14, -4
2530:TP2824/TP2802.c ****     tByte Reg01;
2531:TP2824/TP2802.c ****     tByte HLOCK;
2532:TP2824/TP2802.c **** 
2533:TP2824/TP2802.c ****     Reg01 = tp28xx_byte_read(0x01);
 1970              		.loc 1 2533 0
 1971 0002 0120     		movs	r0, #1
 1972 0004 FFF7FEFF 		bl	tp28xx_byte_read
 1973              	.LVL287:
2534:TP2824/TP2802.c ****     HLOCK = (Reg01>>5)&0x01;
2535:TP2824/TP2802.c **** 
2536:TP2824/TP2802.c ****     if(HLOCK==1)
 1974              		.loc 1 2536 0
 1975 0008 10F0200F 		tst	r0, #32
 1976 000c 01D1     		bne	.L192
2537:TP2824/TP2802.c ****         return TRUE;
ARM GAS  /tmp/ccnKW75d.s 			page 84


2538:TP2824/TP2802.c ****     else
2539:TP2824/TP2802.c ****         return FALSE;
 1977              		.loc 1 2539 0
 1978 000e 0020     		movs	r0, #0
 1979              	.LVL288:
 1980              	.L189:
2540:TP2824/TP2802.c **** }
 1981              		.loc 1 2540 0
 1982 0010 08BD     		pop	{r3, pc}
 1983              	.LVL289:
 1984              	.L192:
2537:TP2824/TP2802.c ****         return TRUE;
 1985              		.loc 1 2537 0
 1986 0012 0120     		movs	r0, #1
 1987              	.LVL290:
 1988 0014 FCE7     		b	.L189
 1989              		.cfi_endproc
 1990              	.LFE86:
 1992              		.section	.text.Set_ResWithAutoDet,"ax",%progbits
 1993              		.align	1
 1994              		.global	Set_ResWithAutoDet
 1995              		.syntax unified
 1996              		.thumb
 1997              		.thumb_func
 1998              		.fpu softvfp
 2000              	Set_ResWithAutoDet:
 2001              	.LFB87:
2541:TP2824/TP2802.c **** 
2542:TP2824/TP2802.c **** tByte Set_ResWithAutoDet(tByte ch)
2543:TP2824/TP2802.c **** {
 2002              		.loc 1 2543 0
 2003              		.cfi_startproc
 2004              		@ args = 0, pretend = 0, frame = 0
 2005              		@ frame_needed = 0, uses_anonymous_args = 0
 2006              	.LVL291:
 2007 0000 38B5     		push	{r3, r4, r5, lr}
 2008              	.LCFI17:
 2009              		.cfi_def_cfa_offset 16
 2010              		.cfi_offset 3, -16
 2011              		.cfi_offset 4, -12
 2012              		.cfi_offset 5, -8
 2013              		.cfi_offset 14, -4
 2014 0002 0546     		mov	r5, r0
 2015              	.LVL292:
2544:TP2824/TP2802.c ****     tByte VidRes = R1080P30 ;
2545:TP2824/TP2802.c ****     tByte cnt=5;
2546:TP2824/TP2802.c ****     SetRegPage(ch);
 2016              		.loc 1 2546 0
 2017 0004 FFF7FEFF 		bl	SetRegPage
 2018              	.LVL293:
2545:TP2824/TP2802.c ****     SetRegPage(ch);
 2019              		.loc 1 2545 0
 2020 0008 0522     		movs	r2, #5
2547:TP2824/TP2802.c ****     //	printf("\r\nReg40=%02x, Reg01=%02x",(tWord)tp28xx_byte_read(TVII2CAddress,0x40),(tWord)tp28x
2548:TP2824/TP2802.c ****     while(cnt--)
 2021              		.loc 1 2548 0
 2022 000a 00E0     		b	.L194
ARM GAS  /tmp/ccnKW75d.s 			page 85


 2023              	.LVL294:
 2024              	.L195:
2543:TP2824/TP2802.c ****     tByte VidRes = R1080P30 ;
 2025              		.loc 1 2543 0
 2026 000c 2246     		mov	r2, r4
 2027              	.LVL295:
 2028              	.L194:
 2029              		.loc 1 2548 0
 2030 000e 531E     		subs	r3, r2, #1
 2031 0010 DCB2     		uxtb	r4, r3
 2032              	.LVL296:
 2033 0012 8AB1     		cbz	r2, .L200
2549:TP2824/TP2802.c ****     {
2550:TP2824/TP2802.c ****         if(!Det_VideoLoss(ch))
 2034              		.loc 1 2550 0
 2035 0014 2846     		mov	r0, r5
 2036 0016 FFF7FEFF 		bl	Det_VideoLoss
 2037              	.LVL297:
 2038 001a 0028     		cmp	r0, #0
 2039 001c F6D1     		bne	.L195
2551:TP2824/TP2802.c ****         {
2552:TP2824/TP2802.c ****             //for(VidRes=R720P60; VidRes<=R720P25; VidRes++)
2553:TP2824/TP2802.c **** 			//{
2554:TP2824/TP2802.c ****                 Set_VidRes(ch);
 2040              		.loc 1 2554 0
 2041 001e 2846     		mov	r0, r5
 2042 0020 FFF7FEFF 		bl	Set_VidRes
 2043              	.LVL298:
2555:TP2824/TP2802.c ****                 //printf("\r\nVidRes=%02x, Reg01=%02x, Reg03=%02x",(tWord)VidRes,(tWord)tp28xx_byte
2556:TP2824/TP2802.c ****                 if((Det_HLock()== TRUE)&&(Det_VidRes()==VidRes))
 2044              		.loc 1 2556 0
 2045 0024 FFF7FEFF 		bl	Det_HLock
 2046              	.LVL299:
 2047 0028 0128     		cmp	r0, #1
 2048 002a EFD1     		bne	.L195
 2049              		.loc 1 2556 0 is_stmt 0 discriminator 1
 2050 002c FFF7FEFF 		bl	Det_VidRes
 2051              	.LVL300:
 2052 0030 0228     		cmp	r0, #2
 2053 0032 EBD1     		bne	.L195
2557:TP2824/TP2802.c ****                     return TRUE;
 2054              		.loc 1 2557 0 is_stmt 1
 2055 0034 0120     		movs	r0, #1
 2056 0036 03E0     		b	.L196
 2057              	.L200:
2558:TP2824/TP2802.c **** 			//}
2559:TP2824/TP2802.c ****         }
2560:TP2824/TP2802.c ****     }
2561:TP2824/TP2802.c ****     printf("H/V is not locked\r\n");
 2058              		.loc 1 2561 0
 2059 0038 0248     		ldr	r0, .L201
 2060 003a FFF7FEFF 		bl	puts
 2061              	.LVL301:
2562:TP2824/TP2802.c ****     return FALSE;
 2062              		.loc 1 2562 0
 2063 003e 0020     		movs	r0, #0
 2064              	.L196:
ARM GAS  /tmp/ccnKW75d.s 			page 86


2563:TP2824/TP2802.c **** }
 2065              		.loc 1 2563 0
 2066 0040 38BD     		pop	{r3, r4, r5, pc}
 2067              	.LVL302:
 2068              	.L202:
 2069 0042 00BF     		.align	2
 2070              	.L201:
 2071 0044 00000000 		.word	.LC25
 2072              		.cfi_endproc
 2073              	.LFE87:
 2075              		.section	.text.Scan_Channels,"ax",%progbits
 2076              		.align	1
 2077              		.global	Scan_Channels
 2078              		.syntax unified
 2079              		.thumb
 2080              		.thumb_func
 2081              		.fpu softvfp
 2083              	Scan_Channels:
 2084              	.LFB88:
2564:TP2824/TP2802.c **** 
2565:TP2824/TP2802.c **** 
2566:TP2824/TP2802.c **** tByte Scan_Channels()
2567:TP2824/TP2802.c **** {
 2085              		.loc 1 2567 0
 2086              		.cfi_startproc
 2087              		@ args = 0, pretend = 0, frame = 0
 2088              		@ frame_needed = 0, uses_anonymous_args = 0
 2089 0000 70B5     		push	{r4, r5, r6, lr}
 2090              	.LCFI18:
 2091              		.cfi_def_cfa_offset 16
 2092              		.cfi_offset 4, -16
 2093              		.cfi_offset 5, -12
 2094              		.cfi_offset 6, -8
 2095              		.cfi_offset 14, -4
 2096              	.LVL303:
2568:TP2824/TP2802.c ****     tByte ch;
2569:TP2824/TP2802.c ****     tByte Det_ch=0;
2570:TP2824/TP2802.c ****     tByte Sel_ch=0xff;
 2097              		.loc 1 2570 0
 2098 0002 FF26     		movs	r6, #255
2569:TP2824/TP2802.c ****     tByte Sel_ch=0xff;
 2099              		.loc 1 2569 0
 2100 0004 0025     		movs	r5, #0
2571:TP2824/TP2802.c **** 
2572:TP2824/TP2802.c ****     for(ch = CH1; ch<=CH4; ch++)
 2101              		.loc 1 2572 0
 2102 0006 2C46     		mov	r4, r5
 2103 0008 01E0     		b	.L204
 2104              	.LVL304:
 2105              	.L205:
 2106              		.loc 1 2572 0 is_stmt 0 discriminator 2
 2107 000a 0134     		adds	r4, r4, #1
 2108              	.LVL305:
 2109 000c E4B2     		uxtb	r4, r4
 2110              	.LVL306:
 2111              	.L204:
 2112              		.loc 1 2572 0 discriminator 1
ARM GAS  /tmp/ccnKW75d.s 			page 87


 2113 000e 032C     		cmp	r4, #3
 2114 0010 09D8     		bhi	.L209
2573:TP2824/TP2802.c ****     {
2574:TP2824/TP2802.c ****         if(Set_ResWithAutoDet(ch)&&!Det_ch)
 2115              		.loc 1 2574 0 is_stmt 1
 2116 0012 2046     		mov	r0, r4
 2117 0014 FFF7FEFF 		bl	Set_ResWithAutoDet
 2118              	.LVL307:
 2119 0018 0028     		cmp	r0, #0
 2120 001a F6D0     		beq	.L205
 2121              		.loc 1 2574 0 is_stmt 0 discriminator 1
 2122 001c 002D     		cmp	r5, #0
 2123 001e F4D1     		bne	.L205
2575:TP2824/TP2802.c ****         {
2576:TP2824/TP2802.c ****             //Sel_VD_Out(ch);
2577:TP2824/TP2802.c ****             Sel_ch = ch;
 2124              		.loc 1 2577 0 is_stmt 1
 2125 0020 2646     		mov	r6, r4
 2126              	.LVL308:
2578:TP2824/TP2802.c ****             Det_ch = 1;
 2127              		.loc 1 2578 0
 2128 0022 0125     		movs	r5, #1
 2129              	.LVL309:
 2130 0024 F1E7     		b	.L205
 2131              	.LVL310:
 2132              	.L209:
2579:TP2824/TP2802.c ****         }
2580:TP2824/TP2802.c ****     }
2581:TP2824/TP2802.c **** 
2582:TP2824/TP2802.c ****     return Sel_ch;
2583:TP2824/TP2802.c **** }
 2133              		.loc 1 2583 0
 2134 0026 3046     		mov	r0, r6
 2135 0028 70BD     		pop	{r4, r5, r6, pc}
 2136              		.cfi_endproc
 2137              	.LFE88:
 2139              		.section	.text.Set_PLL_StartUp,"ax",%progbits
 2140              		.align	1
 2141              		.global	Set_PLL_StartUp
 2142              		.syntax unified
 2143              		.thumb
 2144              		.thumb_func
 2145              		.fpu softvfp
 2147              	Set_PLL_StartUp:
 2148              	.LFB89:
2584:TP2824/TP2802.c **** 
2585:TP2824/TP2802.c **** void Set_PLL_StartUp()
2586:TP2824/TP2802.c **** {
 2149              		.loc 1 2586 0
 2150              		.cfi_startproc
 2151              		@ args = 0, pretend = 0, frame = 0
 2152              		@ frame_needed = 0, uses_anonymous_args = 0
 2153 0000 10B5     		push	{r4, lr}
 2154              	.LCFI19:
 2155              		.cfi_def_cfa_offset 8
 2156              		.cfi_offset 4, -8
 2157              		.cfi_offset 14, -4
ARM GAS  /tmp/ccnKW75d.s 			page 88


2587:TP2824/TP2802.c ****     tByte PLL_con;
2588:TP2824/TP2802.c ****     PLL_con = tp28xx_byte_read(0x44);
 2158              		.loc 1 2588 0
 2159 0002 4420     		movs	r0, #68
 2160 0004 FFF7FEFF 		bl	tp28xx_byte_read
 2161              	.LVL311:
 2162 0008 0446     		mov	r4, r0
 2163              	.LVL312:
2589:TP2824/TP2802.c ****     tp28xx_byte_write(0x44,(PLL_con|0x40));
 2164              		.loc 1 2589 0
 2165 000a 40F04001 		orr	r1, r0, #64
 2166 000e C9B2     		uxtb	r1, r1
 2167 0010 4420     		movs	r0, #68
 2168              	.LVL313:
 2169 0012 FFF7FEFF 		bl	tp28xx_byte_write
 2170              	.LVL314:
2590:TP2824/TP2802.c ****     tp28xx_byte_write(0x44,(PLL_con&0xbf));
 2171              		.loc 1 2590 0
 2172 0016 04F0BF01 		and	r1, r4, #191
 2173 001a 4420     		movs	r0, #68
 2174 001c FFF7FEFF 		bl	tp28xx_byte_write
 2175              	.LVL315:
2591:TP2824/TP2802.c **** 
2592:TP2824/TP2802.c **** }
 2176              		.loc 1 2592 0
 2177 0020 10BD     		pop	{r4, pc}
 2178              		.cfi_endproc
 2179              	.LFE89:
 2181              		.section	.text.Init_TP280x_RegSet,"ax",%progbits
 2182              		.align	1
 2183              		.global	Init_TP280x_RegSet
 2184              		.syntax unified
 2185              		.thumb
 2186              		.thumb_func
 2187              		.fpu softvfp
 2189              	Init_TP280x_RegSet:
 2190              	.LFB90:
2593:TP2824/TP2802.c **** #if 0
2594:TP2824/TP2802.c **** void Boot_Trigger_Function(BYTE ch)
2595:TP2824/TP2802.c **** {
2596:TP2824/TP2802.c **** 	
2597:TP2824/TP2802.c **** 		Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_std,ch);
2598:TP2824/TP2802.c **** 		 Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_output,ch);
2599:TP2824/TP2802.c **** 		 Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_COC,ch); 
2600:TP2824/TP2802.c **** 		// delay(100);//5ms
2601:TP2824/TP2802.c **** 
2602:TP2824/TP2802.c **** 			count[ch]=23;
2603:TP2824/TP2802.c **** 
2604:TP2824/TP2802.c **** 		 //	SetCOCCom(_COCOSD_BOX_Sel,ch);  
2605:TP2824/TP2802.c **** 	 	 //	SetCOCCom(_COCOSD_BOXONLINE,0); 
2606:TP2824/TP2802.c **** 		//	 Get_2824cIrq();
2607:TP2824/TP2802.c **** }
2608:TP2824/TP2802.c **** #endif
2609:TP2824/TP2802.c **** void Init_TP280x_RegSet()
2610:TP2824/TP2802.c **** {
 2191              		.loc 1 2610 0
 2192              		.cfi_startproc
ARM GAS  /tmp/ccnKW75d.s 			page 89


 2193              		@ args = 0, pretend = 0, frame = 0
 2194              		@ frame_needed = 0, uses_anonymous_args = 0
 2195 0000 38B5     		push	{r3, r4, r5, lr}
 2196              	.LCFI20:
 2197              		.cfi_def_cfa_offset 16
 2198              		.cfi_offset 3, -16
 2199              		.cfi_offset 4, -12
 2200              		.cfi_offset 5, -8
 2201              		.cfi_offset 14, -4
2611:TP2824/TP2802.c **** 
2612:TP2824/TP2802.c ****     tcByte *ptr_TP2802;
2613:TP2824/TP2802.c ****     tByte i/*,val*/;
2614:TP2824/TP2802.c **** 
2615:TP2824/TP2802.c ****     TVII2CAddress = 0x88;
 2202              		.loc 1 2615 0
 2203 0002 644B     		ldr	r3, .L238
 2204 0004 8822     		movs	r2, #136
 2205 0006 1A70     		strb	r2, [r3]
 2206              	.LVL316:
2616:TP2824/TP2802.c ****     //TVII2CAddress = 0x8A;
2617:TP2824/TP2802.c ****     //TVII2CAddress = 0x8C;
2618:TP2824/TP2802.c ****     //TVII2CAddress = 0x8E;
2619:TP2824/TP2802.c **** 
2620:TP2824/TP2802.c ****     for(i=0; i<4; i++)
 2207              		.loc 1 2620 0
 2208 0008 0024     		movs	r4, #0
 2209              	.LVL317:
 2210              	.L213:
 2211              		.loc 1 2620 0 is_stmt 0 discriminator 1
 2212 000a 032C     		cmp	r4, #3
 2213 000c 0DD8     		bhi	.L214
2621:TP2824/TP2802.c ****     {
2622:TP2824/TP2802.c ****         if(0x28 == tp28xx_byte_read(0xfe)) break;
 2214              		.loc 1 2622 0 is_stmt 1
 2215 000e FE20     		movs	r0, #254
 2216 0010 FFF7FEFF 		bl	tp28xx_byte_read
 2217              	.LVL318:
 2218 0014 2828     		cmp	r0, #40
 2219 0016 08D0     		beq	.L214
2623:TP2824/TP2802.c ****         TVII2CAddress++;
 2220              		.loc 1 2623 0 discriminator 2
 2221 0018 5E4A     		ldr	r2, .L238
 2222 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2223 001c 0133     		adds	r3, r3, #1
 2224 001e DBB2     		uxtb	r3, r3
2624:TP2824/TP2802.c ****         TVII2CAddress++;
 2225              		.loc 1 2624 0 discriminator 2
 2226 0020 0133     		adds	r3, r3, #1
 2227 0022 1370     		strb	r3, [r2]
2620:TP2824/TP2802.c ****     {
 2228              		.loc 1 2620 0 discriminator 2
 2229 0024 0134     		adds	r4, r4, #1
 2230              	.LVL319:
 2231 0026 E4B2     		uxtb	r4, r4
 2232              	.LVL320:
 2233 0028 EFE7     		b	.L213
 2234              	.L214:
ARM GAS  /tmp/ccnKW75d.s 			page 90


2625:TP2824/TP2802.c ****     }
2626:TP2824/TP2802.c **** 
2627:TP2824/TP2802.c ****     chip = tp28xx_byte_read(0xff);
 2235              		.loc 1 2627 0
 2236 002a FF20     		movs	r0, #255
 2237 002c FFF7FEFF 		bl	tp28xx_byte_read
 2238              	.LVL321:
 2239 0030 594C     		ldr	r4, .L238+4
 2240              	.LVL322:
 2241 0032 2070     		strb	r0, [r4]
2628:TP2824/TP2802.c **** 
2629:TP2824/TP2802.c ****     revision = tp28xx_byte_read(0xfd);
 2242              		.loc 1 2629 0
 2243 0034 FD20     		movs	r0, #253
 2244 0036 FFF7FEFF 		bl	tp28xx_byte_read
 2245              	.LVL323:
2630:TP2824/TP2802.c ****     revision &= 0x07;
 2246              		.loc 1 2630 0
 2247 003a 00F00702 		and	r2, r0, #7
 2248 003e 574B     		ldr	r3, .L238+8
 2249 0040 1A70     		strb	r2, [r3]
2631:TP2824/TP2802.c **** 
2632:TP2824/TP2802.c ****     printf("\r\nchip %02x revision %02x\r\n", (tWord)chip,(tWord)revision);
 2250              		.loc 1 2632 0
 2251 0042 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 2252 0044 5648     		ldr	r0, .L238+12
 2253 0046 FFF7FEFF 		bl	printf
 2254              	.LVL324:
2633:TP2824/TP2802.c ****     flag_CVBS = 0;
 2255              		.loc 1 2633 0
 2256 004a 0023     		movs	r3, #0
 2257 004c 554A     		ldr	r2, .L238+16
 2258 004e 1360     		str	r3, [r2]
2634:TP2824/TP2802.c ****     flag_AUDIO = 0;
 2259              		.loc 1 2634 0
 2260 0050 554A     		ldr	r2, .L238+20
 2261 0052 1360     		str	r3, [r2]
2635:TP2824/TP2802.c ****     flag_MEGA = 0;
 2262              		.loc 1 2635 0
 2263 0054 554A     		ldr	r2, .L238+24
 2264 0056 1360     		str	r3, [r2]
 2265              	.LVL325:
2636:TP2824/TP2802.c **** 	ptr_TP2802 = TP2824C_DataSet; //def  chunyu
2637:TP2824/TP2802.c ****     switch(chip)
 2266              		.loc 1 2637 0
 2267 0058 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2268 005a 023B     		subs	r3, r3, #2
 2269 005c 252B     		cmp	r3, #37
 2270 005e 70D8     		bhi	.L216
 2271 0060 DFE803F0 		tbb	[pc, r3]
 2272              	.L218:
 2273 0064 13       		.byte	(.L217-.L218)/2
 2274 0065 6F       		.byte	(.L216-.L218)/2
 2275 0066 13       		.byte	(.L217-.L218)/2
 2276 0067 6F       		.byte	(.L216-.L218)/2
 2277 0068 6F       		.byte	(.L216-.L218)/2
 2278 0069 6F       		.byte	(.L216-.L218)/2
ARM GAS  /tmp/ccnKW75d.s 			page 91


 2279 006a 6F       		.byte	(.L216-.L218)/2
 2280 006b 6F       		.byte	(.L216-.L218)/2
 2281 006c 6F       		.byte	(.L216-.L218)/2
 2282 006d 6F       		.byte	(.L216-.L218)/2
 2283 006e 6F       		.byte	(.L216-.L218)/2
 2284 006f 6F       		.byte	(.L216-.L218)/2
 2285 0070 6F       		.byte	(.L216-.L218)/2
 2286 0071 6F       		.byte	(.L216-.L218)/2
 2287 0072 6F       		.byte	(.L216-.L218)/2
 2288 0073 6F       		.byte	(.L216-.L218)/2
 2289 0074 6F       		.byte	(.L216-.L218)/2
 2290 0075 6F       		.byte	(.L216-.L218)/2
 2291 0076 6F       		.byte	(.L216-.L218)/2
 2292 0077 6F       		.byte	(.L216-.L218)/2
 2293 0078 6F       		.byte	(.L216-.L218)/2
 2294 0079 6F       		.byte	(.L216-.L218)/2
 2295 007a 6F       		.byte	(.L216-.L218)/2
 2296 007b 6F       		.byte	(.L216-.L218)/2
 2297 007c 6F       		.byte	(.L216-.L218)/2
 2298 007d 6F       		.byte	(.L216-.L218)/2
 2299 007e 6F       		.byte	(.L216-.L218)/2
 2300 007f 6F       		.byte	(.L216-.L218)/2
 2301 0080 6F       		.byte	(.L216-.L218)/2
 2302 0081 6F       		.byte	(.L216-.L218)/2
 2303 0082 6F       		.byte	(.L216-.L218)/2
 2304 0083 6F       		.byte	(.L216-.L218)/2
 2305 0084 13       		.byte	(.L217-.L218)/2
 2306 0085 34       		.byte	(.L219-.L218)/2
 2307 0086 44       		.byte	(.L220-.L218)/2
 2308 0087 6F       		.byte	(.L216-.L218)/2
 2309 0088 4B       		.byte	(.L221-.L218)/2
 2310 0089 5F       		.byte	(.L222-.L218)/2
 2311              		.p2align 1
 2312              	.L217:
2638:TP2824/TP2802.c ****     {
2639:TP2824/TP2802.c **** 
2640:TP2824/TP2802.c ****     case TP2802C:
2641:TP2824/TP2802.c ****     case TP2804:
2642:TP2824/TP2802.c ****     case TP2822:
2643:TP2824/TP2802.c ****         printf("EOL ID\r\n");
 2313              		.loc 1 2643 0
 2314 008a 4948     		ldr	r0, .L238+28
 2315 008c FFF7FEFF 		bl	puts
 2316              	.LVL326:
2636:TP2824/TP2802.c **** 	ptr_TP2802 = TP2824C_DataSet; //def  chunyu
 2317              		.loc 1 2636 0
 2318 0090 484C     		ldr	r4, .L238+32
 2319              	.LVL327:
 2320              	.L223:
2644:TP2824/TP2802.c ****         break;
2645:TP2824/TP2802.c **** 
2646:TP2824/TP2802.c ****     case TP2823:
2647:TP2824/TP2802.c ****         flag_CVBS = 1;
2648:TP2824/TP2802.c ****         flag_AUDIO = 1;
2649:TP2824/TP2802.c ****         if(0x01 == revision)
2650:TP2824/TP2802.c ****         {
2651:TP2824/TP2802.c ****             chip=TP2833;
ARM GAS  /tmp/ccnKW75d.s 			page 92


2652:TP2824/TP2802.c ****             ptr_TP2802 = TP2833_DataSet;
2653:TP2824/TP2802.c ****         }
2654:TP2824/TP2802.c ****         else
2655:TP2824/TP2802.c ****         {
2656:TP2824/TP2802.c ****             ptr_TP2802 = TP2823_DataSet;
2657:TP2824/TP2802.c ****         }
2658:TP2824/TP2802.c ****         break;
2659:TP2824/TP2802.c **** 
2660:TP2824/TP2802.c ****     case TP2834:
2661:TP2824/TP2802.c ****         flag_CVBS = 1;
2662:TP2824/TP2802.c ****         flag_AUDIO = 1;
2663:TP2824/TP2802.c ****         ptr_TP2802 = TP2834_DataSet;
2664:TP2824/TP2802.c ****         break;
2665:TP2824/TP2802.c **** 
2666:TP2824/TP2802.c ****     case TP2853C:
2667:TP2824/TP2802.c ****         flag_CVBS = 1;
2668:TP2824/TP2802.c ****         flag_AUDIO = 1;
2669:TP2824/TP2802.c **** 
2670:TP2824/TP2802.c ****         if(0x01 == revision)
2671:TP2824/TP2802.c ****         {
2672:TP2824/TP2802.c ****             chip=TP2826;
2673:TP2824/TP2802.c ****             //flag_MEGA = 1;
2674:TP2824/TP2802.c **** 			flag_MEGA = 0;  //chunyu 
2675:TP2824/TP2802.c ****             ptr_TP2802 = TP2826_DataSet;
2676:TP2824/TP2802.c ****         }
2677:TP2824/TP2802.c ****         else if(0x00 == revision)
2678:TP2824/TP2802.c ****         {
2679:TP2824/TP2802.c ****             flag_MEGA = 1;
2680:TP2824/TP2802.c ****             ptr_TP2802 = TP2853C_DataSet;
2681:TP2824/TP2802.c ****         }
2682:TP2824/TP2802.c ****         else
2683:TP2824/TP2802.c ****         {
2684:TP2824/TP2802.c ****             ptr_TP2802 = TP2853C_DataSet;
2685:TP2824/TP2802.c ****         }
2686:TP2824/TP2802.c ****         break;
2687:TP2824/TP2802.c **** 
2688:TP2824/TP2802.c ****     case TP2824C:
2689:TP2824/TP2802.c ****         flag_CVBS = 1;
2690:TP2824/TP2802.c ****         flag_AUDIO = 1;
2691:TP2824/TP2802.c **** 
2692:TP2824/TP2802.c ****         if(0x04 == revision)
2693:TP2824/TP2802.c ****         {
2694:TP2824/TP2802.c ****             //flag_MEGA = 1;
2695:TP2824/TP2802.c **** 			flag_MEGA = 0 ; //chunyu
2696:TP2824/TP2802.c ****             ptr_TP2802 = TP2824C_DataSet;
2697:TP2824/TP2802.c ****             printf("TP2824C test\r\n");
2698:TP2824/TP2802.c ****         }
2699:TP2824/TP2802.c ****         break;
2700:TP2824/TP2802.c **** 
2701:TP2824/TP2802.c ****     default:		
2702:TP2824/TP2802.c ****         printf("unknown ID\r\n");
2703:TP2824/TP2802.c ****         break;
2704:TP2824/TP2802.c ****     }
2705:TP2824/TP2802.c **** 
2706:TP2824/TP2802.c ****     Set_PLL_StartUp();
 2321              		.loc 1 2706 0
 2322 0092 FFF7FEFF 		bl	Set_PLL_StartUp
ARM GAS  /tmp/ccnKW75d.s 			page 93


 2323              	.LVL328:
2707:TP2824/TP2802.c **** 
2708:TP2824/TP2802.c ****     I2CDeviceSet1( ptr_TP2802 );
 2324              		.loc 1 2708 0
 2325 0096 2046     		mov	r0, r4
 2326 0098 FFF7FEFF 		bl	I2CDeviceSet1
 2327              	.LVL329:
2709:TP2824/TP2802.c **** 
2710:TP2824/TP2802.c ****     if(flag_AUDIO)	I2CDeviceSet1( TP2834_Audio_DataSet );
 2328              		.loc 1 2710 0
 2329 009c 424B     		ldr	r3, .L238+20
 2330 009e 1B68     		ldr	r3, [r3]
 2331 00a0 002B     		cmp	r3, #0
 2332 00a2 55D1     		bne	.L233
 2333              	.L225:
2711:TP2824/TP2802.c **** /*
2712:TP2824/TP2802.c ****     mode[CH1]= R1080P25;	//chunyu
2713:TP2824/TP2802.c ****     mode[CH2]= R1080P25;
2714:TP2824/TP2802.c ****     mode[CH3]= R1080P25;
2715:TP2824/TP2802.c ****     mode[CH4]= R1080P25;
2716:TP2824/TP2802.c **** 	
2717:TP2824/TP2802.c **** 
2718:TP2824/TP2802.c **** 	//mode[CH1]= R720P25;	
2719:TP2824/TP2802.c **** 	//mode[CH1]= R1080P25;	
2720:TP2824/TP2802.c ****    Set_VidRes(CH1);
2721:TP2824/TP2802.c **** */
2722:TP2824/TP2802.c **** //    Set_VidRes(CH2);
2723:TP2824/TP2802.c **** //    Set_VidRes(CH3);
2724:TP2824/TP2802.c **** //    Set_VidRes(CH4);
2725:TP2824/TP2802.c **** //	mode[CH3]= NoDet;	//chunyu
2726:TP2824/TP2802.c **** //	Set_VidRes(CH3);	
2727:TP2824/TP2802.c **** //msleep(2000);//ryan@20200622
2728:TP2824/TP2802.c **** 	
2729:TP2824/TP2802.c ****     //CurRes=RES1920X1080;
2730:TP2824/TP2802.c **** 	//CurRes=RES1280X720;
2731:TP2824/TP2802.c **** #if  0
2732:TP2824/TP2802.c **** 
2733:TP2824/TP2802.c **** 	CurRes=RES1920X1080;
2734:TP2824/TP2802.c **** 
2735:TP2824/TP2802.c **** 		val=CheckTrigger();
2736:TP2824/TP2802.c **** 
2737:TP2824/TP2802.c **** 		if(val)
2738:TP2824/TP2802.c **** 		{
2739:TP2824/TP2802.c **** 			TriggerHandler(CheckTrigger());
2740:TP2824/TP2802.c **** 
2741:TP2824/TP2802.c **** 			if((VideoSave[(TriggerStatus-1)] ==_TRUE))
2742:TP2824/TP2802.c **** 			{
2743:TP2824/TP2802.c **** 			Boot_Trigger_Function((TriggerStatus-1));
2744:TP2824/TP2802.c **** 
2745:TP2824/TP2802.c **** 				if(Flisheye_CAM[(TriggerStatus-1)]==TRUE)
2746:TP2824/TP2802.c **** 				{
2747:TP2824/TP2802.c **** 				TriggerMode=0;
2748:TP2824/TP2802.c **** 				TriggerHandler(CheckTrigger());
2749:TP2824/TP2802.c **** 				}
2750:TP2824/TP2802.c **** 			}
2751:TP2824/TP2802.c **** 			// if(PowerFlag==ON)///power on
2752:TP2824/TP2802.c **** 			BackLightON(); 
ARM GAS  /tmp/ccnKW75d.s 			page 94


2753:TP2824/TP2802.c **** 		}
2754:TP2824/TP2802.c **** 
2755:TP2824/TP2802.c **** 
2756:TP2824/TP2802.c ****   	for( i = 0; i < CH_PER_CHIP; i++)
2757:TP2824/TP2802.c ****   {
2758:TP2824/TP2802.c **** 
2759:TP2824/TP2802.c ****   		if(INPUT_VIDEO_CHECK(i)||(TriggerStatus==(i+1)))
2760:TP2824/TP2802.c **** 		{
2761:TP2824/TP2802.c ****         	continue;
2762:TP2824/TP2802.c **** 		}
2763:TP2824/TP2802.c **** 
2764:TP2824/TP2802.c **** 	  
2765:TP2824/TP2802.c **** 	if( VideoSave[i] ==_TRUE)
2766:TP2824/TP2802.c **** 	{
2767:TP2824/TP2802.c **** 	/*
2768:TP2824/TP2802.c **** 	  count[i] =0;
2769:TP2824/TP2802.c **** 	  state[i] =VIDEO_IN;//VIDEO_IN;//VIDEO_IN;//VIDEO_LOCKED;
2770:TP2824/TP2802.c **** //	  std[i] = 0x02;///ReadEEP(EEP_TP2824_STD0+(i*2));
2771:TP2824/TP2802.c **** //	  mode[i] = NTSC;///ReadEEP(EEP_TP2824_STD0+(i*2)+1);
2772:TP2824/TP2802.c **** 	  std[i] = ReadEEP(EEP_TP2824_STD0+(i*3));
2773:TP2824/TP2802.c **** 	  mode[i] = ReadEEP(EEP_TP2824_STD0+(i*3)+1);
2774:TP2824/TP2802.c **** 	  */
2775:TP2824/TP2802.c **** 	  Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_std,i);
2776:TP2824/TP2802.c **** 	 Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_output,i);
2777:TP2824/TP2802.c **** 
2778:TP2824/TP2802.c **** /*
2779:TP2824/TP2802.c **** 	if(std[i]==HDC)
2780:TP2824/TP2802.c **** 		{
2781:TP2824/TP2802.c **** 		Set_HDC(i);
2782:TP2824/TP2802.c **** 		printf("(Set_HDC)");
2783:TP2824/TP2802.c **** 		}
2784:TP2824/TP2802.c **** 	 if(std[i]==HDA)
2785:TP2824/TP2802.c **** 	 	{
2786:TP2824/TP2802.c **** 	 	Set_HDA(i);
2787:TP2824/TP2802.c **** 		printf("(Set_HDA)");
2788:TP2824/TP2802.c **** 	 	}
2789:TP2824/TP2802.c **** */
2790:TP2824/TP2802.c **** 	 // SetRegPage(i);
2791:TP2824/TP2802.c **** 	//  Set_VidRes(i);
2792:TP2824/TP2802.c **** 
2793:TP2824/TP2802.c ****   		}
2794:TP2824/TP2802.c **** 	else
2795:TP2824/TP2802.c **** 		{		
2796:TP2824/TP2802.c **** 		count[i] = 0;
2797:TP2824/TP2802.c **** 		state[i] = VIDEO_UNPLUG;
2798:TP2824/TP2802.c **** 		std[i] = TVI;
2799:TP2824/TP2802.c **** 		mode[i] = NoDet;///R1080P30/*NoDet*/;
2800:TP2824/TP2802.c **** 		//Set_VidRes(i);
2801:TP2824/TP2802.c **** 		// TP28xx_reset_default(chip, i);
2802:TP2824/TP2802.c **** 		}
2803:TP2824/TP2802.c **** 	 // newInRes[i] = _OSD_720X480P60 ;
2804:TP2824/TP2802.c **** 					
2805:TP2824/TP2802.c ****   }
2806:TP2824/TP2802.c **** 
2807:TP2824/TP2802.c ****  for( i = 0; i <CH_PER_CHIP; i++)
2808:TP2824/TP2802.c ****   {
2809:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccnKW75d.s 			page 95


2810:TP2824/TP2802.c ****   		if((INPUT_VIDEO_CHECK(i)==0))
2811:TP2824/TP2802.c **** 		{
2812:TP2824/TP2802.c ****         	continue;
2813:TP2824/TP2802.c **** 		}
2814:TP2824/TP2802.c ****   
2815:TP2824/TP2802.c **** 	if( VideoSave[i] ==_TRUE)
2816:TP2824/TP2802.c **** 	{
2817:TP2824/TP2802.c **** 	/*
2818:TP2824/TP2802.c **** 	  count[i] =0;
2819:TP2824/TP2802.c **** 	  state[i] =VIDEO_IN;//VIDEO_IN;//VIDEO_IN;//VIDEO_LOCKED;
2820:TP2824/TP2802.c **** //	  std[i] = 0x02;///ReadEEP(EEP_TP2824_STD0+(i*2));
2821:TP2824/TP2802.c **** //	  mode[i] = NTSC;///ReadEEP(EEP_TP2824_STD0+(i*2)+1);
2822:TP2824/TP2802.c **** 	  std[i] = ReadEEP(EEP_TP2824_STD0+(i*3));
2823:TP2824/TP2802.c **** 	  mode[i] = ReadEEP(EEP_TP2824_STD0+(i*3)+1);
2824:TP2824/TP2802.c **** 	  */
2825:TP2824/TP2802.c **** 	  Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_std,i);
2826:TP2824/TP2802.c **** 	 Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_output,i);
2827:TP2824/TP2802.c **** /*
2828:TP2824/TP2802.c **** 	if(std[i]==HDC)
2829:TP2824/TP2802.c **** 		{
2830:TP2824/TP2802.c **** 		Set_HDC(i);
2831:TP2824/TP2802.c **** 		printf("(Set_HDC)");
2832:TP2824/TP2802.c **** 		}
2833:TP2824/TP2802.c **** 	 if(std[i]==HDA)
2834:TP2824/TP2802.c **** 	 	{
2835:TP2824/TP2802.c **** 	 	Set_HDA(i);
2836:TP2824/TP2802.c **** 		printf("(Set_HDA)");
2837:TP2824/TP2802.c **** 	 	}
2838:TP2824/TP2802.c **** */
2839:TP2824/TP2802.c **** 	 // SetRegPage(i);
2840:TP2824/TP2802.c **** 	//  Set_VidRes(i);
2841:TP2824/TP2802.c **** 
2842:TP2824/TP2802.c ****   		}
2843:TP2824/TP2802.c **** 	else
2844:TP2824/TP2802.c **** 		{		
2845:TP2824/TP2802.c **** 		count[i] = 0;
2846:TP2824/TP2802.c **** 		state[i] = VIDEO_UNPLUG;
2847:TP2824/TP2802.c **** 		std[i] = TVI;
2848:TP2824/TP2802.c **** 		mode[i] = NoDet;///R1080P30/*NoDet*/;
2849:TP2824/TP2802.c **** 		//Set_VidRes(i);
2850:TP2824/TP2802.c **** 		// TP28xx_reset_default(chip, i);
2851:TP2824/TP2802.c **** 		}
2852:TP2824/TP2802.c **** 	 // newInRes[i] = _OSD_720X480P60 ;
2853:TP2824/TP2802.c ****   }
2854:TP2824/TP2802.c **** /*
2855:TP2824/TP2802.c ****    for( i = 0; i <CH_PER_CHIP; i++)
2856:TP2824/TP2802.c ****   {
2857:TP2824/TP2802.c **** 	if( VideoSave[i] ==_TRUE)
2858:TP2824/TP2802.c **** 	{
2859:TP2824/TP2802.c **** 	Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_output,i);
2860:TP2824/TP2802.c **** 	}
2861:TP2824/TP2802.c **** 
2862:TP2824/TP2802.c ****    }
2863:TP2824/TP2802.c ****    */
2864:TP2824/TP2802.c ****  
2865:TP2824/TP2802.c **** 
2866:TP2824/TP2802.c **** #else
ARM GAS  /tmp/ccnKW75d.s 			page 96


2867:TP2824/TP2802.c **** 
2868:TP2824/TP2802.c **** 		mode[CH1]= R1080P25;	//chunyu
 2334              		.loc 1 2868 0
 2335 00a4 444B     		ldr	r3, .L238+36
 2336 00a6 0322     		movs	r2, #3
 2337 00a8 1A70     		strb	r2, [r3]
2869:TP2824/TP2802.c **** 		mode[CH2]= R1080P25;
 2338              		.loc 1 2869 0
 2339 00aa 5A70     		strb	r2, [r3, #1]
2870:TP2824/TP2802.c **** 		mode[CH3]= R1080P25;
 2340              		.loc 1 2870 0
 2341 00ac 9A70     		strb	r2, [r3, #2]
2871:TP2824/TP2802.c **** 		mode[CH4]= R1080P25;
 2342              		.loc 1 2871 0
 2343 00ae DA70     		strb	r2, [r3, #3]
2872:TP2824/TP2802.c **** 		
2873:TP2824/TP2802.c **** 	
2874:TP2824/TP2802.c **** 		//mode[CH1]= R720P25;	
2875:TP2824/TP2802.c **** 		//mode[CH1]= R1080P25;	
2876:TP2824/TP2802.c **** 	  tp28xx_byte_write(0x40,0x04);
 2344              		.loc 1 2876 0
 2345 00b0 0421     		movs	r1, #4
 2346 00b2 4020     		movs	r0, #64
 2347 00b4 FFF7FEFF 		bl	tp28xx_byte_write
 2348              	.LVL330:
2877:TP2824/TP2802.c **** 	   Set_VidRes(CH1);
 2349              		.loc 1 2877 0
 2350 00b8 0020     		movs	r0, #0
 2351 00ba FFF7FEFF 		bl	Set_VidRes
 2352              	.LVL331:
2878:TP2824/TP2802.c **** //		  Set_VidRes(CH2);
2879:TP2824/TP2802.c **** //		  Set_VidRes(CH3);
2880:TP2824/TP2802.c **** //		  Set_VidRes(CH4);
2881:TP2824/TP2802.c **** 		
2882:TP2824/TP2802.c **** 		//msleep(2000);//ryan@20200622
2883:TP2824/TP2802.c **** 		
2884:TP2824/TP2802.c **** 		CurRes=RES1920X1080;
 2353              		.loc 1 2884 0
 2354 00be 3F4B     		ldr	r3, .L238+40
 2355 00c0 0122     		movs	r2, #1
 2356 00c2 1A70     		strb	r2, [r3]
 2357              	.LVL332:
2885:TP2824/TP2802.c **** 		//CurRes=RES1280X720;
2886:TP2824/TP2802.c **** 
2887:TP2824/TP2802.c **** 
2888:TP2824/TP2802.c ****     for( i = 0; i < CH_PER_CHIP; i++)
 2358              		.loc 1 2888 0
 2359 00c4 0024     		movs	r4, #0
 2360              	.LVL333:
 2361              	.L226:
 2362              		.loc 1 2888 0 is_stmt 0 discriminator 1
 2363 00c6 002C     		cmp	r4, #0
 2364 00c8 46D0     		beq	.L228
2889:TP2824/TP2802.c ****     {
2890:TP2824/TP2802.c ****         count[i] = 0;
2891:TP2824/TP2802.c ****         state[i] = VIDEO_UNPLUG;
2892:TP2824/TP2802.c ****         std[i] = TVI;
ARM GAS  /tmp/ccnKW75d.s 			page 97


2893:TP2824/TP2802.c ****         mode[i] = NoDet;
2894:TP2824/TP2802.c **** 
2895:TP2824/TP2802.c **** 
2896:TP2824/TP2802.c **** 	VS4210_Rx_NoSignal(1/*i*/) ; //chunyu
2897:TP2824/TP2802.c **** 	TP_InputMode=7;
2898:TP2824/TP2802.c **** 	newInRes[0] = _OSD_No_Signal; 
2899:TP2824/TP2802.c **** 			
2900:TP2824/TP2802.c **** 	if(SelectInputMode==_AHD_Input)
2901:TP2824/TP2802.c **** 	Set_Video_Loss_OSD(1,ON);	
2902:TP2824/TP2802.c ****     }
2903:TP2824/TP2802.c **** 
2904:TP2824/TP2802.c **** 
2905:TP2824/TP2802.c **** 	#endif
2906:TP2824/TP2802.c **** }
 2365              		.loc 1 2906 0 is_stmt 1
 2366 00ca 38BD     		pop	{r3, r4, r5, pc}
 2367              	.LVL334:
 2368              	.L219:
2647:TP2824/TP2802.c ****         flag_AUDIO = 1;
 2369              		.loc 1 2647 0
 2370 00cc 0123     		movs	r3, #1
 2371 00ce 354A     		ldr	r2, .L238+16
 2372 00d0 1360     		str	r3, [r2]
2648:TP2824/TP2802.c ****         if(0x01 == revision)
 2373              		.loc 1 2648 0
 2374 00d2 354A     		ldr	r2, .L238+20
 2375 00d4 1360     		str	r3, [r2]
2649:TP2824/TP2802.c ****         {
 2376              		.loc 1 2649 0
 2377 00d6 314B     		ldr	r3, .L238+8
 2378 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2379 00da 012B     		cmp	r3, #1
 2380 00dc 01D0     		beq	.L234
2656:TP2824/TP2802.c ****         }
 2381              		.loc 1 2656 0
 2382 00de 384C     		ldr	r4, .L238+44
 2383 00e0 D7E7     		b	.L223
 2384              	.L234:
2651:TP2824/TP2802.c ****             ptr_TP2802 = TP2833_DataSet;
 2385              		.loc 1 2651 0
 2386 00e2 2D4B     		ldr	r3, .L238+4
 2387 00e4 2522     		movs	r2, #37
 2388 00e6 1A70     		strb	r2, [r3]
 2389              	.LVL335:
2652:TP2824/TP2802.c ****         }
 2390              		.loc 1 2652 0
 2391 00e8 364C     		ldr	r4, .L238+48
 2392 00ea D2E7     		b	.L223
 2393              	.LVL336:
 2394              	.L220:
2661:TP2824/TP2802.c ****         flag_AUDIO = 1;
 2395              		.loc 1 2661 0
 2396 00ec 0123     		movs	r3, #1
 2397 00ee 2D4A     		ldr	r2, .L238+16
 2398 00f0 1360     		str	r3, [r2]
2662:TP2824/TP2802.c ****         ptr_TP2802 = TP2834_DataSet;
 2399              		.loc 1 2662 0
ARM GAS  /tmp/ccnKW75d.s 			page 98


 2400 00f2 2D4A     		ldr	r2, .L238+20
 2401 00f4 1360     		str	r3, [r2]
 2402              	.LVL337:
2663:TP2824/TP2802.c ****         break;
 2403              		.loc 1 2663 0
 2404 00f6 344C     		ldr	r4, .L238+52
2664:TP2824/TP2802.c **** 
 2405              		.loc 1 2664 0
 2406 00f8 CBE7     		b	.L223
 2407              	.LVL338:
 2408              	.L221:
2667:TP2824/TP2802.c ****         flag_AUDIO = 1;
 2409              		.loc 1 2667 0
 2410 00fa 0123     		movs	r3, #1
 2411 00fc 294A     		ldr	r2, .L238+16
 2412 00fe 1360     		str	r3, [r2]
2668:TP2824/TP2802.c **** 
 2413              		.loc 1 2668 0
 2414 0100 294A     		ldr	r2, .L238+20
 2415 0102 1360     		str	r3, [r2]
2670:TP2824/TP2802.c ****         {
 2416              		.loc 1 2670 0
 2417 0104 254B     		ldr	r3, .L238+8
 2418 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2419 0108 012B     		cmp	r3, #1
 2420 010a 05D0     		beq	.L235
2677:TP2824/TP2802.c ****         {
 2421              		.loc 1 2677 0
 2422 010c F3B9     		cbnz	r3, .L230
2679:TP2824/TP2802.c ****             ptr_TP2802 = TP2853C_DataSet;
 2423              		.loc 1 2679 0
 2424 010e 274B     		ldr	r3, .L238+24
 2425 0110 0122     		movs	r2, #1
 2426 0112 1A60     		str	r2, [r3]
 2427              	.LVL339:
2680:TP2824/TP2802.c ****         }
 2428              		.loc 1 2680 0
 2429 0114 2D4C     		ldr	r4, .L238+56
 2430 0116 BCE7     		b	.L223
 2431              	.LVL340:
 2432              	.L235:
2672:TP2824/TP2802.c ****             //flag_MEGA = 1;
 2433              		.loc 1 2672 0
 2434 0118 1F4B     		ldr	r3, .L238+4
 2435 011a 2F22     		movs	r2, #47
 2436 011c 1A70     		strb	r2, [r3]
 2437              	.LVL341:
2675:TP2824/TP2802.c ****         }
 2438              		.loc 1 2675 0
 2439 011e 2C4C     		ldr	r4, .L238+60
 2440 0120 B7E7     		b	.L223
 2441              	.LVL342:
 2442              	.L222:
2689:TP2824/TP2802.c ****         flag_AUDIO = 1;
 2443              		.loc 1 2689 0
 2444 0122 0123     		movs	r3, #1
 2445 0124 1F4A     		ldr	r2, .L238+16
ARM GAS  /tmp/ccnKW75d.s 			page 99


 2446 0126 1360     		str	r3, [r2]
2690:TP2824/TP2802.c **** 
 2447              		.loc 1 2690 0
 2448 0128 1F4A     		ldr	r2, .L238+20
 2449 012a 1360     		str	r3, [r2]
2692:TP2824/TP2802.c ****         {
 2450              		.loc 1 2692 0
 2451 012c 1B4B     		ldr	r3, .L238+8
 2452 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2453 0130 042B     		cmp	r3, #4
 2454 0132 01D0     		beq	.L236
2636:TP2824/TP2802.c ****     switch(chip)
 2455              		.loc 1 2636 0
 2456 0134 1F4C     		ldr	r4, .L238+32
 2457 0136 ACE7     		b	.L223
 2458              	.L236:
2697:TP2824/TP2802.c ****         }
 2459              		.loc 1 2697 0
 2460 0138 2648     		ldr	r0, .L238+64
 2461 013a FFF7FEFF 		bl	puts
 2462              	.LVL343:
2696:TP2824/TP2802.c ****             printf("TP2824C test\r\n");
 2463              		.loc 1 2696 0
 2464 013e 1D4C     		ldr	r4, .L238+32
 2465 0140 A7E7     		b	.L223
 2466              	.L216:
2702:TP2824/TP2802.c ****         break;
 2467              		.loc 1 2702 0
 2468 0142 2548     		ldr	r0, .L238+68
 2469 0144 FFF7FEFF 		bl	puts
 2470              	.LVL344:
2636:TP2824/TP2802.c ****     switch(chip)
 2471              		.loc 1 2636 0
 2472 0148 1A4C     		ldr	r4, .L238+32
2703:TP2824/TP2802.c ****     }
 2473              		.loc 1 2703 0
 2474 014a A2E7     		b	.L223
 2475              	.L230:
2684:TP2824/TP2802.c ****         }
 2476              		.loc 1 2684 0
 2477 014c 1F4C     		ldr	r4, .L238+56
 2478 014e A0E7     		b	.L223
 2479              	.LVL345:
 2480              	.L233:
2710:TP2824/TP2802.c **** /*
 2481              		.loc 1 2710 0 discriminator 1
 2482 0150 2248     		ldr	r0, .L238+72
 2483 0152 FFF7FEFF 		bl	I2CDeviceSet1
 2484              	.LVL346:
 2485 0156 A5E7     		b	.L225
 2486              	.LVL347:
 2487              	.L228:
2890:TP2824/TP2802.c ****         state[i] = VIDEO_UNPLUG;
 2488              		.loc 1 2890 0
 2489 0158 0023     		movs	r3, #0
 2490 015a 214A     		ldr	r2, .L238+76
 2491 015c 1355     		strb	r3, [r2, r4]
ARM GAS  /tmp/ccnKW75d.s 			page 100


2891:TP2824/TP2802.c ****         std[i] = TVI;
 2492              		.loc 1 2891 0
 2493 015e 214A     		ldr	r2, .L238+80
 2494 0160 1355     		strb	r3, [r2, r4]
2892:TP2824/TP2802.c ****         mode[i] = NoDet;
 2495              		.loc 1 2892 0
 2496 0162 214A     		ldr	r2, .L238+84
 2497 0164 1355     		strb	r3, [r2, r4]
2893:TP2824/TP2802.c **** 
 2498              		.loc 1 2893 0
 2499 0166 0725     		movs	r5, #7
 2500 0168 134B     		ldr	r3, .L238+36
 2501 016a 1D55     		strb	r5, [r3, r4]
2896:TP2824/TP2802.c **** 	TP_InputMode=7;
 2502              		.loc 1 2896 0
 2503 016c 0120     		movs	r0, #1
 2504 016e FFF7FEFF 		bl	VS4210_Rx_NoSignal
 2505              	.LVL348:
2897:TP2824/TP2802.c **** 	newInRes[0] = _OSD_No_Signal; 
 2506              		.loc 1 2897 0
 2507 0172 1E4B     		ldr	r3, .L238+88
 2508 0174 1D70     		strb	r5, [r3]
2898:TP2824/TP2802.c **** 			
 2509              		.loc 1 2898 0
 2510 0176 1E4B     		ldr	r3, .L238+92
 2511 0178 1422     		movs	r2, #20
 2512 017a 1A70     		strb	r2, [r3]
2900:TP2824/TP2802.c **** 	Set_Video_Loss_OSD(1,ON);	
 2513              		.loc 1 2900 0
 2514 017c 1D4B     		ldr	r3, .L238+96
 2515 017e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2516 0180 012B     		cmp	r3, #1
 2517 0182 02D0     		beq	.L237
 2518              	.L227:
2888:TP2824/TP2802.c ****     {
 2519              		.loc 1 2888 0 discriminator 2
 2520 0184 0134     		adds	r4, r4, #1
 2521              	.LVL349:
 2522 0186 E4B2     		uxtb	r4, r4
 2523              	.LVL350:
 2524 0188 9DE7     		b	.L226
 2525              	.L237:
2901:TP2824/TP2802.c ****     }
 2526              		.loc 1 2901 0
 2527 018a 0121     		movs	r1, #1
 2528 018c 0846     		mov	r0, r1
 2529 018e FFF7FEFF 		bl	Set_Video_Loss_OSD
 2530              	.LVL351:
 2531 0192 F7E7     		b	.L227
 2532              	.L239:
 2533              		.align	2
 2534              	.L238:
 2535 0194 00000000 		.word	TVII2CAddress
 2536 0198 00000000 		.word	chip
 2537 019c 00000000 		.word	revision
 2538 01a0 00000000 		.word	.LC26
 2539 01a4 00000000 		.word	flag_CVBS
ARM GAS  /tmp/ccnKW75d.s 			page 101


 2540 01a8 00000000 		.word	flag_AUDIO
 2541 01ac 00000000 		.word	flag_MEGA
 2542 01b0 1C000000 		.word	.LC27
 2543 01b4 00000000 		.word	.LANCHOR15
 2544 01b8 00000000 		.word	mode
 2545 01bc 00000000 		.word	CurRes
 2546 01c0 00000000 		.word	.LANCHOR16
 2547 01c4 00000000 		.word	.LANCHOR19
 2548 01c8 00000000 		.word	.LANCHOR17
 2549 01cc 00000000 		.word	.LANCHOR18
 2550 01d0 00000000 		.word	.LANCHOR20
 2551 01d4 24000000 		.word	.LC28
 2552 01d8 34000000 		.word	.LC29
 2553 01dc 00000000 		.word	.LANCHOR21
 2554 01e0 00000000 		.word	count
 2555 01e4 00000000 		.word	state
 2556 01e8 00000000 		.word	std
 2557 01ec 00000000 		.word	.LANCHOR22
 2558 01f0 00000000 		.word	.LANCHOR23
 2559 01f4 00000000 		.word	SelectInputMode
 2560              		.cfi_endproc
 2561              	.LFE90:
 2563              		.section	.text.ConvertData,"ax",%progbits
 2564              		.align	1
 2565              		.global	ConvertData
 2566              		.syntax unified
 2567              		.thumb
 2568              		.thumb_func
 2569              		.fpu softvfp
 2571              	ConvertData:
 2572              	.LFB91:
2907:TP2824/TP2802.c **** #if 0
2908:TP2824/TP2802.c **** void Init_TP280x_CHx_RegSet(BYTE Action,BYTE index)
2909:TP2824/TP2802.c **** {
2910:TP2824/TP2802.c **** 	
2911:TP2824/TP2802.c **** 		tByte /*cvstd,status,*/i=index;
2912:TP2824/TP2802.c **** 		 tByte gain, tmp, /*fmt,*/ tmpab;
2913:TP2824/TP2802.c **** 
2914:TP2824/TP2802.c **** 		  count[i] =20;
2915:TP2824/TP2802.c **** 		  state[i] =VIDEO_LOCKED;//VIDEO_IN;//VIDEO_IN;//VIDEO_LOCKED;
2916:TP2824/TP2802.c **** 	//	  std[i] = 0x02;///ReadEEP(EEP_TP2824_STD0+(i*2));
2917:TP2824/TP2802.c **** 	//	  mode[i] = NTSC;///ReadEEP(EEP_TP2824_STD0+(i*2)+1);
2918:TP2824/TP2802.c **** 		  std[i] = ReadEEP(EEP_TP2824_STD0+(i*3));
2919:TP2824/TP2802.c **** 		  mode[i] = ReadEEP(EEP_TP2824_STD0+(i*3)+1);
2920:TP2824/TP2802.c **** 
2921:TP2824/TP2802.c **** 		printf("Init_TP280x_CHx_RegSet in ch%02x \r\n", (tWord)i);
2922:TP2824/TP2802.c **** 		SetRegPage(i);
2923:TP2824/TP2802.c **** 
2924:TP2824/TP2802.c **** 		//Set_VidRes(i);      
2925:TP2824/TP2802.c **** 
2926:TP2824/TP2802.c **** 		//msleep(200) ;
2927:TP2824/TP2802.c **** switch(Action)
2928:TP2824/TP2802.c **** {
2929:TP2824/TP2802.c **** case Tp2802_Boot_Set_std:
2930:TP2824/TP2802.c **** 	if(std[i] ==TVI)
2931:TP2824/TP2802.c **** 	{
2932:TP2824/TP2802.c **** 					Set_VidRes(i); 
ARM GAS  /tmp/ccnKW75d.s 			page 102


2933:TP2824/TP2802.c **** 					//if((mode[i]==NTSC)||(mode[i]==PAL))
2934:TP2824/TP2802.c **** 					//msleep(300) ;
2935:TP2824/TP2802.c **** 					//std[i] = TVI;
2936:TP2824/TP2802.c **** 					CurCH = i;
2937:TP2824/TP2802.c **** 					if( (R720P30V2 == mode[i]) || (R720P25V2 == mode[i]) )
2938:TP2824/TP2802.c **** 					{
2939:TP2824/TP2802.c **** 						if( 0x00 == (0x08 & tp28xx_byte_read(0x03)))
2940:TP2824/TP2802.c **** 						{
2941:TP2824/TP2802.c **** 							mode[i] &= 0xf7;
2942:TP2824/TP2802.c **** 							Set_VidRes(i);
2943:TP2824/TP2802.c **** 							printf("(A)");
2944:TP2824/TP2802.c **** 							//printf("TVI_Set_VidRes\r\n");
2945:TP2824/TP2802.c **** 						}
2946:TP2824/TP2802.c **** 					}
2947:TP2824/TP2802.c **** 	
2948:TP2824/TP2802.c **** 					//tp28xx_byte_write(0xf6  , REG_F6[i]);
2949:TP2824/TP2802.c **** 					tp28xx_byte_write(0xf6 +i  , REG_F6[i]);  //chunyu
2950:TP2824/TP2802.c **** 	
2951:TP2824/TP2802.c **** #if(OUTPUT == Bits16out)
2952:TP2824/TP2802.c **** 					if( TP2826 == chip )
2953:TP2824/TP2802.c **** 					{
2954:TP2824/TP2802.c **** 						tp28xx_byte_write(0xf8, REG_F7[i]);
2955:TP2824/TP2802.c **** 						tp28xx_byte_write(0xfa, REG_FA[i]);
2956:TP2824/TP2802.c **** 						tp28xx_byte_write(0xfb, REG_FA[i]);
2957:TP2824/TP2802.c **** 					}
2958:TP2824/TP2802.c **** 					else
2959:TP2824/TP2802.c **** 					{					 
2960:TP2824/TP2802.c **** 						tp28xx_byte_write(0xf7, REG_F7[i]);
2961:TP2824/TP2802.c **** 						tp28xx_byte_write(0xfa, REG_FA[i]);
2962:TP2824/TP2802.c **** 						//printf("set output ch%02x \r\n", (tWord)CH[i]);
2963:TP2824/TP2802.c **** 					}
2964:TP2824/TP2802.c **** #else //BT656																				
2965:TP2824/TP2802.c **** 	
2966:TP2824/TP2802.c **** 					tmp=tp28xx_byte_read(0xf5);
2967:TP2824/TP2802.c **** 					if( tmp &= SYS_MODE[i])
2968:TP2824/TP2802.c **** 					{
2969:TP2824/TP2802.c **** 						printf("//75.25M output\r\n") ;
2970:TP2824/TP2802.c **** 	
2971:TP2824/TP2802.c **** 						if (i == 0)
2972:TP2824/TP2802.c **** 						{
2973:TP2824/TP2802.c **** 							tmpab = tp28xx_byte_read(0xfa) ;
2974:TP2824/TP2802.c **** 							tmpab = (tmpab & 0xF0) | 0x0A ;
2975:TP2824/TP2802.c **** 							tp28xx_byte_write(0xfa, tmpab);
2976:TP2824/TP2802.c **** 						}
2977:TP2824/TP2802.c **** 						else if (i == 1)
2978:TP2824/TP2802.c **** 						{
2979:TP2824/TP2802.c **** 							tmpab = tp28xx_byte_read(0xfa) ;
2980:TP2824/TP2802.c **** 							tmpab = (tmpab & 0x0F) | 0xA0 ;
2981:TP2824/TP2802.c **** 							tp28xx_byte_write(0xfa, tmpab);
2982:TP2824/TP2802.c **** 						}
2983:TP2824/TP2802.c **** 	
2984:TP2824/TP2802.c **** 						if (i == 2)
2985:TP2824/TP2802.c **** 						{
2986:TP2824/TP2802.c **** 							tmpab = tp28xx_byte_read(0xfb) ;
2987:TP2824/TP2802.c **** 							tmpab = (tmpab & 0xF0) | 0x0A ;
2988:TP2824/TP2802.c **** 							tp28xx_byte_write(0xfb, tmpab);
2989:TP2824/TP2802.c **** 						}
ARM GAS  /tmp/ccnKW75d.s 			page 103


2990:TP2824/TP2802.c **** 						else if (i == 3)
2991:TP2824/TP2802.c **** 						{
2992:TP2824/TP2802.c **** 							tmpab = tp28xx_byte_read(0xfb) ;
2993:TP2824/TP2802.c **** 							tmpab = (tmpab & 0x0F) | 0xA0 ;
2994:TP2824/TP2802.c **** 							tp28xx_byte_write(0xfb, tmpab);
2995:TP2824/TP2802.c **** 						}
2996:TP2824/TP2802.c **** 					}
2997:TP2824/TP2802.c **** 					else
2998:TP2824/TP2802.c **** 					{
2999:TP2824/TP2802.c **** 						extern tByte half_scaler;
3000:TP2824/TP2802.c **** 						if(half_scaler) //down scaler output
3001:TP2824/TP2802.c **** 						{
3002:TP2824/TP2802.c **** 							tmp=tp28xx_byte_read(0x35);
3003:TP2824/TP2802.c **** 							tmp |= 0x40;
3004:TP2824/TP2802.c **** 							tp28xx_byte_write(0x35, tmp);						 
3005:TP2824/TP2802.c **** 	
3006:TP2824/TP2802.c **** 							if (i == 0)
3007:TP2824/TP2802.c **** 							{
3008:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfa) ;
3009:TP2824/TP2802.c **** 								tmpab = (tmpab & 0xF0) | 0x0A ;
3010:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfa, tmpab);
3011:TP2824/TP2802.c **** 							}
3012:TP2824/TP2802.c **** 							else if (i == 1)
3013:TP2824/TP2802.c **** 							{
3014:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfa) ;
3015:TP2824/TP2802.c **** 								tmpab = (tmpab & 0x0F) | 0xA0 ;
3016:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfa, tmpab);
3017:TP2824/TP2802.c **** 							}
3018:TP2824/TP2802.c **** 	
3019:TP2824/TP2802.c **** 	
3020:TP2824/TP2802.c **** 							if (i == 2)
3021:TP2824/TP2802.c **** 							{
3022:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfb) ;
3023:TP2824/TP2802.c **** 								tmpab = (tmpab & 0xF0) | 0x0A ;
3024:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfb, tmpab);
3025:TP2824/TP2802.c **** 							}
3026:TP2824/TP2802.c **** 							else if (i == 3)
3027:TP2824/TP2802.c **** 							{
3028:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfb) ;
3029:TP2824/TP2802.c **** 								tmpab = (tmpab & 0x0F) | 0xA0 ;
3030:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfb, tmpab);
3031:TP2824/TP2802.c **** 							}
3032:TP2824/TP2802.c **** 	
3033:TP2824/TP2802.c **** 						}
3034:TP2824/TP2802.c **** 						else
3035:TP2824/TP2802.c **** 						{
3036:TP2824/TP2802.c **** 							tmp=tp28xx_byte_read(0x35);
3037:TP2824/TP2802.c **** 							tmp &= 0xbf;
3038:TP2824/TP2802.c **** 							tp28xx_byte_write(0x35, tmp);
3039:TP2824/TP2802.c **** 	
3040:TP2824/TP2802.c **** 	
3041:TP2824/TP2802.c **** 							if (i == 0)
3042:TP2824/TP2802.c **** 							{
3043:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfa) ;
3044:TP2824/TP2802.c **** 								tmpab = (tmpab & 0xF0) | 0x08 ;
3045:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfa, tmpab);
3046:TP2824/TP2802.c **** 							}
ARM GAS  /tmp/ccnKW75d.s 			page 104


3047:TP2824/TP2802.c **** 							else if (i == 1)
3048:TP2824/TP2802.c **** 							{
3049:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfa) ;
3050:TP2824/TP2802.c **** 								tmpab = (tmpab & 0x0F) | 0x80 ;
3051:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfa, tmpab);
3052:TP2824/TP2802.c **** 							}
3053:TP2824/TP2802.c **** 	
3054:TP2824/TP2802.c **** 	
3055:TP2824/TP2802.c **** 							if (i == 2)
3056:TP2824/TP2802.c **** 							{
3057:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfb) ;
3058:TP2824/TP2802.c **** 								tmpab = (tmpab & 0xF0) | 0x08 ;
3059:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfb, tmpab);
3060:TP2824/TP2802.c **** 							}
3061:TP2824/TP2802.c **** 							else if (i == 3)
3062:TP2824/TP2802.c **** 							{
3063:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfb) ;
3064:TP2824/TP2802.c **** 								tmpab = (tmpab & 0x0F) | 0x80 ;
3065:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfb, tmpab);
3066:TP2824/TP2802.c **** 							}
3067:TP2824/TP2802.c **** 						}
3068:TP2824/TP2802.c **** 					}
3069:TP2824/TP2802.c **** #endif
3070:TP2824/TP2802.c **** 				
3071:TP2824/TP2802.c **** 
3072:TP2824/TP2802.c **** 					if( CurRes != ManVidResRx)
3073:TP2824/TP2802.c **** 					{
3074:TP2824/TP2802.c **** 						CurRes = ManVidResRx;
3075:TP2824/TP2802.c **** 						//CreateMDIN340VideoInstance();  //chunyu
3076:TP2824/TP2802.c **** 						printf("ManVidResRx=0x%02x\r\n",ManVidResRx ) ;
3077:TP2824/TP2802.c **** 					}
3078:TP2824/TP2802.c **** 			}
3079:TP2824/TP2802.c **** 	else if(std[i] ==HDC)
3080:TP2824/TP2802.c **** 		{
3081:TP2824/TP2802.c **** 		Set_HDC(i);
3082:TP2824/TP2802.c **** 		printf("(Set_HDC)");
3083:TP2824/TP2802.c **** 		}
3084:TP2824/TP2802.c **** 	else if(std[i] ==HDA)
3085:TP2824/TP2802.c **** 		{
3086:TP2824/TP2802.c **** 		Set_HDA(i);
3087:TP2824/TP2802.c **** 		printf("(Set_HDA)");
3088:TP2824/TP2802.c **** 		}
3089:TP2824/TP2802.c **** 		break;
3090:TP2824/TP2802.c **** case Tp2802_Boot_Set_output:
3091:TP2824/TP2802.c **** //{
3092:TP2824/TP2802.c ****                 gain = ReadGain();
3093:TP2824/TP2802.c ****                 printf("Egain=0x%02x ch%02x,std=%d,mode=0x%02X\r\n", (tWord)gain, (tWord)i, (tWord)
3094:TP2824/TP2802.c **** 
3095:TP2824/TP2802.c ****                 if ((mode[i] == R1080P30 ) || (mode[i] == R1080P25 ))
3096:TP2824/TP2802.c ****                 {
3097:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1920X1080P ;
3098:TP2824/TP2802.c ****                 }
3099:TP2824/TP2802.c ****                 else if ((mode[i] == R720P50 ) || (mode[i] == R720P60 ))
3100:TP2824/TP2802.c ****                 {
3101:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
3102:TP2824/TP2802.c ****                 }
3103:TP2824/TP2802.c ****                 else if ((mode[i] == R720P25 ) || (mode[i] == R720P30 ))
ARM GAS  /tmp/ccnKW75d.s 			page 105


3104:TP2824/TP2802.c ****                 {
3105:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
3106:TP2824/TP2802.c ****                 }
3107:TP2824/TP2802.c ****                 else if ((mode[i] == R720P30V2 ) || (mode[i] == R720P25V2 ))
3108:TP2824/TP2802.c ****                 {
3109:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
3110:TP2824/TP2802.c ****                 }
3111:TP2824/TP2802.c ****                 else if (mode[i] == NTSC )
3112:TP2824/TP2802.c ****                 {
3113:TP2824/TP2802.c ****                     newInRes[i] = _OSD_720X480I60 ;
3114:TP2824/TP2802.c ****                 }
3115:TP2824/TP2802.c ****                 else if (mode[i] == PAL )
3116:TP2824/TP2802.c ****                 {
3117:TP2824/TP2802.c ****                     newInRes[i] = _OSD_720X576I50 ;
3118:TP2824/TP2802.c ****                 }
3119:TP2824/TP2802.c ****                 else
3120:TP2824/TP2802.c ****                 {
3121:TP2824/TP2802.c ****                     newInRes[i] = _OSD_No_Signal ;
3122:TP2824/TP2802.c ****                 }
3123:TP2824/TP2802.c **** 
3124:TP2824/TP2802.c ****               //  if (newInRes[i] != gbVXIS_InputMode[i] )
3125:TP2824/TP2802.c ****                 {
3126:TP2824/TP2802.c ****                     VS4210_SetInModeOutMode(i,newInRes[i] ,gbVXIS_OuputModeflg )  ;
3127:TP2824/TP2802.c **** 
3128:TP2824/TP2802.c **** 		//save tp2824 data
3129:TP2824/TP2802.c **** 		/*
3130:TP2824/TP2802.c **** 			if( ReadEEP(EEP_TP2824_STD0+(i*3)+2)==0)
3131:TP2824/TP2802.c **** 			{
3132:TP2824/TP2802.c **** 			 WriteEEP(EEP_TP2824_STD0+(i*3),std[i]);
3133:TP2824/TP2802.c **** 			 WriteEEP(EEP_TP2824_STD0+(i*3)+1,mode[i]);		
3134:TP2824/TP2802.c **** 		    	  WriteEEP(EEP_TP2824_STD0+(i*3)+2,1);
3135:TP2824/TP2802.c **** 			  VideoSave[i]=1;
3136:TP2824/TP2802.c **** 
3137:TP2824/TP2802.c **** 			 printf("\r\n(WriteModeDataToEEPROM ch=%02x)",(WORD)i) ;
3138:TP2824/TP2802.c **** 			}
3139:TP2824/TP2802.c **** 			*/
3140:TP2824/TP2802.c **** 	 
3141:TP2824/TP2802.c ****                 }
3142:TP2824/TP2802.c **** 
3143:TP2824/TP2802.c ****                 if( TVI != std[i] )
3144:TP2824/TP2802.c ****                 {
3145:TP2824/TP2802.c ****                     tp28xx_byte_write(0x07, 0x80|(gain>>2));  // manual mode
3146:TP2824/TP2802.c ****                     if (std[i]== HDA )
3147:TP2824/TP2802.c ****                     {
3148:TP2824/TP2802.c ****                         printf("AHD Mode\r\n");
3149:TP2824/TP2802.c ****                     }
3150:TP2824/TP2802.c ****                     else
3151:TP2824/TP2802.c ****                     {
3152:TP2824/TP2802.c ****                         printf("CVI Mode\r\n");
3153:TP2824/TP2802.c ****                     }
3154:TP2824/TP2802.c ****                 }
3155:TP2824/TP2802.c ****                 else //TVI
3156:TP2824/TP2802.c ****                 {
3157:TP2824/TP2802.c ****                     if( TP2833 == chip || TP2834 == chip)
3158:TP2824/TP2802.c ****                     {
3159:TP2824/TP2802.c ****                         if( mode[i] & FLAG_MEGA_MODE )
3160:TP2824/TP2802.c ****                         {
ARM GAS  /tmp/ccnKW75d.s 			page 106


3161:TP2824/TP2802.c ****                             tp28xx_byte_write(0x07, 0x80|(gain/3));  // manual mode
3162:TP2824/TP2802.c ****                         }
3163:TP2824/TP2802.c ****                     }
3164:TP2824/TP2802.c **** 		      if(mode[i] == NTSC) //20200408 cvbs night no burst
3165:TP2824/TP2802.c **** 			  	printf("CVBS NTSC   mode\r\n");
3166:TP2824/TP2802.c **** 		      else if(mode[i] == PAL) //20200408 cvbs night no burst
3167:TP2824/TP2802.c **** 			  	printf("CVBS PAL   mode\r\n");
3168:TP2824/TP2802.c **** 		      else
3169:TP2824/TP2802.c ****                     printf("LINE=%d,TVI Mode\r\n",__LINE__ );
3170:TP2824/TP2802.c ****                     //gRxLoopFlg = 0 ;
3171:TP2824/TP2802.c ****                 }
3172:TP2824/TP2802.c ****            // }
3173:TP2824/TP2802.c ****  break;
3174:TP2824/TP2802.c **** 		   case Tp2802_Boot_Set_COC:
3175:TP2824/TP2802.c **** 		   //	{
3176:TP2824/TP2802.c ****                 if( TVI != std[i] )
3177:TP2824/TP2802.c ****                 {
3178:TP2824/TP2802.c ****                     ManualAGC(i);
3179:TP2824/TP2802.c ****                     SetCGain(0x0c);
3180:TP2824/TP2802.c ****                 }
3181:TP2824/TP2802.c ****                 else //TVI
3182:TP2824/TP2802.c ****                 {
3183:TP2824/TP2802.c ****                     if( TP2833 == chip || TP2834 == chip)
3184:TP2824/TP2802.c ****                     {
3185:TP2824/TP2802.c ****                         if( mode[i] & FLAG_MEGA_MODE )
3186:TP2824/TP2802.c ****                         {
3187:TP2824/TP2802.c ****                             SetCGain(0x16);
3188:TP2824/TP2802.c ****                         }
3189:TP2824/TP2802.c ****                     }
3190:TP2824/TP2802.c ****                 }
3191:TP2824/TP2802.c ****             //}
3192:TP2824/TP2802.c **** 			   if(state[i] == VIDEO_LOCKED)
3193:TP2824/TP2802.c **** 						   {
3194:TP2824/TP2802.c **** 							   tcByte *ptr_TP2824C;
3195:TP2824/TP2802.c **** 					   if( TVI == std[i] )
3196:TP2824/TP2802.c **** 					   {
3197:TP2824/TP2802.c **** 						   if(mode[i]==NTSC || mode[i]==PAL)
3198:TP2824/TP2802.c **** 						   {
3199:TP2824/TP2802.c **** 							   ptr_TP2824C=TP2824C_CVBS_PTZ_DataSet;
3200:TP2824/TP2802.c **** 						   }
3201:TP2824/TP2802.c **** 						   else
3202:TP2824/TP2802.c **** 						   {
3203:TP2824/TP2802.c **** 							   ptr_TP2824C=TP2824C_TVI_FHD_PTZ_DataSet;
3204:TP2824/TP2802.c **** 						   }
3205:TP2824/TP2802.c **** 						   
3206:TP2824/TP2802.c **** 						   I2CDeviceSet1( ptr_TP2824C );
3207:TP2824/TP2802.c **** 						   
3208:TP2824/TP2802.c **** 						   if(mode[i] == R1080P30 || mode[i] == R1080P25)
3209:TP2824/TP2802.c **** 						   {
3210:TP2824/TP2802.c **** 							   tp28xx_byte_write(0xc6, 0x19);
3211:TP2824/TP2802.c **** 						   }
3212:TP2824/TP2802.c **** 						   
3213:TP2824/TP2802.c **** 						   tp28xx_byte_write(0x40, i);
3214:TP2824/TP2802.c **** 						   
3215:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xbe, 0x80);
3216:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB6);
3217:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB5);
ARM GAS  /tmp/ccnKW75d.s 			page 107


3218:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB4);
3219:TP2824/TP2802.c **** 			   
3220:TP2824/TP2802.c **** 					   
3221:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0x00);
3222:TP2824/TP2802.c **** 						   delay(1);//5ms
3223:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0x83);
3224:TP2824/TP2802.c **** 						   
3225:TP2824/TP2802.c **** 						   if(mode[i]==R1080P30 || mode[i]==R1080P25)
3226:TP2824/TP2802.c **** 						   {
3227:TP2824/TP2802.c **** 							   PtzTxChNum=i;
3228:TP2824/TP2802.c **** 							   printf("EQdet %d\r\n",  PtzTxChNum);
3229:TP2824/TP2802.c **** 						   }
3230:TP2824/TP2802.c **** 						   
3231:TP2824/TP2802.c **** 					   }
3232:TP2824/TP2802.c **** 			   
3233:TP2824/TP2802.c **** 					   if( HDA == std[i] )
3234:TP2824/TP2802.c **** 					   {
3235:TP2824/TP2802.c **** 						   ptr_TP2824C=TP2824C_AHD_FHD_PTZ_DataSet;
3236:TP2824/TP2802.c **** 						   I2CDeviceSet1( ptr_TP2824C );
3237:TP2824/TP2802.c **** 					   
3238:TP2824/TP2802.c **** 						   tp28xx_byte_write(0x40, i);
3239:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xbe, 0x80);
3240:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB6);
3241:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB5);
3242:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB4);
3243:TP2824/TP2802.c **** 			   
3244:TP2824/TP2802.c **** 					   
3245:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0x24);
3246:TP2824/TP2802.c **** 						   delay(1);//5ms
3247:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0xA7);
3248:TP2824/TP2802.c **** 					   }
3249:TP2824/TP2802.c **** 			   
3250:TP2824/TP2802.c **** 					   if( HDC == std[i] )
3251:TP2824/TP2802.c **** 					   {
3252:TP2824/TP2802.c **** 						   ptr_TP2824C=TP2824C_CVIHD_PTZ_DataSet;
3253:TP2824/TP2802.c **** 						   I2CDeviceSet1( ptr_TP2824C );
3254:TP2824/TP2802.c **** 					   
3255:TP2824/TP2802.c **** 						   tp28xx_byte_write(0x40, i);
3256:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xbe, 0x80);
3257:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB6);
3258:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB5);
3259:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB4);
3260:TP2824/TP2802.c **** 			   
3261:TP2824/TP2802.c **** 					   
3262:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xA4);
3263:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xA2);
3264:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xA3);
3265:TP2824/TP2802.c **** 						   
3266:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0x00);
3267:TP2824/TP2802.c **** 						   delay(1);//5ms
3268:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0x83);
3269:TP2824/TP2802.c **** 					   }
3270:TP2824/TP2802.c **** 
3271:TP2824/TP2802.c **** 			   	}
3272:TP2824/TP2802.c **** 			break;
3273:TP2824/TP2802.c **** 			//#endif
3274:TP2824/TP2802.c **** }
ARM GAS  /tmp/ccnKW75d.s 			page 108


3275:TP2824/TP2802.c **** 
3276:TP2824/TP2802.c **** }
3277:TP2824/TP2802.c **** #endif
3278:TP2824/TP2802.c **** void ConvertData(unsigned char dat, unsigned char buf_index)
3279:TP2824/TP2802.c **** {
 2573              		.loc 1 3279 0
 2574              		.cfi_startproc
 2575              		@ args = 0, pretend = 0, frame = 0
 2576              		@ frame_needed = 0, uses_anonymous_args = 0
 2577              		@ link register save eliminated.
 2578              	.LVL352:
 2579 0000 10B4     		push	{r4}
 2580              	.LCFI21:
 2581              		.cfi_def_cfa_offset 4
 2582              		.cfi_offset 4, -4
3280:TP2824/TP2802.c ****     unsigned char i;
3281:TP2824/TP2802.c **** 
3282:TP2824/TP2802.c ****     PTZ_pelco=0;
 2583              		.loc 1 3282 0
 2584 0002 0022     		movs	r2, #0
 2585 0004 124B     		ldr	r3, .L248
 2586 0006 1A80     		strh	r2, [r3]	@ movhi
 2587              	.LVL353:
3283:TP2824/TP2802.c **** 
3284:TP2824/TP2802.c ****     for(i = 0; i < 8; i++)
 2588              		.loc 1 3284 0
 2589 0008 07E0     		b	.L241
 2590              	.LVL354:
 2591              	.L247:
3285:TP2824/TP2802.c ****     {
3286:TP2824/TP2802.c ****         PTZ_pelco <<= 3;
3287:TP2824/TP2802.c **** 
3288:TP2824/TP2802.c ****         if(0x80 & dat) PTZ_pelco |= 0x06;
 2592              		.loc 1 3288 0 discriminator 1
 2593 000a 43F00603 		orr	r3, r3, #6
 2594 000e 104C     		ldr	r4, .L248
 2595 0010 2380     		strh	r3, [r4]	@ movhi
 2596              	.L243:
3289:TP2824/TP2802.c ****         else PTZ_pelco |= 0x04;
3290:TP2824/TP2802.c **** 
3291:TP2824/TP2802.c ****         dat <<= 1;
 2597              		.loc 1 3291 0 discriminator 2
 2598 0012 4000     		lsls	r0, r0, #1
 2599              	.LVL355:
 2600 0014 C0B2     		uxtb	r0, r0
 2601              	.LVL356:
3284:TP2824/TP2802.c ****     {
 2602              		.loc 1 3284 0 discriminator 2
 2603 0016 0132     		adds	r2, r2, #1
 2604              	.LVL357:
 2605 0018 D2B2     		uxtb	r2, r2
 2606              	.LVL358:
 2607              	.L241:
3284:TP2824/TP2802.c ****     {
 2608              		.loc 1 3284 0 is_stmt 0 discriminator 1
 2609 001a 072A     		cmp	r2, #7
 2610 001c 0BD8     		bhi	.L246
ARM GAS  /tmp/ccnKW75d.s 			page 109


3286:TP2824/TP2802.c **** 
 2611              		.loc 1 3286 0 is_stmt 1
 2612 001e 0C4B     		ldr	r3, .L248
 2613 0020 1B88     		ldrh	r3, [r3]
 2614 0022 DB00     		lsls	r3, r3, #3
 2615 0024 9BB2     		uxth	r3, r3
3288:TP2824/TP2802.c ****         else PTZ_pelco |= 0x04;
 2616              		.loc 1 3288 0
 2617 0026 10F0800F 		tst	r0, #128
 2618 002a EED1     		bne	.L247
3289:TP2824/TP2802.c **** 
 2619              		.loc 1 3289 0
 2620 002c 43F00403 		orr	r3, r3, #4
 2621 0030 074C     		ldr	r4, .L248
 2622 0032 2380     		strh	r3, [r4]	@ movhi
 2623 0034 EDE7     		b	.L243
 2624              	.L246:
3292:TP2824/TP2802.c ****     }
3293:TP2824/TP2802.c ****     PTZ_buf[buf_index]= (PTZ_pelco>>16)&0xff;
 2625              		.loc 1 3293 0
 2626 0036 074B     		ldr	r3, .L248+4
 2627 0038 0022     		movs	r2, #0
 2628              	.LVL359:
 2629 003a 5A54     		strb	r2, [r3, r1]
3294:TP2824/TP2802.c ****     PTZ_buf[buf_index+1]= (PTZ_pelco>>8)&0xff;
 2630              		.loc 1 3294 0
 2631 003c 044A     		ldr	r2, .L248
 2632 003e 1288     		ldrh	r2, [r2]
 2633 0040 481C     		adds	r0, r1, #1
 2634              	.LVL360:
 2635 0042 140A     		lsrs	r4, r2, #8
 2636 0044 1C54     		strb	r4, [r3, r0]
3295:TP2824/TP2802.c ****     PTZ_buf[buf_index+2]= (PTZ_pelco)&0xff;
 2637              		.loc 1 3295 0
 2638 0046 0231     		adds	r1, r1, #2
 2639              	.LVL361:
 2640 0048 5A54     		strb	r2, [r3, r1]
3296:TP2824/TP2802.c **** }
 2641              		.loc 1 3296 0
 2642 004a 10BC     		pop	{r4}
 2643              	.LCFI22:
 2644              		.cfi_restore 4
 2645              		.cfi_def_cfa_offset 0
 2646 004c 7047     		bx	lr
 2647              	.L249:
 2648 004e 00BF     		.align	2
 2649              	.L248:
 2650 0050 00000000 		.word	PTZ_pelco
 2651 0054 00000000 		.word	PTZ_buf
 2652              		.cfi_endproc
 2653              	.LFE91:
 2655              		.section	.text.SwapBit,"ax",%progbits
 2656              		.align	1
 2657              		.global	SwapBit
 2658              		.syntax unified
 2659              		.thumb
 2660              		.thumb_func
ARM GAS  /tmp/ccnKW75d.s 			page 110


 2661              		.fpu softvfp
 2663              	SwapBit:
 2664              	.LFB92:
3297:TP2824/TP2802.c **** unsigned char SwapBit(unsigned char dat, unsigned char buf_index)
3298:TP2824/TP2802.c **** {
 2665              		.loc 1 3298 0
 2666              		.cfi_startproc
 2667              		@ args = 0, pretend = 0, frame = 0
 2668              		@ frame_needed = 0, uses_anonymous_args = 0
 2669              		@ link register save eliminated.
 2670              	.LVL362:
 2671 0000 30B4     		push	{r4, r5}
 2672              	.LCFI23:
 2673              		.cfi_def_cfa_offset 8
 2674              		.cfi_offset 4, -8
 2675              		.cfi_offset 5, -4
 2676 0002 0246     		mov	r2, r0
 2677              	.LVL363:
3299:TP2824/TP2802.c ****     unsigned char i;
3300:TP2824/TP2802.c ****     unsigned char ret=0;
3301:TP2824/TP2802.c ****     crc=0;
 2678              		.loc 1 3301 0
 2679 0004 0023     		movs	r3, #0
 2680 0006 1448     		ldr	r0, .L256
 2681              	.LVL364:
 2682 0008 0370     		strb	r3, [r0]
 2683              	.LVL365:
3300:TP2824/TP2802.c ****     crc=0;
 2684              		.loc 1 3300 0
 2685 000a 1846     		mov	r0, r3
3302:TP2824/TP2802.c ****     for(i = 0; i < 8; i++ )
 2686              		.loc 1 3302 0
 2687 000c 03E0     		b	.L251
 2688              	.LVL366:
 2689              	.L252:
3303:TP2824/TP2802.c ****     {
3304:TP2824/TP2802.c ****         ret >>= 1;
3305:TP2824/TP2802.c ****         if(0x80 & dat)
3306:TP2824/TP2802.c ****         {
3307:TP2824/TP2802.c ****             ret |= 0x80;
3308:TP2824/TP2802.c ****             crc +=0x80;
3309:TP2824/TP2802.c ****         }
3310:TP2824/TP2802.c ****         dat <<= 1;
 2690              		.loc 1 3310 0 discriminator 2
 2691 000e 5200     		lsls	r2, r2, #1
 2692              	.LVL367:
 2693 0010 D2B2     		uxtb	r2, r2
 2694              	.LVL368:
3302:TP2824/TP2802.c ****     for(i = 0; i < 8; i++ )
 2695              		.loc 1 3302 0 discriminator 2
 2696 0012 0133     		adds	r3, r3, #1
 2697              	.LVL369:
 2698 0014 DBB2     		uxtb	r3, r3
 2699              	.LVL370:
 2700              	.L251:
3302:TP2824/TP2802.c ****     for(i = 0; i < 8; i++ )
 2701              		.loc 1 3302 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccnKW75d.s 			page 111


 2702 0016 072B     		cmp	r3, #7
 2703 0018 0BD8     		bhi	.L255
3304:TP2824/TP2802.c ****         if(0x80 & dat)
 2704              		.loc 1 3304 0 is_stmt 1
 2705 001a 4008     		lsrs	r0, r0, #1
 2706              	.LVL371:
3305:TP2824/TP2802.c ****         {
 2707              		.loc 1 3305 0
 2708 001c 12F0800F 		tst	r2, #128
 2709 0020 F5D0     		beq	.L252
3307:TP2824/TP2802.c ****             crc +=0x80;
 2710              		.loc 1 3307 0
 2711 0022 60F07F00 		orn	r0, r0, #127
 2712              	.LVL372:
 2713 0026 C0B2     		uxtb	r0, r0
 2714              	.LVL373:
3308:TP2824/TP2802.c ****         }
 2715              		.loc 1 3308 0
 2716 0028 0B4D     		ldr	r5, .L256
 2717 002a 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 2718 002c 803C     		subs	r4, r4, #128
 2719 002e 2C70     		strb	r4, [r5]
 2720 0030 EDE7     		b	.L252
 2721              	.L255:
3311:TP2824/TP2802.c ****     }
3312:TP2824/TP2802.c ****     PTZ_buf[buf_index]= 0x02;
 2722              		.loc 1 3312 0
 2723 0032 0A4B     		ldr	r3, .L256+4
 2724              	.LVL374:
 2725 0034 0222     		movs	r2, #2
 2726              	.LVL375:
 2727 0036 5A54     		strb	r2, [r3, r1]
3313:TP2824/TP2802.c ****     PTZ_buf[buf_index+1]= ret;
 2728              		.loc 1 3313 0
 2729 0038 4A1C     		adds	r2, r1, #1
 2730 003a 9854     		strb	r0, [r3, r2]
3314:TP2824/TP2802.c ****     PTZ_buf[buf_index+2]= 0x7f|crc;
 2731              		.loc 1 3314 0
 2732 003c 8C1C     		adds	r4, r1, #2
 2733 003e 064A     		ldr	r2, .L256
 2734 0040 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2735 0042 42F07F02 		orr	r2, r2, #127
 2736 0046 1A55     		strb	r2, [r3, r4]
3315:TP2824/TP2802.c ****     PTZ_buf[buf_index+3]= 0xff;
 2737              		.loc 1 3315 0
 2738 0048 CA1C     		adds	r2, r1, #3
 2739 004a FF24     		movs	r4, #255
 2740 004c 9C54     		strb	r4, [r3, r2]
3316:TP2824/TP2802.c ****     PTZ_buf[buf_index+4]= 0xfc;
 2741              		.loc 1 3316 0
 2742 004e 0431     		adds	r1, r1, #4
 2743              	.LVL376:
 2744 0050 FC22     		movs	r2, #252
 2745 0052 5A54     		strb	r2, [r3, r1]
3317:TP2824/TP2802.c ****     return ret;
3318:TP2824/TP2802.c **** }
 2746              		.loc 1 3318 0
ARM GAS  /tmp/ccnKW75d.s 			page 112


 2747 0054 30BC     		pop	{r4, r5}
 2748              	.LCFI24:
 2749              		.cfi_restore 5
 2750              		.cfi_restore 4
 2751              		.cfi_def_cfa_offset 0
 2752 0056 7047     		bx	lr
 2753              	.L257:
 2754              		.align	2
 2755              	.L256:
 2756 0058 00000000 		.word	crc
 2757 005c 00000000 		.word	PTZ_buf
 2758              		.cfi_endproc
 2759              	.LFE92:
 2761              		.section	.text.AHDBitsReverse,"ax",%progbits
 2762              		.align	1
 2763              		.global	AHDBitsReverse
 2764              		.syntax unified
 2765              		.thumb
 2766              		.thumb_func
 2767              		.fpu softvfp
 2769              	AHDBitsReverse:
 2770              	.LFB93:
3319:TP2824/TP2802.c **** 
3320:TP2824/TP2802.c **** BYTE AHDBitsReverse(BYTE val)
3321:TP2824/TP2802.c **** {
 2771              		.loc 1 3321 0
 2772              		.cfi_startproc
 2773              		@ args = 0, pretend = 0, frame = 0
 2774              		@ frame_needed = 0, uses_anonymous_args = 0
 2775              		@ link register save eliminated.
 2776              	.LVL377:
 2777 0000 30B4     		push	{r4, r5}
 2778              	.LCFI25:
 2779              		.cfi_def_cfa_offset 8
 2780              		.cfi_offset 4, -8
 2781              		.cfi_offset 5, -4
 2782 0002 0446     		mov	r4, r0
 2783              	.LVL378:
3322:TP2824/TP2802.c **** 	BYTE i;
3323:TP2824/TP2802.c **** 	BYTE cnt=7;
3324:TP2824/TP2802.c **** 	BYTE bitflag=0x01;
3325:TP2824/TP2802.c **** 	BYTE rval=0x00;
 2784              		.loc 1 3325 0
 2785 0004 0020     		movs	r0, #0
 2786              	.LVL379:
3324:TP2824/TP2802.c **** 	BYTE rval=0x00;
 2787              		.loc 1 3324 0
 2788 0006 0125     		movs	r5, #1
3323:TP2824/TP2802.c **** 	BYTE bitflag=0x01;
 2789              		.loc 1 3323 0
 2790 0008 0721     		movs	r1, #7
3326:TP2824/TP2802.c **** 	for(i=0;i<4;i++){
 2791              		.loc 1 3326 0
 2792 000a 0246     		mov	r2, r0
 2793 000c 0BE0     		b	.L259
 2794              	.LVL380:
 2795              	.L260:
ARM GAS  /tmp/ccnKW75d.s 			page 113


3327:TP2824/TP2802.c **** 		rval|=((val>>cnt)&bitflag);
 2796              		.loc 1 3327 0 discriminator 3
 2797 000e 44FA01F3 		asr	r3, r4, r1
 2798 0012 2B40     		ands	r3, r3, r5
 2799 0014 5BB2     		sxtb	r3, r3
 2800 0016 0343     		orrs	r3, r3, r0
 2801 0018 D8B2     		uxtb	r0, r3
 2802              	.LVL381:
3328:TP2824/TP2802.c **** 		bitflag<<=1;
 2803              		.loc 1 3328 0 discriminator 3
 2804 001a 6D00     		lsls	r5, r5, #1
 2805              	.LVL382:
 2806 001c EDB2     		uxtb	r5, r5
 2807              	.LVL383:
3329:TP2824/TP2802.c **** 		cnt-=2;
 2808              		.loc 1 3329 0 discriminator 3
 2809 001e 0239     		subs	r1, r1, #2
 2810              	.LVL384:
 2811 0020 C9B2     		uxtb	r1, r1
 2812              	.LVL385:
3326:TP2824/TP2802.c **** 		rval|=((val>>cnt)&bitflag);
 2813              		.loc 1 3326 0 discriminator 3
 2814 0022 0132     		adds	r2, r2, #1
 2815              	.LVL386:
 2816 0024 D2B2     		uxtb	r2, r2
 2817              	.LVL387:
 2818              	.L259:
3326:TP2824/TP2802.c **** 		rval|=((val>>cnt)&bitflag);
 2819              		.loc 1 3326 0 is_stmt 0 discriminator 1
 2820 0026 032A     		cmp	r2, #3
 2821 0028 F1D9     		bls	.L260
3330:TP2824/TP2802.c **** 	}
3331:TP2824/TP2802.c **** 	cnt=7;
3332:TP2824/TP2802.c **** 	bitflag=0x80;
 2822              		.loc 1 3332 0 is_stmt 1
 2823 002a 8025     		movs	r5, #128
 2824              	.LVL388:
3331:TP2824/TP2802.c **** 	bitflag=0x80;
 2825              		.loc 1 3331 0
 2826 002c 0721     		movs	r1, #7
 2827              	.LVL389:
3333:TP2824/TP2802.c **** 	for(i=0;i<4;i++){
 2828              		.loc 1 3333 0
 2829 002e 0022     		movs	r2, #0
 2830              	.LVL390:
 2831 0030 0AE0     		b	.L261
 2832              	.LVL391:
 2833              	.L262:
3334:TP2824/TP2802.c **** 		rval|=((val<<cnt)&bitflag);
 2834              		.loc 1 3334 0 discriminator 3
 2835 0032 04FA01F3 		lsl	r3, r4, r1
 2836 0036 2B40     		ands	r3, r3, r5
 2837 0038 5BB2     		sxtb	r3, r3
 2838 003a 0343     		orrs	r3, r3, r0
 2839 003c D8B2     		uxtb	r0, r3
 2840              	.LVL392:
3335:TP2824/TP2802.c **** 		bitflag>>=1;
ARM GAS  /tmp/ccnKW75d.s 			page 114


 2841              		.loc 1 3335 0 discriminator 3
 2842 003e 6D08     		lsrs	r5, r5, #1
 2843              	.LVL393:
3336:TP2824/TP2802.c **** 		cnt-=2;
 2844              		.loc 1 3336 0 discriminator 3
 2845 0040 0239     		subs	r1, r1, #2
 2846              	.LVL394:
 2847 0042 C9B2     		uxtb	r1, r1
 2848              	.LVL395:
3333:TP2824/TP2802.c **** 		rval|=((val<<cnt)&bitflag);
 2849              		.loc 1 3333 0 discriminator 3
 2850 0044 0132     		adds	r2, r2, #1
 2851              	.LVL396:
 2852 0046 D2B2     		uxtb	r2, r2
 2853              	.LVL397:
 2854              	.L261:
3333:TP2824/TP2802.c **** 		rval|=((val<<cnt)&bitflag);
 2855              		.loc 1 3333 0 is_stmt 0 discriminator 1
 2856 0048 032A     		cmp	r2, #3
 2857 004a F2D9     		bls	.L262
3337:TP2824/TP2802.c **** 	}
3338:TP2824/TP2802.c **** 	return rval;
3339:TP2824/TP2802.c **** }
 2858              		.loc 1 3339 0 is_stmt 1
 2859 004c 30BC     		pop	{r4, r5}
 2860              	.LCFI26:
 2861              		.cfi_restore 5
 2862              		.cfi_restore 4
 2863              		.cfi_def_cfa_offset 0
 2864              	.LVL398:
 2865 004e 7047     		bx	lr
 2866              		.cfi_endproc
 2867              	.LFE93:
 2869              		.section	.text.HDC_SetData,"ax",%progbits
 2870              		.align	1
 2871              		.global	HDC_SetData
 2872              		.syntax unified
 2873              		.thumb
 2874              		.thumb_func
 2875              		.fpu softvfp
 2877              	HDC_SetData:
 2878              	.LFB94:
3340:TP2824/TP2802.c **** 
3341:TP2824/TP2802.c **** void HDC_SetData(tByte reg,tByte dat)
3342:TP2824/TP2802.c **** {
 2879              		.loc 1 3342 0
 2880              		.cfi_startproc
 2881              		@ args = 0, pretend = 0, frame = 0
 2882              		@ frame_needed = 0, uses_anonymous_args = 0
 2883              	.LVL399:
 2884 0000 38B5     		push	{r3, r4, r5, lr}
 2885              	.LCFI27:
 2886              		.cfi_def_cfa_offset 16
 2887              		.cfi_offset 3, -16
 2888              		.cfi_offset 4, -12
 2889              		.cfi_offset 5, -8
 2890              		.cfi_offset 14, -4
ARM GAS  /tmp/ccnKW75d.s 			page 115


 2891 0002 0446     		mov	r4, r0
 2892 0004 0D46     		mov	r5, r1
3343:TP2824/TP2802.c ****     //line1
3344:TP2824/TP2802.c ****     //tp28xx_byte_write(reg + 0 , 0x00);
3345:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 0 , 0x02);
 2893              		.loc 1 3345 0
 2894 0006 0221     		movs	r1, #2
 2895              	.LVL400:
 2896 0008 FFF7FEFF 		bl	tp28xx_byte_write
 2897              	.LVL401:
3346:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 1 , SwapBit(dat,1));
 2898              		.loc 1 3346 0
 2899 000c 0121     		movs	r1, #1
 2900 000e 2846     		mov	r0, r5
 2901 0010 FFF7FEFF 		bl	SwapBit
 2902              	.LVL402:
 2903 0014 631C     		adds	r3, r4, #1
 2904 0016 0146     		mov	r1, r0
 2905 0018 D8B2     		uxtb	r0, r3
 2906 001a FFF7FEFF 		bl	tp28xx_byte_write
 2907              	.LVL403:
3347:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 2 , 0x7f|crc);
 2908              		.loc 1 3347 0
 2909 001e 094B     		ldr	r3, .L266
 2910 0020 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2911 0022 A01C     		adds	r0, r4, #2
 2912 0024 41F07F01 		orr	r1, r1, #127
 2913 0028 C0B2     		uxtb	r0, r0
 2914 002a FFF7FEFF 		bl	tp28xx_byte_write
 2915              	.LVL404:
3348:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 3 , 0xff);
 2916              		.loc 1 3348 0
 2917 002e E01C     		adds	r0, r4, #3
 2918 0030 FF21     		movs	r1, #255
 2919 0032 C0B2     		uxtb	r0, r0
 2920 0034 FFF7FEFF 		bl	tp28xx_byte_write
 2921              	.LVL405:
3349:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 4 , 0xfc);
 2922              		.loc 1 3349 0
 2923 0038 201D     		adds	r0, r4, #4
 2924 003a FC21     		movs	r1, #252
 2925 003c C0B2     		uxtb	r0, r0
 2926 003e FFF7FEFF 		bl	tp28xx_byte_write
 2927              	.LVL406:
3350:TP2824/TP2802.c **** }
 2928              		.loc 1 3350 0
 2929 0042 38BD     		pop	{r3, r4, r5, pc}
 2930              	.L267:
 2931              		.align	2
 2932              	.L266:
 2933 0044 00000000 		.word	crc
 2934              		.cfi_endproc
 2935              	.LFE94:
 2937              		.section	.text.HDA_SetData,"ax",%progbits
 2938              		.align	1
 2939              		.global	HDA_SetData
 2940              		.syntax unified
ARM GAS  /tmp/ccnKW75d.s 			page 116


 2941              		.thumb
 2942              		.thumb_func
 2943              		.fpu softvfp
 2945              	HDA_SetData:
 2946              	.LFB95:
3351:TP2824/TP2802.c **** 
3352:TP2824/TP2802.c **** void HDA_SetData(tByte reg,tByte dat)
3353:TP2824/TP2802.c **** {
 2947              		.loc 1 3353 0
 2948              		.cfi_startproc
 2949              		@ args = 0, pretend = 0, frame = 0
 2950              		@ frame_needed = 0, uses_anonymous_args = 0
 2951              	.LVL407:
 2952 0000 38B5     		push	{r3, r4, r5, lr}
 2953              	.LCFI28:
 2954              		.cfi_def_cfa_offset 16
 2955              		.cfi_offset 3, -16
 2956              		.cfi_offset 4, -12
 2957              		.cfi_offset 5, -8
 2958              		.cfi_offset 14, -4
 2959 0002 0446     		mov	r4, r0
 2960 0004 0846     		mov	r0, r1
 2961              	.LVL408:
3354:TP2824/TP2802.c ****     ConvertData(dat, 0);
 2962              		.loc 1 3354 0
 2963 0006 0021     		movs	r1, #0
 2964              	.LVL409:
 2965 0008 FFF7FEFF 		bl	ConvertData
 2966              	.LVL410:
3355:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 0 , PTZ_buf[0]);
 2967              		.loc 1 3355 0
 2968 000c 074D     		ldr	r5, .L270
 2969 000e 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 2970 0010 2046     		mov	r0, r4
 2971 0012 FFF7FEFF 		bl	tp28xx_byte_write
 2972              	.LVL411:
3356:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 1 , PTZ_buf[1]);
 2973              		.loc 1 3356 0
 2974 0016 601C     		adds	r0, r4, #1
 2975 0018 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 2976 001a C0B2     		uxtb	r0, r0
 2977 001c FFF7FEFF 		bl	tp28xx_byte_write
 2978              	.LVL412:
3357:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 2 , PTZ_buf[2]);
 2979              		.loc 1 3357 0
 2980 0020 A01C     		adds	r0, r4, #2
 2981 0022 A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 2982 0024 C0B2     		uxtb	r0, r0
 2983 0026 FFF7FEFF 		bl	tp28xx_byte_write
 2984              	.LVL413:
3358:TP2824/TP2802.c **** }
 2985              		.loc 1 3358 0
 2986 002a 38BD     		pop	{r3, r4, r5, pc}
 2987              	.L271:
 2988              		.align	2
 2989              	.L270:
 2990 002c 00000000 		.word	PTZ_buf
ARM GAS  /tmp/ccnKW75d.s 			page 117


 2991              		.cfi_endproc
 2992              	.LFE95:
 2994              		.section	.text.TVICommandToAHData,"ax",%progbits
 2995              		.align	1
 2996              		.global	TVICommandToAHData
 2997              		.syntax unified
 2998              		.thumb
 2999              		.thumb_func
 3000              		.fpu softvfp
 3002              	TVICommandToAHData:
 3003              	.LFB96:
3359:TP2824/TP2802.c **** 			
3360:TP2824/TP2802.c **** //20200511 COC  >>
3361:TP2824/TP2802.c **** void TVICommandToAHData(void)
3362:TP2824/TP2802.c **** {
 3004              		.loc 1 3362 0
 3005              		.cfi_startproc
 3006              		@ args = 0, pretend = 0, frame = 0
 3007              		@ frame_needed = 0, uses_anonymous_args = 0
 3008              		@ link register save eliminated.
3363:TP2824/TP2802.c **** 	AHDcmd3=TVI_speed;
 3009              		.loc 1 3363 0
 3010 0000 6D4B     		ldr	r3, .L317
 3011 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3012 0004 6D4B     		ldr	r3, .L317+4
 3013 0006 1A70     		strb	r2, [r3]
3364:TP2824/TP2802.c **** 	AHDcmd4=presetNum;
 3014              		.loc 1 3364 0
 3015 0008 6D4B     		ldr	r3, .L317+8
 3016 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3017 000c 6D4B     		ldr	r3, .L317+12
 3018 000e 1A70     		strb	r2, [r3]
3365:TP2824/TP2802.c **** 	
3366:TP2824/TP2802.c **** 	if(TVI_Command==0x17)//KEY_PRESET_CALL//"preset xx"
 3019              		.loc 1 3366 0
 3020 0010 6D4B     		ldr	r3, .L317+16
 3021 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3022 0014 172B     		cmp	r3, #23
 3023 0016 30D0     		beq	.L295
3367:TP2824/TP2802.c **** 	{
3368:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3369:TP2824/TP2802.c **** 		AHDcmd2=0x07;
3370:TP2824/TP2802.c **** 		AHDcmd3=0;
3371:TP2824/TP2802.c **** 	}
3372:TP2824/TP2802.c **** 	else if(TVI_Command==0x06)//KEY_TILT_UP
 3024              		.loc 1 3372 0
 3025 0018 062B     		cmp	r3, #6
 3026 001a 37D0     		beq	.L296
3373:TP2824/TP2802.c **** 	{
3374:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3375:TP2824/TP2802.c **** 		AHDcmd2=0x08;
3376:TP2824/TP2802.c **** 	}
3377:TP2824/TP2802.c **** 	else if(TVI_Command==0x07)//KEY_TILT_DOWN
 3027              		.loc 1 3377 0
 3028 001c 072B     		cmp	r3, #7
 3029 001e 3CD0     		beq	.L297
3378:TP2824/TP2802.c **** 	{
ARM GAS  /tmp/ccnKW75d.s 			page 118


3379:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3380:TP2824/TP2802.c **** 		AHDcmd2=0x10;
3381:TP2824/TP2802.c **** 	}
3382:TP2824/TP2802.c **** 	else if(TVI_Command==0x09)//KEY_PAN_LEFT
 3030              		.loc 1 3382 0
 3031 0020 092B     		cmp	r3, #9
 3032 0022 41D0     		beq	.L298
3383:TP2824/TP2802.c **** 	{
3384:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3385:TP2824/TP2802.c **** 		AHDcmd2=0x04;
3386:TP2824/TP2802.c **** 	}
3387:TP2824/TP2802.c **** 	else if(TVI_Command==0x08)//KEY_PAN_RIGHT
 3033              		.loc 1 3387 0
 3034 0024 082B     		cmp	r3, #8
 3035 0026 46D0     		beq	.L299
3388:TP2824/TP2802.c **** 	{
3389:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3390:TP2824/TP2802.c **** 		AHDcmd2=0x02;
3391:TP2824/TP2802.c **** 	}		
3392:TP2824/TP2802.c **** 	else if(TVI_Command==0x0A)//KEY_TILT_UP + KEY_PAN_LEFT
 3036              		.loc 1 3392 0
 3037 0028 0A2B     		cmp	r3, #10
 3038 002a 4BD0     		beq	.L300
3393:TP2824/TP2802.c **** 	{
3394:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3395:TP2824/TP2802.c **** 		AHDcmd2=0x0c;
3396:TP2824/TP2802.c **** 	}
3397:TP2824/TP2802.c **** 	else if(TVI_Command==0x0C)//KEY_TILT_UP + KEY_PAN_RIGHT
 3039              		.loc 1 3397 0
 3040 002c 0C2B     		cmp	r3, #12
 3041 002e 50D0     		beq	.L301
3398:TP2824/TP2802.c **** 	{
3399:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3400:TP2824/TP2802.c **** 		AHDcmd2=0x0a;
3401:TP2824/TP2802.c **** 	}
3402:TP2824/TP2802.c **** 	else if(TVI_Command==0x0B)//KEY_TILT_DOWN + KEY_PAN_LEFT
 3042              		.loc 1 3402 0
 3043 0030 0B2B     		cmp	r3, #11
 3044 0032 55D0     		beq	.L302
3403:TP2824/TP2802.c **** 	{
3404:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3405:TP2824/TP2802.c **** 		AHDcmd2=0x14;
3406:TP2824/TP2802.c **** 	}
3407:TP2824/TP2802.c **** 	else if(TVI_Command==0x0D)//KEY_TILT_DOWN + KEY_PAN_RIGHT
 3045              		.loc 1 3407 0
 3046 0034 0D2B     		cmp	r3, #13
 3047 0036 5AD0     		beq	.L303
3408:TP2824/TP2802.c **** 	{
3409:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3410:TP2824/TP2802.c **** 		AHDcmd2=0x12;
3411:TP2824/TP2802.c **** 	}		
3412:TP2824/TP2802.c **** 	else if(TVI_Command==0x0F)//KEY_IRIS_OPEN / OSD_MENU
 3048              		.loc 1 3412 0
 3049 0038 0F2B     		cmp	r3, #15
 3050 003a 5FD0     		beq	.L304
3413:TP2824/TP2802.c **** 	{
3414:TP2824/TP2802.c **** 		AHDcmd1=0x02;
ARM GAS  /tmp/ccnKW75d.s 			page 119


3415:TP2824/TP2802.c **** 		AHDcmd2=0x00;
3416:TP2824/TP2802.c **** 	}
3417:TP2824/TP2802.c **** 	else if(TVI_Command==0x0E)//KEY_IRIS_CLOSE
 3051              		.loc 1 3417 0
 3052 003c 0E2B     		cmp	r3, #14
 3053 003e 64D0     		beq	.L305
3418:TP2824/TP2802.c **** 	{
3419:TP2824/TP2802.c **** 		AHDcmd1=0x04;
3420:TP2824/TP2802.c **** 		AHDcmd2=0x00;
3421:TP2824/TP2802.c **** 	}
3422:TP2824/TP2802.c **** 	else if(TVI_Command==0x11)//KEY_FOCUS_FAR
 3054              		.loc 1 3422 0
 3055 0040 112B     		cmp	r3, #17
 3056 0042 69D0     		beq	.L306
3423:TP2824/TP2802.c **** 	{
3424:TP2824/TP2802.c **** 		AHDcmd1=0x01;
3425:TP2824/TP2802.c **** 		AHDcmd2=0x00;
3426:TP2824/TP2802.c **** 	}
3427:TP2824/TP2802.c **** 	else if(TVI_Command==0x10)//KEY_FOCUS_NEAR
 3057              		.loc 1 3427 0
 3058 0044 102B     		cmp	r3, #16
 3059 0046 6ED0     		beq	.L307
3428:TP2824/TP2802.c **** 	{
3429:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3430:TP2824/TP2802.c **** 		AHDcmd2=0x80;
3431:TP2824/TP2802.c **** 	}
3432:TP2824/TP2802.c **** 	else if(TVI_Command==0x13)//KEY_ZOOM_TELE
 3060              		.loc 1 3432 0
 3061 0048 132B     		cmp	r3, #19
 3062 004a 73D0     		beq	.L308
3433:TP2824/TP2802.c **** 	{
3434:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3435:TP2824/TP2802.c **** 		AHDcmd2=0x20;
3436:TP2824/TP2802.c **** 	}
3437:TP2824/TP2802.c **** 	else if(TVI_Command==0x12)//KEY_ZOOM_WIDE
 3063              		.loc 1 3437 0
 3064 004c 122B     		cmp	r3, #18
 3065 004e 78D0     		beq	.L309
3438:TP2824/TP2802.c **** 	{
3439:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3440:TP2824/TP2802.c **** 		AHDcmd2=0x40;
3441:TP2824/TP2802.c **** 	}
3442:TP2824/TP2802.c **** 	else if(TVI_Command==0x14)//KEY_MOTOR_STOP
 3066              		.loc 1 3442 0
 3067 0050 142B     		cmp	r3, #20
 3068 0052 7DD0     		beq	.L310
3443:TP2824/TP2802.c **** 	{
3444:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3445:TP2824/TP2802.c **** 		AHDcmd2=0x00;
3446:TP2824/TP2802.c **** 		AHDcmd3=0x00;
3447:TP2824/TP2802.c **** 		AHDcmd4=0x00;
3448:TP2824/TP2802.c **** 	}
3449:TP2824/TP2802.c **** 	else if(TVI_Command==0x21)//TOA  PRESET SAVE
 3069              		.loc 1 3449 0
 3070 0054 212B     		cmp	r3, #33
 3071 0056 00F08580 		beq	.L311
3450:TP2824/TP2802.c **** 	{
ARM GAS  /tmp/ccnKW75d.s 			page 120


3451:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3452:TP2824/TP2802.c **** 		AHDcmd2=0x03;
3453:TP2824/TP2802.c **** 	}
3454:TP2824/TP2802.c **** 	else if(TVI_Command==0x22)//TOA  PRESET LOAD
 3072              		.loc 1 3454 0
 3073 005a 222B     		cmp	r3, #34
 3074 005c 00F08980 		beq	.L312
3455:TP2824/TP2802.c **** 	{
3456:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3457:TP2824/TP2802.c **** 		AHDcmd2=0x07;
3458:TP2824/TP2802.c **** 	}
3459:TP2824/TP2802.c **** 	else if(TVI_Command==0x23)//TOA  Auto Scan
 3075              		.loc 1 3459 0
 3076 0060 232B     		cmp	r3, #35
 3077 0062 00F08D80 		beq	.L313
3460:TP2824/TP2802.c **** 	{
3461:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3462:TP2824/TP2802.c **** 		AHDcmd2=0x07;
3463:TP2824/TP2802.c **** 	}
3464:TP2824/TP2802.c **** 	else if(TVI_Command==0x24)//TOA  Group Tour
 3078              		.loc 1 3464 0
 3079 0066 242B     		cmp	r3, #36
 3080 0068 00F09180 		beq	.L314
3465:TP2824/TP2802.c **** 	{
3466:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3467:TP2824/TP2802.c **** 		AHDcmd2=0x07;
3468:TP2824/TP2802.c **** 	}
3469:TP2824/TP2802.c **** 	else if(TVI_Command==0x25)//TOA  OSD MENU
 3081              		.loc 1 3469 0
 3082 006c 252B     		cmp	r3, #37
 3083 006e 00F09580 		beq	.L315
3470:TP2824/TP2802.c **** 	{
3471:TP2824/TP2802.c **** //		AHDcmd1=0x00;
3472:TP2824/TP2802.c **** //		AHDcmd2=0x07;
3473:TP2824/TP2802.c **** 
3474:TP2824/TP2802.c **** 		AHDcmd1=0x02;
3475:TP2824/TP2802.c **** 		AHDcmd2=0x00;
3476:TP2824/TP2802.c **** 	}
3477:TP2824/TP2802.c **** 	else if(TVI_Command==0x26)//TOA  Focus Adjust
 3084              		.loc 1 3477 0
 3085 0072 262B     		cmp	r3, #38
 3086 0074 00F09980 		beq	.L316
 3087              	.L272:
3478:TP2824/TP2802.c **** 	{
3479:TP2824/TP2802.c **** 		AHDcmd1=0x00;
3480:TP2824/TP2802.c **** 		AHDcmd2=0x07;
3481:TP2824/TP2802.c **** 	}
3482:TP2824/TP2802.c **** 
3483:TP2824/TP2802.c **** }
 3088              		.loc 1 3483 0
 3089 0078 7047     		bx	lr
 3090              	.L295:
3368:TP2824/TP2802.c **** 		AHDcmd2=0x07;
 3091              		.loc 1 3368 0
 3092 007a 0023     		movs	r3, #0
 3093 007c 534A     		ldr	r2, .L317+20
 3094 007e 1370     		strb	r3, [r2]
ARM GAS  /tmp/ccnKW75d.s 			page 121


3369:TP2824/TP2802.c **** 		AHDcmd3=0;
 3095              		.loc 1 3369 0
 3096 0080 534A     		ldr	r2, .L317+24
 3097 0082 0721     		movs	r1, #7
 3098 0084 1170     		strb	r1, [r2]
3370:TP2824/TP2802.c **** 	}
 3099              		.loc 1 3370 0
 3100 0086 4D4A     		ldr	r2, .L317+4
 3101 0088 1370     		strb	r3, [r2]
 3102 008a 7047     		bx	lr
 3103              	.L296:
3374:TP2824/TP2802.c **** 		AHDcmd2=0x08;
 3104              		.loc 1 3374 0
 3105 008c 4F4B     		ldr	r3, .L317+20
 3106 008e 0022     		movs	r2, #0
 3107 0090 1A70     		strb	r2, [r3]
3375:TP2824/TP2802.c **** 	}
 3108              		.loc 1 3375 0
 3109 0092 4F4B     		ldr	r3, .L317+24
 3110 0094 0822     		movs	r2, #8
 3111 0096 1A70     		strb	r2, [r3]
 3112 0098 7047     		bx	lr
 3113              	.L297:
3379:TP2824/TP2802.c **** 		AHDcmd2=0x10;
 3114              		.loc 1 3379 0
 3115 009a 4C4B     		ldr	r3, .L317+20
 3116 009c 0022     		movs	r2, #0
 3117 009e 1A70     		strb	r2, [r3]
3380:TP2824/TP2802.c **** 	}
 3118              		.loc 1 3380 0
 3119 00a0 4B4B     		ldr	r3, .L317+24
 3120 00a2 1022     		movs	r2, #16
 3121 00a4 1A70     		strb	r2, [r3]
 3122 00a6 7047     		bx	lr
 3123              	.L298:
3384:TP2824/TP2802.c **** 		AHDcmd2=0x04;
 3124              		.loc 1 3384 0
 3125 00a8 484B     		ldr	r3, .L317+20
 3126 00aa 0022     		movs	r2, #0
 3127 00ac 1A70     		strb	r2, [r3]
3385:TP2824/TP2802.c **** 	}
 3128              		.loc 1 3385 0
 3129 00ae 484B     		ldr	r3, .L317+24
 3130 00b0 0422     		movs	r2, #4
 3131 00b2 1A70     		strb	r2, [r3]
 3132 00b4 7047     		bx	lr
 3133              	.L299:
3389:TP2824/TP2802.c **** 		AHDcmd2=0x02;
 3134              		.loc 1 3389 0
 3135 00b6 454B     		ldr	r3, .L317+20
 3136 00b8 0022     		movs	r2, #0
 3137 00ba 1A70     		strb	r2, [r3]
3390:TP2824/TP2802.c **** 	}		
 3138              		.loc 1 3390 0
 3139 00bc 444B     		ldr	r3, .L317+24
 3140 00be 0222     		movs	r2, #2
 3141 00c0 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccnKW75d.s 			page 122


 3142 00c2 7047     		bx	lr
 3143              	.L300:
3394:TP2824/TP2802.c **** 		AHDcmd2=0x0c;
 3144              		.loc 1 3394 0
 3145 00c4 414B     		ldr	r3, .L317+20
 3146 00c6 0022     		movs	r2, #0
 3147 00c8 1A70     		strb	r2, [r3]
3395:TP2824/TP2802.c **** 	}
 3148              		.loc 1 3395 0
 3149 00ca 414B     		ldr	r3, .L317+24
 3150 00cc 0C22     		movs	r2, #12
 3151 00ce 1A70     		strb	r2, [r3]
 3152 00d0 7047     		bx	lr
 3153              	.L301:
3399:TP2824/TP2802.c **** 		AHDcmd2=0x0a;
 3154              		.loc 1 3399 0
 3155 00d2 3E4B     		ldr	r3, .L317+20
 3156 00d4 0022     		movs	r2, #0
 3157 00d6 1A70     		strb	r2, [r3]
3400:TP2824/TP2802.c **** 	}
 3158              		.loc 1 3400 0
 3159 00d8 3D4B     		ldr	r3, .L317+24
 3160 00da 0A22     		movs	r2, #10
 3161 00dc 1A70     		strb	r2, [r3]
 3162 00de 7047     		bx	lr
 3163              	.L302:
3404:TP2824/TP2802.c **** 		AHDcmd2=0x14;
 3164              		.loc 1 3404 0
 3165 00e0 3A4B     		ldr	r3, .L317+20
 3166 00e2 0022     		movs	r2, #0
 3167 00e4 1A70     		strb	r2, [r3]
3405:TP2824/TP2802.c **** 	}
 3168              		.loc 1 3405 0
 3169 00e6 3A4B     		ldr	r3, .L317+24
 3170 00e8 1422     		movs	r2, #20
 3171 00ea 1A70     		strb	r2, [r3]
 3172 00ec 7047     		bx	lr
 3173              	.L303:
3409:TP2824/TP2802.c **** 		AHDcmd2=0x12;
 3174              		.loc 1 3409 0
 3175 00ee 374B     		ldr	r3, .L317+20
 3176 00f0 0022     		movs	r2, #0
 3177 00f2 1A70     		strb	r2, [r3]
3410:TP2824/TP2802.c **** 	}		
 3178              		.loc 1 3410 0
 3179 00f4 364B     		ldr	r3, .L317+24
 3180 00f6 1222     		movs	r2, #18
 3181 00f8 1A70     		strb	r2, [r3]
 3182 00fa 7047     		bx	lr
 3183              	.L304:
3414:TP2824/TP2802.c **** 		AHDcmd2=0x00;
 3184              		.loc 1 3414 0
 3185 00fc 334B     		ldr	r3, .L317+20
 3186 00fe 0222     		movs	r2, #2
 3187 0100 1A70     		strb	r2, [r3]
3415:TP2824/TP2802.c **** 	}
 3188              		.loc 1 3415 0
ARM GAS  /tmp/ccnKW75d.s 			page 123


 3189 0102 334B     		ldr	r3, .L317+24
 3190 0104 0022     		movs	r2, #0
 3191 0106 1A70     		strb	r2, [r3]
 3192 0108 7047     		bx	lr
 3193              	.L305:
3419:TP2824/TP2802.c **** 		AHDcmd2=0x00;
 3194              		.loc 1 3419 0
 3195 010a 304B     		ldr	r3, .L317+20
 3196 010c 0422     		movs	r2, #4
 3197 010e 1A70     		strb	r2, [r3]
3420:TP2824/TP2802.c **** 	}
 3198              		.loc 1 3420 0
 3199 0110 2F4B     		ldr	r3, .L317+24
 3200 0112 0022     		movs	r2, #0
 3201 0114 1A70     		strb	r2, [r3]
 3202 0116 7047     		bx	lr
 3203              	.L306:
3424:TP2824/TP2802.c **** 		AHDcmd2=0x00;
 3204              		.loc 1 3424 0
 3205 0118 2C4B     		ldr	r3, .L317+20
 3206 011a 0122     		movs	r2, #1
 3207 011c 1A70     		strb	r2, [r3]
3425:TP2824/TP2802.c **** 	}
 3208              		.loc 1 3425 0
 3209 011e 2C4B     		ldr	r3, .L317+24
 3210 0120 0022     		movs	r2, #0
 3211 0122 1A70     		strb	r2, [r3]
 3212 0124 7047     		bx	lr
 3213              	.L307:
3429:TP2824/TP2802.c **** 		AHDcmd2=0x80;
 3214              		.loc 1 3429 0
 3215 0126 294B     		ldr	r3, .L317+20
 3216 0128 0022     		movs	r2, #0
 3217 012a 1A70     		strb	r2, [r3]
3430:TP2824/TP2802.c **** 	}
 3218              		.loc 1 3430 0
 3219 012c 284B     		ldr	r3, .L317+24
 3220 012e 8022     		movs	r2, #128
 3221 0130 1A70     		strb	r2, [r3]
 3222 0132 7047     		bx	lr
 3223              	.L308:
3434:TP2824/TP2802.c **** 		AHDcmd2=0x20;
 3224              		.loc 1 3434 0
 3225 0134 254B     		ldr	r3, .L317+20
 3226 0136 0022     		movs	r2, #0
 3227 0138 1A70     		strb	r2, [r3]
3435:TP2824/TP2802.c **** 	}
 3228              		.loc 1 3435 0
 3229 013a 254B     		ldr	r3, .L317+24
 3230 013c 2022     		movs	r2, #32
 3231 013e 1A70     		strb	r2, [r3]
 3232 0140 7047     		bx	lr
 3233              	.L309:
3439:TP2824/TP2802.c **** 		AHDcmd2=0x40;
 3234              		.loc 1 3439 0
 3235 0142 224B     		ldr	r3, .L317+20
 3236 0144 0022     		movs	r2, #0
ARM GAS  /tmp/ccnKW75d.s 			page 124


 3237 0146 1A70     		strb	r2, [r3]
3440:TP2824/TP2802.c **** 	}
 3238              		.loc 1 3440 0
 3239 0148 214B     		ldr	r3, .L317+24
 3240 014a 4022     		movs	r2, #64
 3241 014c 1A70     		strb	r2, [r3]
 3242 014e 7047     		bx	lr
 3243              	.L310:
3444:TP2824/TP2802.c **** 		AHDcmd2=0x00;
 3244              		.loc 1 3444 0
 3245 0150 0023     		movs	r3, #0
 3246 0152 1E4A     		ldr	r2, .L317+20
 3247 0154 1370     		strb	r3, [r2]
3445:TP2824/TP2802.c **** 		AHDcmd3=0x00;
 3248              		.loc 1 3445 0
 3249 0156 1E4A     		ldr	r2, .L317+24
 3250 0158 1370     		strb	r3, [r2]
3446:TP2824/TP2802.c **** 		AHDcmd4=0x00;
 3251              		.loc 1 3446 0
 3252 015a 184A     		ldr	r2, .L317+4
 3253 015c 1370     		strb	r3, [r2]
3447:TP2824/TP2802.c **** 	}
 3254              		.loc 1 3447 0
 3255 015e 194A     		ldr	r2, .L317+12
 3256 0160 1370     		strb	r3, [r2]
 3257 0162 7047     		bx	lr
 3258              	.L311:
3451:TP2824/TP2802.c **** 		AHDcmd2=0x03;
 3259              		.loc 1 3451 0
 3260 0164 194B     		ldr	r3, .L317+20
 3261 0166 0022     		movs	r2, #0
 3262 0168 1A70     		strb	r2, [r3]
3452:TP2824/TP2802.c **** 	}
 3263              		.loc 1 3452 0
 3264 016a 194B     		ldr	r3, .L317+24
 3265 016c 0322     		movs	r2, #3
 3266 016e 1A70     		strb	r2, [r3]
 3267 0170 7047     		bx	lr
 3268              	.L312:
3456:TP2824/TP2802.c **** 		AHDcmd2=0x07;
 3269              		.loc 1 3456 0
 3270 0172 164B     		ldr	r3, .L317+20
 3271 0174 0022     		movs	r2, #0
 3272 0176 1A70     		strb	r2, [r3]
3457:TP2824/TP2802.c **** 	}
 3273              		.loc 1 3457 0
 3274 0178 154B     		ldr	r3, .L317+24
 3275 017a 0722     		movs	r2, #7
 3276 017c 1A70     		strb	r2, [r3]
 3277 017e 7047     		bx	lr
 3278              	.L313:
3461:TP2824/TP2802.c **** 		AHDcmd2=0x07;
 3279              		.loc 1 3461 0
 3280 0180 124B     		ldr	r3, .L317+20
 3281 0182 0022     		movs	r2, #0
 3282 0184 1A70     		strb	r2, [r3]
3462:TP2824/TP2802.c **** 	}
ARM GAS  /tmp/ccnKW75d.s 			page 125


 3283              		.loc 1 3462 0
 3284 0186 124B     		ldr	r3, .L317+24
 3285 0188 0722     		movs	r2, #7
 3286 018a 1A70     		strb	r2, [r3]
 3287 018c 7047     		bx	lr
 3288              	.L314:
3466:TP2824/TP2802.c **** 		AHDcmd2=0x07;
 3289              		.loc 1 3466 0
 3290 018e 0F4B     		ldr	r3, .L317+20
 3291 0190 0022     		movs	r2, #0
 3292 0192 1A70     		strb	r2, [r3]
3467:TP2824/TP2802.c **** 	}
 3293              		.loc 1 3467 0
 3294 0194 0E4B     		ldr	r3, .L317+24
 3295 0196 0722     		movs	r2, #7
 3296 0198 1A70     		strb	r2, [r3]
 3297 019a 7047     		bx	lr
 3298              	.L315:
3474:TP2824/TP2802.c **** 		AHDcmd2=0x00;
 3299              		.loc 1 3474 0
 3300 019c 0B4B     		ldr	r3, .L317+20
 3301 019e 0222     		movs	r2, #2
 3302 01a0 1A70     		strb	r2, [r3]
3475:TP2824/TP2802.c **** 	}
 3303              		.loc 1 3475 0
 3304 01a2 0B4B     		ldr	r3, .L317+24
 3305 01a4 0022     		movs	r2, #0
 3306 01a6 1A70     		strb	r2, [r3]
 3307 01a8 7047     		bx	lr
 3308              	.L316:
3479:TP2824/TP2802.c **** 		AHDcmd2=0x07;
 3309              		.loc 1 3479 0
 3310 01aa 084B     		ldr	r3, .L317+20
 3311 01ac 0022     		movs	r2, #0
 3312 01ae 1A70     		strb	r2, [r3]
3480:TP2824/TP2802.c **** 	}
 3313              		.loc 1 3480 0
 3314 01b0 074B     		ldr	r3, .L317+24
 3315 01b2 0722     		movs	r2, #7
 3316 01b4 1A70     		strb	r2, [r3]
 3317              		.loc 1 3483 0
 3318 01b6 5FE7     		b	.L272
 3319              	.L318:
 3320              		.align	2
 3321              	.L317:
 3322 01b8 00000000 		.word	TVI_speed
 3323 01bc 00000000 		.word	AHDcmd3
 3324 01c0 00000000 		.word	presetNum
 3325 01c4 00000000 		.word	AHDcmd4
 3326 01c8 00000000 		.word	TVI_Command
 3327 01cc 00000000 		.word	AHDcmd1
 3328 01d0 00000000 		.word	AHDcmd2
 3329              		.cfi_endproc
 3330              	.LFE96:
 3332              		.section	.text.ACPSTOPCOMMAND,"ax",%progbits
 3333              		.align	1
 3334              		.global	ACPSTOPCOMMAND
ARM GAS  /tmp/ccnKW75d.s 			page 126


 3335              		.syntax unified
 3336              		.thumb
 3337              		.thumb_func
 3338              		.fpu softvfp
 3340              	ACPSTOPCOMMAND:
 3341              	.LFB97:
3484:TP2824/TP2802.c **** void ACPSTOPCOMMAND(void)
3485:TP2824/TP2802.c **** {
 3342              		.loc 1 3485 0
 3343              		.cfi_startproc
 3344              		@ args = 0, pretend = 0, frame = 0
 3345              		@ frame_needed = 0, uses_anonymous_args = 0
 3346 0000 08B5     		push	{r3, lr}
 3347              	.LCFI29:
 3348              		.cfi_def_cfa_offset 8
 3349              		.cfi_offset 3, -8
 3350              		.cfi_offset 14, -4
3486:TP2824/TP2802.c **** 	//stop command
3487:TP2824/TP2802.c **** 	tp28xx_byte_write(0x5a, 0x00);
 3351              		.loc 1 3487 0
 3352 0002 0021     		movs	r1, #0
 3353 0004 5A20     		movs	r0, #90
 3354 0006 FFF7FEFF 		bl	tp28xx_byte_write
 3355              	.LVL414:
3488:TP2824/TP2802.c **** 	tp28xx_byte_write(0x60, 0x00);
 3356              		.loc 1 3488 0
 3357 000a 0021     		movs	r1, #0
 3358 000c 6020     		movs	r0, #96
 3359 000e FFF7FEFF 		bl	tp28xx_byte_write
 3360              	.LVL415:
3489:TP2824/TP2802.c **** 	tp28xx_byte_write(0x66, 0x00);
 3361              		.loc 1 3489 0
 3362 0012 0021     		movs	r1, #0
 3363 0014 6620     		movs	r0, #102
 3364 0016 FFF7FEFF 		bl	tp28xx_byte_write
 3365              	.LVL416:
3490:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6c, 0x00);
 3366              		.loc 1 3490 0
 3367 001a 0021     		movs	r1, #0
 3368 001c 6C20     		movs	r0, #108
 3369 001e FFF7FEFF 		bl	tp28xx_byte_write
 3370              	.LVL417:
3491:TP2824/TP2802.c **** 	
3492:TP2824/TP2802.c **** 	
3493:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6f, 0x45);
 3371              		.loc 1 3493 0
 3372 0022 4521     		movs	r1, #69
 3373 0024 6F20     		movs	r0, #111
 3374 0026 FFF7FEFF 		bl	tp28xx_byte_write
 3375              	.LVL418:
3494:TP2824/TP2802.c **** 	//delay(5);//50ms	//20210514
3495:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6f, 0x44);
 3376              		.loc 1 3495 0
 3377 002a 4421     		movs	r1, #68
 3378 002c 6F20     		movs	r0, #111
 3379 002e FFF7FEFF 		bl	tp28xx_byte_write
 3380              	.LVL419:
ARM GAS  /tmp/ccnKW75d.s 			page 127


3496:TP2824/TP2802.c **** 	
3497:TP2824/TP2802.c **** 	HAL_Delay(35);		 //Delay 1Vsync(~33.3msec)//20210514
 3381              		.loc 1 3497 0
 3382 0032 2320     		movs	r0, #35
 3383 0034 FFF7FEFF 		bl	HAL_Delay
 3384              	.LVL420:
3498:TP2824/TP2802.c **** 
3499:TP2824/TP2802.c **** 	//stop command
3500:TP2824/TP2802.c **** 	tp28xx_byte_write(0x5a, 0x00);
 3385              		.loc 1 3500 0
 3386 0038 0021     		movs	r1, #0
 3387 003a 5A20     		movs	r0, #90
 3388 003c FFF7FEFF 		bl	tp28xx_byte_write
 3389              	.LVL421:
3501:TP2824/TP2802.c **** 	tp28xx_byte_write(0x60, 0x00);
 3390              		.loc 1 3501 0
 3391 0040 0021     		movs	r1, #0
 3392 0042 6020     		movs	r0, #96
 3393 0044 FFF7FEFF 		bl	tp28xx_byte_write
 3394              	.LVL422:
3502:TP2824/TP2802.c **** 	tp28xx_byte_write(0x66, 0x00);
 3395              		.loc 1 3502 0
 3396 0048 0021     		movs	r1, #0
 3397 004a 6620     		movs	r0, #102
 3398 004c FFF7FEFF 		bl	tp28xx_byte_write
 3399              	.LVL423:
3503:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6c, 0x00);
 3400              		.loc 1 3503 0
 3401 0050 0021     		movs	r1, #0
 3402 0052 6C20     		movs	r0, #108
 3403 0054 FFF7FEFF 		bl	tp28xx_byte_write
 3404              	.LVL424:
3504:TP2824/TP2802.c **** 
3505:TP2824/TP2802.c **** 
3506:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6f, 0x45);
 3405              		.loc 1 3506 0
 3406 0058 4521     		movs	r1, #69
 3407 005a 6F20     		movs	r0, #111
 3408 005c FFF7FEFF 		bl	tp28xx_byte_write
 3409              	.LVL425:
3507:TP2824/TP2802.c **** 	//delay(5);//50ms	//20210514
3508:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6f, 0x44);
 3410              		.loc 1 3508 0
 3411 0060 4421     		movs	r1, #68
 3412 0062 6F20     		movs	r0, #111
 3413 0064 FFF7FEFF 		bl	tp28xx_byte_write
 3414              	.LVL426:
3509:TP2824/TP2802.c **** 
3510:TP2824/TP2802.c **** 	HAL_Delay(35);		 //Delay 1Vsync(~33.3msec)//20210514
 3415              		.loc 1 3510 0
 3416 0068 2320     		movs	r0, #35
 3417 006a FFF7FEFF 		bl	HAL_Delay
 3418              	.LVL427:
3511:TP2824/TP2802.c **** 
3512:TP2824/TP2802.c **** }
 3419              		.loc 1 3512 0
 3420 006e 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccnKW75d.s 			page 128


 3421              		.cfi_endproc
 3422              	.LFE97:
 3424              		.section	.text.Get_2824cIrq,"ax",%progbits
 3425              		.align	1
 3426              		.global	Get_2824cIrq
 3427              		.syntax unified
 3428              		.thumb
 3429              		.thumb_func
 3430              		.fpu softvfp
 3432              	Get_2824cIrq:
 3433              	.LFB98:
3513:TP2824/TP2802.c **** 	
3514:TP2824/TP2802.c **** void Get_2824cIrq(void)//cocrx
3515:TP2824/TP2802.c **** {
 3434              		.loc 1 3515 0
 3435              		.cfi_startproc
 3436              		@ args = 0, pretend = 0, frame = 0
 3437              		@ frame_needed = 0, uses_anonymous_args = 0
3516:TP2824/TP2802.c **** 	tByte addr,pcnt,RegB6;
3517:TP2824/TP2802.c **** 	//tByte temp;
3518:TP2824/TP2802.c **** /*
3519:TP2824/TP2802.c **** 	if((count[0] > (EQ_COUNT+2) && state[0] == VIDEO_LOCKED) || 
3520:TP2824/TP2802.c **** 	    (count[1] > (EQ_COUNT+2) && state[1] == VIDEO_LOCKED) || 
3521:TP2824/TP2802.c **** 	    (count[2] > (EQ_COUNT+2) && state[2] == VIDEO_LOCKED) ||
3522:TP2824/TP2802.c **** 	    (count[3] > (EQ_COUNT+2) && state[3] == VIDEO_LOCKED))
3523:TP2824/TP2802.c **** 	*/
3524:TP2824/TP2802.c **** 		if((count[0] > (EQ_COUNT+2) && state[0] == VIDEO_LOCKED))
 3438              		.loc 1 3524 0
 3439 0000 B54B     		ldr	r3, .L398
 3440 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3441 0004 162B     		cmp	r3, #22
 3442 0006 40F2D583 		bls	.L388
3515:TP2824/TP2802.c **** 	tByte addr,pcnt,RegB6;
 3443              		.loc 1 3515 0 discriminator 1
 3444 000a 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3445              	.LCFI30:
 3446              		.cfi_def_cfa_offset 24
 3447              		.cfi_offset 4, -24
 3448              		.cfi_offset 5, -20
 3449              		.cfi_offset 6, -16
 3450              		.cfi_offset 7, -12
 3451              		.cfi_offset 8, -8
 3452              		.cfi_offset 14, -4
 3453 000e 82B0     		sub	sp, sp, #8
 3454              	.LCFI31:
 3455              		.cfi_def_cfa_offset 32
 3456              		.loc 1 3524 0 discriminator 1
 3457 0010 B24B     		ldr	r3, .L398+4
 3458 0012 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 3459 0014 022E     		cmp	r6, #2
 3460 0016 02D0     		beq	.L391
 3461              	.L321:
3525:TP2824/TP2802.c ****        {       
3526:TP2824/TP2802.c ****       			 
3527:TP2824/TP2802.c **** 		SetRegPage(0x04);
3528:TP2824/TP2802.c **** 		delay(1);//5ms
3529:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccnKW75d.s 			page 129


3530:TP2824/TP2802.c **** 			RegB6=tp28xx_byte_read(0xB6);
3531:TP2824/TP2802.c **** 			tp28xx_byte_read(0xB5);
3532:TP2824/TP2802.c **** 			tp28xx_byte_read(0xB4);
3533:TP2824/TP2802.c **** 
3534:TP2824/TP2802.c **** 			#if 1
3535:TP2824/TP2802.c **** //PTZ RX	//TVI_1080P COC
3536:TP2824/TP2802.c **** 		if((RegB6&0xF0) != 0)//VnRXIRQ
3537:TP2824/TP2802.c **** 		{
3538:TP2824/TP2802.c **** 			//V4RXIRQ---
3539:TP2824/TP2802.c **** 			if((RegB6&0x80) != 0  && count[3] > (EQ_COUNT+2)/*&&(state[3] == VIDEO_LOCKED)&&std[3]==TVI && m
3540:TP2824/TP2802.c **** 			{
3541:TP2824/TP2802.c **** 				SetRegPage(0x03);
3542:TP2824/TP2802.c **** 				//delay(1);//5ms
3543:TP2824/TP2802.c **** 				pcnt=0;
3544:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)//Line1 & Line2
3545:TP2824/TP2802.c **** 				{
3546:TP2824/TP2802.c **** 					tpRxD[pcnt] = tp28xx_byte_read(addr);
3547:TP2824/TP2802.c **** 					pcnt++;
3548:TP2824/TP2802.c **** 				}
3549:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x00);
3550:TP2824/TP2802.c **** 				//delay(1);//5ms
3551:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x83);
3552:TP2824/TP2802.c **** 				
3553:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<5;pcnt++)
3554:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+1];
3555:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
3556:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+2];
3557:TP2824/TP2802.c **** 		#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3558:TP2824/TP2802.c **** 			//GraphicsPrint(CYAN,"(TP_PRES_DOWN=%02x)",(WORD)TP_PRES_DOWN); 		
3559:TP2824/TP2802.c **** 				printf("\r\nCOC4:");
3560:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
3561:TP2824/TP2802.c **** 					printf(" %02X",COCRX4[pcnt]);
3562:TP2824/TP2802.c **** 				printf(" %02X",COCRX4[9]);
3563:TP2824/TP2802.c **** 		#endif		
3564:TP2824/TP2802.c **** 				
3565:TP2824/TP2802.c **** 				//BOX on line  return 0x61, 0x01, 0x04, 0x9E,Lcd VINn=0x01 / Box CHn=0x04
3566:TP2824/TP2802.c **** 				//COC2: 02 B5 01 61 01 02 9E
3567:TP2824/TP2802.c **** 				if(COCRX4[3]==0x61 && COCRX4[9]==0x9E )
3568:TP2824/TP2802.c **** 				{
3569:TP2824/TP2802.c **** 					QuadBoxId|=8;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
3570:TP2824/TP2802.c **** 
3571:TP2824/TP2802.c **** 				#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3572:TP2824/TP2802.c **** 					printf("QuadBoxId %02x\r\n",  QuadBoxId);
3573:TP2824/TP2802.c **** 				#endif
3574:TP2824/TP2802.c **** 
3575:TP2824/TP2802.c **** 				if(COCRX4[4]==0x38 && COCRX4[5]==0x02 )
3576:TP2824/TP2802.c **** 					{
3577:TP2824/TP2802.c **** 					//Flisheye_CAM[CH4]=TRUE;					
3578:TP2824/TP2802.c **** 					//WriteEEP(EEP_FlishCAM4,TRUE);
3579:TP2824/TP2802.c **** 					//Flisheye_VLOSS_Count[CH4]=0;
3580:TP2824/TP2802.c **** 					QuadBoxId&=~(0x08);
3581:TP2824/TP2802.c **** 					}
3582:TP2824/TP2802.c **** 				}
3583:TP2824/TP2802.c **** 			}
3584:TP2824/TP2802.c **** 			
3585:TP2824/TP2802.c **** 			//V3RXIRQ---
3586:TP2824/TP2802.c **** 			if((RegB6&0x40) != 0  && count[2] > (EQ_COUNT+2)/*&&(state[2] == VIDEO_LOCKED)&&std[2]==TVI && m
ARM GAS  /tmp/ccnKW75d.s 			page 130


3587:TP2824/TP2802.c **** 			{
3588:TP2824/TP2802.c **** 				SetRegPage(0x02);
3589:TP2824/TP2802.c **** 				//delay(1);//5ms
3590:TP2824/TP2802.c **** 				
3591:TP2824/TP2802.c **** 				pcnt=0;
3592:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
3593:TP2824/TP2802.c **** 				{
3594:TP2824/TP2802.c **** 					tpRxD[pcnt] = tp28xx_byte_read(addr);
3595:TP2824/TP2802.c **** 					pcnt++;
3596:TP2824/TP2802.c **** 				}
3597:TP2824/TP2802.c **** 				
3598:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x00);
3599:TP2824/TP2802.c **** 				//delay(1);//5ms
3600:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x83);
3601:TP2824/TP2802.c **** 				
3602:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<5;pcnt++)
3603:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+1];
3604:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
3605:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+2];
3606:TP2824/TP2802.c **** 
3607:TP2824/TP2802.c **** 				#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3608:TP2824/TP2802.c **** 				printf("\r\nCOC3:");
3609:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
3610:TP2824/TP2802.c **** 					printf(" %02X",COCRX3[pcnt]);
3611:TP2824/TP2802.c **** 				printf(" %02X",COCRX3[9]);
3612:TP2824/TP2802.c **** 				#endif
3613:TP2824/TP2802.c **** 
3614:TP2824/TP2802.c **** 				//BOX on line  return 0x61, 0x01, 0x04, 0x9E,Lcd VINn=0x01 / Box CHn=0x04
3615:TP2824/TP2802.c **** 				//COC2: 02 B5 01 61 01 02 9E
3616:TP2824/TP2802.c **** 				if(COCRX3[3]==0x61 && COCRX3[9]==0x9E)
3617:TP2824/TP2802.c **** 				{
3618:TP2824/TP2802.c **** 					QuadBoxId|=4;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
3619:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3620:TP2824/TP2802.c **** 					printf("QuadBoxId %02x\r\n",  QuadBoxId);
3621:TP2824/TP2802.c **** 					#endif
3622:TP2824/TP2802.c **** 
3623:TP2824/TP2802.c **** 				if(COCRX3[4]==0x38 && COCRX3[5]==0x02 )
3624:TP2824/TP2802.c **** 					{
3625:TP2824/TP2802.c **** 					//Flisheye_CAM[CH3]=TRUE;	
3626:TP2824/TP2802.c **** 					//WriteEEP(EEP_FlishCAM3,TRUE);					
3627:TP2824/TP2802.c **** 					//Flisheye_VLOSS_Count[CH3]=0;
3628:TP2824/TP2802.c **** 					QuadBoxId&=~(0x04);
3629:TP2824/TP2802.c **** 					}
3630:TP2824/TP2802.c **** 				}	
3631:TP2824/TP2802.c **** 			}
3632:TP2824/TP2802.c **** 			
3633:TP2824/TP2802.c **** 			//V2RXIRQ---
3634:TP2824/TP2802.c **** 			if((RegB6&0x20) != 0  && count[1] > (EQ_COUNT+2)/*&&(state[1] == VIDEO_LOCKED) &&std[1]==TVI && 
3635:TP2824/TP2802.c **** 			{
3636:TP2824/TP2802.c **** 				SetRegPage(0x01);
3637:TP2824/TP2802.c **** 				//delay(1);//5ms
3638:TP2824/TP2802.c **** 				
3639:TP2824/TP2802.c **** 				pcnt=0;
3640:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
3641:TP2824/TP2802.c **** 				{
3642:TP2824/TP2802.c **** 					tpRxD[pcnt] = tp28xx_byte_read(addr);
3643:TP2824/TP2802.c **** 					pcnt++;
ARM GAS  /tmp/ccnKW75d.s 			page 131


3644:TP2824/TP2802.c **** 				}
3645:TP2824/TP2802.c **** 				
3646:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x00);
3647:TP2824/TP2802.c **** 				//delay(1);//5ms
3648:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x83);
3649:TP2824/TP2802.c **** 				
3650:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<5;pcnt++)
3651:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+1];
3652:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
3653:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+2];
3654:TP2824/TP2802.c **** 
3655:TP2824/TP2802.c **** 				#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3656:TP2824/TP2802.c **** 				printf("\r\nCOC2:");
3657:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
3658:TP2824/TP2802.c **** 					printf(" %02X",COCRX2[pcnt]);
3659:TP2824/TP2802.c **** 				printf(" %02X",COCRX2[9]);
3660:TP2824/TP2802.c **** 				#endif
3661:TP2824/TP2802.c **** 				
3662:TP2824/TP2802.c **** 				//BOX on line  return 0x61, 0x01, 0x04, 0x9E,Lcd VINn=0x01 / Box CHn=0x04
3663:TP2824/TP2802.c **** 				//COC2: 02 B5 01 61 01 02 9E
3664:TP2824/TP2802.c **** 				if(COCRX2[3]==0x61 && COCRX2[9]==0x9E )
3665:TP2824/TP2802.c **** 				{
3666:TP2824/TP2802.c **** 					QuadBoxId|=2;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
3667:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3668:TP2824/TP2802.c **** 					printf("QuadBoxId %02x\r\n",  QuadBoxId);
3669:TP2824/TP2802.c **** 					#endif
3670:TP2824/TP2802.c **** 
3671:TP2824/TP2802.c **** 				if(COCRX2[4]==0x38 && COCRX2[5]==0x02 )
3672:TP2824/TP2802.c **** 					{
3673:TP2824/TP2802.c **** 					//Flisheye_CAM[CH2]=TRUE;					
3674:TP2824/TP2802.c **** 					//WriteEEP(EEP_FlishCAM2,TRUE);
3675:TP2824/TP2802.c **** 					//Flisheye_VLOSS_Count[CH2]=0;
3676:TP2824/TP2802.c **** 					QuadBoxId&=~(0x02);
3677:TP2824/TP2802.c **** 					}
3678:TP2824/TP2802.c **** 				}	
3679:TP2824/TP2802.c **** 			}
3680:TP2824/TP2802.c **** 			
3681:TP2824/TP2802.c **** 			//V1RXIRQ---
3682:TP2824/TP2802.c **** 			if((RegB6&0x10) != 0  && count[0] > (EQ_COUNT+2)/*&&(state[0] == VIDEO_LOCKED) &&std[0]==TVI && 
3683:TP2824/TP2802.c **** 			{
3684:TP2824/TP2802.c **** 				SetRegPage(0x00);
3685:TP2824/TP2802.c **** 				//delay(1);//5ms
3686:TP2824/TP2802.c **** 				
3687:TP2824/TP2802.c **** 				pcnt=0;
3688:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
3689:TP2824/TP2802.c **** 				{
3690:TP2824/TP2802.c **** 					tpRxD[pcnt] = tp28xx_byte_read(addr);
3691:TP2824/TP2802.c **** 					pcnt++;
3692:TP2824/TP2802.c **** 				}
3693:TP2824/TP2802.c **** 				
3694:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x00);
3695:TP2824/TP2802.c **** 				//delay(1);//5ms
3696:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x83);
3697:TP2824/TP2802.c **** 				
3698:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<5;pcnt++)
3699:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+1];
3700:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
ARM GAS  /tmp/ccnKW75d.s 			page 132


3701:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+2];
3702:TP2824/TP2802.c **** 				
3703:TP2824/TP2802.c **** 				#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3704:TP2824/TP2802.c **** 				printf("\r\nCOC1:");
3705:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
3706:TP2824/TP2802.c **** 					printf(" %02X",COCRX1[pcnt]);
3707:TP2824/TP2802.c **** 				printf(" %02X",COCRX1[9]);
3708:TP2824/TP2802.c **** 				#endif
3709:TP2824/TP2802.c **** 				
3710:TP2824/TP2802.c **** 				//BOX on line  return 0x61, 0x01, 0x04, 0x9E,Lcd VINn=0x01 / Box CHn=0x04
3711:TP2824/TP2802.c **** 				//COC2: 02 B5 01 61 01 02 9E
3712:TP2824/TP2802.c **** 				if(COCRX1[3]==0x61 && COCRX1[9]==0x9E )
3713:TP2824/TP2802.c **** 				{
3714:TP2824/TP2802.c **** 					QuadBoxId|=1;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
3715:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3716:TP2824/TP2802.c **** 					printf("QuadBoxId %02x\r\n",  QuadBoxId);
3717:TP2824/TP2802.c **** 					#endif
3718:TP2824/TP2802.c **** 
3719:TP2824/TP2802.c **** 				if(COCRX1[4]==0x38 && COCRX1[5]==0x02)
3720:TP2824/TP2802.c **** 					{
3721:TP2824/TP2802.c **** 					//Flisheye_CAM[CH1]=TRUE;
3722:TP2824/TP2802.c **** 					//WriteEEP(EEP_FlishCAM1,TRUE);
3723:TP2824/TP2802.c **** 					//Flisheye_VLOSS_Count[CH1]=0;
3724:TP2824/TP2802.c **** 					QuadBoxId&=~(0x01);
3725:TP2824/TP2802.c **** 					}
3726:TP2824/TP2802.c **** 				}	
3727:TP2824/TP2802.c **** 			}		
3728:TP2824/TP2802.c **** 			//printf("\r\n");
3729:TP2824/TP2802.c **** 			
3730:TP2824/TP2802.c **** 		}
3731:TP2824/TP2802.c **** 		#endif
3732:TP2824/TP2802.c **** //PTZ TX	
3733:TP2824/TP2802.c **** 		//else
3734:TP2824/TP2802.c **** 		if(ptztxflag==1)//no any RXIRQ
3735:TP2824/TP2802.c **** 		{
3736:TP2824/TP2802.c **** 			if( TVI == std[PtzTxChNum] )
3737:TP2824/TP2802.c **** 			{
3738:TP2824/TP2802.c **** 				if(mode[PtzTxChNum]==NTSC || mode[PtzTxChNum]==PAL)
3739:TP2824/TP2802.c **** 					{
3740:TP2824/TP2802.c **** 						tByte cmd1=0,cmd2=0,dat1=0,dat2=0;
3741:TP2824/TP2802.c **** 						
3742:TP2824/TP2802.c **** 						dat1=(tByte)TVI_speed;
3743:TP2824/TP2802.c **** 						dat2=(tByte)presetNum;
3744:TP2824/TP2802.c **** 						
3745:TP2824/TP2802.c **** 						if(TVI_Command==0x0F)//SET//Iris +
3746:TP2824/TP2802.c **** 							cmd1=0x02;
3747:TP2824/TP2802.c **** 						else if(TVI_Command==0x0E)//Iris -
3748:TP2824/TP2802.c **** 							cmd1=0x04;
3749:TP2824/TP2802.c **** 						else if(TVI_Command==0x10)//Focus -
3750:TP2824/TP2802.c **** 							cmd1=0x01;
3751:TP2824/TP2802.c **** 						else if(TVI_Command==0x11)//Focus +
3752:TP2824/TP2802.c **** 							cmd2=0x80;
3753:TP2824/TP2802.c **** 						else if(TVI_Command==0x12)//Zoom -
3754:TP2824/TP2802.c **** 							cmd2=0x40;
3755:TP2824/TP2802.c **** 						else if(TVI_Command==0x13)//Zoom +
3756:TP2824/TP2802.c **** 							cmd2=0x20;
3757:TP2824/TP2802.c **** 						else if(TVI_Command==0x06)//up
ARM GAS  /tmp/ccnKW75d.s 			page 133


3758:TP2824/TP2802.c **** 							cmd2=0x08;
3759:TP2824/TP2802.c **** 						else if(TVI_Command==0x07)//down
3760:TP2824/TP2802.c **** 							cmd2=0x10;
3761:TP2824/TP2802.c **** 						else if(TVI_Command==0x09)//left
3762:TP2824/TP2802.c **** 							cmd2=0x04;
3763:TP2824/TP2802.c **** 						else if(TVI_Command==0x08)//right
3764:TP2824/TP2802.c **** 							cmd2=0x02;
3765:TP2824/TP2802.c **** 						else if(TVI_Command==0x0A)//up + left
3766:TP2824/TP2802.c **** 							cmd2=0x0c;
3767:TP2824/TP2802.c **** 						else if(TVI_Command==0x0C)//up + right
3768:TP2824/TP2802.c **** 							cmd2=0x0a;
3769:TP2824/TP2802.c **** 						else if(TVI_Command==0x0B)//down + left
3770:TP2824/TP2802.c **** 							cmd2=0x14;
3771:TP2824/TP2802.c **** 						else if(TVI_Command==0x0D)//down + right
3772:TP2824/TP2802.c **** 							cmd2=0x12;
3773:TP2824/TP2802.c **** 						else if(TVI_Command==0x17)//PRESET x
3774:TP2824/TP2802.c **** 						{
3775:TP2824/TP2802.c **** 							cmd2=0x07;
3776:TP2824/TP2802.c **** 							dat1=0;
3777:TP2824/TP2802.c **** 							dat2=(tByte)presetNum;
3778:TP2824/TP2802.c **** 						}
3779:TP2824/TP2802.c **** 						//set:0x0f / dn:0x06 / up:0x07 / L:0x13 / R:0x12
3780:TP2824/TP2802.c **** 						cmd1=AHDBitsReverse(cmd1);//20200413
3781:TP2824/TP2802.c **** 						cmd2=AHDBitsReverse(cmd2);//20200413
3782:TP2824/TP2802.c **** 						dat1=AHDBitsReverse(dat1);//20200413
3783:TP2824/TP2802.c **** 						dat2=AHDBitsReverse(dat2);//20200413
3784:TP2824/TP2802.c **** 						
3785:TP2824/TP2802.c **** 						SetRegPage(PtzTxChNum);		                    
3786:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5a, cmd1);//command byte 1
3787:TP2824/TP2802.c **** 						tp28xx_byte_write(0x59, cmd2);//command byte 2
3788:TP2824/TP2802.c **** 
3789:TP2824/TP2802.c **** 						tp28xx_byte_write(0x60, dat1);//data byte 1
3790:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5f, dat2);//data byte 2
3791:TP2824/TP2802.c **** 
3792:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x61);
3793:TP2824/TP2802.c **** 						delay(10);//50ms
3794:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x60);
3795:TP2824/TP2802.c **** 						printf("CVBS-Tx %x,%x,%x,%x\n",cmd1,cmd2,dat1,dat2);
3796:TP2824/TP2802.c **** 
3797:TP2824/TP2802.c **** 					}
3798:TP2824/TP2802.c **** 					else//1080P
3799:TP2824/TP2802.c **** 					{
3800:TP2824/TP2802.c **** 						SetRegPage(PtzTxChNum);		                    
3801:TP2824/TP2802.c **** 						tp28xx_byte_write(0x59, (tByte)TVI_Command);
3802:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5a, (tByte)presetNum);
3803:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5d, (tByte)TVI_speed);//0x5f  check this????
3804:TP2824/TP2802.c **** 						tp28xx_byte_write(0x60, (tByte)TVI_Chksum);
3805:TP2824/TP2802.c **** 						
3806:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x41);
3807:TP2824/TP2802.c **** 						delay(10);//50ms
3808:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x40);
3809:TP2824/TP2802.c **** 						printf("TVI-Tx %x,%x,%x\n",TVI_Command,presetNum,TVI_speed);
3810:TP2824/TP2802.c **** 					}
3811:TP2824/TP2802.c **** 					
3812:TP2824/TP2802.c **** 					ptztxflag=0;
3813:TP2824/TP2802.c **** 				}
3814:TP2824/TP2802.c **** 			if( HDC == std[PtzTxChNum] )//1080P / 720P
ARM GAS  /tmp/ccnKW75d.s 			page 134


3815:TP2824/TP2802.c **** 				{
3816:TP2824/TP2802.c **** 					SetRegPage(PtzTxChNum);	
3817:TP2824/TP2802.c **** 
3818:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6e, 0xA5);
3819:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6e, 0x02);
3820:TP2824/TP2802.c **** 					switch(TVI_Command)
3821:TP2824/TP2802.c **** 					{
3822:TP2824/TP2802.c **** 						case 0x0F://SET//Iris +
3823:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x50);
3824:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3825:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3826:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3827:TP2824/TP2802.c **** 							break;
3828:TP2824/TP2802.c **** 							
3829:TP2824/TP2802.c **** 						case 0x06://up
3830:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x08);
3831:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3832:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
3833:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3834:TP2824/TP2802.c **** 							break;
3835:TP2824/TP2802.c **** 							
3836:TP2824/TP2802.c **** 						case 0x07://down
3837:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x04);
3838:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3839:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
3840:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3841:TP2824/TP2802.c **** 							break;
3842:TP2824/TP2802.c **** 							
3843:TP2824/TP2802.c **** 						case 0x09://left
3844:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x02);
3845:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
3846:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3847:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3848:TP2824/TP2802.c **** 							break;
3849:TP2824/TP2802.c **** 							
3850:TP2824/TP2802.c **** 						case 0x08://right
3851:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x01);
3852:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
3853:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3854:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3855:TP2824/TP2802.c **** 							break;
3856:TP2824/TP2802.c **** 							
3857:TP2824/TP2802.c **** 						default:	
3858:TP2824/TP2802.c **** 						case 0x14://STOP
3859:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3860:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3861:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3862:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
3863:TP2824/TP2802.c **** 							break;
3864:TP2824/TP2802.c **** 					}
3865:TP2824/TP2802.c **** 					
3866:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x49);
3867:TP2824/TP2802.c **** 					delay(5);//50ms
3868:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x48);
3869:TP2824/TP2802.c **** 					ptztxflag=0;
3870:TP2824/TP2802.c **** 					printf("CVI-Tx %x\n",TVI_Command);
3871:TP2824/TP2802.c **** 				}
ARM GAS  /tmp/ccnKW75d.s 			page 135


3872:TP2824/TP2802.c **** 			if( HDA == std[PtzTxChNum] )//1080P / 720P
3873:TP2824/TP2802.c **** 			{
3874:TP2824/TP2802.c **** 
3875:TP2824/TP2802.c **** 					TVICommandToAHData();
3876:TP2824/TP2802.c **** 				
3877:TP2824/TP2802.c **** 				  	SetRegPage(PtzTxChNum);		
3878:TP2824/TP2802.c **** 					//SetRegPage(0x04);	
3879:TP2824/TP2802.c **** 				
3880:TP2824/TP2802.c **** #if 1
3881:TP2824/TP2802.c **** 				//	if(TVI_Command==0x22)//TOA  PRESET LOAD
3882:TP2824/TP2802.c **** 				//	ACPSTOPCOMMAND();
3883:TP2824/TP2802.c **** 
3884:TP2824/TP2802.c **** 					//stop command
3885:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a, 0x00);
3886:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, 0x00);
3887:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, 0x00);
3888:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, 0x00);
3889:TP2824/TP2802.c **** 					
3890:TP2824/TP2802.c **** 					
3891:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x45);
3892:TP2824/TP2802.c **** 					//delay(5);//50ms	//20210514
3893:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x44);
3894:TP2824/TP2802.c **** 					
3895:TP2824/TP2802.c **** 					HAL_Delay(35);       //Delay 1Vsync(~33.3msec)//20210514
3896:TP2824/TP2802.c **** 			
3897:TP2824/TP2802.c **** 					//command data
3898:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a, AHDBitsReverse(AHDcmd1));
3899:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, AHDBitsReverse(AHDcmd2));
3900:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, AHDBitsReverse(AHDcmd3));
3901:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, AHDBitsReverse(AHDcmd4));
3902:TP2824/TP2802.c **** 				
3903:TP2824/TP2802.c **** 
3904:TP2824/TP2802.c **** 					
3905:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x45);
3906:TP2824/TP2802.c **** 					//delay(5);//50ms	//20210514
3907:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x44);
3908:TP2824/TP2802.c **** 				
3909:TP2824/TP2802.c **** 					HAL_Delay(35);	 //Delay 1Vsync(~33.3msec)//20210514
3910:TP2824/TP2802.c **** 
3911:TP2824/TP2802.c **** 
3912:TP2824/TP2802.c **** #else
3913:TP2824/TP2802.c **** #if 0				
3914:TP2824/TP2802.c **** 					#if 0
3915:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a, 0xFF);
3916:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, 0xFF);
3917:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, 0xFF);
3918:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, 0xFF);
3919:TP2824/TP2802.c **** 					#else
3920:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a, 0x00);
3921:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, 0x00);
3922:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, 0x00);
3923:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, 0x00);
3924:TP2824/TP2802.c **** 					#endif
3925:TP2824/TP2802.c **** 					
3926:TP2824/TP2802.c **** 					#if 1
3927:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x45);
3928:TP2824/TP2802.c **** 					delay(5);//50ms
ARM GAS  /tmp/ccnKW75d.s 			page 136


3929:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x44);
3930:TP2824/TP2802.c **** 					#else
3931:TP2824/TP2802.c **** 					Set_Mirror_COC();	
3932:TP2824/TP2802.c **** 					#endif
3933:TP2824/TP2802.c **** 
3934:TP2824/TP2802.c **** #endif				
3935:TP2824/TP2802.c **** 					//command data
3936:TP2824/TP2802.c **** 					#if 0
3937:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a,(AHDBitsReverse (AHDcmd1)));
3938:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60,( AHDBitsReverse(AHDcmd2)));
3939:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66,(AHDBitsReverse(AHDcmd3)));
3940:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c,(AHDBitsReverse(AHDcmd4)));
3941:TP2824/TP2802.c **** 					#else
3942:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a, AHDBitsReverse(AHDcmd1));
3943:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, AHDBitsReverse(AHDcmd2));
3944:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, AHDBitsReverse(AHDcmd3));
3945:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, AHDBitsReverse(AHDcmd4));
3946:TP2824/TP2802.c **** 					#endif
3947:TP2824/TP2802.c **** 
3948:TP2824/TP2802.c **** 					#if 1
3949:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x45);
3950:TP2824/TP2802.c **** 					delay(5);//50ms
3951:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x44);
3952:TP2824/TP2802.c **** 					#else
3953:TP2824/TP2802.c **** 					Set_Mirror_COC();	
3954:TP2824/TP2802.c **** 					#endif
3955:TP2824/TP2802.c **** #endif					
3956:TP2824/TP2802.c **** 					ptztxflag=0;
3957:TP2824/TP2802.c **** 				//printf("~AHD %x,%x,%x,%x\n",AHDBitsReverse(AHDcmd1),AHDBitsReverse(0xF1),AHDBitsReverse(0x02)
3958:TP2824/TP2802.c **** 			
3959:TP2824/TP2802.c **** 				Printf("AHD %02x,%02x,%02x to ",(WORD)TVI_Command,(WORD)presetNum,(WORD)TVI_speed);
3960:TP2824/TP2802.c **** 				Printf("Tx %02x,%02x,%02x,%02x",(WORD)AHDcmd1,(WORD)AHDcmd2,(WORD)AHDcmd3,(WORD)AHDcmd4);
3961:TP2824/TP2802.c **** 				}
3962:TP2824/TP2802.c **** 				ptztxflag=0;
3963:TP2824/TP2802.c **** 			}
3964:TP2824/TP2802.c **** 		}
3965:TP2824/TP2802.c **** }
 3462              		.loc 1 3965 0
 3463 0018 02B0     		add	sp, sp, #8
 3464              	.LCFI32:
 3465              		.cfi_remember_state
 3466              		.cfi_def_cfa_offset 24
 3467              		@ sp needed
 3468 001a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3469              	.L391:
 3470              	.LCFI33:
 3471              		.cfi_restore_state
3527:TP2824/TP2802.c **** 		delay(1);//5ms
 3472              		.loc 1 3527 0
 3473 001e 0420     		movs	r0, #4
 3474 0020 FFF7FEFF 		bl	SetRegPage
 3475              	.LVL428:
3528:TP2824/TP2802.c **** 
 3476              		.loc 1 3528 0
 3477 0024 0120     		movs	r0, #1
 3478 0026 FFF7FEFF 		bl	delay
 3479              	.LVL429:
ARM GAS  /tmp/ccnKW75d.s 			page 137


3530:TP2824/TP2802.c **** 			tp28xx_byte_read(0xB5);
 3480              		.loc 1 3530 0
 3481 002a B620     		movs	r0, #182
 3482 002c FFF7FEFF 		bl	tp28xx_byte_read
 3483              	.LVL430:
 3484 0030 0746     		mov	r7, r0
 3485              	.LVL431:
3531:TP2824/TP2802.c **** 			tp28xx_byte_read(0xB4);
 3486              		.loc 1 3531 0
 3487 0032 B520     		movs	r0, #181
 3488 0034 FFF7FEFF 		bl	tp28xx_byte_read
 3489              	.LVL432:
3532:TP2824/TP2802.c **** 
 3490              		.loc 1 3532 0
 3491 0038 B420     		movs	r0, #180
 3492 003a FFF7FEFF 		bl	tp28xx_byte_read
 3493              	.LVL433:
3536:TP2824/TP2802.c **** 		{
 3494              		.loc 1 3536 0
 3495 003e 17F0F00F 		tst	r7, #240
 3496 0042 1AD0     		beq	.L323
3539:TP2824/TP2802.c **** 			{
 3497              		.loc 1 3539 0
 3498 0044 17F0800F 		tst	r7, #128
 3499 0048 5FD1     		bne	.L392
 3500              	.L324:
3586:TP2824/TP2802.c **** 			{
 3501              		.loc 1 3586 0
 3502 004a 17F0400F 		tst	r7, #64
 3503 004e 04D0     		beq	.L333
3586:TP2824/TP2802.c **** 			{
 3504              		.loc 1 3586 0 is_stmt 0 discriminator 1
 3505 0050 A14B     		ldr	r3, .L398
 3506 0052 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3507 0054 162B     		cmp	r3, #22
 3508 0056 00F2BB80 		bhi	.L393
 3509              	.L333:
3634:TP2824/TP2802.c **** 			{
 3510              		.loc 1 3634 0 is_stmt 1
 3511 005a 17F0200F 		tst	r7, #32
 3512 005e 04D0     		beq	.L342
3634:TP2824/TP2802.c **** 			{
 3513              		.loc 1 3634 0 is_stmt 0 discriminator 1
 3514 0060 9D4B     		ldr	r3, .L398
 3515 0062 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3516 0064 162B     		cmp	r3, #22
 3517 0066 00F21281 		bhi	.L394
 3518              	.L342:
3682:TP2824/TP2802.c **** 			{
 3519              		.loc 1 3682 0 is_stmt 1
 3520 006a 17F0100F 		tst	r7, #16
 3521 006e 04D0     		beq	.L323
3682:TP2824/TP2802.c **** 			{
 3522              		.loc 1 3682 0 is_stmt 0 discriminator 1
 3523 0070 994B     		ldr	r3, .L398
 3524 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3525 0074 162B     		cmp	r3, #22
ARM GAS  /tmp/ccnKW75d.s 			page 138


 3526 0076 00F28D81 		bhi	.L395
 3527              	.L323:
3734:TP2824/TP2802.c **** 		{
 3528              		.loc 1 3734 0 is_stmt 1
 3529 007a 994B     		ldr	r3, .L398+8
 3530 007c 1B68     		ldr	r3, [r3]
 3531 007e 012B     		cmp	r3, #1
 3532 0080 CAD1     		bne	.L321
3736:TP2824/TP2802.c **** 			{
 3533              		.loc 1 3736 0
 3534 0082 984B     		ldr	r3, .L398+12
 3535 0084 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 3536 0086 984B     		ldr	r3, .L398+16
 3537 0088 1D5D     		ldrb	r5, [r3, r4]	@ zero_extendqisi2
 3538 008a 002D     		cmp	r5, #0
 3539 008c 40F01B82 		bne	.L359
3738:TP2824/TP2802.c **** 					{
 3540              		.loc 1 3738 0
 3541 0090 964B     		ldr	r3, .L398+20
 3542 0092 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 3543 0094 083B     		subs	r3, r3, #8
 3544 0096 DBB2     		uxtb	r3, r3
 3545 0098 012B     		cmp	r3, #1
 3546 009a 00F24D82 		bhi	.L360
 3547              	.LVL434:
 3548              	.LBB2:
3742:TP2824/TP2802.c **** 						dat2=(tByte)presetNum;
 3549              		.loc 1 3742 0
 3550 009e 944B     		ldr	r3, .L398+24
 3551 00a0 1F78     		ldrb	r7, [r3]	@ zero_extendqisi2
 3552              	.LVL435:
3743:TP2824/TP2802.c **** 						
 3553              		.loc 1 3743 0
 3554 00a2 944B     		ldr	r3, .L398+28
 3555 00a4 93F80080 		ldrb	r8, [r3]	@ zero_extendqisi2
 3556              	.LVL436:
3745:TP2824/TP2802.c **** 							cmd1=0x02;
 3557              		.loc 1 3745 0
 3558 00a8 934B     		ldr	r3, .L398+32
 3559 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3560 00ac 0F2B     		cmp	r3, #15
 3561 00ae 00F0D181 		beq	.L361
3747:TP2824/TP2802.c **** 							cmd1=0x04;
 3562              		.loc 1 3747 0
 3563 00b2 0E2B     		cmp	r3, #14
 3564 00b4 00F0CD81 		beq	.L373
3749:TP2824/TP2802.c **** 							cmd1=0x01;
 3565              		.loc 1 3749 0
 3566 00b8 102B     		cmp	r3, #16
 3567 00ba 00F01582 		beq	.L374
3751:TP2824/TP2802.c **** 							cmd2=0x80;
 3568              		.loc 1 3751 0
 3569 00be 112B     		cmp	r3, #17
 3570 00c0 00F01482 		beq	.L375
3753:TP2824/TP2802.c **** 							cmd2=0x40;
 3571              		.loc 1 3753 0
 3572 00c4 122B     		cmp	r3, #18
ARM GAS  /tmp/ccnKW75d.s 			page 139


 3573 00c6 00F01482 		beq	.L376
3755:TP2824/TP2802.c **** 							cmd2=0x20;
 3574              		.loc 1 3755 0
 3575 00ca 132B     		cmp	r3, #19
 3576 00cc 00F01482 		beq	.L377
3757:TP2824/TP2802.c **** 							cmd2=0x08;
 3577              		.loc 1 3757 0
 3578 00d0 062B     		cmp	r3, #6
 3579 00d2 00F01482 		beq	.L378
3759:TP2824/TP2802.c **** 							cmd2=0x10;
 3580              		.loc 1 3759 0
 3581 00d6 072B     		cmp	r3, #7
 3582 00d8 00F01482 		beq	.L379
3761:TP2824/TP2802.c **** 							cmd2=0x04;
 3583              		.loc 1 3761 0
 3584 00dc 092B     		cmp	r3, #9
 3585 00de 00F01482 		beq	.L380
3763:TP2824/TP2802.c **** 							cmd2=0x02;
 3586              		.loc 1 3763 0
 3587 00e2 082B     		cmp	r3, #8
 3588 00e4 00F01482 		beq	.L381
3765:TP2824/TP2802.c **** 							cmd2=0x0c;
 3589              		.loc 1 3765 0
 3590 00e8 0A2B     		cmp	r3, #10
 3591 00ea 00F01582 		beq	.L382
3767:TP2824/TP2802.c **** 							cmd2=0x0a;
 3592              		.loc 1 3767 0
 3593 00ee 0C2B     		cmp	r3, #12
 3594 00f0 00F01582 		beq	.L383
3769:TP2824/TP2802.c **** 							cmd2=0x14;
 3595              		.loc 1 3769 0
 3596 00f4 0B2B     		cmp	r3, #11
 3597 00f6 00F01582 		beq	.L384
3771:TP2824/TP2802.c **** 							cmd2=0x12;
 3598              		.loc 1 3771 0
 3599 00fa 0D2B     		cmp	r3, #13
 3600 00fc 00F01582 		beq	.L385
3773:TP2824/TP2802.c **** 						{
 3601              		.loc 1 3773 0
 3602 0100 172B     		cmp	r3, #23
 3603 0102 00F01582 		beq	.L386
3740:TP2824/TP2802.c **** 						
 3604              		.loc 1 3740 0
 3605 0106 2E46     		mov	r6, r5
 3606 0108 A4E1     		b	.L361
 3607              	.LVL437:
 3608              	.L392:
 3609              	.LBE2:
3539:TP2824/TP2802.c **** 			{
 3610              		.loc 1 3539 0 discriminator 1
 3611 010a 734B     		ldr	r3, .L398
 3612 010c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3613 010e 162B     		cmp	r3, #22
 3614 0110 9BD9     		bls	.L324
3541:TP2824/TP2802.c **** 				//delay(1);//5ms
 3615              		.loc 1 3541 0
 3616 0112 0320     		movs	r0, #3
ARM GAS  /tmp/ccnKW75d.s 			page 140


 3617 0114 FFF7FEFF 		bl	SetRegPage
 3618              	.LVL438:
3543:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)//Line1 & Line2
 3619              		.loc 1 3543 0
 3620 0118 0025     		movs	r5, #0
3544:TP2824/TP2802.c **** 				{
 3621              		.loc 1 3544 0
 3622 011a 8A24     		movs	r4, #138
 3623 011c 08E0     		b	.L325
 3624              	.LVL439:
 3625              	.L326:
3546:TP2824/TP2802.c **** 					pcnt++;
 3626              		.loc 1 3546 0 discriminator 3
 3627 011e 2046     		mov	r0, r4
 3628 0120 FFF7FEFF 		bl	tp28xx_byte_read
 3629              	.LVL440:
 3630 0124 754B     		ldr	r3, .L398+36
 3631 0126 5855     		strb	r0, [r3, r5]
3547:TP2824/TP2802.c **** 				}
 3632              		.loc 1 3547 0 discriminator 3
 3633 0128 0135     		adds	r5, r5, #1
 3634              	.LVL441:
 3635 012a EDB2     		uxtb	r5, r5
 3636              	.LVL442:
3544:TP2824/TP2802.c **** 				{
 3637              		.loc 1 3544 0 discriminator 3
 3638 012c 0134     		adds	r4, r4, #1
 3639              	.LVL443:
 3640 012e E4B2     		uxtb	r4, r4
 3641              	.LVL444:
 3642              	.L325:
3544:TP2824/TP2802.c **** 				{
 3643              		.loc 1 3544 0 is_stmt 0 discriminator 1
 3644 0130 A12C     		cmp	r4, #161
 3645 0132 F4D9     		bls	.L326
3549:TP2824/TP2802.c **** 				//delay(1);//5ms
 3646              		.loc 1 3549 0 is_stmt 1
 3647 0134 0021     		movs	r1, #0
 3648 0136 A720     		movs	r0, #167
 3649 0138 FFF7FEFF 		bl	tp28xx_byte_write
 3650              	.LVL445:
3551:TP2824/TP2802.c **** 				
 3651              		.loc 1 3551 0
 3652 013c 8321     		movs	r1, #131
 3653 013e A720     		movs	r0, #167
 3654 0140 FFF7FEFF 		bl	tp28xx_byte_write
 3655              	.LVL446:
3553:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+1];
 3656              		.loc 1 3553 0
 3657 0144 0023     		movs	r3, #0
 3658 0146 05E0     		b	.L327
 3659              	.LVL447:
 3660              	.L328:
3554:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
 3661              		.loc 1 3554 0 discriminator 3
 3662 0148 5A1C     		adds	r2, r3, #1
 3663 014a 6C49     		ldr	r1, .L398+36
ARM GAS  /tmp/ccnKW75d.s 			page 141


 3664 014c 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 3665 014e 6C49     		ldr	r1, .L398+40
 3666 0150 C854     		strb	r0, [r1, r3]
3553:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+1];
 3667              		.loc 1 3553 0 discriminator 3
 3668 0152 D3B2     		uxtb	r3, r2
 3669              	.LVL448:
 3670              	.L327:
3553:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+1];
 3671              		.loc 1 3553 0 is_stmt 0 discriminator 1
 3672 0154 042B     		cmp	r3, #4
 3673 0156 F7D9     		bls	.L328
3555:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+2];
 3674              		.loc 1 3555 0 is_stmt 1
 3675 0158 0523     		movs	r3, #5
 3676              	.LVL449:
 3677 015a 06E0     		b	.L329
 3678              	.LVL450:
 3679              	.L330:
3556:TP2824/TP2802.c **** 		#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
 3680              		.loc 1 3556 0 discriminator 3
 3681 015c 9A1C     		adds	r2, r3, #2
 3682 015e 6749     		ldr	r1, .L398+36
 3683 0160 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3684 0162 674A     		ldr	r2, .L398+40
 3685 0164 D154     		strb	r1, [r2, r3]
3555:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+2];
 3686              		.loc 1 3555 0 discriminator 3
 3687 0166 0133     		adds	r3, r3, #1
 3688              	.LVL451:
 3689 0168 DBB2     		uxtb	r3, r3
 3690              	.LVL452:
 3691              	.L329:
3555:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+2];
 3692              		.loc 1 3555 0 is_stmt 0 discriminator 1
 3693 016a 092B     		cmp	r3, #9
 3694 016c F6D9     		bls	.L330
3559:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 3695              		.loc 1 3559 0 is_stmt 1
 3696 016e 6548     		ldr	r0, .L398+44
 3697 0170 FFF7FEFF 		bl	printf
 3698              	.LVL453:
3560:TP2824/TP2802.c **** 					printf(" %02X",COCRX4[pcnt]);
 3699              		.loc 1 3560 0
 3700 0174 0024     		movs	r4, #0
 3701              	.LVL454:
 3702 0176 06E0     		b	.L331
 3703              	.LVL455:
 3704              	.L332:
3561:TP2824/TP2802.c **** 				printf(" %02X",COCRX4[9]);
 3705              		.loc 1 3561 0 discriminator 3
 3706 0178 614B     		ldr	r3, .L398+40
 3707 017a 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 3708 017c 6248     		ldr	r0, .L398+48
 3709 017e FFF7FEFF 		bl	printf
 3710              	.LVL456:
3560:TP2824/TP2802.c **** 					printf(" %02X",COCRX4[pcnt]);
ARM GAS  /tmp/ccnKW75d.s 			page 142


 3711              		.loc 1 3560 0 discriminator 3
 3712 0182 0134     		adds	r4, r4, #1
 3713              	.LVL457:
 3714 0184 E4B2     		uxtb	r4, r4
 3715              	.LVL458:
 3716              	.L331:
3560:TP2824/TP2802.c **** 					printf(" %02X",COCRX4[pcnt]);
 3717              		.loc 1 3560 0 is_stmt 0 discriminator 1
 3718 0186 052C     		cmp	r4, #5
 3719 0188 F6D9     		bls	.L332
3562:TP2824/TP2802.c **** 		#endif		
 3720              		.loc 1 3562 0 is_stmt 1
 3721 018a 5D4C     		ldr	r4, .L398+40
 3722              	.LVL459:
 3723 018c 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 3724 018e 5E48     		ldr	r0, .L398+48
 3725 0190 FFF7FEFF 		bl	printf
 3726              	.LVL460:
3567:TP2824/TP2802.c **** 				{
 3727              		.loc 1 3567 0
 3728 0194 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 3729 0196 612B     		cmp	r3, #97
 3730 0198 7FF457AF 		bne	.L324
3567:TP2824/TP2802.c **** 				{
 3731              		.loc 1 3567 0 is_stmt 0 discriminator 1
 3732 019c 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 3733 019e 9E2B     		cmp	r3, #158
 3734 01a0 7FF453AF 		bne	.L324
3569:TP2824/TP2802.c **** 
 3735              		.loc 1 3569 0 is_stmt 1
 3736 01a4 594B     		ldr	r3, .L398+52
 3737 01a6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3738 01a8 41F00801 		orr	r1, r1, #8
 3739 01ac 1970     		strb	r1, [r3]
3572:TP2824/TP2802.c **** 				#endif
 3740              		.loc 1 3572 0
 3741 01ae 5848     		ldr	r0, .L398+56
 3742 01b0 FFF7FEFF 		bl	printf
 3743              	.LVL461:
3575:TP2824/TP2802.c **** 					{
 3744              		.loc 1 3575 0
 3745 01b4 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3746 01b6 382B     		cmp	r3, #56
 3747 01b8 7FF447AF 		bne	.L324
3575:TP2824/TP2802.c **** 					{
 3748              		.loc 1 3575 0 is_stmt 0 discriminator 1
 3749 01bc 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 3750 01be 022B     		cmp	r3, #2
 3751 01c0 7FF443AF 		bne	.L324
3580:TP2824/TP2802.c **** 					}
 3752              		.loc 1 3580 0 is_stmt 1
 3753 01c4 514A     		ldr	r2, .L398+52
 3754 01c6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3755 01c8 23F00803 		bic	r3, r3, #8
 3756 01cc 1370     		strb	r3, [r2]
 3757 01ce 3CE7     		b	.L324
 3758              	.L393:
ARM GAS  /tmp/ccnKW75d.s 			page 143


3588:TP2824/TP2802.c **** 				//delay(1);//5ms
 3759              		.loc 1 3588 0
 3760 01d0 0220     		movs	r0, #2
 3761 01d2 FFF7FEFF 		bl	SetRegPage
 3762              	.LVL462:
3591:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
 3763              		.loc 1 3591 0
 3764 01d6 0025     		movs	r5, #0
3592:TP2824/TP2802.c **** 				{
 3765              		.loc 1 3592 0
 3766 01d8 8A24     		movs	r4, #138
 3767 01da 08E0     		b	.L334
 3768              	.LVL463:
 3769              	.L335:
3594:TP2824/TP2802.c **** 					pcnt++;
 3770              		.loc 1 3594 0 discriminator 3
 3771 01dc 2046     		mov	r0, r4
 3772 01de FFF7FEFF 		bl	tp28xx_byte_read
 3773              	.LVL464:
 3774 01e2 464B     		ldr	r3, .L398+36
 3775 01e4 5855     		strb	r0, [r3, r5]
3595:TP2824/TP2802.c **** 				}
 3776              		.loc 1 3595 0 discriminator 3
 3777 01e6 0135     		adds	r5, r5, #1
 3778              	.LVL465:
 3779 01e8 EDB2     		uxtb	r5, r5
 3780              	.LVL466:
3592:TP2824/TP2802.c **** 				{
 3781              		.loc 1 3592 0 discriminator 3
 3782 01ea 0134     		adds	r4, r4, #1
 3783              	.LVL467:
 3784 01ec E4B2     		uxtb	r4, r4
 3785              	.LVL468:
 3786              	.L334:
3592:TP2824/TP2802.c **** 				{
 3787              		.loc 1 3592 0 is_stmt 0 discriminator 1
 3788 01ee A12C     		cmp	r4, #161
 3789 01f0 F4D9     		bls	.L335
3598:TP2824/TP2802.c **** 				//delay(1);//5ms
 3790              		.loc 1 3598 0 is_stmt 1
 3791 01f2 0021     		movs	r1, #0
 3792 01f4 A720     		movs	r0, #167
 3793 01f6 FFF7FEFF 		bl	tp28xx_byte_write
 3794              	.LVL469:
3600:TP2824/TP2802.c **** 				
 3795              		.loc 1 3600 0
 3796 01fa 8321     		movs	r1, #131
 3797 01fc A720     		movs	r0, #167
 3798 01fe FFF7FEFF 		bl	tp28xx_byte_write
 3799              	.LVL470:
3602:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+1];
 3800              		.loc 1 3602 0
 3801 0202 0023     		movs	r3, #0
 3802 0204 05E0     		b	.L336
 3803              	.LVL471:
 3804              	.L337:
3603:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
ARM GAS  /tmp/ccnKW75d.s 			page 144


 3805              		.loc 1 3603 0 discriminator 3
 3806 0206 5A1C     		adds	r2, r3, #1
 3807 0208 3C49     		ldr	r1, .L398+36
 3808 020a 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 3809 020c 4149     		ldr	r1, .L398+60
 3810 020e C854     		strb	r0, [r1, r3]
3602:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+1];
 3811              		.loc 1 3602 0 discriminator 3
 3812 0210 D3B2     		uxtb	r3, r2
 3813              	.LVL472:
 3814              	.L336:
3602:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+1];
 3815              		.loc 1 3602 0 is_stmt 0 discriminator 1
 3816 0212 042B     		cmp	r3, #4
 3817 0214 F7D9     		bls	.L337
3604:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+2];
 3818              		.loc 1 3604 0 is_stmt 1
 3819 0216 0523     		movs	r3, #5
 3820              	.LVL473:
 3821 0218 06E0     		b	.L338
 3822              	.LVL474:
 3823              	.L339:
3605:TP2824/TP2802.c **** 
 3824              		.loc 1 3605 0 discriminator 3
 3825 021a 9A1C     		adds	r2, r3, #2
 3826 021c 3749     		ldr	r1, .L398+36
 3827 021e 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3828 0220 3C4A     		ldr	r2, .L398+60
 3829 0222 D154     		strb	r1, [r2, r3]
3604:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+2];
 3830              		.loc 1 3604 0 discriminator 3
 3831 0224 0133     		adds	r3, r3, #1
 3832              	.LVL475:
 3833 0226 DBB2     		uxtb	r3, r3
 3834              	.LVL476:
 3835              	.L338:
3604:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+2];
 3836              		.loc 1 3604 0 is_stmt 0 discriminator 1
 3837 0228 092B     		cmp	r3, #9
 3838 022a F6D9     		bls	.L339
3608:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 3839              		.loc 1 3608 0 is_stmt 1
 3840 022c 3A48     		ldr	r0, .L398+64
 3841 022e FFF7FEFF 		bl	printf
 3842              	.LVL477:
3609:TP2824/TP2802.c **** 					printf(" %02X",COCRX3[pcnt]);
 3843              		.loc 1 3609 0
 3844 0232 0024     		movs	r4, #0
 3845              	.LVL478:
 3846 0234 06E0     		b	.L340
 3847              	.LVL479:
 3848              	.L341:
3610:TP2824/TP2802.c **** 				printf(" %02X",COCRX3[9]);
 3849              		.loc 1 3610 0 discriminator 3
 3850 0236 374B     		ldr	r3, .L398+60
 3851 0238 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 3852 023a 3348     		ldr	r0, .L398+48
ARM GAS  /tmp/ccnKW75d.s 			page 145


 3853 023c FFF7FEFF 		bl	printf
 3854              	.LVL480:
3609:TP2824/TP2802.c **** 					printf(" %02X",COCRX3[pcnt]);
 3855              		.loc 1 3609 0 discriminator 3
 3856 0240 0134     		adds	r4, r4, #1
 3857              	.LVL481:
 3858 0242 E4B2     		uxtb	r4, r4
 3859              	.LVL482:
 3860              	.L340:
3609:TP2824/TP2802.c **** 					printf(" %02X",COCRX3[pcnt]);
 3861              		.loc 1 3609 0 is_stmt 0 discriminator 1
 3862 0244 052C     		cmp	r4, #5
 3863 0246 F6D9     		bls	.L341
3611:TP2824/TP2802.c **** 				#endif
 3864              		.loc 1 3611 0 is_stmt 1
 3865 0248 324C     		ldr	r4, .L398+60
 3866              	.LVL483:
 3867 024a 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 3868 024c 2E48     		ldr	r0, .L398+48
 3869 024e FFF7FEFF 		bl	printf
 3870              	.LVL484:
3616:TP2824/TP2802.c **** 				{
 3871              		.loc 1 3616 0
 3872 0252 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 3873 0254 612B     		cmp	r3, #97
 3874 0256 7FF400AF 		bne	.L333
3616:TP2824/TP2802.c **** 				{
 3875              		.loc 1 3616 0 is_stmt 0 discriminator 1
 3876 025a 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 3877 025c 9E2B     		cmp	r3, #158
 3878 025e 7FF4FCAE 		bne	.L333
3618:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
 3879              		.loc 1 3618 0 is_stmt 1
 3880 0262 2A4B     		ldr	r3, .L398+52
 3881 0264 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3882 0266 41F00401 		orr	r1, r1, #4
 3883 026a 1970     		strb	r1, [r3]
3620:TP2824/TP2802.c **** 					#endif
 3884              		.loc 1 3620 0
 3885 026c 2848     		ldr	r0, .L398+56
 3886 026e FFF7FEFF 		bl	printf
 3887              	.LVL485:
3623:TP2824/TP2802.c **** 					{
 3888              		.loc 1 3623 0
 3889 0272 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3890 0274 382B     		cmp	r3, #56
 3891 0276 7FF4F0AE 		bne	.L333
3623:TP2824/TP2802.c **** 					{
 3892              		.loc 1 3623 0 is_stmt 0 discriminator 1
 3893 027a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 3894 027c 022B     		cmp	r3, #2
 3895 027e 7FF4ECAE 		bne	.L333
3628:TP2824/TP2802.c **** 					}
 3896              		.loc 1 3628 0 is_stmt 1
 3897 0282 224A     		ldr	r2, .L398+52
 3898 0284 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3899 0286 23F00403 		bic	r3, r3, #4
ARM GAS  /tmp/ccnKW75d.s 			page 146


 3900 028a 1370     		strb	r3, [r2]
 3901 028c E5E6     		b	.L333
 3902              	.L394:
3636:TP2824/TP2802.c **** 				//delay(1);//5ms
 3903              		.loc 1 3636 0
 3904 028e 0120     		movs	r0, #1
 3905 0290 FFF7FEFF 		bl	SetRegPage
 3906              	.LVL486:
3639:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
 3907              		.loc 1 3639 0
 3908 0294 0025     		movs	r5, #0
3640:TP2824/TP2802.c **** 				{
 3909              		.loc 1 3640 0
 3910 0296 8A24     		movs	r4, #138
 3911 0298 08E0     		b	.L343
 3912              	.LVL487:
 3913              	.L344:
3642:TP2824/TP2802.c **** 					pcnt++;
 3914              		.loc 1 3642 0 discriminator 3
 3915 029a 2046     		mov	r0, r4
 3916 029c FFF7FEFF 		bl	tp28xx_byte_read
 3917              	.LVL488:
 3918 02a0 164B     		ldr	r3, .L398+36
 3919 02a2 5855     		strb	r0, [r3, r5]
3643:TP2824/TP2802.c **** 				}
 3920              		.loc 1 3643 0 discriminator 3
 3921 02a4 0135     		adds	r5, r5, #1
 3922              	.LVL489:
 3923 02a6 EDB2     		uxtb	r5, r5
 3924              	.LVL490:
3640:TP2824/TP2802.c **** 				{
 3925              		.loc 1 3640 0 discriminator 3
 3926 02a8 0134     		adds	r4, r4, #1
 3927              	.LVL491:
 3928 02aa E4B2     		uxtb	r4, r4
 3929              	.LVL492:
 3930              	.L343:
3640:TP2824/TP2802.c **** 				{
 3931              		.loc 1 3640 0 is_stmt 0 discriminator 1
 3932 02ac A12C     		cmp	r4, #161
 3933 02ae F4D9     		bls	.L344
3646:TP2824/TP2802.c **** 				//delay(1);//5ms
 3934              		.loc 1 3646 0 is_stmt 1
 3935 02b0 0021     		movs	r1, #0
 3936 02b2 A720     		movs	r0, #167
 3937 02b4 FFF7FEFF 		bl	tp28xx_byte_write
 3938              	.LVL493:
3648:TP2824/TP2802.c **** 				
 3939              		.loc 1 3648 0
 3940 02b8 8321     		movs	r1, #131
 3941 02ba A720     		movs	r0, #167
 3942 02bc FFF7FEFF 		bl	tp28xx_byte_write
 3943              	.LVL494:
3650:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+1];
 3944              		.loc 1 3650 0
 3945 02c0 0023     		movs	r3, #0
 3946 02c2 05E0     		b	.L345
ARM GAS  /tmp/ccnKW75d.s 			page 147


 3947              	.LVL495:
 3948              	.L346:
3651:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
 3949              		.loc 1 3651 0 discriminator 3
 3950 02c4 5A1C     		adds	r2, r3, #1
 3951 02c6 0D49     		ldr	r1, .L398+36
 3952 02c8 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 3953 02ca 1449     		ldr	r1, .L398+68
 3954 02cc C854     		strb	r0, [r1, r3]
3650:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+1];
 3955              		.loc 1 3650 0 discriminator 3
 3956 02ce D3B2     		uxtb	r3, r2
 3957              	.LVL496:
 3958              	.L345:
3650:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+1];
 3959              		.loc 1 3650 0 is_stmt 0 discriminator 1
 3960 02d0 042B     		cmp	r3, #4
 3961 02d2 F7D9     		bls	.L346
3652:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+2];
 3962              		.loc 1 3652 0 is_stmt 1
 3963 02d4 0523     		movs	r3, #5
 3964              	.LVL497:
 3965 02d6 2AE0     		b	.L347
 3966              	.L399:
 3967              		.align	2
 3968              	.L398:
 3969 02d8 00000000 		.word	count
 3970 02dc 00000000 		.word	state
 3971 02e0 00000000 		.word	ptztxflag
 3972 02e4 00000000 		.word	.LANCHOR25
 3973 02e8 00000000 		.word	std
 3974 02ec 00000000 		.word	mode
 3975 02f0 00000000 		.word	TVI_speed
 3976 02f4 00000000 		.word	presetNum
 3977 02f8 00000000 		.word	TVI_Command
 3978 02fc 00000000 		.word	tpRxD
 3979 0300 00000000 		.word	COCRX4
 3980 0304 00000000 		.word	.LC30
 3981 0308 08000000 		.word	.LC31
 3982 030c 00000000 		.word	.LANCHOR24
 3983 0310 10000000 		.word	.LC32
 3984 0314 00000000 		.word	COCRX3
 3985 0318 24000000 		.word	.LC33
 3986 031c 00000000 		.word	COCRX2
 3987              	.LVL498:
 3988              	.L348:
3653:TP2824/TP2802.c **** 
 3989              		.loc 1 3653 0 discriminator 3
 3990 0320 9A1C     		adds	r2, r3, #2
 3991 0322 B749     		ldr	r1, .L400
 3992 0324 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3993 0326 B74A     		ldr	r2, .L400+4
 3994 0328 D154     		strb	r1, [r2, r3]
3652:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+2];
 3995              		.loc 1 3652 0 discriminator 3
 3996 032a 0133     		adds	r3, r3, #1
 3997              	.LVL499:
ARM GAS  /tmp/ccnKW75d.s 			page 148


 3998 032c DBB2     		uxtb	r3, r3
 3999              	.LVL500:
 4000              	.L347:
3652:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+2];
 4001              		.loc 1 3652 0 is_stmt 0 discriminator 1
 4002 032e 092B     		cmp	r3, #9
 4003 0330 F6D9     		bls	.L348
3656:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 4004              		.loc 1 3656 0 is_stmt 1
 4005 0332 B548     		ldr	r0, .L400+8
 4006 0334 FFF7FEFF 		bl	printf
 4007              	.LVL501:
3657:TP2824/TP2802.c **** 					printf(" %02X",COCRX2[pcnt]);
 4008              		.loc 1 3657 0
 4009 0338 0024     		movs	r4, #0
 4010              	.LVL502:
 4011 033a 06E0     		b	.L349
 4012              	.LVL503:
 4013              	.L350:
3658:TP2824/TP2802.c **** 				printf(" %02X",COCRX2[9]);
 4014              		.loc 1 3658 0 discriminator 3
 4015 033c B14B     		ldr	r3, .L400+4
 4016 033e 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 4017 0340 B248     		ldr	r0, .L400+12
 4018 0342 FFF7FEFF 		bl	printf
 4019              	.LVL504:
3657:TP2824/TP2802.c **** 					printf(" %02X",COCRX2[pcnt]);
 4020              		.loc 1 3657 0 discriminator 3
 4021 0346 0134     		adds	r4, r4, #1
 4022              	.LVL505:
 4023 0348 E4B2     		uxtb	r4, r4
 4024              	.LVL506:
 4025              	.L349:
3657:TP2824/TP2802.c **** 					printf(" %02X",COCRX2[pcnt]);
 4026              		.loc 1 3657 0 is_stmt 0 discriminator 1
 4027 034a 052C     		cmp	r4, #5
 4028 034c F6D9     		bls	.L350
3659:TP2824/TP2802.c **** 				#endif
 4029              		.loc 1 3659 0 is_stmt 1
 4030 034e AD4C     		ldr	r4, .L400+4
 4031              	.LVL507:
 4032 0350 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 4033 0352 AE48     		ldr	r0, .L400+12
 4034 0354 FFF7FEFF 		bl	printf
 4035              	.LVL508:
3664:TP2824/TP2802.c **** 				{
 4036              		.loc 1 3664 0
 4037 0358 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 4038 035a 612B     		cmp	r3, #97
 4039 035c 7FF485AE 		bne	.L342
3664:TP2824/TP2802.c **** 				{
 4040              		.loc 1 3664 0 is_stmt 0 discriminator 1
 4041 0360 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 4042 0362 9E2B     		cmp	r3, #158
 4043 0364 7FF481AE 		bne	.L342
3666:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
 4044              		.loc 1 3666 0 is_stmt 1
ARM GAS  /tmp/ccnKW75d.s 			page 149


 4045 0368 A94B     		ldr	r3, .L400+16
 4046 036a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4047 036c 41F00201 		orr	r1, r1, #2
 4048 0370 1970     		strb	r1, [r3]
3668:TP2824/TP2802.c **** 					#endif
 4049              		.loc 1 3668 0
 4050 0372 A848     		ldr	r0, .L400+20
 4051 0374 FFF7FEFF 		bl	printf
 4052              	.LVL509:
3671:TP2824/TP2802.c **** 					{
 4053              		.loc 1 3671 0
 4054 0378 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 4055 037a 382B     		cmp	r3, #56
 4056 037c 7FF475AE 		bne	.L342
3671:TP2824/TP2802.c **** 					{
 4057              		.loc 1 3671 0 is_stmt 0 discriminator 1
 4058 0380 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 4059 0382 022B     		cmp	r3, #2
 4060 0384 7FF471AE 		bne	.L342
3676:TP2824/TP2802.c **** 					}
 4061              		.loc 1 3676 0 is_stmt 1
 4062 0388 A14A     		ldr	r2, .L400+16
 4063 038a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4064 038c 23F00203 		bic	r3, r3, #2
 4065 0390 1370     		strb	r3, [r2]
 4066 0392 6AE6     		b	.L342
 4067              	.L395:
3684:TP2824/TP2802.c **** 				//delay(1);//5ms
 4068              		.loc 1 3684 0
 4069 0394 0020     		movs	r0, #0
 4070 0396 FFF7FEFF 		bl	SetRegPage
 4071              	.LVL510:
3687:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
 4072              		.loc 1 3687 0
 4073 039a 0025     		movs	r5, #0
3688:TP2824/TP2802.c **** 				{
 4074              		.loc 1 3688 0
 4075 039c 8A24     		movs	r4, #138
 4076 039e 08E0     		b	.L351
 4077              	.LVL511:
 4078              	.L352:
3690:TP2824/TP2802.c **** 					pcnt++;
 4079              		.loc 1 3690 0 discriminator 3
 4080 03a0 2046     		mov	r0, r4
 4081 03a2 FFF7FEFF 		bl	tp28xx_byte_read
 4082              	.LVL512:
 4083 03a6 964B     		ldr	r3, .L400
 4084 03a8 5855     		strb	r0, [r3, r5]
3691:TP2824/TP2802.c **** 				}
 4085              		.loc 1 3691 0 discriminator 3
 4086 03aa 0135     		adds	r5, r5, #1
 4087              	.LVL513:
 4088 03ac EDB2     		uxtb	r5, r5
 4089              	.LVL514:
3688:TP2824/TP2802.c **** 				{
 4090              		.loc 1 3688 0 discriminator 3
 4091 03ae 0134     		adds	r4, r4, #1
ARM GAS  /tmp/ccnKW75d.s 			page 150


 4092              	.LVL515:
 4093 03b0 E4B2     		uxtb	r4, r4
 4094              	.LVL516:
 4095              	.L351:
3688:TP2824/TP2802.c **** 				{
 4096              		.loc 1 3688 0 is_stmt 0 discriminator 1
 4097 03b2 A12C     		cmp	r4, #161
 4098 03b4 F4D9     		bls	.L352
3694:TP2824/TP2802.c **** 				//delay(1);//5ms
 4099              		.loc 1 3694 0 is_stmt 1
 4100 03b6 0021     		movs	r1, #0
 4101 03b8 A720     		movs	r0, #167
 4102 03ba FFF7FEFF 		bl	tp28xx_byte_write
 4103              	.LVL517:
3696:TP2824/TP2802.c **** 				
 4104              		.loc 1 3696 0
 4105 03be 8321     		movs	r1, #131
 4106 03c0 A720     		movs	r0, #167
 4107 03c2 FFF7FEFF 		bl	tp28xx_byte_write
 4108              	.LVL518:
3698:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+1];
 4109              		.loc 1 3698 0
 4110 03c6 0023     		movs	r3, #0
 4111 03c8 05E0     		b	.L353
 4112              	.LVL519:
 4113              	.L354:
3699:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
 4114              		.loc 1 3699 0 discriminator 3
 4115 03ca 5A1C     		adds	r2, r3, #1
 4116 03cc 8C49     		ldr	r1, .L400
 4117 03ce 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 4118 03d0 9149     		ldr	r1, .L400+24
 4119 03d2 C854     		strb	r0, [r1, r3]
3698:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+1];
 4120              		.loc 1 3698 0 discriminator 3
 4121 03d4 D3B2     		uxtb	r3, r2
 4122              	.LVL520:
 4123              	.L353:
3698:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+1];
 4124              		.loc 1 3698 0 is_stmt 0 discriminator 1
 4125 03d6 042B     		cmp	r3, #4
 4126 03d8 F7D9     		bls	.L354
3700:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+2];
 4127              		.loc 1 3700 0 is_stmt 1
 4128 03da 0523     		movs	r3, #5
 4129              	.LVL521:
 4130 03dc 06E0     		b	.L355
 4131              	.LVL522:
 4132              	.L356:
3701:TP2824/TP2802.c **** 				
 4133              		.loc 1 3701 0 discriminator 3
 4134 03de 9A1C     		adds	r2, r3, #2
 4135 03e0 8749     		ldr	r1, .L400
 4136 03e2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 4137 03e4 8C4A     		ldr	r2, .L400+24
 4138 03e6 D154     		strb	r1, [r2, r3]
3700:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+2];
ARM GAS  /tmp/ccnKW75d.s 			page 151


 4139              		.loc 1 3700 0 discriminator 3
 4140 03e8 0133     		adds	r3, r3, #1
 4141              	.LVL523:
 4142 03ea DBB2     		uxtb	r3, r3
 4143              	.LVL524:
 4144              	.L355:
3700:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+2];
 4145              		.loc 1 3700 0 is_stmt 0 discriminator 1
 4146 03ec 092B     		cmp	r3, #9
 4147 03ee F6D9     		bls	.L356
3704:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 4148              		.loc 1 3704 0 is_stmt 1
 4149 03f0 8A48     		ldr	r0, .L400+28
 4150 03f2 FFF7FEFF 		bl	printf
 4151              	.LVL525:
3705:TP2824/TP2802.c **** 					printf(" %02X",COCRX1[pcnt]);
 4152              		.loc 1 3705 0
 4153 03f6 0024     		movs	r4, #0
 4154              	.LVL526:
 4155 03f8 06E0     		b	.L357
 4156              	.LVL527:
 4157              	.L358:
3706:TP2824/TP2802.c **** 				printf(" %02X",COCRX1[9]);
 4158              		.loc 1 3706 0 discriminator 3
 4159 03fa 874B     		ldr	r3, .L400+24
 4160 03fc 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 4161 03fe 8348     		ldr	r0, .L400+12
 4162 0400 FFF7FEFF 		bl	printf
 4163              	.LVL528:
3705:TP2824/TP2802.c **** 					printf(" %02X",COCRX1[pcnt]);
 4164              		.loc 1 3705 0 discriminator 3
 4165 0404 0134     		adds	r4, r4, #1
 4166              	.LVL529:
 4167 0406 E4B2     		uxtb	r4, r4
 4168              	.LVL530:
 4169              	.L357:
3705:TP2824/TP2802.c **** 					printf(" %02X",COCRX1[pcnt]);
 4170              		.loc 1 3705 0 is_stmt 0 discriminator 1
 4171 0408 052C     		cmp	r4, #5
 4172 040a F6D9     		bls	.L358
3707:TP2824/TP2802.c **** 				#endif
 4173              		.loc 1 3707 0 is_stmt 1
 4174 040c 824C     		ldr	r4, .L400+24
 4175              	.LVL531:
 4176 040e 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 4177 0410 7E48     		ldr	r0, .L400+12
 4178 0412 FFF7FEFF 		bl	printf
 4179              	.LVL532:
3712:TP2824/TP2802.c **** 				{
 4180              		.loc 1 3712 0
 4181 0416 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 4182 0418 612B     		cmp	r3, #97
 4183 041a 7FF42EAE 		bne	.L323
3712:TP2824/TP2802.c **** 				{
 4184              		.loc 1 3712 0 is_stmt 0 discriminator 1
 4185 041e 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 4186 0420 9E2B     		cmp	r3, #158
ARM GAS  /tmp/ccnKW75d.s 			page 152


 4187 0422 7FF42AAE 		bne	.L323
3714:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
 4188              		.loc 1 3714 0 is_stmt 1
 4189 0426 7A4B     		ldr	r3, .L400+16
 4190 0428 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4191 042a 41F00101 		orr	r1, r1, #1
 4192 042e 1970     		strb	r1, [r3]
3716:TP2824/TP2802.c **** 					#endif
 4193              		.loc 1 3716 0
 4194 0430 7848     		ldr	r0, .L400+20
 4195 0432 FFF7FEFF 		bl	printf
 4196              	.LVL533:
3719:TP2824/TP2802.c **** 					{
 4197              		.loc 1 3719 0
 4198 0436 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 4199 0438 382B     		cmp	r3, #56
 4200 043a 7FF41EAE 		bne	.L323
3719:TP2824/TP2802.c **** 					{
 4201              		.loc 1 3719 0 is_stmt 0 discriminator 1
 4202 043e 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 4203 0440 022B     		cmp	r3, #2
 4204 0442 7FF41AAE 		bne	.L323
3724:TP2824/TP2802.c **** 					}
 4205              		.loc 1 3724 0 is_stmt 1
 4206 0446 724A     		ldr	r2, .L400+16
 4207 0448 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4208 044a 23F00103 		bic	r3, r3, #1
 4209 044e 1370     		strb	r3, [r2]
 4210 0450 13E6     		b	.L323
 4211              	.LVL534:
 4212              	.L373:
 4213              	.LBB3:
3748:TP2824/TP2802.c **** 						else if(TVI_Command==0x10)//Focus -
 4214              		.loc 1 3748 0
 4215 0452 0426     		movs	r6, #4
 4216              	.LVL535:
 4217              	.L361:
3780:TP2824/TP2802.c **** 						cmd2=AHDBitsReverse(cmd2);//20200413
 4218              		.loc 1 3780 0
 4219 0454 3046     		mov	r0, r6
 4220 0456 FFF7FEFF 		bl	AHDBitsReverse
 4221              	.LVL536:
 4222 045a 0646     		mov	r6, r0
 4223              	.LVL537:
3781:TP2824/TP2802.c **** 						dat1=AHDBitsReverse(dat1);//20200413
 4224              		.loc 1 3781 0
 4225 045c 2846     		mov	r0, r5
 4226 045e FFF7FEFF 		bl	AHDBitsReverse
 4227              	.LVL538:
 4228 0462 0546     		mov	r5, r0
 4229              	.LVL539:
3782:TP2824/TP2802.c **** 						dat2=AHDBitsReverse(dat2);//20200413
 4230              		.loc 1 3782 0
 4231 0464 3846     		mov	r0, r7
 4232 0466 FFF7FEFF 		bl	AHDBitsReverse
 4233              	.LVL540:
 4234 046a 0746     		mov	r7, r0
ARM GAS  /tmp/ccnKW75d.s 			page 153


 4235              	.LVL541:
3783:TP2824/TP2802.c **** 						
 4236              		.loc 1 3783 0
 4237 046c 4046     		mov	r0, r8
 4238 046e FFF7FEFF 		bl	AHDBitsReverse
 4239              	.LVL542:
 4240 0472 8046     		mov	r8, r0
 4241              	.LVL543:
3785:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5a, cmd1);//command byte 1
 4242              		.loc 1 3785 0
 4243 0474 2046     		mov	r0, r4
 4244 0476 FFF7FEFF 		bl	SetRegPage
 4245              	.LVL544:
3786:TP2824/TP2802.c **** 						tp28xx_byte_write(0x59, cmd2);//command byte 2
 4246              		.loc 1 3786 0
 4247 047a 3146     		mov	r1, r6
 4248 047c 5A20     		movs	r0, #90
 4249 047e FFF7FEFF 		bl	tp28xx_byte_write
 4250              	.LVL545:
3787:TP2824/TP2802.c **** 
 4251              		.loc 1 3787 0
 4252 0482 2946     		mov	r1, r5
 4253 0484 5920     		movs	r0, #89
 4254 0486 FFF7FEFF 		bl	tp28xx_byte_write
 4255              	.LVL546:
3789:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5f, dat2);//data byte 2
 4256              		.loc 1 3789 0
 4257 048a 3946     		mov	r1, r7
 4258 048c 6020     		movs	r0, #96
 4259 048e FFF7FEFF 		bl	tp28xx_byte_write
 4260              	.LVL547:
3790:TP2824/TP2802.c **** 
 4261              		.loc 1 3790 0
 4262 0492 4146     		mov	r1, r8
 4263 0494 5F20     		movs	r0, #95
 4264 0496 FFF7FEFF 		bl	tp28xx_byte_write
 4265              	.LVL548:
3792:TP2824/TP2802.c **** 						delay(10);//50ms
 4266              		.loc 1 3792 0
 4267 049a 6121     		movs	r1, #97
 4268 049c 6F20     		movs	r0, #111
 4269 049e FFF7FEFF 		bl	tp28xx_byte_write
 4270              	.LVL549:
3793:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x60);
 4271              		.loc 1 3793 0
 4272 04a2 0A20     		movs	r0, #10
 4273 04a4 FFF7FEFF 		bl	delay
 4274              	.LVL550:
3794:TP2824/TP2802.c **** 						printf("CVBS-Tx %x,%x,%x,%x\n",cmd1,cmd2,dat1,dat2);
 4275              		.loc 1 3794 0
 4276 04a8 6021     		movs	r1, #96
 4277 04aa 6F20     		movs	r0, #111
 4278 04ac FFF7FEFF 		bl	tp28xx_byte_write
 4279              	.LVL551:
3795:TP2824/TP2802.c **** 
 4280              		.loc 1 3795 0
 4281 04b0 CDF80080 		str	r8, [sp]
ARM GAS  /tmp/ccnKW75d.s 			page 154


 4282 04b4 3B46     		mov	r3, r7
 4283 04b6 2A46     		mov	r2, r5
 4284 04b8 3146     		mov	r1, r6
 4285 04ba 5948     		ldr	r0, .L400+32
 4286 04bc FFF7FEFF 		bl	printf
 4287              	.LVL552:
 4288              	.L362:
 4289              	.LBE3:
3812:TP2824/TP2802.c **** 				}
 4290              		.loc 1 3812 0
 4291 04c0 584B     		ldr	r3, .L400+36
 4292 04c2 0022     		movs	r2, #0
 4293 04c4 1A60     		str	r2, [r3]
 4294              	.L359:
3814:TP2824/TP2802.c **** 				{
 4295              		.loc 1 3814 0
 4296 04c6 584B     		ldr	r3, .L400+40
 4297 04c8 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4298 04ca 584B     		ldr	r3, .L400+44
 4299 04cc 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 4300 04ce 022B     		cmp	r3, #2
 4301 04d0 5BD0     		beq	.L396
 4302              	.L363:
3872:TP2824/TP2802.c **** 			{
 4303              		.loc 1 3872 0
 4304 04d2 554B     		ldr	r3, .L400+40
 4305 04d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4306 04d6 554A     		ldr	r2, .L400+44
 4307 04d8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4308 04da 012B     		cmp	r3, #1
 4309 04dc 00F00981 		beq	.L397
 4310              	.L372:
3962:TP2824/TP2802.c **** 			}
 4311              		.loc 1 3962 0
 4312 04e0 504B     		ldr	r3, .L400+36
 4313 04e2 0022     		movs	r2, #0
 4314 04e4 1A60     		str	r2, [r3]
 4315              		.loc 1 3965 0
 4316 04e6 97E5     		b	.L321
 4317              	.LVL553:
 4318              	.L374:
 4319              	.LBB4:
3750:TP2824/TP2802.c **** 						else if(TVI_Command==0x11)//Focus +
 4320              		.loc 1 3750 0
 4321 04e8 0126     		movs	r6, #1
 4322 04ea B3E7     		b	.L361
 4323              	.L375:
3740:TP2824/TP2802.c **** 						
 4324              		.loc 1 3740 0
 4325 04ec 2E46     		mov	r6, r5
3752:TP2824/TP2802.c **** 						else if(TVI_Command==0x12)//Zoom -
 4326              		.loc 1 3752 0
 4327 04ee 8025     		movs	r5, #128
 4328 04f0 B0E7     		b	.L361
 4329              	.L376:
3740:TP2824/TP2802.c **** 						
 4330              		.loc 1 3740 0
ARM GAS  /tmp/ccnKW75d.s 			page 155


 4331 04f2 2E46     		mov	r6, r5
3754:TP2824/TP2802.c **** 						else if(TVI_Command==0x13)//Zoom +
 4332              		.loc 1 3754 0
 4333 04f4 4025     		movs	r5, #64
 4334 04f6 ADE7     		b	.L361
 4335              	.L377:
3740:TP2824/TP2802.c **** 						
 4336              		.loc 1 3740 0
 4337 04f8 2E46     		mov	r6, r5
3756:TP2824/TP2802.c **** 						else if(TVI_Command==0x06)//up
 4338              		.loc 1 3756 0
 4339 04fa 2025     		movs	r5, #32
 4340 04fc AAE7     		b	.L361
 4341              	.L378:
3740:TP2824/TP2802.c **** 						
 4342              		.loc 1 3740 0
 4343 04fe 2E46     		mov	r6, r5
3758:TP2824/TP2802.c **** 						else if(TVI_Command==0x07)//down
 4344              		.loc 1 3758 0
 4345 0500 0825     		movs	r5, #8
 4346 0502 A7E7     		b	.L361
 4347              	.L379:
3740:TP2824/TP2802.c **** 						
 4348              		.loc 1 3740 0
 4349 0504 2E46     		mov	r6, r5
3760:TP2824/TP2802.c **** 						else if(TVI_Command==0x09)//left
 4350              		.loc 1 3760 0
 4351 0506 1025     		movs	r5, #16
 4352 0508 A4E7     		b	.L361
 4353              	.L380:
3740:TP2824/TP2802.c **** 						
 4354              		.loc 1 3740 0
 4355 050a 2E46     		mov	r6, r5
3762:TP2824/TP2802.c **** 						else if(TVI_Command==0x08)//right
 4356              		.loc 1 3762 0
 4357 050c 0425     		movs	r5, #4
 4358 050e A1E7     		b	.L361
 4359              	.L381:
 4360 0510 3346     		mov	r3, r6
3740:TP2824/TP2802.c **** 						
 4361              		.loc 1 3740 0
 4362 0512 2E46     		mov	r6, r5
3764:TP2824/TP2802.c **** 						else if(TVI_Command==0x0A)//up + left
 4363              		.loc 1 3764 0
 4364 0514 1D46     		mov	r5, r3
 4365 0516 9DE7     		b	.L361
 4366              	.L382:
3740:TP2824/TP2802.c **** 						
 4367              		.loc 1 3740 0
 4368 0518 2E46     		mov	r6, r5
3766:TP2824/TP2802.c **** 						else if(TVI_Command==0x0C)//up + right
 4369              		.loc 1 3766 0
 4370 051a 0C25     		movs	r5, #12
 4371 051c 9AE7     		b	.L361
 4372              	.L383:
3740:TP2824/TP2802.c **** 						
 4373              		.loc 1 3740 0
ARM GAS  /tmp/ccnKW75d.s 			page 156


 4374 051e 2E46     		mov	r6, r5
3768:TP2824/TP2802.c **** 						else if(TVI_Command==0x0B)//down + left
 4375              		.loc 1 3768 0
 4376 0520 0A25     		movs	r5, #10
 4377 0522 97E7     		b	.L361
 4378              	.L384:
3740:TP2824/TP2802.c **** 						
 4379              		.loc 1 3740 0
 4380 0524 2E46     		mov	r6, r5
3770:TP2824/TP2802.c **** 						else if(TVI_Command==0x0D)//down + right
 4381              		.loc 1 3770 0
 4382 0526 1425     		movs	r5, #20
 4383 0528 94E7     		b	.L361
 4384              	.L385:
3740:TP2824/TP2802.c **** 						
 4385              		.loc 1 3740 0
 4386 052a 2E46     		mov	r6, r5
3772:TP2824/TP2802.c **** 						else if(TVI_Command==0x17)//PRESET x
 4387              		.loc 1 3772 0
 4388 052c 1225     		movs	r5, #18
 4389 052e 91E7     		b	.L361
 4390              	.L386:
3776:TP2824/TP2802.c **** 							dat2=(tByte)presetNum;
 4391              		.loc 1 3776 0
 4392 0530 2F46     		mov	r7, r5
 4393              	.LVL554:
3740:TP2824/TP2802.c **** 						
 4394              		.loc 1 3740 0
 4395 0532 2E46     		mov	r6, r5
3775:TP2824/TP2802.c **** 							dat1=0;
 4396              		.loc 1 3775 0
 4397 0534 0725     		movs	r5, #7
 4398 0536 8DE7     		b	.L361
 4399              	.LVL555:
 4400              	.L360:
 4401              	.LBE4:
3800:TP2824/TP2802.c **** 						tp28xx_byte_write(0x59, (tByte)TVI_Command);
 4402              		.loc 1 3800 0
 4403 0538 2046     		mov	r0, r4
 4404 053a FFF7FEFF 		bl	SetRegPage
 4405              	.LVL556:
3801:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5a, (tByte)presetNum);
 4406              		.loc 1 3801 0
 4407 053e 3C4C     		ldr	r4, .L400+48
 4408 0540 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4409 0542 5920     		movs	r0, #89
 4410 0544 FFF7FEFF 		bl	tp28xx_byte_write
 4411              	.LVL557:
3802:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5d, (tByte)TVI_speed);//0x5f  check this????
 4412              		.loc 1 3802 0
 4413 0548 3A4D     		ldr	r5, .L400+52
 4414 054a 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 4415 054c 5A20     		movs	r0, #90
 4416 054e FFF7FEFF 		bl	tp28xx_byte_write
 4417              	.LVL558:
3803:TP2824/TP2802.c **** 						tp28xx_byte_write(0x60, (tByte)TVI_Chksum);
 4418              		.loc 1 3803 0
ARM GAS  /tmp/ccnKW75d.s 			page 157


 4419 0552 394E     		ldr	r6, .L400+56
 4420 0554 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 4421 0556 5D20     		movs	r0, #93
 4422 0558 FFF7FEFF 		bl	tp28xx_byte_write
 4423              	.LVL559:
3804:TP2824/TP2802.c **** 						
 4424              		.loc 1 3804 0
 4425 055c 374B     		ldr	r3, .L400+60
 4426 055e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4427 0560 6020     		movs	r0, #96
 4428 0562 FFF7FEFF 		bl	tp28xx_byte_write
 4429              	.LVL560:
3806:TP2824/TP2802.c **** 						delay(10);//50ms
 4430              		.loc 1 3806 0
 4431 0566 4121     		movs	r1, #65
 4432 0568 6F20     		movs	r0, #111
 4433 056a FFF7FEFF 		bl	tp28xx_byte_write
 4434              	.LVL561:
3807:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x40);
 4435              		.loc 1 3807 0
 4436 056e 0A20     		movs	r0, #10
 4437 0570 FFF7FEFF 		bl	delay
 4438              	.LVL562:
3808:TP2824/TP2802.c **** 						printf("TVI-Tx %x,%x,%x\n",TVI_Command,presetNum,TVI_speed);
 4439              		.loc 1 3808 0
 4440 0574 4021     		movs	r1, #64
 4441 0576 6F20     		movs	r0, #111
 4442 0578 FFF7FEFF 		bl	tp28xx_byte_write
 4443              	.LVL563:
3809:TP2824/TP2802.c **** 					}
 4444              		.loc 1 3809 0
 4445 057c 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 4446 057e 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 4447 0580 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4448 0582 2F48     		ldr	r0, .L400+64
 4449 0584 FFF7FEFF 		bl	printf
 4450              	.LVL564:
 4451 0588 9AE7     		b	.L362
 4452              	.LVL565:
 4453              	.L396:
3816:TP2824/TP2802.c **** 
 4454              		.loc 1 3816 0
 4455 058a FFF7FEFF 		bl	SetRegPage
 4456              	.LVL566:
3818:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6e, 0x02);
 4457              		.loc 1 3818 0
 4458 058e A521     		movs	r1, #165
 4459 0590 6E20     		movs	r0, #110
 4460 0592 FFF7FEFF 		bl	tp28xx_byte_write
 4461              	.LVL567:
3819:TP2824/TP2802.c **** 					switch(TVI_Command)
 4462              		.loc 1 3819 0
 4463 0596 0221     		movs	r1, #2
 4464 0598 6E20     		movs	r0, #110
 4465 059a FFF7FEFF 		bl	tp28xx_byte_write
 4466              	.LVL568:
3820:TP2824/TP2802.c **** 					{
ARM GAS  /tmp/ccnKW75d.s 			page 158


 4467              		.loc 1 3820 0
 4468 059e 244B     		ldr	r3, .L400+48
 4469 05a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4470 05a2 063B     		subs	r3, r3, #6
 4471 05a4 092B     		cmp	r3, #9
 4472 05a6 00F29380 		bhi	.L364
 4473 05aa DFE803F0 		tbb	[pc, r3]
 4474              	.L366:
 4475 05ae 4D       		.byte	(.L365-.L366)/2
 4476 05af 5E       		.byte	(.L367-.L366)/2
 4477 05b0 80       		.byte	(.L368-.L366)/2
 4478 05b1 6F       		.byte	(.L369-.L366)/2
 4479 05b2 91       		.byte	(.L364-.L366)/2
 4480 05b3 91       		.byte	(.L364-.L366)/2
 4481 05b4 91       		.byte	(.L364-.L366)/2
 4482 05b5 91       		.byte	(.L364-.L366)/2
 4483 05b6 91       		.byte	(.L364-.L366)/2
 4484 05b7 05       		.byte	(.L370-.L366)/2
 4485              		.p2align 1
 4486              	.L370:
3823:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4487              		.loc 1 3823 0
 4488 05b8 5021     		movs	r1, #80
 4489 05ba 6E20     		movs	r0, #110
 4490 05bc FFF7FEFF 		bl	tp28xx_byte_write
 4491              	.LVL569:
3824:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4492              		.loc 1 3824 0
 4493 05c0 0021     		movs	r1, #0
 4494 05c2 6E20     		movs	r0, #110
 4495 05c4 FFF7FEFF 		bl	tp28xx_byte_write
 4496              	.LVL570:
3825:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4497              		.loc 1 3825 0
 4498 05c8 0021     		movs	r1, #0
 4499 05ca 6E20     		movs	r0, #110
 4500 05cc FFF7FEFF 		bl	tp28xx_byte_write
 4501              	.LVL571:
3826:TP2824/TP2802.c **** 							break;
 4502              		.loc 1 3826 0
 4503 05d0 0021     		movs	r1, #0
 4504 05d2 6E20     		movs	r0, #110
 4505 05d4 FFF7FEFF 		bl	tp28xx_byte_write
 4506              	.LVL572:
 4507              	.L371:
3866:TP2824/TP2802.c **** 					delay(5);//50ms
 4508              		.loc 1 3866 0
 4509 05d8 4921     		movs	r1, #73
 4510 05da 6F20     		movs	r0, #111
 4511 05dc FFF7FEFF 		bl	tp28xx_byte_write
 4512              	.LVL573:
3867:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x48);
 4513              		.loc 1 3867 0
 4514 05e0 0520     		movs	r0, #5
 4515 05e2 FFF7FEFF 		bl	delay
 4516              	.LVL574:
3868:TP2824/TP2802.c **** 					ptztxflag=0;
ARM GAS  /tmp/ccnKW75d.s 			page 159


 4517              		.loc 1 3868 0
 4518 05e6 4821     		movs	r1, #72
 4519 05e8 6F20     		movs	r0, #111
 4520 05ea FFF7FEFF 		bl	tp28xx_byte_write
 4521              	.LVL575:
3869:TP2824/TP2802.c **** 					printf("CVI-Tx %x\n",TVI_Command);
 4522              		.loc 1 3869 0
 4523 05ee 0D4B     		ldr	r3, .L400+36
 4524 05f0 0022     		movs	r2, #0
 4525 05f2 1A60     		str	r2, [r3]
3870:TP2824/TP2802.c **** 				}
 4526              		.loc 1 3870 0
 4527 05f4 0E4B     		ldr	r3, .L400+48
 4528 05f6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4529 05f8 1248     		ldr	r0, .L400+68
 4530 05fa FFF7FEFF 		bl	printf
 4531              	.LVL576:
 4532 05fe 68E7     		b	.L363
 4533              	.L401:
 4534              		.align	2
 4535              	.L400:
 4536 0600 00000000 		.word	tpRxD
 4537 0604 00000000 		.word	COCRX2
 4538 0608 2C000000 		.word	.LC34
 4539 060c 08000000 		.word	.LC31
 4540 0610 00000000 		.word	.LANCHOR24
 4541 0614 10000000 		.word	.LC32
 4542 0618 00000000 		.word	COCRX1
 4543 061c 34000000 		.word	.LC35
 4544 0620 3C000000 		.word	.LC36
 4545 0624 00000000 		.word	ptztxflag
 4546 0628 00000000 		.word	.LANCHOR25
 4547 062c 00000000 		.word	std
 4548 0630 00000000 		.word	TVI_Command
 4549 0634 00000000 		.word	presetNum
 4550 0638 00000000 		.word	TVI_speed
 4551 063c 00000000 		.word	TVI_Chksum
 4552 0640 54000000 		.word	.LC37
 4553 0644 68000000 		.word	.LC38
 4554              	.L365:
3830:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4555              		.loc 1 3830 0
 4556 0648 0821     		movs	r1, #8
 4557 064a 6E20     		movs	r0, #110
 4558 064c FFF7FEFF 		bl	tp28xx_byte_write
 4559              	.LVL577:
3831:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
 4560              		.loc 1 3831 0
 4561 0650 0021     		movs	r1, #0
 4562 0652 6E20     		movs	r0, #110
 4563 0654 FFF7FEFF 		bl	tp28xx_byte_write
 4564              	.LVL578:
3832:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4565              		.loc 1 3832 0
 4566 0658 FF21     		movs	r1, #255
 4567 065a 6E20     		movs	r0, #110
 4568 065c FFF7FEFF 		bl	tp28xx_byte_write
ARM GAS  /tmp/ccnKW75d.s 			page 160


 4569              	.LVL579:
3833:TP2824/TP2802.c **** 							break;
 4570              		.loc 1 3833 0
 4571 0660 0021     		movs	r1, #0
 4572 0662 6E20     		movs	r0, #110
 4573 0664 FFF7FEFF 		bl	tp28xx_byte_write
 4574              	.LVL580:
3834:TP2824/TP2802.c **** 							
 4575              		.loc 1 3834 0
 4576 0668 B6E7     		b	.L371
 4577              	.L367:
3837:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4578              		.loc 1 3837 0
 4579 066a 0421     		movs	r1, #4
 4580 066c 6E20     		movs	r0, #110
 4581 066e FFF7FEFF 		bl	tp28xx_byte_write
 4582              	.LVL581:
3838:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
 4583              		.loc 1 3838 0
 4584 0672 0021     		movs	r1, #0
 4585 0674 6E20     		movs	r0, #110
 4586 0676 FFF7FEFF 		bl	tp28xx_byte_write
 4587              	.LVL582:
3839:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4588              		.loc 1 3839 0
 4589 067a FF21     		movs	r1, #255
 4590 067c 6E20     		movs	r0, #110
 4591 067e FFF7FEFF 		bl	tp28xx_byte_write
 4592              	.LVL583:
3840:TP2824/TP2802.c **** 							break;
 4593              		.loc 1 3840 0
 4594 0682 0021     		movs	r1, #0
 4595 0684 6E20     		movs	r0, #110
 4596 0686 FFF7FEFF 		bl	tp28xx_byte_write
 4597              	.LVL584:
3841:TP2824/TP2802.c **** 							
 4598              		.loc 1 3841 0
 4599 068a A5E7     		b	.L371
 4600              	.L369:
3844:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
 4601              		.loc 1 3844 0
 4602 068c 0221     		movs	r1, #2
 4603 068e 6E20     		movs	r0, #110
 4604 0690 FFF7FEFF 		bl	tp28xx_byte_write
 4605              	.LVL585:
3845:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4606              		.loc 1 3845 0
 4607 0694 FF21     		movs	r1, #255
 4608 0696 6E20     		movs	r0, #110
 4609 0698 FFF7FEFF 		bl	tp28xx_byte_write
 4610              	.LVL586:
3846:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4611              		.loc 1 3846 0
 4612 069c 0021     		movs	r1, #0
 4613 069e 6E20     		movs	r0, #110
 4614 06a0 FFF7FEFF 		bl	tp28xx_byte_write
 4615              	.LVL587:
ARM GAS  /tmp/ccnKW75d.s 			page 161


3847:TP2824/TP2802.c **** 							break;
 4616              		.loc 1 3847 0
 4617 06a4 0021     		movs	r1, #0
 4618 06a6 6E20     		movs	r0, #110
 4619 06a8 FFF7FEFF 		bl	tp28xx_byte_write
 4620              	.LVL588:
3848:TP2824/TP2802.c **** 							
 4621              		.loc 1 3848 0
 4622 06ac 94E7     		b	.L371
 4623              	.L368:
3851:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
 4624              		.loc 1 3851 0
 4625 06ae 0121     		movs	r1, #1
 4626 06b0 6E20     		movs	r0, #110
 4627 06b2 FFF7FEFF 		bl	tp28xx_byte_write
 4628              	.LVL589:
3852:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4629              		.loc 1 3852 0
 4630 06b6 FF21     		movs	r1, #255
 4631 06b8 6E20     		movs	r0, #110
 4632 06ba FFF7FEFF 		bl	tp28xx_byte_write
 4633              	.LVL590:
3853:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4634              		.loc 1 3853 0
 4635 06be 0021     		movs	r1, #0
 4636 06c0 6E20     		movs	r0, #110
 4637 06c2 FFF7FEFF 		bl	tp28xx_byte_write
 4638              	.LVL591:
3854:TP2824/TP2802.c **** 							break;
 4639              		.loc 1 3854 0
 4640 06c6 0021     		movs	r1, #0
 4641 06c8 6E20     		movs	r0, #110
 4642 06ca FFF7FEFF 		bl	tp28xx_byte_write
 4643              	.LVL592:
3855:TP2824/TP2802.c **** 							
 4644              		.loc 1 3855 0
 4645 06ce 83E7     		b	.L371
 4646              	.L364:
3859:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4647              		.loc 1 3859 0
 4648 06d0 0021     		movs	r1, #0
 4649 06d2 6E20     		movs	r0, #110
 4650 06d4 FFF7FEFF 		bl	tp28xx_byte_write
 4651              	.LVL593:
3860:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4652              		.loc 1 3860 0
 4653 06d8 0021     		movs	r1, #0
 4654 06da 6E20     		movs	r0, #110
 4655 06dc FFF7FEFF 		bl	tp28xx_byte_write
 4656              	.LVL594:
3861:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4657              		.loc 1 3861 0
 4658 06e0 0021     		movs	r1, #0
 4659 06e2 6E20     		movs	r0, #110
 4660 06e4 FFF7FEFF 		bl	tp28xx_byte_write
 4661              	.LVL595:
3862:TP2824/TP2802.c **** 							break;
ARM GAS  /tmp/ccnKW75d.s 			page 162


 4662              		.loc 1 3862 0
 4663 06e8 0021     		movs	r1, #0
 4664 06ea 6E20     		movs	r0, #110
 4665 06ec FFF7FEFF 		bl	tp28xx_byte_write
 4666              	.LVL596:
3863:TP2824/TP2802.c **** 					}
 4667              		.loc 1 3863 0
 4668 06f0 72E7     		b	.L371
 4669              	.L397:
3875:TP2824/TP2802.c **** 				
 4670              		.loc 1 3875 0
 4671 06f2 FFF7FEFF 		bl	TVICommandToAHData
 4672              	.LVL597:
3877:TP2824/TP2802.c **** 					//SetRegPage(0x04);	
 4673              		.loc 1 3877 0
 4674 06f6 304B     		ldr	r3, .L402
 4675 06f8 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4676 06fa FFF7FEFF 		bl	SetRegPage
 4677              	.LVL598:
3885:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, 0x00);
 4678              		.loc 1 3885 0
 4679 06fe 0021     		movs	r1, #0
 4680 0700 5A20     		movs	r0, #90
 4681 0702 FFF7FEFF 		bl	tp28xx_byte_write
 4682              	.LVL599:
3886:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, 0x00);
 4683              		.loc 1 3886 0
 4684 0706 0021     		movs	r1, #0
 4685 0708 6020     		movs	r0, #96
 4686 070a FFF7FEFF 		bl	tp28xx_byte_write
 4687              	.LVL600:
3887:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, 0x00);
 4688              		.loc 1 3887 0
 4689 070e 0021     		movs	r1, #0
 4690 0710 6620     		movs	r0, #102
 4691 0712 FFF7FEFF 		bl	tp28xx_byte_write
 4692              	.LVL601:
3888:TP2824/TP2802.c **** 					
 4693              		.loc 1 3888 0
 4694 0716 0021     		movs	r1, #0
 4695 0718 6C20     		movs	r0, #108
 4696 071a FFF7FEFF 		bl	tp28xx_byte_write
 4697              	.LVL602:
3891:TP2824/TP2802.c **** 					//delay(5);//50ms	//20210514
 4698              		.loc 1 3891 0
 4699 071e 4521     		movs	r1, #69
 4700 0720 6F20     		movs	r0, #111
 4701 0722 FFF7FEFF 		bl	tp28xx_byte_write
 4702              	.LVL603:
3893:TP2824/TP2802.c **** 					
 4703              		.loc 1 3893 0
 4704 0726 4421     		movs	r1, #68
 4705 0728 6F20     		movs	r0, #111
 4706 072a FFF7FEFF 		bl	tp28xx_byte_write
 4707              	.LVL604:
3895:TP2824/TP2802.c **** 			
 4708              		.loc 1 3895 0
ARM GAS  /tmp/ccnKW75d.s 			page 163


 4709 072e 2320     		movs	r0, #35
 4710 0730 FFF7FEFF 		bl	HAL_Delay
 4711              	.LVL605:
3898:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, AHDBitsReverse(AHDcmd2));
 4712              		.loc 1 3898 0
 4713 0734 214D     		ldr	r5, .L402+4
 4714 0736 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 4715 0738 FFF7FEFF 		bl	AHDBitsReverse
 4716              	.LVL606:
 4717 073c 0146     		mov	r1, r0
 4718 073e 5A20     		movs	r0, #90
 4719 0740 FFF7FEFF 		bl	tp28xx_byte_write
 4720              	.LVL607:
3899:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, AHDBitsReverse(AHDcmd3));
 4721              		.loc 1 3899 0
 4722 0744 1E4E     		ldr	r6, .L402+8
 4723 0746 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 4724 0748 FFF7FEFF 		bl	AHDBitsReverse
 4725              	.LVL608:
 4726 074c 0146     		mov	r1, r0
 4727 074e 6020     		movs	r0, #96
 4728 0750 FFF7FEFF 		bl	tp28xx_byte_write
 4729              	.LVL609:
3900:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, AHDBitsReverse(AHDcmd4));
 4730              		.loc 1 3900 0
 4731 0754 1B4F     		ldr	r7, .L402+12
 4732 0756 3878     		ldrb	r0, [r7]	@ zero_extendqisi2
 4733 0758 FFF7FEFF 		bl	AHDBitsReverse
 4734              	.LVL610:
 4735 075c 0146     		mov	r1, r0
 4736 075e 6620     		movs	r0, #102
 4737 0760 FFF7FEFF 		bl	tp28xx_byte_write
 4738              	.LVL611:
3901:TP2824/TP2802.c **** 				
 4739              		.loc 1 3901 0
 4740 0764 184C     		ldr	r4, .L402+16
 4741 0766 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4742 0768 FFF7FEFF 		bl	AHDBitsReverse
 4743              	.LVL612:
 4744 076c 0146     		mov	r1, r0
 4745 076e 6C20     		movs	r0, #108
 4746 0770 FFF7FEFF 		bl	tp28xx_byte_write
 4747              	.LVL613:
3905:TP2824/TP2802.c **** 					//delay(5);//50ms	//20210514
 4748              		.loc 1 3905 0
 4749 0774 4521     		movs	r1, #69
 4750 0776 6F20     		movs	r0, #111
 4751 0778 FFF7FEFF 		bl	tp28xx_byte_write
 4752              	.LVL614:
3907:TP2824/TP2802.c **** 				
 4753              		.loc 1 3907 0
 4754 077c 4421     		movs	r1, #68
 4755 077e 6F20     		movs	r0, #111
 4756 0780 FFF7FEFF 		bl	tp28xx_byte_write
 4757              	.LVL615:
3909:TP2824/TP2802.c **** 
 4758              		.loc 1 3909 0
ARM GAS  /tmp/ccnKW75d.s 			page 164


 4759 0784 2320     		movs	r0, #35
 4760 0786 FFF7FEFF 		bl	HAL_Delay
 4761              	.LVL616:
3956:TP2824/TP2802.c **** 				//printf("~AHD %x,%x,%x,%x\n",AHDBitsReverse(AHDcmd1),AHDBitsReverse(0xF1),AHDBitsReverse(0x02)
 4762              		.loc 1 3956 0
 4763 078a 104B     		ldr	r3, .L402+20
 4764 078c 0022     		movs	r2, #0
 4765 078e 1A60     		str	r2, [r3]
3959:TP2824/TP2802.c **** 				Printf("Tx %02x,%02x,%02x,%02x",(WORD)AHDcmd1,(WORD)AHDcmd2,(WORD)AHDcmd3,(WORD)AHDcmd4);
 4766              		.loc 1 3959 0
 4767 0790 0F4B     		ldr	r3, .L402+24
 4768 0792 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4769 0794 0F4A     		ldr	r2, .L402+28
 4770 0796 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4771 0798 0F49     		ldr	r1, .L402+32
 4772 079a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4773 079c 0F48     		ldr	r0, .L402+36
 4774 079e FFF7FEFF 		bl	Printf
 4775              	.LVL617:
3960:TP2824/TP2802.c **** 				}
 4776              		.loc 1 3960 0
 4777 07a2 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4778 07a4 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 4779 07a6 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 4780 07a8 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4781 07aa 0090     		str	r0, [sp]
 4782 07ac 0C48     		ldr	r0, .L402+40
 4783 07ae FFF7FEFF 		bl	Printf
 4784              	.LVL618:
 4785 07b2 95E6     		b	.L372
 4786              	.L388:
 4787              	.LCFI34:
 4788              		.cfi_def_cfa_offset 0
 4789              		.cfi_restore 4
 4790              		.cfi_restore 5
 4791              		.cfi_restore 6
 4792              		.cfi_restore 7
 4793              		.cfi_restore 8
 4794              		.cfi_restore 14
 4795 07b4 7047     		bx	lr
 4796              	.L403:
 4797 07b6 00BF     		.align	2
 4798              	.L402:
 4799 07b8 00000000 		.word	.LANCHOR25
 4800 07bc 00000000 		.word	AHDcmd1
 4801 07c0 00000000 		.word	AHDcmd2
 4802 07c4 00000000 		.word	AHDcmd3
 4803 07c8 00000000 		.word	AHDcmd4
 4804 07cc 00000000 		.word	ptztxflag
 4805 07d0 00000000 		.word	TVI_speed
 4806 07d4 00000000 		.word	presetNum
 4807 07d8 00000000 		.word	TVI_Command
 4808 07dc 74000000 		.word	.LC39
 4809 07e0 8C000000 		.word	.LC40
 4810              		.cfi_endproc
 4811              	.LFE98:
 4813              		.section	.text.TP2824_PTZ_init,"ax",%progbits
ARM GAS  /tmp/ccnKW75d.s 			page 165


 4814              		.align	1
 4815              		.global	TP2824_PTZ_init
 4816              		.syntax unified
 4817              		.thumb
 4818              		.thumb_func
 4819              		.fpu softvfp
 4821              	TP2824_PTZ_init:
 4822              	.LFB99:
3966:TP2824/TP2802.c **** 
3967:TP2824/TP2802.c **** 
3968:TP2824/TP2802.c **** void TP2824_PTZ_init(void)
3969:TP2824/TP2802.c **** {
 4823              		.loc 1 3969 0
 4824              		.cfi_startproc
 4825              		@ args = 0, pretend = 0, frame = 0
 4826              		@ frame_needed = 0, uses_anonymous_args = 0
 4827 0000 08B5     		push	{r3, lr}
 4828              	.LCFI35:
 4829              		.cfi_def_cfa_offset 8
 4830              		.cfi_offset 3, -8
 4831              		.cfi_offset 14, -4
3970:TP2824/TP2802.c ****   //  unsigned int i;
3971:TP2824/TP2802.c **** 
3972:TP2824/TP2802.c ****   //  for( i = 0; i < 2; i++)
3973:TP2824/TP2802.c ****     //{
3974:TP2824/TP2802.c ****        // tp28xx_byte_write(chip, 0x40, i<<4); //bank
3975:TP2824/TP2802.c ****   SetRegPage(0x00);
 4832              		.loc 1 3975 0
 4833 0002 0020     		movs	r0, #0
 4834 0004 FFF7FEFF 		bl	SetRegPage
 4835              	.LVL619:
3976:TP2824/TP2802.c **** 
3977:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xc9, 0x00);
 4836              		.loc 1 3977 0
 4837 0008 0021     		movs	r1, #0
 4838 000a C920     		movs	r0, #201
 4839 000c FFF7FEFF 		bl	tp28xx_byte_write
 4840              	.LVL620:
3978:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xca, 0x00);
 4841              		.loc 1 3978 0
 4842 0010 0021     		movs	r1, #0
 4843 0012 CA20     		movs	r0, #202
 4844 0014 FFF7FEFF 		bl	tp28xx_byte_write
 4845              	.LVL621:
3979:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xcb, 0x06);
 4846              		.loc 1 3979 0
 4847 0018 0621     		movs	r1, #6
 4848 001a CB20     		movs	r0, #203
 4849 001c FFF7FEFF 		bl	tp28xx_byte_write
 4850              	.LVL622:
3980:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xcc, 0x07);
 4851              		.loc 1 3980 0
 4852 0020 0721     		movs	r1, #7
 4853 0022 CC20     		movs	r0, #204
 4854 0024 FFF7FEFF 		bl	tp28xx_byte_write
 4855              	.LVL623:
3981:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xcd, 0x08);
ARM GAS  /tmp/ccnKW75d.s 			page 166


 4856              		.loc 1 3981 0
 4857 0028 0821     		movs	r1, #8
 4858 002a CD20     		movs	r0, #205
 4859 002c FFF7FEFF 		bl	tp28xx_byte_write
 4860              	.LVL624:
3982:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xce, 0x09); //line6,7,8,9
 4861              		.loc 1 3982 0
 4862 0030 0921     		movs	r1, #9
 4863 0032 CE20     		movs	r0, #206
 4864 0034 FFF7FEFF 		bl	tp28xx_byte_write
 4865              	.LVL625:
3983:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xcf, 0x03);
 4866              		.loc 1 3983 0
 4867 0038 0321     		movs	r1, #3
 4868 003a CF20     		movs	r0, #207
 4869 003c FFF7FEFF 		bl	tp28xx_byte_write
 4870              	.LVL626:
3984:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd0, 0x48);
 4871              		.loc 1 3984 0
 4872 0040 4821     		movs	r1, #72
 4873 0042 D020     		movs	r0, #208
 4874 0044 FFF7FEFF 		bl	tp28xx_byte_write
 4875              	.LVL627:
3985:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd1, 0x34); //39 clock per bit 0.526us
 4876              		.loc 1 3985 0
 4877 0048 3421     		movs	r1, #52
 4878 004a D120     		movs	r0, #209
 4879 004c FFF7FEFF 		bl	tp28xx_byte_write
 4880              	.LVL628:
3986:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd2, 0x60);
 4881              		.loc 1 3986 0
 4882 0050 6021     		movs	r1, #96
 4883 0052 D220     		movs	r0, #210
 4884 0054 FFF7FEFF 		bl	tp28xx_byte_write
 4885              	.LVL629:
3987:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd3, 0x10);
 4886              		.loc 1 3987 0
 4887 0058 1021     		movs	r1, #16
 4888 005a D320     		movs	r0, #211
 4889 005c FFF7FEFF 		bl	tp28xx_byte_write
 4890              	.LVL630:
3988:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd4, 0x04); //
 4891              		.loc 1 3988 0
 4892 0060 0421     		movs	r1, #4
 4893 0062 D420     		movs	r0, #212
 4894 0064 FFF7FEFF 		bl	tp28xx_byte_write
 4895              	.LVL631:
3989:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd5, 0xf0);
 4896              		.loc 1 3989 0
 4897 0068 F021     		movs	r1, #240
 4898 006a D520     		movs	r0, #213
 4899 006c FFF7FEFF 		bl	tp28xx_byte_write
 4900              	.LVL632:
3990:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd6, 0xd8);
 4901              		.loc 1 3990 0
 4902 0070 D821     		movs	r1, #216
 4903 0072 D620     		movs	r0, #214
ARM GAS  /tmp/ccnKW75d.s 			page 167


 4904 0074 FFF7FEFF 		bl	tp28xx_byte_write
 4905              	.LVL633:
3991:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd7, 0x17); //24bit
 4906              		.loc 1 3991 0
 4907 0078 1721     		movs	r1, #23
 4908 007a D720     		movs	r0, #215
 4909 007c FFF7FEFF 		bl	tp28xx_byte_write
 4910              	.LVL634:
3992:TP2824/TP2802.c ****   
3993:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe1, 0x00);
 4911              		.loc 1 3993 0
 4912 0080 0021     		movs	r1, #0
 4913 0082 E120     		movs	r0, #225
 4914 0084 FFF7FEFF 		bl	tp28xx_byte_write
 4915              	.LVL635:
3994:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe2, 0x00);
 4916              		.loc 1 3994 0
 4917 0088 0021     		movs	r1, #0
 4918 008a E220     		movs	r0, #226
 4919 008c FFF7FEFF 		bl	tp28xx_byte_write
 4920              	.LVL636:
3995:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe3, 0x05);
 4921              		.loc 1 3995 0
 4922 0090 0521     		movs	r1, #5
 4923 0092 E320     		movs	r0, #227
 4924 0094 FFF7FEFF 		bl	tp28xx_byte_write
 4925              	.LVL637:
3996:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe4, 0x06);
 4926              		.loc 1 3996 0
 4927 0098 0621     		movs	r1, #6
 4928 009a E420     		movs	r0, #228
 4929 009c FFF7FEFF 		bl	tp28xx_byte_write
 4930              	.LVL638:
3997:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe5, 0x08);
 4931              		.loc 1 3997 0
 4932 00a0 0821     		movs	r1, #8
 4933 00a2 E520     		movs	r0, #229
 4934 00a4 FFF7FEFF 		bl	tp28xx_byte_write
 4935              	.LVL639:
3998:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe6, 0x09); //line6,7,8,9
 4936              		.loc 1 3998 0
 4937 00a8 0921     		movs	r1, #9
 4938 00aa E620     		movs	r0, #230
 4939 00ac FFF7FEFF 		bl	tp28xx_byte_write
 4940              	.LVL640:
3999:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe7, 0x03);
 4941              		.loc 1 3999 0
 4942 00b0 0321     		movs	r1, #3
 4943 00b2 E720     		movs	r0, #231
 4944 00b4 FFF7FEFF 		bl	tp28xx_byte_write
 4945              	.LVL641:
4000:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe8, 0x48);
 4946              		.loc 1 4000 0
 4947 00b8 4821     		movs	r1, #72
 4948 00ba E820     		movs	r0, #232
 4949 00bc FFF7FEFF 		bl	tp28xx_byte_write
 4950              	.LVL642:
ARM GAS  /tmp/ccnKW75d.s 			page 168


4001:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe9, 0x34); //39 clock per bit 0.526us
 4951              		.loc 1 4001 0
 4952 00c0 3421     		movs	r1, #52
 4953 00c2 E920     		movs	r0, #233
 4954 00c4 FFF7FEFF 		bl	tp28xx_byte_write
 4955              	.LVL643:
4002:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xea, 0x60);
 4956              		.loc 1 4002 0
 4957 00c8 6021     		movs	r1, #96
 4958 00ca EA20     		movs	r0, #234
 4959 00cc FFF7FEFF 		bl	tp28xx_byte_write
 4960              	.LVL644:
4003:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xeb, 0x10);
 4961              		.loc 1 4003 0
 4962 00d0 1021     		movs	r1, #16
 4963 00d2 EB20     		movs	r0, #235
 4964 00d4 FFF7FEFF 		bl	tp28xx_byte_write
 4965              	.LVL645:
4004:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xec, 0x04); //
 4966              		.loc 1 4004 0
 4967 00d8 0421     		movs	r1, #4
 4968 00da EC20     		movs	r0, #236
 4969 00dc FFF7FEFF 		bl	tp28xx_byte_write
 4970              	.LVL646:
4005:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xed, 0xf0);
 4971              		.loc 1 4005 0
 4972 00e0 F021     		movs	r1, #240
 4973 00e2 ED20     		movs	r0, #237
 4974 00e4 FFF7FEFF 		bl	tp28xx_byte_write
 4975              	.LVL647:
4006:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xee, 0xd8);
 4976              		.loc 1 4006 0
 4977 00e8 D821     		movs	r1, #216
 4978 00ea EE20     		movs	r0, #238
 4979 00ec FFF7FEFF 		bl	tp28xx_byte_write
 4980              	.LVL648:
4007:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xef, 0x17); //24bit
 4981              		.loc 1 4007 0
 4982 00f0 1721     		movs	r1, #23
 4983 00f2 EF20     		movs	r0, #239
 4984 00f4 FFF7FEFF 		bl	tp28xx_byte_write
 4985              	.LVL649:
4008:TP2824/TP2802.c ****   //}
4009:TP2824/TP2802.c ****   
4010:TP2824/TP2802.c **** 	  tp28xx_byte_write( 0x7E, 0x0F);	//TX channel enable
 4986              		.loc 1 4010 0
 4987 00f8 0F21     		movs	r1, #15
 4988 00fa 7E20     		movs	r0, #126
 4989 00fc FFF7FEFF 		bl	tp28xx_byte_write
 4990              	.LVL650:
4011:TP2824/TP2802.c **** 	  tp28xx_byte_write( 0xB9, 0x0F);	//RX channel enable
 4991              		.loc 1 4011 0
 4992 0100 0F21     		movs	r1, #15
 4993 0102 B920     		movs	r0, #185
 4994 0104 FFF7FEFF 		bl	tp28xx_byte_write
 4995              	.LVL651:
4012:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccnKW75d.s 			page 169


4013:TP2824/TP2802.c **** }
 4996              		.loc 1 4013 0
 4997 0108 08BD     		pop	{r3, pc}
 4998              		.cfi_endproc
 4999              	.LFE99:
 5001              		.section	.text.TP2824_PTZ_mode,"ax",%progbits
 5002              		.align	1
 5003              		.global	TP2824_PTZ_mode
 5004              		.syntax unified
 5005              		.thumb
 5006              		.thumb_func
 5007              		.fpu softvfp
 5009              	TP2824_PTZ_mode:
 5010              	.LFB100:
4014:TP2824/TP2802.c **** 
4015:TP2824/TP2802.c **** void TP2824_PTZ_mode(unsigned char ch, unsigned char mod)
4016:TP2824/TP2802.c **** {
 5011              		.loc 1 4016 0
 5012              		.cfi_startproc
 5013              		@ args = 0, pretend = 0, frame = 0
 5014              		@ frame_needed = 0, uses_anonymous_args = 0
 5015              	.LVL652:
 5016 0000 38B5     		push	{r3, r4, r5, lr}
 5017              	.LCFI36:
 5018              		.cfi_def_cfa_offset 16
 5019              		.cfi_offset 3, -16
 5020              		.cfi_offset 4, -12
 5021              		.cfi_offset 5, -8
 5022              		.cfi_offset 14, -4
 5023 0002 0546     		mov	r5, r0
4017:TP2824/TP2802.c ****     unsigned int /*tmp,*/ i;
4018:TP2824/TP2802.c **** 
4019:TP2824/TP2802.c **** //    static const unsigned char PTZ_bank[4]= {0x00,0x00,0x10,0x10};
4020:TP2824/TP2802.c ****     static const unsigned char PTZ_reg[4][7]=
4021:TP2824/TP2802.c ****     {
4022:TP2824/TP2802.c ****         {0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8},
4023:TP2824/TP2802.c ****         {0xda,0xdb,0xdc,0xdd,0xde,0xdf,0xe0},
4024:TP2824/TP2802.c ****         {0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8},
4025:TP2824/TP2802.c ****         {0xda,0xdb,0xdc,0xdd,0xde,0xdf,0xe0}
4026:TP2824/TP2802.c ****     };
4027:TP2824/TP2802.c ****     static const unsigned char PTZ_dat[ ][7]=
4028:TP2824/TP2802.c ****     {
4029:TP2824/TP2802.c ****         {0x0b,0x0c,0x0d,0x0e,0x19,0x78,0x21}, //TVI1.0
4030:TP2824/TP2802.c ****         {0x0b,0x0c,0x0d,0x0e,0x33,0xf0,0x21}, //TVI2.0
4031:TP2824/TP2802.c ****         {0x0e,0x0f,0x10,0x11,0x66,0xf0,0x17}, //A1080p for 2833B 0.525
4032:TP2824/TP2802.c ****         {0x0e,0x0f,0x10,0x11,0x26,0xf0,0x57}, //A1080p for 2833C 0.525
4033:TP2824/TP2802.c ****         {0x0e,0x0f,0x00,0x00,0x26,0xe0,0xef}, //A720p for 2833C 0.525
4034:TP2824/TP2802.c ****         {0x0f,0x10,0x00,0x00,0x48,0xf0,0x6f}, //960H for 2833C
4035:TP2824/TP2802.c ****         {0x10,0x11,0x12,0x13,0x15,0xb8,0xa2}, //HDC 2833C
4036:TP2824/TP2802.c ****         {0x10,0x11,0x12,0x13,0x95,0xb8,0x22}, //HDC 2833B
4037:TP2824/TP2802.c ****     };
4038:TP2824/TP2802.c **** 
4039:TP2824/TP2802.c ****     //tmp = tp28xx_byte_read(chip, 0x40);
4040:TP2824/TP2802.c ****     //tmp &= 0xaf;
4041:TP2824/TP2802.c ****     //tmp |=PTZ_bank[ch];
4042:TP2824/TP2802.c ****     //tp28xx_byte_write(chip, 0x40, tmp); //reg bank1 switch for 2822
4043:TP2824/TP2802.c ****  //   tp28xx_byte_write(chip, 0x40, PTZ_bank[ch]); //reg bank1 switch for 2822
ARM GAS  /tmp/ccnKW75d.s 			page 170


4044:TP2824/TP2802.c **** #if 1
4045:TP2824/TP2802.c **** SetRegPage(0x00);
 5024              		.loc 1 4045 0
 5025 0004 0020     		movs	r0, #0
 5026              	.LVL653:
 5027 0006 FFF7FEFF 		bl	SetRegPage
 5028              	.LVL654:
4046:TP2824/TP2802.c **** 
4047:TP2824/TP2802.c **** for(i = 0; i < 7; i++)//1080PAHD
 5029              		.loc 1 4047 0
 5030 000a 0024     		movs	r4, #0
 5031 000c 0AE0     		b	.L407
 5032              	.LVL655:
 5033              	.L408:
4048:TP2824/TP2802.c **** 	tp28xx_byte_write( PTZ_reg[ch][i], PTZ_dat[2][i]);
 5034              		.loc 1 4048 0 discriminator 3
 5035 000e 074A     		ldr	r2, .L410
 5036 0010 2244     		add	r2, r2, r4
 5037 0012 C5EBC501 		rsb	r1, r5, r5, lsl #3
 5038 0016 064B     		ldr	r3, .L410+4
 5039 0018 0B44     		add	r3, r3, r1
 5040 001a 917B     		ldrb	r1, [r2, #14]	@ zero_extendqisi2
 5041 001c 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 5042 001e FFF7FEFF 		bl	tp28xx_byte_write
 5043              	.LVL656:
4047:TP2824/TP2802.c **** 	tp28xx_byte_write( PTZ_reg[ch][i], PTZ_dat[2][i]);
 5044              		.loc 1 4047 0 discriminator 3
 5045 0022 0134     		adds	r4, r4, #1
 5046              	.LVL657:
 5047              	.L407:
4047:TP2824/TP2802.c **** 	tp28xx_byte_write( PTZ_reg[ch][i], PTZ_dat[2][i]);
 5048              		.loc 1 4047 0 is_stmt 0 discriminator 1
 5049 0024 062C     		cmp	r4, #6
 5050 0026 F2D9     		bls	.L408
4049:TP2824/TP2802.c **** 
4050:TP2824/TP2802.c **** #else
4051:TP2824/TP2802.c ****     for(i = 0; i < 7; i++)
4052:TP2824/TP2802.c ****     {
4053:TP2824/TP2802.c ****         if(PTZ_TVI == mod)
4054:TP2824/TP2802.c ****         {
4055:TP2824/TP2802.c ****             tmp = tp28xx_byte_read(chip, 0xf5); //check TVI 1 or 2
4056:TP2824/TP2802.c ****             if( (tmp >>ch) & 0x01)
4057:TP2824/TP2802.c ****             {
4058:TP2824/TP2802.c ****                 tp28xx_byte_write(chip, PTZ_reg[ch][i], PTZ_dat[1][i]);
4059:TP2824/TP2802.c ****             }
4060:TP2824/TP2802.c ****             else
4061:TP2824/TP2802.c ****             {
4062:TP2824/TP2802.c ****                 tp28xx_byte_write(chip, PTZ_reg[ch][i], PTZ_dat[0][i]);
4063:TP2824/TP2802.c ****             }
4064:TP2824/TP2802.c ****         }
4065:TP2824/TP2802.c ****         else if(PTZ_HDA_1080P == mod) //HDA 1080p
4066:TP2824/TP2802.c ****         {
4067:TP2824/TP2802.c ****                 tp28xx_byte_write(chip, PTZ_reg[ch][i], PTZ_dat[2][i]);
4068:TP2824/TP2802.c **** 
4069:TP2824/TP2802.c ****         }
4070:TP2824/TP2802.c ****         else if(PTZ_HDA_720P == mod) //HDA 720p
4071:TP2824/TP2802.c ****         {
ARM GAS  /tmp/ccnKW75d.s 			page 171


4072:TP2824/TP2802.c ****                 tp28xx_byte_write(chip, PTZ_reg[ch][i], PTZ_dat[2][i]);
4073:TP2824/TP2802.c ****         }
4074:TP2824/TP2802.c ****         else if(PTZ_HDC == mod) // test
4075:TP2824/TP2802.c ****         {
4076:TP2824/TP2802.c ****                 tp28xx_byte_write(chip, PTZ_reg[ch][i], PTZ_dat[7][i]);
4077:TP2824/TP2802.c ****         }
4078:TP2824/TP2802.c **** 
4079:TP2824/TP2802.c ****     }
4080:TP2824/TP2802.c ****     tp28xx_byte_write(chip, 0xB7, 0x0f); //enable TX interrupt flag
4081:TP2824/TP2802.c **** #endif
4082:TP2824/TP2802.c **** }
 5051              		.loc 1 4082 0 is_stmt 1
 5052 0028 38BD     		pop	{r3, r4, r5, pc}
 5053              	.LVL658:
 5054              	.L411:
 5055 002a 00BF     		.align	2
 5056              	.L410:
 5057 002c 00000000 		.word	.LANCHOR26
 5058 0030 00000000 		.word	.LANCHOR27
 5059              		.cfi_endproc
 5060              	.LFE100:
 5062              		.section	.text.TP2824C_RX_init,"ax",%progbits
 5063              		.align	1
 5064              		.global	TP2824C_RX_init
 5065              		.syntax unified
 5066              		.thumb
 5067              		.thumb_func
 5068              		.fpu softvfp
 5070              	TP2824C_RX_init:
 5071              	.LFB101:
4083:TP2824/TP2802.c **** 
4084:TP2824/TP2802.c ****  void TP2824C_RX_init(unsigned char chip, unsigned char mod)
4085:TP2824/TP2802.c **** {
 5072              		.loc 1 4085 0
 5073              		.cfi_startproc
 5074              		@ args = 0, pretend = 0, frame = 0
 5075              		@ frame_needed = 0, uses_anonymous_args = 0
 5076              	.LVL659:
 5077 0000 10B5     		push	{r4, lr}
 5078              	.LCFI37:
 5079              		.cfi_def_cfa_offset 8
 5080              		.cfi_offset 4, -8
 5081              		.cfi_offset 14, -4
 5082              	.LVL660:
4086:TP2824/TP2802.c **** 
4087:TP2824/TP2802.c ****     int i, index=0;
4088:TP2824/TP2802.c **** 
4089:TP2824/TP2802.c ****     static const unsigned char PTZ_RX_dat[][15]=
4090:TP2824/TP2802.c ****     {
4091:TP2824/TP2802.c ****         {0x00,0x00,0x07,0x08,0x00,0x00,0x04,0x00,0x00,0x60,0x10,0x04,0xf0,0xd8,0x27}, //TVI command
4092:TP2824/TP2802.c ****         {0x00,0x00,0x07,0x08,0x09,0x0a,0x04,0x00,0x00,0x60,0x10,0x04,0xf0,0xd8,0x27}, //TVI burst
4093:TP2824/TP2802.c ****         {0x00,0x00,0x06,0x07,0x08,0x09,0x03,0x52,0x53,0x60,0x10,0x04,0xf0,0xd8,0x17}, //ACP1 0.525
4094:TP2824/TP2802.c ****         {0x00,0x00,0x06,0x07,0x08,0x09,0x02,0xdf,0x88,0x60,0x10,0x04,0xf0,0xd8,0x17}, //ACP2 0.6
4095:TP2824/TP2802.c ****         {0x00,0x00,0x06,0x07,0x08,0x09,0x04,0xec,0xe9,0x60,0x10,0x04,0xf0,0xd8,0x17}, //ACP3 0.35
4096:TP2824/TP2802.c ****     };
4097:TP2824/TP2802.c **** #if 0
4098:TP2824/TP2802.c ****         if(PTZ_RX_TVI_CMD == mod)
ARM GAS  /tmp/ccnKW75d.s 			page 172


4099:TP2824/TP2802.c ****         {
4100:TP2824/TP2802.c ****             index = 0;
4101:TP2824/TP2802.c ****         }
4102:TP2824/TP2802.c ****         else if(PTZ_RX_TVI_BURST == mod)
4103:TP2824/TP2802.c ****         {
4104:TP2824/TP2802.c ****             index = 1;
4105:TP2824/TP2802.c ****         }
4106:TP2824/TP2802.c ****         else if(PTZ_RX_ACP1 == mod)
4107:TP2824/TP2802.c ****         {
4108:TP2824/TP2802.c ****             index = 2;
4109:TP2824/TP2802.c ****         }
4110:TP2824/TP2802.c ****         else if(PTZ_RX_ACP2 == mod)
4111:TP2824/TP2802.c ****         {
4112:TP2824/TP2802.c ****             index = 3;
4113:TP2824/TP2802.c ****         }
4114:TP2824/TP2802.c ****         else if(PTZ_RX_ACP3 == mod)
4115:TP2824/TP2802.c ****         {
4116:TP2824/TP2802.c ****             index = 4;
4117:TP2824/TP2802.c ****         }
4118:TP2824/TP2802.c **** 		#endif
4119:TP2824/TP2802.c **** 		index = 3;
4120:TP2824/TP2802.c **** 
4121:TP2824/TP2802.c ****         for(i = 0; i < 15; i++)
 5083              		.loc 1 4121 0
 5084 0002 0024     		movs	r4, #0
 5085 0004 09E0     		b	.L413
 5086              	.LVL661:
 5087              	.L414:
4122:TP2824/TP2802.c ****         {
4123:TP2824/TP2802.c **** //              tp28xx_byte_write(chip, 0xc9+i, PTZ_RX_dat[index][i]);
4124:TP2824/TP2802.c ****             tp28xx_byte_write(0xc9+i, PTZ_RX_dat[index][i]);
 5088              		.loc 1 4124 0 discriminator 3
 5089 0006 064B     		ldr	r3, .L416
 5090 0008 2344     		add	r3, r3, r4
 5091 000a A4F13700 		sub	r0, r4, #55
 5092 000e 93F82D10 		ldrb	r1, [r3, #45]	@ zero_extendqisi2
 5093 0012 C0B2     		uxtb	r0, r0
 5094 0014 FFF7FEFF 		bl	tp28xx_byte_write
 5095              	.LVL662:
4121:TP2824/TP2802.c ****         {
 5096              		.loc 1 4121 0 discriminator 3
 5097 0018 0134     		adds	r4, r4, #1
 5098              	.LVL663:
 5099              	.L413:
4121:TP2824/TP2802.c ****         {
 5100              		.loc 1 4121 0 is_stmt 0 discriminator 1
 5101 001a 0E2C     		cmp	r4, #14
 5102 001c F3DD     		ble	.L414
4125:TP2824/TP2802.c ****         }
4126:TP2824/TP2802.c **** 
4127:TP2824/TP2802.c **** }
 5103              		.loc 1 4127 0 is_stmt 1
 5104 001e 10BD     		pop	{r4, pc}
 5105              	.LVL664:
 5106              	.L417:
 5107              		.align	2
 5108              	.L416:
ARM GAS  /tmp/ccnKW75d.s 			page 173


 5109 0020 00000000 		.word	.LANCHOR28
 5110              		.cfi_endproc
 5111              	.LFE101:
 5113              		.section	.text.TP2824C_PTZ_mode,"ax",%progbits
 5114              		.align	1
 5115              		.global	TP2824C_PTZ_mode
 5116              		.syntax unified
 5117              		.thumb
 5118              		.thumb_func
 5119              		.fpu softvfp
 5121              	TP2824C_PTZ_mode:
 5122              	.LFB102:
4128:TP2824/TP2802.c **** 
4129:TP2824/TP2802.c **** void TP2824C_PTZ_mode(unsigned char chip, unsigned char ch, unsigned char mod)
4130:TP2824/TP2802.c **** {
 5123              		.loc 1 4130 0
 5124              		.cfi_startproc
 5125              		@ args = 0, pretend = 0, frame = 0
 5126              		@ frame_needed = 0, uses_anonymous_args = 0
 5127              	.LVL665:
 5128 0000 10B5     		push	{r4, lr}
 5129              	.LCFI38:
 5130              		.cfi_def_cfa_offset 8
 5131              		.cfi_offset 4, -8
 5132              		.cfi_offset 14, -4
 5133              	.LVL666:
4131:TP2824/TP2802.c ****     unsigned int /*tmp,*/ i, index=0;
4132:TP2824/TP2802.c **** 
4133:TP2824/TP2802.c ****     static const unsigned char PTZ_reg[12]=
4134:TP2824/TP2802.c ****     {
4135:TP2824/TP2802.c ****         0x6f,0x70,0x71,0xc0,0xc1,0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8
4136:TP2824/TP2802.c ****     };
4137:TP2824/TP2802.c ****     static const unsigned char PTZ_dat[][12]=
4138:TP2824/TP2802.c ****     {
4139:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x0b,0x0c,0x0d,0x0e,0x19,0x78,0x21}, //TVI1.0
4140:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x0b,0x0c,0x0d,0x0e,0x33,0xf0,0x21}, //TVI2.0
4141:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x0e,0x0f,0x10,0x11,0x26,0xf0,0x57}, //A1080p for 0.525
4142:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x0e,0x0f,0x00,0x00,0x26,0xe0,0xef}, //A720p for  0.525
4143:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x0f,0x10,0x00,0x00,0x4d,0xf0,0x6f}, //960H for
4144:TP2824/TP2802.c ****         //{0x4a,0x5d,0x00,0x00,0x00,0x10,0x11,0x12,0x13,0x15,0xb8,0x9f}, //HDC for
4145:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x10,0x11,0x12,0x15,0x15,0xb8,0xa2}, //HDC for
4146:TP2824/TP2802.c ****     };
4147:TP2824/TP2802.c **** 
4148:TP2824/TP2802.c ****    // tp28xx_byte_write(chip, 0x40, ch); //reg bank1 switch
4149:TP2824/TP2802.c ****     
4150:TP2824/TP2802.c **** #if 0
4151:TP2824/TP2802.c ****         if(PTZ_TVI == mod)
4152:TP2824/TP2802.c ****         {
4153:TP2824/TP2802.c ****             tmp = tp28xx_byte_read(chip, 0xf5); //check TVI 1 or 2
4154:TP2824/TP2802.c ****             if( (tmp >>ch) & 0x01)
4155:TP2824/TP2802.c ****             {
4156:TP2824/TP2802.c ****                 index = 1;
4157:TP2824/TP2802.c ****             }
4158:TP2824/TP2802.c ****             else
4159:TP2824/TP2802.c ****             {
4160:TP2824/TP2802.c ****                 index = 0;
4161:TP2824/TP2802.c ****             }
ARM GAS  /tmp/ccnKW75d.s 			page 174


4162:TP2824/TP2802.c ****         }
4163:TP2824/TP2802.c ****         else if(PTZ_HDA_1080P == mod) //HDA 1080p
4164:TP2824/TP2802.c ****         {
4165:TP2824/TP2802.c ****                 index = 2;
4166:TP2824/TP2802.c ****         }
4167:TP2824/TP2802.c ****         else if(PTZ_HDA_720P == mod) //HDA 720p
4168:TP2824/TP2802.c ****         {
4169:TP2824/TP2802.c ****                 index = 3;
4170:TP2824/TP2802.c ****         }
4171:TP2824/TP2802.c ****         else if(PTZ_HDA_CVBS == mod) //HDA CVBS
4172:TP2824/TP2802.c ****         {
4173:TP2824/TP2802.c ****                 index = 4;
4174:TP2824/TP2802.c ****         }
4175:TP2824/TP2802.c ****         else if(PTZ_HDC == mod) // test
4176:TP2824/TP2802.c ****         {
4177:TP2824/TP2802.c ****                 index = 5;
4178:TP2824/TP2802.c ****         }
4179:TP2824/TP2802.c **** #endif
4180:TP2824/TP2802.c **** 	 SetRegPage(0x00);
 5134              		.loc 1 4180 0
 5135 0002 0020     		movs	r0, #0
 5136              	.LVL667:
 5137 0004 FFF7FEFF 		bl	SetRegPage
 5138              	.LVL668:
4181:TP2824/TP2802.c **** 	 index=2;
4182:TP2824/TP2802.c **** 
4183:TP2824/TP2802.c ****      for(i = 0; i < 12; i++)
 5139              		.loc 1 4183 0
 5140 0008 0024     		movs	r4, #0
 5141 000a 07E0     		b	.L419
 5142              	.LVL669:
 5143              	.L420:
4184:TP2824/TP2802.c ****      {
4185:TP2824/TP2802.c **** //         tp28xx_byte_write(chip, PTZ_reg[i], PTZ_dat[index][i]);
4186:TP2824/TP2802.c **** 	   tp28xx_byte_write(PTZ_reg[i], PTZ_dat[index][i]);
 5144              		.loc 1 4186 0 discriminator 3
 5145 000c 054B     		ldr	r3, .L422
 5146 000e 2344     		add	r3, r3, r4
 5147 0010 197E     		ldrb	r1, [r3, #24]	@ zero_extendqisi2
 5148 0012 054B     		ldr	r3, .L422+4
 5149 0014 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 5150 0016 FFF7FEFF 		bl	tp28xx_byte_write
 5151              	.LVL670:
4183:TP2824/TP2802.c ****      {
 5152              		.loc 1 4183 0 discriminator 3
 5153 001a 0134     		adds	r4, r4, #1
 5154              	.LVL671:
 5155              	.L419:
4183:TP2824/TP2802.c ****      {
 5156              		.loc 1 4183 0 is_stmt 0 discriminator 1
 5157 001c 0B2C     		cmp	r4, #11
 5158 001e F5D9     		bls	.L420
4187:TP2824/TP2802.c ****      }
4188:TP2824/TP2802.c **** 
4189:TP2824/TP2802.c **** }
 5159              		.loc 1 4189 0 is_stmt 1
 5160 0020 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccnKW75d.s 			page 175


 5161              	.LVL672:
 5162              	.L423:
 5163 0022 00BF     		.align	2
 5164              	.L422:
 5165 0024 00000000 		.word	.LANCHOR29
 5166 0028 00000000 		.word	.LANCHOR30
 5167              		.cfi_endproc
 5168              	.LFE102:
 5170              		.section	.text.HDA_SetACPV2Data,"ax",%progbits
 5171              		.align	1
 5172              		.global	HDA_SetACPV2Data
 5173              		.syntax unified
 5174              		.thumb
 5175              		.thumb_func
 5176              		.fpu softvfp
 5178              	HDA_SetACPV2Data:
 5179              	.LFB103:
4190:TP2824/TP2802.c **** 
4191:TP2824/TP2802.c **** void HDA_SetACPV2Data(unsigned char chip, unsigned char reg,unsigned char dat)
4192:TP2824/TP2802.c **** 	{
 5180              		.loc 1 4192 0
 5181              		.cfi_startproc
 5182              		@ args = 0, pretend = 0, frame = 0
 5183              		@ frame_needed = 0, uses_anonymous_args = 0
 5184              	.LVL673:
 5185 0000 38B5     		push	{r3, r4, r5, lr}
 5186              	.LCFI39:
 5187              		.cfi_def_cfa_offset 16
 5188              		.cfi_offset 3, -16
 5189              		.cfi_offset 4, -12
 5190              		.cfi_offset 5, -8
 5191              		.cfi_offset 14, -4
 5192 0002 0D46     		mov	r5, r1
 5193              	.LVL674:
4193:TP2824/TP2802.c **** 		unsigned int i;
4194:TP2824/TP2802.c **** 		unsigned int PTZ_pelco=0;
 5194              		.loc 1 4194 0
 5195 0004 0024     		movs	r4, #0
4195:TP2824/TP2802.c **** 	
4196:TP2824/TP2802.c **** 		for(i = 0; i < 8; i++)
 5196              		.loc 1 4196 0
 5197 0006 2346     		mov	r3, r4
 5198 0008 04E0     		b	.L425
 5199              	.LVL675:
 5200              	.L431:
4197:TP2824/TP2802.c **** 		{
4198:TP2824/TP2802.c **** 			PTZ_pelco <<= 3;
4199:TP2824/TP2802.c **** 	
4200:TP2824/TP2802.c **** 			if(0x80 & dat) PTZ_pelco |= 0x06;
 5201              		.loc 1 4200 0 discriminator 1
 5202 000a 44F00604 		orr	r4, r4, #6
 5203              	.LVL676:
 5204              	.L427:
4201:TP2824/TP2802.c **** 			else PTZ_pelco |= 0x04;
4202:TP2824/TP2802.c **** 	
4203:TP2824/TP2802.c **** 			dat <<= 1;
 5205              		.loc 1 4203 0 discriminator 2
ARM GAS  /tmp/ccnKW75d.s 			page 176


 5206 000e 5200     		lsls	r2, r2, #1
 5207              	.LVL677:
 5208 0010 D2B2     		uxtb	r2, r2
 5209              	.LVL678:
4196:TP2824/TP2802.c **** 		{
 5210              		.loc 1 4196 0 discriminator 2
 5211 0012 0133     		adds	r3, r3, #1
 5212              	.LVL679:
 5213              	.L425:
4196:TP2824/TP2802.c **** 		{
 5214              		.loc 1 4196 0 is_stmt 0 discriminator 1
 5215 0014 072B     		cmp	r3, #7
 5216 0016 06D8     		bhi	.L430
4198:TP2824/TP2802.c **** 	
 5217              		.loc 1 4198 0 is_stmt 1
 5218 0018 E400     		lsls	r4, r4, #3
 5219              	.LVL680:
4200:TP2824/TP2802.c **** 			else PTZ_pelco |= 0x04;
 5220              		.loc 1 4200 0
 5221 001a 12F0800F 		tst	r2, #128
 5222 001e F4D1     		bne	.L431
4201:TP2824/TP2802.c **** 	
 5223              		.loc 1 4201 0
 5224 0020 44F00404 		orr	r4, r4, #4
 5225              	.LVL681:
 5226 0024 F3E7     		b	.L427
 5227              	.L430:
4204:TP2824/TP2802.c **** 		}
4205:TP2824/TP2802.c **** 	
4206:TP2824/TP2802.c **** 		tp28xx_byte_write( reg + 0 , (PTZ_pelco>>16)&0xff);
 5228              		.loc 1 4206 0
 5229 0026 C4F30741 		ubfx	r1, r4, #16, #8
 5230              	.LVL682:
 5231 002a 2846     		mov	r0, r5
 5232              	.LVL683:
 5233 002c FFF7FEFF 		bl	tp28xx_byte_write
 5234              	.LVL684:
4207:TP2824/TP2802.c **** 		tp28xx_byte_write( reg + 1 , (PTZ_pelco>>8)&0xff);
 5235              		.loc 1 4207 0
 5236 0030 681C     		adds	r0, r5, #1
 5237 0032 C4F30721 		ubfx	r1, r4, #8, #8
 5238 0036 C0B2     		uxtb	r0, r0
 5239 0038 FFF7FEFF 		bl	tp28xx_byte_write
 5240              	.LVL685:
4208:TP2824/TP2802.c **** 		tp28xx_byte_write( reg + 2 , (PTZ_pelco)&0xff);
 5241              		.loc 1 4208 0
 5242 003c A81C     		adds	r0, r5, #2
 5243 003e 04F0FE01 		and	r1, r4, #254
 5244 0042 C0B2     		uxtb	r0, r0
 5245 0044 FFF7FEFF 		bl	tp28xx_byte_write
 5246              	.LVL686:
4209:TP2824/TP2802.c **** 	}
 5247              		.loc 1 4209 0
 5248 0048 38BD     		pop	{r3, r4, r5, pc}
 5249              		.cfi_endproc
 5250              	.LFE103:
 5252              		.section	.text.TP2824C_StartTX,"ax",%progbits
ARM GAS  /tmp/ccnKW75d.s 			page 177


 5253              		.align	1
 5254              		.global	TP2824C_StartTX
 5255              		.syntax unified
 5256              		.thumb
 5257              		.thumb_func
 5258              		.fpu softvfp
 5260              	TP2824C_StartTX:
 5261              	.LFB104:
4210:TP2824/TP2802.c **** 
4211:TP2824/TP2802.c **** 
4212:TP2824/TP2802.c **** void TP2824C_StartTX(unsigned char chip, unsigned char ch)
4213:TP2824/TP2802.c **** {
 5262              		.loc 1 4213 0
 5263              		.cfi_startproc
 5264              		@ args = 0, pretend = 0, frame = 0
 5265              		@ frame_needed = 0, uses_anonymous_args = 0
 5266              	.LVL687:
 5267 0000 38B5     		push	{r3, r4, r5, lr}
 5268              	.LCFI40:
 5269              		.cfi_def_cfa_offset 16
 5270              		.cfi_offset 3, -16
 5271              		.cfi_offset 4, -12
 5272              		.cfi_offset 5, -8
 5273              		.cfi_offset 14, -4
 5274 0002 0D46     		mov	r5, r1
4214:TP2824/TP2802.c **** 	unsigned char tmp;
4215:TP2824/TP2802.c **** 	int i;
4216:TP2824/TP2802.c **** 
4217:TP2824/TP2802.c **** 	tp28xx_byte_write( 0xB6, (0x01<<(ch))); //clear flag
 5275              		.loc 1 4217 0
 5276 0004 0121     		movs	r1, #1
 5277              	.LVL688:
 5278 0006 A940     		lsls	r1, r1, r5
 5279 0008 C9B2     		uxtb	r1, r1
 5280 000a B620     		movs	r0, #182
 5281              	.LVL689:
 5282 000c FFF7FEFF 		bl	tp28xx_byte_write
 5283              	.LVL690:
4218:TP2824/TP2802.c **** 
4219:TP2824/TP2802.c **** 	tmp = tp28xx_byte_read( 0x6f);
 5284              		.loc 1 4219 0
 5285 0010 6F20     		movs	r0, #111
 5286 0012 FFF7FEFF 		bl	tp28xx_byte_read
 5287              	.LVL691:
 5288 0016 0446     		mov	r4, r0
 5289              	.LVL692:
4220:TP2824/TP2802.c ****     tmp |= 0x01;
 5290              		.loc 1 4220 0
 5291 0018 40F00101 		orr	r1, r0, #1
 5292              	.LVL693:
4221:TP2824/TP2802.c ****     tp28xx_byte_write( 0x6f, tmp); //TX enable
 5293              		.loc 1 4221 0
 5294 001c C9B2     		uxtb	r1, r1
 5295 001e 6F20     		movs	r0, #111
 5296 0020 FFF7FEFF 		bl	tp28xx_byte_write
 5297              	.LVL694:
4222:TP2824/TP2802.c ****     tmp &= 0xfe;
ARM GAS  /tmp/ccnKW75d.s 			page 178


4223:TP2824/TP2802.c ****     tp28xx_byte_write( 0x6f, tmp); //TX disable
 5298              		.loc 1 4223 0
 5299 0024 04F0FE01 		and	r1, r4, #254
 5300 0028 6F20     		movs	r0, #111
 5301 002a FFF7FEFF 		bl	tp28xx_byte_write
 5302              	.LVL695:
4224:TP2824/TP2802.c **** 
4225:TP2824/TP2802.c ****     i = 100;
 5303              		.loc 1 4225 0
 5304 002e 6423     		movs	r3, #100
 5305              	.LVL696:
 5306              	.L433:
4226:TP2824/TP2802.c ****     while(i--)
 5307              		.loc 1 4226 0
 5308 0030 5C1E     		subs	r4, r3, #1
 5309              	.LVL697:
 5310 0032 5BB1     		cbz	r3, .L432
4227:TP2824/TP2802.c ****     {
4228:TP2824/TP2802.c ****         if( (0x01<<(ch)) & tp28xx_byte_read( 0xb6)) break;
 5311              		.loc 1 4228 0
 5312 0034 B620     		movs	r0, #182
 5313 0036 FFF7FEFF 		bl	tp28xx_byte_read
 5314              	.LVL698:
 5315 003a 2841     		asrs	r0, r0, r5
 5316 003c 10F0010F 		tst	r0, #1
 5317 0040 04D1     		bne	.L432
4229:TP2824/TP2802.c ****         //udelay(1000);
4230:TP2824/TP2802.c ****         msleep(2);
 5318              		.loc 1 4230 0
 5319 0042 0220     		movs	r0, #2
 5320 0044 FFF7FEFF 		bl	msleep
 5321              	.LVL699:
4226:TP2824/TP2802.c ****     {
 5322              		.loc 1 4226 0
 5323 0048 2346     		mov	r3, r4
 5324 004a F1E7     		b	.L433
 5325              	.L432:
4231:TP2824/TP2802.c ****     }
4232:TP2824/TP2802.c **** 
4233:TP2824/TP2802.c **** }
 5326              		.loc 1 4233 0
 5327 004c 38BD     		pop	{r3, r4, r5, pc}
 5328              		.cfi_endproc
 5329              	.LFE104:
 5331              		.section	.text.COC_test,"ax",%progbits
 5332              		.align	1
 5333              		.global	COC_test
 5334              		.syntax unified
 5335              		.thumb
 5336              		.thumb_func
 5337              		.fpu softvfp
 5339              	COC_test:
 5340              	.LFB105:
4234:TP2824/TP2802.c **** 
4235:TP2824/TP2802.c **** void COC_test(void)
4236:TP2824/TP2802.c **** {
 5341              		.loc 1 4236 0
ARM GAS  /tmp/ccnKW75d.s 			page 179


 5342              		.cfi_startproc
 5343              		@ args = 0, pretend = 0, frame = 0
 5344              		@ frame_needed = 0, uses_anonymous_args = 0
 5345              		@ link register save eliminated.
4237:TP2824/TP2802.c **** 
4238:TP2824/TP2802.c **** 
4239:TP2824/TP2802.c **** 
4240:TP2824/TP2802.c **** 		TVI_Command=0x0F;
 5346              		.loc 1 4240 0
 5347 0000 074B     		ldr	r3, .L438
 5348 0002 0F22     		movs	r2, #15
 5349 0004 1A70     		strb	r2, [r3]
4241:TP2824/TP2802.c **** 		presetNum=0;
 5350              		.loc 1 4241 0
 5351 0006 0023     		movs	r3, #0
 5352 0008 064A     		ldr	r2, .L438+4
 5353 000a 1370     		strb	r3, [r2]
4242:TP2824/TP2802.c **** 		TVI_speed=0;
 5354              		.loc 1 4242 0
 5355 000c 064A     		ldr	r2, .L438+8
 5356 000e 1370     		strb	r3, [r2]
4243:TP2824/TP2802.c **** 		TVI_Chksum=0xC5;
 5357              		.loc 1 4243 0
 5358 0010 064B     		ldr	r3, .L438+12
 5359 0012 C522     		movs	r2, #197
 5360 0014 1A70     		strb	r2, [r3]
4244:TP2824/TP2802.c **** 		ptztxflag=1;
 5361              		.loc 1 4244 0
 5362 0016 064B     		ldr	r3, .L438+16
 5363 0018 0122     		movs	r2, #1
 5364 001a 1A60     		str	r2, [r3]
4245:TP2824/TP2802.c **** 		
4246:TP2824/TP2802.c **** 	
4247:TP2824/TP2802.c **** 
4248:TP2824/TP2802.c **** }
 5365              		.loc 1 4248 0
 5366 001c 7047     		bx	lr
 5367              	.L439:
 5368 001e 00BF     		.align	2
 5369              	.L438:
 5370 0020 00000000 		.word	TVI_Command
 5371 0024 00000000 		.word	presetNum
 5372 0028 00000000 		.word	TVI_speed
 5373 002c 00000000 		.word	TVI_Chksum
 5374 0030 00000000 		.word	ptztxflag
 5375              		.cfi_endproc
 5376              	.LFE105:
 5378              		.section	.text.Init_COC_PTZOUT1,"ax",%progbits
 5379              		.align	1
 5380              		.global	Init_COC_PTZOUT1
 5381              		.syntax unified
 5382              		.thumb
 5383              		.thumb_func
 5384              		.fpu softvfp
 5386              	Init_COC_PTZOUT1:
 5387              	.LFB106:
4249:TP2824/TP2802.c **** void Init_COC_PTZOUT1(void)
ARM GAS  /tmp/ccnKW75d.s 			page 180


4250:TP2824/TP2802.c **** {
 5388              		.loc 1 4250 0
 5389              		.cfi_startproc
 5390              		@ args = 0, pretend = 0, frame = 0
 5391              		@ frame_needed = 0, uses_anonymous_args = 0
 5392 0000 08B5     		push	{r3, lr}
 5393              	.LCFI41:
 5394              		.cfi_def_cfa_offset 8
 5395              		.cfi_offset 3, -8
 5396              		.cfi_offset 14, -4
4251:TP2824/TP2802.c **** 	printf("\r\n Init_COC_PTZOUT1..");
 5397              		.loc 1 4251 0
 5398 0002 4448     		ldr	r0, .L442
 5399 0004 FFF7FEFF 		bl	printf
 5400              	.LVL700:
4252:TP2824/TP2802.c **** 
4253:TP2824/TP2802.c **** 	
4254:TP2824/TP2802.c **** 	tp28xx_byte_write(0x40,0x04);
 5401              		.loc 1 4254 0
 5402 0008 0421     		movs	r1, #4
 5403 000a 4020     		movs	r0, #64
 5404 000c FFF7FEFF 		bl	tp28xx_byte_write
 5405              	.LVL701:
4255:TP2824/TP2802.c **** 	tp28xx_byte_write(0xa7,0x83);
 5406              		.loc 1 4255 0
 5407 0010 8321     		movs	r1, #131
 5408 0012 A720     		movs	r0, #167
 5409 0014 FFF7FEFF 		bl	tp28xx_byte_write
 5410              	.LVL702:
4256:TP2824/TP2802.c **** 	tp28xx_byte_write(0xbe,0x80);
 5411              		.loc 1 4256 0
 5412 0018 8021     		movs	r1, #128
 5413 001a BE20     		movs	r0, #190
 5414 001c FFF7FEFF 		bl	tp28xx_byte_write
 5415              	.LVL703:
4257:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6f,0x42);
 5416              		.loc 1 4257 0
 5417 0020 4221     		movs	r1, #66
 5418 0022 6F20     		movs	r0, #111
 5419 0024 FFF7FEFF 		bl	tp28xx_byte_write
 5420              	.LVL704:
4258:TP2824/TP2802.c **** 
4259:TP2824/TP2802.c **** 	tp28xx_byte_write(0x70,0x40);
 5421              		.loc 1 4259 0
 5422 0028 4021     		movs	r1, #64
 5423 002a 7020     		movs	r0, #112
 5424 002c FFF7FEFF 		bl	tp28xx_byte_write
 5425              	.LVL705:
4260:TP2824/TP2802.c **** 	tp28xx_byte_write(0x71,0x20);
 5426              		.loc 1 4260 0
 5427 0030 2021     		movs	r1, #32
 5428 0032 7120     		movs	r0, #113
 5429 0034 FFF7FEFF 		bl	tp28xx_byte_write
 5430              	.LVL706:
4261:TP2824/TP2802.c **** 	tp28xx_byte_write(0x72,0x00);
 5431              		.loc 1 4261 0
 5432 0038 0021     		movs	r1, #0
ARM GAS  /tmp/ccnKW75d.s 			page 181


 5433 003a 7220     		movs	r0, #114
 5434 003c FFF7FEFF 		bl	tp28xx_byte_write
 5435              	.LVL707:
4262:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc0,0x00);
 5436              		.loc 1 4262 0
 5437 0040 0021     		movs	r1, #0
 5438 0042 C020     		movs	r0, #192
 5439 0044 FFF7FEFF 		bl	tp28xx_byte_write
 5440              	.LVL708:
4263:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc1,0x00);
 5441              		.loc 1 4263 0
 5442 0048 0021     		movs	r1, #0
 5443 004a C120     		movs	r0, #193
 5444 004c FFF7FEFF 		bl	tp28xx_byte_write
 5445              	.LVL709:
4264:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc2,0x0b);
 5446              		.loc 1 4264 0
 5447 0050 0B21     		movs	r1, #11
 5448 0052 C220     		movs	r0, #194
 5449 0054 FFF7FEFF 		bl	tp28xx_byte_write
 5450              	.LVL710:
4265:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc3,0x0c);
 5451              		.loc 1 4265 0
 5452 0058 0C21     		movs	r1, #12
 5453 005a C320     		movs	r0, #195
 5454 005c FFF7FEFF 		bl	tp28xx_byte_write
 5455              	.LVL711:
4266:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc4,0x0d);
 5456              		.loc 1 4266 0
 5457 0060 0D21     		movs	r1, #13
 5458 0062 C420     		movs	r0, #196
 5459 0064 FFF7FEFF 		bl	tp28xx_byte_write
 5460              	.LVL712:
4267:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc5,0x0e);
 5461              		.loc 1 4267 0
 5462 0068 0E21     		movs	r1, #14
 5463 006a C520     		movs	r0, #197
 5464 006c FFF7FEFF 		bl	tp28xx_byte_write
 5465              	.LVL713:
4268:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc6,0x19);
 5466              		.loc 1 4268 0
 5467 0070 1921     		movs	r1, #25
 5468 0072 C620     		movs	r0, #198
 5469 0074 FFF7FEFF 		bl	tp28xx_byte_write
 5470              	.LVL714:
4269:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc7,0x78);
 5471              		.loc 1 4269 0
 5472 0078 7821     		movs	r1, #120
 5473 007a C720     		movs	r0, #199
 5474 007c FFF7FEFF 		bl	tp28xx_byte_write
 5475              	.LVL715:
4270:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc8,0x21);
 5476              		.loc 1 4270 0
 5477 0080 2121     		movs	r1, #33
 5478 0082 C820     		movs	r0, #200
 5479 0084 FFF7FEFF 		bl	tp28xx_byte_write
 5480              	.LVL716:
ARM GAS  /tmp/ccnKW75d.s 			page 182


4271:TP2824/TP2802.c **** 						
4272:TP2824/TP2802.c **** 	tp28xx_byte_write(0xcb,0x07); 
 5481              		.loc 1 4272 0
 5482 0088 0721     		movs	r1, #7
 5483 008a CB20     		movs	r0, #203
 5484 008c FFF7FEFF 		bl	tp28xx_byte_write
 5485              	.LVL717:
4273:TP2824/TP2802.c **** 	tp28xx_byte_write(0xcc,0x08); 
 5486              		.loc 1 4273 0
 5487 0090 0821     		movs	r1, #8
 5488 0092 CC20     		movs	r0, #204
 5489 0094 FFF7FEFF 		bl	tp28xx_byte_write
 5490              	.LVL718:
4274:TP2824/TP2802.c **** 	tp28xx_byte_write(0xcd,0x09); 
 5491              		.loc 1 4274 0
 5492 0098 0921     		movs	r1, #9
 5493 009a CD20     		movs	r0, #205
 5494 009c FFF7FEFF 		bl	tp28xx_byte_write
 5495              	.LVL719:
4275:TP2824/TP2802.c **** 	tp28xx_byte_write(0xce,0x0a); 
 5496              		.loc 1 4275 0
 5497 00a0 0A21     		movs	r1, #10
 5498 00a2 CE20     		movs	r0, #206
 5499 00a4 FFF7FEFF 		bl	tp28xx_byte_write
 5500              	.LVL720:
4276:TP2824/TP2802.c **** 	tp28xx_byte_write(0xcf,0x04); 
 5501              		.loc 1 4276 0
 5502 00a8 0421     		movs	r1, #4
 5503 00aa CF20     		movs	r0, #207
 5504 00ac FFF7FEFF 		bl	tp28xx_byte_write
 5505              	.LVL721:
4277:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd0,0x00); 
 5506              		.loc 1 4277 0
 5507 00b0 0021     		movs	r1, #0
 5508 00b2 D020     		movs	r0, #208
 5509 00b4 FFF7FEFF 		bl	tp28xx_byte_write
 5510              	.LVL722:
4278:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd1,0x00); 
 5511              		.loc 1 4278 0
 5512 00b8 0021     		movs	r1, #0
 5513 00ba D120     		movs	r0, #209
 5514 00bc FFF7FEFF 		bl	tp28xx_byte_write
 5515              	.LVL723:
4279:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd2,0x60); 
 5516              		.loc 1 4279 0
 5517 00c0 6021     		movs	r1, #96
 5518 00c2 D220     		movs	r0, #210
 5519 00c4 FFF7FEFF 		bl	tp28xx_byte_write
 5520              	.LVL724:
4280:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd3,0x10); 
 5521              		.loc 1 4280 0
 5522 00c8 1021     		movs	r1, #16
 5523 00ca D320     		movs	r0, #211
 5524 00cc FFF7FEFF 		bl	tp28xx_byte_write
 5525              	.LVL725:
4281:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd4,0x06); 
 5526              		.loc 1 4281 0
ARM GAS  /tmp/ccnKW75d.s 			page 183


 5527 00d0 0621     		movs	r1, #6
 5528 00d2 D420     		movs	r0, #212
 5529 00d4 FFF7FEFF 		bl	tp28xx_byte_write
 5530              	.LVL726:
4282:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd5,0xbe); 
 5531              		.loc 1 4282 0
 5532 00d8 BE21     		movs	r1, #190
 5533 00da D520     		movs	r0, #213
 5534 00dc FFF7FEFF 		bl	tp28xx_byte_write
 5535              	.LVL727:
4283:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd6,0x39); 
 5536              		.loc 1 4283 0
 5537 00e0 3921     		movs	r1, #57
 5538 00e2 D620     		movs	r0, #214
 5539 00e4 FFF7FEFF 		bl	tp28xx_byte_write
 5540              	.LVL728:
4284:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd7,0x27); 
 5541              		.loc 1 4284 0
 5542 00e8 2721     		movs	r1, #39
 5543 00ea D720     		movs	r0, #215
 5544 00ec FFF7FEFF 		bl	tp28xx_byte_write
 5545              	.LVL729:
4285:TP2824/TP2802.c **** 
4286:TP2824/TP2802.c **** #if 1//ryan@20201231
4287:TP2824/TP2802.c **** tp28xx_byte_write(0xc2,0x0E);
 5546              		.loc 1 4287 0
 5547 00f0 0E21     		movs	r1, #14
 5548 00f2 C220     		movs	r0, #194
 5549 00f4 FFF7FEFF 		bl	tp28xx_byte_write
 5550              	.LVL730:
4288:TP2824/TP2802.c **** tp28xx_byte_write(0xc3,0x0F);
 5551              		.loc 1 4288 0
 5552 00f8 0F21     		movs	r1, #15
 5553 00fa C320     		movs	r0, #195
 5554 00fc FFF7FEFF 		bl	tp28xx_byte_write
 5555              	.LVL731:
4289:TP2824/TP2802.c **** tp28xx_byte_write(0xc4,0x10);
 5556              		.loc 1 4289 0
 5557 0100 1021     		movs	r1, #16
 5558 0102 C420     		movs	r0, #196
 5559 0104 FFF7FEFF 		bl	tp28xx_byte_write
 5560              	.LVL732:
4290:TP2824/TP2802.c **** tp28xx_byte_write(0xc5,0x11);
 5561              		.loc 1 4290 0
 5562 0108 1121     		movs	r1, #17
 5563 010a C520     		movs	r0, #197
 5564 010c FFF7FEFF 		bl	tp28xx_byte_write
 5565              	.LVL733:
4291:TP2824/TP2802.c **** #endif
4292:TP2824/TP2802.c **** 
4293:TP2824/TP2802.c **** }
 5566              		.loc 1 4293 0
 5567 0110 08BD     		pop	{r3, pc}
 5568              	.L443:
 5569 0112 00BF     		.align	2
 5570              	.L442:
 5571 0114 00000000 		.word	.LC41
ARM GAS  /tmp/ccnKW75d.s 			page 184


 5572              		.cfi_endproc
 5573              	.LFE106:
 5575              		.section	.text.EQ_Detect,"ax",%progbits
 5576              		.align	1
 5577              		.global	EQ_Detect
 5578              		.syntax unified
 5579              		.thumb
 5580              		.thumb_func
 5581              		.fpu softvfp
 5583              	EQ_Detect:
 5584              	.LFB85:
1750:TP2824/TP2802.c ****     //tByte tmpval;
 5585              		.loc 1 1750 0
 5586              		.cfi_startproc
 5587              		@ args = 0, pretend = 0, frame = 0
 5588              		@ frame_needed = 0, uses_anonymous_args = 0
 5589 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5590              	.LCFI42:
 5591              		.cfi_def_cfa_offset 20
 5592              		.cfi_offset 4, -20
 5593              		.cfi_offset 5, -16
 5594              		.cfi_offset 6, -12
 5595              		.cfi_offset 7, -8
 5596              		.cfi_offset 14, -4
 5597 0002 83B0     		sub	sp, sp, #12
 5598              	.LCFI43:
 5599              		.cfi_def_cfa_offset 32
 5600              	.LVL734:
1755:TP2824/TP2802.c ****     {
 5601              		.loc 1 1755 0
 5602 0004 0024     		movs	r4, #0
 5603              	.LVL735:
 5604              	.L445:
1755:TP2824/TP2802.c ****     {
 5605              		.loc 1 1755 0 is_stmt 0 discriminator 1
 5606 0006 0CB1     		cbz	r4, .L505
2501:TP2824/TP2802.c **** #if 0
 5607              		.loc 1 2501 0 is_stmt 1
 5608 0008 03B0     		add	sp, sp, #12
 5609              	.LCFI44:
 5610              		.cfi_remember_state
 5611              		.cfi_def_cfa_offset 20
 5612              		@ sp needed
 5613 000a F0BD     		pop	{r4, r5, r6, r7, pc}
 5614              	.LVL736:
 5615              	.L505:
 5616              	.LCFI45:
 5617              		.cfi_restore_state
1761:TP2824/TP2802.c ****         status = tp28xx_byte_read(0x01);
 5618              		.loc 1 1761 0
 5619 000c 2046     		mov	r0, r4
 5620 000e FFF7FEFF 		bl	SetRegPage
 5621              	.LVL737:
1762:TP2824/TP2802.c **** 
 5622              		.loc 1 1762 0
 5623 0012 0120     		movs	r0, #1
 5624 0014 FFF7FEFF 		bl	tp28xx_byte_read
ARM GAS  /tmp/ccnKW75d.s 			page 185


 5625              	.LVL738:
 5626 0018 0646     		mov	r6, r0
 5627              	.LVL739:
1765:TP2824/TP2802.c ****         {
 5628              		.loc 1 1765 0
 5629 001a 10F0800F 		tst	r0, #128
 5630 001e 34D1     		bne	.L518
1816:TP2824/TP2802.c ****                 flag_LOCKED = CVBS_FLAG_LOCKED;
 5631              		.loc 1 1816 0
 5632 0020 2546     		mov	r5, r4
 5633 0022 A44B     		ldr	r3, .L564
 5634 0024 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 5635 0026 083B     		subs	r3, r3, #8
 5636 0028 DBB2     		uxtb	r3, r3
 5637 002a 012B     		cmp	r3, #1
 5638 002c 5CD9     		bls	.L519
1819:TP2824/TP2802.c **** 
 5639              		.loc 1 1819 0
 5640 002e A24B     		ldr	r3, .L564+4
 5641 0030 6022     		movs	r2, #96
 5642 0032 1A70     		strb	r2, [r3]
 5643              	.L453:
1821:TP2824/TP2802.c ****             {
 5644              		.loc 1 1821 0
 5645 0034 A04B     		ldr	r3, .L564+4
 5646 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5647 0038 B343     		bics	r3, r3, r6
 5648 003a 59D0     		beq	.L520
1868:TP2824/TP2802.c ****                 {
 5649              		.loc 1 1868 0
 5650 003c 9F4B     		ldr	r3, .L564+8
 5651 003e 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5652 0040 002B     		cmp	r3, #0
 5653 0042 78D0     		beq	.L521
1874:TP2824/TP2802.c ****                 {
 5654              		.loc 1 1874 0
 5655 0044 022B     		cmp	r3, #2
 5656 0046 00F08180 		beq	.L522
1891:TP2824/TP2802.c ****                     if(VIDEO_UNLOCK == state[i] && count[i] > 2)
 5657              		.loc 1 1891 0
 5658 004a 9D4A     		ldr	r2, .L564+12
 5659 004c 525D     		ldrb	r2, [r2, r5]	@ zero_extendqisi2
 5660 004e FF2A     		cmp	r2, #255
 5661 0050 02D0     		beq	.L459
1891:TP2824/TP2802.c ****                     if(VIDEO_UNLOCK == state[i] && count[i] > 2)
 5662              		.loc 1 1891 0 is_stmt 0 discriminator 1
 5663 0052 0132     		adds	r2, r2, #1
 5664 0054 9A49     		ldr	r1, .L564+12
 5665 0056 4A55     		strb	r2, [r1, r5]
 5666              	.L459:
1892:TP2824/TP2802.c ****                     {
 5667              		.loc 1 1892 0 is_stmt 1
 5668 0058 032B     		cmp	r3, #3
 5669 005a 23D1     		bne	.L451
1892:TP2824/TP2802.c ****                     {
 5670              		.loc 1 1892 0 is_stmt 0 discriminator 1
 5671 005c 984B     		ldr	r3, .L564+12
ARM GAS  /tmp/ccnKW75d.s 			page 186


 5672 005e 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5673 0060 022B     		cmp	r3, #2
 5674 0062 1FD9     		bls	.L451
1894:TP2824/TP2802.c ****                         count[i] = 0;
 5675              		.loc 1 1894 0 is_stmt 1
 5676 0064 954B     		ldr	r3, .L564+8
 5677 0066 0122     		movs	r2, #1
 5678 0068 5A55     		strb	r2, [r3, r5]
1895:TP2824/TP2802.c ****                         TP28xx_reset_default(chip, i);
 5679              		.loc 1 1895 0
 5680 006a 954B     		ldr	r3, .L564+12
 5681 006c 0022     		movs	r2, #0
 5682 006e 5A55     		strb	r2, [r3, r5]
1896:TP2824/TP2802.c ****                         printf("video unlocked ch%02x \r\n", (tWord)i);                        
 5683              		.loc 1 1896 0
 5684 0070 2146     		mov	r1, r4
 5685 0072 944B     		ldr	r3, .L564+16
 5686 0074 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5687              	.LVL740:
 5688 0076 FFF7FEFF 		bl	TP28xx_reset_default
 5689              	.LVL741:
1897:TP2824/TP2802.c ****                         VS4210_Rx_NoSignal(i) ;//chunyu
 5690              		.loc 1 1897 0
 5691 007a 2946     		mov	r1, r5
 5692 007c 9248     		ldr	r0, .L564+20
 5693 007e FFF7FEFF 		bl	printf
 5694              	.LVL742:
1898:TP2824/TP2802.c ****                     }
 5695              		.loc 1 1898 0
 5696 0082 2046     		mov	r0, r4
 5697 0084 FFF7FEFF 		bl	VS4210_Rx_NoSignal
 5698              	.LVL743:
 5699 0088 0CE0     		b	.L451
 5700              	.LVL744:
 5701              	.L518:
1769:TP2824/TP2802.c ****             {
 5702              		.loc 1 1769 0
 5703 008a 8C4B     		ldr	r3, .L564+8
 5704 008c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 5705 008e B3B1     		cbz	r3, .L523
1778:TP2824/TP2802.c **** 				 	{
 5706              		.loc 1 1778 0
 5707 0090 8E4B     		ldr	r3, .L564+24
 5708 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5709 0094 012B     		cmp	r3, #1
 5710 0096 1AD0     		beq	.L524
 5711              	.LVL745:
 5712              	.L450:
1786:TP2824/TP2802.c **** 
 5713              		.loc 1 1786 0
 5714 0098 FFF7FEFF 		bl	Init_TP280x_RegSet
 5715              	.LVL746:
1788:TP2824/TP2802.c **** 				 	{
 5716              		.loc 1 1788 0
 5717 009c 8B4B     		ldr	r3, .L564+24
 5718 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5719 00a0 012B     		cmp	r3, #1
ARM GAS  /tmp/ccnKW75d.s 			page 187


 5720 00a2 1DD0     		beq	.L525
 5721              	.L451:
1906:TP2824/TP2802.c ****         {
 5722              		.loc 1 1906 0
 5723 00a4 2546     		mov	r5, r4
 5724 00a6 854B     		ldr	r3, .L564+8
 5725 00a8 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 5726 00aa 012B     		cmp	r3, #1
 5727 00ac 59D0     		beq	.L526
 5728              	.L460:
1987:TP2824/TP2802.c ****         {
 5729              		.loc 1 1987 0
 5730 00ae 834B     		ldr	r3, .L564+8
 5731 00b0 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5732 00b2 022B     		cmp	r3, #2
 5733 00b4 00F0CC80 		beq	.L527
 5734              	.L449:
1755:TP2824/TP2802.c ****     {
 5735              		.loc 1 1755 0 discriminator 2
 5736 00b8 0134     		adds	r4, r4, #1
 5737              	.LVL747:
 5738 00ba E4B2     		uxtb	r4, r4
 5739              	.LVL748:
 5740 00bc A3E7     		b	.L445
 5741              	.LVL749:
 5742              	.L523:
1771:TP2824/TP2802.c ****                 continue;
 5743              		.loc 1 1771 0
 5744 00be 804B     		ldr	r3, .L564+12
 5745 00c0 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 5746 00c2 FF2B     		cmp	r3, #255
 5747 00c4 F8D0     		beq	.L449
1771:TP2824/TP2802.c ****                 continue;
 5748              		.loc 1 1771 0 is_stmt 0 discriminator 1
 5749 00c6 0133     		adds	r3, r3, #1
 5750 00c8 7D49     		ldr	r1, .L564+12
 5751 00ca 0B55     		strb	r3, [r1, r4]
1772:TP2824/TP2802.c ****             }
 5752              		.loc 1 1772 0 is_stmt 1 discriminator 1
 5753 00cc F4E7     		b	.L449
 5754              	.L524:
1780:TP2824/TP2802.c **** 					VXISI2CWrite( 0x32, 0x00 );
 5755              		.loc 1 1780 0
 5756 00ce 0121     		movs	r1, #1
 5757 00d0 0846     		mov	r0, r1
 5758              	.LVL750:
 5759 00d2 FFF7FEFF 		bl	Set_Video_Loss_OSD
 5760              	.LVL751:
1781:TP2824/TP2802.c **** 				 	}
 5761              		.loc 1 1781 0
 5762 00d6 0021     		movs	r1, #0
 5763 00d8 3220     		movs	r0, #50
 5764 00da FFF7FEFF 		bl	VXISI2CWrite
 5765              	.LVL752:
 5766 00de DBE7     		b	.L450
 5767              	.L525:
1791:TP2824/TP2802.c **** 				 	}
ARM GAS  /tmp/ccnKW75d.s 			page 188


 5768              		.loc 1 1791 0
 5769 00e0 0120     		movs	r0, #1
 5770 00e2 FFF7FEFF 		bl	HS_Select_Win
 5771              	.LVL753:
 5772 00e6 DDE7     		b	.L451
 5773              	.LVL754:
 5774              	.L519:
1817:TP2824/TP2802.c ****             else
 5775              		.loc 1 1817 0
 5776 00e8 734B     		ldr	r3, .L564+4
 5777 00ea 6022     		movs	r2, #96
 5778 00ec 1A70     		strb	r2, [r3]
 5779 00ee A1E7     		b	.L453
 5780              	.L520:
1823:TP2824/TP2802.c ****                 {
 5781              		.loc 1 1823 0
 5782 00f0 724B     		ldr	r3, .L564+8
 5783 00f2 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5784 00f4 022B     		cmp	r3, #2
 5785 00f6 0BD0     		beq	.L528
1852:TP2824/TP2802.c ****                 {
 5786              		.loc 1 1852 0
 5787 00f8 93B9     		cbnz	r3, .L456
1854:TP2824/TP2802.c ****                     count[i] = 0;
 5788              		.loc 1 1854 0
 5789 00fa 704B     		ldr	r3, .L564+8
 5790 00fc 0122     		movs	r2, #1
 5791 00fe 5A55     		strb	r2, [r3, r5]
1855:TP2824/TP2802.c ****                     printf("1video in ch%02x \r\n", (tWord)i);
 5792              		.loc 1 1855 0
 5793 0100 6F4B     		ldr	r3, .L564+12
 5794 0102 0022     		movs	r2, #0
 5795 0104 5A55     		strb	r2, [r3, r5]
1856:TP2824/TP2802.c ****                 }
 5796              		.loc 1 1856 0
 5797 0106 2946     		mov	r1, r5
 5798 0108 7148     		ldr	r0, .L564+28
 5799              	.LVL755:
 5800 010a FFF7FEFF 		bl	printf
 5801              	.LVL756:
 5802 010e C9E7     		b	.L451
 5803              	.LVL757:
 5804              	.L528:
1825:TP2824/TP2802.c **** 				#if 0
 5805              		.loc 1 1825 0
 5806 0110 6B4B     		ldr	r3, .L564+12
 5807 0112 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5808 0114 FF2B     		cmp	r3, #255
 5809 0116 C5D0     		beq	.L451
1825:TP2824/TP2802.c **** 				#if 0
 5810              		.loc 1 1825 0 is_stmt 0 discriminator 1
 5811 0118 0133     		adds	r3, r3, #1
 5812 011a 694A     		ldr	r2, .L564+12
 5813 011c 5355     		strb	r3, [r2, r5]
 5814 011e C1E7     		b	.L451
 5815              	.L456:
1860:TP2824/TP2802.c ****                     count[i] = 0;
ARM GAS  /tmp/ccnKW75d.s 			page 189


 5816              		.loc 1 1860 0 is_stmt 1
 5817 0120 664B     		ldr	r3, .L564+8
 5818 0122 0222     		movs	r2, #2
 5819 0124 5A55     		strb	r2, [r3, r5]
1861:TP2824/TP2802.c ****                     printf("video locked ch%02x \r\n", (tWord)i);
 5820              		.loc 1 1861 0
 5821 0126 664B     		ldr	r3, .L564+12
 5822 0128 0022     		movs	r2, #0
 5823 012a 5A55     		strb	r2, [r3, r5]
1862:TP2824/TP2802.c ****                 }
 5824              		.loc 1 1862 0
 5825 012c 2946     		mov	r1, r5
 5826 012e 6948     		ldr	r0, .L564+32
 5827              	.LVL758:
 5828 0130 FFF7FEFF 		bl	printf
 5829              	.LVL759:
 5830 0134 B6E7     		b	.L451
 5831              	.LVL760:
 5832              	.L521:
1870:TP2824/TP2802.c ****                     count[i] = 0;
 5833              		.loc 1 1870 0
 5834 0136 614B     		ldr	r3, .L564+8
 5835 0138 0122     		movs	r2, #1
 5836 013a 5A55     		strb	r2, [r3, r5]
1871:TP2824/TP2802.c ****                     printf("video in ch%02x \r\n", (tWord)i);
 5837              		.loc 1 1871 0
 5838 013c 604B     		ldr	r3, .L564+12
 5839 013e 0022     		movs	r2, #0
 5840 0140 5A55     		strb	r2, [r3, r5]
1872:TP2824/TP2802.c ****                 }
 5841              		.loc 1 1872 0
 5842 0142 2946     		mov	r1, r5
 5843 0144 6448     		ldr	r0, .L564+36
 5844              	.LVL761:
 5845 0146 FFF7FEFF 		bl	printf
 5846              	.LVL762:
 5847 014a ABE7     		b	.L451
 5848              	.LVL763:
 5849              	.L522:
1884:TP2824/TP2802.c ****                     count[i] = 0;
 5850              		.loc 1 1884 0
 5851 014c 5B4B     		ldr	r3, .L564+8
 5852 014e 0322     		movs	r2, #3
 5853 0150 5A55     		strb	r2, [r3, r5]
1885:TP2824/TP2802.c ****                     printf("video unstable ch%02x \r\n", (tWord)i);
 5854              		.loc 1 1885 0
 5855 0152 5B4B     		ldr	r3, .L564+12
 5856 0154 0022     		movs	r2, #0
 5857 0156 5A55     		strb	r2, [r3, r5]
1886:TP2824/TP2802.c **** 			}		
 5858              		.loc 1 1886 0
 5859 0158 2946     		mov	r1, r5
 5860 015a 6048     		ldr	r0, .L564+40
 5861              	.LVL764:
 5862 015c FFF7FEFF 		bl	printf
 5863              	.LVL765:
 5864 0160 A0E7     		b	.L451
ARM GAS  /tmp/ccnKW75d.s 			page 190


 5865              	.L526:
1908:TP2824/TP2802.c ****             sywd = cvstd & 0x08;
 5866              		.loc 1 1908 0
 5867 0162 0320     		movs	r0, #3
 5868 0164 FFF7FEFF 		bl	tp28xx_byte_read
 5869              	.LVL766:
1909:TP2824/TP2802.c ****             cvstd &= 0x07;
 5870              		.loc 1 1909 0
 5871 0168 00F00802 		and	r2, r0, #8
 5872 016c 5C4B     		ldr	r3, .L564+44
 5873 016e 1A60     		str	r2, [r3]
1910:TP2824/TP2802.c ****             fmt = mode[i];
 5874              		.loc 1 1910 0
 5875 0170 00F00702 		and	r2, r0, #7
 5876              	.LVL767:
1911:TP2824/TP2802.c ****             if(NTPAL == cvstd && flag_CVBS)
 5877              		.loc 1 1911 0
 5878 0174 4F4B     		ldr	r3, .L564
 5879 0176 1F5D     		ldrb	r7, [r3, r4]	@ zero_extendqisi2
 5880              	.LVL768:
1912:TP2824/TP2802.c ****             {
 5881              		.loc 1 1912 0
 5882 0178 062A     		cmp	r2, #6
 5883 017a 11D0     		beq	.L529
 5884              	.L461:
1920:TP2824/TP2802.c ****             {
 5885              		.loc 1 1920 0
 5886 017c 042A     		cmp	r2, #4
 5887 017e 18D0     		beq	.L530
1927:TP2824/TP2802.c ****             {
 5888              		.loc 1 1927 0
 5889 0180 052A     		cmp	r2, #5
 5890 0182 4FD0     		beq	.L509
1931:TP2824/TP2802.c ****             {
 5891              		.loc 1 1931 0
 5892 0184 022A     		cmp	r2, #2
 5893 0186 1ED0     		beq	.L531
1938:TP2824/TP2802.c ****             {
 5894              		.loc 1 1938 0
 5895 0188 3ABB     		cbnz	r2, .L465
1940:TP2824/TP2802.c ****                     fmt = R4M30;
 5896              		.loc 1 1940 0
 5897 018a 564B     		ldr	r3, .L564+48
 5898 018c 1B68     		ldr	r3, [r3]
 5899 018e 002B     		cmp	r3, #0
 5900 0190 49D0     		beq	.L462
1940:TP2824/TP2802.c ****                     fmt = R4M30;
 5901              		.loc 1 1940 0 is_stmt 0 discriminator 1
 5902 0192 4B4B     		ldr	r3, .L564+12
 5903 0194 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5904 0196 13F0020F 		tst	r3, #2
 5905 019a 44D0     		beq	.L462
1941:TP2824/TP2802.c ****                 else
 5906              		.loc 1 1941 0 is_stmt 1
 5907 019c 2622     		movs	r2, #38
 5908              	.LVL769:
 5909 019e 42E0     		b	.L462
ARM GAS  /tmp/ccnKW75d.s 			page 191


 5910              	.LVL770:
 5911              	.L529:
1912:TP2824/TP2802.c ****             {
 5912              		.loc 1 1912 0 discriminator 1
 5913 01a0 514B     		ldr	r3, .L564+52
 5914 01a2 1B68     		ldr	r3, [r3]
 5915 01a4 002B     		cmp	r3, #0
 5916 01a6 E9D0     		beq	.L461
1915:TP2824/TP2802.c ****                     fmt = PAL;
 5917              		.loc 1 1915 0
 5918 01a8 16F0040F 		tst	r6, #4
 5919 01ac 34D0     		beq	.L506
1916:TP2824/TP2802.c ****                 else
 5920              		.loc 1 1916 0
 5921 01ae 0922     		movs	r2, #9
 5922              	.LVL771:
 5923 01b0 39E0     		b	.L462
 5924              	.LVL772:
 5925              	.L530:
1922:TP2824/TP2802.c ****                     fmt = R4M12;
 5926              		.loc 1 1922 0
 5927 01b2 4C4B     		ldr	r3, .L564+48
 5928 01b4 1B68     		ldr	r3, [r3]
 5929 01b6 8BB3     		cbz	r3, .L507
1922:TP2824/TP2802.c ****                     fmt = R4M12;
 5930              		.loc 1 1922 0 is_stmt 0 discriminator 1
 5931 01b8 414B     		ldr	r3, .L564+12
 5932 01ba 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5933 01bc 13F0020F 		tst	r3, #2
 5934 01c0 2ED1     		bne	.L508
1925:TP2824/TP2802.c ****             }
 5935              		.loc 1 1925 0 is_stmt 1
 5936 01c2 0C22     		movs	r2, #12
 5937              	.LVL773:
 5938 01c4 2FE0     		b	.L462
 5939              	.LVL774:
 5940              	.L531:
1933:TP2824/TP2802.c ****                     fmt = R3M20;
 5941              		.loc 1 1933 0
 5942 01c6 474B     		ldr	r3, .L564+48
 5943 01c8 1B68     		ldr	r3, [r3]
 5944 01ca 63B3     		cbz	r3, .L462
1933:TP2824/TP2802.c ****                     fmt = R3M20;
 5945              		.loc 1 1933 0 is_stmt 0 discriminator 1
 5946 01cc 3C4B     		ldr	r3, .L564+12
 5947 01ce 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5948 01d0 13F0020F 		tst	r3, #2
 5949 01d4 27D0     		beq	.L462
1934:TP2824/TP2802.c ****                 else
 5950              		.loc 1 1934 0 is_stmt 1
 5951 01d6 2322     		movs	r2, #35
 5952              	.LVL775:
 5953 01d8 25E0     		b	.L462
 5954              	.LVL776:
 5955              	.L465:
1945:TP2824/TP2802.c ****             {
 5956              		.loc 1 1945 0
ARM GAS  /tmp/ccnKW75d.s 			page 192


 5957 01da 032A     		cmp	r2, #3
 5958 01dc 23D9     		bls	.L462
1951:TP2824/TP2802.c ****                 {
 5959              		.loc 1 1951 0
 5960 01de 414B     		ldr	r3, .L564+48
 5961 01e0 1B68     		ldr	r3, [r3]
 5962 01e2 0BB9     		cbnz	r3, .L532
1911:TP2824/TP2802.c ****             if(NTPAL == cvstd && flag_CVBS)
 5963              		.loc 1 1911 0
 5964 01e4 3A46     		mov	r2, r7
 5965              	.LVL777:
 5966 01e6 1EE0     		b	.L462
 5967              	.LVL778:
 5968              	.L532:
1953:TP2824/TP2802.c ****                     tmp = tp28xx_byte_read(0x04);
 5969              		.loc 1 1953 0
 5970 01e8 0921     		movs	r1, #9
 5971 01ea 2F20     		movs	r0, #47
 5972 01ec FFF7FEFF 		bl	tp28xx_byte_write
 5973              	.LVL779:
1954:TP2824/TP2802.c ****                     if((tmp > 0x48) && (tmp < 0x55))
 5974              		.loc 1 1954 0
 5975 01f0 0420     		movs	r0, #4
 5976 01f2 FFF7FEFF 		bl	tp28xx_byte_read
 5977              	.LVL780:
1955:TP2824/TP2802.c ****                     {
 5978              		.loc 1 1955 0
 5979 01f6 A0F14903 		sub	r3, r0, #73
 5980 01fa DBB2     		uxtb	r3, r3
 5981 01fc 0B2B     		cmp	r3, #11
 5982 01fe 21D9     		bls	.L513
1959:TP2824/TP2802.c ****                     {
 5983              		.loc 1 1959 0
 5984 0200 A0F15603 		sub	r3, r0, #86
 5985 0204 DBB2     		uxtb	r3, r3
 5986 0206 0B2B     		cmp	r3, #11
 5987 0208 1ED9     		bls	.L514
1963:TP2824/TP2802.c ****                     {
 5988              		.loc 1 1963 0
 5989 020a A0F17103 		sub	r3, r0, #113
 5990 020e DBB2     		uxtb	r3, r3
 5991 0210 0E2B     		cmp	r3, #14
 5992 0212 1BD9     		bls	.L515
1911:TP2824/TP2802.c ****             if(NTPAL == cvstd && flag_CVBS)
 5993              		.loc 1 1911 0
 5994 0214 3A46     		mov	r2, r7
 5995 0216 06E0     		b	.L462
 5996              	.LVL781:
 5997              	.L506:
1918:TP2824/TP2802.c ****             }
 5998              		.loc 1 1918 0
 5999 0218 0822     		movs	r2, #8
 6000              	.LVL782:
 6001 021a 04E0     		b	.L462
 6002              	.LVL783:
 6003              	.L507:
1925:TP2824/TP2802.c ****             }
ARM GAS  /tmp/ccnKW75d.s 			page 193


 6004              		.loc 1 1925 0
 6005 021c 0C22     		movs	r2, #12
 6006              	.LVL784:
 6007 021e 02E0     		b	.L462
 6008              	.LVL785:
 6009              	.L508:
1923:TP2824/TP2802.c ****                 else
 6010              		.loc 1 1923 0
 6011 0220 2422     		movs	r2, #36
 6012              	.LVL786:
 6013 0222 00E0     		b	.L462
 6014              	.LVL787:
 6015              	.L509:
1929:TP2824/TP2802.c ****             }
 6016              		.loc 1 1929 0
 6017 0224 0D22     		movs	r2, #13
 6018              	.LVL788:
 6019              	.L462:
1978:TP2824/TP2802.c **** 		            {
 6020              		.loc 1 1978 0
 6021 0226 234B     		ldr	r3, .L564
 6022 0228 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6023 022a 9342     		cmp	r3, r2
 6024 022c 3FF43FAF 		beq	.L460
1980:TP2824/TP2802.c **** 		                printf("Set_VidResmode[%d] =%d\r\n",(int)i, (int)fmt);
 6025              		.loc 1 1980 0
 6026 0230 204B     		ldr	r3, .L564
 6027 0232 5A55     		strb	r2, [r3, r5]
1981:TP2824/TP2802.c **** 		                Set_VidRes(i);
 6028              		.loc 1 1981 0
 6029 0234 2946     		mov	r1, r5
 6030 0236 2D48     		ldr	r0, .L564+56
 6031 0238 FFF7FEFF 		bl	printf
 6032              	.LVL789:
1982:TP2824/TP2802.c **** 		            }
 6033              		.loc 1 1982 0
 6034 023c 2046     		mov	r0, r4
 6035 023e FFF7FEFF 		bl	Set_VidRes
 6036              	.LVL790:
 6037 0242 34E7     		b	.L460
 6038              	.LVL791:
 6039              	.L513:
1957:TP2824/TP2802.c ****                     }
 6040              		.loc 1 1957 0
 6041 0244 2022     		movs	r2, #32
 6042 0246 EEE7     		b	.L462
 6043              	.L514:
1961:TP2824/TP2802.c ****                     }
 6044              		.loc 1 1961 0
 6045 0248 2222     		movs	r2, #34
 6046 024a ECE7     		b	.L462
 6047              	.L515:
1965:TP2824/TP2802.c ****                     }
 6048              		.loc 1 1965 0
 6049 024c 2522     		movs	r2, #37
 6050 024e EAE7     		b	.L462
 6051              	.LVL792:
ARM GAS  /tmp/ccnKW75d.s 			page 194


 6052              	.L527:
1989:TP2824/TP2802.c ****             {
 6053              		.loc 1 1989 0
 6054 0250 1B4B     		ldr	r3, .L564+12
 6055 0252 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6056 0254 002B     		cmp	r3, #0
 6057 0256 7AD1     		bne	.L466
1991:TP2824/TP2802.c ****                 CurCH = i;
 6058              		.loc 1 1991 0
 6059 0258 254B     		ldr	r3, .L564+60
 6060 025a 0022     		movs	r2, #0
 6061 025c 5A55     		strb	r2, [r3, r5]
1992:TP2824/TP2802.c ****                 if( (R720P30V2 == mode[i]) || (R720P25V2 == mode[i]) )
 6062              		.loc 1 1992 0
 6063 025e 254B     		ldr	r3, .L564+64
 6064 0260 1C70     		strb	r4, [r3]
1993:TP2824/TP2802.c ****                 {
 6065              		.loc 1 1993 0
 6066 0262 144B     		ldr	r3, .L564
 6067 0264 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6068 0266 0C3B     		subs	r3, r3, #12
 6069 0268 DBB2     		uxtb	r3, r3
 6070 026a 012B     		cmp	r3, #1
 6071 026c 50D9     		bls	.L533
 6072              	.L467:
2004:TP2824/TP2802.c **** 
 6073              		.loc 1 2004 0
 6074 026e A4F10A00 		sub	r0, r4, #10
 6075 0272 214B     		ldr	r3, .L564+68
 6076 0274 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6077 0276 C0B2     		uxtb	r0, r0
 6078 0278 FFF7FEFF 		bl	tp28xx_byte_write
 6079              	.LVL793:
2007:TP2824/TP2802.c ****                 {
 6080              		.loc 1 2007 0
 6081 027c 114B     		ldr	r3, .L564+16
 6082 027e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6083 0280 2F2B     		cmp	r3, #47
 6084 0282 54D0     		beq	.L534
2015:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfa, REG_FA[i]);
 6085              		.loc 1 2015 0
 6086 0284 1D4B     		ldr	r3, .L564+72
 6087 0286 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6088 0288 F720     		movs	r0, #247
 6089 028a FFF7FEFF 		bl	tp28xx_byte_write
 6090              	.LVL794:
2016:TP2824/TP2802.c ****                     //printf("set output ch%02x \r\n", (tWord)CH[i]);
 6091              		.loc 1 2016 0
 6092 028e 1C4B     		ldr	r3, .L564+76
 6093 0290 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6094 0292 FA20     		movs	r0, #250
 6095 0294 FFF7FEFF 		bl	tp28xx_byte_write
 6096              	.LVL795:
 6097              	.L469:
2125:TP2824/TP2802.c ****                 {
 6098              		.loc 1 2125 0
 6099 0298 1A4B     		ldr	r3, .L564+80
ARM GAS  /tmp/ccnKW75d.s 			page 195


 6100 029a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6101 029c 1A4A     		ldr	r2, .L564+84
 6102 029e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 6103 02a0 8B42     		cmp	r3, r1
 6104 02a2 3FF409AF 		beq	.L449
2127:TP2824/TP2802.c ****                     //CreateMDIN340VideoInstance();  //chunyu
 6105              		.loc 1 2127 0
 6106 02a6 174B     		ldr	r3, .L564+80
 6107 02a8 1970     		strb	r1, [r3]
2129:TP2824/TP2802.c **** 
 6108              		.loc 1 2129 0
 6109 02aa 1848     		ldr	r0, .L564+88
 6110 02ac FFF7FEFF 		bl	printf
 6111              	.LVL796:
 6112 02b0 02E7     		b	.L449
 6113              	.L565:
 6114 02b2 00BF     		.align	2
 6115              	.L564:
 6116 02b4 00000000 		.word	mode
 6117 02b8 00000000 		.word	flag_LOCKED
 6118 02bc 00000000 		.word	state
 6119 02c0 00000000 		.word	count
 6120 02c4 00000000 		.word	chip
 6121 02c8 5C000000 		.word	.LC46
 6122 02cc 00000000 		.word	SelectInputMode
 6123 02d0 00000000 		.word	.LC42
 6124 02d4 14000000 		.word	.LC43
 6125 02d8 2C000000 		.word	.LC44
 6126 02dc 40000000 		.word	.LC45
 6127 02e0 00000000 		.word	sywd
 6128 02e4 00000000 		.word	flag_MEGA
 6129 02e8 00000000 		.word	flag_CVBS
 6130 02ec 78000000 		.word	.LC47
 6131 02f0 00000000 		.word	std
 6132 02f4 00000000 		.word	CurCH
 6133 02f8 00000000 		.word	.LANCHOR33
 6134 02fc 00000000 		.word	.LANCHOR34
 6135 0300 00000000 		.word	.LANCHOR35
 6136 0304 00000000 		.word	CurRes
 6137 0308 00000000 		.word	ManVidResRx
 6138 030c 94000000 		.word	.LC48
 6139              	.L533:
1995:TP2824/TP2802.c ****                     {
 6140              		.loc 1 1995 0
 6141 0310 0320     		movs	r0, #3
 6142 0312 FFF7FEFF 		bl	tp28xx_byte_read
 6143              	.LVL797:
 6144 0316 10F0080F 		tst	r0, #8
 6145 031a A8D1     		bne	.L467
1997:TP2824/TP2802.c ****                         Set_VidRes(i);
 6146              		.loc 1 1997 0
 6147 031c BA4A     		ldr	r2, .L566
 6148 031e 535D     		ldrb	r3, [r2, r5]	@ zero_extendqisi2
 6149 0320 23F00803 		bic	r3, r3, #8
 6150 0324 5355     		strb	r3, [r2, r5]
1998:TP2824/TP2802.c ****                         //printf("TVI_Set_VidRes\r\n");
 6151              		.loc 1 1998 0
ARM GAS  /tmp/ccnKW75d.s 			page 196


 6152 0326 2046     		mov	r0, r4
 6153 0328 FFF7FEFF 		bl	Set_VidRes
 6154              	.LVL798:
 6155 032c 9FE7     		b	.L467
 6156              	.L534:
2009:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfa, REG_FA[i]);
 6157              		.loc 1 2009 0
 6158 032e B74B     		ldr	r3, .L566+4
 6159 0330 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6160 0332 F820     		movs	r0, #248
 6161 0334 FFF7FEFF 		bl	tp28xx_byte_write
 6162              	.LVL799:
2010:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfb, REG_FA[i]);
 6163              		.loc 1 2010 0
 6164 0338 B54B     		ldr	r3, .L566+8
 6165 033a 5D5D     		ldrb	r5, [r3, r5]	@ zero_extendqisi2
 6166 033c 2946     		mov	r1, r5
 6167 033e FA20     		movs	r0, #250
 6168 0340 FFF7FEFF 		bl	tp28xx_byte_write
 6169              	.LVL800:
2011:TP2824/TP2802.c ****                 }
 6170              		.loc 1 2011 0
 6171 0344 2946     		mov	r1, r5
 6172 0346 FB20     		movs	r0, #251
 6173 0348 FFF7FEFF 		bl	tp28xx_byte_write
 6174              	.LVL801:
 6175 034c A4E7     		b	.L469
 6176              	.L466:
2133:TP2824/TP2802.c ****             {
 6177              		.loc 1 2133 0
 6178 034e 012B     		cmp	r3, #1
 6179 0350 7ED0     		beq	.L535
2154:TP2824/TP2802.c ****             {
 6180              		.loc 1 2154 0
 6181 0352 022B     		cmp	r3, #2
 6182 0354 00F0B880 		beq	.L536
2177:TP2824/TP2802.c ****             {
 6183              		.loc 1 2177 0
 6184 0358 032B     		cmp	r3, #3
 6185 035a 00F0F380 		beq	.L537
2202:TP2824/TP2802.c ****             {
 6186              		.loc 1 2202 0
 6187 035e 062B     		cmp	r3, #6
 6188 0360 40F24281 		bls	.L538
2211:TP2824/TP2802.c ****             {
 6189              		.loc 1 2211 0
 6190 0364 132B     		cmp	r3, #19
 6191 0366 40F27181 		bls	.L539
2225:TP2824/TP2802.c ****             {
 6192              		.loc 1 2225 0
 6193 036a 142B     		cmp	r3, #20
 6194 036c 00F09281 		beq	.L540
2351:TP2824/TP2802.c ****             {
 6195              		.loc 1 2351 0
 6196 0370 152B     		cmp	r3, #21
 6197 0372 00F02482 		beq	.L541
2369:TP2824/TP2802.c ****             {	
ARM GAS  /tmp/ccnKW75d.s 			page 197


 6198              		.loc 1 2369 0
 6199 0376 162B     		cmp	r3, #22
 6200 0378 7FF49EAE 		bne	.L449
 6201              	.LBB5:
2374:TP2824/TP2802.c **** 				{
 6202              		.loc 1 2374 0
 6203 037c A54B     		ldr	r3, .L566+12
 6204 037e 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6205 0380 9BBB     		cbnz	r3, .L501
2376:TP2824/TP2802.c **** 					{
 6206              		.loc 1 2376 0
 6207 0382 A14B     		ldr	r3, .L566
 6208 0384 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6209 0386 083B     		subs	r3, r3, #8
 6210 0388 DBB2     		uxtb	r3, r3
 6211 038a 012B     		cmp	r3, #1
 6212 038c 40F23282 		bls	.L542
2382:TP2824/TP2802.c **** 					}
 6213              		.loc 1 2382 0
 6214 0390 A148     		ldr	r0, .L566+16
 6215              	.L502:
 6216              	.LVL802:
2385:TP2824/TP2802.c **** 					
 6217              		.loc 1 2385 0
 6218 0392 FFF7FEFF 		bl	I2CDeviceSet1
 6219              	.LVL803:
2387:TP2824/TP2802.c **** 					{
 6220              		.loc 1 2387 0
 6221 0396 9C4B     		ldr	r3, .L566
 6222 0398 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6223 039a 023B     		subs	r3, r3, #2
 6224 039c DBB2     		uxtb	r3, r3
 6225 039e 012B     		cmp	r3, #1
 6226 03a0 40F22A82 		bls	.L543
 6227              	.L503:
2392:TP2824/TP2802.c **** 					
 6228              		.loc 1 2392 0
 6229 03a4 2146     		mov	r1, r4
 6230 03a6 4020     		movs	r0, #64
 6231 03a8 FFF7FEFF 		bl	tp28xx_byte_write
 6232              	.LVL804:
2394:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB6);
 6233              		.loc 1 2394 0
 6234 03ac 8021     		movs	r1, #128
 6235 03ae BE20     		movs	r0, #190
 6236 03b0 FFF7FEFF 		bl	tp28xx_byte_write
 6237              	.LVL805:
2395:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB5);
 6238              		.loc 1 2395 0
 6239 03b4 B620     		movs	r0, #182
 6240 03b6 FFF7FEFF 		bl	tp28xx_byte_read
 6241              	.LVL806:
2396:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB4);
 6242              		.loc 1 2396 0
 6243 03ba B520     		movs	r0, #181
 6244 03bc FFF7FEFF 		bl	tp28xx_byte_read
 6245              	.LVL807:
ARM GAS  /tmp/ccnKW75d.s 			page 198


2397:TP2824/TP2802.c **** 
 6246              		.loc 1 2397 0
 6247 03c0 B420     		movs	r0, #180
 6248 03c2 FFF7FEFF 		bl	tp28xx_byte_read
 6249              	.LVL808:
2400:TP2824/TP2802.c **** 					delay(1);//5ms
 6250              		.loc 1 2400 0
 6251 03c6 0021     		movs	r1, #0
 6252 03c8 A720     		movs	r0, #167
 6253 03ca FFF7FEFF 		bl	tp28xx_byte_write
 6254              	.LVL809:
2401:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x83);
 6255              		.loc 1 2401 0
 6256 03ce 0120     		movs	r0, #1
 6257 03d0 FFF7FEFF 		bl	delay
 6258              	.LVL810:
2402:TP2824/TP2802.c **** 					
 6259              		.loc 1 2402 0
 6260 03d4 8321     		movs	r1, #131
 6261 03d6 A720     		movs	r0, #167
 6262 03d8 FFF7FEFF 		bl	tp28xx_byte_write
 6263              	.LVL811:
2404:TP2824/TP2802.c **** 					{
 6264              		.loc 1 2404 0
 6265 03dc 8A4B     		ldr	r3, .L566
 6266 03de 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6267 03e0 023B     		subs	r3, r3, #2
 6268 03e2 DBB2     		uxtb	r3, r3
 6269 03e4 012B     		cmp	r3, #1
 6270 03e6 40F20C82 		bls	.L544
 6271              	.L501:
2412:TP2824/TP2802.c **** 				{
 6272              		.loc 1 2412 0
 6273 03ea 8A4B     		ldr	r3, .L566+12
 6274 03ec 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6275 03ee 012B     		cmp	r3, #1
 6276 03f0 00F00E82 		beq	.L545
 6277              	.L504:
2447:TP2824/TP2802.c **** 				{
 6278              		.loc 1 2447 0
 6279 03f4 874B     		ldr	r3, .L566+12
 6280 03f6 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6281 03f8 022B     		cmp	r3, #2
 6282 03fa 7FF45DAE 		bne	.L449
 6283              	.LVL812:
2450:TP2824/TP2802.c **** 				
 6284              		.loc 1 2450 0
 6285 03fe 8748     		ldr	r0, .L566+20
 6286 0400 FFF7FEFF 		bl	I2CDeviceSet1
 6287              	.LVL813:
2452:TP2824/TP2802.c **** 					tp28xx_byte_write(0xbe, 0x80);
 6288              		.loc 1 2452 0
 6289 0404 2146     		mov	r1, r4
 6290 0406 4020     		movs	r0, #64
 6291 0408 FFF7FEFF 		bl	tp28xx_byte_write
 6292              	.LVL814:
2453:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB6);
ARM GAS  /tmp/ccnKW75d.s 			page 199


 6293              		.loc 1 2453 0
 6294 040c 8021     		movs	r1, #128
 6295 040e BE20     		movs	r0, #190
 6296 0410 FFF7FEFF 		bl	tp28xx_byte_write
 6297              	.LVL815:
2454:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB5);
 6298              		.loc 1 2454 0
 6299 0414 B620     		movs	r0, #182
 6300 0416 FFF7FEFF 		bl	tp28xx_byte_read
 6301              	.LVL816:
2455:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB4);
 6302              		.loc 1 2455 0
 6303 041a B520     		movs	r0, #181
 6304 041c FFF7FEFF 		bl	tp28xx_byte_read
 6305              	.LVL817:
2456:TP2824/TP2802.c **** 
 6306              		.loc 1 2456 0
 6307 0420 B420     		movs	r0, #180
 6308 0422 FFF7FEFF 		bl	tp28xx_byte_read
 6309              	.LVL818:
2459:TP2824/TP2802.c **** 					tp28xx_byte_read(0xA2);
 6310              		.loc 1 2459 0
 6311 0426 A420     		movs	r0, #164
 6312 0428 FFF7FEFF 		bl	tp28xx_byte_read
 6313              	.LVL819:
2460:TP2824/TP2802.c **** 					tp28xx_byte_read(0xA3);
 6314              		.loc 1 2460 0
 6315 042c A220     		movs	r0, #162
 6316 042e FFF7FEFF 		bl	tp28xx_byte_read
 6317              	.LVL820:
2461:TP2824/TP2802.c **** 					
 6318              		.loc 1 2461 0
 6319 0432 A320     		movs	r0, #163
 6320 0434 FFF7FEFF 		bl	tp28xx_byte_read
 6321              	.LVL821:
2463:TP2824/TP2802.c **** 					delay(1);//5ms
 6322              		.loc 1 2463 0
 6323 0438 0021     		movs	r1, #0
 6324 043a A720     		movs	r0, #167
 6325 043c FFF7FEFF 		bl	tp28xx_byte_write
 6326              	.LVL822:
2464:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x83);
 6327              		.loc 1 2464 0
 6328 0440 0120     		movs	r0, #1
 6329 0442 FFF7FEFF 		bl	delay
 6330              	.LVL823:
2465:TP2824/TP2802.c **** 
 6331              		.loc 1 2465 0
 6332 0446 8321     		movs	r1, #131
 6333 0448 A720     		movs	r0, #167
 6334 044a FFF7FEFF 		bl	tp28xx_byte_write
 6335              	.LVL824:
 6336 044e 33E6     		b	.L449
 6337              	.LVL825:
 6338              	.L535:
 6339              	.LBE5:
2135:TP2824/TP2802.c ****                 {
ARM GAS  /tmp/ccnKW75d.s 			page 200


 6340              		.loc 1 2135 0
 6341 0450 734B     		ldr	r3, .L566+24
 6342 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6343 0454 232B     		cmp	r3, #35
 6344 0456 7FF62FAE 		bls	.L449
2137:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
 6345              		.loc 1 2137 0
 6346 045a 0120     		movs	r0, #1
 6347 045c FFF7FEFF 		bl	tp28xx_byte_read
 6348              	.LVL826:
 6349 0460 0646     		mov	r6, r0
 6350              	.LVL827:
2138:TP2824/TP2802.c ****                     if(mode[i] == NTSC || mode[i] == PAL)
 6351              		.loc 1 2138 0
 6352 0462 0146     		mov	r1, r0
 6353 0464 6F48     		ldr	r0, .L566+28
 6354              	.LVL828:
 6355 0466 FFF7FEFF 		bl	printf
 6356              	.LVL829:
2139:TP2824/TP2802.c ****                              printf("CVBS  mode:%d\r\n", (tWord)mode[i]);
 6357              		.loc 1 2139 0
 6358 046a 674B     		ldr	r3, .L566
 6359 046c 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6360 046e A1F10803 		sub	r3, r1, #8
 6361 0472 DBB2     		uxtb	r3, r3
 6362 0474 012B     		cmp	r3, #1
 6363 0476 23D9     		bls	.L546
2142:TP2824/TP2802.c ****             			   (mode[i] != R720P30 && mode[i] != R720P25 && mode[i] != R720P30V2 && mode[i] != R
 6364              		.loc 1 2142 0
 6365 0478 06F06406 		and	r6, r6, #100
 6366 047c 602E     		cmp	r6, #96
 6367 047e 7FF41BAE 		bne	.L449
2143:TP2824/TP2802.c ****                     {
 6368              		.loc 1 2143 0 discriminator 1
 6369 0482 0B1F     		subs	r3, r1, #4
 6370 0484 DBB2     		uxtb	r3, r3
2142:TP2824/TP2802.c ****             			   (mode[i] != R720P30 && mode[i] != R720P25 && mode[i] != R720P30V2 && mode[i] != R
 6371              		.loc 1 2142 0 discriminator 1
 6372 0486 012B     		cmp	r3, #1
 6373 0488 7FF616AE 		bls	.L449
2143:TP2824/TP2802.c ****                     {
 6374              		.loc 1 2143 0
 6375 048c 0C29     		cmp	r1, #12
 6376 048e 3FF413AE 		beq	.L449
2143:TP2824/TP2802.c ****                     {
 6377              		.loc 1 2143 0 is_stmt 0 discriminator 1
 6378 0492 0D29     		cmp	r1, #13
 6379 0494 3FF410AE 		beq	.L449
2143:TP2824/TP2802.c ****                     {
 6380              		.loc 1 2143 0 discriminator 2
 6381 0498 0029     		cmp	r1, #0
 6382 049a 3FF40DAE 		beq	.L449
2143:TP2824/TP2802.c ****                     {
 6383              		.loc 1 2143 0 discriminator 3
 6384 049e 0129     		cmp	r1, #1
 6385 04a0 3FF40AAE 		beq	.L449
2146:TP2824/TP2802.c ****                         {
ARM GAS  /tmp/ccnKW75d.s 			page 201


 6386              		.loc 1 2146 0 is_stmt 1
 6387 04a4 2046     		mov	r0, r4
 6388 04a6 FFF7FEFF 		bl	Set_HDC
 6389              	.LVL830:
 6390 04aa 0028     		cmp	r0, #0
 6391 04ac 3FF404AE 		beq	.L449
2148:TP2824/TP2802.c ****                             printf("turn to C ch%02x\r\n", (tWord)i);
 6392              		.loc 1 2148 0
 6393 04b0 584B     		ldr	r3, .L566+12
 6394 04b2 0222     		movs	r2, #2
 6395 04b4 5A55     		strb	r2, [r3, r5]
2149:TP2824/TP2802.c ****                         }
 6396              		.loc 1 2149 0
 6397 04b6 2946     		mov	r1, r5
 6398 04b8 5B48     		ldr	r0, .L566+32
 6399 04ba FFF7FEFF 		bl	printf
 6400              	.LVL831:
 6401 04be FBE5     		b	.L449
 6402              	.L546:
2140:TP2824/TP2802.c **** //                 if( 0x60 == (0x64 & tmp))
 6403              		.loc 1 2140 0
 6404 04c0 5A48     		ldr	r0, .L566+36
 6405 04c2 FFF7FEFF 		bl	printf
 6406              	.LVL832:
 6407 04c6 F7E5     		b	.L449
 6408              	.L536:
2156:TP2824/TP2802.c ****                 {
 6409              		.loc 1 2156 0
 6410 04c8 554B     		ldr	r3, .L566+24
 6411 04ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6412 04cc 232B     		cmp	r3, #35
 6413 04ce 7FF6F3AD 		bls	.L449
2158:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
 6414              		.loc 1 2158 0
 6415 04d2 0120     		movs	r0, #1
 6416 04d4 FFF7FEFF 		bl	tp28xx_byte_read
 6417              	.LVL833:
 6418 04d8 0646     		mov	r6, r0
 6419              	.LVL834:
2159:TP2824/TP2802.c **** 			if(mode[i] == NTSC || mode[i] == PAL)
 6420              		.loc 1 2159 0
 6421 04da 0146     		mov	r1, r0
 6422 04dc 5148     		ldr	r0, .L566+28
 6423              	.LVL835:
 6424 04de FFF7FEFF 		bl	printf
 6425              	.LVL836:
2160:TP2824/TP2802.c ****                              printf("CVBS  mode:%d\r\n", (tWord)mode[i]);
 6426              		.loc 1 2160 0
 6427 04e2 494B     		ldr	r3, .L566
 6428 04e4 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6429 04e6 A1F10803 		sub	r3, r1, #8
 6430 04ea DBB2     		uxtb	r3, r3
 6431 04ec 012B     		cmp	r3, #1
 6432 04ee 25D9     		bls	.L547
2163:TP2824/TP2802.c **** 		                 (0x00 == (0x04 & tmp) && 
 6433              		.loc 1 2163 0
 6434 04f0 06F01103 		and	r3, r6, #17
ARM GAS  /tmp/ccnKW75d.s 			page 202


 6435 04f4 102B     		cmp	r3, #16
 6436 04f6 03D0     		beq	.L474
2163:TP2824/TP2802.c **** 		                 (0x00 == (0x04 & tmp) && 
 6437              		.loc 1 2163 0 is_stmt 0 discriminator 1
 6438 04f8 464B     		ldr	r3, .L566+12
 6439 04fa 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6440 04fc 022B     		cmp	r3, #2
 6441 04fe 0FD0     		beq	.L475
 6442              	.L474:
2163:TP2824/TP2802.c **** 		                 (0x00 == (0x04 & tmp) && 
 6443              		.loc 1 2163 0 discriminator 3
 6444 0500 16F0040F 		tst	r6, #4
 6445 0504 7FF4D8AD 		bne	.L449
2165:TP2824/TP2802.c ****                     {
 6446              		.loc 1 2165 0 is_stmt 1
 6447 0508 0B1F     		subs	r3, r1, #4
 6448 050a DBB2     		uxtb	r3, r3
2164:TP2824/TP2802.c **** 		                 (mode[i] == R720P30 || mode[i] == R720P25 || mode[i] == R720P30V2 || mode[i] == 
 6449              		.loc 1 2164 0
 6450 050c 012B     		cmp	r3, #1
 6451 050e 07D9     		bls	.L475
2165:TP2824/TP2802.c ****                     {
 6452              		.loc 1 2165 0
 6453 0510 0C29     		cmp	r1, #12
 6454 0512 05D0     		beq	.L475
2165:TP2824/TP2802.c ****                     {
 6455              		.loc 1 2165 0 is_stmt 0 discriminator 1
 6456 0514 0D29     		cmp	r1, #13
 6457 0516 03D0     		beq	.L475
2165:TP2824/TP2802.c ****                     {
 6458              		.loc 1 2165 0 discriminator 2
 6459 0518 11B1     		cbz	r1, .L475
2165:TP2824/TP2802.c ****                     {
 6460              		.loc 1 2165 0 discriminator 3
 6461 051a 0129     		cmp	r1, #1
 6462 051c 7FF4CCAD 		bne	.L449
 6463              	.L475:
2167:TP2824/TP2802.c ****                         {
 6464              		.loc 1 2167 0 is_stmt 1
 6465 0520 2046     		mov	r0, r4
 6466 0522 FFF7FEFF 		bl	Set_HDA
 6467              	.LVL837:
 6468 0526 0028     		cmp	r0, #0
 6469 0528 3FF4C6AD 		beq	.L449
2169:TP2824/TP2802.c ****                             printf("turn to A ch%02x\r\n", (tWord)i);
 6470              		.loc 1 2169 0
 6471 052c 394B     		ldr	r3, .L566+12
 6472 052e 0122     		movs	r2, #1
 6473 0530 5A55     		strb	r2, [r3, r5]
2170:TP2824/TP2802.c ****                         }
 6474              		.loc 1 2170 0
 6475 0532 2946     		mov	r1, r5
 6476 0534 3E48     		ldr	r0, .L566+40
 6477 0536 FFF7FEFF 		bl	printf
 6478              	.LVL838:
 6479 053a BDE5     		b	.L449
 6480              	.L547:
ARM GAS  /tmp/ccnKW75d.s 			page 203


2161:TP2824/TP2802.c **** //                 if( 0x10 != (0x11 & tmp) && HDC == std[i])
 6481              		.loc 1 2161 0
 6482 053c 3B48     		ldr	r0, .L566+36
 6483 053e FFF7FEFF 		bl	printf
 6484              	.LVL839:
 6485 0542 B9E5     		b	.L449
 6486              	.L537:
2179:TP2824/TP2802.c ****                 {
 6487              		.loc 1 2179 0
 6488 0544 364B     		ldr	r3, .L566+24
 6489 0546 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6490 0548 232B     		cmp	r3, #35
 6491 054a 7FF6B5AD 		bls	.L449
2181:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
 6492              		.loc 1 2181 0
 6493 054e 0120     		movs	r0, #1
 6494 0550 FFF7FEFF 		bl	tp28xx_byte_read
 6495              	.LVL840:
 6496 0554 0646     		mov	r6, r0
 6497              	.LVL841:
2182:TP2824/TP2802.c **** 
 6498              		.loc 1 2182 0
 6499 0556 0146     		mov	r1, r0
 6500 0558 3248     		ldr	r0, .L566+28
 6501              	.LVL842:
 6502 055a FFF7FEFF 		bl	printf
 6503              	.LVL843:
2184:TP2824/TP2802.c ****                         printf("AHD 1080P30/P25  mode:%d\r\n", (tWord)mode[i]);
 6504              		.loc 1 2184 0
 6505 055e 2A4B     		ldr	r3, .L566
 6506 0560 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6507 0562 8B1E     		subs	r3, r1, #2
 6508 0564 DBB2     		uxtb	r3, r3
 6509 0566 012B     		cmp	r3, #1
 6510 0568 24D9     		bls	.L548
 6511              	.L477:
2186:TP2824/TP2802.c ****                         printf("TVI 1080P30/P25   mode:%d\r\n", (tWord)mode[i]);
 6512              		.loc 1 2186 0
 6513 056a 012B     		cmp	r3, #1
 6514 056c 29D9     		bls	.L549
 6515              	.L478:
2188:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6516              		.loc 1 2188 0
 6517 056e 0B1F     		subs	r3, r1, #4
 6518 0570 DBB2     		uxtb	r3, r3
 6519 0572 012B     		cmp	r3, #1
 6520 0574 06D9     		bls	.L479
2188:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6521              		.loc 1 2188 0 is_stmt 0 discriminator 2
 6522 0576 0C29     		cmp	r1, #12
 6523 0578 04D0     		beq	.L479
2188:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6524              		.loc 1 2188 0 discriminator 4
 6525 057a 0D29     		cmp	r1, #13
 6526 057c 02D0     		beq	.L479
2188:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6527              		.loc 1 2188 0 discriminator 6
ARM GAS  /tmp/ccnKW75d.s 			page 204


 6528 057e 09B1     		cbz	r1, .L479
2188:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6529              		.loc 1 2188 0 discriminator 8
 6530 0580 0129     		cmp	r1, #1
 6531 0582 06D1     		bne	.L480
 6532              	.L479:
2188:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6533              		.loc 1 2188 0 discriminator 9
 6534 0584 16F0040F 		tst	r6, #4
 6535 0588 03D1     		bne	.L480
2189:TP2824/TP2802.c ****                         printf("AHD 720P30/P25/P60/P50   mode:%d\r\n", (tWord)mode[i]);
 6536              		.loc 1 2189 0 is_stmt 1
 6537 058a 224B     		ldr	r3, .L566+12
 6538 058c 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6539 058e 012B     		cmp	r3, #1
 6540 0590 22D0     		beq	.L550
 6541              	.L480:
2191:TP2824/TP2802.c ****                              printf("CVBS    mode:%d\r\n", (tWord)mode[i]);
 6542              		.loc 1 2191 0
 6543 0592 A1F10803 		sub	r3, r1, #8
 6544 0596 DBB2     		uxtb	r3, r3
 6545 0598 012B     		cmp	r3, #1
 6546 059a 21D9     		bls	.L551
2194:TP2824/TP2802.c ****                     {
 6547              		.loc 1 2194 0
 6548 059c 16F0010F 		tst	r6, #1
 6549 05a0 3FF48AAD 		beq	.L449
2197:TP2824/TP2802.c ****                         printf("back to T ch%02x\r\n", (tWord)i); //chunyu
 6550              		.loc 1 2197 0
 6551 05a4 2046     		mov	r0, r4
 6552 05a6 FFF7FEFF 		bl	Set_VidRes
 6553              	.LVL844:
2198:TP2824/TP2802.c ****                     }
 6554              		.loc 1 2198 0
 6555 05aa 2946     		mov	r1, r5
 6556 05ac 2148     		ldr	r0, .L566+44
 6557 05ae FFF7FEFF 		bl	printf
 6558              	.LVL845:
 6559 05b2 81E5     		b	.L449
 6560              	.L548:
2184:TP2824/TP2802.c ****                         printf("AHD 1080P30/P25  mode:%d\r\n", (tWord)mode[i]);
 6561              		.loc 1 2184 0 discriminator 1
 6562 05b4 16F0040F 		tst	r6, #4
 6563 05b8 D7D1     		bne	.L477
2185:TP2824/TP2802.c **** 		      else if((mode[i] == R1080P30 || mode[i] == R1080P25) && 0x04 == (0x04 & tmp) && std[i] == T
 6564              		.loc 1 2185 0
 6565 05ba 1F48     		ldr	r0, .L566+48
 6566 05bc FFF7FEFF 		bl	printf
 6567              	.LVL846:
 6568 05c0 7AE5     		b	.L449
 6569              	.L549:
2186:TP2824/TP2802.c ****                         printf("TVI 1080P30/P25   mode:%d\r\n", (tWord)mode[i]);
 6570              		.loc 1 2186 0 discriminator 1
 6571 05c2 16F0040F 		tst	r6, #4
 6572 05c6 D2D0     		beq	.L478
2186:TP2824/TP2802.c ****                         printf("TVI 1080P30/P25   mode:%d\r\n", (tWord)mode[i]);
 6573              		.loc 1 2186 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/ccnKW75d.s 			page 205


 6574 05c8 124B     		ldr	r3, .L566+12
 6575 05ca 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6576 05cc 002B     		cmp	r3, #0
 6577 05ce CED1     		bne	.L478
2187:TP2824/TP2802.c **** 		      else if((mode[i] == R720P30 || mode[i] == R720P25 || mode[i] == R720P30V2 || mode[i] == R72
 6578              		.loc 1 2187 0 is_stmt 1
 6579 05d0 1A48     		ldr	r0, .L566+52
 6580 05d2 FFF7FEFF 		bl	printf
 6581              	.LVL847:
 6582 05d6 6FE5     		b	.L449
 6583              	.L550:
2190:TP2824/TP2802.c **** 		      else if(mode[i] == NTSC || mode[i] == PAL)
 6584              		.loc 1 2190 0
 6585 05d8 1948     		ldr	r0, .L566+56
 6586 05da FFF7FEFF 		bl	printf
 6587              	.LVL848:
 6588 05de 6BE5     		b	.L449
 6589              	.L551:
2192:TP2824/TP2802.c **** //		      if( 0x00 != (0x01 & tmp))
 6590              		.loc 1 2192 0
 6591 05e0 1848     		ldr	r0, .L566+60
 6592 05e2 FFF7FEFF 		bl	printf
 6593              	.LVL849:
 6594 05e6 67E5     		b	.L449
 6595              	.L538:
2204:TP2824/TP2802.c ****                 egain[i][2] = egain[i][1];
 6596              		.loc 1 2204 0
 6597 05e8 174E     		ldr	r6, .L566+64
 6598 05ea 06EB8503 		add	r3, r6, r5, lsl #2
 6599 05ee 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 6600 05f0 DA70     		strb	r2, [r3, #3]
2205:TP2824/TP2802.c ****                 egain[i][1] = egain[i][0];
 6601              		.loc 1 2205 0
 6602 05f2 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 6603 05f4 9A70     		strb	r2, [r3, #2]
2206:TP2824/TP2802.c **** 
 6604              		.loc 1 2206 0
 6605 05f6 16F82520 		ldrb	r2, [r6, r5, lsl #2]	@ zero_extendqisi2
 6606 05fa 5A70     		strb	r2, [r3, #1]
2208:TP2824/TP2802.c ****                 egain[i][0] = gain;
 6607              		.loc 1 2208 0
 6608 05fc FFF7FEFF 		bl	ReadGain
 6609              	.LVL850:
2209:TP2824/TP2802.c ****             }
 6610              		.loc 1 2209 0
 6611 0600 06F82500 		strb	r0, [r6, r5, lsl #2]
 6612 0604 58E5     		b	.L449
 6613              	.L567:
 6614 0606 00BF     		.align	2
 6615              	.L566:
 6616 0608 00000000 		.word	mode
 6617 060c 00000000 		.word	.LANCHOR34
 6618 0610 00000000 		.word	.LANCHOR35
 6619 0614 00000000 		.word	std
 6620 0618 00000000 		.word	.LANCHOR32
 6621 061c 00000000 		.word	.LANCHOR37
 6622 0620 00000000 		.word	chip
ARM GAS  /tmp/ccnKW75d.s 			page 206


 6623 0624 AC000000 		.word	.LC49
 6624 0628 CC000000 		.word	.LC51
 6625 062c BC000000 		.word	.LC50
 6626 0630 E0000000 		.word	.LC52
 6627 0634 64010000 		.word	.LC57
 6628 0638 F4000000 		.word	.LC53
 6629 063c 10010000 		.word	.LC54
 6630 0640 2C010000 		.word	.LC55
 6631 0644 50010000 		.word	.LC56
 6632 0648 00000000 		.word	egain
 6633              	.LVL851:
 6634              	.L539:
2213:TP2824/TP2802.c ****                 egain[i][2] = egain[i][1];
 6635              		.loc 1 2213 0
 6636 064c 864F     		ldr	r7, .L568
 6637 064e 07EB8506 		add	r6, r7, r5, lsl #2
 6638 0652 B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 6639 0654 F370     		strb	r3, [r6, #3]
2214:TP2824/TP2802.c ****                 egain[i][1] = egain[i][0];
 6640              		.loc 1 2214 0
 6641 0656 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 6642 0658 B370     		strb	r3, [r6, #2]
2215:TP2824/TP2802.c **** 
 6643              		.loc 1 2215 0
 6644 065a 17F82530 		ldrb	r3, [r7, r5, lsl #2]	@ zero_extendqisi2
 6645 065e 7370     		strb	r3, [r6, #1]
2217:TP2824/TP2802.c ****                 egain[i][0] = gain;
 6646              		.loc 1 2217 0
 6647 0660 FFF7FEFF 		bl	ReadGain
 6648              	.LVL852:
2218:TP2824/TP2802.c **** 
 6649              		.loc 1 2218 0
 6650 0664 07F82500 		strb	r0, [r7, r5, lsl #2]
2220:TP2824/TP2802.c ****                 {
 6651              		.loc 1 2220 0
 6652 0668 F378     		ldrb	r3, [r6, #3]	@ zero_extendqisi2
 6653 066a 1B1A     		subs	r3, r3, r0
 6654 066c 0133     		adds	r3, r3, #1
 6655 066e 022B     		cmp	r3, #2
 6656 0670 3FF622AD 		bhi	.L449
2220:TP2824/TP2802.c ****                 {
 6657              		.loc 1 2220 0 is_stmt 0 discriminator 1
 6658 0674 B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 6659 0676 1B1A     		subs	r3, r3, r0
 6660 0678 0133     		adds	r3, r3, #1
 6661 067a 022B     		cmp	r3, #2
 6662 067c 3FF61CAD 		bhi	.L449
2220:TP2824/TP2802.c ****                 {
 6663              		.loc 1 2220 0 discriminator 2
 6664 0680 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 6665 0682 1B1A     		subs	r3, r3, r0
 6666 0684 0133     		adds	r3, r3, #1
 6667 0686 022B     		cmp	r3, #2
 6668 0688 3FF616AD 		bhi	.L449
2222:TP2824/TP2802.c ****                 }
 6669              		.loc 1 2222 0 is_stmt 1
 6670 068c 774B     		ldr	r3, .L568+4
ARM GAS  /tmp/ccnKW75d.s 			page 207


 6671 068e 1322     		movs	r2, #19
 6672 0690 5A55     		strb	r2, [r3, r5]
 6673 0692 11E5     		b	.L449
 6674              	.LVL853:
 6675              	.L540:
2227:TP2824/TP2802.c ****                 printf("Egain=0x%02x ch%02x,std=%d,mode=0x%02X\r\n", (tWord)gain, (tWord)i, (tWord)
 6676              		.loc 1 2227 0
 6677 0694 FFF7FEFF 		bl	ReadGain
 6678              	.LVL854:
 6679 0698 0646     		mov	r6, r0
 6680              	.LVL855:
2228:TP2824/TP2802.c **** 
 6681              		.loc 1 2228 0
 6682 069a 754B     		ldr	r3, .L568+8
 6683 069c 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6684 069e 754F     		ldr	r7, .L568+12
 6685 06a0 7A5D     		ldrb	r2, [r7, r5]	@ zero_extendqisi2
 6686 06a2 0092     		str	r2, [sp]
 6687 06a4 2A46     		mov	r2, r5
 6688 06a6 0146     		mov	r1, r0
 6689 06a8 7348     		ldr	r0, .L568+16
 6690              	.LVL856:
 6691 06aa FFF7FEFF 		bl	printf
 6692              	.LVL857:
2230:TP2824/TP2802.c ****                 {
 6693              		.loc 1 2230 0
 6694 06ae 7B5D     		ldrb	r3, [r7, r5]	@ zero_extendqisi2
 6695 06b0 9A1E     		subs	r2, r3, #2
 6696 06b2 D2B2     		uxtb	r2, r2
 6697 06b4 012A     		cmp	r2, #1
 6698 06b6 12D9     		bls	.L552
2234:TP2824/TP2802.c ****                 {
 6699              		.loc 1 2234 0
 6700 06b8 012B     		cmp	r3, #1
 6701 06ba 3CD9     		bls	.L553
2238:TP2824/TP2802.c ****                 {
 6702              		.loc 1 2238 0
 6703 06bc 1A1F     		subs	r2, r3, #4
 6704 06be D2B2     		uxtb	r2, r2
 6705 06c0 012A     		cmp	r2, #1
 6706 06c2 3CD9     		bls	.L554
2242:TP2824/TP2802.c ****                 {
 6707              		.loc 1 2242 0
 6708 06c4 A3F10C02 		sub	r2, r3, #12
 6709 06c8 D2B2     		uxtb	r2, r2
 6710 06ca 012A     		cmp	r2, #1
 6711 06cc 3BD9     		bls	.L555
2246:TP2824/TP2802.c ****                 {
 6712              		.loc 1 2246 0
 6713 06ce 082B     		cmp	r3, #8
 6714 06d0 3DD0     		beq	.L556
2250:TP2824/TP2802.c ****                 {
 6715              		.loc 1 2250 0
 6716 06d2 092B     		cmp	r3, #9
 6717 06d4 3FD1     		bne	.L491
2252:TP2824/TP2802.c ****                 }
 6718              		.loc 1 2252 0
ARM GAS  /tmp/ccnKW75d.s 			page 208


 6719 06d6 694B     		ldr	r3, .L568+20
 6720 06d8 0122     		movs	r2, #1
 6721 06da 5A55     		strb	r2, [r3, r5]
 6722 06dc 02E0     		b	.L486
 6723              	.L552:
2232:TP2824/TP2802.c ****                 }
 6724              		.loc 1 2232 0
 6725 06de 674B     		ldr	r3, .L568+20
 6726 06e0 0622     		movs	r2, #6
 6727 06e2 5A55     		strb	r2, [r3, r5]
 6728              	.L486:
2259:TP2824/TP2802.c **** 				   if(SelectInputMode==1)
 6729              		.loc 1 2259 0
 6730 06e4 654B     		ldr	r3, .L568+20
 6731 06e6 5A5D     		ldrb	r2, [r3, r5]	@ zero_extendqisi2
 6732 06e8 654B     		ldr	r3, .L568+24
 6733 06ea 1A70     		strb	r2, [r3]
2260:TP2824/TP2802.c **** 					   {
 6734              		.loc 1 2260 0
 6735 06ec 654B     		ldr	r3, .L568+28
 6736 06ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6737 06f0 012B     		cmp	r3, #1
 6738 06f2 34D0     		beq	.L557
 6739              	.L492:
2266:TP2824/TP2802.c ****                 {
 6740              		.loc 1 2266 0
 6741 06f4 614B     		ldr	r3, .L568+20
 6742 06f6 5A5D     		ldrb	r2, [r3, r5]	@ zero_extendqisi2
 6743 06f8 634B     		ldr	r3, .L568+32
 6744 06fa 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6745 06fc 9A42     		cmp	r2, r3
 6746 06fe 05D0     		beq	.L493
2283:TP2824/TP2802.c **** 
 6747              		.loc 1 2283 0
 6748 0700 624B     		ldr	r3, .L568+36
 6749 0702 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6750 0704 2946     		mov	r1, r5
 6751 0706 6248     		ldr	r0, .L568+40
 6752 0708 FFF7FEFF 		bl	printf
 6753              	.LVL858:
 6754              	.L493:
2321:TP2824/TP2802.c ****                 {
 6755              		.loc 1 2321 0
 6756 070c 584B     		ldr	r3, .L568+8
 6757 070e 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6758 0710 5BBB     		cbnz	r3, .L558
2335:TP2824/TP2802.c ****                     {
 6759              		.loc 1 2335 0
 6760 0712 604B     		ldr	r3, .L568+44
 6761 0714 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6762 0716 243B     		subs	r3, r3, #36
 6763 0718 DBB2     		uxtb	r3, r3
 6764 071a 012B     		cmp	r3, #1
 6765 071c 38D9     		bls	.L559
 6766              	.L496:
2342:TP2824/TP2802.c **** 			  	printf("CVBS NTSC   mode\r\n");
 6767              		.loc 1 2342 0
ARM GAS  /tmp/ccnKW75d.s 			page 209


 6768 071e 554B     		ldr	r3, .L568+12
 6769 0720 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6770 0722 082B     		cmp	r3, #8
 6771 0724 43D0     		beq	.L560
2344:TP2824/TP2802.c **** 			  	printf("CVBS PAL   mode\r\n");
 6772              		.loc 1 2344 0
 6773 0726 092B     		cmp	r3, #9
 6774 0728 45D0     		beq	.L561
2347:TP2824/TP2802.c ****                     //gRxLoopFlg = 0 ;
 6775              		.loc 1 2347 0
 6776 072a 40F62B11 		movw	r1, #2347
 6777 072e 5A48     		ldr	r0, .L568+48
 6778 0730 FFF7FEFF 		bl	printf
 6779              	.LVL859:
 6780 0734 C0E4     		b	.L449
 6781              	.L553:
2236:TP2824/TP2802.c ****                 }
 6782              		.loc 1 2236 0
 6783 0736 514B     		ldr	r3, .L568+20
 6784 0738 0522     		movs	r2, #5
 6785 073a 5A55     		strb	r2, [r3, r5]
 6786 073c D2E7     		b	.L486
 6787              	.L554:
2240:TP2824/TP2802.c ****                 }
 6788              		.loc 1 2240 0
 6789 073e 4F4B     		ldr	r3, .L568+20
 6790 0740 0522     		movs	r2, #5
 6791 0742 5A55     		strb	r2, [r3, r5]
 6792 0744 CEE7     		b	.L486
 6793              	.L555:
2244:TP2824/TP2802.c ****                 }
 6794              		.loc 1 2244 0
 6795 0746 4D4B     		ldr	r3, .L568+20
 6796 0748 0522     		movs	r2, #5
 6797 074a 5A55     		strb	r2, [r3, r5]
 6798 074c CAE7     		b	.L486
 6799              	.L556:
2248:TP2824/TP2802.c ****                 }
 6800              		.loc 1 2248 0
 6801 074e 4B4B     		ldr	r3, .L568+20
 6802 0750 0022     		movs	r2, #0
 6803 0752 5A55     		strb	r2, [r3, r5]
 6804 0754 C6E7     		b	.L486
 6805              	.L491:
2256:TP2824/TP2802.c ****                 }
 6806              		.loc 1 2256 0
 6807 0756 494B     		ldr	r3, .L568+20
 6808 0758 1422     		movs	r2, #20
 6809 075a 5A55     		strb	r2, [r3, r5]
 6810 075c C2E7     		b	.L486
 6811              	.L557:
2262:TP2824/TP2802.c **** 				   //MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);
 6812              		.loc 1 2262 0
 6813 075e 4021     		movs	r1, #64
 6814 0760 4FF47A70 		mov	r0, #1000
 6815 0764 FFF7FEFF 		bl	MCUTimerActiveTimerEvent
 6816              	.LVL860:
ARM GAS  /tmp/ccnKW75d.s 			page 210


 6817 0768 C4E7     		b	.L492
 6818              	.L558:
2323:TP2824/TP2802.c ****                     if (std[i]== HDA )
 6819              		.loc 1 2323 0
 6820 076a B108     		lsrs	r1, r6, #2
 6821 076c 61F07F01 		orn	r1, r1, #127
 6822 0770 C9B2     		uxtb	r1, r1
 6823 0772 0720     		movs	r0, #7
 6824 0774 FFF7FEFF 		bl	tp28xx_byte_write
 6825              	.LVL861:
2324:TP2824/TP2802.c ****                     {
 6826              		.loc 1 2324 0
 6827 0778 3D4B     		ldr	r3, .L568+8
 6828 077a 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6829 077c 012B     		cmp	r3, #1
 6830 077e 03D0     		beq	.L562
2330:TP2824/TP2802.c ****                     }
 6831              		.loc 1 2330 0
 6832 0780 4648     		ldr	r0, .L568+52
 6833 0782 FFF7FEFF 		bl	puts
 6834              	.LVL862:
 6835 0786 97E4     		b	.L449
 6836              	.L562:
2326:TP2824/TP2802.c ****                     }
 6837              		.loc 1 2326 0
 6838 0788 4548     		ldr	r0, .L568+56
 6839 078a FFF7FEFF 		bl	puts
 6840              	.LVL863:
 6841 078e 93E4     		b	.L449
 6842              	.L559:
2337:TP2824/TP2802.c ****                         {
 6843              		.loc 1 2337 0
 6844 0790 384B     		ldr	r3, .L568+12
 6845 0792 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6846 0794 13F0200F 		tst	r3, #32
 6847 0798 C1D0     		beq	.L496
2339:TP2824/TP2802.c ****                         }
 6848              		.loc 1 2339 0
 6849 079a 0321     		movs	r1, #3
 6850 079c B6FBF1F1 		udiv	r1, r6, r1
 6851 07a0 61F07F01 		orn	r1, r1, #127
 6852 07a4 C9B2     		uxtb	r1, r1
 6853 07a6 0720     		movs	r0, #7
 6854 07a8 FFF7FEFF 		bl	tp28xx_byte_write
 6855              	.LVL864:
 6856 07ac B7E7     		b	.L496
 6857              	.L560:
2343:TP2824/TP2802.c **** 		      else if(mode[i] == PAL) //20200408 cvbs night no burst
 6858              		.loc 1 2343 0
 6859 07ae 3D48     		ldr	r0, .L568+60
 6860 07b0 FFF7FEFF 		bl	puts
 6861              	.LVL865:
 6862 07b4 80E4     		b	.L449
 6863              	.L561:
2345:TP2824/TP2802.c **** 		      else
 6864              		.loc 1 2345 0
 6865 07b6 3C48     		ldr	r0, .L568+64
ARM GAS  /tmp/ccnKW75d.s 			page 211


 6866 07b8 FFF7FEFF 		bl	puts
 6867              	.LVL866:
 6868 07bc 7CE4     		b	.L449
 6869              	.L541:
2353:TP2824/TP2802.c ****                 {
 6870              		.loc 1 2353 0
 6871 07be 2C4B     		ldr	r3, .L568+8
 6872 07c0 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6873 07c2 83B9     		cbnz	r3, .L563
2360:TP2824/TP2802.c ****                     {
 6874              		.loc 1 2360 0
 6875 07c4 334B     		ldr	r3, .L568+44
 6876 07c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6877 07c8 243B     		subs	r3, r3, #36
 6878 07ca DBB2     		uxtb	r3, r3
 6879 07cc 012B     		cmp	r3, #1
 6880 07ce 3FF673AC 		bhi	.L449
2362:TP2824/TP2802.c ****                         {
 6881              		.loc 1 2362 0
 6882 07d2 284B     		ldr	r3, .L568+12
 6883 07d4 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6884 07d6 13F0200F 		tst	r3, #32
 6885 07da 3FF46DAC 		beq	.L449
2364:TP2824/TP2802.c ****                         }
 6886              		.loc 1 2364 0
 6887 07de 1620     		movs	r0, #22
 6888 07e0 FFF7FEFF 		bl	SetCGain
 6889              	.LVL867:
 6890 07e4 68E4     		b	.L449
 6891              	.L563:
2355:TP2824/TP2802.c ****                     SetCGain(0x0c);
 6892              		.loc 1 2355 0
 6893 07e6 2046     		mov	r0, r4
 6894 07e8 FFF7FEFF 		bl	ManualAGC
 6895              	.LVL868:
2356:TP2824/TP2802.c ****                 }
 6896              		.loc 1 2356 0
 6897 07ec 0C20     		movs	r0, #12
 6898 07ee FFF7FEFF 		bl	SetCGain
 6899              	.LVL869:
 6900 07f2 61E4     		b	.L449
 6901              	.L542:
 6902              	.LBB6:
2378:TP2824/TP2802.c **** 					}
 6903              		.loc 1 2378 0
 6904 07f4 2D48     		ldr	r0, .L568+68
 6905 07f6 CCE5     		b	.L502
 6906              	.L543:
2389:TP2824/TP2802.c **** 					}
 6907              		.loc 1 2389 0
 6908 07f8 1921     		movs	r1, #25
 6909 07fa C620     		movs	r0, #198
 6910 07fc FFF7FEFF 		bl	tp28xx_byte_write
 6911              	.LVL870:
 6912 0800 D0E5     		b	.L503
 6913              	.L544:
2406:TP2824/TP2802.c **** 						printf("EQdet %d\r\n",  PtzTxChNum);
ARM GAS  /tmp/ccnKW75d.s 			page 212


 6914              		.loc 1 2406 0
 6915 0802 2B4B     		ldr	r3, .L568+72
 6916 0804 1C70     		strb	r4, [r3]
2407:TP2824/TP2802.c **** 					}
 6917              		.loc 1 2407 0
 6918 0806 2946     		mov	r1, r5
 6919 0808 2A48     		ldr	r0, .L568+76
 6920 080a FFF7FEFF 		bl	printf
 6921              	.LVL871:
 6922 080e ECE5     		b	.L501
 6923              	.L545:
2416:TP2824/TP2802.c **** 						//#else
 6924              		.loc 1 2416 0
 6925 0810 FFF7FEFF 		bl	Init_COC_PTZOUT1
 6926              	.LVL872:
2419:TP2824/TP2802.c **** 					
 6927              		.loc 1 2419 0
 6928 0814 2848     		ldr	r0, .L568+80
 6929 0816 FFF7FEFF 		bl	I2CDeviceSet1
 6930              	.LVL873:
2421:TP2824/TP2802.c **** 							tp28xx_byte_write(0x40,0x04);
 6931              		.loc 1 2421 0
 6932 081a 2146     		mov	r1, r4
 6933 081c 4020     		movs	r0, #64
 6934 081e FFF7FEFF 		bl	tp28xx_byte_write
 6935              	.LVL874:
2422:TP2824/TP2802.c **** 						tp28xx_byte_write(0xbe, 0x80);
 6936              		.loc 1 2422 0
 6937 0822 0421     		movs	r1, #4
 6938 0824 4020     		movs	r0, #64
 6939 0826 FFF7FEFF 		bl	tp28xx_byte_write
 6940              	.LVL875:
2423:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB6);
 6941              		.loc 1 2423 0
 6942 082a 8021     		movs	r1, #128
 6943 082c BE20     		movs	r0, #190
 6944 082e FFF7FEFF 		bl	tp28xx_byte_write
 6945              	.LVL876:
2424:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB5);
 6946              		.loc 1 2424 0
 6947 0832 B620     		movs	r0, #182
 6948 0834 FFF7FEFF 		bl	tp28xx_byte_read
 6949              	.LVL877:
2425:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB4);
 6950              		.loc 1 2425 0
 6951 0838 B520     		movs	r0, #181
 6952 083a FFF7FEFF 		bl	tp28xx_byte_read
 6953              	.LVL878:
2426:TP2824/TP2802.c **** 
 6954              		.loc 1 2426 0
 6955 083e B420     		movs	r0, #180
 6956 0840 FFF7FEFF 		bl	tp28xx_byte_read
 6957              	.LVL879:
2429:TP2824/TP2802.c **** 						delay(1);//5ms
 6958              		.loc 1 2429 0
 6959 0844 2421     		movs	r1, #36
 6960 0846 A720     		movs	r0, #167
ARM GAS  /tmp/ccnKW75d.s 			page 213


 6961 0848 FFF7FEFF 		bl	tp28xx_byte_write
 6962              	.LVL880:
2430:TP2824/TP2802.c **** 						tp28xx_byte_write(0xa7, 0xA7);
 6963              		.loc 1 2430 0
 6964 084c 0120     		movs	r0, #1
 6965 084e FFF7FEFF 		bl	delay
 6966              	.LVL881:
2431:TP2824/TP2802.c **** 						#endif
 6967              		.loc 1 2431 0
 6968 0852 A721     		movs	r1, #167
 6969 0854 0846     		mov	r0, r1
 6970 0856 FFF7FEFF 		bl	tp28xx_byte_write
 6971              	.LVL882:
2444:TP2824/TP2802.c **** 				}
 6972              		.loc 1 2444 0
 6973 085a 154B     		ldr	r3, .L568+72
 6974 085c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6975 085e 1748     		ldr	r0, .L568+84
 6976 0860 FFF7FEFF 		bl	printf
 6977              	.LVL883:
 6978 0864 C6E5     		b	.L504
 6979              	.L569:
 6980 0866 00BF     		.align	2
 6981              	.L568:
 6982 0868 00000000 		.word	egain
 6983 086c 00000000 		.word	count
 6984 0870 00000000 		.word	std
 6985 0874 00000000 		.word	mode
 6986 0878 78010000 		.word	.LC58
 6987 087c 00000000 		.word	.LANCHOR23
 6988 0880 00000000 		.word	.LANCHOR22
 6989 0884 00000000 		.word	SelectInputMode
 6990 0888 00000000 		.word	gbVXIS_InputMode
 6991 088c 00000000 		.word	gbVXIS_OuputModeflg
 6992 0890 A4010000 		.word	.LC59
 6993 0894 00000000 		.word	chip
 6994 0898 24020000 		.word	.LC64
 6995 089c F0010000 		.word	.LC61
 6996 08a0 E4010000 		.word	.LC60
 6997 08a4 FC010000 		.word	.LC62
 6998 08a8 10020000 		.word	.LC63
 6999 08ac 00000000 		.word	.LANCHOR31
 7000 08b0 00000000 		.word	.LANCHOR25
 7001 08b4 38020000 		.word	.LC65
 7002 08b8 00000000 		.word	.LANCHOR36
 7003 08bc 44020000 		.word	.LC66
 7004              	.LBE6:
 7005              		.cfi_endproc
 7006              	.LFE85:
 7008              		.section	.text.Set_Mirror_COC,"ax",%progbits
 7009              		.align	1
 7010              		.global	Set_Mirror_COC
 7011              		.syntax unified
 7012              		.thumb
 7013              		.thumb_func
 7014              		.fpu softvfp
 7016              	Set_Mirror_COC:
ARM GAS  /tmp/ccnKW75d.s 			page 214


 7017              	.LFB107:
4294:TP2824/TP2802.c **** 
4295:TP2824/TP2802.c **** void Set_Mirror_COC(void)
4296:TP2824/TP2802.c **** {
 7018              		.loc 1 4296 0
 7019              		.cfi_startproc
 7020              		@ args = 0, pretend = 0, frame = 0
 7021              		@ frame_needed = 0, uses_anonymous_args = 0
 7022 0000 08B5     		push	{r3, lr}
 7023              	.LCFI46:
 7024              		.cfi_def_cfa_offset 8
 7025              		.cfi_offset 3, -8
 7026              		.cfi_offset 14, -4
4297:TP2824/TP2802.c **** #if 0
4298:TP2824/TP2802.c **** VXISI2CWrite(0x40,0x04);
4299:TP2824/TP2802.c **** VXISI2CWrite(0x56,0x02);
4300:TP2824/TP2802.c **** VXISI2CWrite(0x57,0x00);
4301:TP2824/TP2802.c **** VXISI2CWrite(0x58,0x3C);
4302:TP2824/TP2802.c **** VXISI2CWrite(0x59,0x89);
4303:TP2824/TP2802.c **** VXISI2CWrite(0x5a,0x9A);
4304:TP2824/TP2802.c **** 
4305:TP2824/TP2802.c **** VXISI2CWrite(0x5c,0x02);
4306:TP2824/TP2802.c **** VXISI2CWrite(0x5d,0x02);
4307:TP2824/TP2802.c **** VXISI2CWrite(0x5e,0x00);
4308:TP2824/TP2802.c **** VXISI2CWrite(0x5f,0x3E);
4309:TP2824/TP2802.c **** VXISI2CWrite(0x60,0x9F);
4310:TP2824/TP2802.c **** #endif
4311:TP2824/TP2802.c **** VXISI2CWrite(0x6f,0x43);
 7027              		.loc 1 4311 0
 7028 0002 4321     		movs	r1, #67
 7029 0004 6F20     		movs	r0, #111
 7030 0006 FFF7FEFF 		bl	VXISI2CWrite
 7031              	.LVL884:
4312:TP2824/TP2802.c **** delay(5);//50ms
 7032              		.loc 1 4312 0
 7033 000a 0520     		movs	r0, #5
 7034 000c FFF7FEFF 		bl	delay
 7035              	.LVL885:
4313:TP2824/TP2802.c **** VXISI2CWrite(0x6f,0x42);
 7036              		.loc 1 4313 0
 7037 0010 4221     		movs	r1, #66
 7038 0012 6F20     		movs	r0, #111
 7039 0014 FFF7FEFF 		bl	VXISI2CWrite
 7040              	.LVL886:
4314:TP2824/TP2802.c **** }
 7041              		.loc 1 4314 0
 7042 0018 08BD     		pop	{r3, pc}
 7043              		.cfi_endproc
 7044              	.LFE107:
 7046              		.global	TP2802_FORMAT_DataSet
 7047              		.global	TP2824C_CVIHD_PTZ_DataSet
 7048              		.global	TP2824C_CVBS_PTZ_DataSet
 7049              		.global	TP2824C_AHD_FHD_PTZ_DataSet
 7050              		.global	TP2824C_TVI_FHD_PTZ_DataSet
 7051              		.global	TP2802D_DataSet
 7052              		.global	TP2822_DataSet
 7053              		.global	TP2823_MODE_DataSet
ARM GAS  /tmp/ccnKW75d.s 			page 215


 7054              		.global	TP2823_DataSet
 7055              		.global	TP2834_MODE_DataSet
 7056              		.global	TP2834_DataSet
 7057              		.global	TP2833_HDA_DataSet
 7058              		.global	TP2833_MODE_DataSet
 7059              		.global	TP2833_DataSet
 7060              		.global	TP2834_Audio_DataSet
 7061              		.global	TP2853C_HDC_DataSet
 7062              		.global	TP2853C_HDA_DataSet
 7063              		.global	TP2853C_MODE_DataSet
 7064              		.global	TP2853C_DataSet
 7065              		.global	TP2824C_HDC_DataSet
 7066              		.global	TP2826_HDC_DataSet
 7067              		.global	TP2824C_HDA_DataSet
 7068              		.global	TP2826_HDA_DataSet
 7069              		.global	TP2824C_MODE_DataSet
 7070              		.global	TP2826_MODE_DataSet
 7071              		.global	TP2826_DataSet
 7072              		.global	TP2824C_DataSet
 7073              		.global	QuadBoxMode
 7074              		.global	QuadBoxId
 7075              		.global	PtzTxChNum
 7076              		.global	PreCOCSelectModeType
 7077              		.global	COCSelectModeType
 7078              		.global	Flisheye_VLOSS_Count
 7079              		.global	TP_InputMode
 7080              		.comm	Flisheye_COC,1,1
 7081              		.global	Flisheye_CAM
 7082              		.comm	ptztxflag,4,4
 7083              		.comm	TVI_speed,1,1
 7084              		.comm	TVI_Chksum,1,1
 7085              		.comm	presetNum,1,1
 7086              		.comm	TVI_Command,1,1
 7087              		.comm	AHDcmd4,1,1
 7088              		.comm	AHDcmd3,1,1
 7089              		.comm	AHDcmd2,1,1
 7090              		.comm	AHDcmd1,1,1
 7091              		.comm	COCRX4,12,4
 7092              		.comm	COCRX3,12,4
 7093              		.comm	COCRX2,12,4
 7094              		.comm	COCRX1,12,4
 7095              		.comm	tpRxD,26,4
 7096              		.global	REG_FA
 7097              		.global	REG_F7
 7098              		.global	REG_F6
 7099              		.global	SYS_AND
 7100              		.global	SYS_MODE
 7101              		.comm	flag_MEGA,4,4
 7102              		.comm	flag_AUDIO,4,4
 7103              		.comm	flag_CVBS,4,4
 7104              		.comm	sywd,4,4
 7105              		.comm	crc,1,1
 7106              		.comm	CurCH,1,1
 7107              		.comm	CurRes,1,1
 7108              		.comm	PTZ_pelco,2,2
 7109              		.comm	PTZ_buf,16,4
 7110              		.comm	TVII2CAddress,1,1
ARM GAS  /tmp/ccnKW75d.s 			page 216


 7111              		.comm	flag_LOCKED,1,1
 7112              		.comm	chip,1,1
 7113              		.comm	revision,1,1
 7114              		.comm	VideoSave,1,4
 7115              		.comm	egain,4,4
 7116              		.comm	std,1,4
 7117              		.comm	mode,1,4
 7118              		.comm	count,1,4
 7119              		.comm	state,1,4
 7120              		.comm	ManVidResRx,1,1
 7121              		.global	newInRes
 7122              		.section	.bss.Flisheye_CAM,"aw",%nobits
 7123              		.align	2
 7126              	Flisheye_CAM:
 7127 0000 00000000 		.space	4
 7128              		.section	.bss.Flisheye_VLOSS_Count,"aw",%nobits
 7129              		.align	2
 7132              	Flisheye_VLOSS_Count:
 7133 0000 00000000 		.space	16
 7133      00000000 
 7133      00000000 
 7133      00000000 
 7134              		.section	.bss.PtzTxChNum,"aw",%nobits
 7135              		.set	.LANCHOR25,. + 0
 7138              	PtzTxChNum:
 7139 0000 00       		.space	1
 7140              		.section	.bss.QuadBoxId,"aw",%nobits
 7141              		.set	.LANCHOR24,. + 0
 7144              	QuadBoxId:
 7145 0000 00       		.space	1
 7146              		.section	.bss.QuadBoxMode,"aw",%nobits
 7149              	QuadBoxMode:
 7150 0000 00       		.space	1
 7151              		.section	.data.COCSelectModeType,"aw",%progbits
 7152              		.align	2
 7155              	COCSelectModeType:
 7156 0000 05       		.byte	5
 7157 0001 05       		.byte	5
 7158 0002 05       		.byte	5
 7159 0003 05       		.byte	5
 7160              		.section	.data.PreCOCSelectModeType,"aw",%progbits
 7161              		.align	2
 7164              	PreCOCSelectModeType:
 7165 0000 05       		.byte	5
 7166 0001 05       		.byte	5
 7167 0002 05       		.byte	5
 7168 0003 05       		.byte	5
 7169              		.section	.data.TP_InputMode,"aw",%progbits
 7170              		.set	.LANCHOR22,. + 0
 7173              	TP_InputMode:
 7174 0000 07       		.byte	7
 7175              		.section	.data.newInRes,"aw",%progbits
 7176              		.align	2
 7177              		.set	.LANCHOR23,. + 0
 7180              	newInRes:
 7181 0000 07       		.byte	7
 7182 0001 07       		.byte	7
ARM GAS  /tmp/ccnKW75d.s 			page 217


 7183 0002 07       		.byte	7
 7184 0003 07       		.byte	7
 7185              		.section	.rodata.Det_VidRes.str1.4,"aMS",%progbits,1
 7186              		.align	2
 7187              	.LC20:
 7188 0000 0D0A4E2F 		.ascii	"\015\012N/P detected\000"
 7188      50206465 
 7188      74656374 
 7188      656400
 7189 000f 00       		.space	1
 7190              	.LC21:
 7191 0010 0D0A4E6F 		.ascii	"\015\012No res detect...\000"
 7191      20726573 
 7191      20646574 
 7191      6563742E 
 7191      2E2E00
 7192              		.section	.rodata.Det_VideoLoss.str1.4,"aMS",%progbits,1
 7193              		.align	2
 7194              	.LC22:
 7195 0000 4E6F2000 		.ascii	"No \000"
 7196              	.LC23:
 7197 0004 76696465 		.ascii	"video detected\000"
 7197      6F206465 
 7197      74656374 
 7197      656400
 7198              		.section	.rodata.EQ_Detect.str1.4,"aMS",%progbits,1
 7199              		.align	2
 7200              	.LC42:
 7201 0000 31766964 		.ascii	"1video in ch%02x \015\012\000"
 7201      656F2069 
 7201      6E206368 
 7201      25303278 
 7201      200D0A00 
 7202              	.LC43:
 7203 0014 76696465 		.ascii	"video locked ch%02x \015\012\000"
 7203      6F206C6F 
 7203      636B6564 
 7203      20636825 
 7203      30327820 
 7204 002b 00       		.space	1
 7205              	.LC44:
 7206 002c 76696465 		.ascii	"video in ch%02x \015\012\000"
 7206      6F20696E 
 7206      20636825 
 7206      30327820 
 7206      0D0A00
 7207 003f 00       		.space	1
 7208              	.LC45:
 7209 0040 76696465 		.ascii	"video unstable ch%02x \015\012\000"
 7209      6F20756E 
 7209      73746162 
 7209      6C652063 
 7209      68253032 
 7210 0059 000000   		.space	3
 7211              	.LC46:
 7212 005c 76696465 		.ascii	"video unlocked ch%02x \015\012\000"
 7212      6F20756E 
ARM GAS  /tmp/ccnKW75d.s 			page 218


 7212      6C6F636B 
 7212      65642063 
 7212      68253032 
 7213 0075 000000   		.space	3
 7214              	.LC47:
 7215 0078 5365745F 		.ascii	"Set_VidResmode[%d] =%d\015\012\000"
 7215      56696452 
 7215      65736D6F 
 7215      64655B25 
 7215      645D203D 
 7216 0091 000000   		.space	3
 7217              	.LC48:
 7218 0094 4D616E56 		.ascii	"ManVidResRx=0x%02x\015\012\000"
 7218      69645265 
 7218      7352783D 
 7218      30782530 
 7218      32780D0A 
 7219 00a9 000000   		.space	3
 7220              	.LC49:
 7221 00ac 52656730 		.ascii	"Reg01 %02x\015\012\000"
 7221      31202530 
 7221      32780D0A 
 7221      00
 7222 00b9 000000   		.space	3
 7223              	.LC50:
 7224 00bc 43564253 		.ascii	"CVBS  mode:%d\015\012\000"
 7224      20206D6F 
 7224      64653A25 
 7224      640D0A00 
 7225              	.LC51:
 7226 00cc 7475726E 		.ascii	"turn to C ch%02x\015\012\000"
 7226      20746F20 
 7226      43206368 
 7226      25303278 
 7226      0D0A00
 7227 00df 00       		.space	1
 7228              	.LC52:
 7229 00e0 7475726E 		.ascii	"turn to A ch%02x\015\012\000"
 7229      20746F20 
 7229      41206368 
 7229      25303278 
 7229      0D0A00
 7230 00f3 00       		.space	1
 7231              	.LC53:
 7232 00f4 41484420 		.ascii	"AHD 1080P30/P25  mode:%d\015\012\000"
 7232      31303830 
 7232      5033302F 
 7232      50323520 
 7232      206D6F64 
 7233 010f 00       		.space	1
 7234              	.LC54:
 7235 0110 54564920 		.ascii	"TVI 1080P30/P25   mode:%d\015\012\000"
 7235      31303830 
 7235      5033302F 
 7235      50323520 
 7235      20206D6F 
 7236              	.LC55:
ARM GAS  /tmp/ccnKW75d.s 			page 219


 7237 012c 41484420 		.ascii	"AHD 720P30/P25/P60/P50   mode:%d\015\012\000"
 7237      37323050 
 7237      33302F50 
 7237      32352F50 
 7237      36302F50 
 7238 014f 00       		.space	1
 7239              	.LC56:
 7240 0150 43564253 		.ascii	"CVBS    mode:%d\015\012\000"
 7240      20202020 
 7240      6D6F6465 
 7240      3A25640D 
 7240      0A00
 7241 0162 0000     		.space	2
 7242              	.LC57:
 7243 0164 6261636B 		.ascii	"back to T ch%02x\015\012\000"
 7243      20746F20 
 7243      54206368 
 7243      25303278 
 7243      0D0A00
 7244 0177 00       		.space	1
 7245              	.LC58:
 7246 0178 45676169 		.ascii	"Egain=0x%02x ch%02x,std=%d,mode=0x%02X\015\012\000"
 7246      6E3D3078 
 7246      25303278 
 7246      20636825 
 7246      3032782C 
 7247 01a1 000000   		.space	3
 7248              	.LC59:
 7249 01a4 56533432 		.ascii	"VS4210_SetInModeOutMode(),i=%d,newInRes=%d,OuputMod"
 7249      31305F53 
 7249      6574496E 
 7249      4D6F6465 
 7249      4F75744D 
 7250 01d7 65666C67 		.ascii	"eflg=%d\015\012\000"
 7250      3D25640D 
 7250      0A00
 7251 01e1 000000   		.space	3
 7252              	.LC60:
 7253 01e4 41484420 		.ascii	"AHD Mode\015\000"
 7253      4D6F6465 
 7253      0D00
 7254 01ee 0000     		.space	2
 7255              	.LC61:
 7256 01f0 43564920 		.ascii	"CVI Mode\015\000"
 7256      4D6F6465 
 7256      0D00
 7257 01fa 0000     		.space	2
 7258              	.LC62:
 7259 01fc 43564253 		.ascii	"CVBS NTSC   mode\015\000"
 7259      204E5453 
 7259      43202020 
 7259      6D6F6465 
 7259      0D00
 7260 020e 0000     		.space	2
 7261              	.LC63:
 7262 0210 43564253 		.ascii	"CVBS PAL   mode\015\000"
 7262      2050414C 
ARM GAS  /tmp/ccnKW75d.s 			page 220


 7262      2020206D 
 7262      6F64650D 
 7262      00
 7263 0221 000000   		.space	3
 7264              	.LC64:
 7265 0224 4C494E45 		.ascii	"LINE=%d,TVI Mode\015\012\000"
 7265      3D25642C 
 7265      54564920 
 7265      4D6F6465 
 7265      0D0A00
 7266 0237 00       		.space	1
 7267              	.LC65:
 7268 0238 45516465 		.ascii	"EQdet %d\015\012\000"
 7268      74202564 
 7268      0D0A00
 7269 0243 00       		.space	1
 7270              	.LC66:
 7271 0244 0D0A4148 		.ascii	"\015\012AHD COC Ready CH=%d\015\012\000"
 7271      4420434F 
 7271      43205265 
 7271      61647920 
 7271      43483D25 
 7272              		.section	.rodata.Get_2824cIrq.str1.4,"aMS",%progbits,1
 7273              		.align	2
 7274              	.LC30:
 7275 0000 0D0A434F 		.ascii	"\015\012COC4:\000"
 7275      43343A00 
 7276              	.LC31:
 7277 0008 20253032 		.ascii	" %02X\000"
 7277      5800
 7278 000e 0000     		.space	2
 7279              	.LC32:
 7280 0010 51756164 		.ascii	"QuadBoxId %02x\015\012\000"
 7280      426F7849 
 7280      64202530 
 7280      32780D0A 
 7280      00
 7281 0021 000000   		.space	3
 7282              	.LC33:
 7283 0024 0D0A434F 		.ascii	"\015\012COC3:\000"
 7283      43333A00 
 7284              	.LC34:
 7285 002c 0D0A434F 		.ascii	"\015\012COC2:\000"
 7285      43323A00 
 7286              	.LC35:
 7287 0034 0D0A434F 		.ascii	"\015\012COC1:\000"
 7287      43313A00 
 7288              	.LC36:
 7289 003c 43564253 		.ascii	"CVBS-Tx %x,%x,%x,%x\012\000"
 7289      2D547820 
 7289      25782C25 
 7289      782C2578 
 7289      2C25780A 
 7290 0051 000000   		.space	3
 7291              	.LC37:
 7292 0054 5456492D 		.ascii	"TVI-Tx %x,%x,%x\012\000"
 7292      54782025 
ARM GAS  /tmp/ccnKW75d.s 			page 221


 7292      782C2578 
 7292      2C25780A 
 7292      00
 7293 0065 000000   		.space	3
 7294              	.LC38:
 7295 0068 4356492D 		.ascii	"CVI-Tx %x\012\000"
 7295      54782025 
 7295      780A00
 7296 0073 00       		.space	1
 7297              	.LC39:
 7298 0074 41484420 		.ascii	"AHD %02x,%02x,%02x to \000"
 7298      25303278 
 7298      2C253032 
 7298      782C2530 
 7298      32782074 
 7299 008b 00       		.space	1
 7300              	.LC40:
 7301 008c 54782025 		.ascii	"Tx %02x,%02x,%02x,%02x\000"
 7301      3032782C 
 7301      25303278 
 7301      2C253032 
 7301      782C2530 
 7302              		.section	.rodata.Init_COC_PTZOUT1.str1.4,"aMS",%progbits,1
 7303              		.align	2
 7304              	.LC41:
 7305 0000 0D0A2049 		.ascii	"\015\012 Init_COC_PTZOUT1..\000"
 7305      6E69745F 
 7305      434F435F 
 7305      50545A4F 
 7305      5554312E 
 7306              		.section	.rodata.Init_TP280x_RegSet.str1.4,"aMS",%progbits,1
 7307              		.align	2
 7308              	.LC26:
 7309 0000 0D0A6368 		.ascii	"\015\012chip %02x revision %02x\015\012\000"
 7309      69702025 
 7309      30327820 
 7309      72657669 
 7309      73696F6E 
 7310              	.LC27:
 7311 001c 454F4C20 		.ascii	"EOL ID\015\000"
 7311      49440D00 
 7312              	.LC28:
 7313 0024 54503238 		.ascii	"TP2824C test\015\000"
 7313      32344320 
 7313      74657374 
 7313      0D00
 7314 0032 0000     		.space	2
 7315              	.LC29:
 7316 0034 756E6B6E 		.ascii	"unknown ID\015\000"
 7316      6F776E20 
 7316      49440D00 
 7317              		.section	.rodata.ManualAGC.str1.4,"aMS",%progbits,1
 7318              		.align	2
 7319              	.LC24:
 7320 0000 72657375 		.ascii	"result AGC=0X%04x ch%02X\015\012\000"
 7320      6C742041 
 7320      47433D30 
ARM GAS  /tmp/ccnKW75d.s 			page 222


 7320      58253034 
 7320      78206368 
 7321              		.section	.rodata.PTZ_RX_dat.8822,"a",%progbits
 7322              		.align	2
 7323              		.set	.LANCHOR28,. + 0
 7326              	PTZ_RX_dat.8822:
 7327 0000 00       		.byte	0
 7328 0001 00       		.byte	0
 7329 0002 07       		.byte	7
 7330 0003 08       		.byte	8
 7331 0004 00       		.byte	0
 7332 0005 00       		.byte	0
 7333 0006 04       		.byte	4
 7334 0007 00       		.byte	0
 7335 0008 00       		.byte	0
 7336 0009 60       		.byte	96
 7337 000a 10       		.byte	16
 7338 000b 04       		.byte	4
 7339 000c F0       		.byte	-16
 7340 000d D8       		.byte	-40
 7341 000e 27       		.byte	39
 7342 000f 00       		.byte	0
 7343 0010 00       		.byte	0
 7344 0011 07       		.byte	7
 7345 0012 08       		.byte	8
 7346 0013 09       		.byte	9
 7347 0014 0A       		.byte	10
 7348 0015 04       		.byte	4
 7349 0016 00       		.byte	0
 7350 0017 00       		.byte	0
 7351 0018 60       		.byte	96
 7352 0019 10       		.byte	16
 7353 001a 04       		.byte	4
 7354 001b F0       		.byte	-16
 7355 001c D8       		.byte	-40
 7356 001d 27       		.byte	39
 7357 001e 00       		.byte	0
 7358 001f 00       		.byte	0
 7359 0020 06       		.byte	6
 7360 0021 07       		.byte	7
 7361 0022 08       		.byte	8
 7362 0023 09       		.byte	9
 7363 0024 03       		.byte	3
 7364 0025 52       		.byte	82
 7365 0026 53       		.byte	83
 7366 0027 60       		.byte	96
 7367 0028 10       		.byte	16
 7368 0029 04       		.byte	4
 7369 002a F0       		.byte	-16
 7370 002b D8       		.byte	-40
 7371 002c 17       		.byte	23
 7372 002d 00       		.byte	0
 7373 002e 00       		.byte	0
 7374 002f 06       		.byte	6
 7375 0030 07       		.byte	7
 7376 0031 08       		.byte	8
 7377 0032 09       		.byte	9
ARM GAS  /tmp/ccnKW75d.s 			page 223


 7378 0033 02       		.byte	2
 7379 0034 DF       		.byte	-33
 7380 0035 88       		.byte	-120
 7381 0036 60       		.byte	96
 7382 0037 10       		.byte	16
 7383 0038 04       		.byte	4
 7384 0039 F0       		.byte	-16
 7385 003a D8       		.byte	-40
 7386 003b 17       		.byte	23
 7387 003c 00       		.byte	0
 7388 003d 00       		.byte	0
 7389 003e 06       		.byte	6
 7390 003f 07       		.byte	7
 7391 0040 08       		.byte	8
 7392 0041 09       		.byte	9
 7393 0042 04       		.byte	4
 7394 0043 EC       		.byte	-20
 7395 0044 E9       		.byte	-23
 7396 0045 60       		.byte	96
 7397 0046 10       		.byte	16
 7398 0047 04       		.byte	4
 7399 0048 F0       		.byte	-16
 7400 0049 D8       		.byte	-40
 7401 004a 17       		.byte	23
 7402              		.section	.rodata.PTZ_dat.8812,"a",%progbits
 7403              		.align	2
 7404              		.set	.LANCHOR26,. + 0
 7407              	PTZ_dat.8812:
 7408 0000 0B       		.byte	11
 7409 0001 0C       		.byte	12
 7410 0002 0D       		.byte	13
 7411 0003 0E       		.byte	14
 7412 0004 19       		.byte	25
 7413 0005 78       		.byte	120
 7414 0006 21       		.byte	33
 7415 0007 0B       		.byte	11
 7416 0008 0C       		.byte	12
 7417 0009 0D       		.byte	13
 7418 000a 0E       		.byte	14
 7419 000b 33       		.byte	51
 7420 000c F0       		.byte	-16
 7421 000d 21       		.byte	33
 7422 000e 0E       		.byte	14
 7423 000f 0F       		.byte	15
 7424 0010 10       		.byte	16
 7425 0011 11       		.byte	17
 7426 0012 66       		.byte	102
 7427 0013 F0       		.byte	-16
 7428 0014 17       		.byte	23
 7429 0015 0E       		.byte	14
 7430 0016 0F       		.byte	15
 7431 0017 10       		.byte	16
 7432 0018 11       		.byte	17
 7433 0019 26       		.byte	38
 7434 001a F0       		.byte	-16
 7435 001b 57       		.byte	87
 7436 001c 0E       		.byte	14
ARM GAS  /tmp/ccnKW75d.s 			page 224


 7437 001d 0F       		.byte	15
 7438 001e 00       		.byte	0
 7439 001f 00       		.byte	0
 7440 0020 26       		.byte	38
 7441 0021 E0       		.byte	-32
 7442 0022 EF       		.byte	-17
 7443 0023 0F       		.byte	15
 7444 0024 10       		.byte	16
 7445 0025 00       		.byte	0
 7446 0026 00       		.byte	0
 7447 0027 48       		.byte	72
 7448 0028 F0       		.byte	-16
 7449 0029 6F       		.byte	111
 7450 002a 10       		.byte	16
 7451 002b 11       		.byte	17
 7452 002c 12       		.byte	18
 7453 002d 13       		.byte	19
 7454 002e 15       		.byte	21
 7455 002f B8       		.byte	-72
 7456 0030 A2       		.byte	-94
 7457 0031 10       		.byte	16
 7458 0032 11       		.byte	17
 7459 0033 12       		.byte	18
 7460 0034 13       		.byte	19
 7461 0035 95       		.byte	-107
 7462 0036 B8       		.byte	-72
 7463 0037 22       		.byte	34
 7464              		.section	.rodata.PTZ_dat.8834,"a",%progbits
 7465              		.align	2
 7466              		.set	.LANCHOR29,. + 0
 7469              	PTZ_dat.8834:
 7470 0000 42       		.byte	66
 7471 0001 40       		.byte	64
 7472 0002 00       		.byte	0
 7473 0003 00       		.byte	0
 7474 0004 00       		.byte	0
 7475 0005 0B       		.byte	11
 7476 0006 0C       		.byte	12
 7477 0007 0D       		.byte	13
 7478 0008 0E       		.byte	14
 7479 0009 19       		.byte	25
 7480 000a 78       		.byte	120
 7481 000b 21       		.byte	33
 7482 000c 42       		.byte	66
 7483 000d 40       		.byte	64
 7484 000e 00       		.byte	0
 7485 000f 00       		.byte	0
 7486 0010 00       		.byte	0
 7487 0011 0B       		.byte	11
 7488 0012 0C       		.byte	12
 7489 0013 0D       		.byte	13
 7490 0014 0E       		.byte	14
 7491 0015 33       		.byte	51
 7492 0016 F0       		.byte	-16
 7493 0017 21       		.byte	33
 7494 0018 42       		.byte	66
 7495 0019 40       		.byte	64
ARM GAS  /tmp/ccnKW75d.s 			page 225


 7496 001a 00       		.byte	0
 7497 001b 00       		.byte	0
 7498 001c 00       		.byte	0
 7499 001d 0E       		.byte	14
 7500 001e 0F       		.byte	15
 7501 001f 10       		.byte	16
 7502 0020 11       		.byte	17
 7503 0021 26       		.byte	38
 7504 0022 F0       		.byte	-16
 7505 0023 57       		.byte	87
 7506 0024 42       		.byte	66
 7507 0025 40       		.byte	64
 7508 0026 00       		.byte	0
 7509 0027 00       		.byte	0
 7510 0028 00       		.byte	0
 7511 0029 0E       		.byte	14
 7512 002a 0F       		.byte	15
 7513 002b 00       		.byte	0
 7514 002c 00       		.byte	0
 7515 002d 26       		.byte	38
 7516 002e E0       		.byte	-32
 7517 002f EF       		.byte	-17
 7518 0030 42       		.byte	66
 7519 0031 40       		.byte	64
 7520 0032 00       		.byte	0
 7521 0033 00       		.byte	0
 7522 0034 00       		.byte	0
 7523 0035 0F       		.byte	15
 7524 0036 10       		.byte	16
 7525 0037 00       		.byte	0
 7526 0038 00       		.byte	0
 7527 0039 4D       		.byte	77
 7528 003a F0       		.byte	-16
 7529 003b 6F       		.byte	111
 7530 003c 42       		.byte	66
 7531 003d 40       		.byte	64
 7532 003e 00       		.byte	0
 7533 003f 00       		.byte	0
 7534 0040 00       		.byte	0
 7535 0041 10       		.byte	16
 7536 0042 11       		.byte	17
 7537 0043 12       		.byte	18
 7538 0044 15       		.byte	21
 7539 0045 15       		.byte	21
 7540 0046 B8       		.byte	-72
 7541 0047 A2       		.byte	-94
 7542              		.section	.rodata.PTZ_reg.8811,"a",%progbits
 7543              		.align	2
 7544              		.set	.LANCHOR27,. + 0
 7547              	PTZ_reg.8811:
 7548 0000 C2       		.byte	-62
 7549 0001 C3       		.byte	-61
 7550 0002 C4       		.byte	-60
 7551 0003 C5       		.byte	-59
 7552 0004 C6       		.byte	-58
 7553 0005 C7       		.byte	-57
 7554 0006 C8       		.byte	-56
ARM GAS  /tmp/ccnKW75d.s 			page 226


 7555 0007 DA       		.byte	-38
 7556 0008 DB       		.byte	-37
 7557 0009 DC       		.byte	-36
 7558 000a DD       		.byte	-35
 7559 000b DE       		.byte	-34
 7560 000c DF       		.byte	-33
 7561 000d E0       		.byte	-32
 7562 000e C2       		.byte	-62
 7563 000f C3       		.byte	-61
 7564 0010 C4       		.byte	-60
 7565 0011 C5       		.byte	-59
 7566 0012 C6       		.byte	-58
 7567 0013 C7       		.byte	-57
 7568 0014 C8       		.byte	-56
 7569 0015 DA       		.byte	-38
 7570 0016 DB       		.byte	-37
 7571 0017 DC       		.byte	-36
 7572 0018 DD       		.byte	-35
 7573 0019 DE       		.byte	-34
 7574 001a DF       		.byte	-33
 7575 001b E0       		.byte	-32
 7576              		.section	.rodata.PTZ_reg.8833,"a",%progbits
 7577              		.align	2
 7578              		.set	.LANCHOR30,. + 0
 7581              	PTZ_reg.8833:
 7582 0000 6F       		.byte	111
 7583 0001 70       		.byte	112
 7584 0002 71       		.byte	113
 7585 0003 C0       		.byte	-64
 7586 0004 C1       		.byte	-63
 7587 0005 C2       		.byte	-62
 7588 0006 C3       		.byte	-61
 7589 0007 C4       		.byte	-60
 7590 0008 C5       		.byte	-59
 7591 0009 C6       		.byte	-58
 7592 000a C7       		.byte	-57
 7593 000b C8       		.byte	-56
 7594              		.section	.rodata.REG_F6,"a",%progbits
 7595              		.align	2
 7596              		.set	.LANCHOR33,. + 0
 7599              	REG_F6:
 7600 0000 00       		.byte	0
 7601 0001 11       		.byte	17
 7602 0002 22       		.byte	34
 7603 0003 33       		.byte	51
 7604              		.section	.rodata.REG_F7,"a",%progbits
 7605              		.align	2
 7606              		.set	.LANCHOR34,. + 0
 7609              	REG_F7:
 7610 0000 44       		.byte	68
 7611 0001 55       		.byte	85
 7612 0002 66       		.byte	102
 7613 0003 77       		.byte	119
 7614              		.section	.rodata.REG_FA,"a",%progbits
 7615              		.align	2
 7616              		.set	.LANCHOR35,. + 0
 7619              	REG_FA:
ARM GAS  /tmp/ccnKW75d.s 			page 227


 7620 0000 BB       		.byte	-69
 7621 0001 CC       		.byte	-52
 7622 0002 DD       		.byte	-35
 7623 0003 EE       		.byte	-18
 7624              		.section	.rodata.SYS_AND,"a",%progbits
 7625              		.align	2
 7626              		.set	.LANCHOR0,. + 0
 7629              	SYS_AND:
 7630 0000 FE       		.byte	-2
 7631 0001 FD       		.byte	-3
 7632 0002 FB       		.byte	-5
 7633 0003 F7       		.byte	-9
 7634 0004 F0       		.byte	-16
 7635              		.section	.rodata.SYS_MODE,"a",%progbits
 7636              		.align	2
 7637              		.set	.LANCHOR1,. + 0
 7640              	SYS_MODE:
 7641 0000 01       		.byte	1
 7642 0001 02       		.byte	2
 7643 0002 04       		.byte	4
 7644 0003 08       		.byte	8
 7645 0004 0F       		.byte	15
 7646              		.section	.rodata.Set_ResWithAutoDet.str1.4,"aMS",%progbits,1
 7647              		.align	2
 7648              	.LC25:
 7649 0000 482F5620 		.ascii	"H/V is not locked\015\000"
 7649      6973206E 
 7649      6F74206C 
 7649      6F636B65 
 7649      640D00
 7650              		.section	.rodata.Set_VidRes.str1.4,"aMS",%progbits,1
 7651              		.align	2
 7652              	.LC0:
 7653 0000 31303830 		.ascii	"1080p30\000"
 7653      70333000 
 7654              	.LC1:
 7655 0008 31303830 		.ascii	"1080p25\000"
 7655      70323500 
 7656              	.LC2:
 7657 0010 37323070 		.ascii	"720p60\000"
 7657      363000
 7658 0017 00       		.space	1
 7659              	.LC3:
 7660 0018 37323070 		.ascii	"720p30V2\000"
 7660      33305632 
 7660      00
 7661 0021 000000   		.space	3
 7662              	.LC4:
 7663 0024 37323070 		.ascii	"720p50\000"
 7663      353000
 7664 002b 00       		.space	1
 7665              	.LC5:
 7666 002c 37323070 		.ascii	"720p25V2\000"
 7666      32355632 
 7666      00
 7667 0035 000000   		.space	3
 7668              	.LC6:
ARM GAS  /tmp/ccnKW75d.s 			page 228


 7669 0038 37323070 		.ascii	"720p30\000"
 7669      333000
 7670 003f 00       		.space	1
 7671              	.LC7:
 7672 0040 37323070 		.ascii	"720p25\000"
 7672      323500
 7673 0047 00       		.space	1
 7674              	.LC8:
 7675 0048 50414C00 		.ascii	"PAL\000"
 7676              	.LC9:
 7677 004c 4E545343 		.ascii	"NTSC\000"
 7677      00
 7678 0051 000000   		.space	3
 7679              	.LC10:
 7680 0054 334D3138 		.ascii	"3M18\000"
 7680      00
 7681 0059 000000   		.space	3
 7682              	.LC11:
 7683 005c 354D3132 		.ascii	"5M12\000"
 7683      00
 7684 0061 000000   		.space	3
 7685              	.LC12:
 7686 0064 344D3135 		.ascii	"4M15\000"
 7686      00
 7687 0069 000000   		.space	3
 7688              	.LC13:
 7689 006c 334D3230 		.ascii	"3M20\000"
 7689      00
 7690 0071 000000   		.space	3
 7691              	.LC14:
 7692 0074 344D3132 		.ascii	"4M12\000"
 7692      00
 7693 0079 000000   		.space	3
 7694              	.LC15:
 7695 007c 364D3130 		.ascii	"6M10\000"
 7695      00
 7696 0081 000000   		.space	3
 7697              	.LC16:
 7698 0084 344D3330 		.ascii	"4M30\000"
 7698      00
 7699 0089 000000   		.space	3
 7700              	.LC17:
 7701 008c 2E2E2E0D 		.ascii	"...\015\000"
 7701      00
 7702 0091 000000   		.space	3
 7703              	.LC18:
 7704 0094 74703238 		.ascii	"tp2826MODEDATASET\015\000"
 7704      32364D4F 
 7704      44454441 
 7704      54415345 
 7704      540D00
 7705 00a7 00       		.space	1
 7706              	.LC19:
 7707 00a8 74703238 		.ascii	"tp2824C MODEDATASET\015\000"
 7707      32344320 
 7707      4D4F4445 
 7707      44415441 
ARM GAS  /tmp/ccnKW75d.s 			page 229


 7707      5345540D 
 7708              		.section	.rodata.TP2802D_DataSet,"a",%progbits
 7709              		.align	2
 7712              	TP2802D_DataSet:
 7713 0000 40       		.byte	64
 7714 0001 04       		.byte	4
 7715 0002 2B       		.byte	43
 7716 0003 44       		.byte	68
 7717 0004 23       		.byte	35
 7718 0005 50       		.byte	80
 7719 0006 39       		.byte	57
 7720 0007 42       		.byte	66
 7721 0008 3A       		.byte	58
 7722 0009 01       		.byte	1
 7723 000a 30       		.byte	48
 7724 000b 48       		.byte	72
 7725 000c 31       		.byte	49
 7726 000d BB       		.byte	-69
 7727 000e 32       		.byte	50
 7728 000f 2E       		.byte	46
 7729 0010 33       		.byte	51
 7730 0011 90       		.byte	-112
 7731 0012 4D       		.byte	77
 7732 0013 0F       		.byte	15
 7733 0014 4E       		.byte	78
 7734 0015 FF       		.byte	-1
 7735 0016 40       		.byte	64
 7736 0017 01       		.byte	1
 7737 0018 50       		.byte	80
 7738 0019 00       		.byte	0
 7739 001a 51       		.byte	81
 7740 001b 00       		.byte	0
 7741 001c 52       		.byte	82
 7742 001d 00       		.byte	0
 7743 001e 7F       		.byte	127
 7744 001f 00       		.byte	0
 7745 0020 80       		.byte	-128
 7746 0021 00       		.byte	0
 7747 0022 81       		.byte	-127
 7748 0023 00       		.byte	0
 7749 0024 40       		.byte	64
 7750 0025 00       		.byte	0
 7751 0026 50       		.byte	80
 7752 0027 00       		.byte	0
 7753 0028 51       		.byte	81
 7754 0029 0B       		.byte	11
 7755 002a 52       		.byte	82
 7756 002b 0C       		.byte	12
 7757 002c 53       		.byte	83
 7758 002d 19       		.byte	25
 7759 002e 54       		.byte	84
 7760 002f 78       		.byte	120
 7761 0030 55       		.byte	85
 7762 0031 21       		.byte	33
 7763 0032 7E       		.byte	126
 7764 0033 0F       		.byte	15
 7765 0034 7F       		.byte	127
ARM GAS  /tmp/ccnKW75d.s 			page 230


 7766 0035 00       		.byte	0
 7767 0036 80       		.byte	-128
 7768 0037 07       		.byte	7
 7769 0038 81       		.byte	-127
 7770 0039 08       		.byte	8
 7771 003a 82       		.byte	-126
 7772 003b 04       		.byte	4
 7773 003c 83       		.byte	-125
 7774 003d 00       		.byte	0
 7775 003e 84       		.byte	-124
 7776 003f 00       		.byte	0
 7777 0040 85       		.byte	-123
 7778 0041 60       		.byte	96
 7779 0042 86       		.byte	-122
 7780 0043 10       		.byte	16
 7781 0044 87       		.byte	-121
 7782 0045 06       		.byte	6
 7783 0046 88       		.byte	-120
 7784 0047 BE       		.byte	-66
 7785 0048 89       		.byte	-119
 7786 0049 39       		.byte	57
 7787 004a 8A       		.byte	-118
 7788 004b 27       		.byte	39
 7789 004c B9       		.byte	-71
 7790 004d 0F       		.byte	15
 7791 004e FF       		.byte	-1
 7792 004f FF       		.byte	-1
 7793              		.section	.rodata.TP2802_FORMAT_DataSet,"a",%progbits
 7794              		.align	2
 7795              		.set	.LANCHOR2,. + 0
 7798              	TP2802_FORMAT_DataSet:
 7799 0000 02       		.byte	2
 7800 0001 15       		.byte	21
 7801 0002 16       		.byte	22
 7802 0003 17       		.byte	23
 7803 0004 18       		.byte	24
 7804 0005 19       		.byte	25
 7805 0006 1A       		.byte	26
 7806 0007 1C       		.byte	28
 7807 0008 1D       		.byte	29
 7808 0009 35       		.byte	53
 7809 000a 36       		.byte	54
 7810 000b 14       		.byte	20
 7811 000c FF       		.byte	-1
 7812 000d 48       		.byte	72
 7813 000e 03       		.byte	3
 7814 000f D3       		.byte	-45
 7815 0010 80       		.byte	-128
 7816 0011 29       		.byte	41
 7817 0012 38       		.byte	56
 7818 0013 47       		.byte	71
 7819 0014 08       		.byte	8
 7820 0015 98       		.byte	-104
 7821 0016 05       		.byte	5
 7822 0017 DC       		.byte	-36
 7823 0018 0A       		.byte	10
 7824 0019 FF       		.byte	-1
ARM GAS  /tmp/ccnKW75d.s 			page 231


 7825 001a 48       		.byte	72
 7826 001b 03       		.byte	3
 7827 001c D3       		.byte	-45
 7828 001d 80       		.byte	-128
 7829 001e 29       		.byte	41
 7830 001f 38       		.byte	56
 7831 0020 47       		.byte	71
 7832 0021 0A       		.byte	10
 7833 0022 50       		.byte	80
 7834 0023 05       		.byte	5
 7835 0024 DC       		.byte	-36
 7836 0025 0A       		.byte	10
 7837 0026 FF       		.byte	-1
 7838 0027 4A       		.byte	74
 7839 0028 13       		.byte	19
 7840 0029 16       		.byte	22
 7841 002a 00       		.byte	0
 7842 002b 19       		.byte	25
 7843 002c D0       		.byte	-48
 7844 002d 25       		.byte	37
 7845 002e 06       		.byte	6
 7846 002f 72       		.byte	114
 7847 0030 05       		.byte	5
 7848 0031 DC       		.byte	-36
 7849 0032 0A       		.byte	10
 7850 0033 FF       		.byte	-1
 7851 0034 4A       		.byte	74
 7852 0035 13       		.byte	19
 7853 0036 16       		.byte	22
 7854 0037 00       		.byte	0
 7855 0038 19       		.byte	25
 7856 0039 D0       		.byte	-48
 7857 003a 25       		.byte	37
 7858 003b 07       		.byte	7
 7859 003c BC       		.byte	-68
 7860 003d 05       		.byte	5
 7861 003e DC       		.byte	-36
 7862 003f 0A       		.byte	10
 7863 0040 FF       		.byte	-1
 7864 0041 4A       		.byte	74
 7865 0042 13       		.byte	19
 7866 0043 16       		.byte	22
 7867 0044 00       		.byte	0
 7868 0045 19       		.byte	25
 7869 0046 D0       		.byte	-48
 7870 0047 25       		.byte	37
 7871 0048 0C       		.byte	12
 7872 0049 E4       		.byte	-28
 7873 004a 05       		.byte	5
 7874 004b DC       		.byte	-36
 7875 004c 0A       		.byte	10
 7876 004d FF       		.byte	-1
 7877 004e 4A       		.byte	74
 7878 004f 13       		.byte	19
 7879 0050 16       		.byte	22
 7880 0051 00       		.byte	0
 7881 0052 19       		.byte	25
ARM GAS  /tmp/ccnKW75d.s 			page 232


 7882 0053 D0       		.byte	-48
 7883 0054 25       		.byte	37
 7884 0055 0F       		.byte	15
 7885 0056 78       		.byte	120
 7886 0057 05       		.byte	5
 7887 0058 DC       		.byte	-36
 7888 0059 0A       		.byte	10
 7889 005a FF       		.byte	-1
 7890 005b 4F       		.byte	79
 7891 005c 13       		.byte	19
 7892 005d 4E       		.byte	78
 7893 005e BC       		.byte	-68
 7894 005f 15       		.byte	21
 7895 0060 F0       		.byte	-16
 7896 0061 07       		.byte	7
 7897 0062 09       		.byte	9
 7898 0063 38       		.byte	56
 7899 0064 25       		.byte	37
 7900 0065 DC       		.byte	-36
 7901 0066 0A       		.byte	10
 7902 0067 FF       		.byte	-1
 7903 0068 4F       		.byte	79
 7904 0069 13       		.byte	19
 7905 006a 5F       		.byte	95
 7906 006b BC       		.byte	-68
 7907 006c 17       		.byte	23
 7908 006d 20       		.byte	32
 7909 006e 17       		.byte	23
 7910 006f 09       		.byte	9
 7911 0070 48       		.byte	72
 7912 0071 25       		.byte	37
 7913 0072 DC       		.byte	-36
 7914 0073 0A       		.byte	10
 7915 0074 FF       		.byte	-1
 7916 0075 48       		.byte	72
 7917 0076 13       		.byte	19
 7918 0077 6C       		.byte	108
 7919 0078 00       		.byte	0
 7920 0079 2C       		.byte	44
 7921 007a 00       		.byte	0
 7922 007b 68       		.byte	104
 7923 007c 09       		.byte	9
 7924 007d C4       		.byte	-60
 7925 007e 16       		.byte	22
 7926 007f 30       		.byte	48
 7927 0080 0A       		.byte	10
 7928 0081 FF       		.byte	-1
 7929 0082 48       		.byte	72
 7930 0083 13       		.byte	19
 7931 0084 1F       		.byte	31
 7932 0085 20       		.byte	32
 7933 0086 34       		.byte	52
 7934 0087 98       		.byte	-104
 7935 0088 7A       		.byte	122
 7936 0089 0B       		.byte	11
 7937 008a 9A       		.byte	-102
 7938 008b 17       		.byte	23
ARM GAS  /tmp/ccnKW75d.s 			page 233


 7939 008c D0       		.byte	-48
 7940 008d 0A       		.byte	10
 7941 008e FF       		.byte	-1
 7942 008f 4A       		.byte	74
 7943 0090 13       		.byte	19
 7944 0091 16       		.byte	22
 7945 0092 00       		.byte	0
 7946 0093 19       		.byte	25
 7947 0094 D0       		.byte	-48
 7948 0095 25       		.byte	37
 7949 0096 06       		.byte	6
 7950 0097 72       		.byte	114
 7951 0098 25       		.byte	37
 7952 0099 DC       		.byte	-36
 7953 009a 0A       		.byte	10
 7954 009b FF       		.byte	-1
 7955 009c 4A       		.byte	74
 7956 009d 13       		.byte	19
 7957 009e 16       		.byte	22
 7958 009f 00       		.byte	0
 7959 00a0 19       		.byte	25
 7960 00a1 D0       		.byte	-48
 7961 00a2 25       		.byte	37
 7962 00a3 07       		.byte	7
 7963 00a4 BC       		.byte	-68
 7964 00a5 25       		.byte	37
 7965 00a6 DC       		.byte	-36
 7966 00a7 0A       		.byte	10
 7967 00a8 FF       		.byte	-1
 7968 00a9 48       		.byte	72
 7969 00aa 13       		.byte	19
 7970 00ab 1F       		.byte	31
 7971 00ac 80       		.byte	-128
 7972 00ad 7D       		.byte	125
 7973 00ae F0       		.byte	-16
 7974 00af 5A       		.byte	90
 7975 00b0 0B       		.byte	11
 7976 00b1 B8       		.byte	-72
 7977 00b2 16       		.byte	22
 7978 00b3 72       		.byte	114
 7979 00b4 0A       		.byte	10
 7980 00b5 FF       		.byte	-1
 7981 00b6 48       		.byte	72
 7982 00b7 13       		.byte	19
 7983 00b8 6C       		.byte	108
 7984 00b9 00       		.byte	0
 7985 00ba 2C       		.byte	44
 7986 00bb 00       		.byte	0
 7987 00bc 68       		.byte	104
 7988 00bd 09       		.byte	9
 7989 00be C4       		.byte	-60
 7990 00bf 16       		.byte	22
 7991 00c0 72       		.byte	114
 7992 00c1 0A       		.byte	10
 7993 00c2 FF       		.byte	-1
 7994 00c3 48       		.byte	72
 7995 00c4 23       		.byte	35
ARM GAS  /tmp/ccnKW75d.s 			page 234


 7996 00c5 34       		.byte	52
 7997 00c6 78       		.byte	120
 7998 00c7 8C       		.byte	-116
 7999 00c8 F0       		.byte	-16
 8000 00c9 5A       		.byte	90
 8001 00ca 0C       		.byte	12
 8002 00cb E4       		.byte	-28
 8003 00cc 17       		.byte	23
 8004 00cd 08       		.byte	8
 8005 00ce 0A       		.byte	10
 8006 00cf FF       		.byte	-1
 8007 00d0 48       		.byte	72
 8008 00d1 13       		.byte	19
 8009 00d2 EC       		.byte	-20
 8010 00d3 80       		.byte	-128
 8011 00d4 B0       		.byte	-80
 8012 00d5 08       		.byte	8
 8013 00d6 7C       		.byte	124
 8014 00d7 0E       		.byte	14
 8015 00d8 A6       		.byte	-90
 8016 00d9 17       		.byte	23
 8017 00da BC       		.byte	-68
 8018 00db 0A       		.byte	10
 8019 00dc FF       		.byte	-1
 8020 00dd 48       		.byte	72
 8021 00de 13       		.byte	19
 8022 00df 0F       		.byte	15
 8023 00e0 00       		.byte	0
 8024 00e1 32       		.byte	50
 8025 00e2 A0       		.byte	-96
 8026 00e3 55       		.byte	85
 8027 00e4 06       		.byte	6
 8028 00e5 72       		.byte	114
 8029 00e6 15       		.byte	21
 8030 00e7 DC       		.byte	-36
 8031 00e8 0A       		.byte	10
 8032 00e9 FF       		.byte	-1
 8033 00ea 48       		.byte	72
 8034 00eb 13       		.byte	19
 8035 00ec 20       		.byte	32
 8036 00ed 00       		.byte	0
 8037 00ee 20       		.byte	32
 8038 00ef A0       		.byte	-96
 8039 00f0 55       		.byte	85
 8040 00f1 07       		.byte	7
 8041 00f2 BC       		.byte	-68
 8042 00f3 15       		.byte	21
 8043 00f4 DC       		.byte	-36
 8044 00f5 0A       		.byte	10
 8045 00f6 FF       		.byte	-1
 8046              		.section	.rodata.TP2822_DataSet,"a",%progbits
 8047              		.align	2
 8050              	TP2822_DataSet:
 8051 0000 40       		.byte	64
 8052 0001 04       		.byte	4
 8053 0002 39       		.byte	57
 8054 0003 00       		.byte	0
ARM GAS  /tmp/ccnKW75d.s 			page 235


 8055 0004 3D       		.byte	61
 8056 0005 08       		.byte	8
 8057 0006 3A       		.byte	58
 8058 0007 01       		.byte	1
 8059 0008 30       		.byte	48
 8060 0009 48       		.byte	72
 8061 000a 31       		.byte	49
 8062 000b BB       		.byte	-69
 8063 000c 32       		.byte	50
 8064 000d 2E       		.byte	46
 8065 000e 33       		.byte	51
 8066 000f 90       		.byte	-112
 8067 0010 4D       		.byte	77
 8068 0011 03       		.byte	3
 8069 0012 4E       		.byte	78
 8070 0013 33       		.byte	51
 8071 0014 3D       		.byte	61
 8072 0015 00       		.byte	0
 8073 0016 FF       		.byte	-1
 8074 0017 FF       		.byte	-1
 8075              		.section	.rodata.TP2823_DataSet,"a",%progbits
 8076              		.align	2
 8077              		.set	.LANCHOR16,. + 0
 8080              	TP2823_DataSet:
 8081 0000 40       		.byte	64
 8082 0001 04       		.byte	4
 8083 0002 0B       		.byte	11
 8084 0003 60       		.byte	96
 8085 0004 22       		.byte	34
 8086 0005 34       		.byte	52
 8087 0006 23       		.byte	35
 8088 0007 44       		.byte	68
 8089 0008 26       		.byte	38
 8090 0009 01       		.byte	1
 8091 000a 38       		.byte	56
 8092 000b 40       		.byte	64
 8093 000c 3F       		.byte	63
 8094 000d 08       		.byte	8
 8095 000e 4D       		.byte	77
 8096 000f 03       		.byte	3
 8097 0010 4E       		.byte	78
 8098 0011 33       		.byte	51
 8099 0012 FA       		.byte	-6
 8100 0013 00       		.byte	0
 8101 0014 FF       		.byte	-1
 8102 0015 FF       		.byte	-1
 8103              		.section	.rodata.TP2823_MODE_DataSet,"a",%progbits
 8104              		.align	2
 8107              	TP2823_MODE_DataSet:
 8108 0000 0C       		.byte	12
 8109 0001 0D       		.byte	13
 8110 0002 20       		.byte	32
 8111 0003 26       		.byte	38
 8112 0004 2B       		.byte	43
 8113 0005 2D       		.byte	45
 8114 0006 2E       		.byte	46
 8115 0007 30       		.byte	48
ARM GAS  /tmp/ccnKW75d.s 			page 236


 8116 0008 31       		.byte	49
 8117 0009 32       		.byte	50
 8118 000a 33       		.byte	51
 8119 000b 39       		.byte	57
 8120 000c FF       		.byte	-1
 8121 000d 43       		.byte	67
 8122 000e 10       		.byte	16
 8123 000f 60       		.byte	96
 8124 0010 02       		.byte	2
 8125 0011 58       		.byte	88
 8126 0012 30       		.byte	48
 8127 0013 70       		.byte	112
 8128 0014 48       		.byte	72
 8129 0015 BB       		.byte	-69
 8130 0016 2E       		.byte	46
 8131 0017 90       		.byte	-112
 8132 0018 30       		.byte	48
 8133 0019 FF       		.byte	-1
 8134 001a 53       		.byte	83
 8135 001b 10       		.byte	16
 8136 001c 60       		.byte	96
 8137 001d 02       		.byte	2
 8138 001e 58       		.byte	88
 8139 001f 30       		.byte	48
 8140 0020 70       		.byte	112
 8141 0021 48       		.byte	72
 8142 0022 BB       		.byte	-69
 8143 0023 2E       		.byte	46
 8144 0024 90       		.byte	-112
 8145 0025 20       		.byte	32
 8146 0026 FF       		.byte	-1
 8147 0027 53       		.byte	83
 8148 0028 10       		.byte	16
 8149 0029 A0       		.byte	-96
 8150 002a 12       		.byte	18
 8151 002b 70       		.byte	112
 8152 002c 68       		.byte	104
 8153 002d 5E       		.byte	94
 8154 002e 62       		.byte	98
 8155 002f BB       		.byte	-69
 8156 0030 96       		.byte	-106
 8157 0031 C0       		.byte	-64
 8158 0032 10       		.byte	16
 8159 0033 FF       		.byte	-1
 8160 0034 53       		.byte	83
 8161 0035 11       		.byte	17
 8162 0036 B0       		.byte	-80
 8163 0037 02       		.byte	2
 8164 0038 70       		.byte	112
 8165 0039 60       		.byte	96
 8166 003a 5E       		.byte	94
 8167 003b 7A       		.byte	122
 8168 003c 4A       		.byte	74
 8169 003d 4D       		.byte	77
 8170 003e F0       		.byte	-16
 8171 003f 10       		.byte	16
 8172 0040 FF       		.byte	-1
ARM GAS  /tmp/ccnKW75d.s 			page 237


 8173              		.section	.rodata.TP2824C_AHD_FHD_PTZ_DataSet,"a",%progbits
 8174              		.align	2
 8175              		.set	.LANCHOR36,. + 0
 8178              	TP2824C_AHD_FHD_PTZ_DataSet:
 8179 0000 C0       		.byte	-64
 8180 0001 00       		.byte	0
 8181 0002 C2       		.byte	-62
 8182 0003 0E       		.byte	14
 8183 0004 C3       		.byte	-61
 8184 0005 0F       		.byte	15
 8185 0006 C1       		.byte	-63
 8186 0007 00       		.byte	0
 8187 0008 C4       		.byte	-60
 8188 0009 10       		.byte	16
 8189 000a C5       		.byte	-59
 8190 000b 11       		.byte	17
 8191 000c C6       		.byte	-58
 8192 000d 27       		.byte	39
 8193 000e C7       		.byte	-57
 8194 000f 15       		.byte	21
 8195 0010 C8       		.byte	-56
 8196 0011 97       		.byte	-105
 8197 0012 6F       		.byte	111
 8198 0013 44       		.byte	68
 8199 0014 70       		.byte	112
 8200 0015 00       		.byte	0
 8201 0016 55       		.byte	85
 8202 0017 00       		.byte	0
 8203 0018 56       		.byte	86
 8204 0019 00       		.byte	0
 8205 001a 57       		.byte	87
 8206 001b 00       		.byte	0
 8207 001c 58       		.byte	88
 8208 001d 00       		.byte	0
 8209 001e 59       		.byte	89
 8210 001f 00       		.byte	0
 8211 0020 5A       		.byte	90
 8212 0021 00       		.byte	0
 8213 0022 5B       		.byte	91
 8214 0023 00       		.byte	0
 8215 0024 5C       		.byte	92
 8216 0025 00       		.byte	0
 8217 0026 5D       		.byte	93
 8218 0027 00       		.byte	0
 8219 0028 5E       		.byte	94
 8220 0029 00       		.byte	0
 8221 002a 5F       		.byte	95
 8222 002b 00       		.byte	0
 8223 002c 60       		.byte	96
 8224 002d 00       		.byte	0
 8225 002e 62       		.byte	98
 8226 002f 00       		.byte	0
 8227 0030 63       		.byte	99
 8228 0031 00       		.byte	0
 8229 0032 64       		.byte	100
 8230 0033 00       		.byte	0
 8231 0034 65       		.byte	101
ARM GAS  /tmp/ccnKW75d.s 			page 238


 8232 0035 00       		.byte	0
 8233 0036 66       		.byte	102
 8234 0037 00       		.byte	0
 8235 0038 68       		.byte	104
 8236 0039 00       		.byte	0
 8237 003a 69       		.byte	105
 8238 003b 00       		.byte	0
 8239 003c 6A       		.byte	106
 8240 003d 00       		.byte	0
 8241 003e 6B       		.byte	107
 8242 003f 00       		.byte	0
 8243 0040 6C       		.byte	108
 8244 0041 00       		.byte	0
 8245 0042 CB       		.byte	-53
 8246 0043 07       		.byte	7
 8247 0044 CC       		.byte	-52
 8248 0045 08       		.byte	8
 8249 0046 CD       		.byte	-51
 8250 0047 00       		.byte	0
 8251 0048 CE       		.byte	-50
 8252 0049 00       		.byte	0
 8253 004a CF       		.byte	-49
 8254 004b 04       		.byte	4
 8255 004c D0       		.byte	-48
 8256 004d 00       		.byte	0
 8257 004e D1       		.byte	-47
 8258 004f 00       		.byte	0
 8259 0050 D2       		.byte	-46
 8260 0051 60       		.byte	96
 8261 0052 D3       		.byte	-45
 8262 0053 10       		.byte	16
 8263 0054 D4       		.byte	-44
 8264 0055 06       		.byte	6
 8265 0056 D5       		.byte	-43
 8266 0057 BE       		.byte	-66
 8267 0058 D6       		.byte	-42
 8268 0059 39       		.byte	57
 8269 005a D7       		.byte	-41
 8270 005b 27       		.byte	39
 8271 005c A7       		.byte	-89
 8272 005d 24       		.byte	36
 8273 005e FF       		.byte	-1
 8274 005f FF       		.byte	-1
 8275              		.section	.rodata.TP2824C_CVBS_PTZ_DataSet,"a",%progbits
 8276              		.align	2
 8277              		.set	.LANCHOR31,. + 0
 8280              	TP2824C_CVBS_PTZ_DataSet:
 8281 0000 C0       		.byte	-64
 8282 0001 00       		.byte	0
 8283 0002 C2       		.byte	-62
 8284 0003 0F       		.byte	15
 8285 0004 C3       		.byte	-61
 8286 0005 10       		.byte	16
 8287 0006 C1       		.byte	-63
 8288 0007 00       		.byte	0
 8289 0008 C4       		.byte	-60
 8290 0009 00       		.byte	0
ARM GAS  /tmp/ccnKW75d.s 			page 239


 8291 000a C5       		.byte	-59
 8292 000b 00       		.byte	0
 8293 000c C6       		.byte	-58
 8294 000d 49       		.byte	73
 8295 000e C7       		.byte	-57
 8296 000f 14       		.byte	20
 8297 0010 C8       		.byte	-56
 8298 0011 AF       		.byte	-81
 8299 0012 6F       		.byte	111
 8300 0013 60       		.byte	96
 8301 0014 70       		.byte	112
 8302 0015 00       		.byte	0
 8303 0016 55       		.byte	85
 8304 0017 00       		.byte	0
 8305 0018 56       		.byte	86
 8306 0019 00       		.byte	0
 8307 001a 57       		.byte	87
 8308 001b 00       		.byte	0
 8309 001c 58       		.byte	88
 8310 001d 00       		.byte	0
 8311 001e 59       		.byte	89
 8312 001f 00       		.byte	0
 8313 0020 5A       		.byte	90
 8314 0021 00       		.byte	0
 8315 0022 5B       		.byte	91
 8316 0023 00       		.byte	0
 8317 0024 5C       		.byte	92
 8318 0025 00       		.byte	0
 8319 0026 5D       		.byte	93
 8320 0027 00       		.byte	0
 8321 0028 5E       		.byte	94
 8322 0029 00       		.byte	0
 8323 002a 5F       		.byte	95
 8324 002b 00       		.byte	0
 8325 002c 60       		.byte	96
 8326 002d 00       		.byte	0
 8327 002e 62       		.byte	98
 8328 002f 00       		.byte	0
 8329 0030 63       		.byte	99
 8330 0031 00       		.byte	0
 8331 0032 64       		.byte	100
 8332 0033 00       		.byte	0
 8333 0034 65       		.byte	101
 8334 0035 00       		.byte	0
 8335 0036 66       		.byte	102
 8336 0037 00       		.byte	0
 8337 0038 68       		.byte	104
 8338 0039 00       		.byte	0
 8339 003a 69       		.byte	105
 8340 003b 00       		.byte	0
 8341 003c 6A       		.byte	106
 8342 003d 00       		.byte	0
 8343 003e 6B       		.byte	107
 8344 003f 00       		.byte	0
 8345 0040 6C       		.byte	108
 8346 0041 00       		.byte	0
 8347 0042 FF       		.byte	-1
ARM GAS  /tmp/ccnKW75d.s 			page 240


 8348 0043 FF       		.byte	-1
 8349              		.section	.rodata.TP2824C_CVIHD_PTZ_DataSet,"a",%progbits
 8350              		.align	2
 8351              		.set	.LANCHOR37,. + 0
 8354              	TP2824C_CVIHD_PTZ_DataSet:
 8355 0000 70       		.byte	112
 8356 0001 1D       		.byte	29
 8357 0002 C0       		.byte	-64
 8358 0003 00       		.byte	0
 8359 0004 C2       		.byte	-62
 8360 0005 10       		.byte	16
 8361 0006 C3       		.byte	-61
 8362 0007 00       		.byte	0
 8363 0008 C1       		.byte	-63
 8364 0009 00       		.byte	0
 8365 000a C4       		.byte	-60
 8366 000b 00       		.byte	0
 8367 000c C5       		.byte	-59
 8368 000d 00       		.byte	0
 8369 000e C6       		.byte	-58
 8370 000f 15       		.byte	21
 8371 0010 C7       		.byte	-57
 8372 0011 5B       		.byte	91
 8373 0012 C8       		.byte	-56
 8374 0013 A4       		.byte	-92
 8375 0014 6F       		.byte	111
 8376 0015 48       		.byte	72
 8377 0016 55       		.byte	85
 8378 0017 00       		.byte	0
 8379 0018 56       		.byte	86
 8380 0019 00       		.byte	0
 8381 001a 57       		.byte	87
 8382 001b 00       		.byte	0
 8383 001c 58       		.byte	88
 8384 001d 00       		.byte	0
 8385 001e 59       		.byte	89
 8386 001f 00       		.byte	0
 8387 0020 5A       		.byte	90
 8388 0021 00       		.byte	0
 8389 0022 5B       		.byte	91
 8390 0023 00       		.byte	0
 8391 0024 5C       		.byte	92
 8392 0025 00       		.byte	0
 8393 0026 5D       		.byte	93
 8394 0027 00       		.byte	0
 8395 0028 5E       		.byte	94
 8396 0029 00       		.byte	0
 8397 002a 5F       		.byte	95
 8398 002b 00       		.byte	0
 8399 002c 60       		.byte	96
 8400 002d 00       		.byte	0
 8401 002e 62       		.byte	98
 8402 002f 00       		.byte	0
 8403 0030 63       		.byte	99
 8404 0031 00       		.byte	0
 8405 0032 64       		.byte	100
 8406 0033 00       		.byte	0
ARM GAS  /tmp/ccnKW75d.s 			page 241


 8407 0034 65       		.byte	101
 8408 0035 00       		.byte	0
 8409 0036 66       		.byte	102
 8410 0037 00       		.byte	0
 8411 0038 68       		.byte	104
 8412 0039 00       		.byte	0
 8413 003a 69       		.byte	105
 8414 003b 00       		.byte	0
 8415 003c 6A       		.byte	106
 8416 003d 00       		.byte	0
 8417 003e 6B       		.byte	107
 8418 003f 00       		.byte	0
 8419 0040 6C       		.byte	108
 8420 0041 00       		.byte	0
 8421 0042 FF       		.byte	-1
 8422 0043 FF       		.byte	-1
 8423              		.section	.rodata.TP2824C_DataSet,"a",%progbits
 8424              		.align	2
 8425              		.set	.LANCHOR15,. + 0
 8428              	TP2824C_DataSet:
 8429 0000 40       		.byte	64
 8430 0001 04       		.byte	4
 8431 0002 07       		.byte	7
 8432 0003 C0       		.byte	-64
 8433 0004 0B       		.byte	11
 8434 0005 C0       		.byte	-64
 8435 0006 21       		.byte	33
 8436 0007 84       		.byte	-124
 8437 0008 38       		.byte	56
 8438 0009 00       		.byte	0
 8439 000a 3A       		.byte	58
 8440 000b 22       		.byte	34
 8441 000c 3B       		.byte	59
 8442 000d 05       		.byte	5
 8443 000e 26       		.byte	38
 8444 000f 04       		.byte	4
 8445 0010 4D       		.byte	77
 8446 0011 0F       		.byte	15
 8447 0012 4E       		.byte	78
 8448 0013 0F       		.byte	15
 8449 0014 F1       		.byte	-15
 8450 0015 00       		.byte	0
 8451 0016 FF       		.byte	-1
 8452 0017 FF       		.byte	-1
 8453              		.section	.rodata.TP2824C_HDA_DataSet,"a",%progbits
 8454              		.align	2
 8455              		.set	.LANCHOR11,. + 0
 8458              	TP2824C_HDA_DataSet:
 8459 0000 0C       		.byte	12
 8460 0001 20       		.byte	32
 8461 0002 2B       		.byte	43
 8462 0003 2D       		.byte	45
 8463 0004 2E       		.byte	46
 8464 0005 30       		.byte	48
 8465 0006 31       		.byte	49
 8466 0007 32       		.byte	50
 8467 0008 33       		.byte	51
ARM GAS  /tmp/ccnKW75d.s 			page 242


 8468 0009 21       		.byte	33
 8469 000a 25       		.byte	37
 8470 000b 10       		.byte	16
 8471 000c 11       		.byte	17
 8472 000d 12       		.byte	18
 8473 000e 14       		.byte	20
 8474 000f FF       		.byte	-1
 8475 0010 03       		.byte	3
 8476 0011 40       		.byte	64
 8477 0012 60       		.byte	96
 8478 0013 48       		.byte	72
 8479 0014 40       		.byte	64
 8480 0015 27       		.byte	39
 8481 0016 72       		.byte	114
 8482 0017 80       		.byte	-128
 8483 0018 77       		.byte	119
 8484 0019 46       		.byte	70
 8485 001a FE       		.byte	-2
 8486 001b 50       		.byte	80
 8487 001c 50       		.byte	80
 8488 001d 40       		.byte	64
 8489 001e 4A       		.byte	74
 8490 001f FF       		.byte	-1
 8491 0020 03       		.byte	3
 8492 0021 40       		.byte	64
 8493 0022 60       		.byte	96
 8494 0023 48       		.byte	72
 8495 0024 40       		.byte	64
 8496 0025 27       		.byte	39
 8497 0026 88       		.byte	-120
 8498 0027 04       		.byte	4
 8499 0028 23       		.byte	35
 8500 0029 46       		.byte	70
 8501 002a FE       		.byte	-2
 8502 002b 50       		.byte	80
 8503 002c 50       		.byte	80
 8504 002d 40       		.byte	64
 8505 002e 4A       		.byte	74
 8506 002f FF       		.byte	-1
 8507 0030 03       		.byte	3
 8508 0031 38       		.byte	56
 8509 0032 60       		.byte	96
 8510 0033 44       		.byte	68
 8511 0034 40       		.byte	64
 8512 0035 29       		.byte	41
 8513 0036 65       		.byte	101
 8514 0037 78       		.byte	120
 8515 0038 16       		.byte	22
 8516 0039 46       		.byte	70
 8517 003a FE       		.byte	-2
 8518 003b 50       		.byte	80
 8519 003c 50       		.byte	80
 8520 003d 40       		.byte	64
 8521 003e 4A       		.byte	74
 8522 003f FF       		.byte	-1
 8523 0040 03       		.byte	3
 8524 0041 3C       		.byte	60
ARM GAS  /tmp/ccnKW75d.s 			page 243


 8525 0042 60       		.byte	96
 8526 0043 44       		.byte	68
 8527 0044 40       		.byte	64
 8528 0045 29       		.byte	41
 8529 0046 61       		.byte	97
 8530 0047 78       		.byte	120
 8531 0048 16       		.byte	22
 8532 0049 46       		.byte	70
 8533 004a FE       		.byte	-2
 8534 004b 50       		.byte	80
 8535 004c 50       		.byte	80
 8536 004d 40       		.byte	64
 8537 004e 4A       		.byte	74
 8538 004f FF       		.byte	-1
 8539              		.section	.rodata.TP2824C_HDC_DataSet,"a",%progbits
 8540              		.align	2
 8541              		.set	.LANCHOR14,. + 0
 8544              	TP2824C_HDC_DataSet:
 8545 0000 0C       		.byte	12
 8546 0001 15       		.byte	21
 8547 0002 16       		.byte	22
 8548 0003 17       		.byte	23
 8549 0004 18       		.byte	24
 8550 0005 19       		.byte	25
 8551 0006 1A       		.byte	26
 8552 0007 1C       		.byte	28
 8553 0008 1D       		.byte	29
 8554 0009 20       		.byte	32
 8555 000a 2B       		.byte	43
 8556 000b 2D       		.byte	45
 8557 000c 2E       		.byte	46
 8558 000d 30       		.byte	48
 8559 000e 31       		.byte	49
 8560 000f 32       		.byte	50
 8561 0010 33       		.byte	51
 8562 0011 27       		.byte	39
 8563 0012 28       		.byte	40
 8564 0013 FF       		.byte	-1
 8565 0014 03       		.byte	3
 8566 0015 13       		.byte	19
 8567 0016 08       		.byte	8
 8568 0017 00       		.byte	0
 8569 0018 19       		.byte	25
 8570 0019 D0       		.byte	-48
 8571 001a 25       		.byte	37
 8572 001b 06       		.byte	6
 8573 001c 72       		.byte	114
 8574 001d 30       		.byte	48
 8575 001e 60       		.byte	96
 8576 001f 37       		.byte	55
 8577 0020 40       		.byte	64
 8578 0021 48       		.byte	72
 8579 0022 67       		.byte	103
 8580 0023 6F       		.byte	111
 8581 0024 30       		.byte	48
 8582 0025 5A       		.byte	90
 8583 0026 04       		.byte	4
ARM GAS  /tmp/ccnKW75d.s 			page 244


 8584 0027 FF       		.byte	-1
 8585 0028 03       		.byte	3
 8586 0029 13       		.byte	19
 8587 002a 0A       		.byte	10
 8588 002b 00       		.byte	0
 8589 002c 19       		.byte	25
 8590 002d D0       		.byte	-48
 8591 002e 25       		.byte	37
 8592 002f 06       		.byte	6
 8593 0030 7A       		.byte	122
 8594 0031 3A       		.byte	58
 8595 0032 60       		.byte	96
 8596 0033 42       		.byte	66
 8597 0034 40       		.byte	64
 8598 0035 48       		.byte	72
 8599 0036 67       		.byte	103
 8600 0037 6F       		.byte	111
 8601 0038 33       		.byte	51
 8602 0039 5A       		.byte	90
 8603 003a 04       		.byte	4
 8604 003b FF       		.byte	-1
 8605 003c 03       		.byte	3
 8606 003d 13       		.byte	19
 8607 003e 60       		.byte	96
 8608 003f 80       		.byte	-128
 8609 0040 29       		.byte	41
 8610 0041 38       		.byte	56
 8611 0042 47       		.byte	71
 8612 0043 09       		.byte	9
 8613 0044 60       		.byte	96
 8614 0045 3C       		.byte	60
 8615 0046 60       		.byte	96
 8616 0047 47       		.byte	71
 8617 0048 40       		.byte	64
 8618 0049 41       		.byte	65
 8619 004a 82       		.byte	-126
 8620 004b 27       		.byte	39
 8621 004c A4       		.byte	-92
 8622 004d 5A       		.byte	90
 8623 004e 04       		.byte	4
 8624 004f FF       		.byte	-1
 8625 0050 03       		.byte	3
 8626 0051 13       		.byte	19
 8627 0052 60       		.byte	96
 8628 0053 80       		.byte	-128
 8629 0054 29       		.byte	41
 8630 0055 38       		.byte	56
 8631 0056 47       		.byte	71
 8632 0057 09       		.byte	9
 8633 0058 60       		.byte	96
 8634 0059 50       		.byte	80
 8635 005a 60       		.byte	96
 8636 005b 54       		.byte	84
 8637 005c 40       		.byte	64
 8638 005d 41       		.byte	65
 8639 005e 82       		.byte	-126
 8640 005f 27       		.byte	39
ARM GAS  /tmp/ccnKW75d.s 			page 245


 8641 0060 A2       		.byte	-94
 8642 0061 5A       		.byte	90
 8643 0062 04       		.byte	4
 8644 0063 FF       		.byte	-1
 8645              		.section	.rodata.TP2824C_MODE_DataSet,"a",%progbits
 8646              		.align	2
 8647              		.set	.LANCHOR7,. + 0
 8650              	TP2824C_MODE_DataSet:
 8651 0000 0C       		.byte	12
 8652 0001 0D       		.byte	13
 8653 0002 20       		.byte	32
 8654 0003 26       		.byte	38
 8655 0004 2B       		.byte	43
 8656 0005 2D       		.byte	45
 8657 0006 2E       		.byte	46
 8658 0007 30       		.byte	48
 8659 0008 31       		.byte	49
 8660 0009 32       		.byte	50
 8661 000a 33       		.byte	51
 8662 000b 39       		.byte	57
 8663 000c 2C       		.byte	44
 8664 000d 21       		.byte	33
 8665 000e 22       		.byte	34
 8666 000f 23       		.byte	35
 8667 0010 25       		.byte	37
 8668 0011 27       		.byte	39
 8669 0012 28       		.byte	40
 8670 0013 10       		.byte	16
 8671 0014 11       		.byte	17
 8672 0015 12       		.byte	18
 8673 0016 FF       		.byte	-1
 8674 0017 03       		.byte	3
 8675 0018 50       		.byte	80
 8676 0019 30       		.byte	48
 8677 001a 05       		.byte	5
 8678 001b 60       		.byte	96
 8679 001c 30       		.byte	48
 8680 001d 70       		.byte	112
 8681 001e 48       		.byte	72
 8682 001f BB       		.byte	-69
 8683 0020 2E       		.byte	46
 8684 0021 90       		.byte	-112
 8685 0022 1C       		.byte	28
 8686 0023 0A       		.byte	10
 8687 0024 84       		.byte	-124
 8688 0025 36       		.byte	54
 8689 0026 3C       		.byte	60
 8690 0027 FF       		.byte	-1
 8691 0028 2D       		.byte	45
 8692 0029 00       		.byte	0
 8693 002a 00       		.byte	0
 8694 002b 40       		.byte	64
 8695 002c 40       		.byte	64
 8696 002d FF       		.byte	-1
 8697 002e 13       		.byte	19
 8698 002f 50       		.byte	80
 8699 0030 30       		.byte	48
ARM GAS  /tmp/ccnKW75d.s 			page 246


 8700 0031 05       		.byte	5
 8701 0032 60       		.byte	96
 8702 0033 30       		.byte	48
 8703 0034 70       		.byte	112
 8704 0035 48       		.byte	72
 8705 0036 BB       		.byte	-69
 8706 0037 2E       		.byte	46
 8707 0038 90       		.byte	-112
 8708 0039 18       		.byte	24
 8709 003a 0A       		.byte	10
 8710 003b 84       		.byte	-124
 8711 003c 36       		.byte	54
 8712 003d 3C       		.byte	60
 8713 003e FF       		.byte	-1
 8714 003f 2D       		.byte	45
 8715 0040 00       		.byte	0
 8716 0041 00       		.byte	0
 8717 0042 40       		.byte	64
 8718 0043 40       		.byte	64
 8719 0044 FF       		.byte	-1
 8720 0045 13       		.byte	19
 8721 0046 50       		.byte	80
 8722 0047 40       		.byte	64
 8723 0048 05       		.byte	5
 8724 0049 70       		.byte	112
 8725 004a 68       		.byte	104
 8726 004b 5E       		.byte	94
 8727 004c 62       		.byte	98
 8728 004d BB       		.byte	-69
 8729 004e 96       		.byte	-106
 8730 004f C0       		.byte	-64
 8731 0050 04       		.byte	4
 8732 0051 2A       		.byte	42
 8733 0052 84       		.byte	-124
 8734 0053 36       		.byte	54
 8735 0054 3C       		.byte	60
 8736 0055 FF       		.byte	-1
 8737 0056 2D       		.byte	45
 8738 0057 00       		.byte	0
 8739 0058 50       		.byte	80
 8740 0059 53       		.byte	83
 8741 005a 40       		.byte	64
 8742 005b FF       		.byte	-1
 8743 005c 13       		.byte	19
 8744 005d 51       		.byte	81
 8745 005e 48       		.byte	72
 8746 005f 05       		.byte	5
 8747 0060 70       		.byte	112
 8748 0061 60       		.byte	96
 8749 0062 5E       		.byte	94
 8750 0063 7A       		.byte	122
 8751 0064 4A       		.byte	74
 8752 0065 4D       		.byte	77
 8753 0066 F0       		.byte	-16
 8754 0067 04       		.byte	4
 8755 0068 2A       		.byte	42
 8756 0069 84       		.byte	-124
ARM GAS  /tmp/ccnKW75d.s 			page 247


 8757 006a 37       		.byte	55
 8758 006b 3F       		.byte	63
 8759 006c FF       		.byte	-1
 8760 006d 2D       		.byte	45
 8761 006e 00       		.byte	0
 8762 006f 00       		.byte	0
 8763 0070 40       		.byte	64
 8764 0071 40       		.byte	64
 8765 0072 FF       		.byte	-1
 8766              		.section	.rodata.TP2824C_TVI_FHD_PTZ_DataSet,"a",%progbits
 8767              		.align	2
 8768              		.set	.LANCHOR32,. + 0
 8771              	TP2824C_TVI_FHD_PTZ_DataSet:
 8772 0000 C0       		.byte	-64
 8773 0001 00       		.byte	0
 8774 0002 C2       		.byte	-62
 8775 0003 0B       		.byte	11
 8776 0004 C3       		.byte	-61
 8777 0005 0C       		.byte	12
 8778 0006 C1       		.byte	-63
 8779 0007 00       		.byte	0
 8780 0008 C4       		.byte	-60
 8781 0009 00       		.byte	0
 8782 000a C5       		.byte	-59
 8783 000b 00       		.byte	0
 8784 000c C6       		.byte	-58
 8785 000d 33       		.byte	51
 8786 000e C7       		.byte	-57
 8787 000f 78       		.byte	120
 8788 0010 C8       		.byte	-56
 8789 0011 21       		.byte	33
 8790 0012 6F       		.byte	111
 8791 0013 40       		.byte	64
 8792 0014 70       		.byte	112
 8793 0015 00       		.byte	0
 8794 0016 55       		.byte	85
 8795 0017 00       		.byte	0
 8796 0018 56       		.byte	86
 8797 0019 02       		.byte	2
 8798 001a 57       		.byte	87
 8799 001b B5       		.byte	-75
 8800 001c 58       		.byte	88
 8801 001d 01       		.byte	1
 8802 001e 59       		.byte	89
 8803 001f 17       		.byte	23
 8804 0020 5A       		.byte	90
 8805 0021 01       		.byte	1
 8806 0022 5B       		.byte	91
 8807 0023 00       		.byte	0
 8808 0024 5C       		.byte	92
 8809 0025 02       		.byte	2
 8810 0026 5D       		.byte	93
 8811 0027 00       		.byte	0
 8812 0028 5E       		.byte	94
 8813 0029 00       		.byte	0
 8814 002a 5F       		.byte	95
 8815 002b 00       		.byte	0
ARM GAS  /tmp/ccnKW75d.s 			page 248


 8816 002c 60       		.byte	96
 8817 002d CE       		.byte	-50
 8818 002e CB       		.byte	-53
 8819 002f 07       		.byte	7
 8820 0030 CC       		.byte	-52
 8821 0031 08       		.byte	8
 8822 0032 CD       		.byte	-51
 8823 0033 00       		.byte	0
 8824 0034 CE       		.byte	-50
 8825 0035 00       		.byte	0
 8826 0036 CF       		.byte	-49
 8827 0037 04       		.byte	4
 8828 0038 D0       		.byte	-48
 8829 0039 00       		.byte	0
 8830 003a D1       		.byte	-47
 8831 003b 00       		.byte	0
 8832 003c D2       		.byte	-46
 8833 003d 60       		.byte	96
 8834 003e D3       		.byte	-45
 8835 003f 10       		.byte	16
 8836 0040 D4       		.byte	-44
 8837 0041 06       		.byte	6
 8838 0042 D5       		.byte	-43
 8839 0043 BE       		.byte	-66
 8840 0044 D6       		.byte	-42
 8841 0045 39       		.byte	57
 8842 0046 D7       		.byte	-41
 8843 0047 21       		.byte	33
 8844 0048 A7       		.byte	-89
 8845 0049 00       		.byte	0
 8846 004a FF       		.byte	-1
 8847 004b FF       		.byte	-1
 8848              		.section	.rodata.TP2826_DataSet,"a",%progbits
 8849              		.align	2
 8850              		.set	.LANCHOR20,. + 0
 8853              	TP2826_DataSet:
 8854 0000 40       		.byte	64
 8855 0001 04       		.byte	4
 8856 0002 07       		.byte	7
 8857 0003 C0       		.byte	-64
 8858 0004 0B       		.byte	11
 8859 0005 C0       		.byte	-64
 8860 0006 21       		.byte	33
 8861 0007 84       		.byte	-124
 8862 0008 38       		.byte	56
 8863 0009 00       		.byte	0
 8864 000a 3A       		.byte	58
 8865 000b 22       		.byte	34
 8866 000c 3B       		.byte	59
 8867 000d 05       		.byte	5
 8868 000e 26       		.byte	38
 8869 000f 04       		.byte	4
 8870 0010 4D       		.byte	77
 8871 0011 07       		.byte	7
 8872 0012 4E       		.byte	78
 8873 0013 05       		.byte	5
 8874 0014 F1       		.byte	-15
ARM GAS  /tmp/ccnKW75d.s 			page 249


 8875 0015 07       		.byte	7
 8876 0016 FF       		.byte	-1
 8877 0017 FF       		.byte	-1
 8878              		.section	.rodata.TP2826_HDA_DataSet,"a",%progbits
 8879              		.align	2
 8880              		.set	.LANCHOR10,. + 0
 8883              	TP2826_HDA_DataSet:
 8884 0000 0C       		.byte	12
 8885 0001 20       		.byte	32
 8886 0002 2B       		.byte	43
 8887 0003 2D       		.byte	45
 8888 0004 2E       		.byte	46
 8889 0005 30       		.byte	48
 8890 0006 31       		.byte	49
 8891 0007 32       		.byte	50
 8892 0008 33       		.byte	51
 8893 0009 21       		.byte	33
 8894 000a 25       		.byte	37
 8895 000b FF       		.byte	-1
 8896 000c 03       		.byte	3
 8897 000d 40       		.byte	64
 8898 000e 60       		.byte	96
 8899 000f 48       		.byte	72
 8900 0010 40       		.byte	64
 8901 0011 27       		.byte	39
 8902 0012 72       		.byte	114
 8903 0013 80       		.byte	-128
 8904 0014 77       		.byte	119
 8905 0015 46       		.byte	70
 8906 0016 FE       		.byte	-2
 8907 0017 FF       		.byte	-1
 8908 0018 03       		.byte	3
 8909 0019 40       		.byte	64
 8910 001a 60       		.byte	96
 8911 001b 48       		.byte	72
 8912 001c 40       		.byte	64
 8913 001d 27       		.byte	39
 8914 001e 88       		.byte	-120
 8915 001f 04       		.byte	4
 8916 0020 23       		.byte	35
 8917 0021 46       		.byte	70
 8918 0022 FE       		.byte	-2
 8919 0023 FF       		.byte	-1
 8920 0024 03       		.byte	3
 8921 0025 38       		.byte	56
 8922 0026 60       		.byte	96
 8923 0027 44       		.byte	68
 8924 0028 40       		.byte	64
 8925 0029 29       		.byte	41
 8926 002a 65       		.byte	101
 8927 002b 78       		.byte	120
 8928 002c 16       		.byte	22
 8929 002d 46       		.byte	70
 8930 002e FE       		.byte	-2
 8931 002f FF       		.byte	-1
 8932 0030 03       		.byte	3
 8933 0031 3C       		.byte	60
ARM GAS  /tmp/ccnKW75d.s 			page 250


 8934 0032 60       		.byte	96
 8935 0033 44       		.byte	68
 8936 0034 40       		.byte	64
 8937 0035 29       		.byte	41
 8938 0036 61       		.byte	97
 8939 0037 78       		.byte	120
 8940 0038 16       		.byte	22
 8941 0039 46       		.byte	70
 8942 003a FE       		.byte	-2
 8943 003b FF       		.byte	-1
 8944              		.section	.rodata.TP2826_HDC_DataSet,"a",%progbits
 8945              		.align	2
 8946              		.set	.LANCHOR13,. + 0
 8949              	TP2826_HDC_DataSet:
 8950 0000 0C       		.byte	12
 8951 0001 15       		.byte	21
 8952 0002 16       		.byte	22
 8953 0003 17       		.byte	23
 8954 0004 18       		.byte	24
 8955 0005 19       		.byte	25
 8956 0006 1A       		.byte	26
 8957 0007 1C       		.byte	28
 8958 0008 1D       		.byte	29
 8959 0009 20       		.byte	32
 8960 000a 2B       		.byte	43
 8961 000b 2D       		.byte	45
 8962 000c 2E       		.byte	46
 8963 000d 30       		.byte	48
 8964 000e 31       		.byte	49
 8965 000f 32       		.byte	50
 8966 0010 33       		.byte	51
 8967 0011 27       		.byte	39
 8968 0012 28       		.byte	40
 8969 0013 FF       		.byte	-1
 8970 0014 03       		.byte	3
 8971 0015 13       		.byte	19
 8972 0016 08       		.byte	8
 8973 0017 00       		.byte	0
 8974 0018 19       		.byte	25
 8975 0019 D0       		.byte	-48
 8976 001a 25       		.byte	37
 8977 001b 06       		.byte	6
 8978 001c 72       		.byte	114
 8979 001d 30       		.byte	48
 8980 001e 60       		.byte	96
 8981 001f 37       		.byte	55
 8982 0020 40       		.byte	64
 8983 0021 48       		.byte	72
 8984 0022 67       		.byte	103
 8985 0023 6F       		.byte	111
 8986 0024 30       		.byte	48
 8987 0025 5A       		.byte	90
 8988 0026 04       		.byte	4
 8989 0027 FF       		.byte	-1
 8990 0028 03       		.byte	3
 8991 0029 13       		.byte	19
 8992 002a 0A       		.byte	10
ARM GAS  /tmp/ccnKW75d.s 			page 251


 8993 002b 00       		.byte	0
 8994 002c 19       		.byte	25
 8995 002d D0       		.byte	-48
 8996 002e 25       		.byte	37
 8997 002f 06       		.byte	6
 8998 0030 7A       		.byte	122
 8999 0031 3A       		.byte	58
 9000 0032 60       		.byte	96
 9001 0033 42       		.byte	66
 9002 0034 40       		.byte	64
 9003 0035 48       		.byte	72
 9004 0036 67       		.byte	103
 9005 0037 6F       		.byte	111
 9006 0038 33       		.byte	51
 9007 0039 5A       		.byte	90
 9008 003a 04       		.byte	4
 9009 003b FF       		.byte	-1
 9010 003c 03       		.byte	3
 9011 003d 13       		.byte	19
 9012 003e 60       		.byte	96
 9013 003f 80       		.byte	-128
 9014 0040 29       		.byte	41
 9015 0041 38       		.byte	56
 9016 0042 47       		.byte	71
 9017 0043 09       		.byte	9
 9018 0044 60       		.byte	96
 9019 0045 3C       		.byte	60
 9020 0046 60       		.byte	96
 9021 0047 47       		.byte	71
 9022 0048 40       		.byte	64
 9023 0049 41       		.byte	65
 9024 004a 82       		.byte	-126
 9025 004b 27       		.byte	39
 9026 004c A4       		.byte	-92
 9027 004d 5A       		.byte	90
 9028 004e 04       		.byte	4
 9029 004f FF       		.byte	-1
 9030 0050 03       		.byte	3
 9031 0051 13       		.byte	19
 9032 0052 60       		.byte	96
 9033 0053 80       		.byte	-128
 9034 0054 29       		.byte	41
 9035 0055 38       		.byte	56
 9036 0056 47       		.byte	71
 9037 0057 09       		.byte	9
 9038 0058 60       		.byte	96
 9039 0059 50       		.byte	80
 9040 005a 60       		.byte	96
 9041 005b 54       		.byte	84
 9042 005c 40       		.byte	64
 9043 005d 41       		.byte	65
 9044 005e 82       		.byte	-126
 9045 005f 27       		.byte	39
 9046 0060 A2       		.byte	-94
 9047 0061 5A       		.byte	90
 9048 0062 04       		.byte	4
 9049 0063 FF       		.byte	-1
ARM GAS  /tmp/ccnKW75d.s 			page 252


 9050              		.section	.rodata.TP2826_MODE_DataSet,"a",%progbits
 9051              		.align	2
 9052              		.set	.LANCHOR6,. + 0
 9055              	TP2826_MODE_DataSet:
 9056 0000 0C       		.byte	12
 9057 0001 0D       		.byte	13
 9058 0002 20       		.byte	32
 9059 0003 26       		.byte	38
 9060 0004 2B       		.byte	43
 9061 0005 2D       		.byte	45
 9062 0006 2E       		.byte	46
 9063 0007 30       		.byte	48
 9064 0008 31       		.byte	49
 9065 0009 32       		.byte	50
 9066 000a 33       		.byte	51
 9067 000b 39       		.byte	57
 9068 000c 2C       		.byte	44
 9069 000d 21       		.byte	33
 9070 000e 22       		.byte	34
 9071 000f 23       		.byte	35
 9072 0010 25       		.byte	37
 9073 0011 27       		.byte	39
 9074 0012 28       		.byte	40
 9075 0013 FF       		.byte	-1
 9076 0014 03       		.byte	3
 9077 0015 50       		.byte	80
 9078 0016 30       		.byte	48
 9079 0017 05       		.byte	5
 9080 0018 60       		.byte	96
 9081 0019 30       		.byte	48
 9082 001a 70       		.byte	112
 9083 001b 48       		.byte	72
 9084 001c BB       		.byte	-69
 9085 001d 2E       		.byte	46
 9086 001e 90       		.byte	-112
 9087 001f 1C       		.byte	28
 9088 0020 0A       		.byte	10
 9089 0021 84       		.byte	-124
 9090 0022 36       		.byte	54
 9091 0023 3C       		.byte	60
 9092 0024 FF       		.byte	-1
 9093 0025 2D       		.byte	45
 9094 0026 00       		.byte	0
 9095 0027 FF       		.byte	-1
 9096 0028 13       		.byte	19
 9097 0029 50       		.byte	80
 9098 002a 30       		.byte	48
 9099 002b 05       		.byte	5
 9100 002c 60       		.byte	96
 9101 002d 30       		.byte	48
 9102 002e 70       		.byte	112
 9103 002f 48       		.byte	72
 9104 0030 BB       		.byte	-69
 9105 0031 2E       		.byte	46
 9106 0032 90       		.byte	-112
 9107 0033 18       		.byte	24
 9108 0034 0A       		.byte	10
ARM GAS  /tmp/ccnKW75d.s 			page 253


 9109 0035 84       		.byte	-124
 9110 0036 36       		.byte	54
 9111 0037 3C       		.byte	60
 9112 0038 FF       		.byte	-1
 9113 0039 2D       		.byte	45
 9114 003a 00       		.byte	0
 9115 003b FF       		.byte	-1
 9116 003c 13       		.byte	19
 9117 003d 50       		.byte	80
 9118 003e 40       		.byte	64
 9119 003f 05       		.byte	5
 9120 0040 70       		.byte	112
 9121 0041 68       		.byte	104
 9122 0042 5E       		.byte	94
 9123 0043 62       		.byte	98
 9124 0044 BB       		.byte	-69
 9125 0045 96       		.byte	-106
 9126 0046 C0       		.byte	-64
 9127 0047 04       		.byte	4
 9128 0048 2A       		.byte	42
 9129 0049 84       		.byte	-124
 9130 004a 36       		.byte	54
 9131 004b 3C       		.byte	60
 9132 004c FF       		.byte	-1
 9133 004d 2D       		.byte	45
 9134 004e 00       		.byte	0
 9135 004f FF       		.byte	-1
 9136 0050 13       		.byte	19
 9137 0051 51       		.byte	81
 9138 0052 48       		.byte	72
 9139 0053 05       		.byte	5
 9140 0054 70       		.byte	112
 9141 0055 60       		.byte	96
 9142 0056 5E       		.byte	94
 9143 0057 7A       		.byte	122
 9144 0058 4A       		.byte	74
 9145 0059 4D       		.byte	77
 9146 005a F0       		.byte	-16
 9147 005b 04       		.byte	4
 9148 005c 2A       		.byte	42
 9149 005d 84       		.byte	-124
 9150 005e 37       		.byte	55
 9151 005f 3F       		.byte	63
 9152 0060 FF       		.byte	-1
 9153 0061 2D       		.byte	45
 9154 0062 00       		.byte	0
 9155 0063 FF       		.byte	-1
 9156              		.section	.rodata.TP2833_DataSet,"a",%progbits
 9157              		.align	2
 9158              		.set	.LANCHOR19,. + 0
 9161              	TP2833_DataSet:
 9162 0000 40       		.byte	64
 9163 0001 04       		.byte	4
 9164 0002 07       		.byte	7
 9165 0003 C0       		.byte	-64
 9166 0004 0B       		.byte	11
 9167 0005 C0       		.byte	-64
ARM GAS  /tmp/ccnKW75d.s 			page 254


 9168 0006 22       		.byte	34
 9169 0007 36       		.byte	54
 9170 0008 38       		.byte	56
 9171 0009 40       		.byte	64
 9172 000a 26       		.byte	38
 9173 000b 04       		.byte	4
 9174 000c 4D       		.byte	77
 9175 000d 03       		.byte	3
 9176 000e 4E       		.byte	78
 9177 000f 03       		.byte	3
 9178 0010 4F       		.byte	79
 9179 0011 01       		.byte	1
 9180 0012 FF       		.byte	-1
 9181 0013 FF       		.byte	-1
 9182              		.section	.rodata.TP2833_HDA_DataSet,"a",%progbits
 9183              		.align	2
 9184              		.set	.LANCHOR9,. + 0
 9187              	TP2833_HDA_DataSet:
 9188 0000 2B       		.byte	43
 9189 0001 2D       		.byte	45
 9190 0002 2E       		.byte	46
 9191 0003 30       		.byte	48
 9192 0004 31       		.byte	49
 9193 0005 32       		.byte	50
 9194 0006 33       		.byte	51
 9195 0007 FF       		.byte	-1
 9196 0008 70       		.byte	112
 9197 0009 48       		.byte	72
 9198 000a 5E       		.byte	94
 9199 000b 27       		.byte	39
 9200 000c 72       		.byte	114
 9201 000d 80       		.byte	-128
 9202 000e 77       		.byte	119
 9203 000f FF       		.byte	-1
 9204 0010 70       		.byte	112
 9205 0011 48       		.byte	72
 9206 0012 5E       		.byte	94
 9207 0013 27       		.byte	39
 9208 0014 88       		.byte	-120
 9209 0015 04       		.byte	4
 9210 0016 23       		.byte	35
 9211 0017 FF       		.byte	-1
 9212 0018 58       		.byte	88
 9213 0019 45       		.byte	69
 9214 001a 50       		.byte	80
 9215 001b 29       		.byte	41
 9216 001c 65       		.byte	101
 9217 001d 78       		.byte	120
 9218 001e 16       		.byte	22
 9219 001f FF       		.byte	-1
 9220 0020 58       		.byte	88
 9221 0021 45       		.byte	69
 9222 0022 40       		.byte	64
 9223 0023 29       		.byte	41
 9224 0024 61       		.byte	97
 9225 0025 78       		.byte	120
 9226 0026 16       		.byte	22
ARM GAS  /tmp/ccnKW75d.s 			page 255


 9227 0027 FF       		.byte	-1
 9228              		.section	.rodata.TP2833_MODE_DataSet,"a",%progbits
 9229              		.align	2
 9230              		.set	.LANCHOR4,. + 0
 9233              	TP2833_MODE_DataSet:
 9234 0000 0C       		.byte	12
 9235 0001 0D       		.byte	13
 9236 0002 20       		.byte	32
 9237 0003 26       		.byte	38
 9238 0004 2B       		.byte	43
 9239 0005 2D       		.byte	45
 9240 0006 2E       		.byte	46
 9241 0007 30       		.byte	48
 9242 0008 31       		.byte	49
 9243 0009 32       		.byte	50
 9244 000a 33       		.byte	51
 9245 000b 39       		.byte	57
 9246 000c 18       		.byte	24
 9247 000d FF       		.byte	-1
 9248 000e 03       		.byte	3
 9249 000f 50       		.byte	80
 9250 0010 30       		.byte	48
 9251 0011 05       		.byte	5
 9252 0012 58       		.byte	88
 9253 0013 30       		.byte	48
 9254 0014 70       		.byte	112
 9255 0015 48       		.byte	72
 9256 0016 BB       		.byte	-69
 9257 0017 2E       		.byte	46
 9258 0018 90       		.byte	-112
 9259 0019 0C       		.byte	12
 9260 001a 12       		.byte	18
 9261 001b FF       		.byte	-1
 9262 001c 13       		.byte	19
 9263 001d 50       		.byte	80
 9264 001e 30       		.byte	48
 9265 001f 05       		.byte	5
 9266 0020 58       		.byte	88
 9267 0021 30       		.byte	48
 9268 0022 70       		.byte	112
 9269 0023 48       		.byte	72
 9270 0024 BB       		.byte	-69
 9271 0025 2E       		.byte	46
 9272 0026 90       		.byte	-112
 9273 0027 08       		.byte	8
 9274 0028 12       		.byte	18
 9275 0029 FF       		.byte	-1
 9276 002a 13       		.byte	19
 9277 002b 50       		.byte	80
 9278 002c 40       		.byte	64
 9279 002d 05       		.byte	5
 9280 002e 70       		.byte	112
 9281 002f 68       		.byte	104
 9282 0030 5E       		.byte	94
 9283 0031 62       		.byte	98
 9284 0032 BB       		.byte	-69
 9285 0033 96       		.byte	-106
ARM GAS  /tmp/ccnKW75d.s 			page 256


 9286 0034 C0       		.byte	-64
 9287 0035 04       		.byte	4
 9288 0036 11       		.byte	17
 9289 0037 FF       		.byte	-1
 9290 0038 13       		.byte	19
 9291 0039 51       		.byte	81
 9292 003a 48       		.byte	72
 9293 003b 05       		.byte	5
 9294 003c 70       		.byte	112
 9295 003d 60       		.byte	96
 9296 003e 5E       		.byte	94
 9297 003f 7A       		.byte	122
 9298 0040 4A       		.byte	74
 9299 0041 4D       		.byte	77
 9300 0042 F0       		.byte	-16
 9301 0043 04       		.byte	4
 9302 0044 11       		.byte	17
 9303 0045 FF       		.byte	-1
 9304              		.section	.rodata.TP2834_Audio_DataSet,"a",%progbits
 9305              		.align	2
 9306              		.set	.LANCHOR21,. + 0
 9309              	TP2834_Audio_DataSet:
 9310 0000 40       		.byte	64
 9311 0001 40       		.byte	64
 9312 0002 00       		.byte	0
 9313 0003 01       		.byte	1
 9314 0004 01       		.byte	1
 9315 0005 02       		.byte	2
 9316 0006 02       		.byte	2
 9317 0007 03       		.byte	3
 9318 0008 03       		.byte	3
 9319 0009 04       		.byte	4
 9320 000a 04       		.byte	4
 9321 000b 11       		.byte	17
 9322 000c 17       		.byte	23
 9323 000d 00       		.byte	0
 9324 000e 18       		.byte	24
 9325 000f 10       		.byte	16
 9326 0010 19       		.byte	25
 9327 0011 0F       		.byte	15
 9328 0012 1A       		.byte	26
 9329 0013 15       		.byte	21
 9330 0014 1B       		.byte	27
 9331 0015 01       		.byte	1
 9332 0016 37       		.byte	55
 9333 0017 20       		.byte	32
 9334 0018 1D       		.byte	29
 9335 0019 08       		.byte	8
 9336 001a 1D       		.byte	29
 9337 001b 00       		.byte	0
 9338 001c 3C       		.byte	60
 9339 001d 3F       		.byte	63
 9340 001e 3C       		.byte	60
 9341 001f 00       		.byte	0
 9342 0020 3D       		.byte	61
 9343 0021 01       		.byte	1
 9344 0022 FF       		.byte	-1
ARM GAS  /tmp/ccnKW75d.s 			page 257


 9345 0023 FF       		.byte	-1
 9346              		.section	.rodata.TP2834_DataSet,"a",%progbits
 9347              		.align	2
 9348              		.set	.LANCHOR17,. + 0
 9351              	TP2834_DataSet:
 9352 0000 40       		.byte	64
 9353 0001 04       		.byte	4
 9354 0002 07       		.byte	7
 9355 0003 C0       		.byte	-64
 9356 0004 0B       		.byte	11
 9357 0005 C0       		.byte	-64
 9358 0006 3A       		.byte	58
 9359 0007 70       		.byte	112
 9360 0008 26       		.byte	38
 9361 0009 01       		.byte	1
 9362 000a 4D       		.byte	77
 9363 000b 0F       		.byte	15
 9364 000c 4E       		.byte	78
 9365 000d 0F       		.byte	15
 9366 000e FF       		.byte	-1
 9367 000f FF       		.byte	-1
 9368              		.section	.rodata.TP2834_MODE_DataSet,"a",%progbits
 9369              		.align	2
 9370              		.set	.LANCHOR5,. + 0
 9373              	TP2834_MODE_DataSet:
 9374 0000 0C       		.byte	12
 9375 0001 0D       		.byte	13
 9376 0002 20       		.byte	32
 9377 0003 26       		.byte	38
 9378 0004 2B       		.byte	43
 9379 0005 2D       		.byte	45
 9380 0006 2E       		.byte	46
 9381 0007 30       		.byte	48
 9382 0008 31       		.byte	49
 9383 0009 32       		.byte	50
 9384 000a 33       		.byte	51
 9385 000b 39       		.byte	57
 9386 000c FF       		.byte	-1
 9387 000d 03       		.byte	3
 9388 000e 10       		.byte	16
 9389 000f 60       		.byte	96
 9390 0010 02       		.byte	2
 9391 0011 58       		.byte	88
 9392 0012 30       		.byte	48
 9393 0013 70       		.byte	112
 9394 0014 48       		.byte	72
 9395 0015 BB       		.byte	-69
 9396 0016 2E       		.byte	46
 9397 0017 90       		.byte	-112
 9398 0018 8C       		.byte	-116
 9399 0019 FF       		.byte	-1
 9400 001a 03       		.byte	3
 9401 001b 10       		.byte	16
 9402 001c 60       		.byte	96
 9403 001d 02       		.byte	2
 9404 001e 58       		.byte	88
 9405 001f 30       		.byte	48
ARM GAS  /tmp/ccnKW75d.s 			page 258


 9406 0020 70       		.byte	112
 9407 0021 48       		.byte	72
 9408 0022 BB       		.byte	-69
 9409 0023 2E       		.byte	46
 9410 0024 90       		.byte	-112
 9411 0025 88       		.byte	-120
 9412 0026 FF       		.byte	-1
 9413 0027 43       		.byte	67
 9414 0028 10       		.byte	16
 9415 0029 A0       		.byte	-96
 9416 002a 12       		.byte	18
 9417 002b 70       		.byte	112
 9418 002c 68       		.byte	104
 9419 002d 5E       		.byte	94
 9420 002e 62       		.byte	98
 9421 002f BB       		.byte	-69
 9422 0030 96       		.byte	-106
 9423 0031 C0       		.byte	-64
 9424 0032 84       		.byte	-124
 9425 0033 FF       		.byte	-1
 9426 0034 43       		.byte	67
 9427 0035 11       		.byte	17
 9428 0036 B0       		.byte	-80
 9429 0037 02       		.byte	2
 9430 0038 70       		.byte	112
 9431 0039 60       		.byte	96
 9432 003a 5E       		.byte	94
 9433 003b 7A       		.byte	122
 9434 003c 4A       		.byte	74
 9435 003d 4D       		.byte	77
 9436 003e F0       		.byte	-16
 9437 003f 84       		.byte	-124
 9438 0040 FF       		.byte	-1
 9439              		.section	.rodata.TP2853C_DataSet,"a",%progbits
 9440              		.align	2
 9441              		.set	.LANCHOR18,. + 0
 9444              	TP2853C_DataSet:
 9445 0000 40       		.byte	64
 9446 0001 04       		.byte	4
 9447 0002 07       		.byte	7
 9448 0003 C0       		.byte	-64
 9449 0004 0B       		.byte	11
 9450 0005 C0       		.byte	-64
 9451 0006 21       		.byte	33
 9452 0007 84       		.byte	-124
 9453 0008 38       		.byte	56
 9454 0009 00       		.byte	0
 9455 000a 3A       		.byte	58
 9456 000b 32       		.byte	50
 9457 000c 3B       		.byte	59
 9458 000d 05       		.byte	5
 9459 000e 26       		.byte	38
 9460 000f 04       		.byte	4
 9461 0010 4D       		.byte	77
 9462 0011 03       		.byte	3
 9463 0012 4E       		.byte	78
 9464 0013 03       		.byte	3
ARM GAS  /tmp/ccnKW75d.s 			page 259


 9465 0014 4F       		.byte	79
 9466 0015 01       		.byte	1
 9467 0016 F5       		.byte	-11
 9468 0017 F0       		.byte	-16
 9469 0018 F1       		.byte	-15
 9470 0019 07       		.byte	7
 9471 001a FF       		.byte	-1
 9472 001b FF       		.byte	-1
 9473              		.section	.rodata.TP2853C_HDA_DataSet,"a",%progbits
 9474              		.align	2
 9475              		.set	.LANCHOR8,. + 0
 9478              	TP2853C_HDA_DataSet:
 9479 0000 2B       		.byte	43
 9480 0001 2D       		.byte	45
 9481 0002 2E       		.byte	46
 9482 0003 30       		.byte	48
 9483 0004 31       		.byte	49
 9484 0005 32       		.byte	50
 9485 0006 33       		.byte	51
 9486 0007 21       		.byte	33
 9487 0008 25       		.byte	37
 9488 0009 FF       		.byte	-1
 9489 000a 70       		.byte	112
 9490 000b 48       		.byte	72
 9491 000c 5E       		.byte	94
 9492 000d 27       		.byte	39
 9493 000e 72       		.byte	114
 9494 000f 80       		.byte	-128
 9495 0010 77       		.byte	119
 9496 0011 44       		.byte	68
 9497 0012 F0       		.byte	-16
 9498 0013 FF       		.byte	-1
 9499 0014 70       		.byte	112
 9500 0015 48       		.byte	72
 9501 0016 5E       		.byte	94
 9502 0017 27       		.byte	39
 9503 0018 88       		.byte	-120
 9504 0019 04       		.byte	4
 9505 001a 23       		.byte	35
 9506 001b 44       		.byte	68
 9507 001c F0       		.byte	-16
 9508 001d FF       		.byte	-1
 9509 001e 58       		.byte	88
 9510 001f 45       		.byte	69
 9511 0020 50       		.byte	80
 9512 0021 29       		.byte	41
 9513 0022 65       		.byte	101
 9514 0023 78       		.byte	120
 9515 0024 16       		.byte	22
 9516 0025 44       		.byte	68
 9517 0026 F0       		.byte	-16
 9518 0027 FF       		.byte	-1
 9519 0028 58       		.byte	88
 9520 0029 45       		.byte	69
 9521 002a 40       		.byte	64
 9522 002b 29       		.byte	41
 9523 002c 61       		.byte	97
ARM GAS  /tmp/ccnKW75d.s 			page 260


 9524 002d 78       		.byte	120
 9525 002e 16       		.byte	22
 9526 002f 44       		.byte	68
 9527 0030 F0       		.byte	-16
 9528 0031 FF       		.byte	-1
 9529              		.section	.rodata.TP2853C_HDC_DataSet,"a",%progbits
 9530              		.align	2
 9531              		.set	.LANCHOR12,. + 0
 9534              	TP2853C_HDC_DataSet:
 9535 0000 15       		.byte	21
 9536 0001 16       		.byte	22
 9537 0002 20       		.byte	32
 9538 0003 2B       		.byte	43
 9539 0004 2D       		.byte	45
 9540 0005 2E       		.byte	46
 9541 0006 30       		.byte	48
 9542 0007 31       		.byte	49
 9543 0008 32       		.byte	50
 9544 0009 33       		.byte	51
 9545 000a 27       		.byte	39
 9546 000b 28       		.byte	40
 9547 000c FF       		.byte	-1
 9548 000d 13       		.byte	19
 9549 000e 40       		.byte	64
 9550 000f 50       		.byte	80
 9551 0010 60       		.byte	96
 9552 0011 42       		.byte	66
 9553 0012 40       		.byte	64
 9554 0013 48       		.byte	72
 9555 0014 67       		.byte	103
 9556 0015 2E       		.byte	46
 9557 0016 90       		.byte	-112
 9558 0017 5A       		.byte	90
 9559 0018 04       		.byte	4
 9560 0019 FF       		.byte	-1
 9561 001a 13       		.byte	19
 9562 001b 40       		.byte	64
 9563 001c 50       		.byte	80
 9564 001d 60       		.byte	96
 9565 001e 42       		.byte	66
 9566 001f 40       		.byte	64
 9567 0020 48       		.byte	72
 9568 0021 67       		.byte	103
 9569 0022 2E       		.byte	46
 9570 0023 90       		.byte	-112
 9571 0024 5A       		.byte	90
 9572 0025 04       		.byte	4
 9573 0026 FF       		.byte	-1
 9574 0027 13       		.byte	19
 9575 0028 20       		.byte	32
 9576 0029 48       		.byte	72
 9577 002a 60       		.byte	96
 9578 002b 45       		.byte	69
 9579 002c 40       		.byte	64
 9580 002d 41       		.byte	65
 9581 002e 83       		.byte	-125
 9582 002f 2E       		.byte	46
ARM GAS  /tmp/ccnKW75d.s 			page 261


 9583 0030 90       		.byte	-112
 9584 0031 5A       		.byte	90
 9585 0032 04       		.byte	4
 9586 0033 FF       		.byte	-1
 9587 0034 13       		.byte	19
 9588 0035 84       		.byte	-124
 9589 0036 48       		.byte	72
 9590 0037 60       		.byte	96
 9591 0038 45       		.byte	69
 9592 0039 40       		.byte	64
 9593 003a 41       		.byte	65
 9594 003b 83       		.byte	-125
 9595 003c 2E       		.byte	46
 9596 003d 90       		.byte	-112
 9597 003e 5A       		.byte	90
 9598 003f 04       		.byte	4
 9599 0040 FF       		.byte	-1
 9600              		.section	.rodata.TP2853C_MODE_DataSet,"a",%progbits
 9601              		.align	2
 9602              		.set	.LANCHOR3,. + 0
 9605              	TP2853C_MODE_DataSet:
 9606 0000 0C       		.byte	12
 9607 0001 0D       		.byte	13
 9608 0002 20       		.byte	32
 9609 0003 26       		.byte	38
 9610 0004 2B       		.byte	43
 9611 0005 2D       		.byte	45
 9612 0006 2E       		.byte	46
 9613 0007 30       		.byte	48
 9614 0008 31       		.byte	49
 9615 0009 32       		.byte	50
 9616 000a 33       		.byte	51
 9617 000b 39       		.byte	57
 9618 000c 2C       		.byte	44
 9619 000d 21       		.byte	33
 9620 000e 25       		.byte	37
 9621 000f 27       		.byte	39
 9622 0010 28       		.byte	40
 9623 0011 FF       		.byte	-1
 9624 0012 03       		.byte	3
 9625 0013 50       		.byte	80
 9626 0014 30       		.byte	48
 9627 0015 05       		.byte	5
 9628 0016 60       		.byte	96
 9629 0017 30       		.byte	48
 9630 0018 70       		.byte	112
 9631 0019 48       		.byte	72
 9632 001a BB       		.byte	-69
 9633 001b 2E       		.byte	46
 9634 001c 90       		.byte	-112
 9635 001d 0C       		.byte	12
 9636 001e 0A       		.byte	10
 9637 001f 84       		.byte	-124
 9638 0020 F0       		.byte	-16
 9639 0021 2D       		.byte	45
 9640 0022 00       		.byte	0
 9641 0023 FF       		.byte	-1
ARM GAS  /tmp/ccnKW75d.s 			page 262


 9642 0024 13       		.byte	19
 9643 0025 50       		.byte	80
 9644 0026 30       		.byte	48
 9645 0027 05       		.byte	5
 9646 0028 60       		.byte	96
 9647 0029 30       		.byte	48
 9648 002a 70       		.byte	112
 9649 002b 48       		.byte	72
 9650 002c BB       		.byte	-69
 9651 002d 2E       		.byte	46
 9652 002e 90       		.byte	-112
 9653 002f 08       		.byte	8
 9654 0030 0A       		.byte	10
 9655 0031 84       		.byte	-124
 9656 0032 F0       		.byte	-16
 9657 0033 2D       		.byte	45
 9658 0034 00       		.byte	0
 9659 0035 FF       		.byte	-1
 9660 0036 13       		.byte	19
 9661 0037 50       		.byte	80
 9662 0038 40       		.byte	64
 9663 0039 05       		.byte	5
 9664 003a 70       		.byte	112
 9665 003b 68       		.byte	104
 9666 003c 5E       		.byte	94
 9667 003d 62       		.byte	98
 9668 003e BB       		.byte	-69
 9669 003f 96       		.byte	-106
 9670 0040 C0       		.byte	-64
 9671 0041 04       		.byte	4
 9672 0042 2A       		.byte	42
 9673 0043 84       		.byte	-124
 9674 0044 F0       		.byte	-16
 9675 0045 2D       		.byte	45
 9676 0046 00       		.byte	0
 9677 0047 FF       		.byte	-1
 9678 0048 13       		.byte	19
 9679 0049 51       		.byte	81
 9680 004a 48       		.byte	72
 9681 004b 05       		.byte	5
 9682 004c 70       		.byte	112
 9683 004d 60       		.byte	96
 9684 004e 5E       		.byte	94
 9685 004f 7A       		.byte	122
 9686 0050 4A       		.byte	74
 9687 0051 4D       		.byte	77
 9688 0052 F0       		.byte	-16
 9689 0053 04       		.byte	4
 9690 0054 2A       		.byte	42
 9691 0055 84       		.byte	-124
 9692 0056 F0       		.byte	-16
 9693 0057 2D       		.byte	45
 9694 0058 00       		.byte	0
 9695 0059 FF       		.byte	-1
 9696              		.text
 9697              	.Letext0:
 9698              		.file 2 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_
ARM GAS  /tmp/ccnKW75d.s 			page 263


 9699              		.file 3 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 9700              		.file 4 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 9701              		.file 5 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 9702              		.file 6 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 9703              		.file 7 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 9704              		.file 8 "VS4210/VXIS_Extern_Define.h"
 9705              		.file 9 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 9706              		.file 10 "TP2824/tpinc/TP2802.h"
 9707              		.file 11 "sw_i2c/VX_swi2c.h"
 9708              		.file 12 "VS4210/VS4210.h"
 9709              		.file 13 "Drivers/CMSIS/Include/core_cm3.h"
 9710              		.file 14 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 9711              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 9712              		.file 16 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdio.h"
 9713              		.file 17 "VS4210/Printf.h"
 9714              		.file 18 "VS4210/keyremo.h"
 9715              		.file 19 "<built-in>"
ARM GAS  /tmp/ccnKW75d.s 			page 264


DEFINED SYMBOLS
                            *ABS*:0000000000000000 TP2802.c
     /tmp/ccnKW75d.s:16     .text.tp2824_reset_default:0000000000000000 $t
     /tmp/ccnKW75d.s:22     .text.tp2824_reset_default:0000000000000000 tp2824_reset_default
     /tmp/ccnKW75d.s:45     .text.tp28xx_SYSCLK_V1:0000000000000000 $t
     /tmp/ccnKW75d.s:51     .text.tp28xx_SYSCLK_V1:0000000000000000 tp28xx_SYSCLK_V1
     /tmp/ccnKW75d.s:94     .text.tp28xx_SYSCLK_V1:0000000000000028 $d
     /tmp/ccnKW75d.s:99     .text.tp28xx_SYSCLK_V2:0000000000000000 $t
     /tmp/ccnKW75d.s:105    .text.tp28xx_SYSCLK_V2:0000000000000000 tp28xx_SYSCLK_V2
     /tmp/ccnKW75d.s:150    .text.tp28xx_SYSCLK_V2:000000000000002c $d
     /tmp/ccnKW75d.s:155    .text.tp2853C_reset_default:0000000000000000 $t
     /tmp/ccnKW75d.s:161    .text.tp2853C_reset_default:0000000000000000 tp2853C_reset_default
     /tmp/ccnKW75d.s:208    .text.TP28xx_reset_default:0000000000000000 $t
     /tmp/ccnKW75d.s:214    .text.TP28xx_reset_default:0000000000000000 TP28xx_reset_default
     /tmp/ccnKW75d.s:263    .text.I2CDeviceSet1:0000000000000000 $t
     /tmp/ccnKW75d.s:270    .text.I2CDeviceSet1:0000000000000000 I2CDeviceSet1
     /tmp/ccnKW75d.s:310    .text.I2CDeviceSet2:0000000000000000 $t
     /tmp/ccnKW75d.s:317    .text.I2CDeviceSet2:0000000000000000 I2CDeviceSet2
     /tmp/ccnKW75d.s:361    .text.SetRegPage:0000000000000000 $t
     /tmp/ccnKW75d.s:368    .text.SetRegPage:0000000000000000 SetRegPage
     /tmp/ccnKW75d.s:392    .text.Set_VidRes:0000000000000000 $t
     /tmp/ccnKW75d.s:399    .text.Set_VidRes:0000000000000000 Set_VidRes
     /tmp/ccnKW75d.s:422    .text.Set_VidRes:0000000000000012 $d
     /tmp/ccnKW75d.s:461    .text.Set_VidRes:0000000000000060 $t
     /tmp/ccnKW75d.s:888    .text.Set_VidRes:0000000000000278 $d
                            *COM*:0000000000000001 mode
                            *COM*:0000000000000001 ManVidResRx
                            *COM*:0000000000000001 chip
     /tmp/ccnKW75d.s:921    .text.Set_HDA:0000000000000000 $t
     /tmp/ccnKW75d.s:928    .text.Set_HDA:0000000000000000 Set_HDA
     /tmp/ccnKW75d.s:950    .text.Set_HDA:000000000000000e $d
     /tmp/ccnKW75d.s:964    .text.Set_HDA:000000000000001c $t
     /tmp/ccnKW75d.s:1064   .text.Set_HDA:00000000000000a0 $d
     /tmp/ccnKW75d.s:1074   .text.Set_HDC:0000000000000000 $t
     /tmp/ccnKW75d.s:1081   .text.Set_HDC:0000000000000000 Set_HDC
     /tmp/ccnKW75d.s:1101   .text.Set_HDC:000000000000000e $d
     /tmp/ccnKW75d.s:1115   .text.Set_HDC:000000000000001c $t
     /tmp/ccnKW75d.s:1209   .text.Set_HDC:000000000000009c $d
     /tmp/ccnKW75d.s:1218   .text.Det_VidRes:0000000000000000 $t
     /tmp/ccnKW75d.s:1225   .text.Det_VidRes:0000000000000000 Det_VidRes
     /tmp/ccnKW75d.s:1275   .text.Det_VidRes:000000000000002c $d
     /tmp/ccnKW75d.s:1281   .text.Det_VideoLoss:0000000000000000 $t
     /tmp/ccnKW75d.s:1288   .text.Det_VideoLoss:0000000000000000 Det_VideoLoss
     /tmp/ccnKW75d.s:1333   .text.Det_VideoLoss:000000000000002c $d
     /tmp/ccnKW75d.s:1339   .text.ManualAGC:0000000000000000 $t
     /tmp/ccnKW75d.s:1346   .text.ManualAGC:0000000000000000 ManualAGC
     /tmp/ccnKW75d.s:1433   .text.ManualAGC:0000000000000064 $d
     /tmp/ccnKW75d.s:1438   .text.ReadGain:0000000000000000 $t
     /tmp/ccnKW75d.s:1445   .text.ReadGain:0000000000000000 ReadGain
     /tmp/ccnKW75d.s:1471   .text.SetCGain:0000000000000000 $t
     /tmp/ccnKW75d.s:1478   .text.SetCGain:0000000000000000 SetCGain
     /tmp/ccnKW75d.s:1628   .text.INPUT_VIDEO_CHECK:0000000000000000 $t
     /tmp/ccnKW75d.s:1635   .text.INPUT_VIDEO_CHECK:0000000000000000 INPUT_VIDEO_CHECK
     /tmp/ccnKW75d.s:1650   .text.INPUT_VIDEO_CHECK:000000000000000c $d
     /tmp/ccnKW75d.s:1947   .text.INPUT_VIDEO_CHECK:0000000000000114 $d
     /tmp/ccnKW75d.s:1952   .text.Det_HLock:0000000000000000 $t
     /tmp/ccnKW75d.s:1959   .text.Det_HLock:0000000000000000 Det_HLock
ARM GAS  /tmp/ccnKW75d.s 			page 265


     /tmp/ccnKW75d.s:1993   .text.Set_ResWithAutoDet:0000000000000000 $t
     /tmp/ccnKW75d.s:2000   .text.Set_ResWithAutoDet:0000000000000000 Set_ResWithAutoDet
     /tmp/ccnKW75d.s:2071   .text.Set_ResWithAutoDet:0000000000000044 $d
     /tmp/ccnKW75d.s:2076   .text.Scan_Channels:0000000000000000 $t
     /tmp/ccnKW75d.s:2083   .text.Scan_Channels:0000000000000000 Scan_Channels
     /tmp/ccnKW75d.s:2140   .text.Set_PLL_StartUp:0000000000000000 $t
     /tmp/ccnKW75d.s:2147   .text.Set_PLL_StartUp:0000000000000000 Set_PLL_StartUp
     /tmp/ccnKW75d.s:2182   .text.Init_TP280x_RegSet:0000000000000000 $t
     /tmp/ccnKW75d.s:2189   .text.Init_TP280x_RegSet:0000000000000000 Init_TP280x_RegSet
     /tmp/ccnKW75d.s:2273   .text.Init_TP280x_RegSet:0000000000000064 $d
     /tmp/ccnKW75d.s:2311   .text.Init_TP280x_RegSet:000000000000008a $t
     /tmp/ccnKW75d.s:2535   .text.Init_TP280x_RegSet:0000000000000194 $d
                            *COM*:0000000000000001 TVII2CAddress
                            *COM*:0000000000000001 revision
                            *COM*:0000000000000004 flag_CVBS
                            *COM*:0000000000000004 flag_AUDIO
                            *COM*:0000000000000004 flag_MEGA
                            *COM*:0000000000000001 CurRes
                            *COM*:0000000000000001 count
                            *COM*:0000000000000001 state
                            *COM*:0000000000000001 std
     /tmp/ccnKW75d.s:2564   .text.ConvertData:0000000000000000 $t
     /tmp/ccnKW75d.s:2571   .text.ConvertData:0000000000000000 ConvertData
     /tmp/ccnKW75d.s:2650   .text.ConvertData:0000000000000050 $d
                            *COM*:0000000000000002 PTZ_pelco
                            *COM*:0000000000000010 PTZ_buf
     /tmp/ccnKW75d.s:2656   .text.SwapBit:0000000000000000 $t
     /tmp/ccnKW75d.s:2663   .text.SwapBit:0000000000000000 SwapBit
     /tmp/ccnKW75d.s:2756   .text.SwapBit:0000000000000058 $d
                            *COM*:0000000000000001 crc
     /tmp/ccnKW75d.s:2762   .text.AHDBitsReverse:0000000000000000 $t
     /tmp/ccnKW75d.s:2769   .text.AHDBitsReverse:0000000000000000 AHDBitsReverse
     /tmp/ccnKW75d.s:2870   .text.HDC_SetData:0000000000000000 $t
     /tmp/ccnKW75d.s:2877   .text.HDC_SetData:0000000000000000 HDC_SetData
     /tmp/ccnKW75d.s:2933   .text.HDC_SetData:0000000000000044 $d
     /tmp/ccnKW75d.s:2938   .text.HDA_SetData:0000000000000000 $t
     /tmp/ccnKW75d.s:2945   .text.HDA_SetData:0000000000000000 HDA_SetData
     /tmp/ccnKW75d.s:2990   .text.HDA_SetData:000000000000002c $d
     /tmp/ccnKW75d.s:2995   .text.TVICommandToAHData:0000000000000000 $t
     /tmp/ccnKW75d.s:3002   .text.TVICommandToAHData:0000000000000000 TVICommandToAHData
     /tmp/ccnKW75d.s:3322   .text.TVICommandToAHData:00000000000001b8 $d
                            *COM*:0000000000000001 TVI_speed
                            *COM*:0000000000000001 AHDcmd3
                            *COM*:0000000000000001 presetNum
                            *COM*:0000000000000001 AHDcmd4
                            *COM*:0000000000000001 TVI_Command
                            *COM*:0000000000000001 AHDcmd1
                            *COM*:0000000000000001 AHDcmd2
     /tmp/ccnKW75d.s:3333   .text.ACPSTOPCOMMAND:0000000000000000 $t
     /tmp/ccnKW75d.s:3340   .text.ACPSTOPCOMMAND:0000000000000000 ACPSTOPCOMMAND
     /tmp/ccnKW75d.s:3425   .text.Get_2824cIrq:0000000000000000 $t
     /tmp/ccnKW75d.s:3432   .text.Get_2824cIrq:0000000000000000 Get_2824cIrq
     /tmp/ccnKW75d.s:3969   .text.Get_2824cIrq:00000000000002d8 $d
                            *COM*:0000000000000004 ptztxflag
                            *COM*:000000000000001a tpRxD
                            *COM*:000000000000000c COCRX4
                            *COM*:000000000000000c COCRX3
ARM GAS  /tmp/ccnKW75d.s 			page 266


                            *COM*:000000000000000c COCRX2
     /tmp/ccnKW75d.s:3990   .text.Get_2824cIrq:0000000000000320 $t
     /tmp/ccnKW75d.s:4475   .text.Get_2824cIrq:00000000000005ae $d
     /tmp/ccnKW75d.s:4485   .text.Get_2824cIrq:00000000000005b8 $t
     /tmp/ccnKW75d.s:4536   .text.Get_2824cIrq:0000000000000600 $d
                            *COM*:000000000000000c COCRX1
                            *COM*:0000000000000001 TVI_Chksum
     /tmp/ccnKW75d.s:4556   .text.Get_2824cIrq:0000000000000648 $t
     /tmp/ccnKW75d.s:4799   .text.Get_2824cIrq:00000000000007b8 $d
     /tmp/ccnKW75d.s:4814   .text.TP2824_PTZ_init:0000000000000000 $t
     /tmp/ccnKW75d.s:4821   .text.TP2824_PTZ_init:0000000000000000 TP2824_PTZ_init
     /tmp/ccnKW75d.s:5002   .text.TP2824_PTZ_mode:0000000000000000 $t
     /tmp/ccnKW75d.s:5009   .text.TP2824_PTZ_mode:0000000000000000 TP2824_PTZ_mode
     /tmp/ccnKW75d.s:5057   .text.TP2824_PTZ_mode:000000000000002c $d
     /tmp/ccnKW75d.s:5063   .text.TP2824C_RX_init:0000000000000000 $t
     /tmp/ccnKW75d.s:5070   .text.TP2824C_RX_init:0000000000000000 TP2824C_RX_init
     /tmp/ccnKW75d.s:5109   .text.TP2824C_RX_init:0000000000000020 $d
     /tmp/ccnKW75d.s:5114   .text.TP2824C_PTZ_mode:0000000000000000 $t
     /tmp/ccnKW75d.s:5121   .text.TP2824C_PTZ_mode:0000000000000000 TP2824C_PTZ_mode
     /tmp/ccnKW75d.s:5165   .text.TP2824C_PTZ_mode:0000000000000024 $d
     /tmp/ccnKW75d.s:5171   .text.HDA_SetACPV2Data:0000000000000000 $t
     /tmp/ccnKW75d.s:5178   .text.HDA_SetACPV2Data:0000000000000000 HDA_SetACPV2Data
     /tmp/ccnKW75d.s:5253   .text.TP2824C_StartTX:0000000000000000 $t
     /tmp/ccnKW75d.s:5260   .text.TP2824C_StartTX:0000000000000000 TP2824C_StartTX
     /tmp/ccnKW75d.s:5332   .text.COC_test:0000000000000000 $t
     /tmp/ccnKW75d.s:5339   .text.COC_test:0000000000000000 COC_test
     /tmp/ccnKW75d.s:5370   .text.COC_test:0000000000000020 $d
     /tmp/ccnKW75d.s:5379   .text.Init_COC_PTZOUT1:0000000000000000 $t
     /tmp/ccnKW75d.s:5386   .text.Init_COC_PTZOUT1:0000000000000000 Init_COC_PTZOUT1
     /tmp/ccnKW75d.s:5571   .text.Init_COC_PTZOUT1:0000000000000114 $d
     /tmp/ccnKW75d.s:5576   .text.EQ_Detect:0000000000000000 $t
     /tmp/ccnKW75d.s:5583   .text.EQ_Detect:0000000000000000 EQ_Detect
     /tmp/ccnKW75d.s:6116   .text.EQ_Detect:00000000000002b4 $d
                            *COM*:0000000000000001 flag_LOCKED
                            *COM*:0000000000000004 sywd
                            *COM*:0000000000000001 CurCH
     /tmp/ccnKW75d.s:6141   .text.EQ_Detect:0000000000000310 $t
     /tmp/ccnKW75d.s:6616   .text.EQ_Detect:0000000000000608 $d
                            *COM*:0000000000000004 egain
     /tmp/ccnKW75d.s:6636   .text.EQ_Detect:000000000000064c $t
     /tmp/ccnKW75d.s:6982   .text.EQ_Detect:0000000000000868 $d
     /tmp/ccnKW75d.s:7009   .text.Set_Mirror_COC:0000000000000000 $t
     /tmp/ccnKW75d.s:7016   .text.Set_Mirror_COC:0000000000000000 Set_Mirror_COC
     /tmp/ccnKW75d.s:7798   .rodata.TP2802_FORMAT_DataSet:0000000000000000 TP2802_FORMAT_DataSet
     /tmp/ccnKW75d.s:8354   .rodata.TP2824C_CVIHD_PTZ_DataSet:0000000000000000 TP2824C_CVIHD_PTZ_DataSet
     /tmp/ccnKW75d.s:8280   .rodata.TP2824C_CVBS_PTZ_DataSet:0000000000000000 TP2824C_CVBS_PTZ_DataSet
     /tmp/ccnKW75d.s:8178   .rodata.TP2824C_AHD_FHD_PTZ_DataSet:0000000000000000 TP2824C_AHD_FHD_PTZ_DataSet
     /tmp/ccnKW75d.s:8771   .rodata.TP2824C_TVI_FHD_PTZ_DataSet:0000000000000000 TP2824C_TVI_FHD_PTZ_DataSet
     /tmp/ccnKW75d.s:7712   .rodata.TP2802D_DataSet:0000000000000000 TP2802D_DataSet
     /tmp/ccnKW75d.s:8050   .rodata.TP2822_DataSet:0000000000000000 TP2822_DataSet
     /tmp/ccnKW75d.s:8107   .rodata.TP2823_MODE_DataSet:0000000000000000 TP2823_MODE_DataSet
     /tmp/ccnKW75d.s:8080   .rodata.TP2823_DataSet:0000000000000000 TP2823_DataSet
     /tmp/ccnKW75d.s:9373   .rodata.TP2834_MODE_DataSet:0000000000000000 TP2834_MODE_DataSet
     /tmp/ccnKW75d.s:9351   .rodata.TP2834_DataSet:0000000000000000 TP2834_DataSet
     /tmp/ccnKW75d.s:9187   .rodata.TP2833_HDA_DataSet:0000000000000000 TP2833_HDA_DataSet
     /tmp/ccnKW75d.s:9233   .rodata.TP2833_MODE_DataSet:0000000000000000 TP2833_MODE_DataSet
     /tmp/ccnKW75d.s:9161   .rodata.TP2833_DataSet:0000000000000000 TP2833_DataSet
ARM GAS  /tmp/ccnKW75d.s 			page 267


     /tmp/ccnKW75d.s:9309   .rodata.TP2834_Audio_DataSet:0000000000000000 TP2834_Audio_DataSet
     /tmp/ccnKW75d.s:9534   .rodata.TP2853C_HDC_DataSet:0000000000000000 TP2853C_HDC_DataSet
     /tmp/ccnKW75d.s:9478   .rodata.TP2853C_HDA_DataSet:0000000000000000 TP2853C_HDA_DataSet
     /tmp/ccnKW75d.s:9605   .rodata.TP2853C_MODE_DataSet:0000000000000000 TP2853C_MODE_DataSet
     /tmp/ccnKW75d.s:9444   .rodata.TP2853C_DataSet:0000000000000000 TP2853C_DataSet
     /tmp/ccnKW75d.s:8544   .rodata.TP2824C_HDC_DataSet:0000000000000000 TP2824C_HDC_DataSet
     /tmp/ccnKW75d.s:8949   .rodata.TP2826_HDC_DataSet:0000000000000000 TP2826_HDC_DataSet
     /tmp/ccnKW75d.s:8458   .rodata.TP2824C_HDA_DataSet:0000000000000000 TP2824C_HDA_DataSet
     /tmp/ccnKW75d.s:8883   .rodata.TP2826_HDA_DataSet:0000000000000000 TP2826_HDA_DataSet
     /tmp/ccnKW75d.s:8650   .rodata.TP2824C_MODE_DataSet:0000000000000000 TP2824C_MODE_DataSet
     /tmp/ccnKW75d.s:9055   .rodata.TP2826_MODE_DataSet:0000000000000000 TP2826_MODE_DataSet
     /tmp/ccnKW75d.s:8853   .rodata.TP2826_DataSet:0000000000000000 TP2826_DataSet
     /tmp/ccnKW75d.s:8428   .rodata.TP2824C_DataSet:0000000000000000 TP2824C_DataSet
     /tmp/ccnKW75d.s:7149   .bss.QuadBoxMode:0000000000000000 QuadBoxMode
     /tmp/ccnKW75d.s:7144   .bss.QuadBoxId:0000000000000000 QuadBoxId
     /tmp/ccnKW75d.s:7138   .bss.PtzTxChNum:0000000000000000 PtzTxChNum
     /tmp/ccnKW75d.s:7164   .data.PreCOCSelectModeType:0000000000000000 PreCOCSelectModeType
     /tmp/ccnKW75d.s:7155   .data.COCSelectModeType:0000000000000000 COCSelectModeType
     /tmp/ccnKW75d.s:7132   .bss.Flisheye_VLOSS_Count:0000000000000000 Flisheye_VLOSS_Count
     /tmp/ccnKW75d.s:7173   .data.TP_InputMode:0000000000000000 TP_InputMode
                            *COM*:0000000000000001 Flisheye_COC
     /tmp/ccnKW75d.s:7126   .bss.Flisheye_CAM:0000000000000000 Flisheye_CAM
     /tmp/ccnKW75d.s:7619   .rodata.REG_FA:0000000000000000 REG_FA
     /tmp/ccnKW75d.s:7609   .rodata.REG_F7:0000000000000000 REG_F7
     /tmp/ccnKW75d.s:7599   .rodata.REG_F6:0000000000000000 REG_F6
     /tmp/ccnKW75d.s:7629   .rodata.SYS_AND:0000000000000000 SYS_AND
     /tmp/ccnKW75d.s:7640   .rodata.SYS_MODE:0000000000000000 SYS_MODE
                            *COM*:0000000000000001 VideoSave
     /tmp/ccnKW75d.s:7180   .data.newInRes:0000000000000000 newInRes
     /tmp/ccnKW75d.s:7123   .bss.Flisheye_CAM:0000000000000000 $d
     /tmp/ccnKW75d.s:7129   .bss.Flisheye_VLOSS_Count:0000000000000000 $d
     /tmp/ccnKW75d.s:7139   .bss.PtzTxChNum:0000000000000000 $d
     /tmp/ccnKW75d.s:7145   .bss.QuadBoxId:0000000000000000 $d
     /tmp/ccnKW75d.s:7150   .bss.QuadBoxMode:0000000000000000 $d
     /tmp/ccnKW75d.s:7152   .data.COCSelectModeType:0000000000000000 $d
     /tmp/ccnKW75d.s:7161   .data.PreCOCSelectModeType:0000000000000000 $d
     /tmp/ccnKW75d.s:7176   .data.newInRes:0000000000000000 $d
     /tmp/ccnKW75d.s:7186   .rodata.Det_VidRes.str1.4:0000000000000000 $d
     /tmp/ccnKW75d.s:7193   .rodata.Det_VideoLoss.str1.4:0000000000000000 $d
     /tmp/ccnKW75d.s:7199   .rodata.EQ_Detect.str1.4:0000000000000000 $d
     /tmp/ccnKW75d.s:7273   .rodata.Get_2824cIrq.str1.4:0000000000000000 $d
     /tmp/ccnKW75d.s:7303   .rodata.Init_COC_PTZOUT1.str1.4:0000000000000000 $d
     /tmp/ccnKW75d.s:7307   .rodata.Init_TP280x_RegSet.str1.4:0000000000000000 $d
     /tmp/ccnKW75d.s:7318   .rodata.ManualAGC.str1.4:0000000000000000 $d
     /tmp/ccnKW75d.s:7322   .rodata.PTZ_RX_dat.8822:0000000000000000 $d
     /tmp/ccnKW75d.s:7326   .rodata.PTZ_RX_dat.8822:0000000000000000 PTZ_RX_dat.8822
     /tmp/ccnKW75d.s:7403   .rodata.PTZ_dat.8812:0000000000000000 $d
     /tmp/ccnKW75d.s:7407   .rodata.PTZ_dat.8812:0000000000000000 PTZ_dat.8812
     /tmp/ccnKW75d.s:7465   .rodata.PTZ_dat.8834:0000000000000000 $d
     /tmp/ccnKW75d.s:7469   .rodata.PTZ_dat.8834:0000000000000000 PTZ_dat.8834
     /tmp/ccnKW75d.s:7543   .rodata.PTZ_reg.8811:0000000000000000 $d
     /tmp/ccnKW75d.s:7547   .rodata.PTZ_reg.8811:0000000000000000 PTZ_reg.8811
     /tmp/ccnKW75d.s:7577   .rodata.PTZ_reg.8833:0000000000000000 $d
     /tmp/ccnKW75d.s:7581   .rodata.PTZ_reg.8833:0000000000000000 PTZ_reg.8833
     /tmp/ccnKW75d.s:7595   .rodata.REG_F6:0000000000000000 $d
     /tmp/ccnKW75d.s:7605   .rodata.REG_F7:0000000000000000 $d
     /tmp/ccnKW75d.s:7615   .rodata.REG_FA:0000000000000000 $d
ARM GAS  /tmp/ccnKW75d.s 			page 268


     /tmp/ccnKW75d.s:7625   .rodata.SYS_AND:0000000000000000 $d
     /tmp/ccnKW75d.s:7636   .rodata.SYS_MODE:0000000000000000 $d
     /tmp/ccnKW75d.s:7647   .rodata.Set_ResWithAutoDet.str1.4:0000000000000000 $d
     /tmp/ccnKW75d.s:7651   .rodata.Set_VidRes.str1.4:0000000000000000 $d
     /tmp/ccnKW75d.s:7709   .rodata.TP2802D_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:7794   .rodata.TP2802_FORMAT_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:8047   .rodata.TP2822_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:8076   .rodata.TP2823_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:8104   .rodata.TP2823_MODE_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:8174   .rodata.TP2824C_AHD_FHD_PTZ_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:8276   .rodata.TP2824C_CVBS_PTZ_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:8350   .rodata.TP2824C_CVIHD_PTZ_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:8424   .rodata.TP2824C_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:8454   .rodata.TP2824C_HDA_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:8540   .rodata.TP2824C_HDC_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:8646   .rodata.TP2824C_MODE_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:8767   .rodata.TP2824C_TVI_FHD_PTZ_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:8849   .rodata.TP2826_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:8879   .rodata.TP2826_HDA_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:8945   .rodata.TP2826_HDC_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:9051   .rodata.TP2826_MODE_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:9157   .rodata.TP2833_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:9183   .rodata.TP2833_HDA_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:9229   .rodata.TP2833_MODE_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:9305   .rodata.TP2834_Audio_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:9347   .rodata.TP2834_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:9369   .rodata.TP2834_MODE_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:9440   .rodata.TP2853C_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:9474   .rodata.TP2853C_HDA_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:9530   .rodata.TP2853C_HDC_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:9601   .rodata.TP2853C_MODE_DataSet:0000000000000000 $d
     /tmp/ccnKW75d.s:1685   .text.INPUT_VIDEO_CHECK:000000000000002f $d
     /tmp/ccnKW75d.s:1685   .text.INPUT_VIDEO_CHECK:0000000000000030 $t

UNDEFINED SYMBOLS
tp28xx_byte_write
tp28xx_byte_read
delay
printf
puts
CURRENT_CH
VS4210_Rx_NoSignal
Set_Video_Loss_OSD
SelectInputMode
HAL_Delay
Printf
msleep
VXISI2CWrite
HS_Select_Win
MCUTimerActiveTimerEvent
gbVXIS_InputMode
gbVXIS_OuputModeflg
