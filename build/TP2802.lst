ARM GAS  /tmp/ccSZlabO.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"TP2802.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.tp2824_reset_default,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  23              	tp2824_reset_default:
  24              	.LFB76:
  25              		.file 1 "TP2824/TP2802.c"
   1:TP2824/TP2802.c **** // *****************************************************
   2:TP2824/TP2802.c **** // Company : Techpoint Inc
   3:TP2824/TP2802.c **** // $Date: 2014-03-10
   4:TP2824/TP2802.c **** // $Log:  $
   5:TP2824/TP2802.c **** // ******************************************************
   6:TP2824/TP2802.c **** #include "VXIS_Extern_Define.h"
   7:TP2824/TP2802.c **** #include "stdlib.h"
   8:TP2824/TP2802.c **** //#include "tpinc/Device_Rx.h"
   9:TP2824/TP2802.c **** #include "tpinc/TP2802.h"
  10:TP2824/TP2802.c **** 
  11:TP2824/TP2802.c **** #include "VX_swi2c.h"
  12:TP2824/TP2802.c **** #include "VS4210.h"
  13:TP2824/TP2802.c **** #include "etc_eep.h"
  14:TP2824/TP2802.c **** #include "keyremo.h"
  15:TP2824/TP2802.c **** #include "Printf.h"
  16:TP2824/TP2802.c **** #include "stm32f1xx_hal.h"
  17:TP2824/TP2802.c **** 
  18:TP2824/TP2802.c **** //extern tByte ManVidResRx;
  19:TP2824/TP2802.c **** 
  20:TP2824/TP2802.c **** tByte ManVidResRx;
  21:TP2824/TP2802.c **** extern tByte ManSelCh;
  22:TP2824/TP2802.c **** extern tByte gRxLoopFlg;
  23:TP2824/TP2802.c **** 
  24:TP2824/TP2802.c **** #ifndef TRUE
  25:TP2824/TP2802.c **** #define TRUE 1
  26:TP2824/TP2802.c **** #endif
  27:TP2824/TP2802.c **** 
  28:TP2824/TP2802.c **** #ifndef FALSE
  29:TP2824/TP2802.c **** #define FALSE 0
  30:TP2824/TP2802.c **** #endif
  31:TP2824/TP2802.c **** 
  32:TP2824/TP2802.c **** //TP2802D EQ for short cable option
  33:TP2824/TP2802.c **** #define TP2802D_EQ_SHORT 0x0d
ARM GAS  /tmp/ccSZlabO.s 			page 2


  34:TP2824/TP2802.c **** #define TP2802D_CGAIN_SHORT 0x74
  35:TP2824/TP2802.c **** //#define TP2802D_EQ_SHORT 0x01
  36:TP2824/TP2802.c **** //#define TP2802D_CGAIN_SHORT 0x70
  37:TP2824/TP2802.c **** 
  38:TP2824/TP2802.c **** //#define CVI_TEST 0
  39:TP2824/TP2802.c **** //#define AHD_TEST 1
  40:TP2824/TP2802.c **** 
  41:TP2824/TP2802.c **** #define CH_PER_CHIP 1//0x04
  42:TP2824/TP2802.c **** #define MAX_COUNT 	0xff
  43:TP2824/TP2802.c **** 
  44:TP2824/TP2802.c **** //extern void CreateMDIN340VideoInstance(void);
  45:TP2824/TP2802.c **** 
  46:TP2824/TP2802.c **** tByte newInRes[4] = {7,7,7,7} ;
  47:TP2824/TP2802.c **** 
  48:TP2824/TP2802.c **** extern bit DetAutoRes;
  49:TP2824/TP2802.c **** tByte	state[CH_PER_CHIP];
  50:TP2824/TP2802.c **** tByte	count[CH_PER_CHIP];
  51:TP2824/TP2802.c **** tByte	mode[CH_PER_CHIP];
  52:TP2824/TP2802.c **** tByte	std[CH_PER_CHIP];
  53:TP2824/TP2802.c **** tByte	egain[CH_PER_CHIP][4];
  54:TP2824/TP2802.c **** tByte	VideoSave[CH_PER_CHIP];
  55:TP2824/TP2802.c **** //tByte	ch_boot_reset[CH_PER_CHIP]={0,0,0,0};
  56:TP2824/TP2802.c **** tByte	revision;
  57:TP2824/TP2802.c **** tByte	chip;
  58:TP2824/TP2802.c **** tByte	flag_LOCKED;
  59:TP2824/TP2802.c **** tByte   TVII2CAddress;
  60:TP2824/TP2802.c **** tByte	PTZ_buf[16];
  61:TP2824/TP2802.c **** tWord   PTZ_pelco;
  62:TP2824/TP2802.c **** tByte   CurRes;
  63:TP2824/TP2802.c **** tByte   CurCH;
  64:TP2824/TP2802.c **** tByte crc;
  65:TP2824/TP2802.c **** bit sywd;
  66:TP2824/TP2802.c **** bit flag_CVBS;
  67:TP2824/TP2802.c **** bit flag_AUDIO;
  68:TP2824/TP2802.c **** bit flag_MEGA;
  69:TP2824/TP2802.c **** 
  70:TP2824/TP2802.c **** tcByte SYS_MODE[]= {0x01,0x02,0x04,0x08,0x0f};
  71:TP2824/TP2802.c **** tcByte SYS_AND[] = {0xfe,0xfd,0xfb,0xf7,0xf0};
  72:TP2824/TP2802.c **** 
  73:TP2824/TP2802.c **** tcByte REG_F6[4]= {0x00,0x11,0x22,0x33};
  74:TP2824/TP2802.c **** tcByte REG_F7[4]= {0x44,0x55,0x66,0x77};
  75:TP2824/TP2802.c **** tcByte REG_FA[4]= {0xBB,0xCC,0xDD,0xEE};
  76:TP2824/TP2802.c **** 
  77:TP2824/TP2802.c **** //cocrx
  78:TP2824/TP2802.c **** tByte     tpRxD[26];
  79:TP2824/TP2802.c **** BYTE COCRX1[12];
  80:TP2824/TP2802.c **** BYTE COCRX2[12];
  81:TP2824/TP2802.c **** BYTE COCRX3[12];
  82:TP2824/TP2802.c **** BYTE COCRX4[12];
  83:TP2824/TP2802.c **** /*
  84:TP2824/TP2802.c **** extern BYTE AHDcmd1,AHDcmd2,AHDcmd3,AHDcmd4;
  85:TP2824/TP2802.c **** extern BYTE TVI_Command;
  86:TP2824/TP2802.c **** extern BYTE presetNum;
  87:TP2824/TP2802.c **** extern BYTE TVI_Chksum;
  88:TP2824/TP2802.c **** extern BYTE TVI_speed;
  89:TP2824/TP2802.c **** extern bit ptztxflag;
  90:TP2824/TP2802.c **** */
ARM GAS  /tmp/ccSZlabO.s 			page 3


  91:TP2824/TP2802.c **** BYTE AHDcmd1,AHDcmd2,AHDcmd3,AHDcmd4;
  92:TP2824/TP2802.c **** BYTE TVI_Command;
  93:TP2824/TP2802.c **** BYTE presetNum;
  94:TP2824/TP2802.c **** BYTE TVI_Chksum;
  95:TP2824/TP2802.c **** BYTE TVI_speed;
  96:TP2824/TP2802.c **** bit ptztxflag;
  97:TP2824/TP2802.c **** BYTE Flisheye_CAM[4]={0};
  98:TP2824/TP2802.c **** BYTE Flisheye_COC;
  99:TP2824/TP2802.c **** tByte TP_InputMode=7;
 100:TP2824/TP2802.c **** 
 101:TP2824/TP2802.c **** WORD Flisheye_VLOSS_Count[4]={0};
 102:TP2824/TP2802.c **** 
 103:TP2824/TP2802.c **** //BYTE Flisheye_CAM[4]={1,1,1,1};
 104:TP2824/TP2802.c **** BYTE	COCSelectModeType[4]={5,5,5,5};
 105:TP2824/TP2802.c **** BYTE	PreCOCSelectModeType[4]={5,5,5,5};
 106:TP2824/TP2802.c **** 
 107:TP2824/TP2802.c **** //extern BYTE PtzTxChNum;//0:ch1 / 1:ch2 / 2:ch3 / 3:ch4
 108:TP2824/TP2802.c **** 
 109:TP2824/TP2802.c **** BYTE PtzTxChNum=0;//0:ch1 / 1:ch2 / 2:ch3 / 3:ch4
 110:TP2824/TP2802.c **** //extern BYTE QuadBoxId;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
 111:TP2824/TP2802.c **** BYTE QuadBoxId=0;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
 112:TP2824/TP2802.c **** BYTE QuadBoxMode=0;
 113:TP2824/TP2802.c **** 
 114:TP2824/TP2802.c **** extern BYTE SelectInputMode;
 115:TP2824/TP2802.c **** extern BYTE BOOT_ISSUE;
 116:TP2824/TP2802.c **** extern tByte  OSDSecCount;
 117:TP2824/TP2802.c **** extern tByte  OSDStateFlg;
 118:TP2824/TP2802.c **** 
 119:TP2824/TP2802.c **** 
 120:TP2824/TP2802.c **** extern BYTE	SelectModeType;
 121:TP2824/TP2802.c **** extern volatile BYTE MainSetSelectMode[13];
 122:TP2824/TP2802.c **** extern BYTE BOOT_ISSUE;
 123:TP2824/TP2802.c **** extern  BYTE CURRENT_CH;
 124:TP2824/TP2802.c **** extern BYTE BOX_ISSUE;
 125:TP2824/TP2802.c **** extern BYTE TriggerStatus;
 126:TP2824/TP2802.c **** extern BYTE TriggerFlag;
 127:TP2824/TP2802.c **** extern BYTE TriggerMode;
 128:TP2824/TP2802.c **** extern BYTE	PowerFlag;
 129:TP2824/TP2802.c **** 
 130:TP2824/TP2802.c **** 
 131:TP2824/TP2802.c **** enum
 132:TP2824/TP2802.c **** {
 133:TP2824/TP2802.c ****     TP2802C=0x02,
 134:TP2824/TP2802.c ****     TP2804 =0x04,
 135:TP2824/TP2802.c ****     TP2802D=0x05,
 136:TP2824/TP2802.c ****     TP2822 =0x22,
 137:TP2824/TP2802.c ****     TP2823 =0x23,
 138:TP2824/TP2802.c ****     TP2834 =0x24,
 139:TP2824/TP2802.c ****     TP2833 =0x25,
 140:TP2824/TP2802.c ****     TP2853C=0x26,
 141:TP2824/TP2802.c ****     TP2824C=0x27,
 142:TP2824/TP2802.c ****     TP2826 =0x2f
 143:TP2824/TP2802.c **** };
 144:TP2824/TP2802.c **** 
 145:TP2824/TP2802.c **** tcByte TP2824C_DataSet[] =
 146:TP2824/TP2802.c **** {
 147:TP2824/TP2802.c ****     0x40, 0x04,
ARM GAS  /tmp/ccSZlabO.s 			page 4


 148:TP2824/TP2802.c ****     0x07, 0xC0,
 149:TP2824/TP2802.c ****     0x0B, 0xC0,
 150:TP2824/TP2802.c ****     0x21, 0x84,
 151:TP2824/TP2802.c ****     0x38, 0x00,
 152:TP2824/TP2802.c ****     0x3A, 0x22,
 153:TP2824/TP2802.c ****     0x3B, 0x05,
 154:TP2824/TP2802.c ****     0x26, 0x04,
 155:TP2824/TP2802.c ****     //0x4d, 0x07,
 156:TP2824/TP2802.c ****     //0x4e, 0x05,
 157:TP2824/TP2802.c ****     0x4d, 0x0F,
 158:TP2824/TP2802.c ****     0x4e, 0x0F,  //chunyu
 159:TP2824/TP2802.c ****     0xf1, 0x00,//different with TP2826
 160:TP2824/TP2802.c **** /*cocrx
 161:TP2824/TP2802.c **** //PTZ RX
 162:TP2824/TP2802.c **** //	0xc6, 0x1F,//0x19,	//TXBITCNNUM
 163:TP2824/TP2802.c **** //	0xc7, 0x78,		//TXHST
 164:TP2824/TP2802.c **** 	0xcb, 0x07,		//RXLINE1
 165:TP2824/TP2802.c **** 	0xcc, 0x08,		//RXLINE2
 166:TP2824/TP2802.c **** 	0xcd, 0x00,//0x09,		//RXLINE3
 167:TP2824/TP2802.c **** 	0xce, 0x00,//0x0a,		//RXLINE4
 168:TP2824/TP2802.c **** 	0xcf, 0x04,		//RXFREQ
 169:TP2824/TP2802.c **** 	0xd0, 0x00,		//RXFREQ
 170:TP2824/TP2802.c **** 	0xd1, 0x00,		//RXFREQ
 171:TP2824/TP2802.c **** 	0xd2, 0x60,		//RXTHLEVEL
 172:TP2824/TP2802.c **** 	0xd3, 0x10,		//RXHINUM
 173:TP2824/TP2802.c **** 	0xd4, 0x06,		//RXHST / RXHEND
 174:TP2824/TP2802.c **** 	0xd5, 0xbe,		//RXHST
 175:TP2824/TP2802.c **** 	0xd6, 0x39,		//RXHEND
 176:TP2824/TP2802.c **** 	0xd7, 0x27,		//RXBITNUM
 177:TP2824/TP2802.c **** */	
 178:TP2824/TP2802.c ****     0xff, 0xff
 179:TP2824/TP2802.c **** };
 180:TP2824/TP2802.c **** 
 181:TP2824/TP2802.c **** tcByte TP2826_DataSet[] =
 182:TP2824/TP2802.c **** {
 183:TP2824/TP2802.c ****     0x40, 0x04,
 184:TP2824/TP2802.c ****     0x07, 0xC0,
 185:TP2824/TP2802.c ****     0x0B, 0xC0,
 186:TP2824/TP2802.c ****     0x21, 0x84,
 187:TP2824/TP2802.c ****     0x38, 0x00,
 188:TP2824/TP2802.c ****     0x3A, 0x22,
 189:TP2824/TP2802.c ****     0x3B, 0x05,
 190:TP2824/TP2802.c ****     0x26, 0x04,
 191:TP2824/TP2802.c ****     0x4d, 0x07,
 192:TP2824/TP2802.c ****     0x4e, 0x05,
 193:TP2824/TP2802.c ****     0xf1, 0x07,
 194:TP2824/TP2802.c ****     0xff, 0xff
 195:TP2824/TP2802.c **** };
 196:TP2824/TP2802.c **** 
 197:TP2824/TP2802.c **** 
 198:TP2824/TP2802.c **** tcByte TP2826_MODE_DataSet[5][20]=
 199:TP2824/TP2802.c **** {
 200:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0x2c,0x21,0x22,0x23,0x25,0x27,0x28
 201:TP2824/TP2802.c ****     {0x03,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x1c,0x0a,0x84,0x36,0x3c,0xff,0x2d,0x00
 202:TP2824/TP2802.c ****     {0x13,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x18,0x0a,0x84,0x36,0x3c,0xff,0x2d,0x00
 203:TP2824/TP2802.c ****     {0x13,0x50,0x40,0x05,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x04,0x2a,0x84,0x36,0x3c,0xff,0x2d,0x00
 204:TP2824/TP2802.c ****     {0x13,0x51,0x48,0x05,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x04,0x2a,0x84,0x37,0x3f,0xff,0x2d,0x00
ARM GAS  /tmp/ccSZlabO.s 			page 5


 205:TP2824/TP2802.c **** };
 206:TP2824/TP2802.c **** tcByte TP2824C_MODE_DataSet[5][20]=
 207:TP2824/TP2802.c **** {
 208:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0x2c,0x21,0x22,0x23,0x25,0x27,0x28
 209:TP2824/TP2802.c ****     {0x03,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x1c,0x0a,0x84,0x36,0x3c,0xff,0x2d,0x00
 210:TP2824/TP2802.c ****     {0x13,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x18,0x0a,0x84,0x36,0x3c,0xff,0x2d,0x00
 211:TP2824/TP2802.c ****     {0x13,0x50,0x40,0x05,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x04,0x2a,0x84,0x36,0x3c,0xff,0x2d,0x00
 212:TP2824/TP2802.c ****     {0x13,0x51,0x48,0x05,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x04,0x2a,0x84,0x37,0x3f,0xff,0x2d,0x00
 213:TP2824/TP2802.c **** };
 214:TP2824/TP2802.c **** 
 215:TP2824/TP2802.c **** tcByte TP2826_HDA_DataSet[5][12]=
 216:TP2824/TP2802.c **** {
 217:TP2824/TP2802.c ****     {0x0c,0x20,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x21,0x25,0xff}, //ADDR
 218:TP2824/TP2802.c ****     {0x03,0x40,0x60,0x48,0x40,0x27,0x72,0x80,0x77,0x46,0xfe,0xff}, //720p30
 219:TP2824/TP2802.c ****     {0x03,0x40,0x60,0x48,0x40,0x27,0x88,0x04,0x23,0x46,0xfe,0xff}, //720p25
 220:TP2824/TP2802.c ****     {0x03,0x38,0x60,0x44,0x40,0x29,0x65,0x78,0x16,0x46,0xfe,0xff}, //1080p30
 221:TP2824/TP2802.c ****     {0x03,0x3c,0x60,0x44,0x40,0x29,0x61,0x78,0x16,0x46,0xfe,0xff}, //1080p25
 222:TP2824/TP2802.c **** };
 223:TP2824/TP2802.c **** tcByte TP2824C_HDA_DataSet[5][12]=
 224:TP2824/TP2802.c **** {
 225:TP2824/TP2802.c ****     {0x0c,0x20,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x21,0x25,0xff}, //ADDR
 226:TP2824/TP2802.c ****     {0x03,0x40,0x60,0x48,0x40,0x27,0x72,0x80,0x77,0x46,0xfe,0xff}, //720p30
 227:TP2824/TP2802.c ****     {0x03,0x40,0x60,0x48,0x40,0x27,0x88,0x04,0x23,0x46,0xfe,0xff}, //720p25
 228:TP2824/TP2802.c ****     {0x03,0x38,0x60,0x44,0x40,0x29,0x65,0x78,0x16,0x46,0xfe,0xff}, //1080p30
 229:TP2824/TP2802.c ****     {0x03,0x3c,0x60,0x44,0x40,0x29,0x61,0x78,0x16,0x46,0xfe,0xff}, //1080p25
 230:TP2824/TP2802.c **** };
 231:TP2824/TP2802.c **** tcByte TP2826_HDC_DataSet[5][20]=
 232:TP2824/TP2802.c **** {
 233:TP2824/TP2802.c ****     {0x0c,0x15,0x16,0x17,0x18,0x19,0x1a,0x1c,0x1d,0x20,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x27,0x28
 234:TP2824/TP2802.c ****     {0x03,0x13,0x08,0x00,0x19,0xd0,0x25,0x06,0x72,0x30,0x60,0x37,0x40,0x48,0x67,0x6f,0x30,0x5a,0x04
 235:TP2824/TP2802.c ****     {0x03,0x13,0x0a,0x00,0x19,0xd0,0x25,0x06,0x7a,0x3a,0x60,0x42,0x40,0x48,0x67,0x6f,0x33,0x5a,0x04
 236:TP2824/TP2802.c ****     {0x03,0x13,0x60,0x80,0x29,0x38,0x47,0x09,0x60,0x3c,0x60,0x47,0x40,0x41,0x82,0x27,0xa4,0x5a,0x04
 237:TP2824/TP2802.c ****     {0x03,0x13,0x60,0x80,0x29,0x38,0x47,0x09,0x60,0x50,0x60,0x54,0x40,0x41,0x82,0x27,0xa2,0x5a,0x04
 238:TP2824/TP2802.c **** };
 239:TP2824/TP2802.c **** tcByte TP2824C_HDC_DataSet[5][20]=
 240:TP2824/TP2802.c **** {
 241:TP2824/TP2802.c ****     {0x0c,0x15,0x16,0x17,0x18,0x19,0x1a,0x1c,0x1d,0x20,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x27,0x28
 242:TP2824/TP2802.c ****     {0x03,0x13,0x08,0x00,0x19,0xd0,0x25,0x06,0x72,0x30,0x60,0x37,0x40,0x48,0x67,0x6f,0x30,0x5a,0x04
 243:TP2824/TP2802.c ****     {0x03,0x13,0x0a,0x00,0x19,0xd0,0x25,0x06,0x7a,0x3a,0x60,0x42,0x40,0x48,0x67,0x6f,0x33,0x5a,0x04
 244:TP2824/TP2802.c ****     {0x03,0x13,0x60,0x80,0x29,0x38,0x47,0x09,0x60,0x3c,0x60,0x47,0x40,0x41,0x82,0x27,0xa4,0x5a,0x04
 245:TP2824/TP2802.c ****     {0x03,0x13,0x60,0x80,0x29,0x38,0x47,0x09,0x60,0x50,0x60,0x54,0x40,0x41,0x82,0x27,0xa2,0x5a,0x04
 246:TP2824/TP2802.c **** };
 247:TP2824/TP2802.c **** tcByte TP2853C_DataSet[] =
 248:TP2824/TP2802.c **** {
 249:TP2824/TP2802.c ****     0x40, 0x04,
 250:TP2824/TP2802.c ****     0x07, 0xC0,
 251:TP2824/TP2802.c ****     0x0B, 0xC0,
 252:TP2824/TP2802.c ****     0x21, 0x84,
 253:TP2824/TP2802.c ****     0x38, 0x00,
 254:TP2824/TP2802.c ****     0x3A, 0x32,
 255:TP2824/TP2802.c ****     0x3B, 0x05,
 256:TP2824/TP2802.c ****     0x26, 0x04,
 257:TP2824/TP2802.c ****     0x4d, 0x03,
 258:TP2824/TP2802.c ****     0x4e, 0x03,
 259:TP2824/TP2802.c ****     0x4f, 0x01,
 260:TP2824/TP2802.c ****     0xf5, 0xf0,
 261:TP2824/TP2802.c ****     0xf1,0x07,//tp2826c
ARM GAS  /tmp/ccSZlabO.s 			page 6


 262:TP2824/TP2802.c **** 
 263:TP2824/TP2802.c ****     0xff, 0xff
 264:TP2824/TP2802.c **** };
 265:TP2824/TP2802.c **** tcByte TP2853C_MODE_DataSet[5][18]=
 266:TP2824/TP2802.c **** {
 267:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0x2c,0x21,0x25,0x27,0x28,0xff}, //
 268:TP2824/TP2802.c ****     {0x03,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x0c,0x0a,0x84,0xf0,0x2d,0x00,0xff}, //
 269:TP2824/TP2802.c ****     {0x13,0x50,0x30,0x05,0x60,0x30,0x70,0x48,0xbb,0x2e,0x90,0x08,0x0a,0x84,0xf0,0x2d,0x00,0xff},	//
 270:TP2824/TP2802.c ****     {0x13,0x50,0x40,0x05,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x04,0x2a,0x84,0xf0,0x2d,0x00,0xff}, //
 271:TP2824/TP2802.c ****     {0x13,0x51,0x48,0x05,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x04,0x2a,0x84,0xf0,0x2d,0x00,0xff}  //
 272:TP2824/TP2802.c **** };
 273:TP2824/TP2802.c **** tcByte TP2853C_HDA_DataSet[5][10]=
 274:TP2824/TP2802.c **** {
 275:TP2824/TP2802.c ****     {0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x21,0x25,0xff}, //ADDR
 276:TP2824/TP2802.c ****     {0x70,0x48,0x5e,0x27,0x72,0x80,0x77,0x44,0xf0,0xff}, //720p30
 277:TP2824/TP2802.c ****     {0x70,0x48,0x5e,0x27,0x88,0x04,0x23,0x44,0xf0,0xff}, //720p25
 278:TP2824/TP2802.c ****     {0x58,0x45,0x50,0x29,0x65,0x78,0x16,0x44,0xf0,0xff}, //1080p30
 279:TP2824/TP2802.c ****     {0x58,0x45,0x40,0x29,0x61,0x78,0x16,0x44,0xf0,0xff}, //1080p25
 280:TP2824/TP2802.c **** };
 281:TP2824/TP2802.c **** tcByte TP2853C_HDC_DataSet[5][13]=
 282:TP2824/TP2802.c **** {
 283:TP2824/TP2802.c ****     {0x15,0x16,0x20,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x27,0x28,0xff}, //ADDR
 284:TP2824/TP2802.c ****     {0x13,0x40,0x50,0x60,0x42,0x40,0x48,0x67,0x2e,0x90,0x5a,0x04,0xff}, //720p30
 285:TP2824/TP2802.c ****     {0x13,0x40,0x50,0x60,0x42,0x40,0x48,0x67,0x2e,0x90,0x5a,0x04,0xff}, //720p25
 286:TP2824/TP2802.c ****     {0x13,0x20,0x48,0x60,0x45,0x40,0x41,0x83,0x2e,0x90,0x5a,0x04,0xff}, //1080p30
 287:TP2824/TP2802.c ****     {0x13,0x84,0x48,0x60,0x45,0x40,0x41,0x83,0x2e,0x90,0x5a,0x04,0xff}, //1080p25
 288:TP2824/TP2802.c **** };
 289:TP2824/TP2802.c **** 
 290:TP2824/TP2802.c **** tcByte TP2834_Audio_DataSet[]=
 291:TP2824/TP2802.c **** {
 292:TP2824/TP2802.c **** //audio
 293:TP2824/TP2802.c ****     0x40, 0x40, //audio page
 294:TP2824/TP2802.c ****     0x00, 0x01, //A1
 295:TP2824/TP2802.c ****     0x01, 0x02, //A2
 296:TP2824/TP2802.c ****     0x02, 0x03, //A3
 297:TP2824/TP2802.c ****     0x03, 0x04, //A4
 298:TP2824/TP2802.c ****     0x04, 0x11, //AUX
 299:TP2824/TP2802.c ****     0x17, 0x00,
 300:TP2824/TP2802.c ****     0x18, 0x10, //5ch mode
 301:TP2824/TP2802.c ****     0x19, 0x0f,
 302:TP2824/TP2802.c ****     0x1A, 0x15, //PB to DAC
 303:TP2824/TP2802.c ****     0x1b, 0x01, //PB master
 304:TP2824/TP2802.c ****     0x37, 0x20,
 305:TP2824/TP2802.c **** 
 306:TP2824/TP2802.c ****     0x1d, 0x08,
 307:TP2824/TP2802.c ****     0x1d, 0x00,
 308:TP2824/TP2802.c **** 
 309:TP2824/TP2802.c ****     0x3c, 0x3f,
 310:TP2824/TP2802.c ****     0x3c, 0x00,
 311:TP2824/TP2802.c **** 
 312:TP2824/TP2802.c ****     0x3d, 0x01, //ADC reset
 313:TP2824/TP2802.c ****     0xff, 0xff
 314:TP2824/TP2802.c **** };
 315:TP2824/TP2802.c **** 
 316:TP2824/TP2802.c **** tcByte TP2833_DataSet[] =
 317:TP2824/TP2802.c **** {
 318:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccSZlabO.s 			page 7


 319:TP2824/TP2802.c ****     0x40, 0x04,
 320:TP2824/TP2802.c ****     0x07, 0xC0,
 321:TP2824/TP2802.c ****     0x0B, 0xC0,
 322:TP2824/TP2802.c ****     0x22, 0x36,
 323:TP2824/TP2802.c ****     0x38, 0x40,
 324:TP2824/TP2802.c ****     0x26, 0x04,
 325:TP2824/TP2802.c ****     0x4d, 0x03,
 326:TP2824/TP2802.c ****     0x4e, 0x03,
 327:TP2824/TP2802.c ****     0x4f, 0x01,
 328:TP2824/TP2802.c ****     0xff, 0xff
 329:TP2824/TP2802.c **** };
 330:TP2824/TP2802.c **** tcByte TP2833_MODE_DataSet[5][14]=
 331:TP2824/TP2802.c **** {
 332:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0x18,0xff},
 333:TP2824/TP2802.c ****     {0x03,0x50,0x30,0x05,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x0c,0x12,0xff},
 334:TP2824/TP2802.c ****     {0x13,0x50,0x30,0x05,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x08,0x12,0xff},
 335:TP2824/TP2802.c ****     {0x13,0x50,0x40,0x05,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x04,0x11,0xff},
 336:TP2824/TP2802.c ****     {0x13,0x51,0x48,0x05,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x04,0x11,0xff}
 337:TP2824/TP2802.c **** };
 338:TP2824/TP2802.c **** tcByte TP2833_HDA_DataSet[5][8]=
 339:TP2824/TP2802.c **** {
 340:TP2824/TP2802.c ****     {0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0xff}, //ADDR
 341:TP2824/TP2802.c ****     {0x70,0x48,0x5e,0x27,0x72,0x80,0x77,0xff}, //720p30
 342:TP2824/TP2802.c ****     {0x70,0x48,0x5e,0x27,0x88,0x04,0x23,0xff}, //720p25
 343:TP2824/TP2802.c ****     {0x58,0x45,0x50,0x29,0x65,0x78,0x16,0xff}, //1080p30
 344:TP2824/TP2802.c ****     {0x58,0x45,0x40,0x29,0x61,0x78,0x16,0xff}, //1080p25
 345:TP2824/TP2802.c **** };
 346:TP2824/TP2802.c **** 
 347:TP2824/TP2802.c **** tcByte TP2834_DataSet[] =
 348:TP2824/TP2802.c **** {
 349:TP2824/TP2802.c **** 
 350:TP2824/TP2802.c ****     //video
 351:TP2824/TP2802.c ****     0x40, 0x04,
 352:TP2824/TP2802.c ****     0x07, 0xc0,
 353:TP2824/TP2802.c ****     0x0b, 0xc0,
 354:TP2824/TP2802.c ****     0x3a, 0x70,
 355:TP2824/TP2802.c ****     0x26, 0x01,
 356:TP2824/TP2802.c **** 
 357:TP2824/TP2802.c ****     0x4d, 0x0f,
 358:TP2824/TP2802.c ****     0x4e, 0x0f,
 359:TP2824/TP2802.c **** 
 360:TP2824/TP2802.c ****     0xff, 0xff
 361:TP2824/TP2802.c **** };
 362:TP2824/TP2802.c **** tcByte TP2834_MODE_DataSet[5][13]=
 363:TP2824/TP2802.c **** {
 364:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0xff},
 365:TP2824/TP2802.c ****     {0x03,0x10,0x60,0x02,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x8c,0xff},
 366:TP2824/TP2802.c ****     {0x03,0x10,0x60,0x02,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x88,0xff},
 367:TP2824/TP2802.c ****     {0x43,0x10,0xa0,0x12,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x84,0xff},
 368:TP2824/TP2802.c ****     {0x43,0x11,0xb0,0x02,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x84,0xff}
 369:TP2824/TP2802.c **** };
 370:TP2824/TP2802.c **** 
 371:TP2824/TP2802.c **** //////////////////////////////////////////////////////
 372:TP2824/TP2802.c **** ////
 373:TP2824/TP2802.c **** /////////////////////////////////////////////////////
 374:TP2824/TP2802.c **** 
 375:TP2824/TP2802.c **** tcByte TP2823_DataSet[] =
ARM GAS  /tmp/ccSZlabO.s 			page 8


 376:TP2824/TP2802.c **** {
 377:TP2824/TP2802.c **** 
 378:TP2824/TP2802.c ****     //video
 379:TP2824/TP2802.c ****     0x40, 0x04,
 380:TP2824/TP2802.c ****     0x0b, 0x60,
 381:TP2824/TP2802.c ****     0x22, 0x34,
 382:TP2824/TP2802.c ****     0x23, 0x44,
 383:TP2824/TP2802.c ****     0x26, 0x01,
 384:TP2824/TP2802.c ****     0x38, 0x40,
 385:TP2824/TP2802.c ****     0x3f, 0x08,
 386:TP2824/TP2802.c **** 
 387:TP2824/TP2802.c ****     0x4d, 0x03,
 388:TP2824/TP2802.c ****     0x4e, 0x33,
 389:TP2824/TP2802.c ****     0xfa, 0x00,
 390:TP2824/TP2802.c **** 
 391:TP2824/TP2802.c ****     0xff, 0xff
 392:TP2824/TP2802.c **** };
 393:TP2824/TP2802.c **** tcByte TP2823_MODE_DataSet[5][13]=
 394:TP2824/TP2802.c **** {
 395:TP2824/TP2802.c ****     {0x0c,0x0d,0x20,0x26,0x2b,0x2d,0x2e,0x30,0x31,0x32,0x33,0x39,0xff},
 396:TP2824/TP2802.c ****     {0x43,0x10,0x60,0x02,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x30,0xff},
 397:TP2824/TP2802.c ****     {0x53,0x10,0x60,0x02,0x58,0x30,0x70,0x48,0xbb,0x2e,0x90,0x20,0xff},
 398:TP2824/TP2802.c ****     {0x53,0x10,0xa0,0x12,0x70,0x68,0x5e,0x62,0xbb,0x96,0xc0,0x10,0xff},
 399:TP2824/TP2802.c ****     {0x53,0x11,0xb0,0x02,0x70,0x60,0x5e,0x7a,0x4a,0x4d,0xf0,0x10,0xff}
 400:TP2824/TP2802.c **** };
 401:TP2824/TP2802.c **** tcByte TP2822_DataSet[] =
 402:TP2824/TP2802.c **** {
 403:TP2824/TP2802.c **** 
 404:TP2824/TP2802.c ****     0x40, 0x04,
 405:TP2824/TP2802.c ****     0x39, 0x00,
 406:TP2824/TP2802.c ****     0x3d, 0x08,
 407:TP2824/TP2802.c ****     0x3a, 0x01,
 408:TP2824/TP2802.c **** 
 409:TP2824/TP2802.c ****     0x30, 0x48,
 410:TP2824/TP2802.c ****     0x31, 0xbb,
 411:TP2824/TP2802.c ****     0x32, 0x2e,
 412:TP2824/TP2802.c ****     0x33, 0x90,
 413:TP2824/TP2802.c **** 
 414:TP2824/TP2802.c ****     0x4d, 0x03,
 415:TP2824/TP2802.c ****     0x4e, 0x33,
 416:TP2824/TP2802.c ****     0x3d, 0x00,
 417:TP2824/TP2802.c **** 
 418:TP2824/TP2802.c ****     0xff, 0xff
 419:TP2824/TP2802.c **** };
 420:TP2824/TP2802.c **** 
 421:TP2824/TP2802.c **** tcByte TP2802D_DataSet[] =
 422:TP2824/TP2802.c **** {
 423:TP2824/TP2802.c ****     0x40, 0x04,
 424:TP2824/TP2802.c **** //		0x07, 0xc0,
 425:TP2824/TP2802.c **** //		0x0b, 0xc0,
 426:TP2824/TP2802.c ****     0x2b, 0x44,
 427:TP2824/TP2802.c ****     0x23, 0x50,
 428:TP2824/TP2802.c ****     0x39, 0x42,
 429:TP2824/TP2802.c ****     0x3a, 0x01,
 430:TP2824/TP2802.c **** 
 431:TP2824/TP2802.c ****     0x30, 0x48,
 432:TP2824/TP2802.c ****     0x31, 0xbb,
ARM GAS  /tmp/ccSZlabO.s 			page 9


 433:TP2824/TP2802.c ****     0x32, 0x2e,
 434:TP2824/TP2802.c ****     0x33, 0x90,
 435:TP2824/TP2802.c **** 
 436:TP2824/TP2802.c ****     0x4d, 0x0f,
 437:TP2824/TP2802.c ****     0x4e, 0xff,
 438:TP2824/TP2802.c **** 
 439:TP2824/TP2802.c ****     //now TP2801A just support 2 lines, to disable line3&4, else IRQ is in trouble.
 440:TP2824/TP2802.c ****     0x40, 0x01,
 441:TP2824/TP2802.c ****     0x50, 0x00,
 442:TP2824/TP2802.c ****     0x51, 0x00,
 443:TP2824/TP2802.c ****     0x52, 0x00,
 444:TP2824/TP2802.c ****     0x7F, 0x00,
 445:TP2824/TP2802.c ****     0x80, 0x00,
 446:TP2824/TP2802.c ****     0x81, 0x00,
 447:TP2824/TP2802.c **** 
 448:TP2824/TP2802.c ****     //0x50~0xb2 need bank switch
 449:TP2824/TP2802.c ****     0x40, 0x00,
 450:TP2824/TP2802.c ****     //TX total 34bit, valid load 32bit
 451:TP2824/TP2802.c ****     0x50, 0x00,
 452:TP2824/TP2802.c ****     0x51, 0x0b,
 453:TP2824/TP2802.c ****     0x52, 0x0c,
 454:TP2824/TP2802.c ****     0x53, 0x19,
 455:TP2824/TP2802.c ****     0x54, 0x78,
 456:TP2824/TP2802.c ****     0x55, 0x21,
 457:TP2824/TP2802.c ****     0x7e, 0x0f,   //
 458:TP2824/TP2802.c **** 
 459:TP2824/TP2802.c ****     // RX total 40bit, valid load 39bit
 460:TP2824/TP2802.c ****     0x7F, 0x00,
 461:TP2824/TP2802.c ****     0x80, 0x07,
 462:TP2824/TP2802.c ****     0x81, 0x08,
 463:TP2824/TP2802.c ****     0x82, 0x04,
 464:TP2824/TP2802.c ****     0x83, 0x00,
 465:TP2824/TP2802.c ****     0x84, 0x00,
 466:TP2824/TP2802.c ****     0x85, 0x60,
 467:TP2824/TP2802.c ****     0x86, 0x10,
 468:TP2824/TP2802.c ****     0x87, 0x06,
 469:TP2824/TP2802.c ****     0x88, 0xBE,
 470:TP2824/TP2802.c ****     0x89, 0x39,
 471:TP2824/TP2802.c ****     0x8A, 0x27,   //
 472:TP2824/TP2802.c ****     0xB9, 0x0F,   //RX channel enable
 473:TP2824/TP2802.c ****     0xff, 0xff
 474:TP2824/TP2802.c **** };
 475:TP2824/TP2802.c **** 
 476:TP2824/TP2802.c **** /*
 477:TP2824/TP2802.c **** //total 34bit, valid load 32bit
 478:TP2824/TP2802.c **** tcByte TP2822_PTZ_DataSet[] = {
 479:TP2824/TP2802.c **** 
 480:TP2824/TP2802.c **** 		//PTZ
 481:TP2824/TP2802.c **** 		0x40, 0x10,
 482:TP2824/TP2802.c **** 		0xc8, 0x21,
 483:TP2824/TP2802.c **** 		0xe0, 0x21,
 484:TP2824/TP2802.c **** 		0x40, 0x00,
 485:TP2824/TP2802.c **** 		0xc8, 0x21,
 486:TP2824/TP2802.c **** 		0xe0, 0x21,
 487:TP2824/TP2802.c **** 		0x7e, 0x0f,
 488:TP2824/TP2802.c **** 		0xb9, 0x0f,
 489:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccSZlabO.s 			page 10


 490:TP2824/TP2802.c **** 	0xff, 0xff
 491:TP2824/TP2802.c **** };
 492:TP2824/TP2802.c **** */
 493:TP2824/TP2802.c **** 
 494:TP2824/TP2802.c **** #if 1
 495:TP2824/TP2802.c **** tcByte TP2824C_TVI_FHD_PTZ_DataSet[] = {//1080P30/25 TVI
 496:TP2824/TP2802.c **** 
 497:TP2824/TP2802.c **** 		//PTZ COC
 498:TP2824/TP2802.c **** //TX		
 499:TP2824/TP2802.c **** 	 0xc0, 0x00,
 500:TP2824/TP2802.c **** 	 0xc2, 0x0B,
 501:TP2824/TP2802.c **** 	 0xc3, 0x0C,
 502:TP2824/TP2802.c **** 	 0xc1, 0x00,
 503:TP2824/TP2802.c **** 	 0xc4, 0x00,
 504:TP2824/TP2802.c **** 	 0xc5, 0x00,
 505:TP2824/TP2802.c **** 	 0xc6, 0x33,
 506:TP2824/TP2802.c **** 	 0xc7, 0x78,
 507:TP2824/TP2802.c **** 	 0xc8, 0x21,
 508:TP2824/TP2802.c **** 	 0x6f, 0x40,
 509:TP2824/TP2802.c ****         0x70, 0x00,
 510:TP2824/TP2802.c ****         
 511:TP2824/TP2802.c **** 	 0x55, 0x00,
 512:TP2824/TP2802.c **** 	 0x56, 0x02,
 513:TP2824/TP2802.c **** 	 0x57, 0xB5,
 514:TP2824/TP2802.c **** 	 0x58, 0x01,
 515:TP2824/TP2802.c **** 	 0x59, 0x17,
 516:TP2824/TP2802.c **** 	 0x5a, 0x01,
 517:TP2824/TP2802.c **** 	 0x5b, 0x00,
 518:TP2824/TP2802.c **** 	 0x5c, 0x02,
 519:TP2824/TP2802.c **** 	 0x5d, 0x00,
 520:TP2824/TP2802.c **** 	 0x5e, 0x00,
 521:TP2824/TP2802.c **** 	 0x5f, 0x00,
 522:TP2824/TP2802.c **** 	 0x60, 0xCE,
 523:TP2824/TP2802.c **** 	
 524:TP2824/TP2802.c ****  //RX
 525:TP2824/TP2802.c **** 	0xcb, 0x07,
 526:TP2824/TP2802.c **** 	0xcc, 0x08,
 527:TP2824/TP2802.c **** 	0xcd, 0x00,
 528:TP2824/TP2802.c **** 	0xce, 0x00,
 529:TP2824/TP2802.c **** 	0xcf, 0x04,
 530:TP2824/TP2802.c **** 	0xd0, 0x00,
 531:TP2824/TP2802.c **** 	0xd1, 0x00,
 532:TP2824/TP2802.c **** 	0xd2, 0x60,
 533:TP2824/TP2802.c **** 	0xd3, 0x10,
 534:TP2824/TP2802.c **** 	0xd4, 0x06,
 535:TP2824/TP2802.c **** 	0xd5, 0xbe,
 536:TP2824/TP2802.c **** 	0xd6, 0x39,
 537:TP2824/TP2802.c **** 	0xd7, 0x21,
 538:TP2824/TP2802.c **** 	0xa7, 0x00,
 539:TP2824/TP2802.c **** 	0xff, 0xff
 540:TP2824/TP2802.c **** };
 541:TP2824/TP2802.c **** 
 542:TP2824/TP2802.c **** tcByte TP2824C_AHD_FHD_PTZ_DataSet[] = {//1080P30/25 AHD
 543:TP2824/TP2802.c **** 
 544:TP2824/TP2802.c **** 		//PTZ COC
 545:TP2824/TP2802.c **** //TX		
 546:TP2824/TP2802.c **** 	 0xc0, 0x00,
ARM GAS  /tmp/ccSZlabO.s 			page 11


 547:TP2824/TP2802.c **** 	 0xc2, 0x0E,	
 548:TP2824/TP2802.c **** 	 0xc3, 0x0F,
 549:TP2824/TP2802.c **** 	 0xc1, 0x00, 
 550:TP2824/TP2802.c **** 	 0xc4, 0x10,
 551:TP2824/TP2802.c **** 	 0xc5, 0x11,
 552:TP2824/TP2802.c **** 	 0xc6, 0x2c,////pulse of cap  500->600ns 0x24, 
 553:TP2824/TP2802.c **** 	 0xc7, 0x15,
 554:TP2824/TP2802.c **** 	 0xc8, 0x97,		
 555:TP2824/TP2802.c **** 	0x6f, 0x44,
 556:TP2824/TP2802.c ****         0x70, 0x00,
 557:TP2824/TP2802.c **** 	 0x55, 0x00,
 558:TP2824/TP2802.c **** 	 0x56, 0x00,
 559:TP2824/TP2802.c **** 	 0x57, 0x00,
 560:TP2824/TP2802.c **** 	 0x58, 0x00,
 561:TP2824/TP2802.c **** 	 0x59, 0x00,
 562:TP2824/TP2802.c **** 	 0x5a, 0x00,
 563:TP2824/TP2802.c **** 	 0x5b, 0x00,
 564:TP2824/TP2802.c **** 	 0x5c, 0x00,
 565:TP2824/TP2802.c **** 	 0x5d, 0x00,
 566:TP2824/TP2802.c **** 	 0x5e, 0x00,
 567:TP2824/TP2802.c **** 	 0x5f, 0x00,
 568:TP2824/TP2802.c **** 	 0x60, 0x00,
 569:TP2824/TP2802.c **** 	 0x62, 0x00,
 570:TP2824/TP2802.c **** 	 0x63, 0x00,
 571:TP2824/TP2802.c **** 	 0x64, 0x00,
 572:TP2824/TP2802.c **** 	 0x65, 0x00,
 573:TP2824/TP2802.c **** 	 0x66, 0x00,
 574:TP2824/TP2802.c **** 	 0x68, 0x00,
 575:TP2824/TP2802.c **** 	 0x69, 0x00,
 576:TP2824/TP2802.c **** 	 0x6a, 0x00,
 577:TP2824/TP2802.c **** 	 0x6b, 0x00,
 578:TP2824/TP2802.c **** 	 0x6c, 0x00,
 579:TP2824/TP2802.c ****  	
 580:TP2824/TP2802.c ****  //RX
 581:TP2824/TP2802.c **** 	0xcb, 0x07,
 582:TP2824/TP2802.c **** 	0xcc, 0x08,
 583:TP2824/TP2802.c **** 	0xcd, 0x00,
 584:TP2824/TP2802.c **** 	0xce, 0x00,
 585:TP2824/TP2802.c **** 	0xcf, 0x04,
 586:TP2824/TP2802.c **** 	0xd0, 0x00,	
 587:TP2824/TP2802.c **** 	0xd1, 0x00,		
 588:TP2824/TP2802.c **** 	0xd2, 0x60,		
 589:TP2824/TP2802.c **** 	0xd3, 0x10,		
 590:TP2824/TP2802.c **** 	0xd4, 0x06,		
 591:TP2824/TP2802.c **** 	0xd5, 0xbe,		
 592:TP2824/TP2802.c **** 	0xd6, 0x39,		
 593:TP2824/TP2802.c **** 	0xd7, 0x27,	
 594:TP2824/TP2802.c **** 	
 595:TP2824/TP2802.c **** 	0xa7, 0x24,
 596:TP2824/TP2802.c **** 	
 597:TP2824/TP2802.c **** 	0xff, 0xff
 598:TP2824/TP2802.c **** };
 599:TP2824/TP2802.c **** 
 600:TP2824/TP2802.c **** tcByte TP2824C_CVBS_PTZ_DataSet[] = {//CVBS NTSC/PAL
 601:TP2824/TP2802.c **** 
 602:TP2824/TP2802.c **** 		//PTZ COC
 603:TP2824/TP2802.c **** //TX		
ARM GAS  /tmp/ccSZlabO.s 			page 12


 604:TP2824/TP2802.c **** 	 0xc0, 0x00,
 605:TP2824/TP2802.c **** 	 0xc2, 0x0F,	
 606:TP2824/TP2802.c **** 	 0xc3, 0x10,	
 607:TP2824/TP2802.c **** 	 0xc1, 0x00,	
 608:TP2824/TP2802.c **** 	 0xc4, 0x00,	
 609:TP2824/TP2802.c **** 	 0xc5, 0x00,	
 610:TP2824/TP2802.c **** 	 0xc6, 0x49,	
 611:TP2824/TP2802.c **** 	 0xc7, 0x14,	
 612:TP2824/TP2802.c **** 	 0xc8, 0xAF,	
 613:TP2824/TP2802.c **** 	 0x6f, 0x60,	
 614:TP2824/TP2802.c ****         0x70, 0x00,   
 615:TP2824/TP2802.c ****         
 616:TP2824/TP2802.c **** 	 0x55, 0x00,
 617:TP2824/TP2802.c **** 	 0x56, 0x00,
 618:TP2824/TP2802.c **** 	 0x57, 0x00,
 619:TP2824/TP2802.c **** 	 0x58, 0x00,
 620:TP2824/TP2802.c **** 	 0x59, 0x00,
 621:TP2824/TP2802.c **** 	 0x5a, 0x00,
 622:TP2824/TP2802.c **** 	 0x5b, 0x00,
 623:TP2824/TP2802.c **** 	 0x5c, 0x00,
 624:TP2824/TP2802.c **** 	 0x5d, 0x00,
 625:TP2824/TP2802.c **** 	 0x5e, 0x00,
 626:TP2824/TP2802.c **** 	 0x5f, 0x00,
 627:TP2824/TP2802.c **** 	 0x60, 0x00,
 628:TP2824/TP2802.c **** 	 0x62, 0x00,
 629:TP2824/TP2802.c **** 	 0x63, 0x00,
 630:TP2824/TP2802.c **** 	 0x64, 0x00,
 631:TP2824/TP2802.c **** 	 0x65, 0x00,
 632:TP2824/TP2802.c **** 	 0x66, 0x00,
 633:TP2824/TP2802.c **** 	 0x68, 0x00,
 634:TP2824/TP2802.c **** 	 0x69, 0x00,
 635:TP2824/TP2802.c **** 	 0x6a, 0x00,
 636:TP2824/TP2802.c **** 	 0x6b, 0x00,
 637:TP2824/TP2802.c **** 	 0x6c, 0x00,
 638:TP2824/TP2802.c **** 
 639:TP2824/TP2802.c **** 	0xff, 0xff
 640:TP2824/TP2802.c **** };
 641:TP2824/TP2802.c **** 
 642:TP2824/TP2802.c **** tcByte TP2824C_CVIHD_PTZ_DataSet[] = {//CVI CHD
 643:TP2824/TP2802.c **** 
 644:TP2824/TP2802.c **** 		//PTZ COC
 645:TP2824/TP2802.c **** //TX	
 646:TP2824/TP2802.c **** 	 0x70, 0x1D,
 647:TP2824/TP2802.c **** 	 0xc0, 0x00,	
 648:TP2824/TP2802.c **** 	 0xc2, 0x10,	
 649:TP2824/TP2802.c **** 	 0xc3, 0x00,	
 650:TP2824/TP2802.c **** 	 0xc1, 0x00,	
 651:TP2824/TP2802.c **** 	 0xc4, 0x00,	
 652:TP2824/TP2802.c **** 	 0xc5, 0x00,	
 653:TP2824/TP2802.c **** 	 0xc6, 0x15,	
 654:TP2824/TP2802.c **** 	 0xc7, 0x5B,	
 655:TP2824/TP2802.c **** 	 0xc8, 0xa4,
 656:TP2824/TP2802.c **** 	 0x6f, 0x48,
 657:TP2824/TP2802.c **** 
 658:TP2824/TP2802.c **** 	 0x55, 0x00,
 659:TP2824/TP2802.c **** 	 0x56, 0x00,
 660:TP2824/TP2802.c **** 	 0x57, 0x00,
ARM GAS  /tmp/ccSZlabO.s 			page 13


 661:TP2824/TP2802.c **** 	 0x58, 0x00,
 662:TP2824/TP2802.c **** 	 0x59, 0x00,
 663:TP2824/TP2802.c **** 	 0x5a, 0x00,
 664:TP2824/TP2802.c **** 	 0x5b, 0x00,
 665:TP2824/TP2802.c **** 	 0x5c, 0x00,
 666:TP2824/TP2802.c **** 	 0x5d, 0x00,
 667:TP2824/TP2802.c **** 	 0x5e, 0x00,
 668:TP2824/TP2802.c **** 	 0x5f, 0x00,
 669:TP2824/TP2802.c **** 	 0x60, 0x00,
 670:TP2824/TP2802.c **** 	 0x62, 0x00,
 671:TP2824/TP2802.c **** 	 0x63, 0x00,
 672:TP2824/TP2802.c **** 	 0x64, 0x00,
 673:TP2824/TP2802.c **** 	 0x65, 0x00,
 674:TP2824/TP2802.c **** 	 0x66, 0x00,
 675:TP2824/TP2802.c **** 	 0x68, 0x00,
 676:TP2824/TP2802.c **** 	 0x69, 0x00,
 677:TP2824/TP2802.c **** 	 0x6a, 0x00,
 678:TP2824/TP2802.c **** 	 0x6b, 0x00,
 679:TP2824/TP2802.c **** 	 0x6c, 0x00,
 680:TP2824/TP2802.c **** 	
 681:TP2824/TP2802.c **** 	0xff, 0xff
 682:TP2824/TP2802.c **** };
 683:TP2824/TP2802.c **** 
 684:TP2824/TP2802.c **** #else
 685:TP2824/TP2802.c **** tcByte TP2824C_TVI_FHD_PTZ_DataSet[] = {//1080P30/25 TVI
 686:TP2824/TP2802.c **** 
 687:TP2824/TP2802.c **** 		//PTZ COC
 688:TP2824/TP2802.c **** //TX		
 689:TP2824/TP2802.c **** 	 0xc0, 0x00,	//TXLINE2  / TXLINE1
 690:TP2824/TP2802.c **** 	 0xc2, 0x0B,	//TXLINE1
 691:TP2824/TP2802.c **** 	 0xc3, 0x0C,	//TXLINE2
 692:TP2824/TP2802.c **** 	 0xc1, 0x00,	//TXLINE4  / TXLINE3
 693:TP2824/TP2802.c **** 	 0xc4, 0x00,	//TXLINE3
 694:TP2824/TP2802.c **** 	 0xc5, 0x00,	//TXLINE4
 695:TP2824/TP2802.c **** 	 0xc6, 0x33,	//TXBITCKNUM  0x19  0x1F  //0x19 for 1080P  ;  0x33 for 720P   // TVI 720P ptz 202005
 696:TP2824/TP2802.c **** 	 0xc7, 0x78,	//TXHST
 697:TP2824/TP2802.c **** 	 0xc8, 0x21,	//TXBITNUM  //0x21  0x27
 698:TP2824/TP2802.c **** 	 0x6f, 0x40,	//TXn pin enable
 699:TP2824/TP2802.c ****         0x70, 0x00,   //TXLMD[3]=0 / TXLNUM[2:0]=0
 700:TP2824/TP2802.c ****         
 701:TP2824/TP2802.c **** //PRESET 1
 702:TP2824/TP2802.c **** 	 //TXLINE1DATA
 703:TP2824/TP2802.c **** 	 0x55, 0x00,
 704:TP2824/TP2802.c **** 	 0x56, 0x02,
 705:TP2824/TP2802.c **** 	 0x57, 0xB5,
 706:TP2824/TP2802.c **** 	 0x58, 0x01,
 707:TP2824/TP2802.c **** 	 0x59, 0x17,
 708:TP2824/TP2802.c **** 	 0x5a, 0x01,
 709:TP2824/TP2802.c **** 	 //TXLINE2DATA
 710:TP2824/TP2802.c **** 	 0x5b, 0x00,
 711:TP2824/TP2802.c **** 	 0x5c, 0x02,
 712:TP2824/TP2802.c **** 	 0x5d, 0x00,
 713:TP2824/TP2802.c **** 	 0x5e, 0x00,
 714:TP2824/TP2802.c **** 	 0x5f, 0x00,
 715:TP2824/TP2802.c **** 	 0x60, 0xCE,
 716:TP2824/TP2802.c **** 	
 717:TP2824/TP2802.c ****  //RX
ARM GAS  /tmp/ccSZlabO.s 			page 14


 718:TP2824/TP2802.c **** 	0xcb, 0x07,		//RXLINE1
 719:TP2824/TP2802.c **** 	0xcc, 0x08,		//RXLINE2
 720:TP2824/TP2802.c **** 	0xcd, 0x00,//0x09,		//RXLINE3
 721:TP2824/TP2802.c **** 	0xce, 0x00,//0x0a,		//RXLINE4
 722:TP2824/TP2802.c **** 	0xcf, 0x04,		//RXFREQ
 723:TP2824/TP2802.c **** 	0xd0, 0x00,		//RXFREQ
 724:TP2824/TP2802.c **** 	0xd1, 0x00,		//RXFREQ
 725:TP2824/TP2802.c **** 	0xd2, 0x60,		//RXTHLEVEL
 726:TP2824/TP2802.c **** 	0xd3, 0x10,		//RXHINUM
 727:TP2824/TP2802.c **** 	0xd4, 0x06,		//RXHST / RXHEND
 728:TP2824/TP2802.c **** 	0xd5, 0xbe,		//RXHST
 729:TP2824/TP2802.c **** 	0xd6, 0x39,		//RXHEND
 730:TP2824/TP2802.c **** 	0xd7, 0x21,//0x27,		//RXBITNUM
 731:TP2824/TP2802.c **** 	0xa7, 0x00,//
 732:TP2824/TP2802.c **** 	0xff, 0xff
 733:TP2824/TP2802.c **** };
 734:TP2824/TP2802.c **** 
 735:TP2824/TP2802.c **** tcByte TP2824C_AHD_FHD_PTZ_DataSet[] = {//1080P30/25 AHD
 736:TP2824/TP2802.c **** 
 737:TP2824/TP2802.c **** 		//PTZ COC
 738:TP2824/TP2802.c **** //TX		
 739:TP2824/TP2802.c **** 	 0xc0, 0x00,	//TXLINE2  / TXLINE1
 740:TP2824/TP2802.c **** 	 0xc2, 0x0E,	//TXLINE1
 741:TP2824/TP2802.c **** 	 0xc3, 0x0F,	//TXLINE2
 742:TP2824/TP2802.c **** 	 0xc1, 0x00,	//TXLINE4  / TXLINE3
 743:TP2824/TP2802.c **** 	 0xc4, 0x10,	//TXLINE3
 744:TP2824/TP2802.c **** 	 0xc5, 0x11,	//TXLINE4
 745:TP2824/TP2802.c **** 	 0xc6, 0x24,	//TXBITCKNUM
 746:TP2824/TP2802.c **** 	 0xc7, 0x15,	//TXHST[7:0]		//TXHST=0x215
 747:TP2824/TP2802.c **** 	 0xc8, 0x97,	//TXHST[9:8] / TXBITNUM:0x17
 748:TP2824/TP2802.c **** 	 0x6f, 0x44,	//TXn pin enable / TXACP
 749:TP2824/TP2802.c ****         0x70, 0x00,   //TXLMD[3]=0 / TXLNUM[2:0]=0
 750:TP2824/TP2802.c ****         
 751:TP2824/TP2802.c **** 	 //TXLINE1DATA
 752:TP2824/TP2802.c **** 	 0x55, 0x00,
 753:TP2824/TP2802.c **** 	 0x56, 0x00,
 754:TP2824/TP2802.c **** 	 0x57, 0x00,
 755:TP2824/TP2802.c **** 	 0x58, 0x00,
 756:TP2824/TP2802.c **** 	 0x59, 0x00,
 757:TP2824/TP2802.c **** 	 0x5a, 0x00,
 758:TP2824/TP2802.c **** 	 //TXLINE2DATA
 759:TP2824/TP2802.c **** 	 0x5b, 0x00,
 760:TP2824/TP2802.c **** 	 0x5c, 0x00,
 761:TP2824/TP2802.c **** 	 0x5d, 0x00,
 762:TP2824/TP2802.c **** 	 0x5e, 0x00,
 763:TP2824/TP2802.c **** 	 0x5f, 0x00,
 764:TP2824/TP2802.c **** 	 0x60, 0x00,
 765:TP2824/TP2802.c **** 	 //TXLINE3DATA
 766:TP2824/TP2802.c **** 	 0x62, 0x00,
 767:TP2824/TP2802.c **** 	 0x63, 0x00,
 768:TP2824/TP2802.c **** 	 0x64, 0x00,
 769:TP2824/TP2802.c **** 	 0x65, 0x00,
 770:TP2824/TP2802.c **** 	 0x66, 0x00,
 771:TP2824/TP2802.c ****  	 //TXLINE4DATA
 772:TP2824/TP2802.c **** 	 0x68, 0x00,
 773:TP2824/TP2802.c **** 	 0x69, 0x00,
 774:TP2824/TP2802.c **** 	 0x6a, 0x00,
ARM GAS  /tmp/ccSZlabO.s 			page 15


 775:TP2824/TP2802.c **** 	 0x6b, 0x00,
 776:TP2824/TP2802.c **** 	 0x6c, 0x00,
 777:TP2824/TP2802.c ****  	
 778:TP2824/TP2802.c ****  //RX
 779:TP2824/TP2802.c **** 	0xcb, 0x07,		//RXLINE1
 780:TP2824/TP2802.c **** 	0xcc, 0x08,		//RXLINE2
 781:TP2824/TP2802.c **** 	0xcd, 0x00,//0x09,		//RXLINE3
 782:TP2824/TP2802.c **** 	0xce, 0x00,//0x0a,		//RXLINE4
 783:TP2824/TP2802.c **** 	0xcf, 0x04,		//RXFREQ
 784:TP2824/TP2802.c **** 	0xd0, 0x00,		//RXFREQ
 785:TP2824/TP2802.c **** 	0xd1, 0x00,		//RXFREQ
 786:TP2824/TP2802.c **** 	0xd2, 0x60,		//RXTHLEVEL
 787:TP2824/TP2802.c **** 	0xd3, 0x10,		//RXHINUM
 788:TP2824/TP2802.c **** 	0xd4, 0x06,		//RXHST / RXHEND
 789:TP2824/TP2802.c **** 	0xd5, 0xbe,		//RXHST
 790:TP2824/TP2802.c **** 	0xd6, 0x39,		//RXHEND
 791:TP2824/TP2802.c **** 	0xd7, 0x27,		//RXBITNUM
 792:TP2824/TP2802.c **** 	
 793:TP2824/TP2802.c **** 	0xa7, 0x24,//RXPWM / RXACP
 794:TP2824/TP2802.c **** 	
 795:TP2824/TP2802.c **** 	0xff, 0xff
 796:TP2824/TP2802.c **** };
 797:TP2824/TP2802.c **** 
 798:TP2824/TP2802.c **** tcByte TP2824C_CVBS_PTZ_DataSet[] = {//CVBS NTSC/PAL
 799:TP2824/TP2802.c **** 
 800:TP2824/TP2802.c **** 		//PTZ COC
 801:TP2824/TP2802.c **** //TX		
 802:TP2824/TP2802.c **** 	 0xc0, 0x00,	//TXLINE2  / TXLINE1
 803:TP2824/TP2802.c **** 	 0xc2, 0x0F,	//TXLINE1		//line18
 804:TP2824/TP2802.c **** 	 0xc3, 0x10,	//TXLINE2		//line19
 805:TP2824/TP2802.c **** 	 0xc1, 0x00,	//TXLINE4  / TXLINE3
 806:TP2824/TP2802.c **** 	 0xc4, 0x00,	//TXLINE3
 807:TP2824/TP2802.c **** 	 0xc5, 0x00,	//TXLINE4
 808:TP2824/TP2802.c **** 	 0xc6, 0x49,	//TXBITCKNUM
 809:TP2824/TP2802.c **** 	 0xc7, 0x14,	//TXHST[7:0]		//TXHST=0x214
 810:TP2824/TP2802.c **** 	 0xc8, 0xAF,	//TXHST[9:8] / TXBITNUM:0x2F
 811:TP2824/TP2802.c **** 	 0x6f, 0x60,	//TXn pin enable / TXPELCO2
 812:TP2824/TP2802.c ****         0x70, 0x00,   //TXLMD[3]=0 / TXLNUM[2:0]=0
 813:TP2824/TP2802.c ****         
 814:TP2824/TP2802.c **** 	 //TXLINE1DATA
 815:TP2824/TP2802.c **** 	 0x55, 0x00,
 816:TP2824/TP2802.c **** 	 0x56, 0x00,
 817:TP2824/TP2802.c **** 	 0x57, 0x00,
 818:TP2824/TP2802.c **** 	 0x58, 0x00,
 819:TP2824/TP2802.c **** 	 0x59, 0x00,//cmd2 [LSB first]
 820:TP2824/TP2802.c **** 	 0x5a, 0x00,//cmd1 [LSB first]
 821:TP2824/TP2802.c **** 	 //TXLINE2DATA
 822:TP2824/TP2802.c **** 	 0x5b, 0x00,
 823:TP2824/TP2802.c **** 	 0x5c, 0x00,
 824:TP2824/TP2802.c **** 	 0x5d, 0x00,
 825:TP2824/TP2802.c **** 	 0x5e, 0x00,
 826:TP2824/TP2802.c **** 	 0x5f, 0x00,//data2 [LSB first]
 827:TP2824/TP2802.c **** 	 0x60, 0x00,//data1 [LSB first]
 828:TP2824/TP2802.c **** 	 //TXLINE3DATA
 829:TP2824/TP2802.c **** 	 0x62, 0x00,
 830:TP2824/TP2802.c **** 	 0x63, 0x00,
 831:TP2824/TP2802.c **** 	 0x64, 0x00,
ARM GAS  /tmp/ccSZlabO.s 			page 16


 832:TP2824/TP2802.c **** 	 0x65, 0x00,
 833:TP2824/TP2802.c **** 	 0x66, 0x00,
 834:TP2824/TP2802.c ****  	 //TXLINE4DATA
 835:TP2824/TP2802.c **** 	 0x68, 0x00,
 836:TP2824/TP2802.c **** 	 0x69, 0x00,
 837:TP2824/TP2802.c **** 	 0x6a, 0x00,
 838:TP2824/TP2802.c **** 	 0x6b, 0x00,
 839:TP2824/TP2802.c **** 	 0x6c, 0x00,
 840:TP2824/TP2802.c **** /* 	
 841:TP2824/TP2802.c ****  //RX
 842:TP2824/TP2802.c **** 	0xcb, 0x07,		//RXLINE1
 843:TP2824/TP2802.c **** 	0xcc, 0x08,		//RXLINE2
 844:TP2824/TP2802.c **** 	0xcd, 0x00,//0x09,		//RXLINE3
 845:TP2824/TP2802.c **** 	0xce, 0x00,//0x0a,		//RXLINE4
 846:TP2824/TP2802.c **** 	0xcf, 0x04,		//RXFREQ
 847:TP2824/TP2802.c **** 	0xd0, 0x00,		//RXFREQ
 848:TP2824/TP2802.c **** 	0xd1, 0x00,		//RXFREQ
 849:TP2824/TP2802.c **** 	0xd2, 0x60,		//RXTHLEVEL
 850:TP2824/TP2802.c **** 	0xd3, 0x10,		//RXHINUM
 851:TP2824/TP2802.c **** 	0xd4, 0x06,		//RXHST / RXHEND
 852:TP2824/TP2802.c **** 	0xd5, 0xbe,		//RXHST
 853:TP2824/TP2802.c **** 	0xd6, 0x39,		//RXHEND
 854:TP2824/TP2802.c **** 	0xd7, 0x27,		//RXBITNUM
 855:TP2824/TP2802.c **** 	
 856:TP2824/TP2802.c **** 	0xa7, 0x24,//RXPWM / RXACP
 857:TP2824/TP2802.c **** */	
 858:TP2824/TP2802.c **** 	0xff, 0xff
 859:TP2824/TP2802.c **** };
 860:TP2824/TP2802.c **** 
 861:TP2824/TP2802.c **** tcByte TP2824C_CVIHD_PTZ_DataSet[] = {//CVI CHD
 862:TP2824/TP2802.c **** 
 863:TP2824/TP2802.c **** 		//PTZ COC
 864:TP2824/TP2802.c **** //TX	
 865:TP2824/TP2802.c **** 	 0x70, 0x1D,   //TCMFR[4]=1 / TXLMD[3]=1 / TXLNUM[2:0]=5
 866:TP2824/TP2802.c **** 	 0xc0, 0x00,	//TXLINE2  / TXLINE1
 867:TP2824/TP2802.c **** 	 0xc2, 0x10,	//TXLINE1		//line18
 868:TP2824/TP2802.c **** 	 0xc3, 0x00,	//TXLINE2		//line19
 869:TP2824/TP2802.c **** 	 0xc1, 0x00,	//TXLINE4  / TXLINE3
 870:TP2824/TP2802.c **** 	 0xc4, 0x00,	//TXLINE3
 871:TP2824/TP2802.c **** 	 0xc5, 0x00,	//TXLINE4
 872:TP2824/TP2802.c **** 	 0xc6, 0x15,	//TXBITCKNUM
 873:TP2824/TP2802.c **** 	 0xc7, 0x5B,	//TXHST[7:0]		//TXHST=0x25B
 874:TP2824/TP2802.c **** 	 0xc8, 0xa4,//0x97,	//TXHST[9:8]0b10xx xxxx / TXBITNUM:0x17=>0x24
 875:TP2824/TP2802.c **** 	 0x6f, 0x48,	//TXn pin enable / TXDAH
 876:TP2824/TP2802.c **** 
 877:TP2824/TP2802.c **** 	 //TXLINE1DATA
 878:TP2824/TP2802.c **** 	 0x55, 0x00,
 879:TP2824/TP2802.c **** 	 0x56, 0x00,
 880:TP2824/TP2802.c **** 	 0x57, 0x00,
 881:TP2824/TP2802.c **** 	 0x58, 0x00,
 882:TP2824/TP2802.c **** 	 0x59, 0x00,//cmd2 [LSB first]
 883:TP2824/TP2802.c **** 	 0x5a, 0x00,//cmd1 [LSB first]
 884:TP2824/TP2802.c **** 	 //TXLINE2DATA
 885:TP2824/TP2802.c **** 	 0x5b, 0x00,
 886:TP2824/TP2802.c **** 	 0x5c, 0x00,
 887:TP2824/TP2802.c **** 	 0x5d, 0x00,
 888:TP2824/TP2802.c **** 	 0x5e, 0x00,
ARM GAS  /tmp/ccSZlabO.s 			page 17


 889:TP2824/TP2802.c **** 	 0x5f, 0x00,//data2 [LSB first]
 890:TP2824/TP2802.c **** 	 0x60, 0x00,//data1 [LSB first]
 891:TP2824/TP2802.c **** 	 //TXLINE3DATA
 892:TP2824/TP2802.c **** 	 0x62, 0x00,
 893:TP2824/TP2802.c **** 	 0x63, 0x00,
 894:TP2824/TP2802.c **** 	 0x64, 0x00,
 895:TP2824/TP2802.c **** 	 0x65, 0x00,
 896:TP2824/TP2802.c **** 	 0x66, 0x00,
 897:TP2824/TP2802.c ****  	 //TXLINE4DATA
 898:TP2824/TP2802.c **** 	 0x68, 0x00,
 899:TP2824/TP2802.c **** 	 0x69, 0x00,
 900:TP2824/TP2802.c **** 	 0x6a, 0x00,
 901:TP2824/TP2802.c **** 	 0x6b, 0x00,
 902:TP2824/TP2802.c **** 	 0x6c, 0x00,
 903:TP2824/TP2802.c **** /* 	
 904:TP2824/TP2802.c ****  //RX
 905:TP2824/TP2802.c **** 	0xcb, 0x07,		//RXLINE1
 906:TP2824/TP2802.c **** 	0xcc, 0x08,		//RXLINE2
 907:TP2824/TP2802.c **** 	0xcd, 0x00,//0x09,		//RXLINE3
 908:TP2824/TP2802.c **** 	0xce, 0x00,//0x0a,		//RXLINE4
 909:TP2824/TP2802.c **** 	0xcf, 0x04,		//RXFREQ
 910:TP2824/TP2802.c **** 	0xd0, 0x00,		//RXFREQ
 911:TP2824/TP2802.c **** 	0xd1, 0x00,		//RXFREQ
 912:TP2824/TP2802.c **** 	0xd2, 0x60,		//RXTHLEVEL
 913:TP2824/TP2802.c **** 	0xd3, 0x10,		//RXHINUM
 914:TP2824/TP2802.c **** 	0xd4, 0x06,		//RXHST / RXHEND
 915:TP2824/TP2802.c **** 	0xd5, 0xbe,		//RXHST
 916:TP2824/TP2802.c **** 	0xd6, 0x39,		//RXHEND
 917:TP2824/TP2802.c **** 	0xd7, 0x27,		//RXBITNUM
 918:TP2824/TP2802.c **** 	
 919:TP2824/TP2802.c **** 	0xa7, 0x24,//RXPWM / RXACP
 920:TP2824/TP2802.c **** */	
 921:TP2824/TP2802.c **** 	0xff, 0xff
 922:TP2824/TP2802.c **** };
 923:TP2824/TP2802.c **** #endif
 924:TP2824/TP2802.c **** 	 
 925:TP2824/TP2802.c **** //chunyu
 926:TP2824/TP2802.c **** void I2CDeviceSet1( tcByte *RegSet)
 927:TP2824/TP2802.c **** {
 928:TP2824/TP2802.c **** 	int	cnt=0;
 929:TP2824/TP2802.c **** 	tByte index, val;
 930:TP2824/TP2802.c **** 
 931:TP2824/TP2802.c **** 	// Output discription
 932:TP2824/TP2802.c **** 	#ifdef TASKING
 933:TP2824/TP2802.c **** 	while( *RegSet ) 
 934:TP2824/TP2802.c **** 		RS_tx( *RegSet++ );
 935:TP2824/TP2802.c **** 	RegSet++;
 936:TP2824/TP2802.c **** 	#endif
 937:TP2824/TP2802.c **** 
 938:TP2824/TP2802.c **** 	while ( *RegSet != 0xFF ) {
 939:TP2824/TP2802.c **** 
 940:TP2824/TP2802.c **** 		index = *RegSet;
 941:TP2824/TP2802.c **** 		val = *(RegSet+1);
 942:TP2824/TP2802.c **** //		MonWriteI2C(addr, index, val);
 943:TP2824/TP2802.c **** 		tp28xx_byte_write(index, val);
 944:TP2824/TP2802.c **** 
 945:TP2824/TP2802.c **** //		Puts("\r\n");
ARM GAS  /tmp/ccSZlabO.s 			page 18


 946:TP2824/TP2802.c **** 
 947:TP2824/TP2802.c **** 		RegSet+=2;
 948:TP2824/TP2802.c **** 
 949:TP2824/TP2802.c **** 		cnt--;
 950:TP2824/TP2802.c **** 	}	
 951:TP2824/TP2802.c ****     delay(50); //50*5 =250ms
 952:TP2824/TP2802.c **** }
 953:TP2824/TP2802.c **** 
 954:TP2824/TP2802.c **** 
 955:TP2824/TP2802.c **** void I2CDeviceSet2( tcByte *RegSet, tcByte *DatSet)
 956:TP2824/TP2802.c **** {
 957:TP2824/TP2802.c **** 	int	cnt=0;
 958:TP2824/TP2802.c **** 	tByte index, val;
 959:TP2824/TP2802.c **** 
 960:TP2824/TP2802.c **** 	while ( *RegSet != 0xFF ) {
 961:TP2824/TP2802.c **** 
 962:TP2824/TP2802.c **** 		index = *RegSet;
 963:TP2824/TP2802.c **** 		val = *DatSet;
 964:TP2824/TP2802.c **** //		MonWriteI2C(addr, index, val);
 965:TP2824/TP2802.c **** 		tp28xx_byte_write(index, val);
 966:TP2824/TP2802.c **** 
 967:TP2824/TP2802.c **** //		Puts("\r\n");
 968:TP2824/TP2802.c **** 
 969:TP2824/TP2802.c **** 		RegSet++;
 970:TP2824/TP2802.c **** 		DatSet++;
 971:TP2824/TP2802.c **** 
 972:TP2824/TP2802.c **** 		cnt--;
 973:TP2824/TP2802.c **** 	}
 974:TP2824/TP2802.c ****     delay(50); //50*5 =250ms
 975:TP2824/TP2802.c **** }
 976:TP2824/TP2802.c **** 
 977:TP2824/TP2802.c **** void SetRegPage(tByte channel)
 978:TP2824/TP2802.c **** {
 979:TP2824/TP2802.c ****     //tByte tmp;
 980:TP2824/TP2802.c ****     //tmp = tp28xx_byte_read(tByte index);
 981:TP2824/TP2802.c ****     tp28xx_byte_write(0x40,channel);
 982:TP2824/TP2802.c ****     //tp28xx_byte_write(0x40,0x04); //chunyu
 983:TP2824/TP2802.c ****  //  printf("\r\nChannel-%02x ",(tWord)channel);
 984:TP2824/TP2802.c **** }
 985:TP2824/TP2802.c **** 
 986:TP2824/TP2802.c **** /*
 987:TP2824/TP2802.c **** void Write_AllRegPage(tByte addr, tByte bitpos, tByte bitval){
 988:TP2824/TP2802.c **** 	tByte ch;
 989:TP2824/TP2802.c **** 	tByte val;
 990:TP2824/TP2802.c **** 	tByte mask=0x00;
 991:TP2824/TP2802.c **** 	tByte maskb;
 992:TP2824/TP2802.c **** 	tByte Reg40;
 993:TP2824/TP2802.c **** 
 994:TP2824/TP2802.c **** 	Reg40 = tp28xx_byte_read(TVII2CAddress,0x40);
 995:TP2824/TP2802.c **** 
 996:TP2824/TP2802.c **** 	mask = 0x01 << bitpos;
 997:TP2824/TP2802.c **** 	maskb = ~mask;
 998:TP2824/TP2802.c **** 
 999:TP2824/TP2802.c **** 	for(ch=CH1;ch<=CH4;ch++){
1000:TP2824/TP2802.c **** 		tp28xx_byte_write(TVII2CAddress,0x40,ch);
1001:TP2824/TP2802.c **** 		val = tp28xx_byte_read(TVII2CAddress,addr);
1002:TP2824/TP2802.c **** 		if(bitval)
ARM GAS  /tmp/ccSZlabO.s 			page 19


1003:TP2824/TP2802.c **** 			tp28xx_byte_write(TVII2CAddress,addr,(val|mask));
1004:TP2824/TP2802.c **** 		else
1005:TP2824/TP2802.c **** 			tp28xx_byte_write(TVII2CAddress,addr,(val&maskb));
1006:TP2824/TP2802.c **** 	}
1007:TP2824/TP2802.c **** 
1008:TP2824/TP2802.c **** 	tp28xx_byte_write(TVII2CAddress,0x40,Reg40);
1009:TP2824/TP2802.c **** }
1010:TP2824/TP2802.c **** */
1011:TP2824/TP2802.c **** 
1012:TP2824/TP2802.c **** /*
1013:TP2824/TP2802.c **** void Set_16Bits_VDCLK_Out(){
1014:TP2824/TP2802.c **** 
1015:TP2824/TP2802.c **** 	Write_AllRegPage(0x02,7,0);
1016:TP2824/TP2802.c **** 	tp28xx_byte_write(TVII2CAddress,0x4b,0x40);
1017:TP2824/TP2802.c **** }
1018:TP2824/TP2802.c **** 
1019:TP2824/TP2802.c **** void Set_16Bits_VD_Out(tByte channel){
1020:TP2824/TP2802.c **** 	tByte Reg02,Reg4b;
1021:TP2824/TP2802.c **** 	tByte VD2SEL;
1022:TP2824/TP2802.c **** 	tByte VD1SEL;
1023:TP2824/TP2802.c **** 	tByte dat;
1024:TP2824/TP2802.c **** 
1025:TP2824/TP2802.c **** 	Reg02 = tp28xx_byte_read(TVII2CAddress,0x02);
1026:TP2824/TP2802.c **** 	Reg4b = tp28xx_byte_read(TVII2CAddress,0x4b);
1027:TP2824/TP2802.c **** 
1028:TP2824/TP2802.c **** 
1029:TP2824/TP2802.c **** 	tp28xx_byte_write(TVII2CAddress,0x02,(Reg02&0x7f));
1030:TP2824/TP2802.c **** 
1031:TP2824/TP2802.c **** 	switch (channel){
1032:TP2824/TP2802.c **** 		case CH1:
1033:TP2824/TP2802.c **** 			VD2SEL = VIN1_C;
1034:TP2824/TP2802.c **** 			VD1SEL = VIN1_Y;
1035:TP2824/TP2802.c **** 			break;
1036:TP2824/TP2802.c **** 		case CH2:
1037:TP2824/TP2802.c **** 			VD2SEL = VIN2_C;
1038:TP2824/TP2802.c **** 			VD1SEL = VIN2_Y;
1039:TP2824/TP2802.c **** 			break;
1040:TP2824/TP2802.c **** 		case CH3:
1041:TP2824/TP2802.c **** 			VD2SEL = VIN3_C;
1042:TP2824/TP2802.c **** 			VD1SEL = VIN3_Y;
1043:TP2824/TP2802.c **** 			break;
1044:TP2824/TP2802.c **** 		case CH4:
1045:TP2824/TP2802.c **** 			VD2SEL = VIN4_C;
1046:TP2824/TP2802.c **** 			VD1SEL = VIN4_Y;
1047:TP2824/TP2802.c **** 			break;
1048:TP2824/TP2802.c **** 		}
1049:TP2824/TP2802.c **** 	dat = (VD2SEL<<4)|VD1SEL;
1050:TP2824/TP2802.c **** 	tp28xx_byte_write(TVII2CAddress,0x4b,dat);
1051:TP2824/TP2802.c **** 
1052:TP2824/TP2802.c **** }
1053:TP2824/TP2802.c **** */
1054:TP2824/TP2802.c **** 
1055:TP2824/TP2802.c **** tcByte TP2802_FORMAT_DataSet[][12+1] =
1056:TP2824/TP2802.c **** {
1057:TP2824/TP2802.c ****     {0x02,0x15,0x16,0x17,0x18,0x19,0x1a,0x1c,0x1d,0x35,0x36,0x14,0xff}, //reg
1058:TP2824/TP2802.c ****     {0x48,0x03,0xd3,0x80,0x29,0x38,0x47,0x08,0x98,0x05,0xdc,0x0A,0xff}, //1080p30
1059:TP2824/TP2802.c ****     {0x48,0x03,0xd3,0x80,0x29,0x38,0x47,0x0a,0x50,0x05,0xdc,0x0A,0xff}, //1080p25
ARM GAS  /tmp/ccSZlabO.s 			page 20


1060:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x06,0x72,0x05,0xdc,0x0A,0xff}, //720p60 720p30V2
1061:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x07,0xbc,0x05,0xdc,0x0A,0xff}, //720p50 720p25V2
1062:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x0c,0xe4,0x05,0xdc,0x0A,0xff}, //720p30    //5
1063:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x0f,0x78,0x05,0xdc,0x0A,0xff}, //720p25
1064:TP2824/TP2802.c ****     {0x4f,0x13,0x4e,0xbc,0x15,0xf0,0x07,0x09,0x38,0x25,0xdc,0x0A,0xff}, //NTSC
1065:TP2824/TP2802.c ****     {0x4f,0x13,0x5f,0xbc,0x17,0x20,0x17,0x09,0x48,0x25,0xdc,0x0A,0xff}, //PAL
1066:TP2824/TP2802.c ****     {0x48,0x13,0x6c,0x00,0x2c,0x00,0x68,0x09,0xc4,0x16,0x30,0x0A,0xff}, //3M18
1067:TP2824/TP2802.c ****     {0x48,0x13,0x1f,0x20,0x34,0x98,0x7a,0x0b,0x9a,0x17,0xd0,0x0A,0xff}, //5M12      //10
1068:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x06,0x72,0x25,0xdc,0x0A,0xff}, //720p30V2
1069:TP2824/TP2802.c ****     {0x4a,0x13,0x16,0x00,0x19,0xd0,0x25,0x07,0xbc,0x25,0xdc,0x0A,0xff}, //720p25V2
1070:TP2824/TP2802.c ****     {0x48,0x13,0x1f,0x80,0x7d,0xf0,0x5a,0x0b,0xb8,0x16,0x72,0x0A,0xff}, //4M15
1071:TP2824/TP2802.c ****     {0x48,0x13,0x6c,0x00,0x2c,0x00,0x68,0x09,0xc4,0x16,0x72,0x0A,0xff}, //3M20
1072:TP2824/TP2802.c ****     {0x48,0x23,0x34,0x78,0x8c,0xf0,0x5a,0x0c,0xe4,0x17,0x08,0x0A,0xff}, //4M12
1073:TP2824/TP2802.c ****     {0x48,0x13,0xec,0x80,0xb0,0x08,0x7c,0x0e,0xa6,0x17,0xbc,0x0A,0xff}, //6M10
1074:TP2824/TP2802.c ****     {0x48,0x13,0x0f,0x00,0x32,0xa0,0x55,0x06,0x72,0x15,0xdc,0x0A,0xff}, //4M30
1075:TP2824/TP2802.c ****     {0x48,0x13,0x20,0x00,0x20,0xa0,0x55,0x07,0xbc,0x15,0xdc,0x0A,0xff}  //4M25
1076:TP2824/TP2802.c **** 
1077:TP2824/TP2802.c ****     //{0xc8,0x13,0x6c,0x20,0x2c,0xf0,0x5a,0x0b,0xb8,0x16,0x72,0xff}, //2592x1520p15
1078:TP2824/TP2802.c **** };
1079:TP2824/TP2802.c **** 
1080:TP2824/TP2802.c **** static void tp28xx_SYSCLK_V2(unsigned char ch)
1081:TP2824/TP2802.c **** {
1082:TP2824/TP2802.c ****     unsigned char tmp;
1083:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0xf5);
1084:TP2824/TP2802.c ****     tmp |= SYS_MODE[ch];
1085:TP2824/TP2802.c ****     tp28xx_byte_write(0xf5, tmp);
1086:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x35);
1087:TP2824/TP2802.c ****     tmp |= 0x20;
1088:TP2824/TP2802.c ****     tp28xx_byte_write(0x35, tmp);
1089:TP2824/TP2802.c **** }
1090:TP2824/TP2802.c **** static void tp28xx_SYSCLK_V1(unsigned char ch)
1091:TP2824/TP2802.c **** {
1092:TP2824/TP2802.c ****     unsigned char tmp;
1093:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0xf5);
1094:TP2824/TP2802.c ****     tmp &= SYS_AND[ch];
1095:TP2824/TP2802.c ****     tp28xx_byte_write(0xf5, tmp);
1096:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x35);
1097:TP2824/TP2802.c ****     tmp &= 0xdf;
1098:TP2824/TP2802.c ****     tp28xx_byte_write(0x35, tmp);
1099:TP2824/TP2802.c **** }
1100:TP2824/TP2802.c **** 
1101:TP2824/TP2802.c **** void Set_VidRes(tByte ch)
1102:TP2824/TP2802.c **** {
1103:TP2824/TP2802.c ****     tByte index, sys, tmp;
1104:TP2824/TP2802.c **** 	sys = 1;  //V1
1105:TP2824/TP2802.c ****     //printf("Set_VidRes");
1106:TP2824/TP2802.c ****     switch(mode[ch])
1107:TP2824/TP2802.c ****     {
1108:TP2824/TP2802.c ****     case R1080P30:
1109:TP2824/TP2802.c ****         index=1;//1080p30
1110:TP2824/TP2802.c ****         sys=1;//V1
1111:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1112:TP2824/TP2802.c ****         printf("1080p30");
1113:TP2824/TP2802.c ****         break;
1114:TP2824/TP2802.c **** 
1115:TP2824/TP2802.c ****     case R1080P25:
1116:TP2824/TP2802.c ****         index=2;//1080p25
ARM GAS  /tmp/ccSZlabO.s 			page 21


1117:TP2824/TP2802.c ****         sys=1;//V1
1118:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1119:TP2824/TP2802.c ****         printf("1080p25");
1120:TP2824/TP2802.c ****         break;
1121:TP2824/TP2802.c **** 
1122:TP2824/TP2802.c ****     case R720P60:
1123:TP2824/TP2802.c ****         index=3;//720p60 720p30V2
1124:TP2824/TP2802.c ****         sys=1;//V1
1125:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1126:TP2824/TP2802.c ****         printf("720p60");
1127:TP2824/TP2802.c ****         break;
1128:TP2824/TP2802.c **** 
1129:TP2824/TP2802.c ****     case R720P30V2:
1130:TP2824/TP2802.c ****         index=11;//720p30V2 
1131:TP2824/TP2802.c ****         sys=2;//V2
1132:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1133:TP2824/TP2802.c ****         printf("720p30V2");
1134:TP2824/TP2802.c ****         break;
1135:TP2824/TP2802.c **** 
1136:TP2824/TP2802.c ****     case R720P50:
1137:TP2824/TP2802.c ****         index=4;//720p50 720p25V2
1138:TP2824/TP2802.c ****         sys=1;//V1
1139:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1140:TP2824/TP2802.c ****         printf("720p50");
1141:TP2824/TP2802.c ****         break;
1142:TP2824/TP2802.c **** 
1143:TP2824/TP2802.c ****     case R720P25V2:
1144:TP2824/TP2802.c ****         index=12;//720p25V2 
1145:TP2824/TP2802.c ****         sys=2;//V2
1146:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1147:TP2824/TP2802.c ****         printf("720p25V2");
1148:TP2824/TP2802.c ****         break;
1149:TP2824/TP2802.c **** 
1150:TP2824/TP2802.c ****     case R720P30:
1151:TP2824/TP2802.c ****         index=5;//720p30
1152:TP2824/TP2802.c ****         sys=1;//V1
1153:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1154:TP2824/TP2802.c ****         printf("720p30");
1155:TP2824/TP2802.c ****         break;
1156:TP2824/TP2802.c **** 
1157:TP2824/TP2802.c ****     case R720P25:
1158:TP2824/TP2802.c ****         index=6;//720p25
1159:TP2824/TP2802.c ****         sys=1;//V1
1160:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1161:TP2824/TP2802.c ****         printf("720p25");
1162:TP2824/TP2802.c ****         break;
1163:TP2824/TP2802.c **** 
1164:TP2824/TP2802.c ****     case PAL:
1165:TP2824/TP2802.c ****         index=8;
1166:TP2824/TP2802.c ****         sys=4;
1167:TP2824/TP2802.c ****         ManVidResRx=RES1920X576;
1168:TP2824/TP2802.c ****         printf("PAL");
1169:TP2824/TP2802.c ****         break;
1170:TP2824/TP2802.c **** 
1171:TP2824/TP2802.c ****     case NTSC:
1172:TP2824/TP2802.c ****         index=7;
1173:TP2824/TP2802.c ****         sys=3;
ARM GAS  /tmp/ccSZlabO.s 			page 22


1174:TP2824/TP2802.c ****         ManVidResRx=RES1920X480;
1175:TP2824/TP2802.c ****         printf("NTSC");
1176:TP2824/TP2802.c ****         break;
1177:TP2824/TP2802.c **** 
1178:TP2824/TP2802.c ****     case R3M18:
1179:TP2824/TP2802.c ****         index=9;//3M18           
1180:TP2824/TP2802.c ****         sys=1;//V1
1181:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1182:TP2824/TP2802.c ****         printf("3M18");
1183:TP2824/TP2802.c ****         break;
1184:TP2824/TP2802.c **** 
1185:TP2824/TP2802.c ****     case R5M12:
1186:TP2824/TP2802.c ****         index=10;//5M12 
1187:TP2824/TP2802.c ****         sys=1;//V1
1188:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1189:TP2824/TP2802.c ****         printf("5M12");
1190:TP2824/TP2802.c ****         break;
1191:TP2824/TP2802.c **** 
1192:TP2824/TP2802.c ****     case R4M15:
1193:TP2824/TP2802.c ****         index=13;//4M15
1194:TP2824/TP2802.c ****         sys=1;//V1
1195:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1196:TP2824/TP2802.c ****         printf("4M15");
1197:TP2824/TP2802.c ****         break;
1198:TP2824/TP2802.c **** 
1199:TP2824/TP2802.c ****     case R3M20:
1200:TP2824/TP2802.c ****         index=14;//3M20
1201:TP2824/TP2802.c ****         sys=1;//V1
1202:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1203:TP2824/TP2802.c ****         printf("3M20");
1204:TP2824/TP2802.c ****         break;
1205:TP2824/TP2802.c **** 
1206:TP2824/TP2802.c ****     case R4M12:
1207:TP2824/TP2802.c ****         index=15;//4M12
1208:TP2824/TP2802.c ****         sys=1;//V1
1209:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1210:TP2824/TP2802.c ****         printf("4M12");
1211:TP2824/TP2802.c ****         break;
1212:TP2824/TP2802.c **** 
1213:TP2824/TP2802.c ****     case R6M10:
1214:TP2824/TP2802.c ****         index=16;//6M10
1215:TP2824/TP2802.c ****         sys=1;//V1
1216:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
1217:TP2824/TP2802.c ****         printf("6M10");
1218:TP2824/TP2802.c ****         break;
1219:TP2824/TP2802.c **** 
1220:TP2824/TP2802.c ****     case R4M30:
1221:TP2824/TP2802.c ****         index=17;//4M30
1222:TP2824/TP2802.c ****         sys=1;//V1
1223:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
1224:TP2824/TP2802.c ****         printf("4M30");
1225:TP2824/TP2802.c ****         break;
1226:TP2824/TP2802.c **** 
1227:TP2824/TP2802.c ****     default:
1228:TP2824/TP2802.c ****         index=1;//1080p30
1229:TP2824/TP2802.c ****         break;
1230:TP2824/TP2802.c ****     }
ARM GAS  /tmp/ccSZlabO.s 			page 23


1231:TP2824/TP2802.c ****     printf("...\r\n");
1232:TP2824/TP2802.c **** 
1233:TP2824/TP2802.c ****     //I2CDeviceSet(TVII2CAddress, ptr_TP2802_Res );
1234:TP2824/TP2802.c ****     I2CDeviceSet2( TP2802_FORMAT_DataSet[0],TP2802_FORMAT_DataSet[index] );
1235:TP2824/TP2802.c ****     //	printf("chip= 0x%4x\r\n",chip);
1236:TP2824/TP2802.c **** if( mode[ch]==R1080P30)
1237:TP2824/TP2802.c **** {
1238:TP2824/TP2802.c ****     tp28xx_byte_write(0x16, 0xCE);
1239:TP2824/TP2802.c **** }
1240:TP2824/TP2802.c **** 
1241:TP2824/TP2802.c ****     if(TP2853C == chip)
1242:TP2824/TP2802.c ****     {
1243:TP2824/TP2802.c ****         I2CDeviceSet2( TP2853C_MODE_DataSet[0],TP2853C_MODE_DataSet[sys] );
1244:TP2824/TP2802.c ****     }
1245:TP2824/TP2802.c ****     else if(TP2833 == chip)
1246:TP2824/TP2802.c ****     {
1247:TP2824/TP2802.c ****         I2CDeviceSet2( TP2833_MODE_DataSet[0],TP2833_MODE_DataSet[sys] );
1248:TP2824/TP2802.c ****     }
1249:TP2824/TP2802.c ****     else if(TP2834 == chip)
1250:TP2824/TP2802.c ****     {
1251:TP2824/TP2802.c ****         I2CDeviceSet2( TP2834_MODE_DataSet[0],TP2834_MODE_DataSet[sys] );
1252:TP2824/TP2802.c ****     }
1253:TP2824/TP2802.c ****     if(TP2826 == chip)
1254:TP2824/TP2802.c ****     {
1255:TP2824/TP2802.c ****         printf("tp2826MODEDATASET\r\n");
1256:TP2824/TP2802.c ****         I2CDeviceSet2( TP2826_MODE_DataSet[0],TP2826_MODE_DataSet[sys] );
1257:TP2824/TP2802.c ****     }
1258:TP2824/TP2802.c ****     if(TP2824C == chip)
1259:TP2824/TP2802.c ****     {
1260:TP2824/TP2802.c ****         printf("tp2824C MODEDATASET\r\n");
1261:TP2824/TP2802.c ****         I2CDeviceSet2( TP2824C_MODE_DataSet[0],TP2824C_MODE_DataSet[sys] );
1262:TP2824/TP2802.c ****     }
1263:TP2824/TP2802.c **** 
1264:TP2824/TP2802.c ****     if(1 == sys)
1265:TP2824/TP2802.c ****         tp28xx_SYSCLK_V1(ch);
1266:TP2824/TP2802.c ****     else
1267:TP2824/TP2802.c ****         tp28xx_SYSCLK_V2(ch);
1268:TP2824/TP2802.c **** 
1269:TP2824/TP2802.c ****     tp28xx_byte_write(0x13, 0x00);
1270:TP2824/TP2802.c ****     tmp=tp28xx_byte_read(0x14);
1271:TP2824/TP2802.c ****     tmp &= 0x9f;
1272:TP2824/TP2802.c ****     tp28xx_byte_write(0x14, tmp);
1273:TP2824/TP2802.c **** 
1274:TP2824/TP2802.c **** #if(OUTPUT == Bits16out)
1275:TP2824/TP2802.c ****     tmp=tp28xx_byte_read(0x02);
1276:TP2824/TP2802.c ****     tmp &= 0x7f;
1277:TP2824/TP2802.c ****     tp28xx_byte_write(0x02, tmp);
1278:TP2824/TP2802.c **** #else
1279:TP2824/TP2802.c ****     tmp=tp28xx_byte_read(0x02);
1280:TP2824/TP2802.c ****     tmp |= 0x80;
1281:TP2824/TP2802.c ****     tp28xx_byte_write(0x02, tmp);
1282:TP2824/TP2802.c **** #endif
1283:TP2824/TP2802.c **** }
1284:TP2824/TP2802.c **** 
1285:TP2824/TP2802.c **** tByte Set_HDA(tByte ch)
1286:TP2824/TP2802.c **** {
1287:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccSZlabO.s 			page 24


1288:TP2824/TP2802.c ****     tByte index,tmp;
1289:TP2824/TP2802.c ****     index=0;
1290:TP2824/TP2802.c **** 
1291:TP2824/TP2802.c ****     switch(mode[ch])
1292:TP2824/TP2802.c ****     {
1293:TP2824/TP2802.c ****     case R1080P30:
1294:TP2824/TP2802.c ****         index=3;
1295:TP2824/TP2802.c ****         break;
1296:TP2824/TP2802.c **** 
1297:TP2824/TP2802.c ****     case R1080P25:
1298:TP2824/TP2802.c ****         index=4;
1299:TP2824/TP2802.c ****         break;
1300:TP2824/TP2802.c **** 		
1301:TP2824/TP2802.c ****     case R720P60://20200507    
1302:TP2824/TP2802.c ****     case R720P30V2:
1303:TP2824/TP2802.c ****         index=1;
1304:TP2824/TP2802.c ****         break;
1305:TP2824/TP2802.c **** 		
1306:TP2824/TP2802.c ****     case R720P50://20200507    
1307:TP2824/TP2802.c ****     case R720P25V2:
1308:TP2824/TP2802.c ****         index=2;
1309:TP2824/TP2802.c ****         break;
1310:TP2824/TP2802.c ****     }
1311:TP2824/TP2802.c ****     if(index)
1312:TP2824/TP2802.c ****     {
1313:TP2824/TP2802.c ****         Set_VidRes(ch);
1314:TP2824/TP2802.c **** 
1315:TP2824/TP2802.c ****         if(TP2853C == chip)
1316:TP2824/TP2802.c ****         {
1317:TP2824/TP2802.c ****             I2CDeviceSet2(TP2853C_HDA_DataSet[0],TP2853C_HDA_DataSet[index] );
1318:TP2824/TP2802.c ****         }
1319:TP2824/TP2802.c ****         else if(TP2833 == chip || TP2834 == chip )
1320:TP2824/TP2802.c ****         {
1321:TP2824/TP2802.c ****             I2CDeviceSet2(TP2833_HDA_DataSet[0],TP2833_HDA_DataSet[index] );
1322:TP2824/TP2802.c ****         }
1323:TP2824/TP2802.c ****         else if(TP2826 == chip)
1324:TP2824/TP2802.c ****         {
1325:TP2824/TP2802.c ****             I2CDeviceSet2(TP2826_HDA_DataSet[0],TP2826_HDA_DataSet[index] );
1326:TP2824/TP2802.c ****         }
1327:TP2824/TP2802.c ****         else if(TP2824C == chip)
1328:TP2824/TP2802.c ****         {
1329:TP2824/TP2802.c ****             I2CDeviceSet2(TP2824C_HDA_DataSet[0],TP2824C_HDA_DataSet[index] );
1330:TP2824/TP2802.c ****         }
1331:TP2824/TP2802.c ****         tmp=tp28xx_byte_read(0x14);
1332:TP2824/TP2802.c ****         tmp |= 0x40;
1333:TP2824/TP2802.c **** 
1334:TP2824/TP2802.c **** 		
1335:TP2824/TP2802.c ****    	tmp|=0x0a;//0x14 sharpness   =0x0a ryan@20210317
1336:TP2824/TP2802.c ****    
1337:TP2824/TP2802.c ****         tp28xx_byte_write(0x14, tmp);
1338:TP2824/TP2802.c **** 
1339:TP2824/TP2802.c ****     }
1340:TP2824/TP2802.c ****     return index;
1341:TP2824/TP2802.c **** }
1342:TP2824/TP2802.c **** 
1343:TP2824/TP2802.c **** tByte Set_HDC(tByte ch)
1344:TP2824/TP2802.c **** {
ARM GAS  /tmp/ccSZlabO.s 			page 25


1345:TP2824/TP2802.c **** 
1346:TP2824/TP2802.c ****     tByte index;
1347:TP2824/TP2802.c **** 
1348:TP2824/TP2802.c ****     index=0;
1349:TP2824/TP2802.c **** 
1350:TP2824/TP2802.c ****     switch(mode[ch])
1351:TP2824/TP2802.c ****     {
1352:TP2824/TP2802.c **** 
1353:TP2824/TP2802.c ****     case R1080P30:
1354:TP2824/TP2802.c ****         index=3;
1355:TP2824/TP2802.c ****         break;
1356:TP2824/TP2802.c **** 
1357:TP2824/TP2802.c ****     case R1080P25:
1358:TP2824/TP2802.c ****         index=4;
1359:TP2824/TP2802.c ****         break;
1360:TP2824/TP2802.c **** 
1361:TP2824/TP2802.c ****     case R720P60://20200507    
1362:TP2824/TP2802.c ****     case R720P30V2:
1363:TP2824/TP2802.c ****         index=1;
1364:TP2824/TP2802.c ****         break;
1365:TP2824/TP2802.c **** 
1366:TP2824/TP2802.c ****     case R720P50://20200507    
1367:TP2824/TP2802.c ****     case R720P25V2:
1368:TP2824/TP2802.c ****         index=2;
1369:TP2824/TP2802.c ****         break;
1370:TP2824/TP2802.c ****     }
1371:TP2824/TP2802.c ****     if(index)
1372:TP2824/TP2802.c ****     {
1373:TP2824/TP2802.c ****         Set_VidRes(ch);
1374:TP2824/TP2802.c **** 
1375:TP2824/TP2802.c ****         if(TP2853C == chip)
1376:TP2824/TP2802.c ****         {
1377:TP2824/TP2802.c ****             I2CDeviceSet2( TP2853C_HDC_DataSet[0],TP2853C_HDC_DataSet[index] );
1378:TP2824/TP2802.c ****         }
1379:TP2824/TP2802.c ****         else if(TP2833 == chip || TP2834 == chip )
1380:TP2824/TP2802.c ****         {
1381:TP2824/TP2802.c ****             I2CDeviceSet2( TP2853C_HDC_DataSet[0],TP2853C_HDC_DataSet[index] );
1382:TP2824/TP2802.c ****         }
1383:TP2824/TP2802.c ****         else if(TP2826 == chip)
1384:TP2824/TP2802.c ****         {
1385:TP2824/TP2802.c ****             I2CDeviceSet2( TP2826_HDC_DataSet[0],TP2826_HDC_DataSet[index] );
1386:TP2824/TP2802.c ****         }
1387:TP2824/TP2802.c ****         else if(TP2824C == chip)
1388:TP2824/TP2802.c ****         {
1389:TP2824/TP2802.c ****             I2CDeviceSet2( TP2824C_HDC_DataSet[0],TP2824C_HDC_DataSet[index] );
1390:TP2824/TP2802.c ****         }
1391:TP2824/TP2802.c ****         tp28xx_byte_write(0x13, 0x40);
1392:TP2824/TP2802.c ****     }
1393:TP2824/TP2802.c ****     return index;
1394:TP2824/TP2802.c **** }
1395:TP2824/TP2802.c **** 
1396:TP2824/TP2802.c **** tByte Det_VidRes()
1397:TP2824/TP2802.c **** {
1398:TP2824/TP2802.c ****     tByte CVSTD;
1399:TP2824/TP2802.c ****     tByte RES;
1400:TP2824/TP2802.c **** 
1401:TP2824/TP2802.c ****     CVSTD = tp28xx_byte_read(0x03) & 0x07;
ARM GAS  /tmp/ccSZlabO.s 			page 26


1402:TP2824/TP2802.c **** 
1403:TP2824/TP2802.c ****     switch (CVSTD)
1404:TP2824/TP2802.c ****     {
1405:TP2824/TP2802.c **** 
1406:TP2824/TP2802.c ****     case 0x00:
1407:TP2824/TP2802.c ****         RES = R720P60;
1408:TP2824/TP2802.c ****         break;
1409:TP2824/TP2802.c ****     case 0x01:
1410:TP2824/TP2802.c ****         RES = R720P50;
1411:TP2824/TP2802.c ****         break;
1412:TP2824/TP2802.c ****     case 0x02:
1413:TP2824/TP2802.c ****         RES = R1080P30;
1414:TP2824/TP2802.c ****         break;
1415:TP2824/TP2802.c ****     case 0x03:
1416:TP2824/TP2802.c ****         RES = R1080P25;
1417:TP2824/TP2802.c ****         break;
1418:TP2824/TP2802.c ****     case 0x04:
1419:TP2824/TP2802.c ****         RES = R720P30;
1420:TP2824/TP2802.c ****         break;
1421:TP2824/TP2802.c ****     case 0x05:
1422:TP2824/TP2802.c ****         RES = R720P25;
1423:TP2824/TP2802.c ****         break;
1424:TP2824/TP2802.c ****     case 0x06:
1425:TP2824/TP2802.c ****         printf("\r\nN/P detected");
1426:TP2824/TP2802.c ****         RES = NTPAL;
1427:TP2824/TP2802.c ****         break;
1428:TP2824/TP2802.c ****     default:
1429:TP2824/TP2802.c ****         printf("\r\nNo res detect...");
1430:TP2824/TP2802.c ****         RES = NoDet;
1431:TP2824/TP2802.c ****         break;
1432:TP2824/TP2802.c ****     }
1433:TP2824/TP2802.c **** 
1434:TP2824/TP2802.c ****     return RES;
1435:TP2824/TP2802.c **** 
1436:TP2824/TP2802.c **** }
1437:TP2824/TP2802.c **** tByte Det_VideoLoss(tByte ch)
1438:TP2824/TP2802.c **** {
1439:TP2824/TP2802.c **** 
1440:TP2824/TP2802.c ****     tByte VDLOSS;
1441:TP2824/TP2802.c **** 
1442:TP2824/TP2802.c ****     tp28xx_byte_write(0x40,ch&0x03);
1443:TP2824/TP2802.c ****     VDLOSS = tp28xx_byte_read(0x01);
1444:TP2824/TP2802.c **** //	printf("video status 0x%02x on ch%01x\r\n",(tWord)VDLOSS,(tWord)ch);
1445:TP2824/TP2802.c **** 
1446:TP2824/TP2802.c ****     if(VDLOSS)	printf("No ");
1447:TP2824/TP2802.c **** 
1448:TP2824/TP2802.c ****     printf("video detected");
1449:TP2824/TP2802.c **** 
1450:TP2824/TP2802.c **** 
1451:TP2824/TP2802.c ****     VDLOSS = VDLOSS>>7;
1452:TP2824/TP2802.c ****     return VDLOSS;
1453:TP2824/TP2802.c **** }
1454:TP2824/TP2802.c **** 
1455:TP2824/TP2802.c **** void ManualAGC(unsigned char ch)
1456:TP2824/TP2802.c **** {
1457:TP2824/TP2802.c ****     unsigned int agc;
1458:TP2824/TP2802.c ****     unsigned char tmp;
ARM GAS  /tmp/ccSZlabO.s 			page 27


1459:TP2824/TP2802.c ****     //unsigned int i;
1460:TP2824/TP2802.c **** 
1461:TP2824/TP2802.c ****     tp28xx_byte_write(0x2F, 0x02);
1462:TP2824/TP2802.c ****     agc = tp28xx_byte_read(0x04);
1463:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
1464:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
1465:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
1466:TP2824/TP2802.c ****     agc &= 0x3f0;
1467:TP2824/TP2802.c ****     agc >>=1;
1468:TP2824/TP2802.c ****     if(agc > 0x1ff) agc = 0x1ff;
1469:TP2824/TP2802.c **** 
1470:TP2824/TP2802.c ****     printf("result AGC=0X%04x ch%02X\r\n", (tWord)agc, (tWord)ch);
1471:TP2824/TP2802.c ****     tp28xx_byte_write(0x08, agc&0xff);
1472:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x06);
1473:TP2824/TP2802.c ****     tmp &=0xf9;
1474:TP2824/TP2802.c ****     tmp |=(agc>>7)&0x02;
1475:TP2824/TP2802.c ****     tmp |=0x04;
1476:TP2824/TP2802.c ****     tp28xx_byte_write(0x06,tmp);
1477:TP2824/TP2802.c ****     
1478:TP2824/TP2802.c **** //test Dump Reg 
1479:TP2824/TP2802.c **** /*
1480:TP2824/TP2802.c ****     printf("DumpReg@strat\r\n") ;  
1481:TP2824/TP2802.c ****     tp28xx_byte_write(0x40,01); //
1482:TP2824/TP2802.c ****     for (i = 2 ; i< 255 ;i++)
1483:TP2824/TP2802.c ****     {
1484:TP2824/TP2802.c ****         tmp = tp28xx_byte_read((tByte)i);
1485:TP2824/TP2802.c ****         printf("88,%02X,%02X\r\n", i , (int)tmp ) ; 
1486:TP2824/TP2802.c ****     }
1487:TP2824/TP2802.c ****     printf("DumpReg@end\r\n") ; 
1488:TP2824/TP2802.c **** */
1489:TP2824/TP2802.c ****     
1490:TP2824/TP2802.c **** }
1491:TP2824/TP2802.c **** 
1492:TP2824/TP2802.c **** 
1493:TP2824/TP2802.c **** /*
1494:TP2824/TP2802.c **** static void tp2802D_reset_default(unsigned char ch)
1495:TP2824/TP2802.c **** {
1496:TP2824/TP2802.c ****     unsigned char tmp;
1497:TP2824/TP2802.c ****     tp28xx_byte_write(0x3A, 0x01);
1498:TP2824/TP2802.c ****     tp28xx_byte_write(0x0B, 0xC0);
1499:TP2824/TP2802.c ****     tp28xx_byte_write(0x07, 0xC0);
1500:TP2824/TP2802.c ****     tp28xx_byte_write(0x2e, 0x70);
1501:TP2824/TP2802.c ****     tp28xx_byte_write(0x39, 0x42);
1502:TP2824/TP2802.c ****     tp28xx_byte_write(0x09, 0x24);
1503:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x06);   // soft reset and auto agc when cable is unplug
1504:TP2824/TP2802.c ****     tmp &= 0x7b;
1505:TP2824/TP2802.c ****     tp28xx_byte_write(0x06, tmp);
1506:TP2824/TP2802.c **** 
1507:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0xf5);
1508:TP2824/TP2802.c ****     if( tmp & SYS_MODE[ch])
1509:TP2824/TP2802.c ****     {
1510:TP2824/TP2802.c ****         tmp &= SYS_AND[ch];
1511:TP2824/TP2802.c ****         tp28xx_byte_write(0xf5, tmp);
1512:TP2824/TP2802.c ****     }
1513:TP2824/TP2802.c **** }
1514:TP2824/TP2802.c **** */
1515:TP2824/TP2802.c **** /*  //chunyu
ARM GAS  /tmp/ccSZlabO.s 			page 28


1516:TP2824/TP2802.c **** static void tp282x_reset_AGC_CLK(unsigned char ch)
1517:TP2824/TP2802.c **** {
1518:TP2824/TP2802.c ****     unsigned char tmp;
1519:TP2824/TP2802.c **** 
1520:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x06);
1521:TP2824/TP2802.c ****     tmp &= 0xfb;
1522:TP2824/TP2802.c ****     tp28xx_byte_write(0x06, tmp);
1523:TP2824/TP2802.c **** 
1524:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0xf5);
1525:TP2824/TP2802.c ****     tmp &= SYS_AND[ch];
1526:TP2824/TP2802.c ****     tp28xx_byte_write(0xf5, tmp);
1527:TP2824/TP2802.c **** 
1528:TP2824/TP2802.c ****     tp28xx_byte_write(0x35, 0x05);
1529:TP2824/TP2802.c ****     tp28xx_byte_write(0x26, 0x01);
1530:TP2824/TP2802.c **** }
1531:TP2824/TP2802.c **** */
1532:TP2824/TP2802.c **** static void tp2824_reset_default(void)
1533:TP2824/TP2802.c **** {
  26              		.loc 1 1533 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
1534:TP2824/TP2802.c ****     //unsigned char tmp;
1535:TP2824/TP2802.c ****     //tp28xx_byte_write(addr, 0x07, 0x40);
1536:TP2824/TP2802.c ****     //tp28xx_byte_write(addr, 0x0b, 0x40);
1537:TP2824/TP2802.c ****     //tp28xx_byte_write(addr, 0x3A, 0x88);
1538:TP2824/TP2802.c ****     tp28xx_byte_write(0x26, 0x01);
  35              		.loc 1 1538 0
  36 0002 2620     		movs	r0, #38
  37 0004 0121     		movs	r1, #1
  38 0006 FFF7FEFF 		bl	tp28xx_byte_write
  39              	.LVL0:
  40 000a 08BD     		pop	{r3, pc}
  41              		.cfi_endproc
  42              	.LFE76:
  44              		.section	.text.tp28xx_SYSCLK_V1,"ax",%progbits
  45              		.align	2
  46              		.thumb
  47              		.thumb_func
  49              	tp28xx_SYSCLK_V1:
  50              	.LFB69:
1091:TP2824/TP2802.c ****     unsigned char tmp;
  51              		.loc 1 1091 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              	.LVL1:
  56 0000 10B5     		push	{r4, lr}
  57              	.LCFI1:
  58              		.cfi_def_cfa_offset 8
  59              		.cfi_offset 4, -8
  60              		.cfi_offset 14, -4
ARM GAS  /tmp/ccSZlabO.s 			page 29


  61 0002 0446     		mov	r4, r0
1093:TP2824/TP2802.c ****     tmp &= SYS_AND[ch];
  62              		.loc 1 1093 0
  63 0004 F520     		movs	r0, #245
  64              	.LVL2:
  65 0006 FFF7FEFF 		bl	tp28xx_byte_read
  66              	.LVL3:
1094:TP2824/TP2802.c ****     tp28xx_byte_write(0xf5, tmp);
  67              		.loc 1 1094 0
  68 000a 074B     		ldr	r3, .L5
  69 000c 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
  70 000e 0140     		ands	r1, r1, r0
  71              	.LVL4:
1095:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x35);
  72              		.loc 1 1095 0
  73 0010 F520     		movs	r0, #245
  74 0012 FFF7FEFF 		bl	tp28xx_byte_write
  75              	.LVL5:
1096:TP2824/TP2802.c ****     tmp &= 0xdf;
  76              		.loc 1 1096 0
  77 0016 3520     		movs	r0, #53
  78 0018 FFF7FEFF 		bl	tp28xx_byte_read
  79              	.LVL6:
1097:TP2824/TP2802.c ****     tp28xx_byte_write(0x35, tmp);
  80              		.loc 1 1097 0
  81 001c 00F0DF01 		and	r1, r0, #223
  82              	.LVL7:
1098:TP2824/TP2802.c **** }
  83              		.loc 1 1098 0
  84 0020 3520     		movs	r0, #53
  85 0022 FFF7FEFF 		bl	tp28xx_byte_write
  86              	.LVL8:
  87 0026 10BD     		pop	{r4, pc}
  88              	.L6:
  89              		.align	2
  90              	.L5:
  91 0028 00000000 		.word	.LANCHOR0
  92              		.cfi_endproc
  93              	.LFE69:
  95              		.section	.text.tp28xx_SYSCLK_V2,"ax",%progbits
  96              		.align	2
  97              		.thumb
  98              		.thumb_func
 100              	tp28xx_SYSCLK_V2:
 101              	.LFB68:
1081:TP2824/TP2802.c ****     unsigned char tmp;
 102              		.loc 1 1081 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              	.LVL9:
 107 0000 10B5     		push	{r4, lr}
 108              	.LCFI2:
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 4, -8
 111              		.cfi_offset 14, -4
 112 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccSZlabO.s 			page 30


1083:TP2824/TP2802.c ****     tmp |= SYS_MODE[ch];
 113              		.loc 1 1083 0
 114 0004 F520     		movs	r0, #245
 115              	.LVL10:
 116 0006 FFF7FEFF 		bl	tp28xx_byte_read
 117              	.LVL11:
1084:TP2824/TP2802.c ****     tp28xx_byte_write(0xf5, tmp);
 118              		.loc 1 1084 0
 119 000a 084B     		ldr	r3, .L9
 120 000c 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 121 000e 0143     		orrs	r1, r1, r0
 122              	.LVL12:
1085:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x35);
 123              		.loc 1 1085 0
 124 0010 F520     		movs	r0, #245
 125 0012 C9B2     		uxtb	r1, r1
 126 0014 FFF7FEFF 		bl	tp28xx_byte_write
 127              	.LVL13:
1086:TP2824/TP2802.c ****     tmp |= 0x20;
 128              		.loc 1 1086 0
 129 0018 3520     		movs	r0, #53
 130 001a FFF7FEFF 		bl	tp28xx_byte_read
 131              	.LVL14:
1087:TP2824/TP2802.c ****     tp28xx_byte_write(0x35, tmp);
 132              		.loc 1 1087 0
 133 001e 40F02001 		orr	r1, r0, #32
 134              	.LVL15:
1088:TP2824/TP2802.c **** }
 135              		.loc 1 1088 0
 136 0022 3520     		movs	r0, #53
 137 0024 C9B2     		uxtb	r1, r1
 138 0026 FFF7FEFF 		bl	tp28xx_byte_write
 139              	.LVL16:
 140 002a 10BD     		pop	{r4, pc}
 141              	.L10:
 142              		.align	2
 143              	.L9:
 144 002c 00000000 		.word	.LANCHOR1
 145              		.cfi_endproc
 146              	.LFE68:
 148              		.section	.text.tp2853C_reset_default,"ax",%progbits
 149              		.align	2
 150              		.thumb
 151              		.thumb_func
 153              	tp2853C_reset_default:
 154              	.LFB77:
1539:TP2824/TP2802.c **** }
1540:TP2824/TP2802.c **** static void tp2853C_reset_default(void)
1541:TP2824/TP2802.c **** {
 155              		.loc 1 1541 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159 0000 08B5     		push	{r3, lr}
 160              	.LCFI3:
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 3, -8
ARM GAS  /tmp/ccSZlabO.s 			page 31


 163              		.cfi_offset 14, -4
1542:TP2824/TP2802.c ****     unsigned char tmp;
1543:TP2824/TP2802.c ****     tp28xx_byte_write(0x07, 0xC0);
 164              		.loc 1 1543 0
 165 0002 0720     		movs	r0, #7
 166 0004 C021     		movs	r1, #192
 167 0006 FFF7FEFF 		bl	tp28xx_byte_write
 168              	.LVL17:
1544:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x14);
 169              		.loc 1 1544 0
 170 000a 1420     		movs	r0, #20
 171 000c FFF7FEFF 		bl	tp28xx_byte_read
 172              	.LVL18:
1545:TP2824/TP2802.c ****     tmp &= 0x9f;
 173              		.loc 1 1545 0
 174 0010 00F09F01 		and	r1, r0, #159
 175              	.LVL19:
1546:TP2824/TP2802.c ****     tp28xx_byte_write(0x14, tmp);
 176              		.loc 1 1546 0
 177 0014 1420     		movs	r0, #20
 178 0016 FFF7FEFF 		bl	tp28xx_byte_write
 179              	.LVL20:
1547:TP2824/TP2802.c ****     tp28xx_byte_write(0x13, 0x00);
 180              		.loc 1 1547 0
 181 001a 1320     		movs	r0, #19
 182 001c 0021     		movs	r1, #0
 183 001e FFF7FEFF 		bl	tp28xx_byte_write
 184              	.LVL21:
1548:TP2824/TP2802.c ****     tp28xx_byte_write(0x26, 0x04);
 185              		.loc 1 1548 0
 186 0022 2620     		movs	r0, #38
 187 0024 0421     		movs	r1, #4
 188 0026 FFF7FEFF 		bl	tp28xx_byte_write
 189              	.LVL22:
1549:TP2824/TP2802.c ****     tp28xx_byte_write(0x06, 0xb2);
 190              		.loc 1 1549 0
 191 002a 0620     		movs	r0, #6
 192 002c B221     		movs	r1, #178
 193 002e FFF7FEFF 		bl	tp28xx_byte_write
 194              	.LVL23:
 195 0032 08BD     		pop	{r3, pc}
 196              		.cfi_endproc
 197              	.LFE77:
 199              		.section	.text.TP28xx_reset_default,"ax",%progbits
 200              		.align	2
 201              		.thumb
 202              		.thumb_func
 204              	TP28xx_reset_default:
 205              	.LFB78:
1550:TP2824/TP2802.c **** }
1551:TP2824/TP2802.c **** static void TP28xx_reset_default(int chip, unsigned char ch)
1552:TP2824/TP2802.c **** {
 206              		.loc 1 1552 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              	.LVL24:
ARM GAS  /tmp/ccSZlabO.s 			page 32


 211 0000 08B5     		push	{r3, lr}
 212              	.LCFI4:
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 3, -8
 215              		.cfi_offset 14, -4
1553:TP2824/TP2802.c ****     /*    if(TP2823 == chip )
1554:TP2824/TP2802.c ****     	{
1555:TP2824/TP2802.c ****                tp282x_reset_AGC_CLK(ch);
1556:TP2824/TP2802.c ****     	}
1557:TP2824/TP2802.c ****         else if(TP2822 == chip )
1558:TP2824/TP2802.c ****     	{
1559:TP2824/TP2802.c ****                tp282x_reset_AGC_CLK(ch);
1560:TP2824/TP2802.c ****     		   tp28xx_byte_write(0x07, 0x40);
1561:TP2824/TP2802.c ****     	}
1562:TP2824/TP2802.c ****         else if(TP2802D == chip )
1563:TP2824/TP2802.c ****         {
1564:TP2824/TP2802.c ****                tp2802D_reset_default( ch);
1565:TP2824/TP2802.c ****         }
1566:TP2824/TP2802.c ****     */
1567:TP2824/TP2802.c ****     if(TP2834 == chip )
 216              		.loc 1 1567 0
 217 0002 2428     		cmp	r0, #36
 218 0004 02D1     		bne	.L14
1568:TP2824/TP2802.c ****     {
1569:TP2824/TP2802.c ****         tp2824_reset_default();
 219              		.loc 1 1569 0
 220 0006 FFF7FEFF 		bl	tp2824_reset_default
 221              	.LVL25:
 222 000a 08BD     		pop	{r3, pc}
 223              	.LVL26:
 224              	.L14:
1570:TP2824/TP2802.c ****     }
1571:TP2824/TP2802.c ****     else if(TP2833 == chip )
 225              		.loc 1 1571 0
 226 000c 2528     		cmp	r0, #37
 227 000e 02D1     		bne	.L16
1572:TP2824/TP2802.c ****     {
1573:TP2824/TP2802.c ****         tp2853C_reset_default();
 228              		.loc 1 1573 0
 229 0010 FFF7FEFF 		bl	tp2853C_reset_default
 230              	.LVL27:
 231 0014 08BD     		pop	{r3, pc}
 232              	.LVL28:
 233              	.L16:
1574:TP2824/TP2802.c ****     }
1575:TP2824/TP2802.c ****     else if(TP2853C == chip )
 234              		.loc 1 1575 0
 235 0016 2628     		cmp	r0, #38
 236 0018 02D1     		bne	.L17
1576:TP2824/TP2802.c ****     {
1577:TP2824/TP2802.c ****         tp2853C_reset_default();
 237              		.loc 1 1577 0
 238 001a FFF7FEFF 		bl	tp2853C_reset_default
 239              	.LVL29:
 240 001e 08BD     		pop	{r3, pc}
 241              	.LVL30:
 242              	.L17:
ARM GAS  /tmp/ccSZlabO.s 			page 33


1578:TP2824/TP2802.c ****     }
1579:TP2824/TP2802.c **** 	else  //chunyu
1580:TP2824/TP2802.c **** 	{	
1581:TP2824/TP2802.c ****         tp2824_reset_default() ;   //chunyu
 243              		.loc 1 1581 0
 244 0020 FFF7FEFF 		bl	tp2824_reset_default
 245              	.LVL31:
 246 0024 08BD     		pop	{r3, pc}
 247              		.cfi_endproc
 248              	.LFE78:
 250 0026 00BF     		.section	.text.I2CDeviceSet1,"ax",%progbits
 251              		.align	2
 252              		.global	I2CDeviceSet1
 253              		.thumb
 254              		.thumb_func
 256              	I2CDeviceSet1:
 257              	.LFB65:
 927:TP2824/TP2802.c **** 	int	cnt=0;
 258              		.loc 1 927 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              	.LVL32:
 263 0000 10B5     		push	{r4, lr}
 264              	.LCFI5:
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 4, -8
 267              		.cfi_offset 14, -4
 268 0002 0446     		mov	r4, r0
 269              	.LVL33:
 938:TP2824/TP2802.c **** 
 270              		.loc 1 938 0
 271 0004 03E0     		b	.L20
 272              	.LVL34:
 273              	.L21:
 943:TP2824/TP2802.c **** 
 274              		.loc 1 943 0
 275 0006 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 276 0008 FFF7FEFF 		bl	tp28xx_byte_write
 277              	.LVL35:
 947:TP2824/TP2802.c **** 
 278              		.loc 1 947 0
 279 000c 0234     		adds	r4, r4, #2
 280              	.LVL36:
 281              	.L20:
 938:TP2824/TP2802.c **** 
 282              		.loc 1 938 0
 283 000e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 284 0010 FF28     		cmp	r0, #255
 285 0012 F8D1     		bne	.L21
 951:TP2824/TP2802.c **** }
 286              		.loc 1 951 0
 287 0014 3220     		movs	r0, #50
 288 0016 FFF7FEFF 		bl	delay
 289              	.LVL37:
 290 001a 10BD     		pop	{r4, pc}
 291              		.cfi_endproc
ARM GAS  /tmp/ccSZlabO.s 			page 34


 292              	.LFE65:
 294              		.section	.text.I2CDeviceSet2,"ax",%progbits
 295              		.align	2
 296              		.global	I2CDeviceSet2
 297              		.thumb
 298              		.thumb_func
 300              	I2CDeviceSet2:
 301              	.LFB66:
 956:TP2824/TP2802.c **** 	int	cnt=0;
 302              		.loc 1 956 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306              	.LVL38:
 307 0000 38B5     		push	{r3, r4, r5, lr}
 308              	.LCFI6:
 309              		.cfi_def_cfa_offset 16
 310              		.cfi_offset 3, -16
 311              		.cfi_offset 4, -12
 312              		.cfi_offset 5, -8
 313              		.cfi_offset 14, -4
 314 0002 0446     		mov	r4, r0
 315 0004 0D46     		mov	r5, r1
 316              	.LVL39:
 960:TP2824/TP2802.c **** 
 317              		.loc 1 960 0
 318 0006 04E0     		b	.L24
 319              	.LVL40:
 320              	.L25:
 965:TP2824/TP2802.c **** 
 321              		.loc 1 965 0
 322 0008 15F8011B 		ldrb	r1, [r5], #1	@ zero_extendqisi2
 323              	.LVL41:
 324 000c FFF7FEFF 		bl	tp28xx_byte_write
 325              	.LVL42:
 969:TP2824/TP2802.c **** 		DatSet++;
 326              		.loc 1 969 0
 327 0010 0134     		adds	r4, r4, #1
 328              	.LVL43:
 329              	.L24:
 960:TP2824/TP2802.c **** 
 330              		.loc 1 960 0
 331 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 332 0014 FF28     		cmp	r0, #255
 333 0016 F7D1     		bne	.L25
 974:TP2824/TP2802.c **** }
 334              		.loc 1 974 0
 335 0018 3220     		movs	r0, #50
 336 001a FFF7FEFF 		bl	delay
 337              	.LVL44:
 338 001e 38BD     		pop	{r3, r4, r5, pc}
 339              		.cfi_endproc
 340              	.LFE66:
 342              		.section	.text.SetRegPage,"ax",%progbits
 343              		.align	2
 344              		.global	SetRegPage
 345              		.thumb
ARM GAS  /tmp/ccSZlabO.s 			page 35


 346              		.thumb_func
 348              	SetRegPage:
 349              	.LFB67:
 978:TP2824/TP2802.c ****     //tByte tmp;
 350              		.loc 1 978 0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              	.LVL45:
 355 0000 08B5     		push	{r3, lr}
 356              	.LCFI7:
 357              		.cfi_def_cfa_offset 8
 358              		.cfi_offset 3, -8
 359              		.cfi_offset 14, -4
 360 0002 0146     		mov	r1, r0
 981:TP2824/TP2802.c ****     //tp28xx_byte_write(0x40,0x04); //chunyu
 361              		.loc 1 981 0
 362 0004 4020     		movs	r0, #64
 363              	.LVL46:
 364 0006 FFF7FEFF 		bl	tp28xx_byte_write
 365              	.LVL47:
 366 000a 08BD     		pop	{r3, pc}
 367              		.cfi_endproc
 368              	.LFE67:
 370              		.section	.text.Set_VidRes,"ax",%progbits
 371              		.align	2
 372              		.global	Set_VidRes
 373              		.thumb
 374              		.thumb_func
 376              	Set_VidRes:
 377              	.LFB70:
1102:TP2824/TP2802.c ****     tByte index, sys, tmp;
 378              		.loc 1 1102 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382              	.LVL48:
 383 0000 70B5     		push	{r4, r5, r6, lr}
 384              	.LCFI8:
 385              		.cfi_def_cfa_offset 16
 386              		.cfi_offset 4, -16
 387              		.cfi_offset 5, -12
 388              		.cfi_offset 6, -8
 389              		.cfi_offset 14, -4
 390 0002 0646     		mov	r6, r0
 391              	.LVL49:
1106:TP2824/TP2802.c ****     {
 392              		.loc 1 1106 0
 393 0004 904B     		ldr	r3, .L59
 394 0006 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 395 0008 262B     		cmp	r3, #38
 396 000a 00F2A780 		bhi	.L57
 397 000e DFE803F0 		tbb	[pc, r3]
 398              	.L32:
 399 0012 24       		.byte	(.L31-.L32)/2
 400 0013 36       		.byte	(.L33-.L32)/2
 401 0014 14       		.byte	(.L34-.L32)/2
ARM GAS  /tmp/ccSZlabO.s 			page 36


 402 0015 1C       		.byte	(.L35-.L32)/2
 403 0016 48       		.byte	(.L36-.L32)/2
 404 0017 51       		.byte	(.L37-.L32)/2
 405 0018 A5       		.byte	(.L57-.L32)/2
 406 0019 A5       		.byte	(.L57-.L32)/2
 407 001a 63       		.byte	(.L38-.L32)/2
 408 001b 5A       		.byte	(.L39-.L32)/2
 409 001c A5       		.byte	(.L57-.L32)/2
 410 001d A5       		.byte	(.L57-.L32)/2
 411 001e 2D       		.byte	(.L40-.L32)/2
 412 001f 3F       		.byte	(.L41-.L32)/2
 413 0020 A5       		.byte	(.L57-.L32)/2
 414 0021 A5       		.byte	(.L57-.L32)/2
 415 0022 A5       		.byte	(.L57-.L32)/2
 416 0023 A5       		.byte	(.L57-.L32)/2
 417 0024 A5       		.byte	(.L57-.L32)/2
 418 0025 A5       		.byte	(.L57-.L32)/2
 419 0026 A5       		.byte	(.L57-.L32)/2
 420 0027 A5       		.byte	(.L57-.L32)/2
 421 0028 A5       		.byte	(.L57-.L32)/2
 422 0029 A5       		.byte	(.L57-.L32)/2
 423 002a A5       		.byte	(.L57-.L32)/2
 424 002b A5       		.byte	(.L57-.L32)/2
 425 002c A5       		.byte	(.L57-.L32)/2
 426 002d A5       		.byte	(.L57-.L32)/2
 427 002e A5       		.byte	(.L57-.L32)/2
 428 002f A5       		.byte	(.L57-.L32)/2
 429 0030 A5       		.byte	(.L57-.L32)/2
 430 0031 A5       		.byte	(.L57-.L32)/2
 431 0032 6C       		.byte	(.L42-.L32)/2
 432 0033 74       		.byte	(.L43-.L32)/2
 433 0034 7C       		.byte	(.L44-.L32)/2
 434 0035 84       		.byte	(.L45-.L32)/2
 435 0036 8C       		.byte	(.L46-.L32)/2
 436 0037 94       		.byte	(.L47-.L32)/2
 437 0038 9C       		.byte	(.L48-.L32)/2
 438 0039 00       		.p2align 1
 439              	.L34:
 440              	.LVL50:
1111:TP2824/TP2802.c ****         printf("1080p30");
 441              		.loc 1 1111 0
 442 003a 0124     		movs	r4, #1
 443 003c 834B     		ldr	r3, .L59+4
 444 003e 1C70     		strb	r4, [r3]
1112:TP2824/TP2802.c ****         break;
 445              		.loc 1 1112 0
 446 0040 8348     		ldr	r0, .L59+8
 447              	.LVL51:
 448 0042 FFF7FEFF 		bl	printf
 449              	.LVL52:
1110:TP2824/TP2802.c ****         ManVidResRx=RES1920X1080;
 450              		.loc 1 1110 0
 451 0046 2546     		mov	r5, r4
1113:TP2824/TP2802.c **** 
 452              		.loc 1 1113 0
 453 0048 8AE0     		b	.L30
 454              	.LVL53:
ARM GAS  /tmp/ccSZlabO.s 			page 37


 455              	.L35:
1118:TP2824/TP2802.c ****         printf("1080p25");
 456              		.loc 1 1118 0
 457 004a 0125     		movs	r5, #1
 458 004c 7F4B     		ldr	r3, .L59+4
 459 004e 1D70     		strb	r5, [r3]
1119:TP2824/TP2802.c ****         break;
 460              		.loc 1 1119 0
 461 0050 8048     		ldr	r0, .L59+12
 462              	.LVL54:
 463 0052 FFF7FEFF 		bl	printf
 464              	.LVL55:
1116:TP2824/TP2802.c ****         sys=1;//V1
 465              		.loc 1 1116 0
 466 0056 0224     		movs	r4, #2
1120:TP2824/TP2802.c **** 
 467              		.loc 1 1120 0
 468 0058 82E0     		b	.L30
 469              	.LVL56:
 470              	.L31:
1125:TP2824/TP2802.c ****         printf("720p60");
 471              		.loc 1 1125 0
 472 005a 0022     		movs	r2, #0
 473 005c 7B4B     		ldr	r3, .L59+4
 474 005e 1A70     		strb	r2, [r3]
1126:TP2824/TP2802.c ****         break;
 475              		.loc 1 1126 0
 476 0060 7D48     		ldr	r0, .L59+16
 477              	.LVL57:
 478 0062 FFF7FEFF 		bl	printf
 479              	.LVL58:
1124:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 480              		.loc 1 1124 0
 481 0066 0125     		movs	r5, #1
1123:TP2824/TP2802.c ****         sys=1;//V1
 482              		.loc 1 1123 0
 483 0068 0324     		movs	r4, #3
1127:TP2824/TP2802.c **** 
 484              		.loc 1 1127 0
 485 006a 79E0     		b	.L30
 486              	.LVL59:
 487              	.L40:
1132:TP2824/TP2802.c ****         printf("720p30V2");
 488              		.loc 1 1132 0
 489 006c 0022     		movs	r2, #0
 490 006e 774B     		ldr	r3, .L59+4
 491 0070 1A70     		strb	r2, [r3]
1133:TP2824/TP2802.c ****         break;
 492              		.loc 1 1133 0
 493 0072 7A48     		ldr	r0, .L59+20
 494              	.LVL60:
 495 0074 FFF7FEFF 		bl	printf
 496              	.LVL61:
1131:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 497              		.loc 1 1131 0
 498 0078 0225     		movs	r5, #2
1130:TP2824/TP2802.c ****         sys=2;//V2
ARM GAS  /tmp/ccSZlabO.s 			page 38


 499              		.loc 1 1130 0
 500 007a 0B24     		movs	r4, #11
1134:TP2824/TP2802.c **** 
 501              		.loc 1 1134 0
 502 007c 70E0     		b	.L30
 503              	.LVL62:
 504              	.L33:
1139:TP2824/TP2802.c ****         printf("720p50");
 505              		.loc 1 1139 0
 506 007e 0022     		movs	r2, #0
 507 0080 724B     		ldr	r3, .L59+4
 508 0082 1A70     		strb	r2, [r3]
1140:TP2824/TP2802.c ****         break;
 509              		.loc 1 1140 0
 510 0084 7648     		ldr	r0, .L59+24
 511              	.LVL63:
 512 0086 FFF7FEFF 		bl	printf
 513              	.LVL64:
1138:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 514              		.loc 1 1138 0
 515 008a 0125     		movs	r5, #1
1137:TP2824/TP2802.c ****         sys=1;//V1
 516              		.loc 1 1137 0
 517 008c 0424     		movs	r4, #4
1141:TP2824/TP2802.c **** 
 518              		.loc 1 1141 0
 519 008e 67E0     		b	.L30
 520              	.LVL65:
 521              	.L41:
1146:TP2824/TP2802.c ****         printf("720p25V2");
 522              		.loc 1 1146 0
 523 0090 0022     		movs	r2, #0
 524 0092 6E4B     		ldr	r3, .L59+4
 525 0094 1A70     		strb	r2, [r3]
1147:TP2824/TP2802.c ****         break;
 526              		.loc 1 1147 0
 527 0096 7348     		ldr	r0, .L59+28
 528              	.LVL66:
 529 0098 FFF7FEFF 		bl	printf
 530              	.LVL67:
1145:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 531              		.loc 1 1145 0
 532 009c 0225     		movs	r5, #2
1144:TP2824/TP2802.c ****         sys=2;//V2
 533              		.loc 1 1144 0
 534 009e 0C24     		movs	r4, #12
1148:TP2824/TP2802.c **** 
 535              		.loc 1 1148 0
 536 00a0 5EE0     		b	.L30
 537              	.LVL68:
 538              	.L36:
1153:TP2824/TP2802.c ****         printf("720p30");
 539              		.loc 1 1153 0
 540 00a2 0022     		movs	r2, #0
 541 00a4 694B     		ldr	r3, .L59+4
 542 00a6 1A70     		strb	r2, [r3]
1154:TP2824/TP2802.c ****         break;
ARM GAS  /tmp/ccSZlabO.s 			page 39


 543              		.loc 1 1154 0
 544 00a8 6F48     		ldr	r0, .L59+32
 545              	.LVL69:
 546 00aa FFF7FEFF 		bl	printf
 547              	.LVL70:
1152:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 548              		.loc 1 1152 0
 549 00ae 0125     		movs	r5, #1
1151:TP2824/TP2802.c ****         sys=1;//V1
 550              		.loc 1 1151 0
 551 00b0 0524     		movs	r4, #5
1155:TP2824/TP2802.c **** 
 552              		.loc 1 1155 0
 553 00b2 55E0     		b	.L30
 554              	.LVL71:
 555              	.L37:
1160:TP2824/TP2802.c ****         printf("720p25");
 556              		.loc 1 1160 0
 557 00b4 0022     		movs	r2, #0
 558 00b6 654B     		ldr	r3, .L59+4
 559 00b8 1A70     		strb	r2, [r3]
1161:TP2824/TP2802.c ****         break;
 560              		.loc 1 1161 0
 561 00ba 6C48     		ldr	r0, .L59+36
 562              	.LVL72:
 563 00bc FFF7FEFF 		bl	printf
 564              	.LVL73:
1159:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 565              		.loc 1 1159 0
 566 00c0 0125     		movs	r5, #1
1158:TP2824/TP2802.c ****         sys=1;//V1
 567              		.loc 1 1158 0
 568 00c2 0624     		movs	r4, #6
1162:TP2824/TP2802.c **** 
 569              		.loc 1 1162 0
 570 00c4 4CE0     		b	.L30
 571              	.LVL74:
 572              	.L39:
1167:TP2824/TP2802.c ****         printf("PAL");
 573              		.loc 1 1167 0
 574 00c6 0322     		movs	r2, #3
 575 00c8 604B     		ldr	r3, .L59+4
 576 00ca 1A70     		strb	r2, [r3]
1168:TP2824/TP2802.c ****         break;
 577              		.loc 1 1168 0
 578 00cc 6848     		ldr	r0, .L59+40
 579              	.LVL75:
 580 00ce FFF7FEFF 		bl	printf
 581              	.LVL76:
1166:TP2824/TP2802.c ****         ManVidResRx=RES1920X576;
 582              		.loc 1 1166 0
 583 00d2 0425     		movs	r5, #4
1165:TP2824/TP2802.c ****         sys=4;
 584              		.loc 1 1165 0
 585 00d4 0824     		movs	r4, #8
1169:TP2824/TP2802.c **** 
 586              		.loc 1 1169 0
ARM GAS  /tmp/ccSZlabO.s 			page 40


 587 00d6 43E0     		b	.L30
 588              	.LVL77:
 589              	.L38:
1174:TP2824/TP2802.c ****         printf("NTSC");
 590              		.loc 1 1174 0
 591 00d8 0222     		movs	r2, #2
 592 00da 5C4B     		ldr	r3, .L59+4
 593 00dc 1A70     		strb	r2, [r3]
1175:TP2824/TP2802.c ****         break;
 594              		.loc 1 1175 0
 595 00de 6548     		ldr	r0, .L59+44
 596              	.LVL78:
 597 00e0 FFF7FEFF 		bl	printf
 598              	.LVL79:
1173:TP2824/TP2802.c ****         ManVidResRx=RES1920X480;
 599              		.loc 1 1173 0
 600 00e4 0325     		movs	r5, #3
1172:TP2824/TP2802.c ****         sys=3;
 601              		.loc 1 1172 0
 602 00e6 0724     		movs	r4, #7
1176:TP2824/TP2802.c **** 
 603              		.loc 1 1176 0
 604 00e8 3AE0     		b	.L30
 605              	.LVL80:
 606              	.L42:
1181:TP2824/TP2802.c ****         printf("3M18");
 607              		.loc 1 1181 0
 608 00ea 0125     		movs	r5, #1
 609 00ec 574B     		ldr	r3, .L59+4
 610 00ee 1D70     		strb	r5, [r3]
1182:TP2824/TP2802.c ****         break;
 611              		.loc 1 1182 0
 612 00f0 6148     		ldr	r0, .L59+48
 613              	.LVL81:
 614 00f2 FFF7FEFF 		bl	printf
 615              	.LVL82:
1179:TP2824/TP2802.c ****         sys=1;//V1
 616              		.loc 1 1179 0
 617 00f6 0924     		movs	r4, #9
1183:TP2824/TP2802.c **** 
 618              		.loc 1 1183 0
 619 00f8 32E0     		b	.L30
 620              	.LVL83:
 621              	.L43:
1188:TP2824/TP2802.c ****         printf("5M12");
 622              		.loc 1 1188 0
 623 00fa 0125     		movs	r5, #1
 624 00fc 534B     		ldr	r3, .L59+4
 625 00fe 1D70     		strb	r5, [r3]
1189:TP2824/TP2802.c ****         break;
 626              		.loc 1 1189 0
 627 0100 5E48     		ldr	r0, .L59+52
 628              	.LVL84:
 629 0102 FFF7FEFF 		bl	printf
 630              	.LVL85:
1186:TP2824/TP2802.c ****         sys=1;//V1
 631              		.loc 1 1186 0
ARM GAS  /tmp/ccSZlabO.s 			page 41


 632 0106 0A24     		movs	r4, #10
1190:TP2824/TP2802.c **** 
 633              		.loc 1 1190 0
 634 0108 2AE0     		b	.L30
 635              	.LVL86:
 636              	.L44:
1195:TP2824/TP2802.c ****         printf("4M15");
 637              		.loc 1 1195 0
 638 010a 0125     		movs	r5, #1
 639 010c 4F4B     		ldr	r3, .L59+4
 640 010e 1D70     		strb	r5, [r3]
1196:TP2824/TP2802.c ****         break;
 641              		.loc 1 1196 0
 642 0110 5B48     		ldr	r0, .L59+56
 643              	.LVL87:
 644 0112 FFF7FEFF 		bl	printf
 645              	.LVL88:
1193:TP2824/TP2802.c ****         sys=1;//V1
 646              		.loc 1 1193 0
 647 0116 0D24     		movs	r4, #13
1197:TP2824/TP2802.c **** 
 648              		.loc 1 1197 0
 649 0118 22E0     		b	.L30
 650              	.LVL89:
 651              	.L45:
1202:TP2824/TP2802.c ****         printf("3M20");
 652              		.loc 1 1202 0
 653 011a 0125     		movs	r5, #1
 654 011c 4B4B     		ldr	r3, .L59+4
 655 011e 1D70     		strb	r5, [r3]
1203:TP2824/TP2802.c ****         break;
 656              		.loc 1 1203 0
 657 0120 5848     		ldr	r0, .L59+60
 658              	.LVL90:
 659 0122 FFF7FEFF 		bl	printf
 660              	.LVL91:
1200:TP2824/TP2802.c ****         sys=1;//V1
 661              		.loc 1 1200 0
 662 0126 0E24     		movs	r4, #14
1204:TP2824/TP2802.c **** 
 663              		.loc 1 1204 0
 664 0128 1AE0     		b	.L30
 665              	.LVL92:
 666              	.L46:
1209:TP2824/TP2802.c ****         printf("4M12");
 667              		.loc 1 1209 0
 668 012a 0125     		movs	r5, #1
 669 012c 474B     		ldr	r3, .L59+4
 670 012e 1D70     		strb	r5, [r3]
1210:TP2824/TP2802.c ****         break;
 671              		.loc 1 1210 0
 672 0130 5548     		ldr	r0, .L59+64
 673              	.LVL93:
 674 0132 FFF7FEFF 		bl	printf
 675              	.LVL94:
1207:TP2824/TP2802.c ****         sys=1;//V1
 676              		.loc 1 1207 0
ARM GAS  /tmp/ccSZlabO.s 			page 42


 677 0136 0F24     		movs	r4, #15
1211:TP2824/TP2802.c **** 
 678              		.loc 1 1211 0
 679 0138 12E0     		b	.L30
 680              	.LVL95:
 681              	.L47:
1216:TP2824/TP2802.c ****         printf("6M10");
 682              		.loc 1 1216 0
 683 013a 0125     		movs	r5, #1
 684 013c 434B     		ldr	r3, .L59+4
 685 013e 1D70     		strb	r5, [r3]
1217:TP2824/TP2802.c ****         break;
 686              		.loc 1 1217 0
 687 0140 5248     		ldr	r0, .L59+68
 688              	.LVL96:
 689 0142 FFF7FEFF 		bl	printf
 690              	.LVL97:
1214:TP2824/TP2802.c ****         sys=1;//V1
 691              		.loc 1 1214 0
 692 0146 1024     		movs	r4, #16
1218:TP2824/TP2802.c **** 
 693              		.loc 1 1218 0
 694 0148 0AE0     		b	.L30
 695              	.LVL98:
 696              	.L48:
1223:TP2824/TP2802.c ****         printf("4M30");
 697              		.loc 1 1223 0
 698 014a 0022     		movs	r2, #0
 699 014c 3F4B     		ldr	r3, .L59+4
 700 014e 1A70     		strb	r2, [r3]
1224:TP2824/TP2802.c ****         break;
 701              		.loc 1 1224 0
 702 0150 4F48     		ldr	r0, .L59+72
 703              	.LVL99:
 704 0152 FFF7FEFF 		bl	printf
 705              	.LVL100:
1222:TP2824/TP2802.c ****         ManVidResRx=RES1280X720;
 706              		.loc 1 1222 0
 707 0156 0125     		movs	r5, #1
1221:TP2824/TP2802.c ****         sys=1;//V1
 708              		.loc 1 1221 0
 709 0158 1124     		movs	r4, #17
1225:TP2824/TP2802.c **** 
 710              		.loc 1 1225 0
 711 015a 01E0     		b	.L30
 712              	.LVL101:
 713              	.L57:
1104:TP2824/TP2802.c ****     //printf("Set_VidRes");
 714              		.loc 1 1104 0
 715 015c 0125     		movs	r5, #1
1228:TP2824/TP2802.c ****         break;
 716              		.loc 1 1228 0
 717 015e 2C46     		mov	r4, r5
 718              	.LVL102:
 719              	.L30:
1231:TP2824/TP2802.c **** 
 720              		.loc 1 1231 0
ARM GAS  /tmp/ccSZlabO.s 			page 43


 721 0160 4C48     		ldr	r0, .L59+76
 722 0162 FFF7FEFF 		bl	puts
 723              	.LVL103:
1234:TP2824/TP2802.c ****     //	printf("chip= 0x%4x\r\n",chip);
 724              		.loc 1 1234 0
 725 0166 4C49     		ldr	r1, .L59+80
 726 0168 04EB4403 		add	r3, r4, r4, lsl #1
 727 016c 04EB8304 		add	r4, r4, r3, lsl #2
 728              	.LVL104:
 729 0170 0846     		mov	r0, r1
 730 0172 2144     		add	r1, r1, r4
 731 0174 FFF7FEFF 		bl	I2CDeviceSet2
 732              	.LVL105:
1236:TP2824/TP2802.c **** {
 733              		.loc 1 1236 0
 734 0178 334B     		ldr	r3, .L59
 735 017a 9B5D     		ldrb	r3, [r3, r6]	@ zero_extendqisi2
 736 017c 022B     		cmp	r3, #2
 737 017e 03D1     		bne	.L49
1238:TP2824/TP2802.c **** }
 738              		.loc 1 1238 0
 739 0180 1620     		movs	r0, #22
 740 0182 CE21     		movs	r1, #206
 741 0184 FFF7FEFF 		bl	tp28xx_byte_write
 742              	.LVL106:
 743              	.L49:
1241:TP2824/TP2802.c ****     {
 744              		.loc 1 1241 0
 745 0188 444B     		ldr	r3, .L59+84
 746 018a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 747 018c 262B     		cmp	r3, #38
 748 018e 08D1     		bne	.L50
1243:TP2824/TP2802.c ****     }
 749              		.loc 1 1243 0
 750 0190 4349     		ldr	r1, .L59+88
 751 0192 05EBC503 		add	r3, r5, r5, lsl #3
 752 0196 5B00     		lsls	r3, r3, #1
 753 0198 0846     		mov	r0, r1
 754 019a 1944     		add	r1, r1, r3
 755 019c FFF7FEFF 		bl	I2CDeviceSet2
 756              	.LVL107:
 757 01a0 15E0     		b	.L51
 758              	.L50:
1245:TP2824/TP2802.c ****     {
 759              		.loc 1 1245 0
 760 01a2 252B     		cmp	r3, #37
 761 01a4 08D1     		bne	.L52
1247:TP2824/TP2802.c ****     }
 762              		.loc 1 1247 0
 763 01a6 3F49     		ldr	r1, .L59+92
 764 01a8 C5EBC503 		rsb	r3, r5, r5, lsl #3
 765 01ac 5B00     		lsls	r3, r3, #1
 766 01ae 0846     		mov	r0, r1
 767 01b0 1944     		add	r1, r1, r3
 768 01b2 FFF7FEFF 		bl	I2CDeviceSet2
 769              	.LVL108:
 770 01b6 0AE0     		b	.L51
ARM GAS  /tmp/ccSZlabO.s 			page 44


 771              	.L52:
1249:TP2824/TP2802.c ****     {
 772              		.loc 1 1249 0
 773 01b8 242B     		cmp	r3, #36
 774 01ba 08D1     		bne	.L51
1251:TP2824/TP2802.c ****     }
 775              		.loc 1 1251 0
 776 01bc 3A49     		ldr	r1, .L59+96
 777 01be 05EB4503 		add	r3, r5, r5, lsl #1
 778 01c2 05EB8303 		add	r3, r5, r3, lsl #2
 779 01c6 0846     		mov	r0, r1
 780 01c8 1944     		add	r1, r1, r3
 781 01ca FFF7FEFF 		bl	I2CDeviceSet2
 782              	.LVL109:
 783              	.L51:
1253:TP2824/TP2802.c ****     {
 784              		.loc 1 1253 0
 785 01ce 334B     		ldr	r3, .L59+84
 786 01d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 787 01d2 2F2B     		cmp	r3, #47
 788 01d4 0AD1     		bne	.L53
1255:TP2824/TP2802.c ****         I2CDeviceSet2( TP2826_MODE_DataSet[0],TP2826_MODE_DataSet[sys] );
 789              		.loc 1 1255 0
 790 01d6 3548     		ldr	r0, .L59+100
 791 01d8 FFF7FEFF 		bl	puts
 792              	.LVL110:
1256:TP2824/TP2802.c ****     }
 793              		.loc 1 1256 0
 794 01dc 3449     		ldr	r1, .L59+104
 795 01de 05EB8503 		add	r3, r5, r5, lsl #2
 796 01e2 9B00     		lsls	r3, r3, #2
 797 01e4 0846     		mov	r0, r1
 798 01e6 1944     		add	r1, r1, r3
 799 01e8 FFF7FEFF 		bl	I2CDeviceSet2
 800              	.LVL111:
 801              	.L53:
1258:TP2824/TP2802.c ****     {
 802              		.loc 1 1258 0
 803 01ec 2B4B     		ldr	r3, .L59+84
 804 01ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 805 01f0 272B     		cmp	r3, #39
 806 01f2 0AD1     		bne	.L54
1260:TP2824/TP2802.c ****         I2CDeviceSet2( TP2824C_MODE_DataSet[0],TP2824C_MODE_DataSet[sys] );
 807              		.loc 1 1260 0
 808 01f4 2F48     		ldr	r0, .L59+108
 809 01f6 FFF7FEFF 		bl	puts
 810              	.LVL112:
1261:TP2824/TP2802.c ****     }
 811              		.loc 1 1261 0
 812 01fa 2F49     		ldr	r1, .L59+112
 813 01fc 05EB8503 		add	r3, r5, r5, lsl #2
 814 0200 9B00     		lsls	r3, r3, #2
 815 0202 0846     		mov	r0, r1
 816 0204 1944     		add	r1, r1, r3
 817 0206 FFF7FEFF 		bl	I2CDeviceSet2
 818              	.LVL113:
 819              	.L54:
ARM GAS  /tmp/ccSZlabO.s 			page 45


1264:TP2824/TP2802.c ****         tp28xx_SYSCLK_V1(ch);
 820              		.loc 1 1264 0
 821 020a 012D     		cmp	r5, #1
 822 020c 03D1     		bne	.L55
1265:TP2824/TP2802.c ****     else
 823              		.loc 1 1265 0
 824 020e 3046     		mov	r0, r6
 825 0210 FFF7FEFF 		bl	tp28xx_SYSCLK_V1
 826              	.LVL114:
 827 0214 02E0     		b	.L56
 828              	.L55:
1267:TP2824/TP2802.c **** 
 829              		.loc 1 1267 0
 830 0216 3046     		mov	r0, r6
 831 0218 FFF7FEFF 		bl	tp28xx_SYSCLK_V2
 832              	.LVL115:
 833              	.L56:
1269:TP2824/TP2802.c ****     tmp=tp28xx_byte_read(0x14);
 834              		.loc 1 1269 0
 835 021c 1320     		movs	r0, #19
 836 021e 0021     		movs	r1, #0
 837 0220 FFF7FEFF 		bl	tp28xx_byte_write
 838              	.LVL116:
1270:TP2824/TP2802.c ****     tmp &= 0x9f;
 839              		.loc 1 1270 0
 840 0224 1420     		movs	r0, #20
 841 0226 FFF7FEFF 		bl	tp28xx_byte_read
 842              	.LVL117:
1271:TP2824/TP2802.c ****     tp28xx_byte_write(0x14, tmp);
 843              		.loc 1 1271 0
 844 022a 00F09F01 		and	r1, r0, #159
 845              	.LVL118:
1272:TP2824/TP2802.c **** 
 846              		.loc 1 1272 0
 847 022e 1420     		movs	r0, #20
 848 0230 FFF7FEFF 		bl	tp28xx_byte_write
 849              	.LVL119:
1275:TP2824/TP2802.c ****     tmp &= 0x7f;
 850              		.loc 1 1275 0
 851 0234 0220     		movs	r0, #2
 852 0236 FFF7FEFF 		bl	tp28xx_byte_read
 853              	.LVL120:
1276:TP2824/TP2802.c ****     tp28xx_byte_write(0x02, tmp);
 854              		.loc 1 1276 0
 855 023a 00F07F01 		and	r1, r0, #127
 856              	.LVL121:
1277:TP2824/TP2802.c **** #else
 857              		.loc 1 1277 0
 858 023e 0220     		movs	r0, #2
 859 0240 FFF7FEFF 		bl	tp28xx_byte_write
 860              	.LVL122:
 861 0244 70BD     		pop	{r4, r5, r6, pc}
 862              	.LVL123:
 863              	.L60:
 864 0246 00BF     		.align	2
 865              	.L59:
 866 0248 00000000 		.word	mode
ARM GAS  /tmp/ccSZlabO.s 			page 46


 867 024c 00000000 		.word	ManVidResRx
 868 0250 00000000 		.word	.LC0
 869 0254 08000000 		.word	.LC1
 870 0258 10000000 		.word	.LC2
 871 025c 18000000 		.word	.LC3
 872 0260 24000000 		.word	.LC4
 873 0264 2C000000 		.word	.LC5
 874 0268 38000000 		.word	.LC6
 875 026c 40000000 		.word	.LC7
 876 0270 48000000 		.word	.LC8
 877 0274 4C000000 		.word	.LC9
 878 0278 54000000 		.word	.LC10
 879 027c 5C000000 		.word	.LC11
 880 0280 64000000 		.word	.LC12
 881 0284 6C000000 		.word	.LC13
 882 0288 74000000 		.word	.LC14
 883 028c 7C000000 		.word	.LC15
 884 0290 84000000 		.word	.LC16
 885 0294 8C000000 		.word	.LC17
 886 0298 00000000 		.word	.LANCHOR2
 887 029c 00000000 		.word	chip
 888 02a0 00000000 		.word	.LANCHOR3
 889 02a4 00000000 		.word	.LANCHOR4
 890 02a8 00000000 		.word	.LANCHOR5
 891 02ac 94000000 		.word	.LC18
 892 02b0 00000000 		.word	.LANCHOR6
 893 02b4 A8000000 		.word	.LC19
 894 02b8 00000000 		.word	.LANCHOR7
 895              		.cfi_endproc
 896              	.LFE70:
 898              		.section	.text.Set_HDA,"ax",%progbits
 899              		.align	2
 900              		.global	Set_HDA
 901              		.thumb
 902              		.thumb_func
 904              	Set_HDA:
 905              	.LFB71:
1286:TP2824/TP2802.c **** 
 906              		.loc 1 1286 0
 907              		.cfi_startproc
 908              		@ args = 0, pretend = 0, frame = 0
 909              		@ frame_needed = 0, uses_anonymous_args = 0
 910              	.LVL124:
 911 0000 10B5     		push	{r4, lr}
 912              	.LCFI9:
 913              		.cfi_def_cfa_offset 8
 914              		.cfi_offset 4, -8
 915              		.cfi_offset 14, -4
 916              	.LVL125:
1291:TP2824/TP2802.c ****     {
 917              		.loc 1 1291 0
 918 0002 294B     		ldr	r3, .L75
 919 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 920 0006 0D2B     		cmp	r3, #13
 921 0008 08D8     		bhi	.L62
 922 000a DFE803F0 		tbb	[pc, r3]
 923              	.L64:
ARM GAS  /tmp/ccSZlabO.s 			page 47


 924 000e 0B       		.byte	(.L63-.L64)/2
 925 000f 0D       		.byte	(.L65-.L64)/2
 926 0010 0F       		.byte	(.L73-.L64)/2
 927 0011 09       		.byte	(.L67-.L64)/2
 928 0012 07       		.byte	(.L62-.L64)/2
 929 0013 07       		.byte	(.L62-.L64)/2
 930 0014 07       		.byte	(.L62-.L64)/2
 931 0015 07       		.byte	(.L62-.L64)/2
 932 0016 07       		.byte	(.L62-.L64)/2
 933 0017 07       		.byte	(.L62-.L64)/2
 934 0018 07       		.byte	(.L62-.L64)/2
 935 0019 07       		.byte	(.L62-.L64)/2
 936 001a 0B       		.byte	(.L63-.L64)/2
 937 001b 0D       		.byte	(.L65-.L64)/2
 938              		.p2align 1
 939              	.L62:
1289:TP2824/TP2802.c **** 
 940              		.loc 1 1289 0
 941 001c 0024     		movs	r4, #0
 942 001e 06E0     		b	.L66
 943              	.L67:
 944              	.LVL126:
1298:TP2824/TP2802.c ****         break;
 945              		.loc 1 1298 0
 946 0020 0424     		movs	r4, #4
1299:TP2824/TP2802.c **** 		
 947              		.loc 1 1299 0
 948 0022 04E0     		b	.L66
 949              	.LVL127:
 950              	.L63:
1303:TP2824/TP2802.c ****         break;
 951              		.loc 1 1303 0
 952 0024 0124     		movs	r4, #1
1304:TP2824/TP2802.c **** 		
 953              		.loc 1 1304 0
 954 0026 02E0     		b	.L66
 955              	.LVL128:
 956              	.L65:
1308:TP2824/TP2802.c ****         break;
 957              		.loc 1 1308 0
 958 0028 0224     		movs	r4, #2
1309:TP2824/TP2802.c ****     }
 959              		.loc 1 1309 0
 960 002a 00E0     		b	.L66
 961              	.LVL129:
 962              	.L73:
1294:TP2824/TP2802.c ****         break;
 963              		.loc 1 1294 0
 964 002c 0324     		movs	r4, #3
 965              	.LVL130:
 966              	.L66:
1311:TP2824/TP2802.c ****     {
 967              		.loc 1 1311 0
 968 002e 002C     		cmp	r4, #0
 969 0030 38D0     		beq	.L68
1313:TP2824/TP2802.c **** 
 970              		.loc 1 1313 0
ARM GAS  /tmp/ccSZlabO.s 			page 48


 971 0032 FFF7FEFF 		bl	Set_VidRes
 972              	.LVL131:
1315:TP2824/TP2802.c ****         {
 973              		.loc 1 1315 0
 974 0036 1D4B     		ldr	r3, .L75+4
 975 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 976 003a 262B     		cmp	r3, #38
 977 003c 08D1     		bne	.L69
1317:TP2824/TP2802.c ****         }
 978              		.loc 1 1317 0
 979 003e 1C49     		ldr	r1, .L75+8
 980 0040 04EB8403 		add	r3, r4, r4, lsl #2
 981 0044 5B00     		lsls	r3, r3, #1
 982 0046 0846     		mov	r0, r1
 983 0048 1944     		add	r1, r1, r3
 984 004a FFF7FEFF 		bl	I2CDeviceSet2
 985              	.LVL132:
 986 004e 20E0     		b	.L70
 987              	.L69:
1319:TP2824/TP2802.c ****         {
 988              		.loc 1 1319 0
 989 0050 A3F12402 		sub	r2, r3, #36
 990 0054 D2B2     		uxtb	r2, r2
 991 0056 012A     		cmp	r2, #1
 992 0058 06D8     		bhi	.L71
1321:TP2824/TP2802.c ****         }
 993              		.loc 1 1321 0
 994 005a 1649     		ldr	r1, .L75+12
 995 005c 0846     		mov	r0, r1
 996 005e 01EBC401 		add	r1, r1, r4, lsl #3
 997 0062 FFF7FEFF 		bl	I2CDeviceSet2
 998              	.LVL133:
 999 0066 14E0     		b	.L70
 1000              	.L71:
1323:TP2824/TP2802.c ****         {
 1001              		.loc 1 1323 0
 1002 0068 2F2B     		cmp	r3, #47
 1003 006a 08D1     		bne	.L72
1325:TP2824/TP2802.c ****         }
 1004              		.loc 1 1325 0
 1005 006c 1249     		ldr	r1, .L75+16
 1006 006e 04EB4403 		add	r3, r4, r4, lsl #1
 1007 0072 9B00     		lsls	r3, r3, #2
 1008 0074 0846     		mov	r0, r1
 1009 0076 1944     		add	r1, r1, r3
 1010 0078 FFF7FEFF 		bl	I2CDeviceSet2
 1011              	.LVL134:
 1012 007c 09E0     		b	.L70
 1013              	.L72:
1327:TP2824/TP2802.c ****         {
 1014              		.loc 1 1327 0
 1015 007e 272B     		cmp	r3, #39
 1016 0080 07D1     		bne	.L70
1329:TP2824/TP2802.c ****         }
 1017              		.loc 1 1329 0
 1018 0082 0E49     		ldr	r1, .L75+20
 1019 0084 04EB4403 		add	r3, r4, r4, lsl #1
ARM GAS  /tmp/ccSZlabO.s 			page 49


 1020 0088 9B00     		lsls	r3, r3, #2
 1021 008a 0846     		mov	r0, r1
 1022 008c 1944     		add	r1, r1, r3
 1023 008e FFF7FEFF 		bl	I2CDeviceSet2
 1024              	.LVL135:
 1025              	.L70:
1331:TP2824/TP2802.c ****         tmp |= 0x40;
 1026              		.loc 1 1331 0
 1027 0092 1420     		movs	r0, #20
 1028 0094 FFF7FEFF 		bl	tp28xx_byte_read
 1029              	.LVL136:
1335:TP2824/TP2802.c ****    
 1030              		.loc 1 1335 0
 1031 0098 40F04A01 		orr	r1, r0, #74
 1032              	.LVL137:
1337:TP2824/TP2802.c **** 
 1033              		.loc 1 1337 0
 1034 009c 1420     		movs	r0, #20
 1035 009e C9B2     		uxtb	r1, r1
 1036 00a0 FFF7FEFF 		bl	tp28xx_byte_write
 1037              	.LVL138:
 1038              	.L68:
1341:TP2824/TP2802.c **** 
 1039              		.loc 1 1341 0
 1040 00a4 2046     		mov	r0, r4
 1041 00a6 10BD     		pop	{r4, pc}
 1042              	.LVL139:
 1043              	.L76:
 1044              		.align	2
 1045              	.L75:
 1046 00a8 00000000 		.word	mode
 1047 00ac 00000000 		.word	chip
 1048 00b0 00000000 		.word	.LANCHOR8
 1049 00b4 00000000 		.word	.LANCHOR9
 1050 00b8 00000000 		.word	.LANCHOR10
 1051 00bc 00000000 		.word	.LANCHOR11
 1052              		.cfi_endproc
 1053              	.LFE71:
 1055              		.section	.text.Set_HDC,"ax",%progbits
 1056              		.align	2
 1057              		.global	Set_HDC
 1058              		.thumb
 1059              		.thumb_func
 1061              	Set_HDC:
 1062              	.LFB72:
1344:TP2824/TP2802.c **** 
 1063              		.loc 1 1344 0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 0
 1066              		@ frame_needed = 0, uses_anonymous_args = 0
 1067              	.LVL140:
 1068 0000 10B5     		push	{r4, lr}
 1069              	.LCFI10:
 1070              		.cfi_def_cfa_offset 8
 1071              		.cfi_offset 4, -8
 1072              		.cfi_offset 14, -4
 1073              	.LVL141:
ARM GAS  /tmp/ccSZlabO.s 			page 50


1350:TP2824/TP2802.c ****     {
 1074              		.loc 1 1350 0
 1075 0002 284B     		ldr	r3, .L91
 1076 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 1077 0006 0D2B     		cmp	r3, #13
 1078 0008 08D8     		bhi	.L78
 1079 000a DFE803F0 		tbb	[pc, r3]
 1080              	.L80:
 1081 000e 0B       		.byte	(.L79-.L80)/2
 1082 000f 0D       		.byte	(.L81-.L80)/2
 1083 0010 0F       		.byte	(.L89-.L80)/2
 1084 0011 09       		.byte	(.L83-.L80)/2
 1085 0012 07       		.byte	(.L78-.L80)/2
 1086 0013 07       		.byte	(.L78-.L80)/2
 1087 0014 07       		.byte	(.L78-.L80)/2
 1088 0015 07       		.byte	(.L78-.L80)/2
 1089 0016 07       		.byte	(.L78-.L80)/2
 1090 0017 07       		.byte	(.L78-.L80)/2
 1091 0018 07       		.byte	(.L78-.L80)/2
 1092 0019 07       		.byte	(.L78-.L80)/2
 1093 001a 0B       		.byte	(.L79-.L80)/2
 1094 001b 0D       		.byte	(.L81-.L80)/2
 1095              		.p2align 1
 1096              	.L78:
1348:TP2824/TP2802.c **** 
 1097              		.loc 1 1348 0
 1098 001c 0024     		movs	r4, #0
 1099 001e 06E0     		b	.L82
 1100              	.L83:
 1101              	.LVL142:
1358:TP2824/TP2802.c ****         break;
 1102              		.loc 1 1358 0
 1103 0020 0424     		movs	r4, #4
1359:TP2824/TP2802.c **** 
 1104              		.loc 1 1359 0
 1105 0022 04E0     		b	.L82
 1106              	.LVL143:
 1107              	.L79:
1363:TP2824/TP2802.c ****         break;
 1108              		.loc 1 1363 0
 1109 0024 0124     		movs	r4, #1
1364:TP2824/TP2802.c **** 
 1110              		.loc 1 1364 0
 1111 0026 02E0     		b	.L82
 1112              	.LVL144:
 1113              	.L81:
1368:TP2824/TP2802.c ****         break;
 1114              		.loc 1 1368 0
 1115 0028 0224     		movs	r4, #2
1369:TP2824/TP2802.c ****     }
 1116              		.loc 1 1369 0
 1117 002a 00E0     		b	.L82
 1118              	.LVL145:
 1119              	.L89:
1354:TP2824/TP2802.c ****         break;
 1120              		.loc 1 1354 0
 1121 002c 0324     		movs	r4, #3
ARM GAS  /tmp/ccSZlabO.s 			page 51


 1122              	.LVL146:
 1123              	.L82:
1371:TP2824/TP2802.c ****     {
 1124              		.loc 1 1371 0
 1125 002e BCB3     		cbz	r4, .L84
1373:TP2824/TP2802.c **** 
 1126              		.loc 1 1373 0
 1127 0030 FFF7FEFF 		bl	Set_VidRes
 1128              	.LVL147:
1375:TP2824/TP2802.c ****         {
 1129              		.loc 1 1375 0
 1130 0034 1C4B     		ldr	r3, .L91+4
 1131 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1132 0038 262B     		cmp	r3, #38
 1133 003a 09D1     		bne	.L85
1377:TP2824/TP2802.c ****         }
 1134              		.loc 1 1377 0
 1135 003c 1B49     		ldr	r1, .L91+8
 1136 003e 04EB4403 		add	r3, r4, r4, lsl #1
 1137 0042 04EB8303 		add	r3, r4, r3, lsl #2
 1138 0046 0846     		mov	r0, r1
 1139 0048 1944     		add	r1, r1, r3
 1140 004a FFF7FEFF 		bl	I2CDeviceSet2
 1141              	.LVL148:
 1142 004e 23E0     		b	.L86
 1143              	.L85:
1379:TP2824/TP2802.c ****         {
 1144              		.loc 1 1379 0
 1145 0050 A3F12402 		sub	r2, r3, #36
 1146 0054 D2B2     		uxtb	r2, r2
 1147 0056 012A     		cmp	r2, #1
 1148 0058 09D8     		bhi	.L87
1381:TP2824/TP2802.c ****         }
 1149              		.loc 1 1381 0
 1150 005a 1449     		ldr	r1, .L91+8
 1151 005c 04EB4403 		add	r3, r4, r4, lsl #1
 1152 0060 04EB8303 		add	r3, r4, r3, lsl #2
 1153 0064 0846     		mov	r0, r1
 1154 0066 1944     		add	r1, r1, r3
 1155 0068 FFF7FEFF 		bl	I2CDeviceSet2
 1156              	.LVL149:
 1157 006c 14E0     		b	.L86
 1158              	.L87:
1383:TP2824/TP2802.c ****         {
 1159              		.loc 1 1383 0
 1160 006e 2F2B     		cmp	r3, #47
 1161 0070 08D1     		bne	.L88
1385:TP2824/TP2802.c ****         }
 1162              		.loc 1 1385 0
 1163 0072 0F49     		ldr	r1, .L91+12
 1164 0074 04EB8403 		add	r3, r4, r4, lsl #2
 1165 0078 9B00     		lsls	r3, r3, #2
 1166 007a 0846     		mov	r0, r1
 1167 007c 1944     		add	r1, r1, r3
 1168 007e FFF7FEFF 		bl	I2CDeviceSet2
 1169              	.LVL150:
 1170 0082 09E0     		b	.L86
ARM GAS  /tmp/ccSZlabO.s 			page 52


 1171              	.L88:
1387:TP2824/TP2802.c ****         {
 1172              		.loc 1 1387 0
 1173 0084 272B     		cmp	r3, #39
 1174 0086 07D1     		bne	.L86
1389:TP2824/TP2802.c ****         }
 1175              		.loc 1 1389 0
 1176 0088 0A49     		ldr	r1, .L91+16
 1177 008a 04EB8403 		add	r3, r4, r4, lsl #2
 1178 008e 9B00     		lsls	r3, r3, #2
 1179 0090 0846     		mov	r0, r1
 1180 0092 1944     		add	r1, r1, r3
 1181 0094 FFF7FEFF 		bl	I2CDeviceSet2
 1182              	.LVL151:
 1183              	.L86:
1391:TP2824/TP2802.c ****     }
 1184              		.loc 1 1391 0
 1185 0098 1320     		movs	r0, #19
 1186 009a 4021     		movs	r1, #64
 1187 009c FFF7FEFF 		bl	tp28xx_byte_write
 1188              	.LVL152:
 1189              	.L84:
1394:TP2824/TP2802.c **** 
 1190              		.loc 1 1394 0
 1191 00a0 2046     		mov	r0, r4
 1192 00a2 10BD     		pop	{r4, pc}
 1193              	.LVL153:
 1194              	.L92:
 1195              		.align	2
 1196              	.L91:
 1197 00a4 00000000 		.word	mode
 1198 00a8 00000000 		.word	chip
 1199 00ac 00000000 		.word	.LANCHOR12
 1200 00b0 00000000 		.word	.LANCHOR13
 1201 00b4 00000000 		.word	.LANCHOR14
 1202              		.cfi_endproc
 1203              	.LFE72:
 1205              		.section	.text.Det_VidRes,"ax",%progbits
 1206              		.align	2
 1207              		.global	Det_VidRes
 1208              		.thumb
 1209              		.thumb_func
 1211              	Det_VidRes:
 1212              	.LFB73:
1397:TP2824/TP2802.c ****     tByte CVSTD;
 1213              		.loc 1 1397 0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 1217 0000 08B5     		push	{r3, lr}
 1218              	.LCFI11:
 1219              		.cfi_def_cfa_offset 8
 1220              		.cfi_offset 3, -8
 1221              		.cfi_offset 14, -4
1401:TP2824/TP2802.c **** 
 1222              		.loc 1 1401 0
 1223 0002 0320     		movs	r0, #3
ARM GAS  /tmp/ccSZlabO.s 			page 53


 1224 0004 FFF7FEFF 		bl	tp28xx_byte_read
 1225              	.LVL154:
 1226 0008 00F00700 		and	r0, r0, #7
 1227              	.LVL155:
1403:TP2824/TP2802.c ****     {
 1228              		.loc 1 1403 0
 1229 000c 0628     		cmp	r0, #6
 1230 000e 14D8     		bhi	.L94
 1231 0010 DFE800F0 		tbb	[pc, r0]
 1232              	.L96:
 1233 0014 04       		.byte	(.L95-.L96)/2
 1234 0015 18       		.byte	(.L103-.L96)/2
 1235 0016 06       		.byte	(.L98-.L96)/2
 1236 0017 08       		.byte	(.L99-.L96)/2
 1237 0018 0A       		.byte	(.L100-.L96)/2
 1238 0019 0C       		.byte	(.L101-.L96)/2
 1239 001a 0E       		.byte	(.L102-.L96)/2
 1240 001b 00       		.p2align 1
 1241              	.L95:
1407:TP2824/TP2802.c ****         break;
 1242              		.loc 1 1407 0
 1243 001c 0020     		movs	r0, #0
 1244              	.LVL156:
 1245 001e 08BD     		pop	{r3, pc}
 1246              	.LVL157:
 1247              	.L98:
1413:TP2824/TP2802.c ****         break;
 1248              		.loc 1 1413 0
 1249 0020 0220     		movs	r0, #2
 1250              	.LVL158:
1414:TP2824/TP2802.c ****     case 0x03:
 1251              		.loc 1 1414 0
 1252 0022 08BD     		pop	{r3, pc}
 1253              	.LVL159:
 1254              	.L99:
1416:TP2824/TP2802.c ****         break;
 1255              		.loc 1 1416 0
 1256 0024 0320     		movs	r0, #3
 1257              	.LVL160:
1417:TP2824/TP2802.c ****     case 0x04:
 1258              		.loc 1 1417 0
 1259 0026 08BD     		pop	{r3, pc}
 1260              	.LVL161:
 1261              	.L100:
1419:TP2824/TP2802.c ****         break;
 1262              		.loc 1 1419 0
 1263 0028 0420     		movs	r0, #4
 1264              	.LVL162:
1420:TP2824/TP2802.c ****     case 0x05:
 1265              		.loc 1 1420 0
 1266 002a 08BD     		pop	{r3, pc}
 1267              	.LVL163:
 1268              	.L101:
1422:TP2824/TP2802.c ****         break;
 1269              		.loc 1 1422 0
 1270 002c 0520     		movs	r0, #5
 1271              	.LVL164:
ARM GAS  /tmp/ccSZlabO.s 			page 54


1423:TP2824/TP2802.c ****     case 0x06:
 1272              		.loc 1 1423 0
 1273 002e 08BD     		pop	{r3, pc}
 1274              	.LVL165:
 1275              	.L102:
1425:TP2824/TP2802.c ****         RES = NTPAL;
 1276              		.loc 1 1425 0
 1277 0030 0548     		ldr	r0, .L105
 1278              	.LVL166:
 1279 0032 FFF7FEFF 		bl	printf
 1280              	.LVL167:
1426:TP2824/TP2802.c ****         break;
 1281              		.loc 1 1426 0
 1282 0036 0620     		movs	r0, #6
1427:TP2824/TP2802.c ****     default:
 1283              		.loc 1 1427 0
 1284 0038 08BD     		pop	{r3, pc}
 1285              	.LVL168:
 1286              	.L94:
1429:TP2824/TP2802.c ****         RES = NoDet;
 1287              		.loc 1 1429 0
 1288 003a 0448     		ldr	r0, .L105+4
 1289              	.LVL169:
 1290 003c FFF7FEFF 		bl	printf
 1291              	.LVL170:
1430:TP2824/TP2802.c ****         break;
 1292              		.loc 1 1430 0
 1293 0040 0720     		movs	r0, #7
1431:TP2824/TP2802.c ****     }
 1294              		.loc 1 1431 0
 1295 0042 08BD     		pop	{r3, pc}
 1296              	.LVL171:
 1297              	.L103:
1410:TP2824/TP2802.c ****         break;
 1298              		.loc 1 1410 0
 1299 0044 0120     		movs	r0, #1
 1300              	.LVL172:
1436:TP2824/TP2802.c **** tByte Det_VideoLoss(tByte ch)
 1301              		.loc 1 1436 0
 1302 0046 08BD     		pop	{r3, pc}
 1303              	.L106:
 1304              		.align	2
 1305              	.L105:
 1306 0048 C0000000 		.word	.LC20
 1307 004c D0000000 		.word	.LC21
 1308              		.cfi_endproc
 1309              	.LFE73:
 1311              		.section	.text.Det_VideoLoss,"ax",%progbits
 1312              		.align	2
 1313              		.global	Det_VideoLoss
 1314              		.thumb
 1315              		.thumb_func
 1317              	Det_VideoLoss:
 1318              	.LFB74:
1438:TP2824/TP2802.c **** 
 1319              		.loc 1 1438 0
 1320              		.cfi_startproc
ARM GAS  /tmp/ccSZlabO.s 			page 55


 1321              		@ args = 0, pretend = 0, frame = 0
 1322              		@ frame_needed = 0, uses_anonymous_args = 0
 1323              	.LVL173:
 1324 0000 10B5     		push	{r4, lr}
 1325              	.LCFI12:
 1326              		.cfi_def_cfa_offset 8
 1327              		.cfi_offset 4, -8
 1328              		.cfi_offset 14, -4
1442:TP2824/TP2802.c ****     VDLOSS = tp28xx_byte_read(0x01);
 1329              		.loc 1 1442 0
 1330 0002 00F00301 		and	r1, r0, #3
 1331 0006 4020     		movs	r0, #64
 1332              	.LVL174:
 1333 0008 FFF7FEFF 		bl	tp28xx_byte_write
 1334              	.LVL175:
1443:TP2824/TP2802.c **** //	printf("video status 0x%02x on ch%01x\r\n",(tWord)VDLOSS,(tWord)ch);
 1335              		.loc 1 1443 0
 1336 000c 0120     		movs	r0, #1
 1337 000e FFF7FEFF 		bl	tp28xx_byte_read
 1338              	.LVL176:
1446:TP2824/TP2802.c **** 
 1339              		.loc 1 1446 0
 1340 0012 0446     		mov	r4, r0
 1341 0014 10B1     		cbz	r0, .L108
1446:TP2824/TP2802.c **** 
 1342              		.loc 1 1446 0 is_stmt 0 discriminator 1
 1343 0016 0448     		ldr	r0, .L110
 1344              	.LVL177:
 1345 0018 FFF7FEFF 		bl	printf
 1346              	.LVL178:
 1347              	.L108:
1448:TP2824/TP2802.c **** 
 1348              		.loc 1 1448 0 is_stmt 1
 1349 001c 0348     		ldr	r0, .L110+4
 1350 001e FFF7FEFF 		bl	printf
 1351              	.LVL179:
1453:TP2824/TP2802.c **** 
 1352              		.loc 1 1453 0
 1353 0022 C4F3C710 		ubfx	r0, r4, #7, #8
 1354 0026 10BD     		pop	{r4, pc}
 1355              	.LVL180:
 1356              	.L111:
 1357              		.align	2
 1358              	.L110:
 1359 0028 E4000000 		.word	.LC22
 1360 002c E8000000 		.word	.LC23
 1361              		.cfi_endproc
 1362              	.LFE74:
 1364              		.section	.text.ManualAGC,"ax",%progbits
 1365              		.align	2
 1366              		.global	ManualAGC
 1367              		.thumb
 1368              		.thumb_func
 1370              	ManualAGC:
 1371              	.LFB75:
1456:TP2824/TP2802.c ****     unsigned int agc;
 1372              		.loc 1 1456 0
ARM GAS  /tmp/ccSZlabO.s 			page 56


 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 0
 1375              		@ frame_needed = 0, uses_anonymous_args = 0
 1376              	.LVL181:
 1377 0000 70B5     		push	{r4, r5, r6, lr}
 1378              	.LCFI13:
 1379              		.cfi_def_cfa_offset 16
 1380              		.cfi_offset 4, -16
 1381              		.cfi_offset 5, -12
 1382              		.cfi_offset 6, -8
 1383              		.cfi_offset 14, -4
 1384 0002 0646     		mov	r6, r0
1461:TP2824/TP2802.c ****     agc = tp28xx_byte_read(0x04);
 1385              		.loc 1 1461 0
 1386 0004 2F20     		movs	r0, #47
 1387              	.LVL182:
 1388 0006 0221     		movs	r1, #2
 1389 0008 FFF7FEFF 		bl	tp28xx_byte_write
 1390              	.LVL183:
1462:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
 1391              		.loc 1 1462 0
 1392 000c 0420     		movs	r0, #4
 1393 000e FFF7FEFF 		bl	tp28xx_byte_read
 1394              	.LVL184:
 1395 0012 0446     		mov	r4, r0
 1396              	.LVL185:
1463:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
 1397              		.loc 1 1463 0
 1398 0014 0420     		movs	r0, #4
 1399              	.LVL186:
 1400 0016 FFF7FEFF 		bl	tp28xx_byte_read
 1401              	.LVL187:
 1402 001a 0444     		add	r4, r4, r0
 1403              	.LVL188:
1464:TP2824/TP2802.c ****     agc += tp28xx_byte_read(0x04);
 1404              		.loc 1 1464 0
 1405 001c 0420     		movs	r0, #4
 1406 001e FFF7FEFF 		bl	tp28xx_byte_read
 1407              	.LVL189:
 1408 0022 0444     		add	r4, r4, r0
 1409              	.LVL190:
1465:TP2824/TP2802.c ****     agc &= 0x3f0;
 1410              		.loc 1 1465 0
 1411 0024 0420     		movs	r0, #4
 1412 0026 FFF7FEFF 		bl	tp28xx_byte_read
 1413              	.LVL191:
 1414 002a 2044     		add	r0, r0, r4
 1415              	.LVL192:
1466:TP2824/TP2802.c ****     agc >>=1;
 1416              		.loc 1 1466 0
 1417 002c 00F47C74 		and	r4, r0, #1008
 1418              	.LVL193:
1467:TP2824/TP2802.c ****     if(agc > 0x1ff) agc = 0x1ff;
 1419              		.loc 1 1467 0
 1420 0030 6508     		lsrs	r5, r4, #1
 1421              	.LVL194:
1470:TP2824/TP2802.c ****     tp28xx_byte_write(0x08, agc&0xff);
ARM GAS  /tmp/ccSZlabO.s 			page 57


 1422              		.loc 1 1470 0
 1423 0032 0D48     		ldr	r0, .L114
 1424 0034 2946     		mov	r1, r5
 1425 0036 3246     		mov	r2, r6
 1426 0038 FFF7FEFF 		bl	printf
 1427              	.LVL195:
1471:TP2824/TP2802.c ****     tmp = tp28xx_byte_read(0x06);
 1428              		.loc 1 1471 0
 1429 003c 0820     		movs	r0, #8
 1430 003e 05F0F801 		and	r1, r5, #248
 1431 0042 FFF7FEFF 		bl	tp28xx_byte_write
 1432              	.LVL196:
1472:TP2824/TP2802.c ****     tmp &=0xf9;
 1433              		.loc 1 1472 0
 1434 0046 0620     		movs	r0, #6
 1435 0048 FFF7FEFF 		bl	tp28xx_byte_read
 1436              	.LVL197:
1473:TP2824/TP2802.c ****     tmp |=(agc>>7)&0x02;
 1437              		.loc 1 1473 0
 1438 004c 00F0F900 		and	r0, r0, #249
 1439              	.LVL198:
1474:TP2824/TP2802.c ****     tmp |=0x04;
 1440              		.loc 1 1474 0
 1441 0050 240A     		lsrs	r4, r4, #8
 1442 0052 04F00204 		and	r4, r4, #2
 1443 0056 40EA0401 		orr	r1, r0, r4
 1444              	.LVL199:
1476:TP2824/TP2802.c ****     
 1445              		.loc 1 1476 0
 1446 005a 0620     		movs	r0, #6
 1447 005c 41F00401 		orr	r1, r1, #4
 1448              	.LVL200:
 1449 0060 FFF7FEFF 		bl	tp28xx_byte_write
 1450              	.LVL201:
 1451 0064 70BD     		pop	{r4, r5, r6, pc}
 1452              	.LVL202:
 1453              	.L115:
 1454 0066 00BF     		.align	2
 1455              	.L114:
 1456 0068 F8000000 		.word	.LC24
 1457              		.cfi_endproc
 1458              	.LFE75:
 1460              		.section	.text.ReadGain,"ax",%progbits
 1461              		.align	2
 1462              		.global	ReadGain
 1463              		.thumb
 1464              		.thumb_func
 1466              	ReadGain:
 1467              	.LFB79:
1582:TP2824/TP2802.c **** 	}
1583:TP2824/TP2802.c **** }
1584:TP2824/TP2802.c **** ////////////////////////////////////////
1585:TP2824/TP2802.c **** tByte ReadGain(void)
1586:TP2824/TP2802.c **** {
 1468              		.loc 1 1586 0
 1469              		.cfi_startproc
 1470              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccSZlabO.s 			page 58


 1471              		@ frame_needed = 0, uses_anonymous_args = 0
 1472 0000 08B5     		push	{r3, lr}
 1473              	.LCFI14:
 1474              		.cfi_def_cfa_offset 8
 1475              		.cfi_offset 3, -8
 1476              		.cfi_offset 14, -4
1587:TP2824/TP2802.c ****     tp28xx_byte_write(0x2f, 0x00);
 1477              		.loc 1 1587 0
 1478 0002 2F20     		movs	r0, #47
 1479 0004 0021     		movs	r1, #0
 1480 0006 FFF7FEFF 		bl	tp28xx_byte_write
 1481              	.LVL203:
1588:TP2824/TP2802.c ****     return tp28xx_byte_read(0x04);
 1482              		.loc 1 1588 0
 1483 000a 0420     		movs	r0, #4
 1484 000c FFF7FEFF 		bl	tp28xx_byte_read
 1485              	.LVL204:
1589:TP2824/TP2802.c **** }
 1486              		.loc 1 1589 0
 1487 0010 08BD     		pop	{r3, pc}
 1488              		.cfi_endproc
 1489              	.LFE79:
 1491 0012 00BF     		.section	.text.SetCGain,"ax",%progbits
 1492              		.align	2
 1493              		.global	SetCGain
 1494              		.thumb
 1495              		.thumb_func
 1497              	SetCGain:
 1498              	.LFB80:
1590:TP2824/TP2802.c **** ////////////////////////////////////////
1591:TP2824/TP2802.c **** void SetCGain(unsigned char CGAIN_STD)
1592:TP2824/TP2802.c **** {
 1499              		.loc 1 1592 0
 1500              		.cfi_startproc
 1501              		@ args = 0, pretend = 0, frame = 0
 1502              		@ frame_needed = 0, uses_anonymous_args = 0
 1503              	.LVL205:
 1504 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1505              	.LCFI15:
 1506              		.cfi_def_cfa_offset 24
 1507              		.cfi_offset 3, -24
 1508              		.cfi_offset 4, -20
 1509              		.cfi_offset 5, -16
 1510              		.cfi_offset 6, -12
 1511              		.cfi_offset 7, -8
 1512              		.cfi_offset 14, -4
 1513 0002 0646     		mov	r6, r0
 1514              	.LVL206:
1593:TP2824/TP2802.c ****     unsigned char tmp, cgain;
1594:TP2824/TP2802.c ****     unsigned char retry = 30;
1595:TP2824/TP2802.c **** 
1596:TP2824/TP2802.c ****     tp28xx_byte_write(0x2f, 0x06);
 1515              		.loc 1 1596 0
 1516 0004 2F20     		movs	r0, #47
 1517              	.LVL207:
 1518 0006 0621     		movs	r1, #6
 1519 0008 FFF7FEFF 		bl	tp28xx_byte_write
ARM GAS  /tmp/ccSZlabO.s 			page 59


 1520              	.LVL208:
1597:TP2824/TP2802.c ****     cgain = tp28xx_byte_read(0x04);
 1521              		.loc 1 1597 0
 1522 000c 0420     		movs	r0, #4
 1523 000e FFF7FEFF 		bl	tp28xx_byte_read
 1524              	.LVL209:
 1525 0012 0446     		mov	r4, r0
 1526              	.LVL210:
1598:TP2824/TP2802.c **** 
1599:TP2824/TP2802.c ****     if(cgain < CGAIN_STD )
 1527              		.loc 1 1599 0
 1528 0014 B042     		cmp	r0, r6
 1529 0016 40D3     		bcc	.L127
 1530 0018 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1531              	.LVL211:
 1532              	.L126:
1600:TP2824/TP2802.c ****     {
1601:TP2824/TP2802.c ****         while(retry)
1602:TP2824/TP2802.c ****         {
1603:TP2824/TP2802.c ****             retry--;
 1533              		.loc 1 1603 0
 1534 001a 013F     		subs	r7, r7, #1
 1535              	.LVL212:
 1536 001c FFB2     		uxtb	r7, r7
 1537              	.LVL213:
1604:TP2824/TP2802.c **** 
1605:TP2824/TP2802.c ****             tmp = tp28xx_byte_read(0x07);
 1538              		.loc 1 1605 0
 1539 001e 0720     		movs	r0, #7
 1540 0020 FFF7FEFF 		bl	tp28xx_byte_read
 1541              	.LVL214:
1606:TP2824/TP2802.c ****             tmp &=0x3f;
 1542              		.loc 1 1606 0
 1543 0024 00F03F05 		and	r5, r0, #63
 1544              	.LVL215:
1607:TP2824/TP2802.c ****             while(abs(CGAIN_STD-cgain))
 1545              		.loc 1 1607 0
 1546 0028 04E0     		b	.L121
 1547              	.L123:
1608:TP2824/TP2802.c ****             {
1609:TP2824/TP2802.c ****                 if(tmp) tmp--;
 1548              		.loc 1 1609 0
 1549 002a 2DB1     		cbz	r5, .L122
 1550              		.loc 1 1609 0 is_stmt 0 discriminator 1
 1551 002c 013D     		subs	r5, r5, #1
 1552              	.LVL216:
 1553 002e EDB2     		uxtb	r5, r5
 1554              	.LVL217:
1610:TP2824/TP2802.c ****                 else break;
1611:TP2824/TP2802.c ****                 cgain++;
 1555              		.loc 1 1611 0 is_stmt 1 discriminator 1
 1556 0030 0134     		adds	r4, r4, #1
 1557              	.LVL218:
 1558 0032 E4B2     		uxtb	r4, r4
 1559              	.LVL219:
 1560              	.L121:
1607:TP2824/TP2802.c ****             {
ARM GAS  /tmp/ccSZlabO.s 			page 60


 1561              		.loc 1 1607 0
 1562 0034 A642     		cmp	r6, r4
 1563 0036 F8D1     		bne	.L123
 1564              	.L122:
1612:TP2824/TP2802.c ****             }
1613:TP2824/TP2802.c **** 
1614:TP2824/TP2802.c ****             tp28xx_byte_write(0x07, 0x80|tmp);
 1565              		.loc 1 1614 0
 1566 0038 0720     		movs	r0, #7
 1567 003a 45F08001 		orr	r1, r5, #128
 1568 003e FFF7FEFF 		bl	tp28xx_byte_write
 1569              	.LVL220:
1615:TP2824/TP2802.c ****             if(0 == tmp) break;
 1570              		.loc 1 1615 0
 1571 0042 6DB3     		cbz	r5, .L118
1616:TP2824/TP2802.c ****             delay(8); //delay 40ms
 1572              		.loc 1 1616 0
 1573 0044 0820     		movs	r0, #8
 1574 0046 FFF7FEFF 		bl	delay
 1575              	.LVL221:
1617:TP2824/TP2802.c ****             tp28xx_byte_write(0x2f, 0x06);
 1576              		.loc 1 1617 0
 1577 004a 2F20     		movs	r0, #47
 1578 004c 0621     		movs	r1, #6
 1579 004e FFF7FEFF 		bl	tp28xx_byte_write
 1580              	.LVL222:
1618:TP2824/TP2802.c ****             cgain = tp28xx_byte_read(0x04);
 1581              		.loc 1 1618 0
 1582 0052 0420     		movs	r0, #4
 1583 0054 FFF7FEFF 		bl	tp28xx_byte_read
 1584              	.LVL223:
 1585 0058 0446     		mov	r4, r0
 1586              	.LVL224:
1619:TP2824/TP2802.c **** 
1620:TP2824/TP2802.c ****             if(cgain > (CGAIN_STD+1))
 1587              		.loc 1 1620 0
 1588 005a 731C     		adds	r3, r6, #1
 1589 005c 9842     		cmp	r0, r3
 1590 005e 17DD     		ble	.L124
1621:TP2824/TP2802.c ****             {
1622:TP2824/TP2802.c ****                 tmp = tp28xx_byte_read(0x07);
 1591              		.loc 1 1622 0
 1592 0060 0720     		movs	r0, #7
 1593              	.LVL225:
 1594 0062 FFF7FEFF 		bl	tp28xx_byte_read
 1595              	.LVL226:
1623:TP2824/TP2802.c ****                 tmp &=0x3f;
 1596              		.loc 1 1623 0
 1597 0066 00F03F00 		and	r0, r0, #63
 1598              	.LVL227:
1624:TP2824/TP2802.c ****                 //tmp +=0x02;
1625:TP2824/TP2802.c ****                 tmp++;
1626:TP2824/TP2802.c ****                 tmp++;
 1599              		.loc 1 1626 0
 1600 006a 841C     		adds	r4, r0, #2
 1601              	.LVL228:
1627:TP2824/TP2802.c ****                 if(tmp > 0x3f) tmp = 0x3f;
ARM GAS  /tmp/ccSZlabO.s 			page 61


 1602              		.loc 1 1627 0
 1603 006c 3F2C     		cmp	r4, #63
 1604 006e 00D9     		bls	.L125
 1605 0070 3F24     		movs	r4, #63
 1606              	.LVL229:
 1607              	.L125:
1628:TP2824/TP2802.c ****                 tp28xx_byte_write(0x07, 0x80|tmp);
 1608              		.loc 1 1628 0
 1609 0072 64F07F01 		orn	r1, r4, #127
 1610 0076 0720     		movs	r0, #7
 1611 0078 C9B2     		uxtb	r1, r1
 1612 007a FFF7FEFF 		bl	tp28xx_byte_write
 1613              	.LVL230:
1629:TP2824/TP2802.c ****                 if(0x3f == tmp) break;
 1614              		.loc 1 1629 0
 1615 007e 3F2C     		cmp	r4, #63
 1616 0080 0ED0     		beq	.L118
1630:TP2824/TP2802.c ****                 delay(8); //delay 40ms
 1617              		.loc 1 1630 0
 1618 0082 0820     		movs	r0, #8
 1619 0084 FFF7FEFF 		bl	delay
 1620              	.LVL231:
1631:TP2824/TP2802.c ****                 cgain = tp28xx_byte_read(0x04);
 1621              		.loc 1 1631 0
 1622 0088 0420     		movs	r0, #4
 1623 008a FFF7FEFF 		bl	tp28xx_byte_read
 1624              	.LVL232:
 1625 008e 0446     		mov	r4, r0
 1626              	.LVL233:
 1627              	.L124:
1632:TP2824/TP2802.c **** 
1633:TP2824/TP2802.c ****             }
1634:TP2824/TP2802.c ****             if(abs(cgain-CGAIN_STD) < 2)  break;
 1628              		.loc 1 1634 0
 1629 0090 A31B     		subs	r3, r4, r6
 1630 0092 0133     		adds	r3, r3, #1
 1631 0094 022B     		cmp	r3, #2
 1632 0096 01D8     		bhi	.L119
 1633 0098 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1634              	.LVL234:
 1635              	.L127:
 1636 009a 1E27     		movs	r7, #30
 1637              	.LVL235:
 1638              	.L119:
1601:TP2824/TP2802.c ****         {
 1639              		.loc 1 1601 0
 1640 009c 002F     		cmp	r7, #0
 1641 009e BCD1     		bne	.L126
 1642              	.LVL236:
 1643              	.L118:
 1644 00a0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1645              		.cfi_endproc
 1646              	.LFE80:
 1648 00a2 00BF     		.section	.text.INPUT_VIDEO_CHECK,"ax",%progbits
 1649              		.align	2
 1650              		.global	INPUT_VIDEO_CHECK
 1651              		.thumb
ARM GAS  /tmp/ccSZlabO.s 			page 62


 1652              		.thumb_func
 1654              	INPUT_VIDEO_CHECK:
 1655              	.LFB81:
1635:TP2824/TP2802.c ****         }
1636:TP2824/TP2802.c **** 
1637:TP2824/TP2802.c ****     }
1638:TP2824/TP2802.c **** }
1639:TP2824/TP2802.c **** ////////////////////////////////////////
1640:TP2824/TP2802.c **** 
1641:TP2824/TP2802.c **** BYTE INPUT_VIDEO_CHECK(BYTE ch)
1642:TP2824/TP2802.c **** {
 1656              		.loc 1 1642 0
 1657              		.cfi_startproc
 1658              		@ args = 0, pretend = 0, frame = 0
 1659              		@ frame_needed = 0, uses_anonymous_args = 0
 1660              		@ link register save eliminated.
 1661              	.LVL237:
1643:TP2824/TP2802.c **** 
1644:TP2824/TP2802.c **** 	  BYTE ret=0;
1645:TP2824/TP2802.c **** 	
1646:TP2824/TP2802.c **** 	 switch(CURRENT_CH)
 1662              		.loc 1 1646 0
 1663 0000 454B     		ldr	r3, .L168
 1664 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1665 0004 222B     		cmp	r3, #34
 1666 0006 5CD8     		bhi	.L147
 1667 0008 DFE803F0 		tbb	[pc, r3]
 1668              	.L133:
 1669 000c 12       		.byte	(.L132-.L133)/2
 1670 000d 18       		.byte	(.L134-.L133)/2
 1671 000e 20       		.byte	(.L135-.L133)/2
 1672 000f 26       		.byte	(.L136-.L133)/2
 1673 0010 5B       		.byte	(.L147-.L133)/2
 1674 0011 5B       		.byte	(.L147-.L133)/2
 1675 0012 36       		.byte	(.L137-.L133)/2
 1676 0013 36       		.byte	(.L137-.L133)/2
 1677 0014 36       		.byte	(.L137-.L133)/2
 1678 0015 2A       		.byte	(.L138-.L133)/2
 1679 0016 40       		.byte	(.L139-.L133)/2
 1680 0017 30       		.byte	(.L140-.L133)/2
 1681 0018 4A       		.byte	(.L141-.L133)/2
 1682 0019 40       		.byte	(.L139-.L133)/2
 1683 001a 2A       		.byte	(.L138-.L133)/2
 1684 001b 3A       		.byte	(.L142-.L133)/2
 1685 001c 4A       		.byte	(.L141-.L133)/2
 1686 001d 44       		.byte	(.L143-.L133)/2
 1687 001e 44       		.byte	(.L143-.L133)/2
 1688 001f 3A       		.byte	(.L142-.L133)/2
 1689 0020 50       		.byte	(.L144-.L133)/2
 1690 0021 36       		.byte	(.L137-.L133)/2
 1691 0022 50       		.byte	(.L144-.L133)/2
 1692 0023 54       		.byte	(.L145-.L133)/2
 1693 0024 36       		.byte	(.L137-.L133)/2
 1694 0025 50       		.byte	(.L144-.L133)/2
 1695 0026 58       		.byte	(.L146-.L133)/2
 1696 0027 36       		.byte	(.L137-.L133)/2
 1697 0028 54       		.byte	(.L145-.L133)/2
ARM GAS  /tmp/ccSZlabO.s 			page 63


 1698 0029 58       		.byte	(.L146-.L133)/2
 1699 002a 50       		.byte	(.L144-.L133)/2
 1700 002b 54       		.byte	(.L145-.L133)/2
 1701 002c 58       		.byte	(.L146-.L133)/2
 1702 002d 54       		.byte	(.L145-.L133)/2
 1703 002e 58       		.byte	(.L146-.L133)/2
 1704 002f 00       		.p2align 1
 1705              	.L132:
1647:TP2824/TP2802.c ****  	{
1648:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE0_w0: 
1649:TP2824/TP2802.c **** 			if((ch==CH2)||(ch==CH3)||(ch==CH4))
 1706              		.loc 1 1649 0
 1707 0030 0138     		subs	r0, r0, #1
 1708              	.LVL238:
 1709 0032 C0B2     		uxtb	r0, r0
 1710 0034 0228     		cmp	r0, #2
 1711 0036 46D9     		bls	.L148
1644:TP2824/TP2802.c **** 	
 1712              		.loc 1 1644 0
 1713 0038 0020     		movs	r0, #0
 1714 003a 7047     		bx	lr
 1715              	.LVL239:
 1716              	.L134:
1650:TP2824/TP2802.c **** 		           ret=_TRUE;		
1651:TP2824/TP2802.c **** 		break;
1652:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE0_w1: 
1653:TP2824/TP2802.c **** 			if((ch==CH1)||(ch==CH3)||(ch==CH4))
 1717              		.loc 1 1653 0
 1718 003c 0028     		cmp	r0, #0
 1719 003e 44D0     		beq	.L149
 1720              		.loc 1 1653 0 is_stmt 0 discriminator 1
 1721 0040 0228     		cmp	r0, #2
 1722 0042 44D0     		beq	.L150
 1723              		.loc 1 1653 0 discriminator 2
 1724 0044 0328     		cmp	r0, #3
 1725 0046 44D0     		beq	.L151
1644:TP2824/TP2802.c **** 	
 1726              		.loc 1 1644 0 is_stmt 1
 1727 0048 0020     		movs	r0, #0
 1728              	.LVL240:
 1729 004a 7047     		bx	lr
 1730              	.LVL241:
 1731              	.L135:
1654:TP2824/TP2802.c **** 							   ret=_TRUE;	
1655:TP2824/TP2802.c **** 		break;
1656:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE0_w2: 
1657:TP2824/TP2802.c **** 			if((ch==CH1)||(ch==CH2)||(ch==CH4))
 1732              		.loc 1 1657 0
 1733 004c 0128     		cmp	r0, #1
 1734 004e 42D9     		bls	.L152
 1735              		.loc 1 1657 0 is_stmt 0 discriminator 1
 1736 0050 0328     		cmp	r0, #3
 1737 0052 42D0     		beq	.L153
1644:TP2824/TP2802.c **** 	
 1738              		.loc 1 1644 0 is_stmt 1
 1739 0054 0020     		movs	r0, #0
 1740              	.LVL242:
ARM GAS  /tmp/ccSZlabO.s 			page 64


 1741 0056 7047     		bx	lr
 1742              	.LVL243:
 1743              	.L136:
1658:TP2824/TP2802.c **** 							   ret=_TRUE;	
1659:TP2824/TP2802.c **** 					break;
1660:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE0_w3: 
1661:TP2824/TP2802.c **** 			if((ch==CH1)||(ch==CH2)||(ch==CH3))
 1744              		.loc 1 1661 0
 1745 0058 0228     		cmp	r0, #2
 1746 005a 40D9     		bls	.L154
1644:TP2824/TP2802.c **** 	
 1747              		.loc 1 1644 0
 1748 005c 0020     		movs	r0, #0
 1749              	.LVL244:
 1750 005e 7047     		bx	lr
 1751              	.LVL245:
 1752              	.L138:
1662:TP2824/TP2802.c **** 		           ret=_TRUE;	
1663:TP2824/TP2802.c **** 				break;
1664:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE12_12: 
1665:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE12_21:			
1666:TP2824/TP2802.c **** 			if((ch==CH3)||(ch==CH4))
 1753              		.loc 1 1666 0
 1754 0060 0238     		subs	r0, r0, #2
 1755              	.LVL246:
 1756 0062 C0B2     		uxtb	r0, r0
 1757 0064 0128     		cmp	r0, #1
 1758 0066 3CD9     		bls	.L155
1644:TP2824/TP2802.c **** 	
 1759              		.loc 1 1644 0
 1760 0068 0020     		movs	r0, #0
 1761 006a 7047     		bx	lr
 1762              	.LVL247:
 1763              	.L140:
1667:TP2824/TP2802.c **** 		           ret=_TRUE;	
1668:TP2824/TP2802.c **** 		break;
1669:TP2824/TP2802.c **** 		case VS4210_LOOP_MODE12_14:
1670:TP2824/TP2802.c **** 			if((ch==CH2)||(ch==CH3))
 1764              		.loc 1 1670 0
 1765 006c 0138     		subs	r0, r0, #1
 1766              	.LVL248:
 1767 006e C0B2     		uxtb	r0, r0
 1768 0070 0128     		cmp	r0, #1
 1769 0072 38D9     		bls	.L156
1644:TP2824/TP2802.c **** 	
 1770              		.loc 1 1644 0
 1771 0074 0020     		movs	r0, #0
 1772 0076 7047     		bx	lr
 1773              	.LVL249:
 1774              	.L137:
1671:TP2824/TP2802.c **** 		           ret=_TRUE;	
1672:TP2824/TP2802.c **** 			break;
1673:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE10_123:
1674:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8:		
1675:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_123:
1676:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_213:
1677:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_312:
ARM GAS  /tmp/ccSZlabO.s 			page 65


1678:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE9:		
1679:TP2824/TP2802.c **** 		if(ch==CH4)
 1775              		.loc 1 1679 0
 1776 0078 0328     		cmp	r0, #3
 1777 007a 36D0     		beq	.L157
1644:TP2824/TP2802.c **** 	
 1778              		.loc 1 1644 0
 1779 007c 0020     		movs	r0, #0
 1780              	.LVL250:
 1781 007e 7047     		bx	lr
 1782              	.LVL251:
 1783              	.L142:
1680:TP2824/TP2802.c **** 		   ret=_TRUE;	
1681:TP2824/TP2802.c **** 		break;
1682:TP2824/TP2802.c **** 
1683:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_23:
1684:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_32:
1685:TP2824/TP2802.c **** 		if((ch==CH1)||(ch==CH4))
 1784              		.loc 1 1685 0
 1785 0080 0028     		cmp	r0, #0
 1786 0082 34D0     		beq	.L158
 1787              		.loc 1 1685 0 is_stmt 0 discriminator 1
 1788 0084 0328     		cmp	r0, #3
 1789 0086 34D0     		beq	.L159
1644:TP2824/TP2802.c **** 	
 1790              		.loc 1 1644 0 is_stmt 1
 1791 0088 0020     		movs	r0, #0
 1792              	.LVL252:
 1793 008a 7047     		bx	lr
 1794              	.LVL253:
 1795              	.L139:
1686:TP2824/TP2802.c **** 			   ret=_TRUE;	
1687:TP2824/TP2802.c **** 					break;
1688:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_34:
1689:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_43:
1690:TP2824/TP2802.c **** 		if((ch==CH1)||(ch==CH2))
 1796              		.loc 1 1690 0
 1797 008c 0128     		cmp	r0, #1
 1798 008e 32D9     		bls	.L160
1644:TP2824/TP2802.c **** 	
 1799              		.loc 1 1644 0
 1800 0090 0020     		movs	r0, #0
 1801              	.LVL254:
 1802 0092 7047     		bx	lr
 1803              	.LVL255:
 1804              	.L143:
1691:TP2824/TP2802.c **** 			   ret=_TRUE;	
1692:TP2824/TP2802.c **** 				break;
1693:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_31:
1694:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_13:	
1695:TP2824/TP2802.c **** 		if((ch==CH2)||(ch==CH4))
 1805              		.loc 1 1695 0
 1806 0094 0128     		cmp	r0, #1
 1807 0096 30D0     		beq	.L161
 1808              		.loc 1 1695 0 is_stmt 0 discriminator 1
 1809 0098 0328     		cmp	r0, #3
 1810 009a 30D0     		beq	.L162
ARM GAS  /tmp/ccSZlabO.s 			page 66


1644:TP2824/TP2802.c **** 	
 1811              		.loc 1 1644 0 is_stmt 1
 1812 009c 0020     		movs	r0, #0
 1813              	.LVL256:
 1814 009e 7047     		bx	lr
 1815              	.LVL257:
 1816              	.L141:
1696:TP2824/TP2802.c **** 				   ret=_TRUE;			
1697:TP2824/TP2802.c **** 					break;
1698:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE1:
1699:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE2:
1700:TP2824/TP2802.c **** 		ret=_FALSE;
1701:TP2824/TP2802.c **** 		break;
1702:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_42:
1703:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE12_24:
1704:TP2824/TP2802.c **** 		if((ch==CH1)||(ch==CH3))
 1817              		.loc 1 1704 0
 1818 00a0 0028     		cmp	r0, #0
 1819 00a2 2ED0     		beq	.L163
 1820              		.loc 1 1704 0 is_stmt 0 discriminator 1
 1821 00a4 0228     		cmp	r0, #2
 1822 00a6 2ED0     		beq	.L164
1644:TP2824/TP2802.c **** 	
 1823              		.loc 1 1644 0 is_stmt 1
 1824 00a8 0020     		movs	r0, #0
 1825              	.LVL258:
 1826 00aa 7047     		bx	lr
 1827              	.LVL259:
 1828              	.L144:
1705:TP2824/TP2802.c **** 				   ret=_TRUE;		
1706:TP2824/TP2802.c **** 		break;
1707:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_412:	
1708:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_124:
1709:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_214: 
1710:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE10_412:
1711:TP2824/TP2802.c **** 			if(ch==CH3)
 1829              		.loc 1 1711 0
 1830 00ac 0228     		cmp	r0, #2
 1831 00ae 2CD0     		beq	.L165
1644:TP2824/TP2802.c **** 	
 1832              		.loc 1 1644 0
 1833 00b0 0020     		movs	r0, #0
 1834              	.LVL260:
 1835 00b2 7047     		bx	lr
 1836              	.LVL261:
 1837              	.L145:
1712:TP2824/TP2802.c **** 			   ret=_TRUE;		
1713:TP2824/TP2802.c **** 		break;
1714:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_134:
1715:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_314:
1716:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE10_413:
1717:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_413: 
1718:TP2824/TP2802.c **** 			if(ch==CH2)
 1838              		.loc 1 1718 0
 1839 00b4 0128     		cmp	r0, #1
 1840 00b6 2AD0     		beq	.L166
1644:TP2824/TP2802.c **** 	
ARM GAS  /tmp/ccSZlabO.s 			page 67


 1841              		.loc 1 1644 0
 1842 00b8 0020     		movs	r0, #0
 1843              	.LVL262:
 1844 00ba 7047     		bx	lr
 1845              	.LVL263:
 1846              	.L146:
1719:TP2824/TP2802.c **** 			   ret=_TRUE;		
1720:TP2824/TP2802.c **** 		break;
1721:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_234:
1722:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_324: 
1723:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE10_423:
1724:TP2824/TP2802.c **** 	case VS4210_LOOP_MODE8_423:			
1725:TP2824/TP2802.c **** 		if(ch==CH1)
 1847              		.loc 1 1725 0
 1848 00bc 48B3     		cbz	r0, .L167
1644:TP2824/TP2802.c **** 	
 1849              		.loc 1 1644 0
 1850 00be 0020     		movs	r0, #0
 1851              	.LVL264:
 1852 00c0 7047     		bx	lr
 1853              	.LVL265:
 1854              	.L147:
1700:TP2824/TP2802.c **** 		break;
 1855              		.loc 1 1700 0
 1856 00c2 0020     		movs	r0, #0
 1857              	.LVL266:
 1858 00c4 7047     		bx	lr
 1859              	.L148:
1650:TP2824/TP2802.c **** 		break;
 1860              		.loc 1 1650 0
 1861 00c6 0120     		movs	r0, #1
 1862 00c8 7047     		bx	lr
 1863              	.LVL267:
 1864              	.L149:
1654:TP2824/TP2802.c **** 		break;
 1865              		.loc 1 1654 0
 1866 00ca 0120     		movs	r0, #1
 1867              	.LVL268:
 1868 00cc 7047     		bx	lr
 1869              	.LVL269:
 1870              	.L150:
 1871 00ce 0120     		movs	r0, #1
 1872              	.LVL270:
 1873 00d0 7047     		bx	lr
 1874              	.LVL271:
 1875              	.L151:
 1876 00d2 0120     		movs	r0, #1
 1877              	.LVL272:
 1878 00d4 7047     		bx	lr
 1879              	.LVL273:
 1880              	.L152:
1658:TP2824/TP2802.c **** 					break;
 1881              		.loc 1 1658 0
 1882 00d6 0120     		movs	r0, #1
 1883              	.LVL274:
 1884 00d8 7047     		bx	lr
 1885              	.LVL275:
ARM GAS  /tmp/ccSZlabO.s 			page 68


 1886              	.L153:
 1887 00da 0120     		movs	r0, #1
 1888              	.LVL276:
 1889 00dc 7047     		bx	lr
 1890              	.LVL277:
 1891              	.L154:
1662:TP2824/TP2802.c **** 				break;
 1892              		.loc 1 1662 0
 1893 00de 0120     		movs	r0, #1
 1894              	.LVL278:
 1895 00e0 7047     		bx	lr
 1896              	.L155:
1667:TP2824/TP2802.c **** 		break;
 1897              		.loc 1 1667 0
 1898 00e2 0120     		movs	r0, #1
 1899 00e4 7047     		bx	lr
 1900              	.L156:
1671:TP2824/TP2802.c **** 			break;
 1901              		.loc 1 1671 0
 1902 00e6 0120     		movs	r0, #1
 1903 00e8 7047     		bx	lr
 1904              	.LVL279:
 1905              	.L157:
1680:TP2824/TP2802.c **** 		break;
 1906              		.loc 1 1680 0
 1907 00ea 0120     		movs	r0, #1
 1908              	.LVL280:
 1909 00ec 7047     		bx	lr
 1910              	.LVL281:
 1911              	.L158:
1686:TP2824/TP2802.c **** 					break;
 1912              		.loc 1 1686 0
 1913 00ee 0120     		movs	r0, #1
 1914              	.LVL282:
 1915 00f0 7047     		bx	lr
 1916              	.LVL283:
 1917              	.L159:
 1918 00f2 0120     		movs	r0, #1
 1919              	.LVL284:
 1920 00f4 7047     		bx	lr
 1921              	.LVL285:
 1922              	.L160:
1691:TP2824/TP2802.c **** 				break;
 1923              		.loc 1 1691 0
 1924 00f6 0120     		movs	r0, #1
 1925              	.LVL286:
 1926 00f8 7047     		bx	lr
 1927              	.LVL287:
 1928              	.L161:
1696:TP2824/TP2802.c **** 					break;
 1929              		.loc 1 1696 0
 1930 00fa 0120     		movs	r0, #1
 1931              	.LVL288:
 1932 00fc 7047     		bx	lr
 1933              	.LVL289:
 1934              	.L162:
 1935 00fe 0120     		movs	r0, #1
ARM GAS  /tmp/ccSZlabO.s 			page 69


 1936              	.LVL290:
 1937 0100 7047     		bx	lr
 1938              	.LVL291:
 1939              	.L163:
1705:TP2824/TP2802.c **** 		break;
 1940              		.loc 1 1705 0
 1941 0102 0120     		movs	r0, #1
 1942              	.LVL292:
 1943 0104 7047     		bx	lr
 1944              	.LVL293:
 1945              	.L164:
 1946 0106 0120     		movs	r0, #1
 1947              	.LVL294:
 1948 0108 7047     		bx	lr
 1949              	.LVL295:
 1950              	.L165:
1712:TP2824/TP2802.c **** 		break;
 1951              		.loc 1 1712 0
 1952 010a 0120     		movs	r0, #1
 1953              	.LVL296:
 1954 010c 7047     		bx	lr
 1955              	.LVL297:
 1956              	.L166:
1719:TP2824/TP2802.c **** 		break;
 1957              		.loc 1 1719 0
 1958 010e 0120     		movs	r0, #1
 1959              	.LVL298:
 1960 0110 7047     		bx	lr
 1961              	.LVL299:
 1962              	.L167:
1726:TP2824/TP2802.c **** 		   ret=_TRUE;		
 1963              		.loc 1 1726 0
 1964 0112 0120     		movs	r0, #1
 1965              	.LVL300:
1727:TP2824/TP2802.c **** 				break;
1728:TP2824/TP2802.c **** 	default:
1729:TP2824/TP2802.c **** 		ret=0;
1730:TP2824/TP2802.c **** 		break;
1731:TP2824/TP2802.c ****  	}
1732:TP2824/TP2802.c **** 	 
1733:TP2824/TP2802.c **** 	 return ret;
1734:TP2824/TP2802.c **** }
 1966              		.loc 1 1734 0
 1967 0114 7047     		bx	lr
 1968              	.L169:
 1969 0116 00BF     		.align	2
 1970              	.L168:
 1971 0118 00000000 		.word	CURRENT_CH
 1972              		.cfi_endproc
 1973              	.LFE81:
 1975              		.section	.text.Det_HLock,"ax",%progbits
 1976              		.align	2
 1977              		.global	Det_HLock
 1978              		.thumb
 1979              		.thumb_func
 1981              	Det_HLock:
 1982              	.LFB83:
ARM GAS  /tmp/ccSZlabO.s 			page 70


1735:TP2824/TP2802.c **** 
1736:TP2824/TP2802.c **** void EQ_Detect()
1737:TP2824/TP2802.c **** {
1738:TP2824/TP2802.c ****     //tByte tmpval;
1739:TP2824/TP2802.c ****     tByte cvstd,status,i;
1740:TP2824/TP2802.c ****     tByte gain, tmp, fmt/*, tmpab*/;
1741:TP2824/TP2802.c **** 	
1742:TP2824/TP2802.c ****     for(i = 0; i < CH_PER_CHIP; i++)//scan four inputs:
1743:TP2824/TP2802.c ****     {
1744:TP2824/TP2802.c **** 	//	if((INPUT_VIDEO_CHECK(i))&&(BOOT_ISSUE==ON))
1745:TP2824/TP2802.c ****           //      continue;
1746:TP2824/TP2802.c **** 
1747:TP2824/TP2802.c **** 		
1748:TP2824/TP2802.c ****         SetRegPage(i);
1749:TP2824/TP2802.c ****         status = tp28xx_byte_read(0x01);
1750:TP2824/TP2802.c **** 
1751:TP2824/TP2802.c ****         //state machine for video checking
1752:TP2824/TP2802.c ****         if(status & FLAG_LOSS)
1753:TP2824/TP2802.c ****         {
1754:TP2824/TP2802.c **** 	
1755:TP2824/TP2802.c **** 		
1756:TP2824/TP2802.c ****             if(VIDEO_UNPLUG == state[i])
1757:TP2824/TP2802.c ****             {
1758:TP2824/TP2802.c ****                 if(count[i] < MAX_COUNT) count[i]++;
1759:TP2824/TP2802.c ****                 continue;
1760:TP2824/TP2802.c ****             }
1761:TP2824/TP2802.c ****             else
1762:TP2824/TP2802.c ****             {
1763:TP2824/TP2802.c **** 
1764:TP2824/TP2802.c **** 
1765:TP2824/TP2802.c **** 				 if(SelectInputMode==_AHD_Input)
1766:TP2824/TP2802.c **** 				 	{
1767:TP2824/TP2802.c **** 					 Set_Video_Loss_OSD(1,ON);	 
1768:TP2824/TP2802.c **** 					VXISI2CWrite( 0x32, 0x00 );
1769:TP2824/TP2802.c **** 				 	}
1770:TP2824/TP2802.c **** 
1771:TP2824/TP2802.c **** 				
1772:TP2824/TP2802.c **** 				 
1773:TP2824/TP2802.c **** 				 Init_TP280x_RegSet();
1774:TP2824/TP2802.c **** 
1775:TP2824/TP2802.c **** 				 if(SelectInputMode==_AHD_Input)
1776:TP2824/TP2802.c **** 				 	{
1777:TP2824/TP2802.c **** 
1778:TP2824/TP2802.c **** 				  HS_Select_Win(1);
1779:TP2824/TP2802.c **** 				 	}
1780:TP2824/TP2802.c **** 			#if 0
1781:TP2824/TP2802.c ****                  state[i] = VIDEO_UNPLUG;
1782:TP2824/TP2802.c ****                 count[i] = 0;
1783:TP2824/TP2802.c ****                 mode[i] = NoDet;
1784:TP2824/TP2802.c ****                 TP28xx_reset_default(chip, i);
1785:TP2824/TP2802.c ****                 printf("video loss ch%02x \r\n", (tWord)i);                
1786:TP2824/TP2802.c ****               	VS4210_Rx_NoSignal(1/*i*/) ; //chunyu
1787:TP2824/TP2802.c **** 		TP_InputMode=7;
1788:TP2824/TP2802.c **** 		    newInRes[0] = _OSD_No_Signal; 
1789:TP2824/TP2802.c **** 				
1790:TP2824/TP2802.c **** 		if(SelectInputMode==_AHD_Input)
1791:TP2824/TP2802.c **** 		Set_Video_Loss_OSD(1,ON);	
ARM GAS  /tmp/ccSZlabO.s 			page 71


1792:TP2824/TP2802.c **** 		//MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);
1793:TP2824/TP2802.c **** 		//MCUTimerActiveTimerEvent(SEC(3), _SYSTEM_TIMER_EVENT_VIDEO_RESET);
1794:TP2824/TP2802.c **** 
1795:TP2824/TP2802.c **** 		OSDSecCount = 0 ;
1796:TP2824/TP2802.c **** 		 OSDStateFlg = 1 ;	
1797:TP2824/TP2802.c **** 			#endif
1798:TP2824/TP2802.c ****             }
1799:TP2824/TP2802.c **** 			
1800:TP2824/TP2802.c ****         }
1801:TP2824/TP2802.c ****         else
1802:TP2824/TP2802.c ****         {
1803:TP2824/TP2802.c ****             if(PAL == mode[i] || NTSC == mode[i])
1804:TP2824/TP2802.c ****                 flag_LOCKED = CVBS_FLAG_LOCKED;
1805:TP2824/TP2802.c ****             else
1806:TP2824/TP2802.c ****                 flag_LOCKED = TVI_FLAG_LOCKED;
1807:TP2824/TP2802.c **** 
1808:TP2824/TP2802.c ****             if( flag_LOCKED == (status & flag_LOCKED) ) //video locked
1809:TP2824/TP2802.c ****             {
1810:TP2824/TP2802.c ****                 if(VIDEO_LOCKED == state[i])
1811:TP2824/TP2802.c ****                 {
1812:TP2824/TP2802.c ****                     if(count[i] < MAX_COUNT) count[i]++;
1813:TP2824/TP2802.c **** 				#if 0
1814:TP2824/TP2802.c **** 				if(VideoSave[i]==_TRUE)
1815:TP2824/TP2802.c **** 				{
1816:TP2824/TP2802.c **** 			 		if((count[i]==1)&&((mode[i] == NTSC) ||( mode[i] == PAL)))
1817:TP2824/TP2802.c **** 			 		count[i]=20;//ryan@20200903
1818:TP2824/TP2802.c **** 			 		else if((count[i]==1)/*&&(ReadEEP(EEP_TP2824_STD0+(i*3))==HDA)*/)
1819:TP2824/TP2802.c **** 			 			{
1820:TP2824/TP2802.c **** 			 			std[i]=ReadEEP(EEP_TP2824_STD0+(i*3));
1821:TP2824/TP2802.c **** 						
1822:TP2824/TP2802.c **** 		 			 		if(std[i]==HDC)
1823:TP2824/TP2802.c **** 							{
1824:TP2824/TP2802.c **** 							Set_HDC(i);
1825:TP2824/TP2802.c **** 							printf("(Set_HDC)");
1826:TP2824/TP2802.c **** 							}
1827:TP2824/TP2802.c **** 							 if(std[i]==HDA)
1828:TP2824/TP2802.c **** 						 	{
1829:TP2824/TP2802.c **** 						 	Set_HDA(i);
1830:TP2824/TP2802.c **** 							printf("(Set_HDA)");
1831:TP2824/TP2802.c **** 						 	}
1832:TP2824/TP2802.c **** 							 
1833:TP2824/TP2802.c **** 						count[i]=20;
1834:TP2824/TP2802.c **** 			 			}
1835:TP2824/TP2802.c **** 					
1836:TP2824/TP2802.c **** 				}	
1837:TP2824/TP2802.c **** 				#endif
1838:TP2824/TP2802.c ****                 }
1839:TP2824/TP2802.c ****                 else if(VIDEO_UNPLUG == state[i])
1840:TP2824/TP2802.c ****                 {
1841:TP2824/TP2802.c ****                     state[i] = VIDEO_IN;
1842:TP2824/TP2802.c ****                     count[i] = 0;
1843:TP2824/TP2802.c ****                     printf("1video in ch%02x \r\n", (tWord)i);
1844:TP2824/TP2802.c ****                 }
1845:TP2824/TP2802.c ****                 else
1846:TP2824/TP2802.c ****                 {
1847:TP2824/TP2802.c ****                     state[i] = VIDEO_LOCKED;
1848:TP2824/TP2802.c ****                     count[i] = 0;
ARM GAS  /tmp/ccSZlabO.s 			page 72


1849:TP2824/TP2802.c ****                     printf("video locked ch%02x \r\n", (tWord)i);
1850:TP2824/TP2802.c ****                 }
1851:TP2824/TP2802.c ****             }
1852:TP2824/TP2802.c ****             else  //video in but unlocked
1853:TP2824/TP2802.c ****             {
1854:TP2824/TP2802.c ****          
1855:TP2824/TP2802.c ****                 if(VIDEO_UNPLUG == state[i])
1856:TP2824/TP2802.c ****                 {
1857:TP2824/TP2802.c ****                     state[i] = VIDEO_IN;
1858:TP2824/TP2802.c ****                     count[i] = 0;
1859:TP2824/TP2802.c ****                     printf("video in ch%02x \r\n", (tWord)i);
1860:TP2824/TP2802.c ****                 }
1861:TP2824/TP2802.c ****                 else if(VIDEO_LOCKED == state[i])
1862:TP2824/TP2802.c ****                 {
1863:TP2824/TP2802.c **** /*
1864:TP2824/TP2802.c **** 			if(Flisheye_VLOSS_Count[i]<100)
1865:TP2824/TP2802.c **** 			{
1866:TP2824/TP2802.c **** 			Flisheye_VLOSS_Count[i]++;
1867:TP2824/TP2802.c **** 			}
1868:TP2824/TP2802.c **** 		else
1869:TP2824/TP2802.c **** 			*/
1870:TP2824/TP2802.c **** 			{
1871:TP2824/TP2802.c ****                     state[i] = VIDEO_UNLOCK;
1872:TP2824/TP2802.c ****                     count[i] = 0;
1873:TP2824/TP2802.c ****                     printf("video unstable ch%02x \r\n", (tWord)i);
1874:TP2824/TP2802.c **** 			}		
1875:TP2824/TP2802.c ****                 }
1876:TP2824/TP2802.c ****                 else
1877:TP2824/TP2802.c ****                 {
1878:TP2824/TP2802.c ****                     if(count[i] < MAX_COUNT) count[i]++;
1879:TP2824/TP2802.c ****                     if(VIDEO_UNLOCK == state[i] && count[i] > 2)
1880:TP2824/TP2802.c ****                     {
1881:TP2824/TP2802.c ****                         state[i] = VIDEO_IN;
1882:TP2824/TP2802.c ****                         count[i] = 0;
1883:TP2824/TP2802.c ****                         TP28xx_reset_default(chip, i);
1884:TP2824/TP2802.c ****                         printf("video unlocked ch%02x \r\n", (tWord)i);                        
1885:TP2824/TP2802.c ****                         VS4210_Rx_NoSignal(i) ;//chunyu
1886:TP2824/TP2802.c ****                     }
1887:TP2824/TP2802.c ****                 }
1888:TP2824/TP2802.c **** 				
1889:TP2824/TP2802.c ****             }
1890:TP2824/TP2802.c **** 			
1891:TP2824/TP2802.c ****         }
1892:TP2824/TP2802.c **** 
1893:TP2824/TP2802.c ****         if( VIDEO_IN == state[i])
1894:TP2824/TP2802.c ****         {
1895:TP2824/TP2802.c ****             cvstd = tp28xx_byte_read(0x03);
1896:TP2824/TP2802.c ****             sywd = cvstd & 0x08;
1897:TP2824/TP2802.c ****             cvstd &= 0x07;
1898:TP2824/TP2802.c ****             fmt = mode[i];
1899:TP2824/TP2802.c ****             if(NTPAL == cvstd && flag_CVBS)
1900:TP2824/TP2802.c ****             {
1901:TP2824/TP2802.c ****                 //if(count[i] & 0x01)
1902:TP2824/TP2802.c ****                 if(status & 0x04)
1903:TP2824/TP2802.c ****                     fmt = PAL;
1904:TP2824/TP2802.c ****                 else
1905:TP2824/TP2802.c ****                     fmt = NTSC;
ARM GAS  /tmp/ccSZlabO.s 			page 73


1906:TP2824/TP2802.c ****             }
1907:TP2824/TP2802.c ****             else if(cvstd == R720P30 )
1908:TP2824/TP2802.c ****             {
1909:TP2824/TP2802.c ****                 if( flag_MEGA && (count[i]&0x02) )// 3M auto detect test
1910:TP2824/TP2802.c ****                     fmt = R4M12;
1911:TP2824/TP2802.c ****                 else
1912:TP2824/TP2802.c ****                     fmt = R720P30V2;
1913:TP2824/TP2802.c ****             }
1914:TP2824/TP2802.c ****             else if(cvstd == R720P25 )
1915:TP2824/TP2802.c ****             {
1916:TP2824/TP2802.c ****                 fmt = R720P25V2;
1917:TP2824/TP2802.c ****             }
1918:TP2824/TP2802.c ****             else if(cvstd == R1080P30 )
1919:TP2824/TP2802.c ****             {
1920:TP2824/TP2802.c ****                 if( flag_MEGA && (count[i]&0x02) )//TP2853C 3M auto detect test
1921:TP2824/TP2802.c ****                     fmt = R3M20;
1922:TP2824/TP2802.c ****                 else
1923:TP2824/TP2802.c ****                     fmt = R1080P30;
1924:TP2824/TP2802.c ****             }
1925:TP2824/TP2802.c ****             else if(cvstd == R720P60 )
1926:TP2824/TP2802.c ****             {
1927:TP2824/TP2802.c ****                 if( flag_MEGA && (count[i]&0x02) )//TP2853C 3M auto detect test
1928:TP2824/TP2802.c ****                     fmt = R4M30;
1929:TP2824/TP2802.c ****                 else
1930:TP2824/TP2802.c ****                     fmt = R720P60;
1931:TP2824/TP2802.c ****             }
1932:TP2824/TP2802.c ****             else if(cvstd < 4 )
1933:TP2824/TP2802.c ****             {
1934:TP2824/TP2802.c ****                 fmt = cvstd;
1935:TP2824/TP2802.c ****             }
1936:TP2824/TP2802.c ****             else
1937:TP2824/TP2802.c ****             {
1938:TP2824/TP2802.c ****                 if( flag_MEGA )//TP2853C 3M auto detect test
1939:TP2824/TP2802.c ****                 {
1940:TP2824/TP2802.c ****                     tp28xx_byte_write(0x2f, 0x09);
1941:TP2824/TP2802.c ****                     tmp = tp28xx_byte_read(0x04);
1942:TP2824/TP2802.c ****                     if((tmp > 0x48) && (tmp < 0x55))
1943:TP2824/TP2802.c ****                     {
1944:TP2824/TP2802.c ****                         fmt = R3M18;
1945:TP2824/TP2802.c ****                     }
1946:TP2824/TP2802.c ****                     else if((tmp > 0x55) && (tmp < 0x62))
1947:TP2824/TP2802.c ****                     {
1948:TP2824/TP2802.c ****                         fmt = R4M15;
1949:TP2824/TP2802.c ****                     }
1950:TP2824/TP2802.c ****                     else if((tmp > 0x70) && (tmp < 0x80))
1951:TP2824/TP2802.c ****                     {
1952:TP2824/TP2802.c ****                         fmt = R6M10;
1953:TP2824/TP2802.c ****                     }
1954:TP2824/TP2802.c ****                 }
1955:TP2824/TP2802.c ****             }
1956:TP2824/TP2802.c **** /*
1957:TP2824/TP2802.c **** 		if(VideoSave[i]==_TRUE)
1958:TP2824/TP2802.c **** 		{
1959:TP2824/TP2802.c **** 		printf("(B)");
1960:TP2824/TP2802.c **** 		Set_VidRes(i);      
1961:TP2824/TP2802.c **** 		}
1962:TP2824/TP2802.c **** 		else
ARM GAS  /tmp/ccSZlabO.s 			page 74


1963:TP2824/TP2802.c **** 			*/
1964:TP2824/TP2802.c **** 		{
1965:TP2824/TP2802.c **** 		   	if( mode[i] != fmt )
1966:TP2824/TP2802.c **** 		            {
1967:TP2824/TP2802.c **** 		                mode[i] = fmt;
1968:TP2824/TP2802.c **** 		                printf("Set_VidResmode[%d] =%d\r\n",(int)i, (int)fmt);
1969:TP2824/TP2802.c **** 		                Set_VidRes(i);
1970:TP2824/TP2802.c **** 		            }
1971:TP2824/TP2802.c **** 		}
1972:TP2824/TP2802.c ****         }
1973:TP2824/TP2802.c **** 
1974:TP2824/TP2802.c ****         if( VIDEO_LOCKED == state[i]) //check signal lock
1975:TP2824/TP2802.c ****         {
1976:TP2824/TP2802.c ****             if(0 == count[i])
1977:TP2824/TP2802.c ****             {
1978:TP2824/TP2802.c ****                 std[i] = TVI;
1979:TP2824/TP2802.c ****                 CurCH = i;
1980:TP2824/TP2802.c ****                 if( (R720P30V2 == mode[i]) || (R720P25V2 == mode[i]) )
1981:TP2824/TP2802.c ****                 {
1982:TP2824/TP2802.c ****                     if( 0x00 == (0x08 & tp28xx_byte_read(0x03)))
1983:TP2824/TP2802.c ****                     {
1984:TP2824/TP2802.c ****                         mode[i] &= 0xf7;
1985:TP2824/TP2802.c ****                         Set_VidRes(i);
1986:TP2824/TP2802.c ****                         //printf("TVI_Set_VidRes\r\n");
1987:TP2824/TP2802.c ****                     }
1988:TP2824/TP2802.c ****                 }
1989:TP2824/TP2802.c **** 
1990:TP2824/TP2802.c ****                 //tp28xx_byte_write(0xf6  , REG_F6[i]);
1991:TP2824/TP2802.c ****                 tp28xx_byte_write(0xf6 +i  , REG_F6[i]);  //chunyu
1992:TP2824/TP2802.c **** 
1993:TP2824/TP2802.c **** #if(OUTPUT == Bits16out)
1994:TP2824/TP2802.c ****                 if( TP2826 == chip )
1995:TP2824/TP2802.c ****                 {
1996:TP2824/TP2802.c ****                     tp28xx_byte_write(0xf8, REG_F7[i]);
1997:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfa, REG_FA[i]);
1998:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfb, REG_FA[i]);
1999:TP2824/TP2802.c ****                 }
2000:TP2824/TP2802.c ****                 else
2001:TP2824/TP2802.c ****                 {                    
2002:TP2824/TP2802.c ****                     tp28xx_byte_write(0xf7, REG_F7[i]);
2003:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfa, REG_FA[i]);
2004:TP2824/TP2802.c ****                     //printf("set output ch%02x \r\n", (tWord)CH[i]);
2005:TP2824/TP2802.c ****                 }
2006:TP2824/TP2802.c **** #else //BT656																				
2007:TP2824/TP2802.c **** 
2008:TP2824/TP2802.c ****                 tmp=tp28xx_byte_read(0xf5);
2009:TP2824/TP2802.c ****                 if( tmp &= SYS_MODE[i])
2010:TP2824/TP2802.c ****                 {
2011:TP2824/TP2802.c ****                     printf("//75.25M output\r\n") ;
2012:TP2824/TP2802.c **** 
2013:TP2824/TP2802.c ****                     if (i == 0)
2014:TP2824/TP2802.c ****                     {
2015:TP2824/TP2802.c ****                         tmpab = tp28xx_byte_read(0xfa) ;
2016:TP2824/TP2802.c ****                         tmpab = (tmpab & 0xF0) | 0x0A ;
2017:TP2824/TP2802.c ****                         tp28xx_byte_write(0xfa, tmpab);
2018:TP2824/TP2802.c ****                     }
2019:TP2824/TP2802.c ****                     else if (i == 1)
ARM GAS  /tmp/ccSZlabO.s 			page 75


2020:TP2824/TP2802.c ****                     {
2021:TP2824/TP2802.c ****                         tmpab = tp28xx_byte_read(0xfa) ;
2022:TP2824/TP2802.c ****                         tmpab = (tmpab & 0x0F) | 0xA0 ;
2023:TP2824/TP2802.c ****                         tp28xx_byte_write(0xfa, tmpab);
2024:TP2824/TP2802.c ****                     }
2025:TP2824/TP2802.c **** 
2026:TP2824/TP2802.c ****                     if (i == 2)
2027:TP2824/TP2802.c ****                     {
2028:TP2824/TP2802.c ****                         tmpab = tp28xx_byte_read(0xfb) ;
2029:TP2824/TP2802.c ****                         tmpab = (tmpab & 0xF0) | 0x0A ;
2030:TP2824/TP2802.c ****                         tp28xx_byte_write(0xfb, tmpab);
2031:TP2824/TP2802.c ****                     }
2032:TP2824/TP2802.c ****                     else if (i == 3)
2033:TP2824/TP2802.c ****                     {
2034:TP2824/TP2802.c ****                         tmpab = tp28xx_byte_read(0xfb) ;
2035:TP2824/TP2802.c ****                         tmpab = (tmpab & 0x0F) | 0xA0 ;
2036:TP2824/TP2802.c ****                         tp28xx_byte_write(0xfb, tmpab);
2037:TP2824/TP2802.c ****                     }
2038:TP2824/TP2802.c ****                 }
2039:TP2824/TP2802.c ****                 else
2040:TP2824/TP2802.c ****                 {
2041:TP2824/TP2802.c ****                     extern tByte half_scaler;
2042:TP2824/TP2802.c ****                     if(half_scaler) //down scaler output
2043:TP2824/TP2802.c ****                     {
2044:TP2824/TP2802.c ****                         tmp=tp28xx_byte_read(0x35);
2045:TP2824/TP2802.c ****                         tmp |= 0x40;
2046:TP2824/TP2802.c ****                         tp28xx_byte_write(0x35, tmp);                        
2047:TP2824/TP2802.c **** 
2048:TP2824/TP2802.c ****                         if (i == 0)
2049:TP2824/TP2802.c ****                         {
2050:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfa) ;
2051:TP2824/TP2802.c ****                             tmpab = (tmpab & 0xF0) | 0x0A ;
2052:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfa, tmpab);
2053:TP2824/TP2802.c ****                         }
2054:TP2824/TP2802.c ****                         else if (i == 1)
2055:TP2824/TP2802.c ****                         {
2056:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfa) ;
2057:TP2824/TP2802.c ****                             tmpab = (tmpab & 0x0F) | 0xA0 ;
2058:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfa, tmpab);
2059:TP2824/TP2802.c ****                         }
2060:TP2824/TP2802.c **** 
2061:TP2824/TP2802.c **** 
2062:TP2824/TP2802.c ****                         if (i == 2)
2063:TP2824/TP2802.c ****                         {
2064:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfb) ;
2065:TP2824/TP2802.c ****                             tmpab = (tmpab & 0xF0) | 0x0A ;
2066:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfb, tmpab);
2067:TP2824/TP2802.c ****                         }
2068:TP2824/TP2802.c ****                         else if (i == 3)
2069:TP2824/TP2802.c ****                         {
2070:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfb) ;
2071:TP2824/TP2802.c ****                             tmpab = (tmpab & 0x0F) | 0xA0 ;
2072:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfb, tmpab);
2073:TP2824/TP2802.c ****                         }
2074:TP2824/TP2802.c **** 
2075:TP2824/TP2802.c ****                     }
2076:TP2824/TP2802.c ****                     else
ARM GAS  /tmp/ccSZlabO.s 			page 76


2077:TP2824/TP2802.c ****                     {
2078:TP2824/TP2802.c ****                         tmp=tp28xx_byte_read(0x35);
2079:TP2824/TP2802.c ****                         tmp &= 0xbf;
2080:TP2824/TP2802.c ****                         tp28xx_byte_write(0x35, tmp);
2081:TP2824/TP2802.c **** 
2082:TP2824/TP2802.c **** 
2083:TP2824/TP2802.c ****                         if (i == 0)
2084:TP2824/TP2802.c ****                         {
2085:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfa) ;
2086:TP2824/TP2802.c ****                             tmpab = (tmpab & 0xF0) | 0x08 ;
2087:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfa, tmpab);
2088:TP2824/TP2802.c ****                         }
2089:TP2824/TP2802.c ****                         else if (i == 1)
2090:TP2824/TP2802.c ****                         {
2091:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfa) ;
2092:TP2824/TP2802.c ****                             tmpab = (tmpab & 0x0F) | 0x80 ;
2093:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfa, tmpab);
2094:TP2824/TP2802.c ****                         }
2095:TP2824/TP2802.c **** 
2096:TP2824/TP2802.c **** 
2097:TP2824/TP2802.c ****                         if (i == 2)
2098:TP2824/TP2802.c ****                         {
2099:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfb) ;
2100:TP2824/TP2802.c ****                             tmpab = (tmpab & 0xF0) | 0x08 ;
2101:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfb, tmpab);
2102:TP2824/TP2802.c ****                         }
2103:TP2824/TP2802.c ****                         else if (i == 3)
2104:TP2824/TP2802.c ****                         {
2105:TP2824/TP2802.c ****                             tmpab = tp28xx_byte_read(0xfb) ;
2106:TP2824/TP2802.c ****                             tmpab = (tmpab & 0x0F) | 0x80 ;
2107:TP2824/TP2802.c ****                             tp28xx_byte_write(0xfb, tmpab);
2108:TP2824/TP2802.c ****                         }
2109:TP2824/TP2802.c ****                     }
2110:TP2824/TP2802.c ****                 }
2111:TP2824/TP2802.c **** #endif
2112:TP2824/TP2802.c ****                 if( CurRes != ManVidResRx)
2113:TP2824/TP2802.c ****                 {
2114:TP2824/TP2802.c ****                     CurRes = ManVidResRx;
2115:TP2824/TP2802.c ****                     //CreateMDIN340VideoInstance();  //chunyu
2116:TP2824/TP2802.c ****                     printf("ManVidResRx=0x%02x\r\n",ManVidResRx ) ;
2117:TP2824/TP2802.c **** 
2118:TP2824/TP2802.c ****                 }
2119:TP2824/TP2802.c ****             }
2120:TP2824/TP2802.c ****             else if(1 == count[i])
2121:TP2824/TP2802.c ****             {
2122:TP2824/TP2802.c ****                 if( chip > TP2823 )
2123:TP2824/TP2802.c ****                 {
2124:TP2824/TP2802.c ****                     tmp = tp28xx_byte_read(0x01);
2125:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
2126:TP2824/TP2802.c ****                     if(mode[i] == NTSC || mode[i] == PAL)
2127:TP2824/TP2802.c ****                              printf("CVBS  mode:%d\r\n", (tWord)mode[i]);
2128:TP2824/TP2802.c **** //                 if( 0x60 == (0x64 & tmp))
2129:TP2824/TP2802.c ****                     else if((0x60 == (0x64 & tmp)) &&
2130:TP2824/TP2802.c ****             			   (mode[i] != R720P30 && mode[i] != R720P25 && mode[i] != R720P30V2 && mode[i] != R
2131:TP2824/TP2802.c ****                     {
2132:TP2824/TP2802.c ****                         //if(Set_HDA(mode[i])) printf("turn to A ch%02x\r\n", (tWord)i);
2133:TP2824/TP2802.c ****                         if(Set_HDC(i))
ARM GAS  /tmp/ccSZlabO.s 			page 77


2134:TP2824/TP2802.c ****                         {
2135:TP2824/TP2802.c ****                             std[i] = HDC;
2136:TP2824/TP2802.c ****                             printf("turn to C ch%02x\r\n", (tWord)i);
2137:TP2824/TP2802.c ****                         }
2138:TP2824/TP2802.c ****                     }
2139:TP2824/TP2802.c ****                 }
2140:TP2824/TP2802.c ****             }
2141:TP2824/TP2802.c ****             else if(2 == count[i])
2142:TP2824/TP2802.c ****             {
2143:TP2824/TP2802.c ****                 if( chip > TP2823 )
2144:TP2824/TP2802.c ****                 {
2145:TP2824/TP2802.c ****                     tmp = tp28xx_byte_read(0x01);
2146:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
2147:TP2824/TP2802.c **** 			if(mode[i] == NTSC || mode[i] == PAL)
2148:TP2824/TP2802.c ****                              printf("CVBS  mode:%d\r\n", (tWord)mode[i]);
2149:TP2824/TP2802.c **** //                 if( 0x10 != (0x11 & tmp) && HDC == std[i])
2150:TP2824/TP2802.c **** 		      else if((0x10 != (0x11 & tmp) && HDC == std[i]) ||
2151:TP2824/TP2802.c **** 		                 (0x00 == (0x04 & tmp) && 
2152:TP2824/TP2802.c **** 		                 (mode[i] == R720P30 || mode[i] == R720P25 || mode[i] == R720P30V2 || mode[i] == 
2153:TP2824/TP2802.c ****                     {
2154:TP2824/TP2802.c ****                         if(Set_HDA(i))
2155:TP2824/TP2802.c ****                         {
2156:TP2824/TP2802.c ****                             std[i] = HDA;
2157:TP2824/TP2802.c ****                             printf("turn to A ch%02x\r\n", (tWord)i);
2158:TP2824/TP2802.c ****                         }
2159:TP2824/TP2802.c ****                     }
2160:TP2824/TP2802.c **** 
2161:TP2824/TP2802.c ****                 }
2162:TP2824/TP2802.c **** 
2163:TP2824/TP2802.c ****             }
2164:TP2824/TP2802.c ****             else if(3 == count[i])
2165:TP2824/TP2802.c ****             {
2166:TP2824/TP2802.c ****                 if( chip > TP2823 )
2167:TP2824/TP2802.c ****                 {
2168:TP2824/TP2802.c ****                     tmp = tp28xx_byte_read(0x01);
2169:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
2170:TP2824/TP2802.c **** 
2171:TP2824/TP2802.c ****                     if((mode[i] == R1080P30 || mode[i] == R1080P25)&& 0x00 == (0x04 & tmp))
2172:TP2824/TP2802.c ****                         printf("AHD 1080P30/P25  mode:%d\r\n", (tWord)mode[i]);
2173:TP2824/TP2802.c **** 		      else if((mode[i] == R1080P30 || mode[i] == R1080P25) && 0x04 == (0x04 & tmp) && std[i] == T
2174:TP2824/TP2802.c ****                         printf("TVI 1080P30/P25   mode:%d\r\n", (tWord)mode[i]);
2175:TP2824/TP2802.c **** 		      else if((mode[i] == R720P30 || mode[i] == R720P25 || mode[i] == R720P30V2 || mode[i] == R72
2176:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
2177:TP2824/TP2802.c ****                         printf("AHD 720P30/P25/P60/P50   mode:%d\r\n", (tWord)mode[i]);
2178:TP2824/TP2802.c **** 		      else if(mode[i] == NTSC || mode[i] == PAL)
2179:TP2824/TP2802.c ****                              printf("CVBS    mode:%d\r\n", (tWord)mode[i]);
2180:TP2824/TP2802.c **** //		      if( 0x00 != (0x01 & tmp))
2181:TP2824/TP2802.c **** 		      else if( 0x00 != (0x01 & tmp)) 
2182:TP2824/TP2802.c ****                     {
2183:TP2824/TP2802.c ****                       //  Set_VidRes(mode[i]); //chunyu
2184:TP2824/TP2802.c ****                         Set_VidRes(i); //is it right? ryan@20200904
2185:TP2824/TP2802.c ****                         printf("back to T ch%02x\r\n", (tWord)i); //chunyu
2186:TP2824/TP2802.c ****                     }
2187:TP2824/TP2802.c ****                 }
2188:TP2824/TP2802.c ****             }
2189:TP2824/TP2802.c ****             else if(count[i] < 7) //skip first 3 second
2190:TP2824/TP2802.c ****             {
ARM GAS  /tmp/ccSZlabO.s 			page 78


2191:TP2824/TP2802.c ****                 egain[i][3] = egain[i][2];
2192:TP2824/TP2802.c ****                 egain[i][2] = egain[i][1];
2193:TP2824/TP2802.c ****                 egain[i][1] = egain[i][0];
2194:TP2824/TP2802.c **** 
2195:TP2824/TP2802.c ****                 gain = ReadGain();
2196:TP2824/TP2802.c ****                 egain[i][0] = gain;
2197:TP2824/TP2802.c ****             }
2198:TP2824/TP2802.c ****             else if( count[i] < EQ_COUNT)
2199:TP2824/TP2802.c ****             {
2200:TP2824/TP2802.c ****                 egain[i][3] = egain[i][2];
2201:TP2824/TP2802.c ****                 egain[i][2] = egain[i][1];
2202:TP2824/TP2802.c ****                 egain[i][1] = egain[i][0];
2203:TP2824/TP2802.c **** 
2204:TP2824/TP2802.c ****                 gain = ReadGain();
2205:TP2824/TP2802.c ****                 egain[i][0] = gain;
2206:TP2824/TP2802.c **** 
2207:TP2824/TP2802.c ****                 if(abs(egain[i][3] - egain[i][0])< EQ_DIFF && abs(egain[i][2] - egain[i][0])< EQ_DI
2208:TP2824/TP2802.c ****                 {
2209:TP2824/TP2802.c ****                     count[i] = EQ_COUNT-1;
2210:TP2824/TP2802.c ****                 }
2211:TP2824/TP2802.c ****             }
2212:TP2824/TP2802.c ****             else if(EQ_COUNT == count[i])
2213:TP2824/TP2802.c ****             {
2214:TP2824/TP2802.c ****                 gain = ReadGain();
2215:TP2824/TP2802.c ****                 printf("Egain=0x%02x ch%02x,std=%d,mode=0x%02X\r\n", (tWord)gain, (tWord)i, (tWord)
2216:TP2824/TP2802.c **** 
2217:TP2824/TP2802.c ****                 if ((mode[i] == R1080P30 ) || (mode[i] == R1080P25 ))
2218:TP2824/TP2802.c ****                 {
2219:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1920X1080P ;
2220:TP2824/TP2802.c ****                 }
2221:TP2824/TP2802.c ****                 else if ((mode[i] == R720P50 ) || (mode[i] == R720P60 ))
2222:TP2824/TP2802.c ****                 {
2223:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
2224:TP2824/TP2802.c ****                 }
2225:TP2824/TP2802.c ****                 else if ((mode[i] == R720P25 ) || (mode[i] == R720P30 ))
2226:TP2824/TP2802.c ****                 {
2227:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
2228:TP2824/TP2802.c ****                 }
2229:TP2824/TP2802.c ****                 else if ((mode[i] == R720P30V2 ) || (mode[i] == R720P25V2 ))
2230:TP2824/TP2802.c ****                 {
2231:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
2232:TP2824/TP2802.c ****                 }
2233:TP2824/TP2802.c ****                 else if (mode[i] == NTSC )
2234:TP2824/TP2802.c ****                 {
2235:TP2824/TP2802.c ****                     newInRes[i] = _OSD_720X480I60 ;
2236:TP2824/TP2802.c ****                 }
2237:TP2824/TP2802.c ****                 else if (mode[i] == PAL )
2238:TP2824/TP2802.c ****                 {
2239:TP2824/TP2802.c ****                     newInRes[i] = _OSD_720X576I50 ;
2240:TP2824/TP2802.c ****                 }
2241:TP2824/TP2802.c ****                 else
2242:TP2824/TP2802.c ****                 {
2243:TP2824/TP2802.c ****                     newInRes[i] = _OSD_No_Signal ;
2244:TP2824/TP2802.c ****                 }
2245:TP2824/TP2802.c **** 
2246:TP2824/TP2802.c **** 				TP_InputMode=newInRes[i] ;
2247:TP2824/TP2802.c **** 				   if(SelectInputMode==1)
ARM GAS  /tmp/ccSZlabO.s 			page 79


2248:TP2824/TP2802.c **** 					   {
2249:TP2824/TP2802.c **** 					   MCUTimerActiveTimerEvent(SEC(1), _SYSTEM_TIMER_EVENT_VIDEO_RESET);
2250:TP2824/TP2802.c **** 				   //MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);
2251:TP2824/TP2802.c **** 					   }
2252:TP2824/TP2802.c **** 
2253:TP2824/TP2802.c ****                 if (newInRes[i] != gbVXIS_InputMode[i] )
2254:TP2824/TP2802.c ****                 {
2255:TP2824/TP2802.c ****                  //   VS4210_SetInModeOutMode(i,newInRes[i] ,gbVXIS_OuputModeflg )  ;
2256:TP2824/TP2802.c **** 
2257:TP2824/TP2802.c **** /*
2258:TP2824/TP2802.c **** 		//save tp2824 data
2259:TP2824/TP2802.c **** 			if( ReadEEP(EEP_TP2824_STD0+(i*3)+2)==0)
2260:TP2824/TP2802.c **** 			{
2261:TP2824/TP2802.c **** 			 WriteEEP(EEP_TP2824_STD0+(i*3),std[i]);
2262:TP2824/TP2802.c **** 			 WriteEEP(EEP_TP2824_STD0+(i*3)+1,mode[i]);		
2263:TP2824/TP2802.c **** 		    	  WriteEEP(EEP_TP2824_STD0+(i*3)+2,1);
2264:TP2824/TP2802.c **** 			  VideoSave[i]=1;
2265:TP2824/TP2802.c **** 
2266:TP2824/TP2802.c **** 			 printf("\r\n(WriteModeDataToEEPROM ch=%02x)",(WORD)i) ;
2267:TP2824/TP2802.c **** 			}
2268:TP2824/TP2802.c **** */
2269:TP2824/TP2802.c **** 			
2270:TP2824/TP2802.c ****         printf("VS4210_SetInModeOutMode(),i=%d,newInRes=%d,OuputModeflg=%d\r\n",(int)i ,(int)newInR
2271:TP2824/TP2802.c **** 
2272:TP2824/TP2802.c **** //                    tp28xx_byte_write(0xF6,0x00);
2273:TP2824/TP2802.c **** //
2274:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x40);
2275:TP2824/TP2802.c **** //                    printf("0x40=0x%02x\r\n",tmpval ) ;
2276:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x4d);
2277:TP2824/TP2802.c **** //                    printf("0x4D=0x%02x\r\n",tmpval ) ;
2278:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x4E);
2279:TP2824/TP2802.c **** //                    printf("0x4E=0x%02x\r\n",tmpval ) ;
2280:TP2824/TP2802.c **** //
2281:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x50);
2282:TP2824/TP2802.c **** //                    printf("0x50=0x%02x\r\n",tmpval ) ;
2283:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x51);
2284:TP2824/TP2802.c **** //                    printf("0x51=0x%02x\r\n",tmpval ) ;
2285:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x52);
2286:TP2824/TP2802.c **** //                    printf("0x52=0x%02x\r\n",tmpval ) ;
2287:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0x53);
2288:TP2824/TP2802.c **** //                    printf("0x53=0x%02x\r\n",tmpval ) ;
2289:TP2824/TP2802.c **** //
2290:TP2824/TP2802.c **** //
2291:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xF6);
2292:TP2824/TP2802.c **** //                    printf("0xF6=0x%02x\r\n",tmpval ) ;
2293:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xF7);
2294:TP2824/TP2802.c **** //                    printf("0xF7=0x%02x\r\n",tmpval ) ;
2295:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xF8);
2296:TP2824/TP2802.c **** //                    printf("0xF8=0x%02x\r\n",tmpval ) ;
2297:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xF9);
2298:TP2824/TP2802.c **** //                    printf("0xF9=0x%02x\r\n",tmpval ) ;
2299:TP2824/TP2802.c **** //
2300:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xFA);
2301:TP2824/TP2802.c **** //                    printf("0xFA=0x%02x\r\n",tmpval ) ;
2302:TP2824/TP2802.c **** //
2303:TP2824/TP2802.c **** //                    tmpval = tp28xx_byte_read(0xFB);
2304:TP2824/TP2802.c **** //                    printf("0xFB=0x%02x\r\n",tmpval ) ;
ARM GAS  /tmp/ccSZlabO.s 			page 80


2305:TP2824/TP2802.c **** 
2306:TP2824/TP2802.c ****                 }
2307:TP2824/TP2802.c **** 
2308:TP2824/TP2802.c ****                 if( TVI != std[i] )
2309:TP2824/TP2802.c ****                 {
2310:TP2824/TP2802.c ****                     tp28xx_byte_write(0x07, 0x80|(gain>>2));  // manual mode
2311:TP2824/TP2802.c ****                     if (std[i]== HDA )
2312:TP2824/TP2802.c ****                     {
2313:TP2824/TP2802.c ****                         printf("AHD Mode\r\n");
2314:TP2824/TP2802.c ****                     }
2315:TP2824/TP2802.c ****                     else
2316:TP2824/TP2802.c ****                     {
2317:TP2824/TP2802.c ****                         printf("CVI Mode\r\n");
2318:TP2824/TP2802.c ****                     }
2319:TP2824/TP2802.c ****                 }
2320:TP2824/TP2802.c ****                 else //TVI
2321:TP2824/TP2802.c ****                 {
2322:TP2824/TP2802.c ****                     if( TP2833 == chip || TP2834 == chip)
2323:TP2824/TP2802.c ****                     {
2324:TP2824/TP2802.c ****                         if( mode[i] & FLAG_MEGA_MODE )
2325:TP2824/TP2802.c ****                         {
2326:TP2824/TP2802.c ****                             tp28xx_byte_write(0x07, 0x80|(gain/3));  // manual mode
2327:TP2824/TP2802.c ****                         }
2328:TP2824/TP2802.c ****                     }
2329:TP2824/TP2802.c **** 		      if(mode[i] == NTSC) //20200408 cvbs night no burst
2330:TP2824/TP2802.c **** 			  	printf("CVBS NTSC   mode\r\n");
2331:TP2824/TP2802.c **** 		      else if(mode[i] == PAL) //20200408 cvbs night no burst
2332:TP2824/TP2802.c **** 			  	printf("CVBS PAL   mode\r\n");
2333:TP2824/TP2802.c **** 		      else
2334:TP2824/TP2802.c ****                     printf("LINE=%d,TVI Mode\r\n",__LINE__ );
2335:TP2824/TP2802.c ****                     //gRxLoopFlg = 0 ;
2336:TP2824/TP2802.c ****                 }
2337:TP2824/TP2802.c ****             }
2338:TP2824/TP2802.c ****             else if(EQ_COUNT+1 == count[i])
2339:TP2824/TP2802.c ****             {
2340:TP2824/TP2802.c ****                 if( TVI != std[i] )
2341:TP2824/TP2802.c ****                 {
2342:TP2824/TP2802.c ****                     ManualAGC(i);
2343:TP2824/TP2802.c ****                     SetCGain(0x0c);
2344:TP2824/TP2802.c ****                 }
2345:TP2824/TP2802.c ****                 else //TVI
2346:TP2824/TP2802.c ****                 {
2347:TP2824/TP2802.c ****                     if( TP2833 == chip || TP2834 == chip)
2348:TP2824/TP2802.c ****                     {
2349:TP2824/TP2802.c ****                         if( mode[i] & FLAG_MEGA_MODE )
2350:TP2824/TP2802.c ****                         {
2351:TP2824/TP2802.c ****                             SetCGain(0x16);
2352:TP2824/TP2802.c ****                         }
2353:TP2824/TP2802.c ****                     }
2354:TP2824/TP2802.c ****                 }
2355:TP2824/TP2802.c ****             }
2356:TP2824/TP2802.c **** 	     else if(EQ_COUNT+2 == count[i])//cocrx
2357:TP2824/TP2802.c ****             {	
2358:TP2824/TP2802.c ****             		if(state[i] == VIDEO_LOCKED)
2359:TP2824/TP2802.c ****             		{
2360:TP2824/TP2802.c **** 	            		tcByte *ptr_TP2824C;
2361:TP2824/TP2802.c **** 				if( TVI == std[i] )
ARM GAS  /tmp/ccSZlabO.s 			page 81


2362:TP2824/TP2802.c **** 				{
2363:TP2824/TP2802.c **** 					if(mode[i]==NTSC || mode[i]==PAL)
2364:TP2824/TP2802.c **** 					{
2365:TP2824/TP2802.c **** 						ptr_TP2824C=TP2824C_CVBS_PTZ_DataSet;
2366:TP2824/TP2802.c **** 					}
2367:TP2824/TP2802.c **** 					else
2368:TP2824/TP2802.c **** 					{
2369:TP2824/TP2802.c **** 						ptr_TP2824C=TP2824C_TVI_FHD_PTZ_DataSet;
2370:TP2824/TP2802.c **** 					}
2371:TP2824/TP2802.c **** 					
2372:TP2824/TP2802.c **** 					I2CDeviceSet1( ptr_TP2824C );
2373:TP2824/TP2802.c **** 					
2374:TP2824/TP2802.c **** 					if(mode[i] == R1080P30 || mode[i] == R1080P25)
2375:TP2824/TP2802.c **** 					{
2376:TP2824/TP2802.c **** 						tp28xx_byte_write(0xc6, 0x19);
2377:TP2824/TP2802.c **** 					}
2378:TP2824/TP2802.c **** 					
2379:TP2824/TP2802.c **** 					tp28xx_byte_write(0x40, i);
2380:TP2824/TP2802.c **** 					
2381:TP2824/TP2802.c **** 					tp28xx_byte_write(0xbe, 0x80);
2382:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB6);
2383:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB5);
2384:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB4);
2385:TP2824/TP2802.c **** 
2386:TP2824/TP2802.c **** 				
2387:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x00);
2388:TP2824/TP2802.c **** 					delay(1);//5ms
2389:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x83);
2390:TP2824/TP2802.c **** 					
2391:TP2824/TP2802.c **** 					if(mode[i]==R1080P30 || mode[i]==R1080P25)
2392:TP2824/TP2802.c **** 					{
2393:TP2824/TP2802.c **** 						PtzTxChNum=i;
2394:TP2824/TP2802.c **** 						printf("EQdet %d\r\n",  PtzTxChNum);
2395:TP2824/TP2802.c **** 					}
2396:TP2824/TP2802.c **** 					
2397:TP2824/TP2802.c **** 				}
2398:TP2824/TP2802.c **** 
2399:TP2824/TP2802.c **** 				if( HDA == std[i] )
2400:TP2824/TP2802.c **** 				{
2401:TP2824/TP2802.c **** 					#if 1
2402:TP2824/TP2802.c **** 						#if 1
2403:TP2824/TP2802.c **** 						Init_COC_PTZOUT1();
2404:TP2824/TP2802.c **** 						//#else
2405:TP2824/TP2802.c **** 						ptr_TP2824C=TP2824C_AHD_FHD_PTZ_DataSet;
2406:TP2824/TP2802.c **** 						I2CDeviceSet1( ptr_TP2824C );
2407:TP2824/TP2802.c **** 					
2408:TP2824/TP2802.c **** 						tp28xx_byte_write(0x40, i);
2409:TP2824/TP2802.c **** 							tp28xx_byte_write(0x40,0x04);
2410:TP2824/TP2802.c **** 						tp28xx_byte_write(0xbe, 0x80);
2411:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB6);
2412:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB5);
2413:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB4);
2414:TP2824/TP2802.c **** 
2415:TP2824/TP2802.c **** 					
2416:TP2824/TP2802.c **** 						tp28xx_byte_write(0xa7, 0x24);
2417:TP2824/TP2802.c **** 						delay(1);//5ms
2418:TP2824/TP2802.c **** 						tp28xx_byte_write(0xa7, 0xA7);
ARM GAS  /tmp/ccSZlabO.s 			page 82


2419:TP2824/TP2802.c **** 						#endif
2420:TP2824/TP2802.c **** 				
2421:TP2824/TP2802.c **** 					#else
2422:TP2824/TP2802.c **** 
2423:TP2824/TP2802.c **** 					TP2824_PTZ_init();
2424:TP2824/TP2802.c **** 					 TP2824C_RX_init(0, 0);
2425:TP2824/TP2802.c **** 					//TP2824_PTZ_mode(0,0);
2426:TP2824/TP2802.c **** 					TP2824C_PTZ_mode(0,0,0);
2427:TP2824/TP2802.c **** 					
2428:TP2824/TP2802.c **** 					
2429:TP2824/TP2802.c **** 					#endif
2430:TP2824/TP2802.c **** 					
2431:TP2824/TP2802.c **** 					printf("\r\nAHD COC Ready CH=%d\r\n",  PtzTxChNum);
2432:TP2824/TP2802.c **** 				}
2433:TP2824/TP2802.c **** 
2434:TP2824/TP2802.c **** 				if( HDC == std[i] )
2435:TP2824/TP2802.c **** 				{
2436:TP2824/TP2802.c **** 					ptr_TP2824C=TP2824C_CVIHD_PTZ_DataSet;
2437:TP2824/TP2802.c **** 					I2CDeviceSet1( ptr_TP2824C );
2438:TP2824/TP2802.c **** 				
2439:TP2824/TP2802.c **** 					tp28xx_byte_write(0x40, i);
2440:TP2824/TP2802.c **** 					tp28xx_byte_write(0xbe, 0x80);
2441:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB6);
2442:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB5);
2443:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB4);
2444:TP2824/TP2802.c **** 
2445:TP2824/TP2802.c **** 				
2446:TP2824/TP2802.c **** 					tp28xx_byte_read(0xA4);
2447:TP2824/TP2802.c **** 					tp28xx_byte_read(0xA2);
2448:TP2824/TP2802.c **** 					tp28xx_byte_read(0xA3);
2449:TP2824/TP2802.c **** 					
2450:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x00);
2451:TP2824/TP2802.c **** 					delay(1);//5ms
2452:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x83);
2453:TP2824/TP2802.c **** 
2454:TP2824/TP2802.c **** 
2455:TP2824/TP2802.c **** 					
2456:TP2824/TP2802.c **** 				}
2457:TP2824/TP2802.c **** 
2458:TP2824/TP2802.c **** 			#if 0
2459:TP2824/TP2802.c **** 		if((std[i]==TVI)&&(mode[i]!=NTSC) &&( mode[i]!=PAL)&& (state[i]==VIDEO_LOCKED))
2460:TP2824/TP2802.c **** 			   {
2461:TP2824/TP2802.c **** 
2462:TP2824/TP2802.c **** 			/*
2463:TP2824/TP2802.c **** 				   
2464:TP2824/TP2802.c **** 		 	SetCOCCom(_COCOSD_BOX_Sel,i);  
2465:TP2824/TP2802.c **** 	 	 	SetCOCCom(_COCOSD_BOXONLINE,0); 
2466:TP2824/TP2802.c **** 			 Get_2824cIrq();
2467:TP2824/TP2802.c **** 
2468:TP2824/TP2802.c **** 			 msleep(50);
2469:TP2824/TP2802.c **** 			 
2470:TP2824/TP2802.c **** 			 SetCOCCom(_COCOSD_BOX_Channel_Sel,5); 
2471:TP2824/TP2802.c **** 			// COCSelectModeType=5;
2472:TP2824/TP2802.c **** 			 Get_2824cIrq();
2473:TP2824/TP2802.c **** 			msleep(50);
2474:TP2824/TP2802.c **** */		
2475:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccSZlabO.s 			page 83


2476:TP2824/TP2802.c **** 			 BOX_ISSUE=0;
2477:TP2824/TP2802.c **** 
2478:TP2824/TP2802.c **** 			 MCUTimerCancelTimerEvent( _SYSTEM_TIMER_EVENT_TVI_BOX_Set);		 
2479:TP2824/TP2802.c **** 			MCUTimerActiveTimerEvent(SEC(0.5), _SYSTEM_TIMER_EVENT_TVI_BOX_Set);
2480:TP2824/TP2802.c **** 			
2481:TP2824/TP2802.c **** 		
2482:TP2824/TP2802.c **** 			   }
2483:TP2824/TP2802.c **** 			#endif
2484:TP2824/TP2802.c ****      			}
2485:TP2824/TP2802.c ****             }	
2486:TP2824/TP2802.c ****         }
2487:TP2824/TP2802.c ****     }
2488:TP2824/TP2802.c **** }
2489:TP2824/TP2802.c **** #if 0
2490:TP2824/TP2802.c **** void TVI_BOX_Set(void)
2491:TP2824/TP2802.c **** {
2492:TP2824/TP2802.c **** BYTE i;
2493:TP2824/TP2802.c **** 
2494:TP2824/TP2802.c **** 	//TriggerHandler(CheckTrigger());
2495:TP2824/TP2802.c **** 
2496:TP2824/TP2802.c **** 	for(i=0;i<4;i++)
2497:TP2824/TP2802.c **** 	{
2498:TP2824/TP2802.c **** 			
2499:TP2824/TP2802.c **** 					if((std[i]==TVI)&&(mode[i]!=NTSC) &&( mode[i]!=PAL)&& (state[i] == VIDEO_LOCKED))
2500:TP2824/TP2802.c **** 					   {
2501:TP2824/TP2802.c **** 					  
2502:TP2824/TP2802.c **** 				 	SetCOCCom(_COCOSD_BOX_Sel,i);  
2503:TP2824/TP2802.c **** 			 	 	SetCOCCom(_COCOSD_BOXONLINE,0); 
2504:TP2824/TP2802.c **** 					 Get_2824cIrq();
2505:TP2824/TP2802.c **** 								 
2506:TP2824/TP2802.c **** 					 SetCOCCom(_COCOSD_BOX_Channel_Sel,5); 
2507:TP2824/TP2802.c **** 					 COCSelectModeType[SelectModeType]=5;
2508:TP2824/TP2802.c **** 					 Get_2824cIrq();		 
2509:TP2824/TP2802.c **** 					
2510:TP2824/TP2802.c **** 						}
2511:TP2824/TP2802.c **** 		
2512:TP2824/TP2802.c **** 	}
2513:TP2824/TP2802.c **** }
2514:TP2824/TP2802.c **** #endif
2515:TP2824/TP2802.c **** tByte Det_HLock()
2516:TP2824/TP2802.c **** {
 1983              		.loc 1 2516 0
 1984              		.cfi_startproc
 1985              		@ args = 0, pretend = 0, frame = 0
 1986              		@ frame_needed = 0, uses_anonymous_args = 0
 1987 0000 08B5     		push	{r3, lr}
 1988              	.LCFI16:
 1989              		.cfi_def_cfa_offset 8
 1990              		.cfi_offset 3, -8
 1991              		.cfi_offset 14, -4
2517:TP2824/TP2802.c ****     tByte Reg01;
2518:TP2824/TP2802.c ****     tByte HLOCK;
2519:TP2824/TP2802.c **** 
2520:TP2824/TP2802.c ****     Reg01 = tp28xx_byte_read(0x01);
 1992              		.loc 1 2520 0
 1993 0002 0120     		movs	r0, #1
 1994 0004 FFF7FEFF 		bl	tp28xx_byte_read
ARM GAS  /tmp/ccSZlabO.s 			page 84


 1995              	.LVL301:
2521:TP2824/TP2802.c ****     HLOCK = (Reg01>>5)&0x01;
2522:TP2824/TP2802.c **** 
2523:TP2824/TP2802.c ****     if(HLOCK==1)
 1996              		.loc 1 2523 0
 1997 0008 10F0200F 		tst	r0, #32
 1998 000c 01D0     		beq	.L172
2524:TP2824/TP2802.c ****         return TRUE;
 1999              		.loc 1 2524 0
 2000 000e 0120     		movs	r0, #1
 2001              	.LVL302:
 2002 0010 08BD     		pop	{r3, pc}
 2003              	.LVL303:
 2004              	.L172:
2525:TP2824/TP2802.c ****     else
2526:TP2824/TP2802.c ****         return FALSE;
 2005              		.loc 1 2526 0
 2006 0012 0020     		movs	r0, #0
 2007              	.LVL304:
2527:TP2824/TP2802.c **** }
 2008              		.loc 1 2527 0
 2009 0014 08BD     		pop	{r3, pc}
 2010              		.cfi_endproc
 2011              	.LFE83:
 2013 0016 00BF     		.section	.text.Set_ResWithAutoDet,"ax",%progbits
 2014              		.align	2
 2015              		.global	Set_ResWithAutoDet
 2016              		.thumb
 2017              		.thumb_func
 2019              	Set_ResWithAutoDet:
 2020              	.LFB84:
2528:TP2824/TP2802.c **** 
2529:TP2824/TP2802.c **** tByte Set_ResWithAutoDet(tByte ch)
2530:TP2824/TP2802.c **** {
 2021              		.loc 1 2530 0
 2022              		.cfi_startproc
 2023              		@ args = 0, pretend = 0, frame = 0
 2024              		@ frame_needed = 0, uses_anonymous_args = 0
 2025              	.LVL305:
 2026 0000 70B5     		push	{r4, r5, r6, lr}
 2027              	.LCFI17:
 2028              		.cfi_def_cfa_offset 16
 2029              		.cfi_offset 4, -16
 2030              		.cfi_offset 5, -12
 2031              		.cfi_offset 6, -8
 2032              		.cfi_offset 14, -4
 2033 0002 0546     		mov	r5, r0
 2034              	.LVL306:
2531:TP2824/TP2802.c ****     tByte VidRes = R1080P30 ;
2532:TP2824/TP2802.c ****     tByte cnt=5;
2533:TP2824/TP2802.c ****     SetRegPage(ch);
 2035              		.loc 1 2533 0
 2036 0004 FFF7FEFF 		bl	SetRegPage
 2037              	.LVL307:
2532:TP2824/TP2802.c ****     SetRegPage(ch);
 2038              		.loc 1 2532 0
 2039 0008 0522     		movs	r2, #5
ARM GAS  /tmp/ccSZlabO.s 			page 85


2534:TP2824/TP2802.c ****     //	printf("\r\nReg40=%02x, Reg01=%02x",(tWord)tp28xx_byte_read(TVII2CAddress,0x40),(tWord)tp28x
2535:TP2824/TP2802.c ****     while(cnt--)
 2040              		.loc 1 2535 0
 2041 000a 10E0     		b	.L175
 2042              	.LVL308:
 2043              	.L178:
2536:TP2824/TP2802.c ****     {
2537:TP2824/TP2802.c ****         if(!Det_VideoLoss(ch))
 2044              		.loc 1 2537 0
 2045 000c 2846     		mov	r0, r5
 2046 000e FFF7FEFF 		bl	Det_VideoLoss
 2047              	.LVL309:
 2048 0012 58B9     		cbnz	r0, .L176
2538:TP2824/TP2802.c ****         {
2539:TP2824/TP2802.c ****             //for(VidRes=R720P60; VidRes<=R720P25; VidRes++)
2540:TP2824/TP2802.c **** 			//{
2541:TP2824/TP2802.c ****                 Set_VidRes(ch);
 2049              		.loc 1 2541 0
 2050 0014 2846     		mov	r0, r5
 2051 0016 FFF7FEFF 		bl	Set_VidRes
 2052              	.LVL310:
2542:TP2824/TP2802.c ****                 //printf("\r\nVidRes=%02x, Reg01=%02x, Reg03=%02x",(tWord)VidRes,(tWord)tp28xx_byte
2543:TP2824/TP2802.c ****                 if((Det_HLock()== TRUE)&&(Det_VidRes()==VidRes))
 2053              		.loc 1 2543 0
 2054 001a FFF7FEFF 		bl	Det_HLock
 2055              	.LVL311:
 2056 001e 0646     		mov	r6, r0
 2057 0020 0128     		cmp	r0, #1
 2058 0022 03D1     		bne	.L176
 2059              		.loc 1 2543 0 is_stmt 0 discriminator 1
 2060 0024 FFF7FEFF 		bl	Det_VidRes
 2061              	.LVL312:
 2062 0028 0228     		cmp	r0, #2
 2063 002a 08D0     		beq	.L177
 2064              	.L176:
 2065 002c 2246     		mov	r2, r4
 2066              	.LVL313:
 2067              	.L175:
2535:TP2824/TP2802.c ****     {
 2068              		.loc 1 2535 0 is_stmt 1
 2069 002e 531E     		subs	r3, r2, #1
 2070 0030 DCB2     		uxtb	r4, r3
 2071              	.LVL314:
 2072 0032 002A     		cmp	r2, #0
 2073 0034 EAD1     		bne	.L178
2544:TP2824/TP2802.c ****                     return TRUE;
2545:TP2824/TP2802.c **** 			//}
2546:TP2824/TP2802.c ****         }
2547:TP2824/TP2802.c ****     }
2548:TP2824/TP2802.c ****     printf("H/V is not locked\r\n");
 2074              		.loc 1 2548 0
 2075 0036 0348     		ldr	r0, .L180
 2076 0038 FFF7FEFF 		bl	puts
 2077              	.LVL315:
2549:TP2824/TP2802.c ****     return FALSE;
 2078              		.loc 1 2549 0
 2079 003c 0026     		movs	r6, #0
ARM GAS  /tmp/ccSZlabO.s 			page 86


 2080              	.L177:
2550:TP2824/TP2802.c **** }
 2081              		.loc 1 2550 0
 2082 003e 3046     		mov	r0, r6
 2083 0040 70BD     		pop	{r4, r5, r6, pc}
 2084              	.LVL316:
 2085              	.L181:
 2086 0042 00BF     		.align	2
 2087              	.L180:
 2088 0044 14010000 		.word	.LC25
 2089              		.cfi_endproc
 2090              	.LFE84:
 2092              		.section	.text.Scan_Channels,"ax",%progbits
 2093              		.align	2
 2094              		.global	Scan_Channels
 2095              		.thumb
 2096              		.thumb_func
 2098              	Scan_Channels:
 2099              	.LFB85:
2551:TP2824/TP2802.c **** 
2552:TP2824/TP2802.c **** 
2553:TP2824/TP2802.c **** tByte Scan_Channels()
2554:TP2824/TP2802.c **** {
 2100              		.loc 1 2554 0
 2101              		.cfi_startproc
 2102              		@ args = 0, pretend = 0, frame = 0
 2103              		@ frame_needed = 0, uses_anonymous_args = 0
 2104 0000 70B5     		push	{r4, r5, r6, lr}
 2105              	.LCFI18:
 2106              		.cfi_def_cfa_offset 16
 2107              		.cfi_offset 4, -16
 2108              		.cfi_offset 5, -12
 2109              		.cfi_offset 6, -8
 2110              		.cfi_offset 14, -4
 2111              	.LVL317:
2555:TP2824/TP2802.c ****     tByte ch;
2556:TP2824/TP2802.c ****     tByte Det_ch=0;
2557:TP2824/TP2802.c ****     tByte Sel_ch=0xff;
 2112              		.loc 1 2557 0
 2113 0002 FF26     		movs	r6, #255
2556:TP2824/TP2802.c ****     tByte Sel_ch=0xff;
 2114              		.loc 1 2556 0
 2115 0004 0025     		movs	r5, #0
2558:TP2824/TP2802.c **** 
2559:TP2824/TP2802.c ****     for(ch = CH1; ch<=CH4; ch++)
 2116              		.loc 1 2559 0
 2117 0006 2C46     		mov	r4, r5
 2118 0008 08E0     		b	.L183
 2119              	.LVL318:
 2120              	.L185:
2560:TP2824/TP2802.c ****     {
2561:TP2824/TP2802.c ****         if(Set_ResWithAutoDet(ch)&&!Det_ch)
 2121              		.loc 1 2561 0
 2122 000a 2046     		mov	r0, r4
 2123 000c FFF7FEFF 		bl	Set_ResWithAutoDet
 2124              	.LVL319:
 2125 0010 10B1     		cbz	r0, .L184
ARM GAS  /tmp/ccSZlabO.s 			page 87


 2126              		.loc 1 2561 0 is_stmt 0 discriminator 1
 2127 0012 0DB9     		cbnz	r5, .L184
2562:TP2824/TP2802.c ****         {
2563:TP2824/TP2802.c ****             //Sel_VD_Out(ch);
2564:TP2824/TP2802.c ****             Sel_ch = ch;
 2128              		.loc 1 2564 0 is_stmt 1
 2129 0014 2646     		mov	r6, r4
 2130              	.LVL320:
2565:TP2824/TP2802.c ****             Det_ch = 1;
 2131              		.loc 1 2565 0
 2132 0016 0125     		movs	r5, #1
 2133              	.LVL321:
 2134              	.L184:
2559:TP2824/TP2802.c ****     {
 2135              		.loc 1 2559 0 discriminator 2
 2136 0018 0134     		adds	r4, r4, #1
 2137              	.LVL322:
 2138 001a E4B2     		uxtb	r4, r4
 2139              	.LVL323:
 2140              	.L183:
2559:TP2824/TP2802.c ****     {
 2141              		.loc 1 2559 0 is_stmt 0 discriminator 1
 2142 001c 032C     		cmp	r4, #3
 2143 001e F4D9     		bls	.L185
2566:TP2824/TP2802.c ****         }
2567:TP2824/TP2802.c ****     }
2568:TP2824/TP2802.c **** 
2569:TP2824/TP2802.c ****     return Sel_ch;
2570:TP2824/TP2802.c **** }
 2144              		.loc 1 2570 0 is_stmt 1
 2145 0020 3046     		mov	r0, r6
 2146 0022 70BD     		pop	{r4, r5, r6, pc}
 2147              		.cfi_endproc
 2148              	.LFE85:
 2150              		.section	.text.Set_PLL_StartUp,"ax",%progbits
 2151              		.align	2
 2152              		.global	Set_PLL_StartUp
 2153              		.thumb
 2154              		.thumb_func
 2156              	Set_PLL_StartUp:
 2157              	.LFB86:
2571:TP2824/TP2802.c **** 
2572:TP2824/TP2802.c **** void Set_PLL_StartUp()
2573:TP2824/TP2802.c **** {
 2158              		.loc 1 2573 0
 2159              		.cfi_startproc
 2160              		@ args = 0, pretend = 0, frame = 0
 2161              		@ frame_needed = 0, uses_anonymous_args = 0
 2162 0000 10B5     		push	{r4, lr}
 2163              	.LCFI19:
 2164              		.cfi_def_cfa_offset 8
 2165              		.cfi_offset 4, -8
 2166              		.cfi_offset 14, -4
2574:TP2824/TP2802.c ****     tByte PLL_con;
2575:TP2824/TP2802.c ****     PLL_con = tp28xx_byte_read(0x44);
 2167              		.loc 1 2575 0
 2168 0002 4420     		movs	r0, #68
ARM GAS  /tmp/ccSZlabO.s 			page 88


 2169 0004 FFF7FEFF 		bl	tp28xx_byte_read
 2170              	.LVL324:
 2171 0008 0446     		mov	r4, r0
 2172              	.LVL325:
2576:TP2824/TP2802.c ****     tp28xx_byte_write(0x44,(PLL_con|0x40));
 2173              		.loc 1 2576 0
 2174 000a 40F04001 		orr	r1, r0, #64
 2175 000e 4420     		movs	r0, #68
 2176              	.LVL326:
 2177 0010 C9B2     		uxtb	r1, r1
 2178 0012 FFF7FEFF 		bl	tp28xx_byte_write
 2179              	.LVL327:
2577:TP2824/TP2802.c ****     tp28xx_byte_write(0x44,(PLL_con&0xbf));
 2180              		.loc 1 2577 0
 2181 0016 4420     		movs	r0, #68
 2182 0018 04F0BF01 		and	r1, r4, #191
 2183 001c FFF7FEFF 		bl	tp28xx_byte_write
 2184              	.LVL328:
 2185 0020 10BD     		pop	{r4, pc}
 2186              		.cfi_endproc
 2187              	.LFE86:
 2189 0022 00BF     		.section	.text.Init_TP280x_RegSet,"ax",%progbits
 2190              		.align	2
 2191              		.global	Init_TP280x_RegSet
 2192              		.thumb
 2193              		.thumb_func
 2195              	Init_TP280x_RegSet:
 2196              	.LFB87:
2578:TP2824/TP2802.c **** 
2579:TP2824/TP2802.c **** }
2580:TP2824/TP2802.c **** #if 0
2581:TP2824/TP2802.c **** void Boot_Trigger_Function(BYTE ch)
2582:TP2824/TP2802.c **** {
2583:TP2824/TP2802.c **** 	
2584:TP2824/TP2802.c **** 		Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_std,ch);
2585:TP2824/TP2802.c **** 		 Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_output,ch);
2586:TP2824/TP2802.c **** 		 Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_COC,ch); 
2587:TP2824/TP2802.c **** 		// delay(100);//5ms
2588:TP2824/TP2802.c **** 
2589:TP2824/TP2802.c **** 			count[ch]=23;
2590:TP2824/TP2802.c **** 
2591:TP2824/TP2802.c **** 		 //	SetCOCCom(_COCOSD_BOX_Sel,ch);  
2592:TP2824/TP2802.c **** 	 	 //	SetCOCCom(_COCOSD_BOXONLINE,0); 
2593:TP2824/TP2802.c **** 		//	 Get_2824cIrq();
2594:TP2824/TP2802.c **** }
2595:TP2824/TP2802.c **** #endif
2596:TP2824/TP2802.c **** void Init_TP280x_RegSet()
2597:TP2824/TP2802.c **** {
 2197              		.loc 1 2597 0
 2198              		.cfi_startproc
 2199              		@ args = 0, pretend = 0, frame = 0
 2200              		@ frame_needed = 0, uses_anonymous_args = 0
 2201 0000 38B5     		push	{r3, r4, r5, lr}
 2202              	.LCFI20:
 2203              		.cfi_def_cfa_offset 16
 2204              		.cfi_offset 3, -16
 2205              		.cfi_offset 4, -12
ARM GAS  /tmp/ccSZlabO.s 			page 89


 2206              		.cfi_offset 5, -8
 2207              		.cfi_offset 14, -4
2598:TP2824/TP2802.c **** 
2599:TP2824/TP2802.c ****     tcByte *ptr_TP2802;
2600:TP2824/TP2802.c ****     tByte i/*,val*/;
2601:TP2824/TP2802.c **** 
2602:TP2824/TP2802.c ****     TVII2CAddress = 0x88;
 2208              		.loc 1 2602 0
 2209 0002 8822     		movs	r2, #136
 2210 0004 614B     		ldr	r3, .L211
 2211 0006 1A70     		strb	r2, [r3]
 2212              	.LVL329:
2603:TP2824/TP2802.c ****     //TVII2CAddress = 0x8A;
2604:TP2824/TP2802.c ****     //TVII2CAddress = 0x8C;
2605:TP2824/TP2802.c ****     //TVII2CAddress = 0x8E;
2606:TP2824/TP2802.c **** 
2607:TP2824/TP2802.c ****     for(i=0; i<4; i++)
 2213              		.loc 1 2607 0
 2214 0008 0024     		movs	r4, #0
 2215 000a 0AE0     		b	.L191
 2216              	.LVL330:
 2217              	.L193:
2608:TP2824/TP2802.c ****     {
2609:TP2824/TP2802.c ****         if(0x28 == tp28xx_byte_read(0xfe)) break;
 2218              		.loc 1 2609 0
 2219 000c FE20     		movs	r0, #254
 2220 000e FFF7FEFF 		bl	tp28xx_byte_read
 2221              	.LVL331:
 2222 0012 2828     		cmp	r0, #40
 2223 0014 07D0     		beq	.L192
2610:TP2824/TP2802.c ****         TVII2CAddress++;
 2224              		.loc 1 2610 0 discriminator 2
 2225 0016 5D4A     		ldr	r2, .L211
 2226 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
2611:TP2824/TP2802.c ****         TVII2CAddress++;
 2227              		.loc 1 2611 0 discriminator 2
 2228 001a 0233     		adds	r3, r3, #2
 2229 001c 1370     		strb	r3, [r2]
2607:TP2824/TP2802.c ****     {
 2230              		.loc 1 2607 0 discriminator 2
 2231 001e 0134     		adds	r4, r4, #1
 2232              	.LVL332:
 2233 0020 E4B2     		uxtb	r4, r4
 2234              	.LVL333:
 2235              	.L191:
2607:TP2824/TP2802.c ****     {
 2236              		.loc 1 2607 0 is_stmt 0 discriminator 1
 2237 0022 032C     		cmp	r4, #3
 2238 0024 F2D9     		bls	.L193
 2239              	.L192:
2612:TP2824/TP2802.c ****     }
2613:TP2824/TP2802.c **** 
2614:TP2824/TP2802.c ****     chip = tp28xx_byte_read(0xff);
 2240              		.loc 1 2614 0 is_stmt 1
 2241 0026 FF20     		movs	r0, #255
 2242 0028 FFF7FEFF 		bl	tp28xx_byte_read
 2243              	.LVL334:
ARM GAS  /tmp/ccSZlabO.s 			page 90


 2244 002c 584C     		ldr	r4, .L211+4
 2245              	.LVL335:
 2246 002e 2070     		strb	r0, [r4]
2615:TP2824/TP2802.c **** 
2616:TP2824/TP2802.c ****     revision = tp28xx_byte_read(0xfd);
 2247              		.loc 1 2616 0
 2248 0030 FD20     		movs	r0, #253
 2249 0032 FFF7FEFF 		bl	tp28xx_byte_read
 2250              	.LVL336:
2617:TP2824/TP2802.c ****     revision &= 0x07;
 2251              		.loc 1 2617 0
 2252 0036 00F00702 		and	r2, r0, #7
 2253 003a 564B     		ldr	r3, .L211+8
 2254 003c 1A70     		strb	r2, [r3]
2618:TP2824/TP2802.c **** 
2619:TP2824/TP2802.c ****     printf("\r\nchip %02x revision %02x\r\n", (tWord)chip,(tWord)revision);
 2255              		.loc 1 2619 0
 2256 003e 5648     		ldr	r0, .L211+12
 2257 0040 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 2258 0042 FFF7FEFF 		bl	printf
 2259              	.LVL337:
2620:TP2824/TP2802.c ****     flag_CVBS = 0;
 2260              		.loc 1 2620 0
 2261 0046 0023     		movs	r3, #0
 2262 0048 544A     		ldr	r2, .L211+16
 2263 004a 1360     		str	r3, [r2]
2621:TP2824/TP2802.c ****     flag_AUDIO = 0;
 2264              		.loc 1 2621 0
 2265 004c 544A     		ldr	r2, .L211+20
 2266 004e 1360     		str	r3, [r2]
2622:TP2824/TP2802.c ****     flag_MEGA = 0;
 2267              		.loc 1 2622 0
 2268 0050 544A     		ldr	r2, .L211+24
 2269 0052 1360     		str	r3, [r2]
 2270              	.LVL338:
2623:TP2824/TP2802.c **** 	ptr_TP2802 = TP2824C_DataSet; //def  chunyu
2624:TP2824/TP2802.c ****     switch(chip)
 2271              		.loc 1 2624 0
 2272 0054 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2273 0056 023B     		subs	r3, r3, #2
 2274 0058 252B     		cmp	r3, #37
 2275 005a 50D8     		bhi	.L194
 2276 005c DFE803F0 		tbb	[pc, r3]
 2277              	.L196:
 2278 0060 13       		.byte	(.L195-.L196)/2
 2279 0061 4F       		.byte	(.L194-.L196)/2
 2280 0062 13       		.byte	(.L195-.L196)/2
 2281 0063 4F       		.byte	(.L194-.L196)/2
 2282 0064 4F       		.byte	(.L194-.L196)/2
 2283 0065 4F       		.byte	(.L194-.L196)/2
 2284 0066 4F       		.byte	(.L194-.L196)/2
 2285 0067 4F       		.byte	(.L194-.L196)/2
 2286 0068 4F       		.byte	(.L194-.L196)/2
 2287 0069 4F       		.byte	(.L194-.L196)/2
 2288 006a 4F       		.byte	(.L194-.L196)/2
 2289 006b 4F       		.byte	(.L194-.L196)/2
 2290 006c 4F       		.byte	(.L194-.L196)/2
ARM GAS  /tmp/ccSZlabO.s 			page 91


 2291 006d 4F       		.byte	(.L194-.L196)/2
 2292 006e 4F       		.byte	(.L194-.L196)/2
 2293 006f 4F       		.byte	(.L194-.L196)/2
 2294 0070 4F       		.byte	(.L194-.L196)/2
 2295 0071 4F       		.byte	(.L194-.L196)/2
 2296 0072 4F       		.byte	(.L194-.L196)/2
 2297 0073 4F       		.byte	(.L194-.L196)/2
 2298 0074 4F       		.byte	(.L194-.L196)/2
 2299 0075 4F       		.byte	(.L194-.L196)/2
 2300 0076 4F       		.byte	(.L194-.L196)/2
 2301 0077 4F       		.byte	(.L194-.L196)/2
 2302 0078 4F       		.byte	(.L194-.L196)/2
 2303 0079 4F       		.byte	(.L194-.L196)/2
 2304 007a 4F       		.byte	(.L194-.L196)/2
 2305 007b 4F       		.byte	(.L194-.L196)/2
 2306 007c 4F       		.byte	(.L194-.L196)/2
 2307 007d 4F       		.byte	(.L194-.L196)/2
 2308 007e 4F       		.byte	(.L194-.L196)/2
 2309 007f 4F       		.byte	(.L194-.L196)/2
 2310 0080 13       		.byte	(.L195-.L196)/2
 2311 0081 18       		.byte	(.L197-.L196)/2
 2312 0082 26       		.byte	(.L198-.L196)/2
 2313 0083 4F       		.byte	(.L194-.L196)/2
 2314 0084 2D       		.byte	(.L199-.L196)/2
 2315 0085 41       		.byte	(.L200-.L196)/2
 2316              		.p2align 1
 2317              	.L195:
2625:TP2824/TP2802.c ****     {
2626:TP2824/TP2802.c **** 
2627:TP2824/TP2802.c ****     case TP2802C:
2628:TP2824/TP2802.c ****     case TP2804:
2629:TP2824/TP2802.c ****     case TP2822:
2630:TP2824/TP2802.c ****         printf("EOL ID\r\n");
 2318              		.loc 1 2630 0
 2319 0086 4848     		ldr	r0, .L211+28
 2320 0088 FFF7FEFF 		bl	puts
 2321              	.LVL339:
2623:TP2824/TP2802.c **** 	ptr_TP2802 = TP2824C_DataSet; //def  chunyu
 2322              		.loc 1 2623 0
 2323 008c 474C     		ldr	r4, .L211+32
2631:TP2824/TP2802.c ****         break;
 2324              		.loc 1 2631 0
 2325 008e 40E0     		b	.L201
 2326              	.L197:
2632:TP2824/TP2802.c **** 
2633:TP2824/TP2802.c ****     case TP2823:
2634:TP2824/TP2802.c ****         flag_CVBS = 1;
 2327              		.loc 1 2634 0
 2328 0090 0123     		movs	r3, #1
 2329 0092 424A     		ldr	r2, .L211+16
 2330 0094 1360     		str	r3, [r2]
2635:TP2824/TP2802.c ****         flag_AUDIO = 1;
 2331              		.loc 1 2635 0
 2332 0096 424A     		ldr	r2, .L211+20
 2333 0098 1360     		str	r3, [r2]
2636:TP2824/TP2802.c ****         if(0x01 == revision)
 2334              		.loc 1 2636 0
ARM GAS  /tmp/ccSZlabO.s 			page 92


 2335 009a 3E4B     		ldr	r3, .L211+8
 2336 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2337 009e 012B     		cmp	r3, #1
 2338 00a0 32D1     		bne	.L207
2637:TP2824/TP2802.c ****         {
2638:TP2824/TP2802.c ****             chip=TP2833;
 2339              		.loc 1 2638 0
 2340 00a2 2522     		movs	r2, #37
 2341 00a4 3A4B     		ldr	r3, .L211+4
 2342 00a6 1A70     		strb	r2, [r3]
 2343              	.LVL340:
2639:TP2824/TP2802.c ****             ptr_TP2802 = TP2833_DataSet;
 2344              		.loc 1 2639 0
 2345 00a8 414C     		ldr	r4, .L211+36
 2346 00aa 32E0     		b	.L201
 2347              	.LVL341:
 2348              	.L198:
2640:TP2824/TP2802.c ****         }
2641:TP2824/TP2802.c ****         else
2642:TP2824/TP2802.c ****         {
2643:TP2824/TP2802.c ****             ptr_TP2802 = TP2823_DataSet;
2644:TP2824/TP2802.c ****         }
2645:TP2824/TP2802.c ****         break;
2646:TP2824/TP2802.c **** 
2647:TP2824/TP2802.c ****     case TP2834:
2648:TP2824/TP2802.c ****         flag_CVBS = 1;
 2349              		.loc 1 2648 0
 2350 00ac 0123     		movs	r3, #1
 2351 00ae 3B4A     		ldr	r2, .L211+16
 2352 00b0 1360     		str	r3, [r2]
2649:TP2824/TP2802.c ****         flag_AUDIO = 1;
 2353              		.loc 1 2649 0
 2354 00b2 3B4A     		ldr	r2, .L211+20
 2355 00b4 1360     		str	r3, [r2]
 2356              	.LVL342:
2650:TP2824/TP2802.c ****         ptr_TP2802 = TP2834_DataSet;
 2357              		.loc 1 2650 0
 2358 00b6 3F4C     		ldr	r4, .L211+40
2651:TP2824/TP2802.c ****         break;
 2359              		.loc 1 2651 0
 2360 00b8 2BE0     		b	.L201
 2361              	.LVL343:
 2362              	.L199:
2652:TP2824/TP2802.c **** 
2653:TP2824/TP2802.c ****     case TP2853C:
2654:TP2824/TP2802.c ****         flag_CVBS = 1;
 2363              		.loc 1 2654 0
 2364 00ba 0123     		movs	r3, #1
 2365 00bc 374A     		ldr	r2, .L211+16
 2366 00be 1360     		str	r3, [r2]
2655:TP2824/TP2802.c ****         flag_AUDIO = 1;
 2367              		.loc 1 2655 0
 2368 00c0 374A     		ldr	r2, .L211+20
 2369 00c2 1360     		str	r3, [r2]
2656:TP2824/TP2802.c **** 
2657:TP2824/TP2802.c ****         if(0x01 == revision)
 2370              		.loc 1 2657 0
ARM GAS  /tmp/ccSZlabO.s 			page 93


 2371 00c4 334B     		ldr	r3, .L211+8
 2372 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2373 00c8 012B     		cmp	r3, #1
 2374 00ca 04D1     		bne	.L202
2658:TP2824/TP2802.c ****         {
2659:TP2824/TP2802.c ****             chip=TP2826;
 2375              		.loc 1 2659 0
 2376 00cc 2F22     		movs	r2, #47
 2377 00ce 304B     		ldr	r3, .L211+4
 2378 00d0 1A70     		strb	r2, [r3]
 2379              	.LVL344:
2660:TP2824/TP2802.c ****             //flag_MEGA = 1;
2661:TP2824/TP2802.c **** 			flag_MEGA = 0;  //chunyu 
2662:TP2824/TP2802.c ****             ptr_TP2802 = TP2826_DataSet;
 2380              		.loc 1 2662 0
 2381 00d2 394C     		ldr	r4, .L211+44
 2382 00d4 1DE0     		b	.L201
 2383              	.LVL345:
 2384              	.L202:
2663:TP2824/TP2802.c ****         }
2664:TP2824/TP2802.c ****         else if(0x00 == revision)
 2385              		.loc 1 2664 0
 2386 00d6 CBB9     		cbnz	r3, .L208
2665:TP2824/TP2802.c ****         {
2666:TP2824/TP2802.c ****             flag_MEGA = 1;
 2387              		.loc 1 2666 0
 2388 00d8 0122     		movs	r2, #1
 2389 00da 324B     		ldr	r3, .L211+24
 2390 00dc 1A60     		str	r2, [r3]
 2391              	.LVL346:
2667:TP2824/TP2802.c ****             ptr_TP2802 = TP2853C_DataSet;
 2392              		.loc 1 2667 0
 2393 00de 374C     		ldr	r4, .L211+48
 2394 00e0 17E0     		b	.L201
 2395              	.LVL347:
 2396              	.L200:
2668:TP2824/TP2802.c ****         }
2669:TP2824/TP2802.c ****         else
2670:TP2824/TP2802.c ****         {
2671:TP2824/TP2802.c ****             ptr_TP2802 = TP2853C_DataSet;
2672:TP2824/TP2802.c ****         }
2673:TP2824/TP2802.c ****         break;
2674:TP2824/TP2802.c **** 
2675:TP2824/TP2802.c ****     case TP2824C:
2676:TP2824/TP2802.c ****         flag_CVBS = 1;
 2397              		.loc 1 2676 0
 2398 00e2 0123     		movs	r3, #1
 2399 00e4 2D4A     		ldr	r2, .L211+16
 2400 00e6 1360     		str	r3, [r2]
2677:TP2824/TP2802.c ****         flag_AUDIO = 1;
 2401              		.loc 1 2677 0
 2402 00e8 2D4A     		ldr	r2, .L211+20
 2403 00ea 1360     		str	r3, [r2]
2678:TP2824/TP2802.c **** 
2679:TP2824/TP2802.c ****         if(0x04 == revision)
 2404              		.loc 1 2679 0
 2405 00ec 294B     		ldr	r3, .L211+8
ARM GAS  /tmp/ccSZlabO.s 			page 94


 2406 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2407 00f0 042B     		cmp	r3, #4
 2408 00f2 0DD1     		bne	.L209
2680:TP2824/TP2802.c ****         {
2681:TP2824/TP2802.c ****             //flag_MEGA = 1;
2682:TP2824/TP2802.c **** 			flag_MEGA = 0 ; //chunyu
2683:TP2824/TP2802.c ****             ptr_TP2802 = TP2824C_DataSet;
2684:TP2824/TP2802.c ****             printf("TP2824C test\r\n");
 2409              		.loc 1 2684 0
 2410 00f4 3248     		ldr	r0, .L211+52
 2411 00f6 FFF7FEFF 		bl	puts
 2412              	.LVL348:
2683:TP2824/TP2802.c ****             printf("TP2824C test\r\n");
 2413              		.loc 1 2683 0
 2414 00fa 2C4C     		ldr	r4, .L211+32
 2415 00fc 09E0     		b	.L201
 2416              	.L194:
2685:TP2824/TP2802.c ****         }
2686:TP2824/TP2802.c ****         break;
2687:TP2824/TP2802.c **** 
2688:TP2824/TP2802.c ****     default:		
2689:TP2824/TP2802.c ****         printf("unknown ID\r\n");
 2417              		.loc 1 2689 0
 2418 00fe 3148     		ldr	r0, .L211+56
 2419 0100 FFF7FEFF 		bl	puts
 2420              	.LVL349:
2623:TP2824/TP2802.c ****     switch(chip)
 2421              		.loc 1 2623 0
 2422 0104 294C     		ldr	r4, .L211+32
2690:TP2824/TP2802.c ****         break;
 2423              		.loc 1 2690 0
 2424 0106 04E0     		b	.L201
 2425              	.L207:
2643:TP2824/TP2802.c ****         }
 2426              		.loc 1 2643 0
 2427 0108 2F4C     		ldr	r4, .L211+60
 2428 010a 02E0     		b	.L201
 2429              	.L208:
2671:TP2824/TP2802.c ****         }
 2430              		.loc 1 2671 0
 2431 010c 2B4C     		ldr	r4, .L211+48
 2432 010e 00E0     		b	.L201
 2433              	.L209:
2623:TP2824/TP2802.c ****     switch(chip)
 2434              		.loc 1 2623 0
 2435 0110 264C     		ldr	r4, .L211+32
 2436              	.LVL350:
 2437              	.L201:
2691:TP2824/TP2802.c ****     }
2692:TP2824/TP2802.c **** 
2693:TP2824/TP2802.c ****     Set_PLL_StartUp();
 2438              		.loc 1 2693 0
 2439 0112 FFF7FEFF 		bl	Set_PLL_StartUp
 2440              	.LVL351:
2694:TP2824/TP2802.c **** 
2695:TP2824/TP2802.c ****     I2CDeviceSet1( ptr_TP2802 );
 2441              		.loc 1 2695 0
ARM GAS  /tmp/ccSZlabO.s 			page 95


 2442 0116 2046     		mov	r0, r4
 2443 0118 FFF7FEFF 		bl	I2CDeviceSet1
 2444              	.LVL352:
2696:TP2824/TP2802.c **** 
2697:TP2824/TP2802.c ****     if(flag_AUDIO)	I2CDeviceSet1( TP2834_Audio_DataSet );
 2445              		.loc 1 2697 0
 2446 011c 204B     		ldr	r3, .L211+20
 2447 011e 1B68     		ldr	r3, [r3]
 2448 0120 13B1     		cbz	r3, .L203
 2449              		.loc 1 2697 0 is_stmt 0 discriminator 1
 2450 0122 2A48     		ldr	r0, .L211+64
 2451 0124 FFF7FEFF 		bl	I2CDeviceSet1
 2452              	.LVL353:
 2453              	.L203:
2698:TP2824/TP2802.c **** /*
2699:TP2824/TP2802.c ****     mode[CH1]= R1080P25;	//chunyu
2700:TP2824/TP2802.c ****     mode[CH2]= R1080P25;
2701:TP2824/TP2802.c ****     mode[CH3]= R1080P25;
2702:TP2824/TP2802.c ****     mode[CH4]= R1080P25;
2703:TP2824/TP2802.c **** 	
2704:TP2824/TP2802.c **** 
2705:TP2824/TP2802.c **** 	//mode[CH1]= R720P25;	
2706:TP2824/TP2802.c **** 	//mode[CH1]= R1080P25;	
2707:TP2824/TP2802.c ****    Set_VidRes(CH1);
2708:TP2824/TP2802.c **** */
2709:TP2824/TP2802.c **** //    Set_VidRes(CH2);
2710:TP2824/TP2802.c **** //    Set_VidRes(CH3);
2711:TP2824/TP2802.c **** //    Set_VidRes(CH4);
2712:TP2824/TP2802.c **** //	mode[CH3]= NoDet;	//chunyu
2713:TP2824/TP2802.c **** //	Set_VidRes(CH3);	
2714:TP2824/TP2802.c **** //msleep(2000);//ryan@20200622
2715:TP2824/TP2802.c **** 	
2716:TP2824/TP2802.c ****     //CurRes=RES1920X1080;
2717:TP2824/TP2802.c **** 	//CurRes=RES1280X720;
2718:TP2824/TP2802.c **** #if  0
2719:TP2824/TP2802.c **** 
2720:TP2824/TP2802.c **** 	CurRes=RES1920X1080;
2721:TP2824/TP2802.c **** 
2722:TP2824/TP2802.c **** 		val=CheckTrigger();
2723:TP2824/TP2802.c **** 
2724:TP2824/TP2802.c **** 		if(val)
2725:TP2824/TP2802.c **** 		{
2726:TP2824/TP2802.c **** 			TriggerHandler(CheckTrigger());
2727:TP2824/TP2802.c **** 
2728:TP2824/TP2802.c **** 			if((VideoSave[(TriggerStatus-1)] ==_TRUE))
2729:TP2824/TP2802.c **** 			{
2730:TP2824/TP2802.c **** 			Boot_Trigger_Function((TriggerStatus-1));
2731:TP2824/TP2802.c **** 
2732:TP2824/TP2802.c **** 				if(Flisheye_CAM[(TriggerStatus-1)]==TRUE)
2733:TP2824/TP2802.c **** 				{
2734:TP2824/TP2802.c **** 				TriggerMode=0;
2735:TP2824/TP2802.c **** 				TriggerHandler(CheckTrigger());
2736:TP2824/TP2802.c **** 				}
2737:TP2824/TP2802.c **** 			}
2738:TP2824/TP2802.c **** 			// if(PowerFlag==ON)///power on
2739:TP2824/TP2802.c **** 			BackLightON(); 
2740:TP2824/TP2802.c **** 		}
ARM GAS  /tmp/ccSZlabO.s 			page 96


2741:TP2824/TP2802.c **** 
2742:TP2824/TP2802.c **** 
2743:TP2824/TP2802.c ****   	for( i = 0; i < CH_PER_CHIP; i++)
2744:TP2824/TP2802.c ****   {
2745:TP2824/TP2802.c **** 
2746:TP2824/TP2802.c ****   		if(INPUT_VIDEO_CHECK(i)||(TriggerStatus==(i+1)))
2747:TP2824/TP2802.c **** 		{
2748:TP2824/TP2802.c ****         	continue;
2749:TP2824/TP2802.c **** 		}
2750:TP2824/TP2802.c **** 
2751:TP2824/TP2802.c **** 	  
2752:TP2824/TP2802.c **** 	if( VideoSave[i] ==_TRUE)
2753:TP2824/TP2802.c **** 	{
2754:TP2824/TP2802.c **** 	/*
2755:TP2824/TP2802.c **** 	  count[i] =0;
2756:TP2824/TP2802.c **** 	  state[i] =VIDEO_IN;//VIDEO_IN;//VIDEO_IN;//VIDEO_LOCKED;
2757:TP2824/TP2802.c **** //	  std[i] = 0x02;///ReadEEP(EEP_TP2824_STD0+(i*2));
2758:TP2824/TP2802.c **** //	  mode[i] = NTSC;///ReadEEP(EEP_TP2824_STD0+(i*2)+1);
2759:TP2824/TP2802.c **** 	  std[i] = ReadEEP(EEP_TP2824_STD0+(i*3));
2760:TP2824/TP2802.c **** 	  mode[i] = ReadEEP(EEP_TP2824_STD0+(i*3)+1);
2761:TP2824/TP2802.c **** 	  */
2762:TP2824/TP2802.c **** 	  Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_std,i);
2763:TP2824/TP2802.c **** 	 Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_output,i);
2764:TP2824/TP2802.c **** 
2765:TP2824/TP2802.c **** /*
2766:TP2824/TP2802.c **** 	if(std[i]==HDC)
2767:TP2824/TP2802.c **** 		{
2768:TP2824/TP2802.c **** 		Set_HDC(i);
2769:TP2824/TP2802.c **** 		printf("(Set_HDC)");
2770:TP2824/TP2802.c **** 		}
2771:TP2824/TP2802.c **** 	 if(std[i]==HDA)
2772:TP2824/TP2802.c **** 	 	{
2773:TP2824/TP2802.c **** 	 	Set_HDA(i);
2774:TP2824/TP2802.c **** 		printf("(Set_HDA)");
2775:TP2824/TP2802.c **** 	 	}
2776:TP2824/TP2802.c **** */
2777:TP2824/TP2802.c **** 	 // SetRegPage(i);
2778:TP2824/TP2802.c **** 	//  Set_VidRes(i);
2779:TP2824/TP2802.c **** 
2780:TP2824/TP2802.c ****   		}
2781:TP2824/TP2802.c **** 	else
2782:TP2824/TP2802.c **** 		{		
2783:TP2824/TP2802.c **** 		count[i] = 0;
2784:TP2824/TP2802.c **** 		state[i] = VIDEO_UNPLUG;
2785:TP2824/TP2802.c **** 		std[i] = TVI;
2786:TP2824/TP2802.c **** 		mode[i] = NoDet;///R1080P30/*NoDet*/;
2787:TP2824/TP2802.c **** 		//Set_VidRes(i);
2788:TP2824/TP2802.c **** 		// TP28xx_reset_default(chip, i);
2789:TP2824/TP2802.c **** 		}
2790:TP2824/TP2802.c **** 	 // newInRes[i] = _OSD_720X480P60 ;
2791:TP2824/TP2802.c **** 					
2792:TP2824/TP2802.c ****   }
2793:TP2824/TP2802.c **** 
2794:TP2824/TP2802.c ****  for( i = 0; i <CH_PER_CHIP; i++)
2795:TP2824/TP2802.c ****   {
2796:TP2824/TP2802.c **** 
2797:TP2824/TP2802.c ****   		if((INPUT_VIDEO_CHECK(i)==0))
ARM GAS  /tmp/ccSZlabO.s 			page 97


2798:TP2824/TP2802.c **** 		{
2799:TP2824/TP2802.c ****         	continue;
2800:TP2824/TP2802.c **** 		}
2801:TP2824/TP2802.c ****   
2802:TP2824/TP2802.c **** 	if( VideoSave[i] ==_TRUE)
2803:TP2824/TP2802.c **** 	{
2804:TP2824/TP2802.c **** 	/*
2805:TP2824/TP2802.c **** 	  count[i] =0;
2806:TP2824/TP2802.c **** 	  state[i] =VIDEO_IN;//VIDEO_IN;//VIDEO_IN;//VIDEO_LOCKED;
2807:TP2824/TP2802.c **** //	  std[i] = 0x02;///ReadEEP(EEP_TP2824_STD0+(i*2));
2808:TP2824/TP2802.c **** //	  mode[i] = NTSC;///ReadEEP(EEP_TP2824_STD0+(i*2)+1);
2809:TP2824/TP2802.c **** 	  std[i] = ReadEEP(EEP_TP2824_STD0+(i*3));
2810:TP2824/TP2802.c **** 	  mode[i] = ReadEEP(EEP_TP2824_STD0+(i*3)+1);
2811:TP2824/TP2802.c **** 	  */
2812:TP2824/TP2802.c **** 	  Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_std,i);
2813:TP2824/TP2802.c **** 	 Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_output,i);
2814:TP2824/TP2802.c **** /*
2815:TP2824/TP2802.c **** 	if(std[i]==HDC)
2816:TP2824/TP2802.c **** 		{
2817:TP2824/TP2802.c **** 		Set_HDC(i);
2818:TP2824/TP2802.c **** 		printf("(Set_HDC)");
2819:TP2824/TP2802.c **** 		}
2820:TP2824/TP2802.c **** 	 if(std[i]==HDA)
2821:TP2824/TP2802.c **** 	 	{
2822:TP2824/TP2802.c **** 	 	Set_HDA(i);
2823:TP2824/TP2802.c **** 		printf("(Set_HDA)");
2824:TP2824/TP2802.c **** 	 	}
2825:TP2824/TP2802.c **** */
2826:TP2824/TP2802.c **** 	 // SetRegPage(i);
2827:TP2824/TP2802.c **** 	//  Set_VidRes(i);
2828:TP2824/TP2802.c **** 
2829:TP2824/TP2802.c ****   		}
2830:TP2824/TP2802.c **** 	else
2831:TP2824/TP2802.c **** 		{		
2832:TP2824/TP2802.c **** 		count[i] = 0;
2833:TP2824/TP2802.c **** 		state[i] = VIDEO_UNPLUG;
2834:TP2824/TP2802.c **** 		std[i] = TVI;
2835:TP2824/TP2802.c **** 		mode[i] = NoDet;///R1080P30/*NoDet*/;
2836:TP2824/TP2802.c **** 		//Set_VidRes(i);
2837:TP2824/TP2802.c **** 		// TP28xx_reset_default(chip, i);
2838:TP2824/TP2802.c **** 		}
2839:TP2824/TP2802.c **** 	 // newInRes[i] = _OSD_720X480P60 ;
2840:TP2824/TP2802.c ****   }
2841:TP2824/TP2802.c **** /*
2842:TP2824/TP2802.c ****    for( i = 0; i <CH_PER_CHIP; i++)
2843:TP2824/TP2802.c ****   {
2844:TP2824/TP2802.c **** 	if( VideoSave[i] ==_TRUE)
2845:TP2824/TP2802.c **** 	{
2846:TP2824/TP2802.c **** 	Init_TP280x_CHx_RegSet(Tp2802_Boot_Set_output,i);
2847:TP2824/TP2802.c **** 	}
2848:TP2824/TP2802.c **** 
2849:TP2824/TP2802.c ****    }
2850:TP2824/TP2802.c ****    */
2851:TP2824/TP2802.c ****  
2852:TP2824/TP2802.c **** 
2853:TP2824/TP2802.c **** #else
2854:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccSZlabO.s 			page 98


2855:TP2824/TP2802.c **** 		mode[CH1]= R1080P25;	//chunyu
 2454              		.loc 1 2855 0 is_stmt 1
 2455 0128 294B     		ldr	r3, .L211+68
 2456 012a 0322     		movs	r2, #3
 2457 012c 1A70     		strb	r2, [r3]
2856:TP2824/TP2802.c **** 		mode[CH2]= R1080P25;
 2458              		.loc 1 2856 0
 2459 012e 5A70     		strb	r2, [r3, #1]
2857:TP2824/TP2802.c **** 		mode[CH3]= R1080P25;
 2460              		.loc 1 2857 0
 2461 0130 9A70     		strb	r2, [r3, #2]
2858:TP2824/TP2802.c **** 		mode[CH4]= R1080P25;
 2462              		.loc 1 2858 0
 2463 0132 DA70     		strb	r2, [r3, #3]
2859:TP2824/TP2802.c **** 		
2860:TP2824/TP2802.c **** 	
2861:TP2824/TP2802.c **** 		//mode[CH1]= R720P25;	
2862:TP2824/TP2802.c **** 		//mode[CH1]= R1080P25;	
2863:TP2824/TP2802.c **** 	  tp28xx_byte_write(0x40,0x04);
 2464              		.loc 1 2863 0
 2465 0134 4020     		movs	r0, #64
 2466 0136 0421     		movs	r1, #4
 2467 0138 FFF7FEFF 		bl	tp28xx_byte_write
 2468              	.LVL354:
2864:TP2824/TP2802.c **** 	   Set_VidRes(CH1);
 2469              		.loc 1 2864 0
 2470 013c 0020     		movs	r0, #0
 2471 013e FFF7FEFF 		bl	Set_VidRes
 2472              	.LVL355:
2865:TP2824/TP2802.c **** //		  Set_VidRes(CH2);
2866:TP2824/TP2802.c **** //		  Set_VidRes(CH3);
2867:TP2824/TP2802.c **** //		  Set_VidRes(CH4);
2868:TP2824/TP2802.c **** 		
2869:TP2824/TP2802.c **** 		//msleep(2000);//ryan@20200622
2870:TP2824/TP2802.c **** 		
2871:TP2824/TP2802.c **** 		CurRes=RES1920X1080;
 2473              		.loc 1 2871 0
 2474 0142 0122     		movs	r2, #1
 2475 0144 234B     		ldr	r3, .L211+72
 2476 0146 1A70     		strb	r2, [r3]
 2477              	.LVL356:
2872:TP2824/TP2802.c **** 		//CurRes=RES1280X720;
2873:TP2824/TP2802.c **** 
2874:TP2824/TP2802.c **** 
2875:TP2824/TP2802.c ****     for( i = 0; i < CH_PER_CHIP; i++)
 2478              		.loc 1 2875 0
 2479 0148 0024     		movs	r4, #0
 2480              	.LVL357:
 2481 014a 1BE0     		b	.L204
 2482              	.LVL358:
 2483              	.L206:
2876:TP2824/TP2802.c ****     {
2877:TP2824/TP2802.c ****         count[i] = 0;
 2484              		.loc 1 2877 0
 2485 014c 0023     		movs	r3, #0
 2486 014e 224A     		ldr	r2, .L211+76
 2487 0150 1355     		strb	r3, [r2, r4]
ARM GAS  /tmp/ccSZlabO.s 			page 99


2878:TP2824/TP2802.c ****         state[i] = VIDEO_UNPLUG;
 2488              		.loc 1 2878 0
 2489 0152 224A     		ldr	r2, .L211+80
 2490 0154 1355     		strb	r3, [r2, r4]
2879:TP2824/TP2802.c ****         std[i] = TVI;
 2491              		.loc 1 2879 0
 2492 0156 224A     		ldr	r2, .L211+84
 2493 0158 1355     		strb	r3, [r2, r4]
2880:TP2824/TP2802.c ****         mode[i] = NoDet;
 2494              		.loc 1 2880 0
 2495 015a 0725     		movs	r5, #7
 2496 015c 1C4B     		ldr	r3, .L211+68
 2497 015e 1D55     		strb	r5, [r3, r4]
2881:TP2824/TP2802.c **** 
2882:TP2824/TP2802.c **** 
2883:TP2824/TP2802.c **** 	VS4210_Rx_NoSignal(1/*i*/) ; //chunyu
 2498              		.loc 1 2883 0
 2499 0160 0120     		movs	r0, #1
 2500 0162 FFF7FEFF 		bl	VS4210_Rx_NoSignal
 2501              	.LVL359:
2884:TP2824/TP2802.c **** 	TP_InputMode=7;
 2502              		.loc 1 2884 0
 2503 0166 1F4B     		ldr	r3, .L211+88
 2504 0168 1D70     		strb	r5, [r3]
2885:TP2824/TP2802.c **** 	newInRes[0] = _OSD_No_Signal; 
 2505              		.loc 1 2885 0
 2506 016a 1422     		movs	r2, #20
 2507 016c 1E4B     		ldr	r3, .L211+92
 2508 016e 1A70     		strb	r2, [r3]
2886:TP2824/TP2802.c **** 			
2887:TP2824/TP2802.c **** 	if(SelectInputMode==_AHD_Input)
 2509              		.loc 1 2887 0
 2510 0170 1E4B     		ldr	r3, .L211+96
 2511 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2512 0174 012B     		cmp	r3, #1
 2513 0176 03D1     		bne	.L205
2888:TP2824/TP2802.c **** 	Set_Video_Loss_OSD(1,ON);	
 2514              		.loc 1 2888 0
 2515 0178 0120     		movs	r0, #1
 2516 017a 0146     		mov	r1, r0
 2517 017c FFF7FEFF 		bl	Set_Video_Loss_OSD
 2518              	.LVL360:
 2519              	.L205:
2875:TP2824/TP2802.c ****     {
 2520              		.loc 1 2875 0 discriminator 2
 2521 0180 0134     		adds	r4, r4, #1
 2522              	.LVL361:
 2523 0182 E4B2     		uxtb	r4, r4
 2524              	.LVL362:
 2525              	.L204:
2875:TP2824/TP2802.c ****     {
 2526              		.loc 1 2875 0 is_stmt 0 discriminator 1
 2527 0184 002C     		cmp	r4, #0
 2528 0186 E1D0     		beq	.L206
2889:TP2824/TP2802.c ****     }
2890:TP2824/TP2802.c **** 
2891:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccSZlabO.s 			page 100


2892:TP2824/TP2802.c **** 	#endif
2893:TP2824/TP2802.c **** }
 2529              		.loc 1 2893 0 is_stmt 1
 2530 0188 38BD     		pop	{r3, r4, r5, pc}
 2531              	.LVL363:
 2532              	.L212:
 2533 018a 00BF     		.align	2
 2534              	.L211:
 2535 018c 00000000 		.word	TVII2CAddress
 2536 0190 00000000 		.word	chip
 2537 0194 00000000 		.word	revision
 2538 0198 28010000 		.word	.LC26
 2539 019c 00000000 		.word	flag_CVBS
 2540 01a0 00000000 		.word	flag_AUDIO
 2541 01a4 00000000 		.word	flag_MEGA
 2542 01a8 44010000 		.word	.LC27
 2543 01ac 00000000 		.word	.LANCHOR15
 2544 01b0 00000000 		.word	.LANCHOR19
 2545 01b4 00000000 		.word	.LANCHOR17
 2546 01b8 00000000 		.word	.LANCHOR20
 2547 01bc 00000000 		.word	.LANCHOR18
 2548 01c0 4C010000 		.word	.LC28
 2549 01c4 5C010000 		.word	.LC29
 2550 01c8 00000000 		.word	.LANCHOR16
 2551 01cc 00000000 		.word	.LANCHOR21
 2552 01d0 00000000 		.word	mode
 2553 01d4 00000000 		.word	CurRes
 2554 01d8 00000000 		.word	count
 2555 01dc 00000000 		.word	state
 2556 01e0 00000000 		.word	std
 2557 01e4 00000000 		.word	.LANCHOR22
 2558 01e8 00000000 		.word	.LANCHOR23
 2559 01ec 00000000 		.word	SelectInputMode
 2560              		.cfi_endproc
 2561              	.LFE87:
 2563              		.section	.text.ConvertData,"ax",%progbits
 2564              		.align	2
 2565              		.global	ConvertData
 2566              		.thumb
 2567              		.thumb_func
 2569              	ConvertData:
 2570              	.LFB88:
2894:TP2824/TP2802.c **** #if 0
2895:TP2824/TP2802.c **** void Init_TP280x_CHx_RegSet(BYTE Action,BYTE index)
2896:TP2824/TP2802.c **** {
2897:TP2824/TP2802.c **** 	
2898:TP2824/TP2802.c **** 		tByte /*cvstd,status,*/i=index;
2899:TP2824/TP2802.c **** 		 tByte gain, tmp, /*fmt,*/ tmpab;
2900:TP2824/TP2802.c **** 
2901:TP2824/TP2802.c **** 		  count[i] =20;
2902:TP2824/TP2802.c **** 		  state[i] =VIDEO_LOCKED;//VIDEO_IN;//VIDEO_IN;//VIDEO_LOCKED;
2903:TP2824/TP2802.c **** 	//	  std[i] = 0x02;///ReadEEP(EEP_TP2824_STD0+(i*2));
2904:TP2824/TP2802.c **** 	//	  mode[i] = NTSC;///ReadEEP(EEP_TP2824_STD0+(i*2)+1);
2905:TP2824/TP2802.c **** 		  std[i] = ReadEEP(EEP_TP2824_STD0+(i*3));
2906:TP2824/TP2802.c **** 		  mode[i] = ReadEEP(EEP_TP2824_STD0+(i*3)+1);
2907:TP2824/TP2802.c **** 
2908:TP2824/TP2802.c **** 		printf("Init_TP280x_CHx_RegSet in ch%02x \r\n", (tWord)i);
ARM GAS  /tmp/ccSZlabO.s 			page 101


2909:TP2824/TP2802.c **** 		SetRegPage(i);
2910:TP2824/TP2802.c **** 
2911:TP2824/TP2802.c **** 		//Set_VidRes(i);      
2912:TP2824/TP2802.c **** 
2913:TP2824/TP2802.c **** 		//msleep(200) ;
2914:TP2824/TP2802.c **** switch(Action)
2915:TP2824/TP2802.c **** {
2916:TP2824/TP2802.c **** case Tp2802_Boot_Set_std:
2917:TP2824/TP2802.c **** 	if(std[i] ==TVI)
2918:TP2824/TP2802.c **** 	{
2919:TP2824/TP2802.c **** 					Set_VidRes(i); 
2920:TP2824/TP2802.c **** 					//if((mode[i]==NTSC)||(mode[i]==PAL))
2921:TP2824/TP2802.c **** 					//msleep(300) ;
2922:TP2824/TP2802.c **** 					//std[i] = TVI;
2923:TP2824/TP2802.c **** 					CurCH = i;
2924:TP2824/TP2802.c **** 					if( (R720P30V2 == mode[i]) || (R720P25V2 == mode[i]) )
2925:TP2824/TP2802.c **** 					{
2926:TP2824/TP2802.c **** 						if( 0x00 == (0x08 & tp28xx_byte_read(0x03)))
2927:TP2824/TP2802.c **** 						{
2928:TP2824/TP2802.c **** 							mode[i] &= 0xf7;
2929:TP2824/TP2802.c **** 							Set_VidRes(i);
2930:TP2824/TP2802.c **** 							printf("(A)");
2931:TP2824/TP2802.c **** 							//printf("TVI_Set_VidRes\r\n");
2932:TP2824/TP2802.c **** 						}
2933:TP2824/TP2802.c **** 					}
2934:TP2824/TP2802.c **** 	
2935:TP2824/TP2802.c **** 					//tp28xx_byte_write(0xf6  , REG_F6[i]);
2936:TP2824/TP2802.c **** 					tp28xx_byte_write(0xf6 +i  , REG_F6[i]);  //chunyu
2937:TP2824/TP2802.c **** 	
2938:TP2824/TP2802.c **** #if(OUTPUT == Bits16out)
2939:TP2824/TP2802.c **** 					if( TP2826 == chip )
2940:TP2824/TP2802.c **** 					{
2941:TP2824/TP2802.c **** 						tp28xx_byte_write(0xf8, REG_F7[i]);
2942:TP2824/TP2802.c **** 						tp28xx_byte_write(0xfa, REG_FA[i]);
2943:TP2824/TP2802.c **** 						tp28xx_byte_write(0xfb, REG_FA[i]);
2944:TP2824/TP2802.c **** 					}
2945:TP2824/TP2802.c **** 					else
2946:TP2824/TP2802.c **** 					{					 
2947:TP2824/TP2802.c **** 						tp28xx_byte_write(0xf7, REG_F7[i]);
2948:TP2824/TP2802.c **** 						tp28xx_byte_write(0xfa, REG_FA[i]);
2949:TP2824/TP2802.c **** 						//printf("set output ch%02x \r\n", (tWord)CH[i]);
2950:TP2824/TP2802.c **** 					}
2951:TP2824/TP2802.c **** #else //BT656																				
2952:TP2824/TP2802.c **** 	
2953:TP2824/TP2802.c **** 					tmp=tp28xx_byte_read(0xf5);
2954:TP2824/TP2802.c **** 					if( tmp &= SYS_MODE[i])
2955:TP2824/TP2802.c **** 					{
2956:TP2824/TP2802.c **** 						printf("//75.25M output\r\n") ;
2957:TP2824/TP2802.c **** 	
2958:TP2824/TP2802.c **** 						if (i == 0)
2959:TP2824/TP2802.c **** 						{
2960:TP2824/TP2802.c **** 							tmpab = tp28xx_byte_read(0xfa) ;
2961:TP2824/TP2802.c **** 							tmpab = (tmpab & 0xF0) | 0x0A ;
2962:TP2824/TP2802.c **** 							tp28xx_byte_write(0xfa, tmpab);
2963:TP2824/TP2802.c **** 						}
2964:TP2824/TP2802.c **** 						else if (i == 1)
2965:TP2824/TP2802.c **** 						{
ARM GAS  /tmp/ccSZlabO.s 			page 102


2966:TP2824/TP2802.c **** 							tmpab = tp28xx_byte_read(0xfa) ;
2967:TP2824/TP2802.c **** 							tmpab = (tmpab & 0x0F) | 0xA0 ;
2968:TP2824/TP2802.c **** 							tp28xx_byte_write(0xfa, tmpab);
2969:TP2824/TP2802.c **** 						}
2970:TP2824/TP2802.c **** 	
2971:TP2824/TP2802.c **** 						if (i == 2)
2972:TP2824/TP2802.c **** 						{
2973:TP2824/TP2802.c **** 							tmpab = tp28xx_byte_read(0xfb) ;
2974:TP2824/TP2802.c **** 							tmpab = (tmpab & 0xF0) | 0x0A ;
2975:TP2824/TP2802.c **** 							tp28xx_byte_write(0xfb, tmpab);
2976:TP2824/TP2802.c **** 						}
2977:TP2824/TP2802.c **** 						else if (i == 3)
2978:TP2824/TP2802.c **** 						{
2979:TP2824/TP2802.c **** 							tmpab = tp28xx_byte_read(0xfb) ;
2980:TP2824/TP2802.c **** 							tmpab = (tmpab & 0x0F) | 0xA0 ;
2981:TP2824/TP2802.c **** 							tp28xx_byte_write(0xfb, tmpab);
2982:TP2824/TP2802.c **** 						}
2983:TP2824/TP2802.c **** 					}
2984:TP2824/TP2802.c **** 					else
2985:TP2824/TP2802.c **** 					{
2986:TP2824/TP2802.c **** 						extern tByte half_scaler;
2987:TP2824/TP2802.c **** 						if(half_scaler) //down scaler output
2988:TP2824/TP2802.c **** 						{
2989:TP2824/TP2802.c **** 							tmp=tp28xx_byte_read(0x35);
2990:TP2824/TP2802.c **** 							tmp |= 0x40;
2991:TP2824/TP2802.c **** 							tp28xx_byte_write(0x35, tmp);						 
2992:TP2824/TP2802.c **** 	
2993:TP2824/TP2802.c **** 							if (i == 0)
2994:TP2824/TP2802.c **** 							{
2995:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfa) ;
2996:TP2824/TP2802.c **** 								tmpab = (tmpab & 0xF0) | 0x0A ;
2997:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfa, tmpab);
2998:TP2824/TP2802.c **** 							}
2999:TP2824/TP2802.c **** 							else if (i == 1)
3000:TP2824/TP2802.c **** 							{
3001:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfa) ;
3002:TP2824/TP2802.c **** 								tmpab = (tmpab & 0x0F) | 0xA0 ;
3003:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfa, tmpab);
3004:TP2824/TP2802.c **** 							}
3005:TP2824/TP2802.c **** 	
3006:TP2824/TP2802.c **** 	
3007:TP2824/TP2802.c **** 							if (i == 2)
3008:TP2824/TP2802.c **** 							{
3009:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfb) ;
3010:TP2824/TP2802.c **** 								tmpab = (tmpab & 0xF0) | 0x0A ;
3011:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfb, tmpab);
3012:TP2824/TP2802.c **** 							}
3013:TP2824/TP2802.c **** 							else if (i == 3)
3014:TP2824/TP2802.c **** 							{
3015:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfb) ;
3016:TP2824/TP2802.c **** 								tmpab = (tmpab & 0x0F) | 0xA0 ;
3017:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfb, tmpab);
3018:TP2824/TP2802.c **** 							}
3019:TP2824/TP2802.c **** 	
3020:TP2824/TP2802.c **** 						}
3021:TP2824/TP2802.c **** 						else
3022:TP2824/TP2802.c **** 						{
ARM GAS  /tmp/ccSZlabO.s 			page 103


3023:TP2824/TP2802.c **** 							tmp=tp28xx_byte_read(0x35);
3024:TP2824/TP2802.c **** 							tmp &= 0xbf;
3025:TP2824/TP2802.c **** 							tp28xx_byte_write(0x35, tmp);
3026:TP2824/TP2802.c **** 	
3027:TP2824/TP2802.c **** 	
3028:TP2824/TP2802.c **** 							if (i == 0)
3029:TP2824/TP2802.c **** 							{
3030:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfa) ;
3031:TP2824/TP2802.c **** 								tmpab = (tmpab & 0xF0) | 0x08 ;
3032:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfa, tmpab);
3033:TP2824/TP2802.c **** 							}
3034:TP2824/TP2802.c **** 							else if (i == 1)
3035:TP2824/TP2802.c **** 							{
3036:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfa) ;
3037:TP2824/TP2802.c **** 								tmpab = (tmpab & 0x0F) | 0x80 ;
3038:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfa, tmpab);
3039:TP2824/TP2802.c **** 							}
3040:TP2824/TP2802.c **** 	
3041:TP2824/TP2802.c **** 	
3042:TP2824/TP2802.c **** 							if (i == 2)
3043:TP2824/TP2802.c **** 							{
3044:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfb) ;
3045:TP2824/TP2802.c **** 								tmpab = (tmpab & 0xF0) | 0x08 ;
3046:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfb, tmpab);
3047:TP2824/TP2802.c **** 							}
3048:TP2824/TP2802.c **** 							else if (i == 3)
3049:TP2824/TP2802.c **** 							{
3050:TP2824/TP2802.c **** 								tmpab = tp28xx_byte_read(0xfb) ;
3051:TP2824/TP2802.c **** 								tmpab = (tmpab & 0x0F) | 0x80 ;
3052:TP2824/TP2802.c **** 								tp28xx_byte_write(0xfb, tmpab);
3053:TP2824/TP2802.c **** 							}
3054:TP2824/TP2802.c **** 						}
3055:TP2824/TP2802.c **** 					}
3056:TP2824/TP2802.c **** #endif
3057:TP2824/TP2802.c **** 				
3058:TP2824/TP2802.c **** 
3059:TP2824/TP2802.c **** 					if( CurRes != ManVidResRx)
3060:TP2824/TP2802.c **** 					{
3061:TP2824/TP2802.c **** 						CurRes = ManVidResRx;
3062:TP2824/TP2802.c **** 						//CreateMDIN340VideoInstance();  //chunyu
3063:TP2824/TP2802.c **** 						printf("ManVidResRx=0x%02x\r\n",ManVidResRx ) ;
3064:TP2824/TP2802.c **** 					}
3065:TP2824/TP2802.c **** 			}
3066:TP2824/TP2802.c **** 	else if(std[i] ==HDC)
3067:TP2824/TP2802.c **** 		{
3068:TP2824/TP2802.c **** 		Set_HDC(i);
3069:TP2824/TP2802.c **** 		printf("(Set_HDC)");
3070:TP2824/TP2802.c **** 		}
3071:TP2824/TP2802.c **** 	else if(std[i] ==HDA)
3072:TP2824/TP2802.c **** 		{
3073:TP2824/TP2802.c **** 		Set_HDA(i);
3074:TP2824/TP2802.c **** 		printf("(Set_HDA)");
3075:TP2824/TP2802.c **** 		}
3076:TP2824/TP2802.c **** 		break;
3077:TP2824/TP2802.c **** case Tp2802_Boot_Set_output:
3078:TP2824/TP2802.c **** //{
3079:TP2824/TP2802.c ****                 gain = ReadGain();
ARM GAS  /tmp/ccSZlabO.s 			page 104


3080:TP2824/TP2802.c ****                 printf("Egain=0x%02x ch%02x,std=%d,mode=0x%02X\r\n", (tWord)gain, (tWord)i, (tWord)
3081:TP2824/TP2802.c **** 
3082:TP2824/TP2802.c ****                 if ((mode[i] == R1080P30 ) || (mode[i] == R1080P25 ))
3083:TP2824/TP2802.c ****                 {
3084:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1920X1080P ;
3085:TP2824/TP2802.c ****                 }
3086:TP2824/TP2802.c ****                 else if ((mode[i] == R720P50 ) || (mode[i] == R720P60 ))
3087:TP2824/TP2802.c ****                 {
3088:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
3089:TP2824/TP2802.c ****                 }
3090:TP2824/TP2802.c ****                 else if ((mode[i] == R720P25 ) || (mode[i] == R720P30 ))
3091:TP2824/TP2802.c ****                 {
3092:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
3093:TP2824/TP2802.c ****                 }
3094:TP2824/TP2802.c ****                 else if ((mode[i] == R720P30V2 ) || (mode[i] == R720P25V2 ))
3095:TP2824/TP2802.c ****                 {
3096:TP2824/TP2802.c ****                     newInRes[i] = _OSD_1280X720P ;
3097:TP2824/TP2802.c ****                 }
3098:TP2824/TP2802.c ****                 else if (mode[i] == NTSC )
3099:TP2824/TP2802.c ****                 {
3100:TP2824/TP2802.c ****                     newInRes[i] = _OSD_720X480I60 ;
3101:TP2824/TP2802.c ****                 }
3102:TP2824/TP2802.c ****                 else if (mode[i] == PAL )
3103:TP2824/TP2802.c ****                 {
3104:TP2824/TP2802.c ****                     newInRes[i] = _OSD_720X576I50 ;
3105:TP2824/TP2802.c ****                 }
3106:TP2824/TP2802.c ****                 else
3107:TP2824/TP2802.c ****                 {
3108:TP2824/TP2802.c ****                     newInRes[i] = _OSD_No_Signal ;
3109:TP2824/TP2802.c ****                 }
3110:TP2824/TP2802.c **** 
3111:TP2824/TP2802.c ****               //  if (newInRes[i] != gbVXIS_InputMode[i] )
3112:TP2824/TP2802.c ****                 {
3113:TP2824/TP2802.c ****                     VS4210_SetInModeOutMode(i,newInRes[i] ,gbVXIS_OuputModeflg )  ;
3114:TP2824/TP2802.c **** 
3115:TP2824/TP2802.c **** 		//save tp2824 data
3116:TP2824/TP2802.c **** 		/*
3117:TP2824/TP2802.c **** 			if( ReadEEP(EEP_TP2824_STD0+(i*3)+2)==0)
3118:TP2824/TP2802.c **** 			{
3119:TP2824/TP2802.c **** 			 WriteEEP(EEP_TP2824_STD0+(i*3),std[i]);
3120:TP2824/TP2802.c **** 			 WriteEEP(EEP_TP2824_STD0+(i*3)+1,mode[i]);		
3121:TP2824/TP2802.c **** 		    	  WriteEEP(EEP_TP2824_STD0+(i*3)+2,1);
3122:TP2824/TP2802.c **** 			  VideoSave[i]=1;
3123:TP2824/TP2802.c **** 
3124:TP2824/TP2802.c **** 			 printf("\r\n(WriteModeDataToEEPROM ch=%02x)",(WORD)i) ;
3125:TP2824/TP2802.c **** 			}
3126:TP2824/TP2802.c **** 			*/
3127:TP2824/TP2802.c **** 	 
3128:TP2824/TP2802.c ****                 }
3129:TP2824/TP2802.c **** 
3130:TP2824/TP2802.c ****                 if( TVI != std[i] )
3131:TP2824/TP2802.c ****                 {
3132:TP2824/TP2802.c ****                     tp28xx_byte_write(0x07, 0x80|(gain>>2));  // manual mode
3133:TP2824/TP2802.c ****                     if (std[i]== HDA )
3134:TP2824/TP2802.c ****                     {
3135:TP2824/TP2802.c ****                         printf("AHD Mode\r\n");
3136:TP2824/TP2802.c ****                     }
ARM GAS  /tmp/ccSZlabO.s 			page 105


3137:TP2824/TP2802.c ****                     else
3138:TP2824/TP2802.c ****                     {
3139:TP2824/TP2802.c ****                         printf("CVI Mode\r\n");
3140:TP2824/TP2802.c ****                     }
3141:TP2824/TP2802.c ****                 }
3142:TP2824/TP2802.c ****                 else //TVI
3143:TP2824/TP2802.c ****                 {
3144:TP2824/TP2802.c ****                     if( TP2833 == chip || TP2834 == chip)
3145:TP2824/TP2802.c ****                     {
3146:TP2824/TP2802.c ****                         if( mode[i] & FLAG_MEGA_MODE )
3147:TP2824/TP2802.c ****                         {
3148:TP2824/TP2802.c ****                             tp28xx_byte_write(0x07, 0x80|(gain/3));  // manual mode
3149:TP2824/TP2802.c ****                         }
3150:TP2824/TP2802.c ****                     }
3151:TP2824/TP2802.c **** 		      if(mode[i] == NTSC) //20200408 cvbs night no burst
3152:TP2824/TP2802.c **** 			  	printf("CVBS NTSC   mode\r\n");
3153:TP2824/TP2802.c **** 		      else if(mode[i] == PAL) //20200408 cvbs night no burst
3154:TP2824/TP2802.c **** 			  	printf("CVBS PAL   mode\r\n");
3155:TP2824/TP2802.c **** 		      else
3156:TP2824/TP2802.c ****                     printf("LINE=%d,TVI Mode\r\n",__LINE__ );
3157:TP2824/TP2802.c ****                     //gRxLoopFlg = 0 ;
3158:TP2824/TP2802.c ****                 }
3159:TP2824/TP2802.c ****            // }
3160:TP2824/TP2802.c ****  break;
3161:TP2824/TP2802.c **** 		   case Tp2802_Boot_Set_COC:
3162:TP2824/TP2802.c **** 		   //	{
3163:TP2824/TP2802.c ****                 if( TVI != std[i] )
3164:TP2824/TP2802.c ****                 {
3165:TP2824/TP2802.c ****                     ManualAGC(i);
3166:TP2824/TP2802.c ****                     SetCGain(0x0c);
3167:TP2824/TP2802.c ****                 }
3168:TP2824/TP2802.c ****                 else //TVI
3169:TP2824/TP2802.c ****                 {
3170:TP2824/TP2802.c ****                     if( TP2833 == chip || TP2834 == chip)
3171:TP2824/TP2802.c ****                     {
3172:TP2824/TP2802.c ****                         if( mode[i] & FLAG_MEGA_MODE )
3173:TP2824/TP2802.c ****                         {
3174:TP2824/TP2802.c ****                             SetCGain(0x16);
3175:TP2824/TP2802.c ****                         }
3176:TP2824/TP2802.c ****                     }
3177:TP2824/TP2802.c ****                 }
3178:TP2824/TP2802.c ****             //}
3179:TP2824/TP2802.c **** 			   if(state[i] == VIDEO_LOCKED)
3180:TP2824/TP2802.c **** 						   {
3181:TP2824/TP2802.c **** 							   tcByte *ptr_TP2824C;
3182:TP2824/TP2802.c **** 					   if( TVI == std[i] )
3183:TP2824/TP2802.c **** 					   {
3184:TP2824/TP2802.c **** 						   if(mode[i]==NTSC || mode[i]==PAL)
3185:TP2824/TP2802.c **** 						   {
3186:TP2824/TP2802.c **** 							   ptr_TP2824C=TP2824C_CVBS_PTZ_DataSet;
3187:TP2824/TP2802.c **** 						   }
3188:TP2824/TP2802.c **** 						   else
3189:TP2824/TP2802.c **** 						   {
3190:TP2824/TP2802.c **** 							   ptr_TP2824C=TP2824C_TVI_FHD_PTZ_DataSet;
3191:TP2824/TP2802.c **** 						   }
3192:TP2824/TP2802.c **** 						   
3193:TP2824/TP2802.c **** 						   I2CDeviceSet1( ptr_TP2824C );
ARM GAS  /tmp/ccSZlabO.s 			page 106


3194:TP2824/TP2802.c **** 						   
3195:TP2824/TP2802.c **** 						   if(mode[i] == R1080P30 || mode[i] == R1080P25)
3196:TP2824/TP2802.c **** 						   {
3197:TP2824/TP2802.c **** 							   tp28xx_byte_write(0xc6, 0x19);
3198:TP2824/TP2802.c **** 						   }
3199:TP2824/TP2802.c **** 						   
3200:TP2824/TP2802.c **** 						   tp28xx_byte_write(0x40, i);
3201:TP2824/TP2802.c **** 						   
3202:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xbe, 0x80);
3203:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB6);
3204:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB5);
3205:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB4);
3206:TP2824/TP2802.c **** 			   
3207:TP2824/TP2802.c **** 					   
3208:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0x00);
3209:TP2824/TP2802.c **** 						   delay(1);//5ms
3210:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0x83);
3211:TP2824/TP2802.c **** 						   
3212:TP2824/TP2802.c **** 						   if(mode[i]==R1080P30 || mode[i]==R1080P25)
3213:TP2824/TP2802.c **** 						   {
3214:TP2824/TP2802.c **** 							   PtzTxChNum=i;
3215:TP2824/TP2802.c **** 							   printf("EQdet %d\r\n",  PtzTxChNum);
3216:TP2824/TP2802.c **** 						   }
3217:TP2824/TP2802.c **** 						   
3218:TP2824/TP2802.c **** 					   }
3219:TP2824/TP2802.c **** 			   
3220:TP2824/TP2802.c **** 					   if( HDA == std[i] )
3221:TP2824/TP2802.c **** 					   {
3222:TP2824/TP2802.c **** 						   ptr_TP2824C=TP2824C_AHD_FHD_PTZ_DataSet;
3223:TP2824/TP2802.c **** 						   I2CDeviceSet1( ptr_TP2824C );
3224:TP2824/TP2802.c **** 					   
3225:TP2824/TP2802.c **** 						   tp28xx_byte_write(0x40, i);
3226:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xbe, 0x80);
3227:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB6);
3228:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB5);
3229:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB4);
3230:TP2824/TP2802.c **** 			   
3231:TP2824/TP2802.c **** 					   
3232:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0x24);
3233:TP2824/TP2802.c **** 						   delay(1);//5ms
3234:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0xA7);
3235:TP2824/TP2802.c **** 					   }
3236:TP2824/TP2802.c **** 			   
3237:TP2824/TP2802.c **** 					   if( HDC == std[i] )
3238:TP2824/TP2802.c **** 					   {
3239:TP2824/TP2802.c **** 						   ptr_TP2824C=TP2824C_CVIHD_PTZ_DataSet;
3240:TP2824/TP2802.c **** 						   I2CDeviceSet1( ptr_TP2824C );
3241:TP2824/TP2802.c **** 					   
3242:TP2824/TP2802.c **** 						   tp28xx_byte_write(0x40, i);
3243:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xbe, 0x80);
3244:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB6);
3245:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB5);
3246:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xB4);
3247:TP2824/TP2802.c **** 			   
3248:TP2824/TP2802.c **** 					   
3249:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xA4);
3250:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xA2);
ARM GAS  /tmp/ccSZlabO.s 			page 107


3251:TP2824/TP2802.c **** 						   tp28xx_byte_read(0xA3);
3252:TP2824/TP2802.c **** 						   
3253:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0x00);
3254:TP2824/TP2802.c **** 						   delay(1);//5ms
3255:TP2824/TP2802.c **** 						   tp28xx_byte_write(0xa7, 0x83);
3256:TP2824/TP2802.c **** 					   }
3257:TP2824/TP2802.c **** 
3258:TP2824/TP2802.c **** 			   	}
3259:TP2824/TP2802.c **** 			break;
3260:TP2824/TP2802.c **** 			//#endif
3261:TP2824/TP2802.c **** }
3262:TP2824/TP2802.c **** 
3263:TP2824/TP2802.c **** }
3264:TP2824/TP2802.c **** #endif
3265:TP2824/TP2802.c **** void ConvertData(unsigned char dat, unsigned char buf_index)
3266:TP2824/TP2802.c **** {
 2571              		.loc 1 3266 0
 2572              		.cfi_startproc
 2573              		@ args = 0, pretend = 0, frame = 0
 2574              		@ frame_needed = 0, uses_anonymous_args = 0
 2575              		@ link register save eliminated.
 2576              	.LVL364:
 2577 0000 10B4     		push	{r4}
 2578              	.LCFI21:
 2579              		.cfi_def_cfa_offset 4
 2580              		.cfi_offset 4, -4
3267:TP2824/TP2802.c ****     unsigned char i;
3268:TP2824/TP2802.c **** 
3269:TP2824/TP2802.c ****     PTZ_pelco=0;
 2581              		.loc 1 3269 0
 2582 0002 0022     		movs	r2, #0
 2583 0004 124B     		ldr	r3, .L219
 2584 0006 1A80     		strh	r2, [r3]	@ movhi
 2585              	.LVL365:
3270:TP2824/TP2802.c **** 
3271:TP2824/TP2802.c ****     for(i = 0; i < 8; i++)
 2586              		.loc 1 3271 0
 2587 0008 13E0     		b	.L214
 2588              	.LVL366:
 2589              	.L217:
3272:TP2824/TP2802.c ****     {
3273:TP2824/TP2802.c ****         PTZ_pelco <<= 3;
 2590              		.loc 1 3273 0
 2591 000a 114B     		ldr	r3, .L219
 2592 000c 1B88     		ldrh	r3, [r3]
 2593 000e DB00     		lsls	r3, r3, #3
 2594 0010 9BB2     		uxth	r3, r3
3274:TP2824/TP2802.c **** 
3275:TP2824/TP2802.c ****         if(0x80 & dat) PTZ_pelco |= 0x06;
 2595              		.loc 1 3275 0
 2596 0012 10F0800F 		tst	r0, #128
 2597 0016 04D0     		beq	.L215
 2598              		.loc 1 3275 0 is_stmt 0 discriminator 1
 2599 0018 43F00603 		orr	r3, r3, #6
 2600 001c 0C4C     		ldr	r4, .L219
 2601 001e 2380     		strh	r3, [r4]	@ movhi
 2602 0020 03E0     		b	.L216
ARM GAS  /tmp/ccSZlabO.s 			page 108


 2603              	.L215:
3276:TP2824/TP2802.c ****         else PTZ_pelco |= 0x04;
 2604              		.loc 1 3276 0 is_stmt 1
 2605 0022 43F00403 		orr	r3, r3, #4
 2606 0026 0A4C     		ldr	r4, .L219
 2607 0028 2380     		strh	r3, [r4]	@ movhi
 2608              	.L216:
3277:TP2824/TP2802.c **** 
3278:TP2824/TP2802.c ****         dat <<= 1;
 2609              		.loc 1 3278 0 discriminator 2
 2610 002a 4000     		lsls	r0, r0, #1
 2611              	.LVL367:
 2612 002c C0B2     		uxtb	r0, r0
 2613              	.LVL368:
3271:TP2824/TP2802.c ****     {
 2614              		.loc 1 3271 0 discriminator 2
 2615 002e 0132     		adds	r2, r2, #1
 2616              	.LVL369:
 2617 0030 D2B2     		uxtb	r2, r2
 2618              	.LVL370:
 2619              	.L214:
3271:TP2824/TP2802.c ****     {
 2620              		.loc 1 3271 0 is_stmt 0 discriminator 1
 2621 0032 072A     		cmp	r2, #7
 2622 0034 E9D9     		bls	.L217
3279:TP2824/TP2802.c ****     }
3280:TP2824/TP2802.c ****     PTZ_buf[buf_index]= (PTZ_pelco>>16)&0xff;
 2623              		.loc 1 3280 0 is_stmt 1
 2624 0036 074B     		ldr	r3, .L219+4
 2625 0038 0022     		movs	r2, #0
 2626              	.LVL371:
 2627 003a 5A54     		strb	r2, [r3, r1]
3281:TP2824/TP2802.c ****     PTZ_buf[buf_index+1]= (PTZ_pelco>>8)&0xff;
 2628              		.loc 1 3281 0
 2629 003c 481C     		adds	r0, r1, #1
 2630              	.LVL372:
 2631 003e 044A     		ldr	r2, .L219
 2632 0040 1288     		ldrh	r2, [r2]
 2633 0042 140A     		lsrs	r4, r2, #8
 2634 0044 1C54     		strb	r4, [r3, r0]
3282:TP2824/TP2802.c ****     PTZ_buf[buf_index+2]= (PTZ_pelco)&0xff;
 2635              		.loc 1 3282 0
 2636 0046 0231     		adds	r1, r1, #2
 2637              	.LVL373:
 2638 0048 5A54     		strb	r2, [r3, r1]
3283:TP2824/TP2802.c **** }
 2639              		.loc 1 3283 0
 2640 004a 5DF8044B 		ldr	r4, [sp], #4
 2641              	.LCFI22:
 2642              		.cfi_restore 4
 2643              		.cfi_def_cfa_offset 0
 2644 004e 7047     		bx	lr
 2645              	.L220:
 2646              		.align	2
 2647              	.L219:
 2648 0050 00000000 		.word	PTZ_pelco
 2649 0054 00000000 		.word	PTZ_buf
ARM GAS  /tmp/ccSZlabO.s 			page 109


 2650              		.cfi_endproc
 2651              	.LFE88:
 2653              		.section	.text.SwapBit,"ax",%progbits
 2654              		.align	2
 2655              		.global	SwapBit
 2656              		.thumb
 2657              		.thumb_func
 2659              	SwapBit:
 2660              	.LFB89:
3284:TP2824/TP2802.c **** unsigned char SwapBit(unsigned char dat, unsigned char buf_index)
3285:TP2824/TP2802.c **** {
 2661              		.loc 1 3285 0
 2662              		.cfi_startproc
 2663              		@ args = 0, pretend = 0, frame = 0
 2664              		@ frame_needed = 0, uses_anonymous_args = 0
 2665              		@ link register save eliminated.
 2666              	.LVL374:
 2667 0000 30B4     		push	{r4, r5}
 2668              	.LCFI23:
 2669              		.cfi_def_cfa_offset 8
 2670              		.cfi_offset 4, -8
 2671              		.cfi_offset 5, -4
 2672 0002 0246     		mov	r2, r0
 2673              	.LVL375:
3286:TP2824/TP2802.c ****     unsigned char i;
3287:TP2824/TP2802.c ****     unsigned char ret=0;
3288:TP2824/TP2802.c ****     crc=0;
 2674              		.loc 1 3288 0
 2675 0004 0023     		movs	r3, #0
 2676 0006 1448     		ldr	r0, .L226
 2677              	.LVL376:
 2678 0008 0370     		strb	r3, [r0]
 2679              	.LVL377:
3287:TP2824/TP2802.c ****     crc=0;
 2680              		.loc 1 3287 0
 2681 000a 1846     		mov	r0, r3
3289:TP2824/TP2802.c ****     for(i = 0; i < 8; i++ )
 2682              		.loc 1 3289 0
 2683 000c 0EE0     		b	.L222
 2684              	.LVL378:
 2685              	.L224:
3290:TP2824/TP2802.c ****     {
3291:TP2824/TP2802.c ****         ret >>= 1;
 2686              		.loc 1 3291 0
 2687 000e 4008     		lsrs	r0, r0, #1
 2688              	.LVL379:
3292:TP2824/TP2802.c ****         if(0x80 & dat)
 2689              		.loc 1 3292 0
 2690 0010 12F0800F 		tst	r2, #128
 2691 0014 06D0     		beq	.L223
3293:TP2824/TP2802.c ****         {
3294:TP2824/TP2802.c ****             ret |= 0x80;
 2692              		.loc 1 3294 0
 2693 0016 60F07F00 		orn	r0, r0, #127
 2694              	.LVL380:
 2695 001a C0B2     		uxtb	r0, r0
 2696              	.LVL381:
ARM GAS  /tmp/ccSZlabO.s 			page 110


3295:TP2824/TP2802.c ****             crc +=0x80;
 2697              		.loc 1 3295 0
 2698 001c 0E4D     		ldr	r5, .L226
 2699 001e 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 2700 0020 803C     		subs	r4, r4, #128
 2701 0022 2C70     		strb	r4, [r5]
 2702              	.L223:
3296:TP2824/TP2802.c ****         }
3297:TP2824/TP2802.c ****         dat <<= 1;
 2703              		.loc 1 3297 0 discriminator 2
 2704 0024 5200     		lsls	r2, r2, #1
 2705              	.LVL382:
 2706 0026 D2B2     		uxtb	r2, r2
 2707              	.LVL383:
3289:TP2824/TP2802.c ****     {
 2708              		.loc 1 3289 0 discriminator 2
 2709 0028 0133     		adds	r3, r3, #1
 2710              	.LVL384:
 2711 002a DBB2     		uxtb	r3, r3
 2712              	.LVL385:
 2713              	.L222:
3289:TP2824/TP2802.c ****     {
 2714              		.loc 1 3289 0 is_stmt 0 discriminator 1
 2715 002c 072B     		cmp	r3, #7
 2716 002e EED9     		bls	.L224
3298:TP2824/TP2802.c ****     }
3299:TP2824/TP2802.c ****     PTZ_buf[buf_index]= 0x02;
 2717              		.loc 1 3299 0 is_stmt 1
 2718 0030 0A4B     		ldr	r3, .L226+4
 2719              	.LVL386:
 2720 0032 0222     		movs	r2, #2
 2721              	.LVL387:
 2722 0034 5A54     		strb	r2, [r3, r1]
3300:TP2824/TP2802.c ****     PTZ_buf[buf_index+1]= ret;
 2723              		.loc 1 3300 0
 2724 0036 4A1C     		adds	r2, r1, #1
 2725 0038 9854     		strb	r0, [r3, r2]
3301:TP2824/TP2802.c ****     PTZ_buf[buf_index+2]= 0x7f|crc;
 2726              		.loc 1 3301 0
 2727 003a 8C1C     		adds	r4, r1, #2
 2728 003c 064A     		ldr	r2, .L226
 2729 003e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2730 0040 42F07F02 		orr	r2, r2, #127
 2731 0044 1A55     		strb	r2, [r3, r4]
3302:TP2824/TP2802.c ****     PTZ_buf[buf_index+3]= 0xff;
 2732              		.loc 1 3302 0
 2733 0046 CA1C     		adds	r2, r1, #3
 2734 0048 FF24     		movs	r4, #255
 2735 004a 9C54     		strb	r4, [r3, r2]
3303:TP2824/TP2802.c ****     PTZ_buf[buf_index+4]= 0xfc;
 2736              		.loc 1 3303 0
 2737 004c 0431     		adds	r1, r1, #4
 2738              	.LVL388:
 2739 004e FC22     		movs	r2, #252
 2740 0050 5A54     		strb	r2, [r3, r1]
3304:TP2824/TP2802.c ****     return ret;
3305:TP2824/TP2802.c **** }
ARM GAS  /tmp/ccSZlabO.s 			page 111


 2741              		.loc 1 3305 0
 2742 0052 30BC     		pop	{r4, r5}
 2743              	.LCFI24:
 2744              		.cfi_restore 5
 2745              		.cfi_restore 4
 2746              		.cfi_def_cfa_offset 0
 2747 0054 7047     		bx	lr
 2748              	.L227:
 2749 0056 00BF     		.align	2
 2750              	.L226:
 2751 0058 00000000 		.word	crc
 2752 005c 00000000 		.word	PTZ_buf
 2753              		.cfi_endproc
 2754              	.LFE89:
 2756              		.section	.text.AHDBitsReverse,"ax",%progbits
 2757              		.align	2
 2758              		.global	AHDBitsReverse
 2759              		.thumb
 2760              		.thumb_func
 2762              	AHDBitsReverse:
 2763              	.LFB90:
3306:TP2824/TP2802.c **** 
3307:TP2824/TP2802.c **** BYTE AHDBitsReverse(BYTE val)
3308:TP2824/TP2802.c **** {
 2764              		.loc 1 3308 0
 2765              		.cfi_startproc
 2766              		@ args = 0, pretend = 0, frame = 0
 2767              		@ frame_needed = 0, uses_anonymous_args = 0
 2768              		@ link register save eliminated.
 2769              	.LVL389:
 2770 0000 30B4     		push	{r4, r5}
 2771              	.LCFI25:
 2772              		.cfi_def_cfa_offset 8
 2773              		.cfi_offset 4, -8
 2774              		.cfi_offset 5, -4
 2775 0002 0446     		mov	r4, r0
 2776              	.LVL390:
3309:TP2824/TP2802.c **** 	BYTE i;
3310:TP2824/TP2802.c **** 	BYTE cnt=7;
3311:TP2824/TP2802.c **** 	BYTE bitflag=0x01;
3312:TP2824/TP2802.c **** 	BYTE rval=0x00;
 2777              		.loc 1 3312 0
 2778 0004 0020     		movs	r0, #0
 2779              	.LVL391:
3311:TP2824/TP2802.c **** 	BYTE rval=0x00;
 2780              		.loc 1 3311 0
 2781 0006 0121     		movs	r1, #1
3310:TP2824/TP2802.c **** 	BYTE bitflag=0x01;
 2782              		.loc 1 3310 0
 2783 0008 0722     		movs	r2, #7
3313:TP2824/TP2802.c **** 	for(i=0;i<4;i++){
 2784              		.loc 1 3313 0
 2785 000a 0346     		mov	r3, r0
 2786 000c 09E0     		b	.L229
 2787              	.LVL392:
 2788              	.L230:
3314:TP2824/TP2802.c **** 		rval|=((val>>cnt)&bitflag);
ARM GAS  /tmp/ccSZlabO.s 			page 112


 2789              		.loc 1 3314 0 discriminator 3
 2790 000e 44FA02F5 		asr	r5, r4, r2
 2791 0012 0D40     		ands	r5, r5, r1
 2792 0014 2843     		orrs	r0, r0, r5
 2793              	.LVL393:
3315:TP2824/TP2802.c **** 		bitflag<<=1;
 2794              		.loc 1 3315 0 discriminator 3
 2795 0016 4900     		lsls	r1, r1, #1
 2796              	.LVL394:
 2797 0018 C9B2     		uxtb	r1, r1
 2798              	.LVL395:
3316:TP2824/TP2802.c **** 		cnt-=2;
 2799              		.loc 1 3316 0 discriminator 3
 2800 001a 023A     		subs	r2, r2, #2
 2801              	.LVL396:
 2802 001c D2B2     		uxtb	r2, r2
 2803              	.LVL397:
3313:TP2824/TP2802.c **** 		rval|=((val>>cnt)&bitflag);
 2804              		.loc 1 3313 0 discriminator 3
 2805 001e 0133     		adds	r3, r3, #1
 2806              	.LVL398:
 2807 0020 DBB2     		uxtb	r3, r3
 2808              	.LVL399:
 2809              	.L229:
3313:TP2824/TP2802.c **** 		rval|=((val>>cnt)&bitflag);
 2810              		.loc 1 3313 0 is_stmt 0 discriminator 1
 2811 0022 032B     		cmp	r3, #3
 2812 0024 F3D9     		bls	.L230
 2813 0026 8025     		movs	r5, #128
 2814 0028 0722     		movs	r2, #7
 2815              	.LVL400:
 2816 002a 0023     		movs	r3, #0
 2817              	.LVL401:
 2818 002c 08E0     		b	.L231
 2819              	.LVL402:
 2820              	.L232:
3317:TP2824/TP2802.c **** 	}
3318:TP2824/TP2802.c **** 	cnt=7;
3319:TP2824/TP2802.c **** 	bitflag=0x80;
3320:TP2824/TP2802.c **** 	for(i=0;i<4;i++){
3321:TP2824/TP2802.c **** 		rval|=((val<<cnt)&bitflag);
 2821              		.loc 1 3321 0 is_stmt 1 discriminator 3
 2822 002e 04FA02F1 		lsl	r1, r4, r2
 2823 0032 2940     		ands	r1, r1, r5
 2824 0034 0843     		orrs	r0, r0, r1
 2825              	.LVL403:
3322:TP2824/TP2802.c **** 		bitflag>>=1;
 2826              		.loc 1 3322 0 discriminator 3
 2827 0036 6D08     		lsrs	r5, r5, #1
 2828              	.LVL404:
3323:TP2824/TP2802.c **** 		cnt-=2;
 2829              		.loc 1 3323 0 discriminator 3
 2830 0038 023A     		subs	r2, r2, #2
 2831              	.LVL405:
 2832 003a D2B2     		uxtb	r2, r2
 2833              	.LVL406:
3320:TP2824/TP2802.c **** 		rval|=((val<<cnt)&bitflag);
ARM GAS  /tmp/ccSZlabO.s 			page 113


 2834              		.loc 1 3320 0 discriminator 3
 2835 003c 0133     		adds	r3, r3, #1
 2836              	.LVL407:
 2837 003e DBB2     		uxtb	r3, r3
 2838              	.LVL408:
 2839              	.L231:
3320:TP2824/TP2802.c **** 		rval|=((val<<cnt)&bitflag);
 2840              		.loc 1 3320 0 is_stmt 0 discriminator 1
 2841 0040 032B     		cmp	r3, #3
 2842 0042 F4D9     		bls	.L232
3324:TP2824/TP2802.c **** 	}
3325:TP2824/TP2802.c **** 	return rval;
3326:TP2824/TP2802.c **** }
 2843              		.loc 1 3326 0 is_stmt 1
 2844 0044 30BC     		pop	{r4, r5}
 2845              	.LCFI26:
 2846              		.cfi_restore 5
 2847              		.cfi_restore 4
 2848              		.cfi_def_cfa_offset 0
 2849              	.LVL409:
 2850 0046 7047     		bx	lr
 2851              		.cfi_endproc
 2852              	.LFE90:
 2854              		.section	.text.HDC_SetData,"ax",%progbits
 2855              		.align	2
 2856              		.global	HDC_SetData
 2857              		.thumb
 2858              		.thumb_func
 2860              	HDC_SetData:
 2861              	.LFB91:
3327:TP2824/TP2802.c **** 
3328:TP2824/TP2802.c **** void HDC_SetData(tByte reg,tByte dat)
3329:TP2824/TP2802.c **** {
 2862              		.loc 1 3329 0
 2863              		.cfi_startproc
 2864              		@ args = 0, pretend = 0, frame = 0
 2865              		@ frame_needed = 0, uses_anonymous_args = 0
 2866              	.LVL410:
 2867 0000 38B5     		push	{r3, r4, r5, lr}
 2868              	.LCFI27:
 2869              		.cfi_def_cfa_offset 16
 2870              		.cfi_offset 3, -16
 2871              		.cfi_offset 4, -12
 2872              		.cfi_offset 5, -8
 2873              		.cfi_offset 14, -4
 2874 0002 0446     		mov	r4, r0
 2875 0004 0D46     		mov	r5, r1
3330:TP2824/TP2802.c ****     //line1
3331:TP2824/TP2802.c ****     //tp28xx_byte_write(reg + 0 , 0x00);
3332:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 0 , 0x02);
 2876              		.loc 1 3332 0
 2877 0006 0221     		movs	r1, #2
 2878              	.LVL411:
 2879 0008 FFF7FEFF 		bl	tp28xx_byte_write
 2880              	.LVL412:
3333:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 1 , SwapBit(dat,1));
 2881              		.loc 1 3333 0
ARM GAS  /tmp/ccSZlabO.s 			page 114


 2882 000c 2846     		mov	r0, r5
 2883 000e 0121     		movs	r1, #1
 2884 0010 FFF7FEFF 		bl	SwapBit
 2885              	.LVL413:
 2886 0014 0146     		mov	r1, r0
 2887 0016 601C     		adds	r0, r4, #1
 2888 0018 C0B2     		uxtb	r0, r0
 2889 001a FFF7FEFF 		bl	tp28xx_byte_write
 2890              	.LVL414:
3334:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 2 , 0x7f|crc);
 2891              		.loc 1 3334 0
 2892 001e A01C     		adds	r0, r4, #2
 2893 0020 084B     		ldr	r3, .L236
 2894 0022 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2895 0024 C0B2     		uxtb	r0, r0
 2896 0026 41F07F01 		orr	r1, r1, #127
 2897 002a FFF7FEFF 		bl	tp28xx_byte_write
 2898              	.LVL415:
3335:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 3 , 0xff);
 2899              		.loc 1 3335 0
 2900 002e E01C     		adds	r0, r4, #3
 2901 0030 C0B2     		uxtb	r0, r0
 2902 0032 FF21     		movs	r1, #255
 2903 0034 FFF7FEFF 		bl	tp28xx_byte_write
 2904              	.LVL416:
3336:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 4 , 0xfc);
 2905              		.loc 1 3336 0
 2906 0038 201D     		adds	r0, r4, #4
 2907 003a C0B2     		uxtb	r0, r0
 2908 003c FC21     		movs	r1, #252
 2909 003e FFF7FEFF 		bl	tp28xx_byte_write
 2910              	.LVL417:
 2911 0042 38BD     		pop	{r3, r4, r5, pc}
 2912              	.L237:
 2913              		.align	2
 2914              	.L236:
 2915 0044 00000000 		.word	crc
 2916              		.cfi_endproc
 2917              	.LFE91:
 2919              		.section	.text.HDA_SetData,"ax",%progbits
 2920              		.align	2
 2921              		.global	HDA_SetData
 2922              		.thumb
 2923              		.thumb_func
 2925              	HDA_SetData:
 2926              	.LFB92:
3337:TP2824/TP2802.c **** }
3338:TP2824/TP2802.c **** 
3339:TP2824/TP2802.c **** void HDA_SetData(tByte reg,tByte dat)
3340:TP2824/TP2802.c **** {
 2927              		.loc 1 3340 0
 2928              		.cfi_startproc
 2929              		@ args = 0, pretend = 0, frame = 0
 2930              		@ frame_needed = 0, uses_anonymous_args = 0
 2931              	.LVL418:
 2932 0000 38B5     		push	{r3, r4, r5, lr}
 2933              	.LCFI28:
ARM GAS  /tmp/ccSZlabO.s 			page 115


 2934              		.cfi_def_cfa_offset 16
 2935              		.cfi_offset 3, -16
 2936              		.cfi_offset 4, -12
 2937              		.cfi_offset 5, -8
 2938              		.cfi_offset 14, -4
 2939 0002 0446     		mov	r4, r0
3341:TP2824/TP2802.c ****     ConvertData(dat, 0);
 2940              		.loc 1 3341 0
 2941 0004 0846     		mov	r0, r1
 2942              	.LVL419:
 2943 0006 0021     		movs	r1, #0
 2944              	.LVL420:
 2945 0008 FFF7FEFF 		bl	ConvertData
 2946              	.LVL421:
3342:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 0 , PTZ_buf[0]);
 2947              		.loc 1 3342 0
 2948 000c 074D     		ldr	r5, .L240
 2949 000e 2046     		mov	r0, r4
 2950 0010 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 2951 0012 FFF7FEFF 		bl	tp28xx_byte_write
 2952              	.LVL422:
3343:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 1 , PTZ_buf[1]);
 2953              		.loc 1 3343 0
 2954 0016 601C     		adds	r0, r4, #1
 2955 0018 C0B2     		uxtb	r0, r0
 2956 001a 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 2957 001c FFF7FEFF 		bl	tp28xx_byte_write
 2958              	.LVL423:
3344:TP2824/TP2802.c ****     tp28xx_byte_write(reg + 2 , PTZ_buf[2]);
 2959              		.loc 1 3344 0
 2960 0020 A01C     		adds	r0, r4, #2
 2961 0022 C0B2     		uxtb	r0, r0
 2962 0024 A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 2963 0026 FFF7FEFF 		bl	tp28xx_byte_write
 2964              	.LVL424:
 2965 002a 38BD     		pop	{r3, r4, r5, pc}
 2966              	.L241:
 2967              		.align	2
 2968              	.L240:
 2969 002c 00000000 		.word	PTZ_buf
 2970              		.cfi_endproc
 2971              	.LFE92:
 2973              		.section	.text.TVICommandToAHData,"ax",%progbits
 2974              		.align	2
 2975              		.global	TVICommandToAHData
 2976              		.thumb
 2977              		.thumb_func
 2979              	TVICommandToAHData:
 2980              	.LFB93:
3345:TP2824/TP2802.c **** }
3346:TP2824/TP2802.c **** 			
3347:TP2824/TP2802.c **** //20200511 COC  >>
3348:TP2824/TP2802.c **** void TVICommandToAHData(void)
3349:TP2824/TP2802.c **** {
 2981              		.loc 1 3349 0
 2982              		.cfi_startproc
 2983              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccSZlabO.s 			page 116


 2984              		@ frame_needed = 0, uses_anonymous_args = 0
 2985              		@ link register save eliminated.
3350:TP2824/TP2802.c **** 	AHDcmd3=TVI_speed;
 2986              		.loc 1 3350 0
 2987 0000 6A4B     		ldr	r3, .L265
 2988 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2989 0004 6A4B     		ldr	r3, .L265+4
 2990 0006 1A70     		strb	r2, [r3]
3351:TP2824/TP2802.c **** 	AHDcmd4=presetNum;
 2991              		.loc 1 3351 0
 2992 0008 6A4B     		ldr	r3, .L265+8
 2993 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2994 000c 6A4B     		ldr	r3, .L265+12
 2995 000e 1A70     		strb	r2, [r3]
3352:TP2824/TP2802.c **** 	
3353:TP2824/TP2802.c **** 	if(TVI_Command==0x17)//KEY_PRESET_CALL//"preset xx"
 2996              		.loc 1 3353 0
 2997 0010 6A4B     		ldr	r3, .L265+16
 2998 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2999 0014 172B     		cmp	r3, #23
 3000 0016 08D1     		bne	.L243
3354:TP2824/TP2802.c **** 	{
3355:TP2824/TP2802.c **** 		AHDcmd1=0x00;
 3001              		.loc 1 3355 0
 3002 0018 0023     		movs	r3, #0
 3003 001a 694A     		ldr	r2, .L265+20
 3004 001c 1370     		strb	r3, [r2]
3356:TP2824/TP2802.c **** 		AHDcmd2=0x07;
 3005              		.loc 1 3356 0
 3006 001e 0721     		movs	r1, #7
 3007 0020 684A     		ldr	r2, .L265+24
 3008 0022 1170     		strb	r1, [r2]
3357:TP2824/TP2802.c **** 		AHDcmd3=0;
 3009              		.loc 1 3357 0
 3010 0024 624A     		ldr	r2, .L265+4
 3011 0026 1370     		strb	r3, [r2]
 3012 0028 7047     		bx	lr
 3013              	.L243:
3358:TP2824/TP2802.c **** 	}
3359:TP2824/TP2802.c **** 	else if(TVI_Command==0x06)//KEY_TILT_UP
 3014              		.loc 1 3359 0
 3015 002a 062B     		cmp	r3, #6
 3016 002c 06D1     		bne	.L245
3360:TP2824/TP2802.c **** 	{
3361:TP2824/TP2802.c **** 		AHDcmd1=0x00;
 3017              		.loc 1 3361 0
 3018 002e 0022     		movs	r2, #0
 3019 0030 634B     		ldr	r3, .L265+20
 3020 0032 1A70     		strb	r2, [r3]
3362:TP2824/TP2802.c **** 		AHDcmd2=0x08;
 3021              		.loc 1 3362 0
 3022 0034 0822     		movs	r2, #8
 3023 0036 634B     		ldr	r3, .L265+24
 3024 0038 1A70     		strb	r2, [r3]
 3025 003a 7047     		bx	lr
 3026              	.L245:
3363:TP2824/TP2802.c **** 	}
ARM GAS  /tmp/ccSZlabO.s 			page 117


3364:TP2824/TP2802.c **** 	else if(TVI_Command==0x07)//KEY_TILT_DOWN
 3027              		.loc 1 3364 0
 3028 003c 072B     		cmp	r3, #7
 3029 003e 06D1     		bne	.L246
3365:TP2824/TP2802.c **** 	{
3366:TP2824/TP2802.c **** 		AHDcmd1=0x00;
 3030              		.loc 1 3366 0
 3031 0040 0022     		movs	r2, #0
 3032 0042 5F4B     		ldr	r3, .L265+20
 3033 0044 1A70     		strb	r2, [r3]
3367:TP2824/TP2802.c **** 		AHDcmd2=0x10;
 3034              		.loc 1 3367 0
 3035 0046 1022     		movs	r2, #16
 3036 0048 5E4B     		ldr	r3, .L265+24
 3037 004a 1A70     		strb	r2, [r3]
 3038 004c 7047     		bx	lr
 3039              	.L246:
3368:TP2824/TP2802.c **** 	}
3369:TP2824/TP2802.c **** 	else if(TVI_Command==0x09)//KEY_PAN_LEFT
 3040              		.loc 1 3369 0
 3041 004e 092B     		cmp	r3, #9
 3042 0050 06D1     		bne	.L247
3370:TP2824/TP2802.c **** 	{
3371:TP2824/TP2802.c **** 		AHDcmd1=0x00;
 3043              		.loc 1 3371 0
 3044 0052 0022     		movs	r2, #0
 3045 0054 5A4B     		ldr	r3, .L265+20
 3046 0056 1A70     		strb	r2, [r3]
3372:TP2824/TP2802.c **** 		AHDcmd2=0x04;
 3047              		.loc 1 3372 0
 3048 0058 0422     		movs	r2, #4
 3049 005a 5A4B     		ldr	r3, .L265+24
 3050 005c 1A70     		strb	r2, [r3]
 3051 005e 7047     		bx	lr
 3052              	.L247:
3373:TP2824/TP2802.c **** 	}
3374:TP2824/TP2802.c **** 	else if(TVI_Command==0x08)//KEY_PAN_RIGHT
 3053              		.loc 1 3374 0
 3054 0060 082B     		cmp	r3, #8
 3055 0062 06D1     		bne	.L248
3375:TP2824/TP2802.c **** 	{
3376:TP2824/TP2802.c **** 		AHDcmd1=0x00;
 3056              		.loc 1 3376 0
 3057 0064 0022     		movs	r2, #0
 3058 0066 564B     		ldr	r3, .L265+20
 3059 0068 1A70     		strb	r2, [r3]
3377:TP2824/TP2802.c **** 		AHDcmd2=0x02;
 3060              		.loc 1 3377 0
 3061 006a 0222     		movs	r2, #2
 3062 006c 554B     		ldr	r3, .L265+24
 3063 006e 1A70     		strb	r2, [r3]
 3064 0070 7047     		bx	lr
 3065              	.L248:
3378:TP2824/TP2802.c **** 	}		
3379:TP2824/TP2802.c **** 	else if(TVI_Command==0x0A)//KEY_TILT_UP + KEY_PAN_LEFT
 3066              		.loc 1 3379 0
 3067 0072 0A2B     		cmp	r3, #10
ARM GAS  /tmp/ccSZlabO.s 			page 118


 3068 0074 06D1     		bne	.L249
3380:TP2824/TP2802.c **** 	{
3381:TP2824/TP2802.c **** 		AHDcmd1=0x00;
 3069              		.loc 1 3381 0
 3070 0076 0022     		movs	r2, #0
 3071 0078 514B     		ldr	r3, .L265+20
 3072 007a 1A70     		strb	r2, [r3]
3382:TP2824/TP2802.c **** 		AHDcmd2=0x0c;
 3073              		.loc 1 3382 0
 3074 007c 0C22     		movs	r2, #12
 3075 007e 514B     		ldr	r3, .L265+24
 3076 0080 1A70     		strb	r2, [r3]
 3077 0082 7047     		bx	lr
 3078              	.L249:
3383:TP2824/TP2802.c **** 	}
3384:TP2824/TP2802.c **** 	else if(TVI_Command==0x0C)//KEY_TILT_UP + KEY_PAN_RIGHT
 3079              		.loc 1 3384 0
 3080 0084 0C2B     		cmp	r3, #12
 3081 0086 06D1     		bne	.L250
3385:TP2824/TP2802.c **** 	{
3386:TP2824/TP2802.c **** 		AHDcmd1=0x00;
 3082              		.loc 1 3386 0
 3083 0088 0022     		movs	r2, #0
 3084 008a 4D4B     		ldr	r3, .L265+20
 3085 008c 1A70     		strb	r2, [r3]
3387:TP2824/TP2802.c **** 		AHDcmd2=0x0a;
 3086              		.loc 1 3387 0
 3087 008e 0A22     		movs	r2, #10
 3088 0090 4C4B     		ldr	r3, .L265+24
 3089 0092 1A70     		strb	r2, [r3]
 3090 0094 7047     		bx	lr
 3091              	.L250:
3388:TP2824/TP2802.c **** 	}
3389:TP2824/TP2802.c **** 	else if(TVI_Command==0x0B)//KEY_TILT_DOWN + KEY_PAN_LEFT
 3092              		.loc 1 3389 0
 3093 0096 0B2B     		cmp	r3, #11
 3094 0098 06D1     		bne	.L251
3390:TP2824/TP2802.c **** 	{
3391:TP2824/TP2802.c **** 		AHDcmd1=0x00;
 3095              		.loc 1 3391 0
 3096 009a 0022     		movs	r2, #0
 3097 009c 484B     		ldr	r3, .L265+20
 3098 009e 1A70     		strb	r2, [r3]
3392:TP2824/TP2802.c **** 		AHDcmd2=0x14;
 3099              		.loc 1 3392 0
 3100 00a0 1422     		movs	r2, #20
 3101 00a2 484B     		ldr	r3, .L265+24
 3102 00a4 1A70     		strb	r2, [r3]
 3103 00a6 7047     		bx	lr
 3104              	.L251:
3393:TP2824/TP2802.c **** 	}
3394:TP2824/TP2802.c **** 	else if(TVI_Command==0x0D)//KEY_TILT_DOWN + KEY_PAN_RIGHT
 3105              		.loc 1 3394 0
 3106 00a8 0D2B     		cmp	r3, #13
 3107 00aa 06D1     		bne	.L252
3395:TP2824/TP2802.c **** 	{
3396:TP2824/TP2802.c **** 		AHDcmd1=0x00;
ARM GAS  /tmp/ccSZlabO.s 			page 119


 3108              		.loc 1 3396 0
 3109 00ac 0022     		movs	r2, #0
 3110 00ae 444B     		ldr	r3, .L265+20
 3111 00b0 1A70     		strb	r2, [r3]
3397:TP2824/TP2802.c **** 		AHDcmd2=0x12;
 3112              		.loc 1 3397 0
 3113 00b2 1222     		movs	r2, #18
 3114 00b4 434B     		ldr	r3, .L265+24
 3115 00b6 1A70     		strb	r2, [r3]
 3116 00b8 7047     		bx	lr
 3117              	.L252:
3398:TP2824/TP2802.c **** 	}		
3399:TP2824/TP2802.c **** 	else if(TVI_Command==0x0F)//KEY_IRIS_OPEN / OSD_MENU
 3118              		.loc 1 3399 0
 3119 00ba 0F2B     		cmp	r3, #15
 3120 00bc 06D1     		bne	.L253
3400:TP2824/TP2802.c **** 	{
3401:TP2824/TP2802.c **** 		AHDcmd1=0x02;
 3121              		.loc 1 3401 0
 3122 00be 0222     		movs	r2, #2
 3123 00c0 3F4B     		ldr	r3, .L265+20
 3124 00c2 1A70     		strb	r2, [r3]
3402:TP2824/TP2802.c **** 		AHDcmd2=0x00;
 3125              		.loc 1 3402 0
 3126 00c4 0022     		movs	r2, #0
 3127 00c6 3F4B     		ldr	r3, .L265+24
 3128 00c8 1A70     		strb	r2, [r3]
 3129 00ca 7047     		bx	lr
 3130              	.L253:
3403:TP2824/TP2802.c **** 	}
3404:TP2824/TP2802.c **** 	else if(TVI_Command==0x0E)//KEY_IRIS_CLOSE
 3131              		.loc 1 3404 0
 3132 00cc 0E2B     		cmp	r3, #14
 3133 00ce 06D1     		bne	.L254
3405:TP2824/TP2802.c **** 	{
3406:TP2824/TP2802.c **** 		AHDcmd1=0x04;
 3134              		.loc 1 3406 0
 3135 00d0 0422     		movs	r2, #4
 3136 00d2 3B4B     		ldr	r3, .L265+20
 3137 00d4 1A70     		strb	r2, [r3]
3407:TP2824/TP2802.c **** 		AHDcmd2=0x00;
 3138              		.loc 1 3407 0
 3139 00d6 0022     		movs	r2, #0
 3140 00d8 3A4B     		ldr	r3, .L265+24
 3141 00da 1A70     		strb	r2, [r3]
 3142 00dc 7047     		bx	lr
 3143              	.L254:
3408:TP2824/TP2802.c **** 	}
3409:TP2824/TP2802.c **** 	else if(TVI_Command==0x11)//KEY_FOCUS_FAR
 3144              		.loc 1 3409 0
 3145 00de 112B     		cmp	r3, #17
 3146 00e0 06D1     		bne	.L255
3410:TP2824/TP2802.c **** 	{
3411:TP2824/TP2802.c **** 		AHDcmd1=0x01;
 3147              		.loc 1 3411 0
 3148 00e2 0122     		movs	r2, #1
 3149 00e4 364B     		ldr	r3, .L265+20
ARM GAS  /tmp/ccSZlabO.s 			page 120


 3150 00e6 1A70     		strb	r2, [r3]
3412:TP2824/TP2802.c **** 		AHDcmd2=0x00;
 3151              		.loc 1 3412 0
 3152 00e8 0022     		movs	r2, #0
 3153 00ea 364B     		ldr	r3, .L265+24
 3154 00ec 1A70     		strb	r2, [r3]
 3155 00ee 7047     		bx	lr
 3156              	.L255:
3413:TP2824/TP2802.c **** 	}
3414:TP2824/TP2802.c **** 	else if(TVI_Command==0x10)//KEY_FOCUS_NEAR
 3157              		.loc 1 3414 0
 3158 00f0 102B     		cmp	r3, #16
 3159 00f2 06D1     		bne	.L256
3415:TP2824/TP2802.c **** 	{
3416:TP2824/TP2802.c **** 		AHDcmd1=0x00;
 3160              		.loc 1 3416 0
 3161 00f4 0022     		movs	r2, #0
 3162 00f6 324B     		ldr	r3, .L265+20
 3163 00f8 1A70     		strb	r2, [r3]
3417:TP2824/TP2802.c **** 		AHDcmd2=0x80;
 3164              		.loc 1 3417 0
 3165 00fa 8022     		movs	r2, #128
 3166 00fc 314B     		ldr	r3, .L265+24
 3167 00fe 1A70     		strb	r2, [r3]
 3168 0100 7047     		bx	lr
 3169              	.L256:
3418:TP2824/TP2802.c **** 	}
3419:TP2824/TP2802.c **** 	else if(TVI_Command==0x13)//KEY_ZOOM_TELE
 3170              		.loc 1 3419 0
 3171 0102 132B     		cmp	r3, #19
 3172 0104 06D1     		bne	.L257
3420:TP2824/TP2802.c **** 	{
3421:TP2824/TP2802.c **** 		AHDcmd1=0x00;
 3173              		.loc 1 3421 0
 3174 0106 0022     		movs	r2, #0
 3175 0108 2D4B     		ldr	r3, .L265+20
 3176 010a 1A70     		strb	r2, [r3]
3422:TP2824/TP2802.c **** 		AHDcmd2=0x20;
 3177              		.loc 1 3422 0
 3178 010c 2022     		movs	r2, #32
 3179 010e 2D4B     		ldr	r3, .L265+24
 3180 0110 1A70     		strb	r2, [r3]
 3181 0112 7047     		bx	lr
 3182              	.L257:
3423:TP2824/TP2802.c **** 	}
3424:TP2824/TP2802.c **** 	else if(TVI_Command==0x12)//KEY_ZOOM_WIDE
 3183              		.loc 1 3424 0
 3184 0114 122B     		cmp	r3, #18
 3185 0116 06D1     		bne	.L258
3425:TP2824/TP2802.c **** 	{
3426:TP2824/TP2802.c **** 		AHDcmd1=0x00;
 3186              		.loc 1 3426 0
 3187 0118 0022     		movs	r2, #0
 3188 011a 294B     		ldr	r3, .L265+20
 3189 011c 1A70     		strb	r2, [r3]
3427:TP2824/TP2802.c **** 		AHDcmd2=0x40;
 3190              		.loc 1 3427 0
ARM GAS  /tmp/ccSZlabO.s 			page 121


 3191 011e 4022     		movs	r2, #64
 3192 0120 284B     		ldr	r3, .L265+24
 3193 0122 1A70     		strb	r2, [r3]
 3194 0124 7047     		bx	lr
 3195              	.L258:
3428:TP2824/TP2802.c **** 	}
3429:TP2824/TP2802.c **** 	else if(TVI_Command==0x14)//KEY_MOTOR_STOP
 3196              		.loc 1 3429 0
 3197 0126 142B     		cmp	r3, #20
 3198 0128 09D1     		bne	.L259
3430:TP2824/TP2802.c **** 	{
3431:TP2824/TP2802.c **** 		AHDcmd1=0x00;
 3199              		.loc 1 3431 0
 3200 012a 0023     		movs	r3, #0
 3201 012c 244A     		ldr	r2, .L265+20
 3202 012e 1370     		strb	r3, [r2]
3432:TP2824/TP2802.c **** 		AHDcmd2=0x00;
 3203              		.loc 1 3432 0
 3204 0130 244A     		ldr	r2, .L265+24
 3205 0132 1370     		strb	r3, [r2]
3433:TP2824/TP2802.c **** 		AHDcmd3=0x00;
 3206              		.loc 1 3433 0
 3207 0134 1E4A     		ldr	r2, .L265+4
 3208 0136 1370     		strb	r3, [r2]
3434:TP2824/TP2802.c **** 		AHDcmd4=0x00;
 3209              		.loc 1 3434 0
 3210 0138 1F4A     		ldr	r2, .L265+12
 3211 013a 1370     		strb	r3, [r2]
 3212 013c 7047     		bx	lr
 3213              	.L259:
3435:TP2824/TP2802.c **** 	}
3436:TP2824/TP2802.c **** 	else if(TVI_Command==0x21)//TOA  PRESET SAVE
 3214              		.loc 1 3436 0
 3215 013e 212B     		cmp	r3, #33
 3216 0140 06D1     		bne	.L260
3437:TP2824/TP2802.c **** 	{
3438:TP2824/TP2802.c **** 		AHDcmd1=0x00;
 3217              		.loc 1 3438 0
 3218 0142 0022     		movs	r2, #0
 3219 0144 1E4B     		ldr	r3, .L265+20
 3220 0146 1A70     		strb	r2, [r3]
3439:TP2824/TP2802.c **** 		AHDcmd2=0x03;
 3221              		.loc 1 3439 0
 3222 0148 0322     		movs	r2, #3
 3223 014a 1E4B     		ldr	r3, .L265+24
 3224 014c 1A70     		strb	r2, [r3]
 3225 014e 7047     		bx	lr
 3226              	.L260:
3440:TP2824/TP2802.c **** 	}
3441:TP2824/TP2802.c **** 	else if(TVI_Command==0x22)//TOA  PRESET LOAD
 3227              		.loc 1 3441 0
 3228 0150 222B     		cmp	r3, #34
 3229 0152 06D1     		bne	.L261
3442:TP2824/TP2802.c **** 	{
3443:TP2824/TP2802.c **** 		AHDcmd1=0x00;
 3230              		.loc 1 3443 0
 3231 0154 0022     		movs	r2, #0
ARM GAS  /tmp/ccSZlabO.s 			page 122


 3232 0156 1A4B     		ldr	r3, .L265+20
 3233 0158 1A70     		strb	r2, [r3]
3444:TP2824/TP2802.c **** 		AHDcmd2=0x07;
 3234              		.loc 1 3444 0
 3235 015a 0722     		movs	r2, #7
 3236 015c 194B     		ldr	r3, .L265+24
 3237 015e 1A70     		strb	r2, [r3]
 3238 0160 7047     		bx	lr
 3239              	.L261:
3445:TP2824/TP2802.c **** 	}
3446:TP2824/TP2802.c **** 	else if(TVI_Command==0x23)//TOA  Auto Scan
 3240              		.loc 1 3446 0
 3241 0162 232B     		cmp	r3, #35
 3242 0164 06D1     		bne	.L262
3447:TP2824/TP2802.c **** 	{
3448:TP2824/TP2802.c **** 		AHDcmd1=0x00;
 3243              		.loc 1 3448 0
 3244 0166 0022     		movs	r2, #0
 3245 0168 154B     		ldr	r3, .L265+20
 3246 016a 1A70     		strb	r2, [r3]
3449:TP2824/TP2802.c **** 		AHDcmd2=0x07;
 3247              		.loc 1 3449 0
 3248 016c 0722     		movs	r2, #7
 3249 016e 154B     		ldr	r3, .L265+24
 3250 0170 1A70     		strb	r2, [r3]
 3251 0172 7047     		bx	lr
 3252              	.L262:
3450:TP2824/TP2802.c **** 	}
3451:TP2824/TP2802.c **** 	else if(TVI_Command==0x24)//TOA  Group Tour
 3253              		.loc 1 3451 0
 3254 0174 242B     		cmp	r3, #36
 3255 0176 06D1     		bne	.L263
3452:TP2824/TP2802.c **** 	{
3453:TP2824/TP2802.c **** 		AHDcmd1=0x00;
 3256              		.loc 1 3453 0
 3257 0178 0022     		movs	r2, #0
 3258 017a 114B     		ldr	r3, .L265+20
 3259 017c 1A70     		strb	r2, [r3]
3454:TP2824/TP2802.c **** 		AHDcmd2=0x07;
 3260              		.loc 1 3454 0
 3261 017e 0722     		movs	r2, #7
 3262 0180 104B     		ldr	r3, .L265+24
 3263 0182 1A70     		strb	r2, [r3]
 3264 0184 7047     		bx	lr
 3265              	.L263:
3455:TP2824/TP2802.c **** 	}
3456:TP2824/TP2802.c **** 	else if(TVI_Command==0x25)//TOA  OSD MENU
 3266              		.loc 1 3456 0
 3267 0186 252B     		cmp	r3, #37
 3268 0188 06D1     		bne	.L264
3457:TP2824/TP2802.c **** 	{
3458:TP2824/TP2802.c **** //		AHDcmd1=0x00;
3459:TP2824/TP2802.c **** //		AHDcmd2=0x07;
3460:TP2824/TP2802.c **** 
3461:TP2824/TP2802.c **** 		AHDcmd1=0x02;
 3269              		.loc 1 3461 0
 3270 018a 0222     		movs	r2, #2
ARM GAS  /tmp/ccSZlabO.s 			page 123


 3271 018c 0C4B     		ldr	r3, .L265+20
 3272 018e 1A70     		strb	r2, [r3]
3462:TP2824/TP2802.c **** 		AHDcmd2=0x00;
 3273              		.loc 1 3462 0
 3274 0190 0022     		movs	r2, #0
 3275 0192 0C4B     		ldr	r3, .L265+24
 3276 0194 1A70     		strb	r2, [r3]
 3277 0196 7047     		bx	lr
 3278              	.L264:
3463:TP2824/TP2802.c **** 	}
3464:TP2824/TP2802.c **** 	else if(TVI_Command==0x26)//TOA  Focus Adjust
 3279              		.loc 1 3464 0
 3280 0198 262B     		cmp	r3, #38
 3281 019a 05D1     		bne	.L242
3465:TP2824/TP2802.c **** 	{
3466:TP2824/TP2802.c **** 		AHDcmd1=0x00;
 3282              		.loc 1 3466 0
 3283 019c 0022     		movs	r2, #0
 3284 019e 084B     		ldr	r3, .L265+20
 3285 01a0 1A70     		strb	r2, [r3]
3467:TP2824/TP2802.c **** 		AHDcmd2=0x07;
 3286              		.loc 1 3467 0
 3287 01a2 0722     		movs	r2, #7
 3288 01a4 074B     		ldr	r3, .L265+24
 3289 01a6 1A70     		strb	r2, [r3]
 3290              	.L242:
 3291 01a8 7047     		bx	lr
 3292              	.L266:
 3293 01aa 00BF     		.align	2
 3294              	.L265:
 3295 01ac 00000000 		.word	TVI_speed
 3296 01b0 00000000 		.word	AHDcmd3
 3297 01b4 00000000 		.word	presetNum
 3298 01b8 00000000 		.word	AHDcmd4
 3299 01bc 00000000 		.word	TVI_Command
 3300 01c0 00000000 		.word	AHDcmd1
 3301 01c4 00000000 		.word	AHDcmd2
 3302              		.cfi_endproc
 3303              	.LFE93:
 3305              		.section	.text.ACPSTOPCOMMAND,"ax",%progbits
 3306              		.align	2
 3307              		.global	ACPSTOPCOMMAND
 3308              		.thumb
 3309              		.thumb_func
 3311              	ACPSTOPCOMMAND:
 3312              	.LFB94:
3468:TP2824/TP2802.c **** 	}
3469:TP2824/TP2802.c **** 
3470:TP2824/TP2802.c **** }
3471:TP2824/TP2802.c **** void ACPSTOPCOMMAND(void)
3472:TP2824/TP2802.c **** {
 3313              		.loc 1 3472 0
 3314              		.cfi_startproc
 3315              		@ args = 0, pretend = 0, frame = 0
 3316              		@ frame_needed = 0, uses_anonymous_args = 0
 3317 0000 08B5     		push	{r3, lr}
 3318              	.LCFI29:
ARM GAS  /tmp/ccSZlabO.s 			page 124


 3319              		.cfi_def_cfa_offset 8
 3320              		.cfi_offset 3, -8
 3321              		.cfi_offset 14, -4
3473:TP2824/TP2802.c **** 	//stop command
3474:TP2824/TP2802.c **** 	tp28xx_byte_write(0x5a, 0x00);
 3322              		.loc 1 3474 0
 3323 0002 5A20     		movs	r0, #90
 3324 0004 0021     		movs	r1, #0
 3325 0006 FFF7FEFF 		bl	tp28xx_byte_write
 3326              	.LVL425:
3475:TP2824/TP2802.c **** 	tp28xx_byte_write(0x60, 0x00);
 3327              		.loc 1 3475 0
 3328 000a 6020     		movs	r0, #96
 3329 000c 0021     		movs	r1, #0
 3330 000e FFF7FEFF 		bl	tp28xx_byte_write
 3331              	.LVL426:
3476:TP2824/TP2802.c **** 	tp28xx_byte_write(0x66, 0x00);
 3332              		.loc 1 3476 0
 3333 0012 6620     		movs	r0, #102
 3334 0014 0021     		movs	r1, #0
 3335 0016 FFF7FEFF 		bl	tp28xx_byte_write
 3336              	.LVL427:
3477:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6c, 0x00);
 3337              		.loc 1 3477 0
 3338 001a 6C20     		movs	r0, #108
 3339 001c 0021     		movs	r1, #0
 3340 001e FFF7FEFF 		bl	tp28xx_byte_write
 3341              	.LVL428:
3478:TP2824/TP2802.c **** 	
3479:TP2824/TP2802.c **** 	
3480:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6f, 0x45);
 3342              		.loc 1 3480 0
 3343 0022 6F20     		movs	r0, #111
 3344 0024 4521     		movs	r1, #69
 3345 0026 FFF7FEFF 		bl	tp28xx_byte_write
 3346              	.LVL429:
3481:TP2824/TP2802.c **** 	//delay(5);//50ms	//20210514
3482:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6f, 0x44);
 3347              		.loc 1 3482 0
 3348 002a 6F20     		movs	r0, #111
 3349 002c 4421     		movs	r1, #68
 3350 002e FFF7FEFF 		bl	tp28xx_byte_write
 3351              	.LVL430:
3483:TP2824/TP2802.c **** 	
3484:TP2824/TP2802.c **** 	HAL_Delay(35);		 //Delay 1Vsync(~33.3msec)//20210514
 3352              		.loc 1 3484 0
 3353 0032 2320     		movs	r0, #35
 3354 0034 FFF7FEFF 		bl	HAL_Delay
 3355              	.LVL431:
3485:TP2824/TP2802.c **** 
3486:TP2824/TP2802.c **** 	//stop command
3487:TP2824/TP2802.c **** 	tp28xx_byte_write(0x5a, 0x00);
 3356              		.loc 1 3487 0
 3357 0038 5A20     		movs	r0, #90
 3358 003a 0021     		movs	r1, #0
 3359 003c FFF7FEFF 		bl	tp28xx_byte_write
 3360              	.LVL432:
ARM GAS  /tmp/ccSZlabO.s 			page 125


3488:TP2824/TP2802.c **** 	tp28xx_byte_write(0x60, 0x00);
 3361              		.loc 1 3488 0
 3362 0040 6020     		movs	r0, #96
 3363 0042 0021     		movs	r1, #0
 3364 0044 FFF7FEFF 		bl	tp28xx_byte_write
 3365              	.LVL433:
3489:TP2824/TP2802.c **** 	tp28xx_byte_write(0x66, 0x00);
 3366              		.loc 1 3489 0
 3367 0048 6620     		movs	r0, #102
 3368 004a 0021     		movs	r1, #0
 3369 004c FFF7FEFF 		bl	tp28xx_byte_write
 3370              	.LVL434:
3490:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6c, 0x00);
 3371              		.loc 1 3490 0
 3372 0050 6C20     		movs	r0, #108
 3373 0052 0021     		movs	r1, #0
 3374 0054 FFF7FEFF 		bl	tp28xx_byte_write
 3375              	.LVL435:
3491:TP2824/TP2802.c **** 
3492:TP2824/TP2802.c **** 
3493:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6f, 0x45);
 3376              		.loc 1 3493 0
 3377 0058 6F20     		movs	r0, #111
 3378 005a 4521     		movs	r1, #69
 3379 005c FFF7FEFF 		bl	tp28xx_byte_write
 3380              	.LVL436:
3494:TP2824/TP2802.c **** 	//delay(5);//50ms	//20210514
3495:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6f, 0x44);
 3381              		.loc 1 3495 0
 3382 0060 6F20     		movs	r0, #111
 3383 0062 4421     		movs	r1, #68
 3384 0064 FFF7FEFF 		bl	tp28xx_byte_write
 3385              	.LVL437:
3496:TP2824/TP2802.c **** 
3497:TP2824/TP2802.c **** 	HAL_Delay(35);		 //Delay 1Vsync(~33.3msec)//20210514
 3386              		.loc 1 3497 0
 3387 0068 2320     		movs	r0, #35
 3388 006a FFF7FEFF 		bl	HAL_Delay
 3389              	.LVL438:
 3390 006e 08BD     		pop	{r3, pc}
 3391              		.cfi_endproc
 3392              	.LFE94:
 3394              		.section	.text.Get_2824cIrq,"ax",%progbits
 3395              		.align	2
 3396              		.global	Get_2824cIrq
 3397              		.thumb
 3398              		.thumb_func
 3400              	Get_2824cIrq:
 3401              	.LFB95:
3498:TP2824/TP2802.c **** 
3499:TP2824/TP2802.c **** }
3500:TP2824/TP2802.c **** 	
3501:TP2824/TP2802.c **** void Get_2824cIrq(void)//cocrx
3502:TP2824/TP2802.c **** {
 3402              		.loc 1 3502 0
 3403              		.cfi_startproc
 3404              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccSZlabO.s 			page 126


 3405              		@ frame_needed = 0, uses_anonymous_args = 0
3503:TP2824/TP2802.c **** 	tByte addr,pcnt,RegB6;
3504:TP2824/TP2802.c **** 	//tByte temp;
3505:TP2824/TP2802.c **** /*
3506:TP2824/TP2802.c **** 	if((count[0] > (EQ_COUNT+2) && state[0] == VIDEO_LOCKED) || 
3507:TP2824/TP2802.c **** 	    (count[1] > (EQ_COUNT+2) && state[1] == VIDEO_LOCKED) || 
3508:TP2824/TP2802.c **** 	    (count[2] > (EQ_COUNT+2) && state[2] == VIDEO_LOCKED) ||
3509:TP2824/TP2802.c **** 	    (count[3] > (EQ_COUNT+2) && state[3] == VIDEO_LOCKED))
3510:TP2824/TP2802.c **** 	*/
3511:TP2824/TP2802.c **** 		if((count[0] > (EQ_COUNT+2) && state[0] == VIDEO_LOCKED))
 3406              		.loc 1 3511 0
 3407 0000 B24B     		ldr	r3, .L338
 3408 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3409 0004 162B     		cmp	r3, #22
 3410 0006 40F2A483 		bls	.L337
 3411              		.loc 1 3511 0 is_stmt 0 discriminator 1
 3412 000a B14B     		ldr	r3, .L338+4
 3413 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3414 000e 022B     		cmp	r3, #2
 3415 0010 40F09F83 		bne	.L337
3502:TP2824/TP2802.c **** 	tByte addr,pcnt,RegB6;
 3416              		.loc 1 3502 0 is_stmt 1
 3417 0014 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3418              	.LCFI30:
 3419              		.cfi_def_cfa_offset 28
 3420              		.cfi_offset 4, -28
 3421              		.cfi_offset 5, -24
 3422              		.cfi_offset 6, -20
 3423              		.cfi_offset 7, -16
 3424              		.cfi_offset 8, -12
 3425              		.cfi_offset 9, -8
 3426              		.cfi_offset 14, -4
 3427 0018 83B0     		sub	sp, sp, #12
 3428              	.LCFI31:
 3429              		.cfi_def_cfa_offset 40
3512:TP2824/TP2802.c ****        {       
3513:TP2824/TP2802.c ****       			 
3514:TP2824/TP2802.c **** 		SetRegPage(0x04);
 3430              		.loc 1 3514 0
 3431 001a 0420     		movs	r0, #4
 3432 001c FFF7FEFF 		bl	SetRegPage
 3433              	.LVL439:
3515:TP2824/TP2802.c **** 		delay(1);//5ms
 3434              		.loc 1 3515 0
 3435 0020 0120     		movs	r0, #1
 3436 0022 FFF7FEFF 		bl	delay
 3437              	.LVL440:
3516:TP2824/TP2802.c **** 
3517:TP2824/TP2802.c **** 			RegB6=tp28xx_byte_read(0xB6);
 3438              		.loc 1 3517 0
 3439 0026 B620     		movs	r0, #182
 3440 0028 FFF7FEFF 		bl	tp28xx_byte_read
 3441              	.LVL441:
 3442 002c 0646     		mov	r6, r0
 3443              	.LVL442:
3518:TP2824/TP2802.c **** 			tp28xx_byte_read(0xB5);
 3444              		.loc 1 3518 0
ARM GAS  /tmp/ccSZlabO.s 			page 127


 3445 002e B520     		movs	r0, #181
 3446 0030 FFF7FEFF 		bl	tp28xx_byte_read
 3447              	.LVL443:
3519:TP2824/TP2802.c **** 			tp28xx_byte_read(0xB4);
 3448              		.loc 1 3519 0
 3449 0034 B420     		movs	r0, #180
 3450 0036 FFF7FEFF 		bl	tp28xx_byte_read
 3451              	.LVL444:
3520:TP2824/TP2802.c **** 
3521:TP2824/TP2802.c **** 			#if 1
3522:TP2824/TP2802.c **** //PTZ RX	//TVI_1080P COC
3523:TP2824/TP2802.c **** 		if((RegB6&0xF0) != 0)//VnRXIRQ
 3452              		.loc 1 3523 0
 3453 003a 16F0F00F 		tst	r6, #240
 3454 003e 00F09C81 		beq	.L271
3524:TP2824/TP2802.c **** 		{
3525:TP2824/TP2802.c **** 			//V4RXIRQ---
3526:TP2824/TP2802.c **** 			if((RegB6&0x80) != 0  && count[3] > (EQ_COUNT+2)/*&&(state[3] == VIDEO_LOCKED)&&std[3]==TVI && m
 3455              		.loc 1 3526 0
 3456 0042 16F0800F 		tst	r6, #128
 3457 0046 5DD0     		beq	.L272
 3458              		.loc 1 3526 0 is_stmt 0 discriminator 1
 3459 0048 A04B     		ldr	r3, .L338
 3460 004a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3461 004c 162B     		cmp	r3, #22
 3462 004e 59D9     		bls	.L272
3527:TP2824/TP2802.c **** 			{
3528:TP2824/TP2802.c **** 				SetRegPage(0x03);
 3463              		.loc 1 3528 0 is_stmt 1
 3464 0050 0320     		movs	r0, #3
 3465 0052 FFF7FEFF 		bl	SetRegPage
 3466              	.LVL445:
3529:TP2824/TP2802.c **** 				//delay(1);//5ms
3530:TP2824/TP2802.c **** 				pcnt=0;
 3467              		.loc 1 3530 0
 3468 0056 0025     		movs	r5, #0
3531:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)//Line1 & Line2
 3469              		.loc 1 3531 0
 3470 0058 8A24     		movs	r4, #138
 3471 005a 08E0     		b	.L273
 3472              	.LVL446:
 3473              	.L274:
3532:TP2824/TP2802.c **** 				{
3533:TP2824/TP2802.c **** 					tpRxD[pcnt] = tp28xx_byte_read(addr);
 3474              		.loc 1 3533 0 discriminator 3
 3475 005c 2046     		mov	r0, r4
 3476 005e FFF7FEFF 		bl	tp28xx_byte_read
 3477              	.LVL447:
 3478 0062 9C4B     		ldr	r3, .L338+8
 3479 0064 5855     		strb	r0, [r3, r5]
3534:TP2824/TP2802.c **** 					pcnt++;
 3480              		.loc 1 3534 0 discriminator 3
 3481 0066 0135     		adds	r5, r5, #1
 3482              	.LVL448:
 3483 0068 EDB2     		uxtb	r5, r5
 3484              	.LVL449:
3531:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)//Line1 & Line2
ARM GAS  /tmp/ccSZlabO.s 			page 128


 3485              		.loc 1 3531 0 discriminator 3
 3486 006a 0134     		adds	r4, r4, #1
 3487              	.LVL450:
 3488 006c E4B2     		uxtb	r4, r4
 3489              	.LVL451:
 3490              	.L273:
3531:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)//Line1 & Line2
 3491              		.loc 1 3531 0 is_stmt 0 discriminator 1
 3492 006e A12C     		cmp	r4, #161
 3493 0070 F4D9     		bls	.L274
3535:TP2824/TP2802.c **** 				}
3536:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x00);
 3494              		.loc 1 3536 0 is_stmt 1
 3495 0072 A720     		movs	r0, #167
 3496 0074 0021     		movs	r1, #0
 3497 0076 FFF7FEFF 		bl	tp28xx_byte_write
 3498              	.LVL452:
3537:TP2824/TP2802.c **** 				//delay(1);//5ms
3538:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x83);
 3499              		.loc 1 3538 0
 3500 007a A720     		movs	r0, #167
 3501 007c 8321     		movs	r1, #131
 3502 007e FFF7FEFF 		bl	tp28xx_byte_write
 3503              	.LVL453:
3539:TP2824/TP2802.c **** 				
3540:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<5;pcnt++)
 3504              		.loc 1 3540 0
 3505 0082 0023     		movs	r3, #0
 3506 0084 05E0     		b	.L275
 3507              	.LVL454:
 3508              	.L276:
3541:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+1];
 3509              		.loc 1 3541 0 discriminator 3
 3510 0086 5A1C     		adds	r2, r3, #1
 3511 0088 9249     		ldr	r1, .L338+8
 3512 008a 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 3513 008c 9249     		ldr	r1, .L338+12
 3514 008e C854     		strb	r0, [r1, r3]
3540:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+1];
 3515              		.loc 1 3540 0 discriminator 3
 3516 0090 D3B2     		uxtb	r3, r2
 3517              	.LVL455:
 3518              	.L275:
3540:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+1];
 3519              		.loc 1 3540 0 is_stmt 0 discriminator 1
 3520 0092 042B     		cmp	r3, #4
 3521 0094 F7D9     		bls	.L276
 3522 0096 0523     		movs	r3, #5
 3523              	.LVL456:
 3524 0098 06E0     		b	.L277
 3525              	.LVL457:
 3526              	.L278:
3542:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
3543:TP2824/TP2802.c **** 					COCRX4[pcnt]=tpRxD[pcnt+2];
 3527              		.loc 1 3543 0 is_stmt 1 discriminator 3
 3528 009a 9A1C     		adds	r2, r3, #2
 3529 009c 8D49     		ldr	r1, .L338+8
ARM GAS  /tmp/ccSZlabO.s 			page 129


 3530 009e 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3531 00a0 8D4A     		ldr	r2, .L338+12
 3532 00a2 D154     		strb	r1, [r2, r3]
3542:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
 3533              		.loc 1 3542 0 discriminator 3
 3534 00a4 0133     		adds	r3, r3, #1
 3535              	.LVL458:
 3536 00a6 DBB2     		uxtb	r3, r3
 3537              	.LVL459:
 3538              	.L277:
3542:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
 3539              		.loc 1 3542 0 is_stmt 0 discriminator 1
 3540 00a8 092B     		cmp	r3, #9
 3541 00aa F6D9     		bls	.L278
3544:TP2824/TP2802.c **** 		#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3545:TP2824/TP2802.c **** 			//GraphicsPrint(CYAN,"(TP_PRES_DOWN=%02x)",(WORD)TP_PRES_DOWN); 		
3546:TP2824/TP2802.c **** 				printf("\r\nCOC4:");
 3542              		.loc 1 3546 0 is_stmt 1
 3543 00ac 8B48     		ldr	r0, .L338+16
 3544 00ae FFF7FEFF 		bl	printf
 3545              	.LVL460:
3547:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 3546              		.loc 1 3547 0
 3547 00b2 0024     		movs	r4, #0
 3548              	.LVL461:
 3549 00b4 06E0     		b	.L279
 3550              	.LVL462:
 3551              	.L280:
3548:TP2824/TP2802.c **** 					printf(" %02X",COCRX4[pcnt]);
 3552              		.loc 1 3548 0 discriminator 3
 3553 00b6 8A48     		ldr	r0, .L338+20
 3554 00b8 874B     		ldr	r3, .L338+12
 3555 00ba 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 3556 00bc FFF7FEFF 		bl	printf
 3557              	.LVL463:
3547:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 3558              		.loc 1 3547 0 discriminator 3
 3559 00c0 0134     		adds	r4, r4, #1
 3560              	.LVL464:
 3561 00c2 E4B2     		uxtb	r4, r4
 3562              	.LVL465:
 3563              	.L279:
3547:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 3564              		.loc 1 3547 0 is_stmt 0 discriminator 1
 3565 00c4 052C     		cmp	r4, #5
 3566 00c6 F6D9     		bls	.L280
3549:TP2824/TP2802.c **** 				printf(" %02X",COCRX4[9]);
 3567              		.loc 1 3549 0 is_stmt 1
 3568 00c8 834C     		ldr	r4, .L338+12
 3569              	.LVL466:
 3570 00ca 8548     		ldr	r0, .L338+20
 3571 00cc 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 3572 00ce FFF7FEFF 		bl	printf
 3573              	.LVL467:
3550:TP2824/TP2802.c **** 		#endif		
3551:TP2824/TP2802.c **** 				
3552:TP2824/TP2802.c **** 				//BOX on line  return 0x61, 0x01, 0x04, 0x9E,Lcd VINn=0x01 / Box CHn=0x04
ARM GAS  /tmp/ccSZlabO.s 			page 130


3553:TP2824/TP2802.c **** 				//COC2: 02 B5 01 61 01 02 9E
3554:TP2824/TP2802.c **** 				if(COCRX4[3]==0x61 && COCRX4[9]==0x9E )
 3574              		.loc 1 3554 0
 3575 00d2 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 3576 00d4 612B     		cmp	r3, #97
 3577 00d6 15D1     		bne	.L272
 3578              		.loc 1 3554 0 is_stmt 0 discriminator 1
 3579 00d8 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 3580 00da 9E2B     		cmp	r3, #158
 3581 00dc 12D1     		bne	.L272
3555:TP2824/TP2802.c **** 				{
3556:TP2824/TP2802.c **** 					QuadBoxId|=8;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
 3582              		.loc 1 3556 0 is_stmt 1
 3583 00de 814B     		ldr	r3, .L338+24
 3584 00e0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3585 00e2 41F00801 		orr	r1, r1, #8
 3586 00e6 1970     		strb	r1, [r3]
3557:TP2824/TP2802.c **** 
3558:TP2824/TP2802.c **** 				#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3559:TP2824/TP2802.c **** 					printf("QuadBoxId %02x\r\n",  QuadBoxId);
 3587              		.loc 1 3559 0
 3588 00e8 7F48     		ldr	r0, .L338+28
 3589 00ea FFF7FEFF 		bl	printf
 3590              	.LVL468:
3560:TP2824/TP2802.c **** 				#endif
3561:TP2824/TP2802.c **** 
3562:TP2824/TP2802.c **** 				if(COCRX4[4]==0x38 && COCRX4[5]==0x02 )
 3591              		.loc 1 3562 0
 3592 00ee 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3593 00f0 382B     		cmp	r3, #56
 3594 00f2 07D1     		bne	.L272
 3595              		.loc 1 3562 0 is_stmt 0 discriminator 1
 3596 00f4 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 3597 00f6 022B     		cmp	r3, #2
 3598 00f8 04D1     		bne	.L272
3563:TP2824/TP2802.c **** 					{
3564:TP2824/TP2802.c **** 					//Flisheye_CAM[CH4]=TRUE;					
3565:TP2824/TP2802.c **** 					//WriteEEP(EEP_FlishCAM4,TRUE);
3566:TP2824/TP2802.c **** 					//Flisheye_VLOSS_Count[CH4]=0;
3567:TP2824/TP2802.c **** 					QuadBoxId&=~(0x08);
 3599              		.loc 1 3567 0 is_stmt 1
 3600 00fa 7A4A     		ldr	r2, .L338+24
 3601 00fc 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3602 00fe 23F00803 		bic	r3, r3, #8
 3603 0102 1370     		strb	r3, [r2]
 3604              	.L272:
3568:TP2824/TP2802.c **** 					}
3569:TP2824/TP2802.c **** 				}
3570:TP2824/TP2802.c **** 			}
3571:TP2824/TP2802.c **** 			
3572:TP2824/TP2802.c **** 			//V3RXIRQ---
3573:TP2824/TP2802.c **** 			if((RegB6&0x40) != 0  && count[2] > (EQ_COUNT+2)/*&&(state[2] == VIDEO_LOCKED)&&std[2]==TVI && m
 3605              		.loc 1 3573 0
 3606 0104 16F0400F 		tst	r6, #64
 3607 0108 5DD0     		beq	.L281
 3608              		.loc 1 3573 0 is_stmt 0 discriminator 1
 3609 010a 704B     		ldr	r3, .L338
ARM GAS  /tmp/ccSZlabO.s 			page 131


 3610 010c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3611 010e 162B     		cmp	r3, #22
 3612 0110 59D9     		bls	.L281
3574:TP2824/TP2802.c **** 			{
3575:TP2824/TP2802.c **** 				SetRegPage(0x02);
 3613              		.loc 1 3575 0 is_stmt 1
 3614 0112 0220     		movs	r0, #2
 3615 0114 FFF7FEFF 		bl	SetRegPage
 3616              	.LVL469:
3576:TP2824/TP2802.c **** 				//delay(1);//5ms
3577:TP2824/TP2802.c **** 				
3578:TP2824/TP2802.c **** 				pcnt=0;
 3617              		.loc 1 3578 0
 3618 0118 0025     		movs	r5, #0
3579:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
 3619              		.loc 1 3579 0
 3620 011a 8A24     		movs	r4, #138
 3621 011c 08E0     		b	.L282
 3622              	.LVL470:
 3623              	.L283:
3580:TP2824/TP2802.c **** 				{
3581:TP2824/TP2802.c **** 					tpRxD[pcnt] = tp28xx_byte_read(addr);
 3624              		.loc 1 3581 0 discriminator 3
 3625 011e 2046     		mov	r0, r4
 3626 0120 FFF7FEFF 		bl	tp28xx_byte_read
 3627              	.LVL471:
 3628 0124 6B4B     		ldr	r3, .L338+8
 3629 0126 5855     		strb	r0, [r3, r5]
3582:TP2824/TP2802.c **** 					pcnt++;
 3630              		.loc 1 3582 0 discriminator 3
 3631 0128 0135     		adds	r5, r5, #1
 3632              	.LVL472:
 3633 012a EDB2     		uxtb	r5, r5
 3634              	.LVL473:
3579:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
 3635              		.loc 1 3579 0 discriminator 3
 3636 012c 0134     		adds	r4, r4, #1
 3637              	.LVL474:
 3638 012e E4B2     		uxtb	r4, r4
 3639              	.LVL475:
 3640              	.L282:
3579:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
 3641              		.loc 1 3579 0 is_stmt 0 discriminator 1
 3642 0130 A12C     		cmp	r4, #161
 3643 0132 F4D9     		bls	.L283
3583:TP2824/TP2802.c **** 				}
3584:TP2824/TP2802.c **** 				
3585:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x00);
 3644              		.loc 1 3585 0 is_stmt 1
 3645 0134 A720     		movs	r0, #167
 3646 0136 0021     		movs	r1, #0
 3647 0138 FFF7FEFF 		bl	tp28xx_byte_write
 3648              	.LVL476:
3586:TP2824/TP2802.c **** 				//delay(1);//5ms
3587:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x83);
 3649              		.loc 1 3587 0
 3650 013c A720     		movs	r0, #167
ARM GAS  /tmp/ccSZlabO.s 			page 132


 3651 013e 8321     		movs	r1, #131
 3652 0140 FFF7FEFF 		bl	tp28xx_byte_write
 3653              	.LVL477:
3588:TP2824/TP2802.c **** 				
3589:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<5;pcnt++)
 3654              		.loc 1 3589 0
 3655 0144 0023     		movs	r3, #0
 3656 0146 05E0     		b	.L284
 3657              	.LVL478:
 3658              	.L285:
3590:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+1];
 3659              		.loc 1 3590 0 discriminator 3
 3660 0148 5A1C     		adds	r2, r3, #1
 3661 014a 6249     		ldr	r1, .L338+8
 3662 014c 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 3663 014e 6749     		ldr	r1, .L338+32
 3664 0150 C854     		strb	r0, [r1, r3]
3589:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+1];
 3665              		.loc 1 3589 0 discriminator 3
 3666 0152 D3B2     		uxtb	r3, r2
 3667              	.LVL479:
 3668              	.L284:
3589:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+1];
 3669              		.loc 1 3589 0 is_stmt 0 discriminator 1
 3670 0154 042B     		cmp	r3, #4
 3671 0156 F7D9     		bls	.L285
 3672 0158 0523     		movs	r3, #5
 3673              	.LVL480:
 3674 015a 06E0     		b	.L286
 3675              	.LVL481:
 3676              	.L287:
3591:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
3592:TP2824/TP2802.c **** 					COCRX3[pcnt]=tpRxD[pcnt+2];
 3677              		.loc 1 3592 0 is_stmt 1 discriminator 3
 3678 015c 9A1C     		adds	r2, r3, #2
 3679 015e 5D49     		ldr	r1, .L338+8
 3680 0160 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3681 0162 624A     		ldr	r2, .L338+32
 3682 0164 D154     		strb	r1, [r2, r3]
3591:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
 3683              		.loc 1 3591 0 discriminator 3
 3684 0166 0133     		adds	r3, r3, #1
 3685              	.LVL482:
 3686 0168 DBB2     		uxtb	r3, r3
 3687              	.LVL483:
 3688              	.L286:
3591:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
 3689              		.loc 1 3591 0 is_stmt 0 discriminator 1
 3690 016a 092B     		cmp	r3, #9
 3691 016c F6D9     		bls	.L287
3593:TP2824/TP2802.c **** 
3594:TP2824/TP2802.c **** 				#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3595:TP2824/TP2802.c **** 				printf("\r\nCOC3:");
 3692              		.loc 1 3595 0 is_stmt 1
 3693 016e 6048     		ldr	r0, .L338+36
 3694 0170 FFF7FEFF 		bl	printf
 3695              	.LVL484:
ARM GAS  /tmp/ccSZlabO.s 			page 133


3596:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 3696              		.loc 1 3596 0
 3697 0174 0024     		movs	r4, #0
 3698              	.LVL485:
 3699 0176 06E0     		b	.L288
 3700              	.LVL486:
 3701              	.L289:
3597:TP2824/TP2802.c **** 					printf(" %02X",COCRX3[pcnt]);
 3702              		.loc 1 3597 0 discriminator 3
 3703 0178 5948     		ldr	r0, .L338+20
 3704 017a 5C4B     		ldr	r3, .L338+32
 3705 017c 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 3706 017e FFF7FEFF 		bl	printf
 3707              	.LVL487:
3596:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 3708              		.loc 1 3596 0 discriminator 3
 3709 0182 0134     		adds	r4, r4, #1
 3710              	.LVL488:
 3711 0184 E4B2     		uxtb	r4, r4
 3712              	.LVL489:
 3713              	.L288:
3596:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 3714              		.loc 1 3596 0 is_stmt 0 discriminator 1
 3715 0186 052C     		cmp	r4, #5
 3716 0188 F6D9     		bls	.L289
3598:TP2824/TP2802.c **** 				printf(" %02X",COCRX3[9]);
 3717              		.loc 1 3598 0 is_stmt 1
 3718 018a 584C     		ldr	r4, .L338+32
 3719              	.LVL490:
 3720 018c 5448     		ldr	r0, .L338+20
 3721 018e 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 3722 0190 FFF7FEFF 		bl	printf
 3723              	.LVL491:
3599:TP2824/TP2802.c **** 				#endif
3600:TP2824/TP2802.c **** 
3601:TP2824/TP2802.c **** 				//BOX on line  return 0x61, 0x01, 0x04, 0x9E,Lcd VINn=0x01 / Box CHn=0x04
3602:TP2824/TP2802.c **** 				//COC2: 02 B5 01 61 01 02 9E
3603:TP2824/TP2802.c **** 				if(COCRX3[3]==0x61 && COCRX3[9]==0x9E)
 3724              		.loc 1 3603 0
 3725 0194 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 3726 0196 612B     		cmp	r3, #97
 3727 0198 15D1     		bne	.L281
 3728              		.loc 1 3603 0 is_stmt 0 discriminator 1
 3729 019a 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 3730 019c 9E2B     		cmp	r3, #158
 3731 019e 12D1     		bne	.L281
3604:TP2824/TP2802.c **** 				{
3605:TP2824/TP2802.c **** 					QuadBoxId|=4;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
 3732              		.loc 1 3605 0 is_stmt 1
 3733 01a0 504B     		ldr	r3, .L338+24
 3734 01a2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3735 01a4 41F00401 		orr	r1, r1, #4
 3736 01a8 1970     		strb	r1, [r3]
3606:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3607:TP2824/TP2802.c **** 					printf("QuadBoxId %02x\r\n",  QuadBoxId);
 3737              		.loc 1 3607 0
 3738 01aa 4F48     		ldr	r0, .L338+28
ARM GAS  /tmp/ccSZlabO.s 			page 134


 3739 01ac FFF7FEFF 		bl	printf
 3740              	.LVL492:
3608:TP2824/TP2802.c **** 					#endif
3609:TP2824/TP2802.c **** 
3610:TP2824/TP2802.c **** 				if(COCRX3[4]==0x38 && COCRX3[5]==0x02 )
 3741              		.loc 1 3610 0
 3742 01b0 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3743 01b2 382B     		cmp	r3, #56
 3744 01b4 07D1     		bne	.L281
 3745              		.loc 1 3610 0 is_stmt 0 discriminator 1
 3746 01b6 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 3747 01b8 022B     		cmp	r3, #2
 3748 01ba 04D1     		bne	.L281
3611:TP2824/TP2802.c **** 					{
3612:TP2824/TP2802.c **** 					//Flisheye_CAM[CH3]=TRUE;	
3613:TP2824/TP2802.c **** 					//WriteEEP(EEP_FlishCAM3,TRUE);					
3614:TP2824/TP2802.c **** 					//Flisheye_VLOSS_Count[CH3]=0;
3615:TP2824/TP2802.c **** 					QuadBoxId&=~(0x04);
 3749              		.loc 1 3615 0 is_stmt 1
 3750 01bc 494A     		ldr	r2, .L338+24
 3751 01be 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3752 01c0 23F00403 		bic	r3, r3, #4
 3753 01c4 1370     		strb	r3, [r2]
 3754              	.L281:
3616:TP2824/TP2802.c **** 					}
3617:TP2824/TP2802.c **** 				}	
3618:TP2824/TP2802.c **** 			}
3619:TP2824/TP2802.c **** 			
3620:TP2824/TP2802.c **** 			//V2RXIRQ---
3621:TP2824/TP2802.c **** 			if((RegB6&0x20) != 0  && count[1] > (EQ_COUNT+2)/*&&(state[1] == VIDEO_LOCKED) &&std[1]==TVI && 
 3755              		.loc 1 3621 0
 3756 01c6 16F0200F 		tst	r6, #32
 3757 01ca 5DD0     		beq	.L290
 3758              		.loc 1 3621 0 is_stmt 0 discriminator 1
 3759 01cc 3F4B     		ldr	r3, .L338
 3760 01ce 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3761 01d0 162B     		cmp	r3, #22
 3762 01d2 59D9     		bls	.L290
3622:TP2824/TP2802.c **** 			{
3623:TP2824/TP2802.c **** 				SetRegPage(0x01);
 3763              		.loc 1 3623 0 is_stmt 1
 3764 01d4 0120     		movs	r0, #1
 3765 01d6 FFF7FEFF 		bl	SetRegPage
 3766              	.LVL493:
3624:TP2824/TP2802.c **** 				//delay(1);//5ms
3625:TP2824/TP2802.c **** 				
3626:TP2824/TP2802.c **** 				pcnt=0;
 3767              		.loc 1 3626 0
 3768 01da 0025     		movs	r5, #0
3627:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
 3769              		.loc 1 3627 0
 3770 01dc 8A24     		movs	r4, #138
 3771 01de 08E0     		b	.L291
 3772              	.LVL494:
 3773              	.L292:
3628:TP2824/TP2802.c **** 				{
3629:TP2824/TP2802.c **** 					tpRxD[pcnt] = tp28xx_byte_read(addr);
ARM GAS  /tmp/ccSZlabO.s 			page 135


 3774              		.loc 1 3629 0 discriminator 3
 3775 01e0 2046     		mov	r0, r4
 3776 01e2 FFF7FEFF 		bl	tp28xx_byte_read
 3777              	.LVL495:
 3778 01e6 3B4B     		ldr	r3, .L338+8
 3779 01e8 5855     		strb	r0, [r3, r5]
3630:TP2824/TP2802.c **** 					pcnt++;
 3780              		.loc 1 3630 0 discriminator 3
 3781 01ea 0135     		adds	r5, r5, #1
 3782              	.LVL496:
 3783 01ec EDB2     		uxtb	r5, r5
 3784              	.LVL497:
3627:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
 3785              		.loc 1 3627 0 discriminator 3
 3786 01ee 0134     		adds	r4, r4, #1
 3787              	.LVL498:
 3788 01f0 E4B2     		uxtb	r4, r4
 3789              	.LVL499:
 3790              	.L291:
3627:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
 3791              		.loc 1 3627 0 is_stmt 0 discriminator 1
 3792 01f2 A12C     		cmp	r4, #161
 3793 01f4 F4D9     		bls	.L292
3631:TP2824/TP2802.c **** 				}
3632:TP2824/TP2802.c **** 				
3633:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x00);
 3794              		.loc 1 3633 0 is_stmt 1
 3795 01f6 A720     		movs	r0, #167
 3796 01f8 0021     		movs	r1, #0
 3797 01fa FFF7FEFF 		bl	tp28xx_byte_write
 3798              	.LVL500:
3634:TP2824/TP2802.c **** 				//delay(1);//5ms
3635:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x83);
 3799              		.loc 1 3635 0
 3800 01fe A720     		movs	r0, #167
 3801 0200 8321     		movs	r1, #131
 3802 0202 FFF7FEFF 		bl	tp28xx_byte_write
 3803              	.LVL501:
3636:TP2824/TP2802.c **** 				
3637:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<5;pcnt++)
 3804              		.loc 1 3637 0
 3805 0206 0023     		movs	r3, #0
 3806 0208 05E0     		b	.L293
 3807              	.LVL502:
 3808              	.L294:
3638:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+1];
 3809              		.loc 1 3638 0 discriminator 3
 3810 020a 5A1C     		adds	r2, r3, #1
 3811 020c 3149     		ldr	r1, .L338+8
 3812 020e 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 3813 0210 3849     		ldr	r1, .L338+40
 3814 0212 C854     		strb	r0, [r1, r3]
3637:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+1];
 3815              		.loc 1 3637 0 discriminator 3
 3816 0214 D3B2     		uxtb	r3, r2
 3817              	.LVL503:
 3818              	.L293:
ARM GAS  /tmp/ccSZlabO.s 			page 136


3637:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+1];
 3819              		.loc 1 3637 0 is_stmt 0 discriminator 1
 3820 0216 042B     		cmp	r3, #4
 3821 0218 F7D9     		bls	.L294
 3822 021a 0523     		movs	r3, #5
 3823              	.LVL504:
 3824 021c 06E0     		b	.L295
 3825              	.LVL505:
 3826              	.L296:
3639:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
3640:TP2824/TP2802.c **** 					COCRX2[pcnt]=tpRxD[pcnt+2];
 3827              		.loc 1 3640 0 is_stmt 1 discriminator 3
 3828 021e 9A1C     		adds	r2, r3, #2
 3829 0220 2C49     		ldr	r1, .L338+8
 3830 0222 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3831 0224 334A     		ldr	r2, .L338+40
 3832 0226 D154     		strb	r1, [r2, r3]
3639:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
 3833              		.loc 1 3639 0 discriminator 3
 3834 0228 0133     		adds	r3, r3, #1
 3835              	.LVL506:
 3836 022a DBB2     		uxtb	r3, r3
 3837              	.LVL507:
 3838              	.L295:
3639:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
 3839              		.loc 1 3639 0 is_stmt 0 discriminator 1
 3840 022c 092B     		cmp	r3, #9
 3841 022e F6D9     		bls	.L296
3641:TP2824/TP2802.c **** 
3642:TP2824/TP2802.c **** 				#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3643:TP2824/TP2802.c **** 				printf("\r\nCOC2:");
 3842              		.loc 1 3643 0 is_stmt 1
 3843 0230 3148     		ldr	r0, .L338+44
 3844 0232 FFF7FEFF 		bl	printf
 3845              	.LVL508:
3644:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 3846              		.loc 1 3644 0
 3847 0236 0024     		movs	r4, #0
 3848              	.LVL509:
 3849 0238 06E0     		b	.L297
 3850              	.LVL510:
 3851              	.L298:
3645:TP2824/TP2802.c **** 					printf(" %02X",COCRX2[pcnt]);
 3852              		.loc 1 3645 0 discriminator 3
 3853 023a 2948     		ldr	r0, .L338+20
 3854 023c 2D4B     		ldr	r3, .L338+40
 3855 023e 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 3856 0240 FFF7FEFF 		bl	printf
 3857              	.LVL511:
3644:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 3858              		.loc 1 3644 0 discriminator 3
 3859 0244 0134     		adds	r4, r4, #1
 3860              	.LVL512:
 3861 0246 E4B2     		uxtb	r4, r4
 3862              	.LVL513:
 3863              	.L297:
3644:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
ARM GAS  /tmp/ccSZlabO.s 			page 137


 3864              		.loc 1 3644 0 is_stmt 0 discriminator 1
 3865 0248 052C     		cmp	r4, #5
 3866 024a F6D9     		bls	.L298
3646:TP2824/TP2802.c **** 				printf(" %02X",COCRX2[9]);
 3867              		.loc 1 3646 0 is_stmt 1
 3868 024c 294C     		ldr	r4, .L338+40
 3869              	.LVL514:
 3870 024e 2448     		ldr	r0, .L338+20
 3871 0250 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 3872 0252 FFF7FEFF 		bl	printf
 3873              	.LVL515:
3647:TP2824/TP2802.c **** 				#endif
3648:TP2824/TP2802.c **** 				
3649:TP2824/TP2802.c **** 				//BOX on line  return 0x61, 0x01, 0x04, 0x9E,Lcd VINn=0x01 / Box CHn=0x04
3650:TP2824/TP2802.c **** 				//COC2: 02 B5 01 61 01 02 9E
3651:TP2824/TP2802.c **** 				if(COCRX2[3]==0x61 && COCRX2[9]==0x9E )
 3874              		.loc 1 3651 0
 3875 0256 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 3876 0258 612B     		cmp	r3, #97
 3877 025a 15D1     		bne	.L290
 3878              		.loc 1 3651 0 is_stmt 0 discriminator 1
 3879 025c 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 3880 025e 9E2B     		cmp	r3, #158
 3881 0260 12D1     		bne	.L290
3652:TP2824/TP2802.c **** 				{
3653:TP2824/TP2802.c **** 					QuadBoxId|=2;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
 3882              		.loc 1 3653 0 is_stmt 1
 3883 0262 204B     		ldr	r3, .L338+24
 3884 0264 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3885 0266 41F00201 		orr	r1, r1, #2
 3886 026a 1970     		strb	r1, [r3]
3654:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3655:TP2824/TP2802.c **** 					printf("QuadBoxId %02x\r\n",  QuadBoxId);
 3887              		.loc 1 3655 0
 3888 026c 1E48     		ldr	r0, .L338+28
 3889 026e FFF7FEFF 		bl	printf
 3890              	.LVL516:
3656:TP2824/TP2802.c **** 					#endif
3657:TP2824/TP2802.c **** 
3658:TP2824/TP2802.c **** 				if(COCRX2[4]==0x38 && COCRX2[5]==0x02 )
 3891              		.loc 1 3658 0
 3892 0272 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3893 0274 382B     		cmp	r3, #56
 3894 0276 07D1     		bne	.L290
 3895              		.loc 1 3658 0 is_stmt 0 discriminator 1
 3896 0278 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 3897 027a 022B     		cmp	r3, #2
 3898 027c 04D1     		bne	.L290
3659:TP2824/TP2802.c **** 					{
3660:TP2824/TP2802.c **** 					//Flisheye_CAM[CH2]=TRUE;					
3661:TP2824/TP2802.c **** 					//WriteEEP(EEP_FlishCAM2,TRUE);
3662:TP2824/TP2802.c **** 					//Flisheye_VLOSS_Count[CH2]=0;
3663:TP2824/TP2802.c **** 					QuadBoxId&=~(0x02);
 3899              		.loc 1 3663 0 is_stmt 1
 3900 027e 194A     		ldr	r2, .L338+24
 3901 0280 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3902 0282 23F00203 		bic	r3, r3, #2
ARM GAS  /tmp/ccSZlabO.s 			page 138


 3903 0286 1370     		strb	r3, [r2]
 3904              	.L290:
3664:TP2824/TP2802.c **** 					}
3665:TP2824/TP2802.c **** 				}	
3666:TP2824/TP2802.c **** 			}
3667:TP2824/TP2802.c **** 			
3668:TP2824/TP2802.c **** 			//V1RXIRQ---
3669:TP2824/TP2802.c **** 			if((RegB6&0x10) != 0  && count[0] > (EQ_COUNT+2)/*&&(state[0] == VIDEO_LOCKED) &&std[0]==TVI && 
 3905              		.loc 1 3669 0
 3906 0288 16F0100F 		tst	r6, #16
 3907 028c 75D0     		beq	.L271
 3908              		.loc 1 3669 0 is_stmt 0 discriminator 1
 3909 028e 0F4B     		ldr	r3, .L338
 3910 0290 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3911 0292 162B     		cmp	r3, #22
 3912 0294 71D9     		bls	.L271
3670:TP2824/TP2802.c **** 			{
3671:TP2824/TP2802.c **** 				SetRegPage(0x00);
 3913              		.loc 1 3671 0 is_stmt 1
 3914 0296 0020     		movs	r0, #0
 3915 0298 FFF7FEFF 		bl	SetRegPage
 3916              	.LVL517:
3672:TP2824/TP2802.c **** 				//delay(1);//5ms
3673:TP2824/TP2802.c **** 				
3674:TP2824/TP2802.c **** 				pcnt=0;
 3917              		.loc 1 3674 0
 3918 029c 0025     		movs	r5, #0
3675:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
 3919              		.loc 1 3675 0
 3920 029e 8A24     		movs	r4, #138
 3921 02a0 08E0     		b	.L299
 3922              	.LVL518:
 3923              	.L300:
3676:TP2824/TP2802.c **** 				{
3677:TP2824/TP2802.c **** 					tpRxD[pcnt] = tp28xx_byte_read(addr);
 3924              		.loc 1 3677 0 discriminator 3
 3925 02a2 2046     		mov	r0, r4
 3926 02a4 FFF7FEFF 		bl	tp28xx_byte_read
 3927              	.LVL519:
 3928 02a8 0A4B     		ldr	r3, .L338+8
 3929 02aa 5855     		strb	r0, [r3, r5]
3678:TP2824/TP2802.c **** 					pcnt++;
 3930              		.loc 1 3678 0 discriminator 3
 3931 02ac 0135     		adds	r5, r5, #1
 3932              	.LVL520:
 3933 02ae EDB2     		uxtb	r5, r5
 3934              	.LVL521:
3675:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
 3935              		.loc 1 3675 0 discriminator 3
 3936 02b0 0134     		adds	r4, r4, #1
 3937              	.LVL522:
 3938 02b2 E4B2     		uxtb	r4, r4
 3939              	.LVL523:
 3940              	.L299:
3675:TP2824/TP2802.c **** 				for(addr=0x8A;addr<=0xA1;addr++)
 3941              		.loc 1 3675 0 is_stmt 0 discriminator 1
 3942 02b4 A12C     		cmp	r4, #161
ARM GAS  /tmp/ccSZlabO.s 			page 139


 3943 02b6 F4D9     		bls	.L300
3679:TP2824/TP2802.c **** 				}
3680:TP2824/TP2802.c **** 				
3681:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x00);
 3944              		.loc 1 3681 0 is_stmt 1
 3945 02b8 A720     		movs	r0, #167
 3946 02ba 0021     		movs	r1, #0
 3947 02bc FFF7FEFF 		bl	tp28xx_byte_write
 3948              	.LVL524:
3682:TP2824/TP2802.c **** 				//delay(1);//5ms
3683:TP2824/TP2802.c **** 				tp28xx_byte_write(0xa7, 0x83);
 3949              		.loc 1 3683 0
 3950 02c0 A720     		movs	r0, #167
 3951 02c2 8321     		movs	r1, #131
 3952 02c4 FFF7FEFF 		bl	tp28xx_byte_write
 3953              	.LVL525:
3684:TP2824/TP2802.c **** 				
3685:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<5;pcnt++)
 3954              		.loc 1 3685 0
 3955 02c8 0023     		movs	r3, #0
 3956 02ca 1DE0     		b	.L301
 3957              	.L339:
 3958              		.align	2
 3959              	.L338:
 3960 02cc 00000000 		.word	count
 3961 02d0 00000000 		.word	state
 3962 02d4 00000000 		.word	tpRxD
 3963 02d8 00000000 		.word	COCRX4
 3964 02dc 68010000 		.word	.LC30
 3965 02e0 70010000 		.word	.LC31
 3966 02e4 00000000 		.word	.LANCHOR24
 3967 02e8 78010000 		.word	.LC32
 3968 02ec 00000000 		.word	COCRX3
 3969 02f0 8C010000 		.word	.LC33
 3970 02f4 00000000 		.word	COCRX2
 3971 02f8 94010000 		.word	.LC34
 3972              	.LVL526:
 3973              	.L302:
3686:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+1];
 3974              		.loc 1 3686 0 discriminator 3
 3975 02fc 5A1C     		adds	r2, r3, #1
 3976 02fe BD49     		ldr	r1, .L340
 3977 0300 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 3978 0302 BD49     		ldr	r1, .L340+4
 3979 0304 C854     		strb	r0, [r1, r3]
3685:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+1];
 3980              		.loc 1 3685 0 discriminator 3
 3981 0306 D3B2     		uxtb	r3, r2
 3982              	.LVL527:
 3983              	.L301:
3685:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+1];
 3984              		.loc 1 3685 0 is_stmt 0 discriminator 1
 3985 0308 042B     		cmp	r3, #4
 3986 030a F7D9     		bls	.L302
 3987 030c 0523     		movs	r3, #5
 3988              	.LVL528:
 3989 030e 06E0     		b	.L303
ARM GAS  /tmp/ccSZlabO.s 			page 140


 3990              	.LVL529:
 3991              	.L304:
3687:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
3688:TP2824/TP2802.c **** 					COCRX1[pcnt]=tpRxD[pcnt+2];
 3992              		.loc 1 3688 0 is_stmt 1 discriminator 3
 3993 0310 9A1C     		adds	r2, r3, #2
 3994 0312 B849     		ldr	r1, .L340
 3995 0314 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3996 0316 B84A     		ldr	r2, .L340+4
 3997 0318 D154     		strb	r1, [r2, r3]
3687:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
 3998              		.loc 1 3687 0 discriminator 3
 3999 031a 0133     		adds	r3, r3, #1
 4000              	.LVL530:
 4001 031c DBB2     		uxtb	r3, r3
 4002              	.LVL531:
 4003              	.L303:
3687:TP2824/TP2802.c **** 				for(pcnt=5;pcnt<10;pcnt++)
 4004              		.loc 1 3687 0 is_stmt 0 discriminator 1
 4005 031e 092B     		cmp	r3, #9
 4006 0320 F6D9     		bls	.L304
3689:TP2824/TP2802.c **** 				
3690:TP2824/TP2802.c **** 				#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3691:TP2824/TP2802.c **** 				printf("\r\nCOC1:");
 4007              		.loc 1 3691 0 is_stmt 1
 4008 0322 B648     		ldr	r0, .L340+8
 4009 0324 FFF7FEFF 		bl	printf
 4010              	.LVL532:
3692:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 4011              		.loc 1 3692 0
 4012 0328 0024     		movs	r4, #0
 4013              	.LVL533:
 4014 032a 06E0     		b	.L305
 4015              	.LVL534:
 4016              	.L306:
3693:TP2824/TP2802.c **** 					printf(" %02X",COCRX1[pcnt]);
 4017              		.loc 1 3693 0 discriminator 3
 4018 032c B448     		ldr	r0, .L340+12
 4019 032e B24B     		ldr	r3, .L340+4
 4020 0330 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 4021 0332 FFF7FEFF 		bl	printf
 4022              	.LVL535:
3692:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 4023              		.loc 1 3692 0 discriminator 3
 4024 0336 0134     		adds	r4, r4, #1
 4025              	.LVL536:
 4026 0338 E4B2     		uxtb	r4, r4
 4027              	.LVL537:
 4028              	.L305:
3692:TP2824/TP2802.c **** 				for(pcnt=0;pcnt<6;pcnt++)
 4029              		.loc 1 3692 0 is_stmt 0 discriminator 1
 4030 033a 052C     		cmp	r4, #5
 4031 033c F6D9     		bls	.L306
3694:TP2824/TP2802.c **** 				printf(" %02X",COCRX1[9]);
 4032              		.loc 1 3694 0 is_stmt 1
 4033 033e AE4C     		ldr	r4, .L340+4
 4034              	.LVL538:
ARM GAS  /tmp/ccSZlabO.s 			page 141


 4035 0340 AF48     		ldr	r0, .L340+12
 4036 0342 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 4037 0344 FFF7FEFF 		bl	printf
 4038              	.LVL539:
3695:TP2824/TP2802.c **** 				#endif
3696:TP2824/TP2802.c **** 				
3697:TP2824/TP2802.c **** 				//BOX on line  return 0x61, 0x01, 0x04, 0x9E,Lcd VINn=0x01 / Box CHn=0x04
3698:TP2824/TP2802.c **** 				//COC2: 02 B5 01 61 01 02 9E
3699:TP2824/TP2802.c **** 				if(COCRX1[3]==0x61 && COCRX1[9]==0x9E )
 4039              		.loc 1 3699 0
 4040 0348 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 4041 034a 612B     		cmp	r3, #97
 4042 034c 15D1     		bne	.L271
 4043              		.loc 1 3699 0 is_stmt 0 discriminator 1
 4044 034e 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 4045 0350 9E2B     		cmp	r3, #158
 4046 0352 12D1     		bne	.L271
3700:TP2824/TP2802.c **** 				{
3701:TP2824/TP2802.c **** 					QuadBoxId|=1;//1:ch1 / 2:ch2 / 4:ch3 / 8:ch4
 4047              		.loc 1 3701 0 is_stmt 1
 4048 0354 AB4B     		ldr	r3, .L340+16
 4049 0356 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4050 0358 41F00101 		orr	r1, r1, #1
 4051 035c 1970     		strb	r1, [r3]
3702:TP2824/TP2802.c **** 					#if(_DEBUG_MESSAGE_Get_2824cIrq==ON)
3703:TP2824/TP2802.c **** 					printf("QuadBoxId %02x\r\n",  QuadBoxId);
 4052              		.loc 1 3703 0
 4053 035e AA48     		ldr	r0, .L340+20
 4054 0360 FFF7FEFF 		bl	printf
 4055              	.LVL540:
3704:TP2824/TP2802.c **** 					#endif
3705:TP2824/TP2802.c **** 
3706:TP2824/TP2802.c **** 				if(COCRX1[4]==0x38 && COCRX1[5]==0x02)
 4056              		.loc 1 3706 0
 4057 0364 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 4058 0366 382B     		cmp	r3, #56
 4059 0368 07D1     		bne	.L271
 4060              		.loc 1 3706 0 is_stmt 0 discriminator 1
 4061 036a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 4062 036c 022B     		cmp	r3, #2
 4063 036e 04D1     		bne	.L271
3707:TP2824/TP2802.c **** 					{
3708:TP2824/TP2802.c **** 					//Flisheye_CAM[CH1]=TRUE;
3709:TP2824/TP2802.c **** 					//WriteEEP(EEP_FlishCAM1,TRUE);
3710:TP2824/TP2802.c **** 					//Flisheye_VLOSS_Count[CH1]=0;
3711:TP2824/TP2802.c **** 					QuadBoxId&=~(0x01);
 4064              		.loc 1 3711 0 is_stmt 1
 4065 0370 A44A     		ldr	r2, .L340+16
 4066 0372 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4067 0374 23F00103 		bic	r3, r3, #1
 4068 0378 1370     		strb	r3, [r2]
 4069              	.L271:
3712:TP2824/TP2802.c **** 					}
3713:TP2824/TP2802.c **** 				}	
3714:TP2824/TP2802.c **** 			}		
3715:TP2824/TP2802.c **** 			//printf("\r\n");
3716:TP2824/TP2802.c **** 			
ARM GAS  /tmp/ccSZlabO.s 			page 142


3717:TP2824/TP2802.c **** 		}
3718:TP2824/TP2802.c **** 		#endif
3719:TP2824/TP2802.c **** //PTZ TX	
3720:TP2824/TP2802.c **** 		//else
3721:TP2824/TP2802.c **** 		if(ptztxflag==1)//no any RXIRQ
 4070              		.loc 1 3721 0
 4071 037a A44B     		ldr	r3, .L340+24
 4072 037c 1B68     		ldr	r3, [r3]
 4073 037e 012B     		cmp	r3, #1
 4074 0380 40F0E481 		bne	.L269
3722:TP2824/TP2802.c **** 		{
3723:TP2824/TP2802.c **** 			if( TVI == std[PtzTxChNum] )
 4075              		.loc 1 3723 0
 4076 0384 A24B     		ldr	r3, .L340+28
 4077 0386 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 4078 0388 A24B     		ldr	r3, .L340+32
 4079 038a 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 4080 038c 002B     		cmp	r3, #0
 4081 038e 40F0BF80 		bne	.L307
3724:TP2824/TP2802.c **** 			{
3725:TP2824/TP2802.c **** 				if(mode[PtzTxChNum]==NTSC || mode[PtzTxChNum]==PAL)
 4082              		.loc 1 3725 0
 4083 0392 A14B     		ldr	r3, .L340+36
 4084 0394 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 4085 0396 083B     		subs	r3, r3, #8
 4086 0398 DBB2     		uxtb	r3, r3
 4087 039a 012B     		cmp	r3, #1
 4088 039c 00F28D80 		bhi	.L308
 4089              	.LVL541:
 4090              	.LBB2:
3726:TP2824/TP2802.c **** 					{
3727:TP2824/TP2802.c **** 						tByte cmd1=0,cmd2=0,dat1=0,dat2=0;
3728:TP2824/TP2802.c **** 						
3729:TP2824/TP2802.c **** 						dat1=(tByte)TVI_speed;
 4091              		.loc 1 3729 0
 4092 03a0 9E4B     		ldr	r3, .L340+40
 4093 03a2 93F80090 		ldrb	r9, [r3]	@ zero_extendqisi2
 4094              	.LVL542:
3730:TP2824/TP2802.c **** 						dat2=(tByte)presetNum;
 4095              		.loc 1 3730 0
 4096 03a6 9E4B     		ldr	r3, .L340+44
 4097 03a8 93F80080 		ldrb	r8, [r3]	@ zero_extendqisi2
 4098              	.LVL543:
3731:TP2824/TP2802.c **** 						
3732:TP2824/TP2802.c **** 						if(TVI_Command==0x0F)//SET//Iris +
 4099              		.loc 1 3732 0
 4100 03ac 9D4B     		ldr	r3, .L340+48
 4101 03ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4102 03b0 0F2B     		cmp	r3, #15
 4103 03b2 1ED0     		beq	.L321
3733:TP2824/TP2802.c **** 							cmd1=0x02;
3734:TP2824/TP2802.c **** 						else if(TVI_Command==0x0E)//Iris -
 4104              		.loc 1 3734 0
 4105 03b4 0E2B     		cmp	r3, #14
 4106 03b6 1FD0     		beq	.L322
3735:TP2824/TP2802.c **** 							cmd1=0x04;
3736:TP2824/TP2802.c **** 						else if(TVI_Command==0x10)//Focus -
ARM GAS  /tmp/ccSZlabO.s 			page 143


 4107              		.loc 1 3736 0
 4108 03b8 102B     		cmp	r3, #16
 4109 03ba 20D0     		beq	.L323
3737:TP2824/TP2802.c **** 							cmd1=0x01;
3738:TP2824/TP2802.c **** 						else if(TVI_Command==0x11)//Focus +
 4110              		.loc 1 3738 0
 4111 03bc 112B     		cmp	r3, #17
 4112 03be 21D0     		beq	.L324
3739:TP2824/TP2802.c **** 							cmd2=0x80;
3740:TP2824/TP2802.c **** 						else if(TVI_Command==0x12)//Zoom -
 4113              		.loc 1 3740 0
 4114 03c0 122B     		cmp	r3, #18
 4115 03c2 22D0     		beq	.L325
3741:TP2824/TP2802.c **** 							cmd2=0x40;
3742:TP2824/TP2802.c **** 						else if(TVI_Command==0x13)//Zoom +
 4116              		.loc 1 3742 0
 4117 03c4 132B     		cmp	r3, #19
 4118 03c6 23D0     		beq	.L326
3743:TP2824/TP2802.c **** 							cmd2=0x20;
3744:TP2824/TP2802.c **** 						else if(TVI_Command==0x06)//up
 4119              		.loc 1 3744 0
 4120 03c8 062B     		cmp	r3, #6
 4121 03ca 24D0     		beq	.L327
3745:TP2824/TP2802.c **** 							cmd2=0x08;
3746:TP2824/TP2802.c **** 						else if(TVI_Command==0x07)//down
 4122              		.loc 1 3746 0
 4123 03cc 072B     		cmp	r3, #7
 4124 03ce 25D0     		beq	.L328
3747:TP2824/TP2802.c **** 							cmd2=0x10;
3748:TP2824/TP2802.c **** 						else if(TVI_Command==0x09)//left
 4125              		.loc 1 3748 0
 4126 03d0 092B     		cmp	r3, #9
 4127 03d2 26D0     		beq	.L329
3749:TP2824/TP2802.c **** 							cmd2=0x04;
3750:TP2824/TP2802.c **** 						else if(TVI_Command==0x08)//right
 4128              		.loc 1 3750 0
 4129 03d4 082B     		cmp	r3, #8
 4130 03d6 27D0     		beq	.L330
3751:TP2824/TP2802.c **** 							cmd2=0x02;
3752:TP2824/TP2802.c **** 						else if(TVI_Command==0x0A)//up + left
 4131              		.loc 1 3752 0
 4132 03d8 0A2B     		cmp	r3, #10
 4133 03da 28D0     		beq	.L331
3753:TP2824/TP2802.c **** 							cmd2=0x0c;
3754:TP2824/TP2802.c **** 						else if(TVI_Command==0x0C)//up + right
 4134              		.loc 1 3754 0
 4135 03dc 0C2B     		cmp	r3, #12
 4136 03de 29D0     		beq	.L332
3755:TP2824/TP2802.c **** 							cmd2=0x0a;
3756:TP2824/TP2802.c **** 						else if(TVI_Command==0x0B)//down + left
 4137              		.loc 1 3756 0
 4138 03e0 0B2B     		cmp	r3, #11
 4139 03e2 2AD0     		beq	.L333
3757:TP2824/TP2802.c **** 							cmd2=0x14;
3758:TP2824/TP2802.c **** 						else if(TVI_Command==0x0D)//down + right
 4140              		.loc 1 3758 0
 4141 03e4 0D2B     		cmp	r3, #13
ARM GAS  /tmp/ccSZlabO.s 			page 144


 4142 03e6 2BD0     		beq	.L334
3759:TP2824/TP2802.c **** 							cmd2=0x12;
3760:TP2824/TP2802.c **** 						else if(TVI_Command==0x17)//PRESET x
 4143              		.loc 1 3760 0
 4144 03e8 172B     		cmp	r3, #23
 4145 03ea 2CD0     		beq	.L335
3727:TP2824/TP2802.c **** 						
 4146              		.loc 1 3727 0
 4147 03ec 0025     		movs	r5, #0
 4148 03ee 2846     		mov	r0, r5
 4149 03f0 2DE0     		b	.L309
 4150              	.L321:
 4151 03f2 0025     		movs	r5, #0
3733:TP2824/TP2802.c **** 						else if(TVI_Command==0x0E)//Iris -
 4152              		.loc 1 3733 0
 4153 03f4 0220     		movs	r0, #2
 4154 03f6 2AE0     		b	.L309
 4155              	.L322:
3727:TP2824/TP2802.c **** 						
 4156              		.loc 1 3727 0
 4157 03f8 0025     		movs	r5, #0
3735:TP2824/TP2802.c **** 						else if(TVI_Command==0x10)//Focus -
 4158              		.loc 1 3735 0
 4159 03fa 0420     		movs	r0, #4
 4160 03fc 27E0     		b	.L309
 4161              	.L323:
3727:TP2824/TP2802.c **** 						
 4162              		.loc 1 3727 0
 4163 03fe 0025     		movs	r5, #0
3737:TP2824/TP2802.c **** 						else if(TVI_Command==0x11)//Focus +
 4164              		.loc 1 3737 0
 4165 0400 0120     		movs	r0, #1
 4166 0402 24E0     		b	.L309
 4167              	.L324:
3739:TP2824/TP2802.c **** 						else if(TVI_Command==0x12)//Zoom -
 4168              		.loc 1 3739 0
 4169 0404 8025     		movs	r5, #128
3727:TP2824/TP2802.c **** 						
 4170              		.loc 1 3727 0
 4171 0406 0020     		movs	r0, #0
 4172 0408 21E0     		b	.L309
 4173              	.L325:
3741:TP2824/TP2802.c **** 						else if(TVI_Command==0x13)//Zoom +
 4174              		.loc 1 3741 0
 4175 040a 4025     		movs	r5, #64
3727:TP2824/TP2802.c **** 						
 4176              		.loc 1 3727 0
 4177 040c 0020     		movs	r0, #0
 4178 040e 1EE0     		b	.L309
 4179              	.L326:
3743:TP2824/TP2802.c **** 						else if(TVI_Command==0x06)//up
 4180              		.loc 1 3743 0
 4181 0410 2025     		movs	r5, #32
3727:TP2824/TP2802.c **** 						
 4182              		.loc 1 3727 0
 4183 0412 0020     		movs	r0, #0
 4184 0414 1BE0     		b	.L309
ARM GAS  /tmp/ccSZlabO.s 			page 145


 4185              	.L327:
3745:TP2824/TP2802.c **** 						else if(TVI_Command==0x07)//down
 4186              		.loc 1 3745 0
 4187 0416 0825     		movs	r5, #8
3727:TP2824/TP2802.c **** 						
 4188              		.loc 1 3727 0
 4189 0418 0020     		movs	r0, #0
 4190 041a 18E0     		b	.L309
 4191              	.L328:
3747:TP2824/TP2802.c **** 						else if(TVI_Command==0x09)//left
 4192              		.loc 1 3747 0
 4193 041c 1025     		movs	r5, #16
3727:TP2824/TP2802.c **** 						
 4194              		.loc 1 3727 0
 4195 041e 0020     		movs	r0, #0
 4196 0420 15E0     		b	.L309
 4197              	.L329:
3749:TP2824/TP2802.c **** 						else if(TVI_Command==0x08)//right
 4198              		.loc 1 3749 0
 4199 0422 0425     		movs	r5, #4
3727:TP2824/TP2802.c **** 						
 4200              		.loc 1 3727 0
 4201 0424 0020     		movs	r0, #0
 4202 0426 12E0     		b	.L309
 4203              	.L330:
3751:TP2824/TP2802.c **** 						else if(TVI_Command==0x0A)//up + left
 4204              		.loc 1 3751 0
 4205 0428 0225     		movs	r5, #2
3727:TP2824/TP2802.c **** 						
 4206              		.loc 1 3727 0
 4207 042a 0020     		movs	r0, #0
 4208 042c 0FE0     		b	.L309
 4209              	.L331:
3753:TP2824/TP2802.c **** 						else if(TVI_Command==0x0C)//up + right
 4210              		.loc 1 3753 0
 4211 042e 0C25     		movs	r5, #12
3727:TP2824/TP2802.c **** 						
 4212              		.loc 1 3727 0
 4213 0430 0020     		movs	r0, #0
 4214 0432 0CE0     		b	.L309
 4215              	.L332:
3755:TP2824/TP2802.c **** 						else if(TVI_Command==0x0B)//down + left
 4216              		.loc 1 3755 0
 4217 0434 0A25     		movs	r5, #10
3727:TP2824/TP2802.c **** 						
 4218              		.loc 1 3727 0
 4219 0436 0020     		movs	r0, #0
 4220 0438 09E0     		b	.L309
 4221              	.L333:
3757:TP2824/TP2802.c **** 						else if(TVI_Command==0x0D)//down + right
 4222              		.loc 1 3757 0
 4223 043a 1425     		movs	r5, #20
3727:TP2824/TP2802.c **** 						
 4224              		.loc 1 3727 0
 4225 043c 0020     		movs	r0, #0
 4226 043e 06E0     		b	.L309
 4227              	.L334:
ARM GAS  /tmp/ccSZlabO.s 			page 146


3759:TP2824/TP2802.c **** 						else if(TVI_Command==0x17)//PRESET x
 4228              		.loc 1 3759 0
 4229 0440 1225     		movs	r5, #18
3727:TP2824/TP2802.c **** 						
 4230              		.loc 1 3727 0
 4231 0442 0020     		movs	r0, #0
 4232 0444 03E0     		b	.L309
 4233              	.L335:
3761:TP2824/TP2802.c **** 						{
3762:TP2824/TP2802.c **** 							cmd2=0x07;
3763:TP2824/TP2802.c **** 							dat1=0;
 4234              		.loc 1 3763 0
 4235 0446 4FF00009 		mov	r9, #0
 4236              	.LVL544:
3762:TP2824/TP2802.c **** 							dat1=0;
 4237              		.loc 1 3762 0
 4238 044a 0725     		movs	r5, #7
3727:TP2824/TP2802.c **** 						
 4239              		.loc 1 3727 0
 4240 044c 4846     		mov	r0, r9
 4241              	.L309:
 4242              	.LVL545:
3764:TP2824/TP2802.c **** 							dat2=(tByte)presetNum;
3765:TP2824/TP2802.c **** 						}
3766:TP2824/TP2802.c **** 						//set:0x0f / dn:0x06 / up:0x07 / L:0x13 / R:0x12
3767:TP2824/TP2802.c **** 						cmd1=AHDBitsReverse(cmd1);//20200413
 4243              		.loc 1 3767 0
 4244 044e FFF7FEFF 		bl	AHDBitsReverse
 4245              	.LVL546:
 4246 0452 0746     		mov	r7, r0
 4247              	.LVL547:
3768:TP2824/TP2802.c **** 						cmd2=AHDBitsReverse(cmd2);//20200413
 4248              		.loc 1 3768 0
 4249 0454 2846     		mov	r0, r5
 4250 0456 FFF7FEFF 		bl	AHDBitsReverse
 4251              	.LVL548:
 4252 045a 0646     		mov	r6, r0
 4253              	.LVL549:
3769:TP2824/TP2802.c **** 						dat1=AHDBitsReverse(dat1);//20200413
 4254              		.loc 1 3769 0
 4255 045c 4846     		mov	r0, r9
 4256 045e FFF7FEFF 		bl	AHDBitsReverse
 4257              	.LVL550:
 4258 0462 0546     		mov	r5, r0
 4259              	.LVL551:
3770:TP2824/TP2802.c **** 						dat2=AHDBitsReverse(dat2);//20200413
 4260              		.loc 1 3770 0
 4261 0464 4046     		mov	r0, r8
 4262 0466 FFF7FEFF 		bl	AHDBitsReverse
 4263              	.LVL552:
 4264 046a 8046     		mov	r8, r0
 4265              	.LVL553:
3771:TP2824/TP2802.c **** 						
3772:TP2824/TP2802.c **** 						SetRegPage(PtzTxChNum);		                    
 4266              		.loc 1 3772 0
 4267 046c 2046     		mov	r0, r4
 4268 046e FFF7FEFF 		bl	SetRegPage
ARM GAS  /tmp/ccSZlabO.s 			page 147


 4269              	.LVL554:
3773:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5a, cmd1);//command byte 1
 4270              		.loc 1 3773 0
 4271 0472 5A20     		movs	r0, #90
 4272 0474 3946     		mov	r1, r7
 4273 0476 FFF7FEFF 		bl	tp28xx_byte_write
 4274              	.LVL555:
3774:TP2824/TP2802.c **** 						tp28xx_byte_write(0x59, cmd2);//command byte 2
 4275              		.loc 1 3774 0
 4276 047a 5920     		movs	r0, #89
 4277 047c 3146     		mov	r1, r6
 4278 047e FFF7FEFF 		bl	tp28xx_byte_write
 4279              	.LVL556:
3775:TP2824/TP2802.c **** 
3776:TP2824/TP2802.c **** 						tp28xx_byte_write(0x60, dat1);//data byte 1
 4280              		.loc 1 3776 0
 4281 0482 6020     		movs	r0, #96
 4282 0484 2946     		mov	r1, r5
 4283 0486 FFF7FEFF 		bl	tp28xx_byte_write
 4284              	.LVL557:
3777:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5f, dat2);//data byte 2
 4285              		.loc 1 3777 0
 4286 048a 5F20     		movs	r0, #95
 4287 048c 4146     		mov	r1, r8
 4288 048e FFF7FEFF 		bl	tp28xx_byte_write
 4289              	.LVL558:
3778:TP2824/TP2802.c **** 
3779:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x61);
 4290              		.loc 1 3779 0
 4291 0492 6F20     		movs	r0, #111
 4292 0494 6121     		movs	r1, #97
 4293 0496 FFF7FEFF 		bl	tp28xx_byte_write
 4294              	.LVL559:
3780:TP2824/TP2802.c **** 						delay(10);//50ms
 4295              		.loc 1 3780 0
 4296 049a 0A20     		movs	r0, #10
 4297 049c FFF7FEFF 		bl	delay
 4298              	.LVL560:
3781:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x60);
 4299              		.loc 1 3781 0
 4300 04a0 6F20     		movs	r0, #111
 4301 04a2 6021     		movs	r1, #96
 4302 04a4 FFF7FEFF 		bl	tp28xx_byte_write
 4303              	.LVL561:
3782:TP2824/TP2802.c **** 						printf("CVBS-Tx %x,%x,%x,%x\n",cmd1,cmd2,dat1,dat2);
 4304              		.loc 1 3782 0
 4305 04a8 CDF80080 		str	r8, [sp]
 4306 04ac 5E48     		ldr	r0, .L340+52
 4307 04ae 3946     		mov	r1, r7
 4308 04b0 3246     		mov	r2, r6
 4309 04b2 2B46     		mov	r3, r5
 4310 04b4 FFF7FEFF 		bl	printf
 4311              	.LVL562:
 4312              	.LBE2:
 4313 04b8 27E0     		b	.L310
 4314              	.LVL563:
 4315              	.L308:
ARM GAS  /tmp/ccSZlabO.s 			page 148


3783:TP2824/TP2802.c **** 
3784:TP2824/TP2802.c **** 					}
3785:TP2824/TP2802.c **** 					else//1080P
3786:TP2824/TP2802.c **** 					{
3787:TP2824/TP2802.c **** 						SetRegPage(PtzTxChNum);		                    
 4316              		.loc 1 3787 0
 4317 04ba 2046     		mov	r0, r4
 4318 04bc FFF7FEFF 		bl	SetRegPage
 4319              	.LVL564:
3788:TP2824/TP2802.c **** 						tp28xx_byte_write(0x59, (tByte)TVI_Command);
 4320              		.loc 1 3788 0
 4321 04c0 584E     		ldr	r6, .L340+48
 4322              	.LVL565:
 4323 04c2 5920     		movs	r0, #89
 4324 04c4 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 4325 04c6 FFF7FEFF 		bl	tp28xx_byte_write
 4326              	.LVL566:
3789:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5a, (tByte)presetNum);
 4327              		.loc 1 3789 0
 4328 04ca 554D     		ldr	r5, .L340+44
 4329 04cc 5A20     		movs	r0, #90
 4330 04ce 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 4331 04d0 FFF7FEFF 		bl	tp28xx_byte_write
 4332              	.LVL567:
3790:TP2824/TP2802.c **** 						tp28xx_byte_write(0x5d, (tByte)TVI_speed);//0x5f  check this????
 4333              		.loc 1 3790 0
 4334 04d4 514C     		ldr	r4, .L340+40
 4335 04d6 5D20     		movs	r0, #93
 4336 04d8 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4337 04da FFF7FEFF 		bl	tp28xx_byte_write
 4338              	.LVL568:
3791:TP2824/TP2802.c **** 						tp28xx_byte_write(0x60, (tByte)TVI_Chksum);
 4339              		.loc 1 3791 0
 4340 04de 6020     		movs	r0, #96
 4341 04e0 524B     		ldr	r3, .L340+56
 4342 04e2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4343 04e4 FFF7FEFF 		bl	tp28xx_byte_write
 4344              	.LVL569:
3792:TP2824/TP2802.c **** 						
3793:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x41);
 4345              		.loc 1 3793 0
 4346 04e8 6F20     		movs	r0, #111
 4347 04ea 4121     		movs	r1, #65
 4348 04ec FFF7FEFF 		bl	tp28xx_byte_write
 4349              	.LVL570:
3794:TP2824/TP2802.c **** 						delay(10);//50ms
 4350              		.loc 1 3794 0
 4351 04f0 0A20     		movs	r0, #10
 4352 04f2 FFF7FEFF 		bl	delay
 4353              	.LVL571:
3795:TP2824/TP2802.c **** 						tp28xx_byte_write(0x6f, 0x40);
 4354              		.loc 1 3795 0
 4355 04f6 6F20     		movs	r0, #111
 4356 04f8 4021     		movs	r1, #64
 4357 04fa FFF7FEFF 		bl	tp28xx_byte_write
 4358              	.LVL572:
3796:TP2824/TP2802.c **** 						printf("TVI-Tx %x,%x,%x\n",TVI_Command,presetNum,TVI_speed);
ARM GAS  /tmp/ccSZlabO.s 			page 149


 4359              		.loc 1 3796 0
 4360 04fe 4C48     		ldr	r0, .L340+60
 4361 0500 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 4362 0502 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 4363 0504 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4364 0506 FFF7FEFF 		bl	printf
 4365              	.LVL573:
 4366              	.L310:
3797:TP2824/TP2802.c **** 					}
3798:TP2824/TP2802.c **** 					
3799:TP2824/TP2802.c **** 					ptztxflag=0;
 4367              		.loc 1 3799 0
 4368 050a 0022     		movs	r2, #0
 4369 050c 3F4B     		ldr	r3, .L340+24
 4370 050e 1A60     		str	r2, [r3]
 4371              	.L307:
3800:TP2824/TP2802.c **** 				}
3801:TP2824/TP2802.c **** 			if( HDC == std[PtzTxChNum] )//1080P / 720P
 4372              		.loc 1 3801 0
 4373 0510 3F4B     		ldr	r3, .L340+28
 4374 0512 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4375 0514 3F4B     		ldr	r3, .L340+32
 4376 0516 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 4377 0518 022B     		cmp	r3, #2
 4378 051a 40F0AE80 		bne	.L311
3802:TP2824/TP2802.c **** 				{
3803:TP2824/TP2802.c **** 					SetRegPage(PtzTxChNum);	
 4379              		.loc 1 3803 0
 4380 051e FFF7FEFF 		bl	SetRegPage
 4381              	.LVL574:
3804:TP2824/TP2802.c **** 
3805:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6e, 0xA5);
 4382              		.loc 1 3805 0
 4383 0522 6E20     		movs	r0, #110
 4384 0524 A521     		movs	r1, #165
 4385 0526 FFF7FEFF 		bl	tp28xx_byte_write
 4386              	.LVL575:
3806:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6e, 0x02);
 4387              		.loc 1 3806 0
 4388 052a 6E20     		movs	r0, #110
 4389 052c 0221     		movs	r1, #2
 4390 052e FFF7FEFF 		bl	tp28xx_byte_write
 4391              	.LVL576:
3807:TP2824/TP2802.c **** 					switch(TVI_Command)
 4392              		.loc 1 3807 0
 4393 0532 3C4B     		ldr	r3, .L340+48
 4394 0534 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4395 0536 063B     		subs	r3, r3, #6
 4396 0538 092B     		cmp	r3, #9
 4397 053a 7BD8     		bhi	.L312
 4398 053c DFE803F0 		tbb	[pc, r3]
 4399              	.L314:
 4400 0540 16       		.byte	(.L313-.L314)/2
 4401 0541 27       		.byte	(.L315-.L314)/2
 4402 0542 49       		.byte	(.L316-.L314)/2
 4403 0543 38       		.byte	(.L317-.L314)/2
 4404 0544 7A       		.byte	(.L312-.L314)/2
ARM GAS  /tmp/ccSZlabO.s 			page 150


 4405 0545 7A       		.byte	(.L312-.L314)/2
 4406 0546 7A       		.byte	(.L312-.L314)/2
 4407 0547 7A       		.byte	(.L312-.L314)/2
 4408 0548 7A       		.byte	(.L312-.L314)/2
 4409 0549 05       		.byte	(.L318-.L314)/2
 4410              		.p2align 1
 4411              	.L318:
3808:TP2824/TP2802.c **** 					{
3809:TP2824/TP2802.c **** 						case 0x0F://SET//Iris +
3810:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x50);
 4412              		.loc 1 3810 0
 4413 054a 6E20     		movs	r0, #110
 4414 054c 5021     		movs	r1, #80
 4415 054e FFF7FEFF 		bl	tp28xx_byte_write
 4416              	.LVL577:
3811:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4417              		.loc 1 3811 0
 4418 0552 6E20     		movs	r0, #110
 4419 0554 0021     		movs	r1, #0
 4420 0556 FFF7FEFF 		bl	tp28xx_byte_write
 4421              	.LVL578:
3812:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4422              		.loc 1 3812 0
 4423 055a 6E20     		movs	r0, #110
 4424 055c 0021     		movs	r1, #0
 4425 055e FFF7FEFF 		bl	tp28xx_byte_write
 4426              	.LVL579:
3813:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4427              		.loc 1 3813 0
 4428 0562 6E20     		movs	r0, #110
 4429 0564 0021     		movs	r1, #0
 4430 0566 FFF7FEFF 		bl	tp28xx_byte_write
 4431              	.LVL580:
3814:TP2824/TP2802.c **** 							break;
 4432              		.loc 1 3814 0
 4433 056a 73E0     		b	.L319
 4434              	.L313:
3815:TP2824/TP2802.c **** 							
3816:TP2824/TP2802.c **** 						case 0x06://up
3817:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x08);
 4435              		.loc 1 3817 0
 4436 056c 6E20     		movs	r0, #110
 4437 056e 0821     		movs	r1, #8
 4438 0570 FFF7FEFF 		bl	tp28xx_byte_write
 4439              	.LVL581:
3818:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4440              		.loc 1 3818 0
 4441 0574 6E20     		movs	r0, #110
 4442 0576 0021     		movs	r1, #0
 4443 0578 FFF7FEFF 		bl	tp28xx_byte_write
 4444              	.LVL582:
3819:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
 4445              		.loc 1 3819 0
 4446 057c 6E20     		movs	r0, #110
 4447 057e FF21     		movs	r1, #255
 4448 0580 FFF7FEFF 		bl	tp28xx_byte_write
 4449              	.LVL583:
ARM GAS  /tmp/ccSZlabO.s 			page 151


3820:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4450              		.loc 1 3820 0
 4451 0584 6E20     		movs	r0, #110
 4452 0586 0021     		movs	r1, #0
 4453 0588 FFF7FEFF 		bl	tp28xx_byte_write
 4454              	.LVL584:
3821:TP2824/TP2802.c **** 							break;
 4455              		.loc 1 3821 0
 4456 058c 62E0     		b	.L319
 4457              	.L315:
3822:TP2824/TP2802.c **** 							
3823:TP2824/TP2802.c **** 						case 0x07://down
3824:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x04);
 4458              		.loc 1 3824 0
 4459 058e 6E20     		movs	r0, #110
 4460 0590 0421     		movs	r1, #4
 4461 0592 FFF7FEFF 		bl	tp28xx_byte_write
 4462              	.LVL585:
3825:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4463              		.loc 1 3825 0
 4464 0596 6E20     		movs	r0, #110
 4465 0598 0021     		movs	r1, #0
 4466 059a FFF7FEFF 		bl	tp28xx_byte_write
 4467              	.LVL586:
3826:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
 4468              		.loc 1 3826 0
 4469 059e 6E20     		movs	r0, #110
 4470 05a0 FF21     		movs	r1, #255
 4471 05a2 FFF7FEFF 		bl	tp28xx_byte_write
 4472              	.LVL587:
3827:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4473              		.loc 1 3827 0
 4474 05a6 6E20     		movs	r0, #110
 4475 05a8 0021     		movs	r1, #0
 4476 05aa FFF7FEFF 		bl	tp28xx_byte_write
 4477              	.LVL588:
3828:TP2824/TP2802.c **** 							break;
 4478              		.loc 1 3828 0
 4479 05ae 51E0     		b	.L319
 4480              	.L317:
3829:TP2824/TP2802.c **** 							
3830:TP2824/TP2802.c **** 						case 0x09://left
3831:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x02);
 4481              		.loc 1 3831 0
 4482 05b0 6E20     		movs	r0, #110
 4483 05b2 0221     		movs	r1, #2
 4484 05b4 FFF7FEFF 		bl	tp28xx_byte_write
 4485              	.LVL589:
3832:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
 4486              		.loc 1 3832 0
 4487 05b8 6E20     		movs	r0, #110
 4488 05ba FF21     		movs	r1, #255
 4489 05bc FFF7FEFF 		bl	tp28xx_byte_write
 4490              	.LVL590:
3833:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4491              		.loc 1 3833 0
 4492 05c0 6E20     		movs	r0, #110
ARM GAS  /tmp/ccSZlabO.s 			page 152


 4493 05c2 0021     		movs	r1, #0
 4494 05c4 FFF7FEFF 		bl	tp28xx_byte_write
 4495              	.LVL591:
3834:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4496              		.loc 1 3834 0
 4497 05c8 6E20     		movs	r0, #110
 4498 05ca 0021     		movs	r1, #0
 4499 05cc FFF7FEFF 		bl	tp28xx_byte_write
 4500              	.LVL592:
3835:TP2824/TP2802.c **** 							break;
 4501              		.loc 1 3835 0
 4502 05d0 40E0     		b	.L319
 4503              	.L316:
3836:TP2824/TP2802.c **** 							
3837:TP2824/TP2802.c **** 						case 0x08://right
3838:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x01);
 4504              		.loc 1 3838 0
 4505 05d2 6E20     		movs	r0, #110
 4506 05d4 0121     		movs	r1, #1
 4507 05d6 FFF7FEFF 		bl	tp28xx_byte_write
 4508              	.LVL593:
3839:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0xFF);
 4509              		.loc 1 3839 0
 4510 05da 6E20     		movs	r0, #110
 4511 05dc FF21     		movs	r1, #255
 4512 05de FFF7FEFF 		bl	tp28xx_byte_write
 4513              	.LVL594:
3840:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4514              		.loc 1 3840 0
 4515 05e2 6E20     		movs	r0, #110
 4516 05e4 0021     		movs	r1, #0
 4517 05e6 FFF7FEFF 		bl	tp28xx_byte_write
 4518              	.LVL595:
3841:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4519              		.loc 1 3841 0
 4520 05ea 6E20     		movs	r0, #110
 4521 05ec 0021     		movs	r1, #0
 4522 05ee FFF7FEFF 		bl	tp28xx_byte_write
 4523              	.LVL596:
3842:TP2824/TP2802.c **** 							break;
 4524              		.loc 1 3842 0
 4525 05f2 2FE0     		b	.L319
 4526              	.L341:
 4527              		.align	2
 4528              	.L340:
 4529 05f4 00000000 		.word	tpRxD
 4530 05f8 00000000 		.word	COCRX1
 4531 05fc 9C010000 		.word	.LC35
 4532 0600 70010000 		.word	.LC31
 4533 0604 00000000 		.word	.LANCHOR24
 4534 0608 78010000 		.word	.LC32
 4535 060c 00000000 		.word	ptztxflag
 4536 0610 00000000 		.word	.LANCHOR25
 4537 0614 00000000 		.word	std
 4538 0618 00000000 		.word	mode
 4539 061c 00000000 		.word	TVI_speed
 4540 0620 00000000 		.word	presetNum
ARM GAS  /tmp/ccSZlabO.s 			page 153


 4541 0624 00000000 		.word	TVI_Command
 4542 0628 A4010000 		.word	.LC36
 4543 062c 00000000 		.word	TVI_Chksum
 4544 0630 BC010000 		.word	.LC37
 4545              	.L312:
3843:TP2824/TP2802.c **** 							
3844:TP2824/TP2802.c **** 						default:	
3845:TP2824/TP2802.c **** 						case 0x14://STOP
3846:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4546              		.loc 1 3846 0
 4547 0634 6E20     		movs	r0, #110
 4548 0636 0021     		movs	r1, #0
 4549 0638 FFF7FEFF 		bl	tp28xx_byte_write
 4550              	.LVL597:
3847:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4551              		.loc 1 3847 0
 4552 063c 6E20     		movs	r0, #110
 4553 063e 0021     		movs	r1, #0
 4554 0640 FFF7FEFF 		bl	tp28xx_byte_write
 4555              	.LVL598:
3848:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4556              		.loc 1 3848 0
 4557 0644 6E20     		movs	r0, #110
 4558 0646 0021     		movs	r1, #0
 4559 0648 FFF7FEFF 		bl	tp28xx_byte_write
 4560              	.LVL599:
3849:TP2824/TP2802.c **** 							tp28xx_byte_write(0x6e, 0x00);
 4561              		.loc 1 3849 0
 4562 064c 6E20     		movs	r0, #110
 4563 064e 0021     		movs	r1, #0
 4564 0650 FFF7FEFF 		bl	tp28xx_byte_write
 4565              	.LVL600:
 4566              	.L319:
3850:TP2824/TP2802.c **** 							break;
3851:TP2824/TP2802.c **** 					}
3852:TP2824/TP2802.c **** 					
3853:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x49);
 4567              		.loc 1 3853 0
 4568 0654 6F20     		movs	r0, #111
 4569 0656 4921     		movs	r1, #73
 4570 0658 FFF7FEFF 		bl	tp28xx_byte_write
 4571              	.LVL601:
3854:TP2824/TP2802.c **** 					delay(5);//50ms
 4572              		.loc 1 3854 0
 4573 065c 0520     		movs	r0, #5
 4574 065e FFF7FEFF 		bl	delay
 4575              	.LVL602:
3855:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x48);
 4576              		.loc 1 3855 0
 4577 0662 6F20     		movs	r0, #111
 4578 0664 4821     		movs	r1, #72
 4579 0666 FFF7FEFF 		bl	tp28xx_byte_write
 4580              	.LVL603:
3856:TP2824/TP2802.c **** 					ptztxflag=0;
 4581              		.loc 1 3856 0
 4582 066a 0022     		movs	r2, #0
 4583 066c 394B     		ldr	r3, .L342
ARM GAS  /tmp/ccSZlabO.s 			page 154


 4584 066e 1A60     		str	r2, [r3]
3857:TP2824/TP2802.c **** 					printf("CVI-Tx %x\n",TVI_Command);
 4585              		.loc 1 3857 0
 4586 0670 3948     		ldr	r0, .L342+4
 4587 0672 3A4B     		ldr	r3, .L342+8
 4588 0674 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4589 0676 FFF7FEFF 		bl	printf
 4590              	.LVL604:
 4591              	.L311:
3858:TP2824/TP2802.c **** 				}
3859:TP2824/TP2802.c **** 			if( HDA == std[PtzTxChNum] )//1080P / 720P
 4592              		.loc 1 3859 0
 4593 067a 394B     		ldr	r3, .L342+12
 4594 067c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4595 067e 394A     		ldr	r2, .L342+16
 4596 0680 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4597 0682 012B     		cmp	r3, #1
 4598 0684 5FD1     		bne	.L320
3860:TP2824/TP2802.c **** 			{
3861:TP2824/TP2802.c **** 
3862:TP2824/TP2802.c **** 					TVICommandToAHData();
 4599              		.loc 1 3862 0
 4600 0686 FFF7FEFF 		bl	TVICommandToAHData
 4601              	.LVL605:
3863:TP2824/TP2802.c **** 				
3864:TP2824/TP2802.c **** 				  	SetRegPage(PtzTxChNum);		
 4602              		.loc 1 3864 0
 4603 068a 354B     		ldr	r3, .L342+12
 4604 068c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4605 068e FFF7FEFF 		bl	SetRegPage
 4606              	.LVL606:
3865:TP2824/TP2802.c **** 					//SetRegPage(0x04);	
3866:TP2824/TP2802.c **** 				
3867:TP2824/TP2802.c **** #if 1
3868:TP2824/TP2802.c **** 				//	if(TVI_Command==0x22)//TOA  PRESET LOAD
3869:TP2824/TP2802.c **** 				//	ACPSTOPCOMMAND();
3870:TP2824/TP2802.c **** 
3871:TP2824/TP2802.c **** 					//stop command
3872:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a, 0x00);
 4607              		.loc 1 3872 0
 4608 0692 5A20     		movs	r0, #90
 4609 0694 0021     		movs	r1, #0
 4610 0696 FFF7FEFF 		bl	tp28xx_byte_write
 4611              	.LVL607:
3873:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, 0x00);
 4612              		.loc 1 3873 0
 4613 069a 6020     		movs	r0, #96
 4614 069c 0021     		movs	r1, #0
 4615 069e FFF7FEFF 		bl	tp28xx_byte_write
 4616              	.LVL608:
3874:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, 0x00);
 4617              		.loc 1 3874 0
 4618 06a2 6620     		movs	r0, #102
 4619 06a4 0021     		movs	r1, #0
 4620 06a6 FFF7FEFF 		bl	tp28xx_byte_write
 4621              	.LVL609:
3875:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, 0x00);
ARM GAS  /tmp/ccSZlabO.s 			page 155


 4622              		.loc 1 3875 0
 4623 06aa 6C20     		movs	r0, #108
 4624 06ac 0021     		movs	r1, #0
 4625 06ae FFF7FEFF 		bl	tp28xx_byte_write
 4626              	.LVL610:
3876:TP2824/TP2802.c **** 					
3877:TP2824/TP2802.c **** 					
3878:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x45);
 4627              		.loc 1 3878 0
 4628 06b2 6F20     		movs	r0, #111
 4629 06b4 4521     		movs	r1, #69
 4630 06b6 FFF7FEFF 		bl	tp28xx_byte_write
 4631              	.LVL611:
3879:TP2824/TP2802.c **** 					//delay(5);//50ms	//20210514
3880:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x44);
 4632              		.loc 1 3880 0
 4633 06ba 6F20     		movs	r0, #111
 4634 06bc 4421     		movs	r1, #68
 4635 06be FFF7FEFF 		bl	tp28xx_byte_write
 4636              	.LVL612:
3881:TP2824/TP2802.c **** 					
3882:TP2824/TP2802.c **** 					HAL_Delay(35);       //Delay 1Vsync(~33.3msec)//20210514
 4637              		.loc 1 3882 0
 4638 06c2 2320     		movs	r0, #35
 4639 06c4 FFF7FEFF 		bl	HAL_Delay
 4640              	.LVL613:
3883:TP2824/TP2802.c **** 			
3884:TP2824/TP2802.c **** 					//command data
3885:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a, AHDBitsReverse(AHDcmd1));
 4641              		.loc 1 3885 0
 4642 06c8 274F     		ldr	r7, .L342+20
 4643 06ca 3878     		ldrb	r0, [r7]	@ zero_extendqisi2
 4644 06cc FFF7FEFF 		bl	AHDBitsReverse
 4645              	.LVL614:
 4646 06d0 0146     		mov	r1, r0
 4647 06d2 5A20     		movs	r0, #90
 4648 06d4 FFF7FEFF 		bl	tp28xx_byte_write
 4649              	.LVL615:
3886:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, AHDBitsReverse(AHDcmd2));
 4650              		.loc 1 3886 0
 4651 06d8 244E     		ldr	r6, .L342+24
 4652 06da 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 4653 06dc FFF7FEFF 		bl	AHDBitsReverse
 4654              	.LVL616:
 4655 06e0 0146     		mov	r1, r0
 4656 06e2 6020     		movs	r0, #96
 4657 06e4 FFF7FEFF 		bl	tp28xx_byte_write
 4658              	.LVL617:
3887:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, AHDBitsReverse(AHDcmd3));
 4659              		.loc 1 3887 0
 4660 06e8 214D     		ldr	r5, .L342+28
 4661 06ea 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 4662 06ec FFF7FEFF 		bl	AHDBitsReverse
 4663              	.LVL618:
 4664 06f0 0146     		mov	r1, r0
 4665 06f2 6620     		movs	r0, #102
 4666 06f4 FFF7FEFF 		bl	tp28xx_byte_write
ARM GAS  /tmp/ccSZlabO.s 			page 156


 4667              	.LVL619:
3888:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, AHDBitsReverse(AHDcmd4));
 4668              		.loc 1 3888 0
 4669 06f8 1E4C     		ldr	r4, .L342+32
 4670 06fa 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4671 06fc FFF7FEFF 		bl	AHDBitsReverse
 4672              	.LVL620:
 4673 0700 0146     		mov	r1, r0
 4674 0702 6C20     		movs	r0, #108
 4675 0704 FFF7FEFF 		bl	tp28xx_byte_write
 4676              	.LVL621:
3889:TP2824/TP2802.c **** 				
3890:TP2824/TP2802.c **** 
3891:TP2824/TP2802.c **** 					
3892:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x45);
 4677              		.loc 1 3892 0
 4678 0708 6F20     		movs	r0, #111
 4679 070a 4521     		movs	r1, #69
 4680 070c FFF7FEFF 		bl	tp28xx_byte_write
 4681              	.LVL622:
3893:TP2824/TP2802.c **** 					//delay(5);//50ms	//20210514
3894:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x44);
 4682              		.loc 1 3894 0
 4683 0710 6F20     		movs	r0, #111
 4684 0712 4421     		movs	r1, #68
 4685 0714 FFF7FEFF 		bl	tp28xx_byte_write
 4686              	.LVL623:
3895:TP2824/TP2802.c **** 				
3896:TP2824/TP2802.c **** 					HAL_Delay(35);	 //Delay 1Vsync(~33.3msec)//20210514
 4687              		.loc 1 3896 0
 4688 0718 2320     		movs	r0, #35
 4689 071a FFF7FEFF 		bl	HAL_Delay
 4690              	.LVL624:
3897:TP2824/TP2802.c **** 
3898:TP2824/TP2802.c **** 
3899:TP2824/TP2802.c **** #else
3900:TP2824/TP2802.c **** #if 0				
3901:TP2824/TP2802.c **** 					#if 0
3902:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a, 0xFF);
3903:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, 0xFF);
3904:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, 0xFF);
3905:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, 0xFF);
3906:TP2824/TP2802.c **** 					#else
3907:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a, 0x00);
3908:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, 0x00);
3909:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, 0x00);
3910:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, 0x00);
3911:TP2824/TP2802.c **** 					#endif
3912:TP2824/TP2802.c **** 					
3913:TP2824/TP2802.c **** 					#if 1
3914:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x45);
3915:TP2824/TP2802.c **** 					delay(5);//50ms
3916:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x44);
3917:TP2824/TP2802.c **** 					#else
3918:TP2824/TP2802.c **** 					Set_Mirror_COC();	
3919:TP2824/TP2802.c **** 					#endif
3920:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccSZlabO.s 			page 157


3921:TP2824/TP2802.c **** #endif				
3922:TP2824/TP2802.c **** 					//command data
3923:TP2824/TP2802.c **** 					#if 0
3924:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a,(AHDBitsReverse (AHDcmd1)));
3925:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60,( AHDBitsReverse(AHDcmd2)));
3926:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66,(AHDBitsReverse(AHDcmd3)));
3927:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c,(AHDBitsReverse(AHDcmd4)));
3928:TP2824/TP2802.c **** 					#else
3929:TP2824/TP2802.c **** 					tp28xx_byte_write(0x5a, AHDBitsReverse(AHDcmd1));
3930:TP2824/TP2802.c **** 					tp28xx_byte_write(0x60, AHDBitsReverse(AHDcmd2));
3931:TP2824/TP2802.c **** 					tp28xx_byte_write(0x66, AHDBitsReverse(AHDcmd3));
3932:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6c, AHDBitsReverse(AHDcmd4));
3933:TP2824/TP2802.c **** 					#endif
3934:TP2824/TP2802.c **** 
3935:TP2824/TP2802.c **** 					#if 1
3936:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x45);
3937:TP2824/TP2802.c **** 					delay(5);//50ms
3938:TP2824/TP2802.c **** 					tp28xx_byte_write(0x6f, 0x44);
3939:TP2824/TP2802.c **** 					#else
3940:TP2824/TP2802.c **** 					Set_Mirror_COC();	
3941:TP2824/TP2802.c **** 					#endif
3942:TP2824/TP2802.c **** #endif					
3943:TP2824/TP2802.c **** 					ptztxflag=0;
 4691              		.loc 1 3943 0
 4692 071e 0022     		movs	r2, #0
 4693 0720 0C4B     		ldr	r3, .L342
 4694 0722 1A60     		str	r2, [r3]
3944:TP2824/TP2802.c **** 				//printf("~AHD %x,%x,%x,%x\n",AHDBitsReverse(AHDcmd1),AHDBitsReverse(0xF1),AHDBitsReverse(0x02)
3945:TP2824/TP2802.c **** 			
3946:TP2824/TP2802.c **** 				Printf("AHD %02x,%02x,%02x to ",(WORD)TVI_Command,(WORD)presetNum,(WORD)TVI_speed);
 4695              		.loc 1 3946 0
 4696 0724 1448     		ldr	r0, .L342+36
 4697 0726 0D4B     		ldr	r3, .L342+8
 4698 0728 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4699 072a 144B     		ldr	r3, .L342+40
 4700 072c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4701 072e 144B     		ldr	r3, .L342+44
 4702 0730 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4703 0732 FFF7FEFF 		bl	Printf
 4704              	.LVL625:
3947:TP2824/TP2802.c **** 				Printf("Tx %02x,%02x,%02x,%02x",(WORD)AHDcmd1,(WORD)AHDcmd2,(WORD)AHDcmd3,(WORD)AHDcmd4);
 4705              		.loc 1 3947 0
 4706 0736 3978     		ldrb	r1, [r7]	@ zero_extendqisi2
 4707 0738 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 4708 073a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4709 073c 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4710 073e 0090     		str	r0, [sp]
 4711 0740 1048     		ldr	r0, .L342+48
 4712 0742 FFF7FEFF 		bl	Printf
 4713              	.LVL626:
 4714              	.L320:
3948:TP2824/TP2802.c **** 				}
3949:TP2824/TP2802.c **** 				ptztxflag=0;
 4715              		.loc 1 3949 0
 4716 0746 0022     		movs	r2, #0
 4717 0748 024B     		ldr	r3, .L342
 4718 074a 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccSZlabO.s 			page 158


 4719              	.L269:
3950:TP2824/TP2802.c **** 			}
3951:TP2824/TP2802.c **** 		}
3952:TP2824/TP2802.c **** }
 4720              		.loc 1 3952 0
 4721 074c 03B0     		add	sp, sp, #12
 4722              	.LCFI32:
 4723              		.cfi_def_cfa_offset 28
 4724              		@ sp needed
 4725 074e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4726              	.L337:
 4727              	.LCFI33:
 4728              		.cfi_def_cfa_offset 0
 4729              		.cfi_restore 4
 4730              		.cfi_restore 5
 4731              		.cfi_restore 6
 4732              		.cfi_restore 7
 4733              		.cfi_restore 8
 4734              		.cfi_restore 9
 4735              		.cfi_restore 14
 4736 0752 7047     		bx	lr
 4737              	.L343:
 4738              		.align	2
 4739              	.L342:
 4740 0754 00000000 		.word	ptztxflag
 4741 0758 D0010000 		.word	.LC38
 4742 075c 00000000 		.word	TVI_Command
 4743 0760 00000000 		.word	.LANCHOR25
 4744 0764 00000000 		.word	std
 4745 0768 00000000 		.word	AHDcmd1
 4746 076c 00000000 		.word	AHDcmd2
 4747 0770 00000000 		.word	AHDcmd3
 4748 0774 00000000 		.word	AHDcmd4
 4749 0778 DC010000 		.word	.LC39
 4750 077c 00000000 		.word	presetNum
 4751 0780 00000000 		.word	TVI_speed
 4752 0784 F4010000 		.word	.LC40
 4753              		.cfi_endproc
 4754              	.LFE95:
 4756              		.section	.text.TP2824_PTZ_init,"ax",%progbits
 4757              		.align	2
 4758              		.global	TP2824_PTZ_init
 4759              		.thumb
 4760              		.thumb_func
 4762              	TP2824_PTZ_init:
 4763              	.LFB96:
3953:TP2824/TP2802.c **** 
3954:TP2824/TP2802.c **** 
3955:TP2824/TP2802.c **** void TP2824_PTZ_init(void)
3956:TP2824/TP2802.c **** {
 4764              		.loc 1 3956 0
 4765              		.cfi_startproc
 4766              		@ args = 0, pretend = 0, frame = 0
 4767              		@ frame_needed = 0, uses_anonymous_args = 0
 4768 0000 08B5     		push	{r3, lr}
 4769              	.LCFI34:
 4770              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccSZlabO.s 			page 159


 4771              		.cfi_offset 3, -8
 4772              		.cfi_offset 14, -4
3957:TP2824/TP2802.c ****   //  unsigned int i;
3958:TP2824/TP2802.c **** 
3959:TP2824/TP2802.c ****   //  for( i = 0; i < 2; i++)
3960:TP2824/TP2802.c ****     //{
3961:TP2824/TP2802.c ****        // tp28xx_byte_write(chip, 0x40, i<<4); //bank
3962:TP2824/TP2802.c ****   SetRegPage(0x00);
 4773              		.loc 1 3962 0
 4774 0002 0020     		movs	r0, #0
 4775 0004 FFF7FEFF 		bl	SetRegPage
 4776              	.LVL627:
3963:TP2824/TP2802.c **** 
3964:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xc9, 0x00);
 4777              		.loc 1 3964 0
 4778 0008 C920     		movs	r0, #201
 4779 000a 0021     		movs	r1, #0
 4780 000c FFF7FEFF 		bl	tp28xx_byte_write
 4781              	.LVL628:
3965:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xca, 0x00);
 4782              		.loc 1 3965 0
 4783 0010 CA20     		movs	r0, #202
 4784 0012 0021     		movs	r1, #0
 4785 0014 FFF7FEFF 		bl	tp28xx_byte_write
 4786              	.LVL629:
3966:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xcb, 0x06);
 4787              		.loc 1 3966 0
 4788 0018 CB20     		movs	r0, #203
 4789 001a 0621     		movs	r1, #6
 4790 001c FFF7FEFF 		bl	tp28xx_byte_write
 4791              	.LVL630:
3967:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xcc, 0x07);
 4792              		.loc 1 3967 0
 4793 0020 CC20     		movs	r0, #204
 4794 0022 0721     		movs	r1, #7
 4795 0024 FFF7FEFF 		bl	tp28xx_byte_write
 4796              	.LVL631:
3968:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xcd, 0x08);
 4797              		.loc 1 3968 0
 4798 0028 CD20     		movs	r0, #205
 4799 002a 0821     		movs	r1, #8
 4800 002c FFF7FEFF 		bl	tp28xx_byte_write
 4801              	.LVL632:
3969:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xce, 0x09); //line6,7,8,9
 4802              		.loc 1 3969 0
 4803 0030 CE20     		movs	r0, #206
 4804 0032 0921     		movs	r1, #9
 4805 0034 FFF7FEFF 		bl	tp28xx_byte_write
 4806              	.LVL633:
3970:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xcf, 0x03);
 4807              		.loc 1 3970 0
 4808 0038 CF20     		movs	r0, #207
 4809 003a 0321     		movs	r1, #3
 4810 003c FFF7FEFF 		bl	tp28xx_byte_write
 4811              	.LVL634:
3971:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd0, 0x48);
 4812              		.loc 1 3971 0
ARM GAS  /tmp/ccSZlabO.s 			page 160


 4813 0040 D020     		movs	r0, #208
 4814 0042 4821     		movs	r1, #72
 4815 0044 FFF7FEFF 		bl	tp28xx_byte_write
 4816              	.LVL635:
3972:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd1, 0x34); //39 clock per bit 0.526us
 4817              		.loc 1 3972 0
 4818 0048 D120     		movs	r0, #209
 4819 004a 3421     		movs	r1, #52
 4820 004c FFF7FEFF 		bl	tp28xx_byte_write
 4821              	.LVL636:
3973:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd2, 0x60);
 4822              		.loc 1 3973 0
 4823 0050 D220     		movs	r0, #210
 4824 0052 6021     		movs	r1, #96
 4825 0054 FFF7FEFF 		bl	tp28xx_byte_write
 4826              	.LVL637:
3974:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd3, 0x10);
 4827              		.loc 1 3974 0
 4828 0058 D320     		movs	r0, #211
 4829 005a 1021     		movs	r1, #16
 4830 005c FFF7FEFF 		bl	tp28xx_byte_write
 4831              	.LVL638:
3975:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd4, 0x04); //
 4832              		.loc 1 3975 0
 4833 0060 D420     		movs	r0, #212
 4834 0062 0421     		movs	r1, #4
 4835 0064 FFF7FEFF 		bl	tp28xx_byte_write
 4836              	.LVL639:
3976:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd5, 0xf0);
 4837              		.loc 1 3976 0
 4838 0068 D520     		movs	r0, #213
 4839 006a F021     		movs	r1, #240
 4840 006c FFF7FEFF 		bl	tp28xx_byte_write
 4841              	.LVL640:
3977:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd6, 0xd8);
 4842              		.loc 1 3977 0
 4843 0070 D620     		movs	r0, #214
 4844 0072 D821     		movs	r1, #216
 4845 0074 FFF7FEFF 		bl	tp28xx_byte_write
 4846              	.LVL641:
3978:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xd7, 0x17); //24bit
 4847              		.loc 1 3978 0
 4848 0078 D720     		movs	r0, #215
 4849 007a 1721     		movs	r1, #23
 4850 007c FFF7FEFF 		bl	tp28xx_byte_write
 4851              	.LVL642:
3979:TP2824/TP2802.c ****   
3980:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe1, 0x00);
 4852              		.loc 1 3980 0
 4853 0080 E120     		movs	r0, #225
 4854 0082 0021     		movs	r1, #0
 4855 0084 FFF7FEFF 		bl	tp28xx_byte_write
 4856              	.LVL643:
3981:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe2, 0x00);
 4857              		.loc 1 3981 0
 4858 0088 E220     		movs	r0, #226
 4859 008a 0021     		movs	r1, #0
ARM GAS  /tmp/ccSZlabO.s 			page 161


 4860 008c FFF7FEFF 		bl	tp28xx_byte_write
 4861              	.LVL644:
3982:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe3, 0x05);
 4862              		.loc 1 3982 0
 4863 0090 E320     		movs	r0, #227
 4864 0092 0521     		movs	r1, #5
 4865 0094 FFF7FEFF 		bl	tp28xx_byte_write
 4866              	.LVL645:
3983:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe4, 0x06);
 4867              		.loc 1 3983 0
 4868 0098 E420     		movs	r0, #228
 4869 009a 0621     		movs	r1, #6
 4870 009c FFF7FEFF 		bl	tp28xx_byte_write
 4871              	.LVL646:
3984:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe5, 0x08);
 4872              		.loc 1 3984 0
 4873 00a0 E520     		movs	r0, #229
 4874 00a2 0821     		movs	r1, #8
 4875 00a4 FFF7FEFF 		bl	tp28xx_byte_write
 4876              	.LVL647:
3985:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe6, 0x09); //line6,7,8,9
 4877              		.loc 1 3985 0
 4878 00a8 E620     		movs	r0, #230
 4879 00aa 0921     		movs	r1, #9
 4880 00ac FFF7FEFF 		bl	tp28xx_byte_write
 4881              	.LVL648:
3986:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe7, 0x03);
 4882              		.loc 1 3986 0
 4883 00b0 E720     		movs	r0, #231
 4884 00b2 0321     		movs	r1, #3
 4885 00b4 FFF7FEFF 		bl	tp28xx_byte_write
 4886              	.LVL649:
3987:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe8, 0x48);
 4887              		.loc 1 3987 0
 4888 00b8 E820     		movs	r0, #232
 4889 00ba 4821     		movs	r1, #72
 4890 00bc FFF7FEFF 		bl	tp28xx_byte_write
 4891              	.LVL650:
3988:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xe9, 0x34); //39 clock per bit 0.526us
 4892              		.loc 1 3988 0
 4893 00c0 E920     		movs	r0, #233
 4894 00c2 3421     		movs	r1, #52
 4895 00c4 FFF7FEFF 		bl	tp28xx_byte_write
 4896              	.LVL651:
3989:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xea, 0x60);
 4897              		.loc 1 3989 0
 4898 00c8 EA20     		movs	r0, #234
 4899 00ca 6021     		movs	r1, #96
 4900 00cc FFF7FEFF 		bl	tp28xx_byte_write
 4901              	.LVL652:
3990:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xeb, 0x10);
 4902              		.loc 1 3990 0
 4903 00d0 EB20     		movs	r0, #235
 4904 00d2 1021     		movs	r1, #16
 4905 00d4 FFF7FEFF 		bl	tp28xx_byte_write
 4906              	.LVL653:
3991:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xec, 0x04); //
ARM GAS  /tmp/ccSZlabO.s 			page 162


 4907              		.loc 1 3991 0
 4908 00d8 EC20     		movs	r0, #236
 4909 00da 0421     		movs	r1, #4
 4910 00dc FFF7FEFF 		bl	tp28xx_byte_write
 4911              	.LVL654:
3992:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xed, 0xf0);
 4912              		.loc 1 3992 0
 4913 00e0 ED20     		movs	r0, #237
 4914 00e2 F021     		movs	r1, #240
 4915 00e4 FFF7FEFF 		bl	tp28xx_byte_write
 4916              	.LVL655:
3993:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xee, 0xd8);
 4917              		.loc 1 3993 0
 4918 00e8 EE20     		movs	r0, #238
 4919 00ea D821     		movs	r1, #216
 4920 00ec FFF7FEFF 		bl	tp28xx_byte_write
 4921              	.LVL656:
3994:TP2824/TP2802.c **** 		  tp28xx_byte_write( 0xef, 0x17); //24bit
 4922              		.loc 1 3994 0
 4923 00f0 EF20     		movs	r0, #239
 4924 00f2 1721     		movs	r1, #23
 4925 00f4 FFF7FEFF 		bl	tp28xx_byte_write
 4926              	.LVL657:
3995:TP2824/TP2802.c ****   //}
3996:TP2824/TP2802.c ****   
3997:TP2824/TP2802.c **** 	  tp28xx_byte_write( 0x7E, 0x0F);	//TX channel enable
 4927              		.loc 1 3997 0
 4928 00f8 7E20     		movs	r0, #126
 4929 00fa 0F21     		movs	r1, #15
 4930 00fc FFF7FEFF 		bl	tp28xx_byte_write
 4931              	.LVL658:
3998:TP2824/TP2802.c **** 	  tp28xx_byte_write( 0xB9, 0x0F);	//RX channel enable
 4932              		.loc 1 3998 0
 4933 0100 B920     		movs	r0, #185
 4934 0102 0F21     		movs	r1, #15
 4935 0104 FFF7FEFF 		bl	tp28xx_byte_write
 4936              	.LVL659:
 4937 0108 08BD     		pop	{r3, pc}
 4938              		.cfi_endproc
 4939              	.LFE96:
 4941 010a 00BF     		.section	.text.TP2824_PTZ_mode,"ax",%progbits
 4942              		.align	2
 4943              		.global	TP2824_PTZ_mode
 4944              		.thumb
 4945              		.thumb_func
 4947              	TP2824_PTZ_mode:
 4948              	.LFB97:
3999:TP2824/TP2802.c **** 
4000:TP2824/TP2802.c **** }
4001:TP2824/TP2802.c **** 
4002:TP2824/TP2802.c **** void TP2824_PTZ_mode(unsigned char ch, unsigned char mod)
4003:TP2824/TP2802.c **** {
 4949              		.loc 1 4003 0
 4950              		.cfi_startproc
 4951              		@ args = 0, pretend = 0, frame = 0
 4952              		@ frame_needed = 0, uses_anonymous_args = 0
 4953              	.LVL660:
ARM GAS  /tmp/ccSZlabO.s 			page 163


 4954 0000 38B5     		push	{r3, r4, r5, lr}
 4955              	.LCFI35:
 4956              		.cfi_def_cfa_offset 16
 4957              		.cfi_offset 3, -16
 4958              		.cfi_offset 4, -12
 4959              		.cfi_offset 5, -8
 4960              		.cfi_offset 14, -4
 4961 0002 0546     		mov	r5, r0
4004:TP2824/TP2802.c ****     unsigned int /*tmp,*/ i;
4005:TP2824/TP2802.c **** 
4006:TP2824/TP2802.c **** //    static const unsigned char PTZ_bank[4]= {0x00,0x00,0x10,0x10};
4007:TP2824/TP2802.c ****     static const unsigned char PTZ_reg[4][7]=
4008:TP2824/TP2802.c ****     {
4009:TP2824/TP2802.c ****         {0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8},
4010:TP2824/TP2802.c ****         {0xda,0xdb,0xdc,0xdd,0xde,0xdf,0xe0},
4011:TP2824/TP2802.c ****         {0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8},
4012:TP2824/TP2802.c ****         {0xda,0xdb,0xdc,0xdd,0xde,0xdf,0xe0}
4013:TP2824/TP2802.c ****     };
4014:TP2824/TP2802.c ****     static const unsigned char PTZ_dat[ ][7]=
4015:TP2824/TP2802.c ****     {
4016:TP2824/TP2802.c ****         {0x0b,0x0c,0x0d,0x0e,0x19,0x78,0x21}, //TVI1.0
4017:TP2824/TP2802.c ****         {0x0b,0x0c,0x0d,0x0e,0x33,0xf0,0x21}, //TVI2.0
4018:TP2824/TP2802.c ****         {0x0e,0x0f,0x10,0x11,0x66,0xf0,0x17}, //A1080p for 2833B 0.525
4019:TP2824/TP2802.c ****         {0x0e,0x0f,0x10,0x11,0x26,0xf0,0x57}, //A1080p for 2833C 0.525
4020:TP2824/TP2802.c ****         {0x0e,0x0f,0x00,0x00,0x26,0xe0,0xef}, //A720p for 2833C 0.525
4021:TP2824/TP2802.c ****         {0x0f,0x10,0x00,0x00,0x48,0xf0,0x6f}, //960H for 2833C
4022:TP2824/TP2802.c ****         {0x10,0x11,0x12,0x13,0x15,0xb8,0xa2}, //HDC 2833C
4023:TP2824/TP2802.c ****         {0x10,0x11,0x12,0x13,0x95,0xb8,0x22}, //HDC 2833B
4024:TP2824/TP2802.c ****     };
4025:TP2824/TP2802.c **** 
4026:TP2824/TP2802.c ****     //tmp = tp28xx_byte_read(chip, 0x40);
4027:TP2824/TP2802.c ****     //tmp &= 0xaf;
4028:TP2824/TP2802.c ****     //tmp |=PTZ_bank[ch];
4029:TP2824/TP2802.c ****     //tp28xx_byte_write(chip, 0x40, tmp); //reg bank1 switch for 2822
4030:TP2824/TP2802.c ****  //   tp28xx_byte_write(chip, 0x40, PTZ_bank[ch]); //reg bank1 switch for 2822
4031:TP2824/TP2802.c **** #if 1
4032:TP2824/TP2802.c **** SetRegPage(0x00);
 4962              		.loc 1 4032 0
 4963 0004 0020     		movs	r0, #0
 4964              	.LVL661:
 4965 0006 FFF7FEFF 		bl	SetRegPage
 4966              	.LVL662:
4033:TP2824/TP2802.c **** 
4034:TP2824/TP2802.c **** for(i = 0; i < 7; i++)//1080PAHD
 4967              		.loc 1 4034 0
 4968 000a 0024     		movs	r4, #0
 4969 000c 0AE0     		b	.L347
 4970              	.LVL663:
 4971              	.L348:
4035:TP2824/TP2802.c **** 	tp28xx_byte_write( PTZ_reg[ch][i], PTZ_dat[2][i]);
 4972              		.loc 1 4035 0 discriminator 3
 4973 000e C5EBC502 		rsb	r2, r5, r5, lsl #3
 4974 0012 2244     		add	r2, r2, r4
 4975 0014 054B     		ldr	r3, .L350
 4976 0016 2344     		add	r3, r3, r4
 4977 0018 0549     		ldr	r1, .L350+4
 4978 001a 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
ARM GAS  /tmp/ccSZlabO.s 			page 164


 4979 001c 997B     		ldrb	r1, [r3, #14]	@ zero_extendqisi2
 4980 001e FFF7FEFF 		bl	tp28xx_byte_write
 4981              	.LVL664:
4034:TP2824/TP2802.c **** 	tp28xx_byte_write( PTZ_reg[ch][i], PTZ_dat[2][i]);
 4982              		.loc 1 4034 0 discriminator 3
 4983 0022 0134     		adds	r4, r4, #1
 4984              	.LVL665:
 4985              	.L347:
4034:TP2824/TP2802.c **** 	tp28xx_byte_write( PTZ_reg[ch][i], PTZ_dat[2][i]);
 4986              		.loc 1 4034 0 is_stmt 0 discriminator 1
 4987 0024 062C     		cmp	r4, #6
 4988 0026 F2D9     		bls	.L348
4036:TP2824/TP2802.c **** 
4037:TP2824/TP2802.c **** #else
4038:TP2824/TP2802.c ****     for(i = 0; i < 7; i++)
4039:TP2824/TP2802.c ****     {
4040:TP2824/TP2802.c ****         if(PTZ_TVI == mod)
4041:TP2824/TP2802.c ****         {
4042:TP2824/TP2802.c ****             tmp = tp28xx_byte_read(chip, 0xf5); //check TVI 1 or 2
4043:TP2824/TP2802.c ****             if( (tmp >>ch) & 0x01)
4044:TP2824/TP2802.c ****             {
4045:TP2824/TP2802.c ****                 tp28xx_byte_write(chip, PTZ_reg[ch][i], PTZ_dat[1][i]);
4046:TP2824/TP2802.c ****             }
4047:TP2824/TP2802.c ****             else
4048:TP2824/TP2802.c ****             {
4049:TP2824/TP2802.c ****                 tp28xx_byte_write(chip, PTZ_reg[ch][i], PTZ_dat[0][i]);
4050:TP2824/TP2802.c ****             }
4051:TP2824/TP2802.c ****         }
4052:TP2824/TP2802.c ****         else if(PTZ_HDA_1080P == mod) //HDA 1080p
4053:TP2824/TP2802.c ****         {
4054:TP2824/TP2802.c ****                 tp28xx_byte_write(chip, PTZ_reg[ch][i], PTZ_dat[2][i]);
4055:TP2824/TP2802.c **** 
4056:TP2824/TP2802.c ****         }
4057:TP2824/TP2802.c ****         else if(PTZ_HDA_720P == mod) //HDA 720p
4058:TP2824/TP2802.c ****         {
4059:TP2824/TP2802.c ****                 tp28xx_byte_write(chip, PTZ_reg[ch][i], PTZ_dat[2][i]);
4060:TP2824/TP2802.c ****         }
4061:TP2824/TP2802.c ****         else if(PTZ_HDC == mod) // test
4062:TP2824/TP2802.c ****         {
4063:TP2824/TP2802.c ****                 tp28xx_byte_write(chip, PTZ_reg[ch][i], PTZ_dat[7][i]);
4064:TP2824/TP2802.c ****         }
4065:TP2824/TP2802.c **** 
4066:TP2824/TP2802.c ****     }
4067:TP2824/TP2802.c ****     tp28xx_byte_write(chip, 0xB7, 0x0f); //enable TX interrupt flag
4068:TP2824/TP2802.c **** #endif
4069:TP2824/TP2802.c **** }
 4989              		.loc 1 4069 0 is_stmt 1
 4990 0028 38BD     		pop	{r3, r4, r5, pc}
 4991              	.LVL666:
 4992              	.L351:
 4993 002a 00BF     		.align	2
 4994              	.L350:
 4995 002c 00000000 		.word	.LANCHOR27
 4996 0030 00000000 		.word	.LANCHOR26
 4997              		.cfi_endproc
 4998              	.LFE97:
 5000              		.section	.text.TP2824C_RX_init,"ax",%progbits
ARM GAS  /tmp/ccSZlabO.s 			page 165


 5001              		.align	2
 5002              		.global	TP2824C_RX_init
 5003              		.thumb
 5004              		.thumb_func
 5006              	TP2824C_RX_init:
 5007              	.LFB98:
4070:TP2824/TP2802.c **** 
4071:TP2824/TP2802.c ****  void TP2824C_RX_init(unsigned char chip, unsigned char mod)
4072:TP2824/TP2802.c **** {
 5008              		.loc 1 4072 0
 5009              		.cfi_startproc
 5010              		@ args = 0, pretend = 0, frame = 0
 5011              		@ frame_needed = 0, uses_anonymous_args = 0
 5012              	.LVL667:
 5013 0000 10B5     		push	{r4, lr}
 5014              	.LCFI36:
 5015              		.cfi_def_cfa_offset 8
 5016              		.cfi_offset 4, -8
 5017              		.cfi_offset 14, -4
 5018              	.LVL668:
4073:TP2824/TP2802.c **** 
4074:TP2824/TP2802.c ****     int i, index=0;
4075:TP2824/TP2802.c **** 
4076:TP2824/TP2802.c ****     static const unsigned char PTZ_RX_dat[][15]=
4077:TP2824/TP2802.c ****     {
4078:TP2824/TP2802.c ****         {0x00,0x00,0x07,0x08,0x00,0x00,0x04,0x00,0x00,0x60,0x10,0x04,0xf0,0xd8,0x27}, //TVI command
4079:TP2824/TP2802.c ****         {0x00,0x00,0x07,0x08,0x09,0x0a,0x04,0x00,0x00,0x60,0x10,0x04,0xf0,0xd8,0x27}, //TVI burst
4080:TP2824/TP2802.c ****         {0x00,0x00,0x06,0x07,0x08,0x09,0x03,0x52,0x53,0x60,0x10,0x04,0xf0,0xd8,0x17}, //ACP1 0.525
4081:TP2824/TP2802.c ****         {0x00,0x00,0x06,0x07,0x08,0x09,0x02,0xdf,0x88,0x60,0x10,0x04,0xf0,0xd8,0x17}, //ACP2 0.6
4082:TP2824/TP2802.c ****         {0x00,0x00,0x06,0x07,0x08,0x09,0x04,0xec,0xe9,0x60,0x10,0x04,0xf0,0xd8,0x17}, //ACP3 0.35
4083:TP2824/TP2802.c ****     };
4084:TP2824/TP2802.c **** #if 0
4085:TP2824/TP2802.c ****         if(PTZ_RX_TVI_CMD == mod)
4086:TP2824/TP2802.c ****         {
4087:TP2824/TP2802.c ****             index = 0;
4088:TP2824/TP2802.c ****         }
4089:TP2824/TP2802.c ****         else if(PTZ_RX_TVI_BURST == mod)
4090:TP2824/TP2802.c ****         {
4091:TP2824/TP2802.c ****             index = 1;
4092:TP2824/TP2802.c ****         }
4093:TP2824/TP2802.c ****         else if(PTZ_RX_ACP1 == mod)
4094:TP2824/TP2802.c ****         {
4095:TP2824/TP2802.c ****             index = 2;
4096:TP2824/TP2802.c ****         }
4097:TP2824/TP2802.c ****         else if(PTZ_RX_ACP2 == mod)
4098:TP2824/TP2802.c ****         {
4099:TP2824/TP2802.c ****             index = 3;
4100:TP2824/TP2802.c ****         }
4101:TP2824/TP2802.c ****         else if(PTZ_RX_ACP3 == mod)
4102:TP2824/TP2802.c ****         {
4103:TP2824/TP2802.c ****             index = 4;
4104:TP2824/TP2802.c ****         }
4105:TP2824/TP2802.c **** 		#endif
4106:TP2824/TP2802.c **** 		index = 3;
4107:TP2824/TP2802.c **** 
4108:TP2824/TP2802.c ****         for(i = 0; i < 15; i++)
 5019              		.loc 1 4108 0
ARM GAS  /tmp/ccSZlabO.s 			page 166


 5020 0002 0024     		movs	r4, #0
 5021 0004 09E0     		b	.L353
 5022              	.LVL669:
 5023              	.L354:
4109:TP2824/TP2802.c ****         {
4110:TP2824/TP2802.c **** //              tp28xx_byte_write(chip, 0xc9+i, PTZ_RX_dat[index][i]);
4111:TP2824/TP2802.c ****             tp28xx_byte_write(0xc9+i, PTZ_RX_dat[index][i]);
 5024              		.loc 1 4111 0 discriminator 3
 5025 0006 A4F13700 		sub	r0, r4, #55
 5026 000a 054B     		ldr	r3, .L356
 5027 000c 2344     		add	r3, r3, r4
 5028 000e C0B2     		uxtb	r0, r0
 5029 0010 93F82D10 		ldrb	r1, [r3, #45]	@ zero_extendqisi2
 5030 0014 FFF7FEFF 		bl	tp28xx_byte_write
 5031              	.LVL670:
4108:TP2824/TP2802.c ****         {
 5032              		.loc 1 4108 0 discriminator 3
 5033 0018 0134     		adds	r4, r4, #1
 5034              	.LVL671:
 5035              	.L353:
4108:TP2824/TP2802.c ****         {
 5036              		.loc 1 4108 0 is_stmt 0 discriminator 1
 5037 001a 0E2C     		cmp	r4, #14
 5038 001c F3DD     		ble	.L354
4112:TP2824/TP2802.c ****         }
4113:TP2824/TP2802.c **** 
4114:TP2824/TP2802.c **** }
 5039              		.loc 1 4114 0 is_stmt 1
 5040 001e 10BD     		pop	{r4, pc}
 5041              	.LVL672:
 5042              	.L357:
 5043              		.align	2
 5044              	.L356:
 5045 0020 00000000 		.word	.LANCHOR28
 5046              		.cfi_endproc
 5047              	.LFE98:
 5049              		.section	.text.TP2824C_PTZ_mode,"ax",%progbits
 5050              		.align	2
 5051              		.global	TP2824C_PTZ_mode
 5052              		.thumb
 5053              		.thumb_func
 5055              	TP2824C_PTZ_mode:
 5056              	.LFB99:
4115:TP2824/TP2802.c **** 
4116:TP2824/TP2802.c **** void TP2824C_PTZ_mode(unsigned char chip, unsigned char ch, unsigned char mod)
4117:TP2824/TP2802.c **** {
 5057              		.loc 1 4117 0
 5058              		.cfi_startproc
 5059              		@ args = 0, pretend = 0, frame = 0
 5060              		@ frame_needed = 0, uses_anonymous_args = 0
 5061              	.LVL673:
 5062 0000 10B5     		push	{r4, lr}
 5063              	.LCFI37:
 5064              		.cfi_def_cfa_offset 8
 5065              		.cfi_offset 4, -8
 5066              		.cfi_offset 14, -4
 5067              	.LVL674:
ARM GAS  /tmp/ccSZlabO.s 			page 167


4118:TP2824/TP2802.c ****     unsigned int /*tmp,*/ i, index=0;
4119:TP2824/TP2802.c **** 
4120:TP2824/TP2802.c ****     static const unsigned char PTZ_reg[12]=
4121:TP2824/TP2802.c ****     {
4122:TP2824/TP2802.c ****         0x6f,0x70,0x71,0xc0,0xc1,0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8
4123:TP2824/TP2802.c ****     };
4124:TP2824/TP2802.c ****     static const unsigned char PTZ_dat[][12]=
4125:TP2824/TP2802.c ****     {
4126:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x0b,0x0c,0x0d,0x0e,0x19,0x78,0x21}, //TVI1.0
4127:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x0b,0x0c,0x0d,0x0e,0x33,0xf0,0x21}, //TVI2.0
4128:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x0e,0x0f,0x10,0x11,0x26,0xf0,0x57}, //A1080p for 0.525
4129:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x0e,0x0f,0x00,0x00,0x26,0xe0,0xef}, //A720p for  0.525
4130:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x0f,0x10,0x00,0x00,0x4d,0xf0,0x6f}, //960H for
4131:TP2824/TP2802.c ****         //{0x4a,0x5d,0x00,0x00,0x00,0x10,0x11,0x12,0x13,0x15,0xb8,0x9f}, //HDC for
4132:TP2824/TP2802.c ****         {0x42,0x40,0x00,0x00,0x00,0x10,0x11,0x12,0x15,0x15,0xb8,0xa2}, //HDC for
4133:TP2824/TP2802.c ****     };
4134:TP2824/TP2802.c **** 
4135:TP2824/TP2802.c ****    // tp28xx_byte_write(chip, 0x40, ch); //reg bank1 switch
4136:TP2824/TP2802.c ****     
4137:TP2824/TP2802.c **** #if 0
4138:TP2824/TP2802.c ****         if(PTZ_TVI == mod)
4139:TP2824/TP2802.c ****         {
4140:TP2824/TP2802.c ****             tmp = tp28xx_byte_read(chip, 0xf5); //check TVI 1 or 2
4141:TP2824/TP2802.c ****             if( (tmp >>ch) & 0x01)
4142:TP2824/TP2802.c ****             {
4143:TP2824/TP2802.c ****                 index = 1;
4144:TP2824/TP2802.c ****             }
4145:TP2824/TP2802.c ****             else
4146:TP2824/TP2802.c ****             {
4147:TP2824/TP2802.c ****                 index = 0;
4148:TP2824/TP2802.c ****             }
4149:TP2824/TP2802.c ****         }
4150:TP2824/TP2802.c ****         else if(PTZ_HDA_1080P == mod) //HDA 1080p
4151:TP2824/TP2802.c ****         {
4152:TP2824/TP2802.c ****                 index = 2;
4153:TP2824/TP2802.c ****         }
4154:TP2824/TP2802.c ****         else if(PTZ_HDA_720P == mod) //HDA 720p
4155:TP2824/TP2802.c ****         {
4156:TP2824/TP2802.c ****                 index = 3;
4157:TP2824/TP2802.c ****         }
4158:TP2824/TP2802.c ****         else if(PTZ_HDA_CVBS == mod) //HDA CVBS
4159:TP2824/TP2802.c ****         {
4160:TP2824/TP2802.c ****                 index = 4;
4161:TP2824/TP2802.c ****         }
4162:TP2824/TP2802.c ****         else if(PTZ_HDC == mod) // test
4163:TP2824/TP2802.c ****         {
4164:TP2824/TP2802.c ****                 index = 5;
4165:TP2824/TP2802.c ****         }
4166:TP2824/TP2802.c **** #endif
4167:TP2824/TP2802.c **** 	 SetRegPage(0x00);
 5068              		.loc 1 4167 0
 5069 0002 0020     		movs	r0, #0
 5070              	.LVL675:
 5071 0004 FFF7FEFF 		bl	SetRegPage
 5072              	.LVL676:
4168:TP2824/TP2802.c **** 	 index=2;
4169:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccSZlabO.s 			page 168


4170:TP2824/TP2802.c ****      for(i = 0; i < 12; i++)
 5073              		.loc 1 4170 0
 5074 0008 0024     		movs	r4, #0
 5075 000a 07E0     		b	.L359
 5076              	.LVL677:
 5077              	.L360:
4171:TP2824/TP2802.c ****      {
4172:TP2824/TP2802.c **** //         tp28xx_byte_write(chip, PTZ_reg[i], PTZ_dat[index][i]);
4173:TP2824/TP2802.c **** 	   tp28xx_byte_write(PTZ_reg[i], PTZ_dat[index][i]);
 5078              		.loc 1 4173 0 discriminator 3
 5079 000c 054B     		ldr	r3, .L362
 5080 000e 2344     		add	r3, r3, r4
 5081 0010 054A     		ldr	r2, .L362+4
 5082 0012 105D     		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 5083 0014 197E     		ldrb	r1, [r3, #24]	@ zero_extendqisi2
 5084 0016 FFF7FEFF 		bl	tp28xx_byte_write
 5085              	.LVL678:
4170:TP2824/TP2802.c ****      {
 5086              		.loc 1 4170 0 discriminator 3
 5087 001a 0134     		adds	r4, r4, #1
 5088              	.LVL679:
 5089              	.L359:
4170:TP2824/TP2802.c ****      {
 5090              		.loc 1 4170 0 is_stmt 0 discriminator 1
 5091 001c 0B2C     		cmp	r4, #11
 5092 001e F5D9     		bls	.L360
4174:TP2824/TP2802.c ****      }
4175:TP2824/TP2802.c **** 
4176:TP2824/TP2802.c **** }
 5093              		.loc 1 4176 0 is_stmt 1
 5094 0020 10BD     		pop	{r4, pc}
 5095              	.LVL680:
 5096              	.L363:
 5097 0022 00BF     		.align	2
 5098              	.L362:
 5099 0024 00000000 		.word	.LANCHOR30
 5100 0028 00000000 		.word	.LANCHOR29
 5101              		.cfi_endproc
 5102              	.LFE99:
 5104              		.section	.text.HDA_SetACPV2Data,"ax",%progbits
 5105              		.align	2
 5106              		.global	HDA_SetACPV2Data
 5107              		.thumb
 5108              		.thumb_func
 5110              	HDA_SetACPV2Data:
 5111              	.LFB100:
4177:TP2824/TP2802.c **** 
4178:TP2824/TP2802.c **** void HDA_SetACPV2Data(unsigned char chip, unsigned char reg,unsigned char dat)
4179:TP2824/TP2802.c **** 	{
 5112              		.loc 1 4179 0
 5113              		.cfi_startproc
 5114              		@ args = 0, pretend = 0, frame = 0
 5115              		@ frame_needed = 0, uses_anonymous_args = 0
 5116              	.LVL681:
 5117 0000 38B5     		push	{r3, r4, r5, lr}
 5118              	.LCFI38:
 5119              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccSZlabO.s 			page 169


 5120              		.cfi_offset 3, -16
 5121              		.cfi_offset 4, -12
 5122              		.cfi_offset 5, -8
 5123              		.cfi_offset 14, -4
 5124 0002 0D46     		mov	r5, r1
 5125              	.LVL682:
4180:TP2824/TP2802.c **** 		unsigned int i;
4181:TP2824/TP2802.c **** 		unsigned int PTZ_pelco=0;
 5126              		.loc 1 4181 0
 5127 0004 0024     		movs	r4, #0
4182:TP2824/TP2802.c **** 	
4183:TP2824/TP2802.c **** 		for(i = 0; i < 8; i++)
 5128              		.loc 1 4183 0
 5129 0006 2346     		mov	r3, r4
 5130 0008 0BE0     		b	.L365
 5131              	.LVL683:
 5132              	.L368:
4184:TP2824/TP2802.c **** 		{
4185:TP2824/TP2802.c **** 			PTZ_pelco <<= 3;
 5133              		.loc 1 4185 0
 5134 000a E400     		lsls	r4, r4, #3
 5135              	.LVL684:
4186:TP2824/TP2802.c **** 	
4187:TP2824/TP2802.c **** 			if(0x80 & dat) PTZ_pelco |= 0x06;
 5136              		.loc 1 4187 0
 5137 000c 12F0800F 		tst	r2, #128
 5138 0010 02D0     		beq	.L366
 5139              		.loc 1 4187 0 is_stmt 0 discriminator 1
 5140 0012 44F00604 		orr	r4, r4, #6
 5141              	.LVL685:
 5142 0016 01E0     		b	.L367
 5143              	.L366:
4188:TP2824/TP2802.c **** 			else PTZ_pelco |= 0x04;
 5144              		.loc 1 4188 0 is_stmt 1
 5145 0018 44F00404 		orr	r4, r4, #4
 5146              	.LVL686:
 5147              	.L367:
4189:TP2824/TP2802.c **** 	
4190:TP2824/TP2802.c **** 			dat <<= 1;
 5148              		.loc 1 4190 0 discriminator 2
 5149 001c 5200     		lsls	r2, r2, #1
 5150              	.LVL687:
 5151 001e D2B2     		uxtb	r2, r2
 5152              	.LVL688:
4183:TP2824/TP2802.c **** 		{
 5153              		.loc 1 4183 0 discriminator 2
 5154 0020 0133     		adds	r3, r3, #1
 5155              	.LVL689:
 5156              	.L365:
4183:TP2824/TP2802.c **** 		{
 5157              		.loc 1 4183 0 is_stmt 0 discriminator 1
 5158 0022 072B     		cmp	r3, #7
 5159 0024 F1D9     		bls	.L368
4191:TP2824/TP2802.c **** 		}
4192:TP2824/TP2802.c **** 	
4193:TP2824/TP2802.c **** 		tp28xx_byte_write( reg + 0 , (PTZ_pelco>>16)&0xff);
 5160              		.loc 1 4193 0 is_stmt 1
ARM GAS  /tmp/ccSZlabO.s 			page 170


 5161 0026 2846     		mov	r0, r5
 5162              	.LVL690:
 5163 0028 C4F30741 		ubfx	r1, r4, #16, #8
 5164              	.LVL691:
 5165 002c FFF7FEFF 		bl	tp28xx_byte_write
 5166              	.LVL692:
4194:TP2824/TP2802.c **** 		tp28xx_byte_write( reg + 1 , (PTZ_pelco>>8)&0xff);
 5167              		.loc 1 4194 0
 5168 0030 681C     		adds	r0, r5, #1
 5169 0032 C0B2     		uxtb	r0, r0
 5170 0034 C4F30721 		ubfx	r1, r4, #8, #8
 5171 0038 FFF7FEFF 		bl	tp28xx_byte_write
 5172              	.LVL693:
4195:TP2824/TP2802.c **** 		tp28xx_byte_write( reg + 2 , (PTZ_pelco)&0xff);
 5173              		.loc 1 4195 0
 5174 003c A81C     		adds	r0, r5, #2
 5175 003e C0B2     		uxtb	r0, r0
 5176 0040 04F0FE01 		and	r1, r4, #254
 5177 0044 FFF7FEFF 		bl	tp28xx_byte_write
 5178              	.LVL694:
 5179 0048 38BD     		pop	{r3, r4, r5, pc}
 5180              		.cfi_endproc
 5181              	.LFE100:
 5183 004a 00BF     		.section	.text.TP2824C_StartTX,"ax",%progbits
 5184              		.align	2
 5185              		.global	TP2824C_StartTX
 5186              		.thumb
 5187              		.thumb_func
 5189              	TP2824C_StartTX:
 5190              	.LFB101:
4196:TP2824/TP2802.c **** 	}
4197:TP2824/TP2802.c **** 
4198:TP2824/TP2802.c **** 
4199:TP2824/TP2802.c **** void TP2824C_StartTX(unsigned char chip, unsigned char ch)
4200:TP2824/TP2802.c **** {
 5191              		.loc 1 4200 0
 5192              		.cfi_startproc
 5193              		@ args = 0, pretend = 0, frame = 0
 5194              		@ frame_needed = 0, uses_anonymous_args = 0
 5195              	.LVL695:
 5196 0000 38B5     		push	{r3, r4, r5, lr}
 5197              	.LCFI39:
 5198              		.cfi_def_cfa_offset 16
 5199              		.cfi_offset 3, -16
 5200              		.cfi_offset 4, -12
 5201              		.cfi_offset 5, -8
 5202              		.cfi_offset 14, -4
 5203 0002 0D46     		mov	r5, r1
4201:TP2824/TP2802.c **** 	unsigned char tmp;
4202:TP2824/TP2802.c **** 	int i;
4203:TP2824/TP2802.c **** 
4204:TP2824/TP2802.c **** 	tp28xx_byte_write( 0xB6, (0x01<<(ch))); //clear flag
 5204              		.loc 1 4204 0
 5205 0004 0121     		movs	r1, #1
 5206              	.LVL696:
 5207 0006 A940     		lsls	r1, r1, r5
 5208 0008 B620     		movs	r0, #182
ARM GAS  /tmp/ccSZlabO.s 			page 171


 5209              	.LVL697:
 5210 000a C9B2     		uxtb	r1, r1
 5211 000c FFF7FEFF 		bl	tp28xx_byte_write
 5212              	.LVL698:
4205:TP2824/TP2802.c **** 
4206:TP2824/TP2802.c **** 	tmp = tp28xx_byte_read( 0x6f);
 5213              		.loc 1 4206 0
 5214 0010 6F20     		movs	r0, #111
 5215 0012 FFF7FEFF 		bl	tp28xx_byte_read
 5216              	.LVL699:
 5217 0016 0446     		mov	r4, r0
 5218              	.LVL700:
4207:TP2824/TP2802.c ****     tmp |= 0x01;
 5219              		.loc 1 4207 0
 5220 0018 40F00101 		orr	r1, r0, #1
 5221              	.LVL701:
4208:TP2824/TP2802.c ****     tp28xx_byte_write( 0x6f, tmp); //TX enable
 5222              		.loc 1 4208 0
 5223 001c 6F20     		movs	r0, #111
 5224 001e C9B2     		uxtb	r1, r1
 5225 0020 FFF7FEFF 		bl	tp28xx_byte_write
 5226              	.LVL702:
4209:TP2824/TP2802.c ****     tmp &= 0xfe;
4210:TP2824/TP2802.c ****     tp28xx_byte_write( 0x6f, tmp); //TX disable
 5227              		.loc 1 4210 0
 5228 0024 6F20     		movs	r0, #111
 5229 0026 04F0FE01 		and	r1, r4, #254
 5230 002a FFF7FEFF 		bl	tp28xx_byte_write
 5231              	.LVL703:
4211:TP2824/TP2802.c **** 
4212:TP2824/TP2802.c ****     i = 100;
 5232              		.loc 1 4212 0
 5233 002e 6423     		movs	r3, #100
4213:TP2824/TP2802.c ****     while(i--)
 5234              		.loc 1 4213 0
 5235 0030 0AE0     		b	.L371
 5236              	.LVL704:
 5237              	.L373:
4214:TP2824/TP2802.c ****     {
4215:TP2824/TP2802.c ****         if( (0x01<<(ch)) & tp28xx_byte_read( 0xb6)) break;
 5238              		.loc 1 4215 0
 5239 0032 B620     		movs	r0, #182
 5240 0034 FFF7FEFF 		bl	tp28xx_byte_read
 5241              	.LVL705:
 5242 0038 2841     		asrs	r0, r0, r5
 5243 003a 10F0010F 		tst	r0, #1
 5244 003e 06D1     		bne	.L370
4216:TP2824/TP2802.c ****         //udelay(1000);
4217:TP2824/TP2802.c ****         msleep(2);
 5245              		.loc 1 4217 0
 5246 0040 0220     		movs	r0, #2
 5247 0042 FFF7FEFF 		bl	msleep
 5248              	.LVL706:
4213:TP2824/TP2802.c ****     {
 5249              		.loc 1 4213 0
 5250 0046 2346     		mov	r3, r4
 5251              	.LVL707:
ARM GAS  /tmp/ccSZlabO.s 			page 172


 5252              	.L371:
 5253 0048 5C1E     		subs	r4, r3, #1
 5254              	.LVL708:
 5255 004a 002B     		cmp	r3, #0
 5256 004c F1D1     		bne	.L373
 5257              	.L370:
 5258 004e 38BD     		pop	{r3, r4, r5, pc}
 5259              		.cfi_endproc
 5260              	.LFE101:
 5262              		.section	.text.COC_test,"ax",%progbits
 5263              		.align	2
 5264              		.global	COC_test
 5265              		.thumb
 5266              		.thumb_func
 5268              	COC_test:
 5269              	.LFB102:
4218:TP2824/TP2802.c ****     }
4219:TP2824/TP2802.c **** 
4220:TP2824/TP2802.c **** }
4221:TP2824/TP2802.c **** 
4222:TP2824/TP2802.c **** void COC_test(void)
4223:TP2824/TP2802.c **** {
 5270              		.loc 1 4223 0
 5271              		.cfi_startproc
 5272              		@ args = 0, pretend = 0, frame = 0
 5273              		@ frame_needed = 0, uses_anonymous_args = 0
 5274              		@ link register save eliminated.
4224:TP2824/TP2802.c **** 
4225:TP2824/TP2802.c **** 
4226:TP2824/TP2802.c **** 
4227:TP2824/TP2802.c **** 		TVI_Command=0x0F;
 5275              		.loc 1 4227 0
 5276 0000 0F22     		movs	r2, #15
 5277 0002 074B     		ldr	r3, .L376
 5278 0004 1A70     		strb	r2, [r3]
4228:TP2824/TP2802.c **** 		presetNum=0;
 5279              		.loc 1 4228 0
 5280 0006 0023     		movs	r3, #0
 5281 0008 064A     		ldr	r2, .L376+4
 5282 000a 1370     		strb	r3, [r2]
4229:TP2824/TP2802.c **** 		TVI_speed=0;
 5283              		.loc 1 4229 0
 5284 000c 064A     		ldr	r2, .L376+8
 5285 000e 1370     		strb	r3, [r2]
4230:TP2824/TP2802.c **** 		TVI_Chksum=0xC5;
 5286              		.loc 1 4230 0
 5287 0010 C522     		movs	r2, #197
 5288 0012 064B     		ldr	r3, .L376+12
 5289 0014 1A70     		strb	r2, [r3]
4231:TP2824/TP2802.c **** 		ptztxflag=1;
 5290              		.loc 1 4231 0
 5291 0016 0122     		movs	r2, #1
 5292 0018 054B     		ldr	r3, .L376+16
 5293 001a 1A60     		str	r2, [r3]
 5294 001c 7047     		bx	lr
 5295              	.L377:
 5296 001e 00BF     		.align	2
ARM GAS  /tmp/ccSZlabO.s 			page 173


 5297              	.L376:
 5298 0020 00000000 		.word	TVI_Command
 5299 0024 00000000 		.word	presetNum
 5300 0028 00000000 		.word	TVI_speed
 5301 002c 00000000 		.word	TVI_Chksum
 5302 0030 00000000 		.word	ptztxflag
 5303              		.cfi_endproc
 5304              	.LFE102:
 5306              		.section	.text.Init_COC_PTZOUT1,"ax",%progbits
 5307              		.align	2
 5308              		.global	Init_COC_PTZOUT1
 5309              		.thumb
 5310              		.thumb_func
 5312              	Init_COC_PTZOUT1:
 5313              	.LFB103:
4232:TP2824/TP2802.c **** 		
4233:TP2824/TP2802.c **** 	
4234:TP2824/TP2802.c **** 
4235:TP2824/TP2802.c **** }
4236:TP2824/TP2802.c **** void Init_COC_PTZOUT1(void)
4237:TP2824/TP2802.c **** {
 5314              		.loc 1 4237 0
 5315              		.cfi_startproc
 5316              		@ args = 0, pretend = 0, frame = 0
 5317              		@ frame_needed = 0, uses_anonymous_args = 0
 5318 0000 08B5     		push	{r3, lr}
 5319              	.LCFI40:
 5320              		.cfi_def_cfa_offset 8
 5321              		.cfi_offset 3, -8
 5322              		.cfi_offset 14, -4
4238:TP2824/TP2802.c **** 	printf("\r\n Init_COC_PTZOUT1..");
 5323              		.loc 1 4238 0
 5324 0002 4448     		ldr	r0, .L380
 5325 0004 FFF7FEFF 		bl	printf
 5326              	.LVL709:
4239:TP2824/TP2802.c **** 
4240:TP2824/TP2802.c **** 	
4241:TP2824/TP2802.c **** 	tp28xx_byte_write(0x40,0x04);
 5327              		.loc 1 4241 0
 5328 0008 4020     		movs	r0, #64
 5329 000a 0421     		movs	r1, #4
 5330 000c FFF7FEFF 		bl	tp28xx_byte_write
 5331              	.LVL710:
4242:TP2824/TP2802.c **** 	tp28xx_byte_write(0xa7,0x83);
 5332              		.loc 1 4242 0
 5333 0010 A720     		movs	r0, #167
 5334 0012 8321     		movs	r1, #131
 5335 0014 FFF7FEFF 		bl	tp28xx_byte_write
 5336              	.LVL711:
4243:TP2824/TP2802.c **** 	tp28xx_byte_write(0xbe,0x80);
 5337              		.loc 1 4243 0
 5338 0018 BE20     		movs	r0, #190
 5339 001a 8021     		movs	r1, #128
 5340 001c FFF7FEFF 		bl	tp28xx_byte_write
 5341              	.LVL712:
4244:TP2824/TP2802.c **** 	tp28xx_byte_write(0x6f,0x42);
 5342              		.loc 1 4244 0
ARM GAS  /tmp/ccSZlabO.s 			page 174


 5343 0020 6F20     		movs	r0, #111
 5344 0022 4221     		movs	r1, #66
 5345 0024 FFF7FEFF 		bl	tp28xx_byte_write
 5346              	.LVL713:
4245:TP2824/TP2802.c **** 
4246:TP2824/TP2802.c **** 	tp28xx_byte_write(0x70,0x40);
 5347              		.loc 1 4246 0
 5348 0028 7020     		movs	r0, #112
 5349 002a 4021     		movs	r1, #64
 5350 002c FFF7FEFF 		bl	tp28xx_byte_write
 5351              	.LVL714:
4247:TP2824/TP2802.c **** 	tp28xx_byte_write(0x71,0x20);
 5352              		.loc 1 4247 0
 5353 0030 7120     		movs	r0, #113
 5354 0032 2021     		movs	r1, #32
 5355 0034 FFF7FEFF 		bl	tp28xx_byte_write
 5356              	.LVL715:
4248:TP2824/TP2802.c **** 	tp28xx_byte_write(0x72,0x00);
 5357              		.loc 1 4248 0
 5358 0038 7220     		movs	r0, #114
 5359 003a 0021     		movs	r1, #0
 5360 003c FFF7FEFF 		bl	tp28xx_byte_write
 5361              	.LVL716:
4249:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc0,0x00);
 5362              		.loc 1 4249 0
 5363 0040 C020     		movs	r0, #192
 5364 0042 0021     		movs	r1, #0
 5365 0044 FFF7FEFF 		bl	tp28xx_byte_write
 5366              	.LVL717:
4250:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc1,0x00);
 5367              		.loc 1 4250 0
 5368 0048 C120     		movs	r0, #193
 5369 004a 0021     		movs	r1, #0
 5370 004c FFF7FEFF 		bl	tp28xx_byte_write
 5371              	.LVL718:
4251:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc2,0x0b);
 5372              		.loc 1 4251 0
 5373 0050 C220     		movs	r0, #194
 5374 0052 0B21     		movs	r1, #11
 5375 0054 FFF7FEFF 		bl	tp28xx_byte_write
 5376              	.LVL719:
4252:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc3,0x0c);
 5377              		.loc 1 4252 0
 5378 0058 C320     		movs	r0, #195
 5379 005a 0C21     		movs	r1, #12
 5380 005c FFF7FEFF 		bl	tp28xx_byte_write
 5381              	.LVL720:
4253:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc4,0x0d);
 5382              		.loc 1 4253 0
 5383 0060 C420     		movs	r0, #196
 5384 0062 0D21     		movs	r1, #13
 5385 0064 FFF7FEFF 		bl	tp28xx_byte_write
 5386              	.LVL721:
4254:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc5,0x0e);
 5387              		.loc 1 4254 0
 5388 0068 C520     		movs	r0, #197
 5389 006a 0E21     		movs	r1, #14
ARM GAS  /tmp/ccSZlabO.s 			page 175


 5390 006c FFF7FEFF 		bl	tp28xx_byte_write
 5391              	.LVL722:
4255:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc6,0x19);
 5392              		.loc 1 4255 0
 5393 0070 C620     		movs	r0, #198
 5394 0072 1921     		movs	r1, #25
 5395 0074 FFF7FEFF 		bl	tp28xx_byte_write
 5396              	.LVL723:
4256:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc7,0x78);
 5397              		.loc 1 4256 0
 5398 0078 C720     		movs	r0, #199
 5399 007a 7821     		movs	r1, #120
 5400 007c FFF7FEFF 		bl	tp28xx_byte_write
 5401              	.LVL724:
4257:TP2824/TP2802.c **** 	tp28xx_byte_write(0xc8,0x21);
 5402              		.loc 1 4257 0
 5403 0080 C820     		movs	r0, #200
 5404 0082 2121     		movs	r1, #33
 5405 0084 FFF7FEFF 		bl	tp28xx_byte_write
 5406              	.LVL725:
4258:TP2824/TP2802.c **** 						
4259:TP2824/TP2802.c **** 	tp28xx_byte_write(0xcb,0x07); 
 5407              		.loc 1 4259 0
 5408 0088 CB20     		movs	r0, #203
 5409 008a 0721     		movs	r1, #7
 5410 008c FFF7FEFF 		bl	tp28xx_byte_write
 5411              	.LVL726:
4260:TP2824/TP2802.c **** 	tp28xx_byte_write(0xcc,0x08); 
 5412              		.loc 1 4260 0
 5413 0090 CC20     		movs	r0, #204
 5414 0092 0821     		movs	r1, #8
 5415 0094 FFF7FEFF 		bl	tp28xx_byte_write
 5416              	.LVL727:
4261:TP2824/TP2802.c **** 	tp28xx_byte_write(0xcd,0x09); 
 5417              		.loc 1 4261 0
 5418 0098 CD20     		movs	r0, #205
 5419 009a 0921     		movs	r1, #9
 5420 009c FFF7FEFF 		bl	tp28xx_byte_write
 5421              	.LVL728:
4262:TP2824/TP2802.c **** 	tp28xx_byte_write(0xce,0x0a); 
 5422              		.loc 1 4262 0
 5423 00a0 CE20     		movs	r0, #206
 5424 00a2 0A21     		movs	r1, #10
 5425 00a4 FFF7FEFF 		bl	tp28xx_byte_write
 5426              	.LVL729:
4263:TP2824/TP2802.c **** 	tp28xx_byte_write(0xcf,0x04); 
 5427              		.loc 1 4263 0
 5428 00a8 CF20     		movs	r0, #207
 5429 00aa 0421     		movs	r1, #4
 5430 00ac FFF7FEFF 		bl	tp28xx_byte_write
 5431              	.LVL730:
4264:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd0,0x00); 
 5432              		.loc 1 4264 0
 5433 00b0 D020     		movs	r0, #208
 5434 00b2 0021     		movs	r1, #0
 5435 00b4 FFF7FEFF 		bl	tp28xx_byte_write
 5436              	.LVL731:
ARM GAS  /tmp/ccSZlabO.s 			page 176


4265:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd1,0x00); 
 5437              		.loc 1 4265 0
 5438 00b8 D120     		movs	r0, #209
 5439 00ba 0021     		movs	r1, #0
 5440 00bc FFF7FEFF 		bl	tp28xx_byte_write
 5441              	.LVL732:
4266:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd2,0x60); 
 5442              		.loc 1 4266 0
 5443 00c0 D220     		movs	r0, #210
 5444 00c2 6021     		movs	r1, #96
 5445 00c4 FFF7FEFF 		bl	tp28xx_byte_write
 5446              	.LVL733:
4267:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd3,0x10); 
 5447              		.loc 1 4267 0
 5448 00c8 D320     		movs	r0, #211
 5449 00ca 1021     		movs	r1, #16
 5450 00cc FFF7FEFF 		bl	tp28xx_byte_write
 5451              	.LVL734:
4268:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd4,0x06); 
 5452              		.loc 1 4268 0
 5453 00d0 D420     		movs	r0, #212
 5454 00d2 0621     		movs	r1, #6
 5455 00d4 FFF7FEFF 		bl	tp28xx_byte_write
 5456              	.LVL735:
4269:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd5,0xbe); 
 5457              		.loc 1 4269 0
 5458 00d8 D520     		movs	r0, #213
 5459 00da BE21     		movs	r1, #190
 5460 00dc FFF7FEFF 		bl	tp28xx_byte_write
 5461              	.LVL736:
4270:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd6,0x39); 
 5462              		.loc 1 4270 0
 5463 00e0 D620     		movs	r0, #214
 5464 00e2 3921     		movs	r1, #57
 5465 00e4 FFF7FEFF 		bl	tp28xx_byte_write
 5466              	.LVL737:
4271:TP2824/TP2802.c **** 	tp28xx_byte_write(0xd7,0x27); 
 5467              		.loc 1 4271 0
 5468 00e8 D720     		movs	r0, #215
 5469 00ea 2721     		movs	r1, #39
 5470 00ec FFF7FEFF 		bl	tp28xx_byte_write
 5471              	.LVL738:
4272:TP2824/TP2802.c **** 
4273:TP2824/TP2802.c **** #if 1//ryan@20201231
4274:TP2824/TP2802.c **** tp28xx_byte_write(0xc2,0x0E);
 5472              		.loc 1 4274 0
 5473 00f0 C220     		movs	r0, #194
 5474 00f2 0E21     		movs	r1, #14
 5475 00f4 FFF7FEFF 		bl	tp28xx_byte_write
 5476              	.LVL739:
4275:TP2824/TP2802.c **** tp28xx_byte_write(0xc3,0x0F);
 5477              		.loc 1 4275 0
 5478 00f8 C320     		movs	r0, #195
 5479 00fa 0F21     		movs	r1, #15
 5480 00fc FFF7FEFF 		bl	tp28xx_byte_write
 5481              	.LVL740:
4276:TP2824/TP2802.c **** tp28xx_byte_write(0xc4,0x10);
ARM GAS  /tmp/ccSZlabO.s 			page 177


 5482              		.loc 1 4276 0
 5483 0100 C420     		movs	r0, #196
 5484 0102 1021     		movs	r1, #16
 5485 0104 FFF7FEFF 		bl	tp28xx_byte_write
 5486              	.LVL741:
4277:TP2824/TP2802.c **** tp28xx_byte_write(0xc5,0x11);
 5487              		.loc 1 4277 0
 5488 0108 C520     		movs	r0, #197
 5489 010a 1121     		movs	r1, #17
 5490 010c FFF7FEFF 		bl	tp28xx_byte_write
 5491              	.LVL742:
 5492 0110 08BD     		pop	{r3, pc}
 5493              	.L381:
 5494 0112 00BF     		.align	2
 5495              	.L380:
 5496 0114 0C020000 		.word	.LC41
 5497              		.cfi_endproc
 5498              	.LFE103:
 5500              		.section	.text.EQ_Detect,"ax",%progbits
 5501              		.align	2
 5502              		.global	EQ_Detect
 5503              		.thumb
 5504              		.thumb_func
 5506              	EQ_Detect:
 5507              	.LFB82:
1737:TP2824/TP2802.c ****     //tByte tmpval;
 5508              		.loc 1 1737 0
 5509              		.cfi_startproc
 5510              		@ args = 0, pretend = 0, frame = 0
 5511              		@ frame_needed = 0, uses_anonymous_args = 0
 5512 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5513              	.LCFI41:
 5514              		.cfi_def_cfa_offset 20
 5515              		.cfi_offset 4, -20
 5516              		.cfi_offset 5, -16
 5517              		.cfi_offset 6, -12
 5518              		.cfi_offset 7, -8
 5519              		.cfi_offset 14, -4
 5520 0002 83B0     		sub	sp, sp, #12
 5521              	.LCFI42:
 5522              		.cfi_def_cfa_offset 32
 5523              	.LVL743:
1742:TP2824/TP2802.c ****     {
 5524              		.loc 1 1742 0
 5525 0004 0024     		movs	r4, #0
 5526 0006 00F01DBC 		b	.L383
 5527              	.LVL744:
 5528              	.L443:
1748:TP2824/TP2802.c ****         status = tp28xx_byte_read(0x01);
 5529              		.loc 1 1748 0
 5530 000a 2046     		mov	r0, r4
 5531 000c FFF7FEFF 		bl	SetRegPage
 5532              	.LVL745:
1749:TP2824/TP2802.c **** 
 5533              		.loc 1 1749 0
 5534 0010 0120     		movs	r0, #1
 5535 0012 FFF7FEFF 		bl	tp28xx_byte_read
ARM GAS  /tmp/ccSZlabO.s 			page 178


 5536              	.LVL746:
 5537 0016 0646     		mov	r6, r0
 5538              	.LVL747:
1752:TP2824/TP2802.c ****         {
 5539              		.loc 1 1752 0
 5540 0018 10F0800F 		tst	r0, #128
 5541 001c 22D0     		beq	.L384
1756:TP2824/TP2802.c ****             {
 5542              		.loc 1 1756 0
 5543 001e A54B     		ldr	r3, .L456
 5544 0020 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 5545 0022 4BB9     		cbnz	r3, .L385
1758:TP2824/TP2802.c ****                 continue;
 5546              		.loc 1 1758 0
 5547 0024 A44B     		ldr	r3, .L456+4
 5548 0026 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 5549 0028 FF2B     		cmp	r3, #255
 5550 002a 00F00984 		beq	.L387
1758:TP2824/TP2802.c ****                 continue;
 5551              		.loc 1 1758 0 is_stmt 0 discriminator 1
 5552 002e 0133     		adds	r3, r3, #1
 5553 0030 A149     		ldr	r1, .L456+4
 5554 0032 0B55     		strb	r3, [r1, r4]
1759:TP2824/TP2802.c ****             }
 5555              		.loc 1 1759 0 is_stmt 1 discriminator 1
 5556 0034 00F004BC 		b	.L387
 5557              	.L385:
1765:TP2824/TP2802.c **** 				 	{
 5558              		.loc 1 1765 0
 5559 0038 A04B     		ldr	r3, .L456+8
 5560 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5561 003c 012B     		cmp	r3, #1
 5562 003e 07D1     		bne	.L388
1767:TP2824/TP2802.c **** 					VXISI2CWrite( 0x32, 0x00 );
 5563              		.loc 1 1767 0
 5564 0040 0120     		movs	r0, #1
 5565              	.LVL748:
 5566 0042 0146     		mov	r1, r0
 5567 0044 FFF7FEFF 		bl	Set_Video_Loss_OSD
 5568              	.LVL749:
1768:TP2824/TP2802.c **** 				 	}
 5569              		.loc 1 1768 0
 5570 0048 3220     		movs	r0, #50
 5571 004a 0021     		movs	r1, #0
 5572 004c FFF7FEFF 		bl	VXISI2CWrite
 5573              	.LVL750:
 5574              	.L388:
1773:TP2824/TP2802.c **** 
 5575              		.loc 1 1773 0
 5576 0050 FFF7FEFF 		bl	Init_TP280x_RegSet
 5577              	.LVL751:
1775:TP2824/TP2802.c **** 				 	{
 5578              		.loc 1 1775 0
 5579 0054 994B     		ldr	r3, .L456+8
 5580 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5581 0058 012B     		cmp	r3, #1
 5582 005a 72D1     		bne	.L389
ARM GAS  /tmp/ccSZlabO.s 			page 179


1778:TP2824/TP2802.c **** 				 	}
 5583              		.loc 1 1778 0
 5584 005c 0120     		movs	r0, #1
 5585 005e FFF7FEFF 		bl	HS_Select_Win
 5586              	.LVL752:
 5587 0062 6EE0     		b	.L389
 5588              	.LVL753:
 5589              	.L384:
1803:TP2824/TP2802.c ****                 flag_LOCKED = CVBS_FLAG_LOCKED;
 5590              		.loc 1 1803 0
 5591 0064 2546     		mov	r5, r4
 5592 0066 964B     		ldr	r3, .L456+12
 5593 0068 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 5594 006a 083B     		subs	r3, r3, #8
 5595 006c DBB2     		uxtb	r3, r3
 5596 006e 012B     		cmp	r3, #1
 5597 0070 03D8     		bhi	.L390
1804:TP2824/TP2802.c ****             else
 5598              		.loc 1 1804 0
 5599 0072 6022     		movs	r2, #96
 5600 0074 934B     		ldr	r3, .L456+16
 5601 0076 1A70     		strb	r2, [r3]
 5602 0078 02E0     		b	.L391
 5603              	.L390:
1806:TP2824/TP2802.c **** 
 5604              		.loc 1 1806 0
 5605 007a 6022     		movs	r2, #96
 5606 007c 914B     		ldr	r3, .L456+16
 5607 007e 1A70     		strb	r2, [r3]
 5608              	.L391:
1808:TP2824/TP2802.c ****             {
 5609              		.loc 1 1808 0
 5610 0080 06F06003 		and	r3, r6, #96
 5611 0084 602B     		cmp	r3, #96
 5612 0086 22D1     		bne	.L392
1810:TP2824/TP2802.c ****                 {
 5613              		.loc 1 1810 0
 5614 0088 8A4B     		ldr	r3, .L456
 5615 008a 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5616 008c 022B     		cmp	r3, #2
 5617 008e 07D1     		bne	.L393
1812:TP2824/TP2802.c **** 				#if 0
 5618              		.loc 1 1812 0
 5619 0090 894B     		ldr	r3, .L456+4
 5620 0092 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5621 0094 FF2B     		cmp	r3, #255
 5622 0096 54D0     		beq	.L389
1812:TP2824/TP2802.c **** 				#if 0
 5623              		.loc 1 1812 0 is_stmt 0 discriminator 1
 5624 0098 0133     		adds	r3, r3, #1
 5625 009a 874A     		ldr	r2, .L456+4
 5626 009c 5355     		strb	r3, [r2, r5]
 5627 009e 50E0     		b	.L389
 5628              	.L393:
1839:TP2824/TP2802.c ****                 {
 5629              		.loc 1 1839 0 is_stmt 1
 5630 00a0 53B9     		cbnz	r3, .L394
ARM GAS  /tmp/ccSZlabO.s 			page 180


1841:TP2824/TP2802.c ****                     count[i] = 0;
 5631              		.loc 1 1841 0
 5632 00a2 0122     		movs	r2, #1
 5633 00a4 834B     		ldr	r3, .L456
 5634 00a6 5A55     		strb	r2, [r3, r5]
1842:TP2824/TP2802.c ****                     printf("1video in ch%02x \r\n", (tWord)i);
 5635              		.loc 1 1842 0
 5636 00a8 0022     		movs	r2, #0
 5637 00aa 834B     		ldr	r3, .L456+4
 5638 00ac 5A55     		strb	r2, [r3, r5]
1843:TP2824/TP2802.c ****                 }
 5639              		.loc 1 1843 0
 5640 00ae 8648     		ldr	r0, .L456+20
 5641              	.LVL754:
 5642 00b0 2946     		mov	r1, r5
 5643 00b2 FFF7FEFF 		bl	printf
 5644              	.LVL755:
 5645 00b6 44E0     		b	.L389
 5646              	.LVL756:
 5647              	.L394:
1847:TP2824/TP2802.c ****                     count[i] = 0;
 5648              		.loc 1 1847 0
 5649 00b8 0222     		movs	r2, #2
 5650 00ba 7E4B     		ldr	r3, .L456
 5651 00bc 5A55     		strb	r2, [r3, r5]
1848:TP2824/TP2802.c ****                     printf("video locked ch%02x \r\n", (tWord)i);
 5652              		.loc 1 1848 0
 5653 00be 0022     		movs	r2, #0
 5654 00c0 7D4B     		ldr	r3, .L456+4
 5655 00c2 5A55     		strb	r2, [r3, r5]
1849:TP2824/TP2802.c ****                 }
 5656              		.loc 1 1849 0
 5657 00c4 8148     		ldr	r0, .L456+24
 5658              	.LVL757:
 5659 00c6 2946     		mov	r1, r5
 5660 00c8 FFF7FEFF 		bl	printf
 5661              	.LVL758:
 5662 00cc 39E0     		b	.L389
 5663              	.LVL759:
 5664              	.L392:
1855:TP2824/TP2802.c ****                 {
 5665              		.loc 1 1855 0
 5666 00ce 794B     		ldr	r3, .L456
 5667 00d0 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5668 00d2 53B9     		cbnz	r3, .L395
1857:TP2824/TP2802.c ****                     count[i] = 0;
 5669              		.loc 1 1857 0
 5670 00d4 0122     		movs	r2, #1
 5671 00d6 774B     		ldr	r3, .L456
 5672 00d8 5A55     		strb	r2, [r3, r5]
1858:TP2824/TP2802.c ****                     printf("video in ch%02x \r\n", (tWord)i);
 5673              		.loc 1 1858 0
 5674 00da 0022     		movs	r2, #0
 5675 00dc 764B     		ldr	r3, .L456+4
 5676 00de 5A55     		strb	r2, [r3, r5]
1859:TP2824/TP2802.c ****                 }
 5677              		.loc 1 1859 0
ARM GAS  /tmp/ccSZlabO.s 			page 181


 5678 00e0 7B48     		ldr	r0, .L456+28
 5679              	.LVL760:
 5680 00e2 2946     		mov	r1, r5
 5681 00e4 FFF7FEFF 		bl	printf
 5682              	.LVL761:
 5683 00e8 2BE0     		b	.L389
 5684              	.LVL762:
 5685              	.L395:
1861:TP2824/TP2802.c ****                 {
 5686              		.loc 1 1861 0
 5687 00ea 022B     		cmp	r3, #2
 5688 00ec 0AD1     		bne	.L396
1871:TP2824/TP2802.c ****                     count[i] = 0;
 5689              		.loc 1 1871 0
 5690 00ee 0322     		movs	r2, #3
 5691 00f0 704B     		ldr	r3, .L456
 5692 00f2 5A55     		strb	r2, [r3, r5]
1872:TP2824/TP2802.c ****                     printf("video unstable ch%02x \r\n", (tWord)i);
 5693              		.loc 1 1872 0
 5694 00f4 0022     		movs	r2, #0
 5695 00f6 704B     		ldr	r3, .L456+4
 5696 00f8 5A55     		strb	r2, [r3, r5]
1873:TP2824/TP2802.c **** 			}		
 5697              		.loc 1 1873 0
 5698 00fa 7648     		ldr	r0, .L456+32
 5699              	.LVL763:
 5700 00fc 2946     		mov	r1, r5
 5701 00fe FFF7FEFF 		bl	printf
 5702              	.LVL764:
 5703 0102 1EE0     		b	.L389
 5704              	.LVL765:
 5705              	.L396:
1878:TP2824/TP2802.c ****                     if(VIDEO_UNLOCK == state[i] && count[i] > 2)
 5706              		.loc 1 1878 0
 5707 0104 6C4A     		ldr	r2, .L456+4
 5708 0106 525D     		ldrb	r2, [r2, r5]	@ zero_extendqisi2
 5709 0108 FF2A     		cmp	r2, #255
 5710 010a 02D0     		beq	.L397
1878:TP2824/TP2802.c ****                     if(VIDEO_UNLOCK == state[i] && count[i] > 2)
 5711              		.loc 1 1878 0 is_stmt 0 discriminator 1
 5712 010c 0132     		adds	r2, r2, #1
 5713 010e 6A49     		ldr	r1, .L456+4
 5714 0110 4A55     		strb	r2, [r1, r5]
 5715              	.L397:
1879:TP2824/TP2802.c ****                     {
 5716              		.loc 1 1879 0 is_stmt 1
 5717 0112 032B     		cmp	r3, #3
 5718 0114 15D1     		bne	.L389
1879:TP2824/TP2802.c ****                     {
 5719              		.loc 1 1879 0 is_stmt 0 discriminator 1
 5720 0116 684B     		ldr	r3, .L456+4
 5721 0118 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5722 011a 022B     		cmp	r3, #2
 5723 011c 11D9     		bls	.L389
1881:TP2824/TP2802.c ****                         count[i] = 0;
 5724              		.loc 1 1881 0 is_stmt 1
 5725 011e 0122     		movs	r2, #1
ARM GAS  /tmp/ccSZlabO.s 			page 182


 5726 0120 644B     		ldr	r3, .L456
 5727 0122 5A55     		strb	r2, [r3, r5]
1882:TP2824/TP2802.c ****                         TP28xx_reset_default(chip, i);
 5728              		.loc 1 1882 0
 5729 0124 0022     		movs	r2, #0
 5730 0126 644B     		ldr	r3, .L456+4
 5731 0128 5A55     		strb	r2, [r3, r5]
1883:TP2824/TP2802.c ****                         printf("video unlocked ch%02x \r\n", (tWord)i);                        
 5732              		.loc 1 1883 0
 5733 012a 6B4B     		ldr	r3, .L456+36
 5734 012c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5735              	.LVL766:
 5736 012e 2146     		mov	r1, r4
 5737 0130 FFF7FEFF 		bl	TP28xx_reset_default
 5738              	.LVL767:
1884:TP2824/TP2802.c ****                         VS4210_Rx_NoSignal(i) ;//chunyu
 5739              		.loc 1 1884 0
 5740 0134 6948     		ldr	r0, .L456+40
 5741 0136 2946     		mov	r1, r5
 5742 0138 FFF7FEFF 		bl	printf
 5743              	.LVL768:
1885:TP2824/TP2802.c ****                     }
 5744              		.loc 1 1885 0
 5745 013c 2046     		mov	r0, r4
 5746 013e FFF7FEFF 		bl	VS4210_Rx_NoSignal
 5747              	.LVL769:
 5748              	.L389:
1893:TP2824/TP2802.c ****         {
 5749              		.loc 1 1893 0
 5750 0142 2546     		mov	r5, r4
 5751 0144 5B4B     		ldr	r3, .L456
 5752 0146 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 5753 0148 012B     		cmp	r3, #1
 5754 014a 76D1     		bne	.L398
1895:TP2824/TP2802.c ****             sywd = cvstd & 0x08;
 5755              		.loc 1 1895 0
 5756 014c 0320     		movs	r0, #3
 5757 014e FFF7FEFF 		bl	tp28xx_byte_read
 5758              	.LVL770:
1896:TP2824/TP2802.c ****             cvstd &= 0x07;
 5759              		.loc 1 1896 0
 5760 0152 00F00802 		and	r2, r0, #8
 5761 0156 624B     		ldr	r3, .L456+44
 5762 0158 1A60     		str	r2, [r3]
1897:TP2824/TP2802.c ****             fmt = mode[i];
 5763              		.loc 1 1897 0
 5764 015a 00F00702 		and	r2, r0, #7
 5765              	.LVL771:
1898:TP2824/TP2802.c ****             if(NTPAL == cvstd && flag_CVBS)
 5766              		.loc 1 1898 0
 5767 015e 584B     		ldr	r3, .L456+12
 5768 0160 1F5D     		ldrb	r7, [r3, r4]	@ zero_extendqisi2
 5769              	.LVL772:
1899:TP2824/TP2802.c ****             {
 5770              		.loc 1 1899 0
 5771 0162 062A     		cmp	r2, #6
 5772 0164 07D1     		bne	.L399
ARM GAS  /tmp/ccSZlabO.s 			page 183


1899:TP2824/TP2802.c ****             {
 5773              		.loc 1 1899 0 is_stmt 0 discriminator 1
 5774 0166 5F4B     		ldr	r3, .L456+48
 5775 0168 1B68     		ldr	r3, [r3]
 5776 016a 23B1     		cbz	r3, .L399
1902:TP2824/TP2802.c ****                     fmt = PAL;
 5777              		.loc 1 1902 0 is_stmt 1
 5778 016c 16F0040F 		tst	r6, #4
 5779 0170 43D0     		beq	.L444
1903:TP2824/TP2802.c ****                 else
 5780              		.loc 1 1903 0
 5781 0172 0922     		movs	r2, #9
 5782              	.LVL773:
 5783 0174 54E0     		b	.L400
 5784              	.LVL774:
 5785              	.L399:
1907:TP2824/TP2802.c ****             {
 5786              		.loc 1 1907 0
 5787 0176 042A     		cmp	r2, #4
 5788 0178 0AD1     		bne	.L401
1909:TP2824/TP2802.c ****                     fmt = R4M12;
 5789              		.loc 1 1909 0
 5790 017a 5B4B     		ldr	r3, .L456+52
 5791 017c 1B68     		ldr	r3, [r3]
 5792 017e 002B     		cmp	r3, #0
 5793 0180 3DD0     		beq	.L445
1909:TP2824/TP2802.c ****                     fmt = R4M12;
 5794              		.loc 1 1909 0 is_stmt 0 discriminator 1
 5795 0182 4D4B     		ldr	r3, .L456+4
 5796 0184 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5797 0186 13F0020F 		tst	r3, #2
 5798 018a 3AD1     		bne	.L446
1912:TP2824/TP2802.c ****             }
 5799              		.loc 1 1912 0 is_stmt 1
 5800 018c 0C22     		movs	r2, #12
 5801              	.LVL775:
 5802 018e 47E0     		b	.L400
 5803              	.LVL776:
 5804              	.L401:
1914:TP2824/TP2802.c ****             {
 5805              		.loc 1 1914 0
 5806 0190 052A     		cmp	r2, #5
 5807 0192 38D0     		beq	.L447
1918:TP2824/TP2802.c ****             {
 5808              		.loc 1 1918 0
 5809 0194 022A     		cmp	r2, #2
 5810 0196 09D1     		bne	.L402
1920:TP2824/TP2802.c ****                     fmt = R3M20;
 5811              		.loc 1 1920 0
 5812 0198 534B     		ldr	r3, .L456+52
 5813 019a 1B68     		ldr	r3, [r3]
 5814 019c 002B     		cmp	r3, #0
 5815 019e 3FD0     		beq	.L400
1920:TP2824/TP2802.c ****                     fmt = R3M20;
 5816              		.loc 1 1920 0 is_stmt 0 discriminator 1
 5817 01a0 454B     		ldr	r3, .L456+4
 5818 01a2 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
ARM GAS  /tmp/ccSZlabO.s 			page 184


 5819 01a4 13F0020F 		tst	r3, #2
 5820 01a8 2FD1     		bne	.L448
 5821 01aa 39E0     		b	.L400
 5822              	.L402:
1925:TP2824/TP2802.c ****             {
 5823              		.loc 1 1925 0 is_stmt 1
 5824 01ac 42B9     		cbnz	r2, .L403
1927:TP2824/TP2802.c ****                     fmt = R4M30;
 5825              		.loc 1 1927 0
 5826 01ae 4E4B     		ldr	r3, .L456+52
 5827 01b0 1B68     		ldr	r3, [r3]
 5828 01b2 ABB3     		cbz	r3, .L400
1927:TP2824/TP2802.c ****                     fmt = R4M30;
 5829              		.loc 1 1927 0 is_stmt 0 discriminator 1
 5830 01b4 404B     		ldr	r3, .L456+4
 5831 01b6 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5832 01b8 13F0020F 		tst	r3, #2
 5833 01bc 27D1     		bne	.L449
 5834 01be 2FE0     		b	.L400
 5835              	.L403:
1932:TP2824/TP2802.c ****             {
 5836              		.loc 1 1932 0 is_stmt 1
 5837 01c0 032A     		cmp	r2, #3
 5838 01c2 2DD9     		bls	.L400
1938:TP2824/TP2802.c ****                 {
 5839              		.loc 1 1938 0
 5840 01c4 484B     		ldr	r3, .L456+52
 5841 01c6 1B68     		ldr	r3, [r3]
 5842 01c8 1BB3     		cbz	r3, .L450
1940:TP2824/TP2802.c ****                     tmp = tp28xx_byte_read(0x04);
 5843              		.loc 1 1940 0
 5844 01ca 2F20     		movs	r0, #47
 5845 01cc 0921     		movs	r1, #9
 5846 01ce FFF7FEFF 		bl	tp28xx_byte_write
 5847              	.LVL777:
1941:TP2824/TP2802.c ****                     if((tmp > 0x48) && (tmp < 0x55))
 5848              		.loc 1 1941 0
 5849 01d2 0420     		movs	r0, #4
 5850 01d4 FFF7FEFF 		bl	tp28xx_byte_read
 5851              	.LVL778:
1942:TP2824/TP2802.c ****                     {
 5852              		.loc 1 1942 0
 5853 01d8 A0F14903 		sub	r3, r0, #73
 5854 01dc DBB2     		uxtb	r3, r3
 5855 01de 0B2B     		cmp	r3, #11
 5856 01e0 19D9     		bls	.L451
1946:TP2824/TP2802.c ****                     {
 5857              		.loc 1 1946 0
 5858 01e2 A0F15603 		sub	r3, r0, #86
 5859 01e6 DBB2     		uxtb	r3, r3
 5860 01e8 0B2B     		cmp	r3, #11
 5861 01ea 16D9     		bls	.L452
1950:TP2824/TP2802.c ****                     {
 5862              		.loc 1 1950 0
 5863 01ec A0F17103 		sub	r3, r0, #113
 5864 01f0 DBB2     		uxtb	r3, r3
 5865 01f2 0E2B     		cmp	r3, #14
ARM GAS  /tmp/ccSZlabO.s 			page 185


 5866 01f4 13D9     		bls	.L453
1898:TP2824/TP2802.c ****             if(NTPAL == cvstd && flag_CVBS)
 5867              		.loc 1 1898 0
 5868 01f6 3A46     		mov	r2, r7
 5869 01f8 12E0     		b	.L400
 5870              	.LVL779:
 5871              	.L444:
1905:TP2824/TP2802.c ****             }
 5872              		.loc 1 1905 0
 5873 01fa 0822     		movs	r2, #8
 5874              	.LVL780:
 5875 01fc 10E0     		b	.L400
 5876              	.LVL781:
 5877              	.L445:
1912:TP2824/TP2802.c ****             }
 5878              		.loc 1 1912 0
 5879 01fe 0C22     		movs	r2, #12
 5880              	.LVL782:
 5881 0200 0EE0     		b	.L400
 5882              	.LVL783:
 5883              	.L446:
1910:TP2824/TP2802.c ****                 else
 5884              		.loc 1 1910 0
 5885 0202 2422     		movs	r2, #36
 5886              	.LVL784:
 5887 0204 0CE0     		b	.L400
 5888              	.LVL785:
 5889              	.L447:
1916:TP2824/TP2802.c ****             }
 5890              		.loc 1 1916 0
 5891 0206 0D22     		movs	r2, #13
 5892              	.LVL786:
 5893 0208 0AE0     		b	.L400
 5894              	.LVL787:
 5895              	.L448:
1921:TP2824/TP2802.c ****                 else
 5896              		.loc 1 1921 0
 5897 020a 2322     		movs	r2, #35
 5898              	.LVL788:
 5899 020c 08E0     		b	.L400
 5900              	.LVL789:
 5901              	.L449:
1928:TP2824/TP2802.c ****                 else
 5902              		.loc 1 1928 0
 5903 020e 2622     		movs	r2, #38
 5904              	.LVL790:
 5905 0210 06E0     		b	.L400
 5906              	.LVL791:
 5907              	.L450:
1898:TP2824/TP2802.c ****             if(NTPAL == cvstd && flag_CVBS)
 5908              		.loc 1 1898 0
 5909 0212 3A46     		mov	r2, r7
 5910              	.LVL792:
 5911 0214 04E0     		b	.L400
 5912              	.LVL793:
 5913              	.L451:
1944:TP2824/TP2802.c ****                     }
ARM GAS  /tmp/ccSZlabO.s 			page 186


 5914              		.loc 1 1944 0
 5915 0216 2022     		movs	r2, #32
 5916 0218 02E0     		b	.L400
 5917              	.L452:
1948:TP2824/TP2802.c ****                     }
 5918              		.loc 1 1948 0
 5919 021a 2222     		movs	r2, #34
 5920 021c 00E0     		b	.L400
 5921              	.L453:
1952:TP2824/TP2802.c ****                     }
 5922              		.loc 1 1952 0
 5923 021e 2522     		movs	r2, #37
 5924              	.LVL794:
 5925              	.L400:
1965:TP2824/TP2802.c **** 		            {
 5926              		.loc 1 1965 0
 5927 0220 274B     		ldr	r3, .L456+12
 5928 0222 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5929 0224 9342     		cmp	r3, r2
 5930 0226 08D0     		beq	.L398
1967:TP2824/TP2802.c **** 		                printf("Set_VidResmode[%d] =%d\r\n",(int)i, (int)fmt);
 5931              		.loc 1 1967 0
 5932 0228 254B     		ldr	r3, .L456+12
 5933 022a 5A55     		strb	r2, [r3, r5]
1968:TP2824/TP2802.c **** 		                Set_VidRes(i);
 5934              		.loc 1 1968 0
 5935 022c 2F48     		ldr	r0, .L456+56
 5936 022e 2946     		mov	r1, r5
 5937 0230 FFF7FEFF 		bl	printf
 5938              	.LVL795:
1969:TP2824/TP2802.c **** 		            }
 5939              		.loc 1 1969 0
 5940 0234 2046     		mov	r0, r4
 5941 0236 FFF7FEFF 		bl	Set_VidRes
 5942              	.LVL796:
 5943              	.L398:
1974:TP2824/TP2802.c ****         {
 5944              		.loc 1 1974 0
 5945 023a 1E4B     		ldr	r3, .L456
 5946 023c 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5947 023e 022B     		cmp	r3, #2
 5948 0240 40F0FE82 		bne	.L387
1976:TP2824/TP2802.c ****             {
 5949              		.loc 1 1976 0
 5950 0244 1C4A     		ldr	r2, .L456+4
 5951 0246 525D     		ldrb	r2, [r2, r5]	@ zero_extendqisi2
 5952 0248 002A     		cmp	r2, #0
 5953 024a 72D1     		bne	.L404
1978:TP2824/TP2802.c ****                 CurCH = i;
 5954              		.loc 1 1978 0
 5955 024c 284B     		ldr	r3, .L456+60
 5956 024e 5A55     		strb	r2, [r3, r5]
1979:TP2824/TP2802.c ****                 if( (R720P30V2 == mode[i]) || (R720P25V2 == mode[i]) )
 5957              		.loc 1 1979 0
 5958 0250 284B     		ldr	r3, .L456+64
 5959 0252 1C70     		strb	r4, [r3]
1980:TP2824/TP2802.c ****                 {
ARM GAS  /tmp/ccSZlabO.s 			page 187


 5960              		.loc 1 1980 0
 5961 0254 1A4B     		ldr	r3, .L456+12
 5962 0256 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 5963 0258 0C3B     		subs	r3, r3, #12
 5964 025a DBB2     		uxtb	r3, r3
 5965 025c 012B     		cmp	r3, #1
 5966 025e 0DD8     		bhi	.L405
1982:TP2824/TP2802.c ****                     {
 5967              		.loc 1 1982 0
 5968 0260 0320     		movs	r0, #3
 5969 0262 FFF7FEFF 		bl	tp28xx_byte_read
 5970              	.LVL797:
 5971 0266 10F0080F 		tst	r0, #8
 5972 026a 07D1     		bne	.L405
1984:TP2824/TP2802.c ****                         Set_VidRes(i);
 5973              		.loc 1 1984 0
 5974 026c 144A     		ldr	r2, .L456+12
 5975 026e 535D     		ldrb	r3, [r2, r5]	@ zero_extendqisi2
 5976 0270 23F00803 		bic	r3, r3, #8
 5977 0274 5355     		strb	r3, [r2, r5]
1985:TP2824/TP2802.c ****                         //printf("TVI_Set_VidRes\r\n");
 5978              		.loc 1 1985 0
 5979 0276 2046     		mov	r0, r4
 5980 0278 FFF7FEFF 		bl	Set_VidRes
 5981              	.LVL798:
 5982              	.L405:
1991:TP2824/TP2802.c **** 
 5983              		.loc 1 1991 0
 5984 027c A4F10A00 		sub	r0, r4, #10
 5985 0280 C0B2     		uxtb	r0, r0
 5986 0282 1D4B     		ldr	r3, .L456+68
 5987 0284 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 5988 0286 FFF7FEFF 		bl	tp28xx_byte_write
 5989              	.LVL799:
1994:TP2824/TP2802.c ****                 {
 5990              		.loc 1 1994 0
 5991 028a 134B     		ldr	r3, .L456+36
 5992 028c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5993 028e 2F2B     		cmp	r3, #47
 5994 0290 38D1     		bne	.L406
1996:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfa, REG_FA[i]);
 5995              		.loc 1 1996 0
 5996 0292 F820     		movs	r0, #248
 5997 0294 194B     		ldr	r3, .L456+72
 5998 0296 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 5999 0298 FFF7FEFF 		bl	tp28xx_byte_write
 6000              	.LVL800:
1997:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfb, REG_FA[i]);
 6001              		.loc 1 1997 0
 6002 029c 184B     		ldr	r3, .L456+76
 6003 029e 5D5D     		ldrb	r5, [r3, r5]	@ zero_extendqisi2
 6004 02a0 FA20     		movs	r0, #250
 6005 02a2 2946     		mov	r1, r5
 6006 02a4 FFF7FEFF 		bl	tp28xx_byte_write
 6007              	.LVL801:
1998:TP2824/TP2802.c ****                 }
 6008              		.loc 1 1998 0
ARM GAS  /tmp/ccSZlabO.s 			page 188


 6009 02a8 FB20     		movs	r0, #251
 6010 02aa 2946     		mov	r1, r5
 6011 02ac FFF7FEFF 		bl	tp28xx_byte_write
 6012              	.LVL802:
 6013 02b0 32E0     		b	.L407
 6014              	.L457:
 6015 02b2 00BF     		.align	2
 6016              	.L456:
 6017 02b4 00000000 		.word	state
 6018 02b8 00000000 		.word	count
 6019 02bc 00000000 		.word	SelectInputMode
 6020 02c0 00000000 		.word	mode
 6021 02c4 00000000 		.word	flag_LOCKED
 6022 02c8 24020000 		.word	.LC42
 6023 02cc 38020000 		.word	.LC43
 6024 02d0 50020000 		.word	.LC44
 6025 02d4 64020000 		.word	.LC45
 6026 02d8 00000000 		.word	chip
 6027 02dc 80020000 		.word	.LC46
 6028 02e0 00000000 		.word	sywd
 6029 02e4 00000000 		.word	flag_CVBS
 6030 02e8 00000000 		.word	flag_MEGA
 6031 02ec 9C020000 		.word	.LC47
 6032 02f0 00000000 		.word	std
 6033 02f4 00000000 		.word	CurCH
 6034 02f8 00000000 		.word	.LANCHOR33
 6035 02fc 00000000 		.word	.LANCHOR34
 6036 0300 00000000 		.word	.LANCHOR35
 6037              	.L406:
2002:TP2824/TP2802.c ****                     tp28xx_byte_write(0xfa, REG_FA[i]);
 6038              		.loc 1 2002 0
 6039 0304 F720     		movs	r0, #247
 6040 0306 AD4B     		ldr	r3, .L458
 6041 0308 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6042 030a FFF7FEFF 		bl	tp28xx_byte_write
 6043              	.LVL803:
2003:TP2824/TP2802.c ****                     //printf("set output ch%02x \r\n", (tWord)CH[i]);
 6044              		.loc 1 2003 0
 6045 030e FA20     		movs	r0, #250
 6046 0310 AB4B     		ldr	r3, .L458+4
 6047 0312 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6048 0314 FFF7FEFF 		bl	tp28xx_byte_write
 6049              	.LVL804:
 6050              	.L407:
2112:TP2824/TP2802.c ****                 {
 6051              		.loc 1 2112 0
 6052 0318 AA4B     		ldr	r3, .L458+8
 6053 031a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6054 031c AA4A     		ldr	r2, .L458+12
 6055 031e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 6056 0320 8B42     		cmp	r3, r1
 6057 0322 00F08D82 		beq	.L387
2114:TP2824/TP2802.c ****                     //CreateMDIN340VideoInstance();  //chunyu
 6058              		.loc 1 2114 0
 6059 0326 A74B     		ldr	r3, .L458+8
 6060 0328 1970     		strb	r1, [r3]
2116:TP2824/TP2802.c **** 
ARM GAS  /tmp/ccSZlabO.s 			page 189


 6061              		.loc 1 2116 0
 6062 032a A848     		ldr	r0, .L458+16
 6063 032c FFF7FEFF 		bl	printf
 6064              	.LVL805:
 6065 0330 86E2     		b	.L387
 6066              	.L404:
2120:TP2824/TP2802.c ****             {
 6067              		.loc 1 2120 0
 6068 0332 012A     		cmp	r2, #1
 6069 0334 3BD1     		bne	.L408
2122:TP2824/TP2802.c ****                 {
 6070              		.loc 1 2122 0
 6071 0336 A64B     		ldr	r3, .L458+20
 6072 0338 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6073 033a 232B     		cmp	r3, #35
 6074 033c 40F28082 		bls	.L387
2124:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
 6075              		.loc 1 2124 0
 6076 0340 0120     		movs	r0, #1
 6077 0342 FFF7FEFF 		bl	tp28xx_byte_read
 6078              	.LVL806:
 6079 0346 0646     		mov	r6, r0
 6080              	.LVL807:
2125:TP2824/TP2802.c ****                     if(mode[i] == NTSC || mode[i] == PAL)
 6081              		.loc 1 2125 0
 6082 0348 A248     		ldr	r0, .L458+24
 6083 034a 3146     		mov	r1, r6
 6084 034c FFF7FEFF 		bl	printf
 6085              	.LVL808:
2126:TP2824/TP2802.c ****                              printf("CVBS  mode:%d\r\n", (tWord)mode[i]);
 6086              		.loc 1 2126 0
 6087 0350 A14B     		ldr	r3, .L458+28
 6088 0352 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6089 0354 A1F10803 		sub	r3, r1, #8
 6090 0358 DBB2     		uxtb	r3, r3
 6091 035a 012B     		cmp	r3, #1
 6092 035c 03D8     		bhi	.L409
2127:TP2824/TP2802.c **** //                 if( 0x60 == (0x64 & tmp))
 6093              		.loc 1 2127 0
 6094 035e 9F48     		ldr	r0, .L458+32
 6095 0360 FFF7FEFF 		bl	printf
 6096              	.LVL809:
 6097 0364 6CE2     		b	.L387
 6098              	.L409:
2129:TP2824/TP2802.c ****             			   (mode[i] != R720P30 && mode[i] != R720P25 && mode[i] != R720P30V2 && mode[i] != R
 6099              		.loc 1 2129 0
 6100 0366 06F06406 		and	r6, r6, #100
 6101              	.LVL810:
 6102 036a 602E     		cmp	r6, #96
 6103 036c 40F06882 		bne	.L387
2130:TP2824/TP2802.c ****                     {
 6104              		.loc 1 2130 0 discriminator 1
 6105 0370 0B1F     		subs	r3, r1, #4
 6106 0372 DBB2     		uxtb	r3, r3
2129:TP2824/TP2802.c ****             			   (mode[i] != R720P30 && mode[i] != R720P25 && mode[i] != R720P30V2 && mode[i] != R
 6107              		.loc 1 2129 0 discriminator 1
 6108 0374 012B     		cmp	r3, #1
ARM GAS  /tmp/ccSZlabO.s 			page 190


 6109 0376 40F26382 		bls	.L387
2130:TP2824/TP2802.c ****                     {
 6110              		.loc 1 2130 0
 6111 037a 0C29     		cmp	r1, #12
 6112 037c 00F06082 		beq	.L387
2130:TP2824/TP2802.c ****                     {
 6113              		.loc 1 2130 0 is_stmt 0 discriminator 1
 6114 0380 0D29     		cmp	r1, #13
 6115 0382 00F05D82 		beq	.L387
2130:TP2824/TP2802.c ****                     {
 6116              		.loc 1 2130 0 discriminator 2
 6117 0386 0029     		cmp	r1, #0
 6118 0388 00F05A82 		beq	.L387
2130:TP2824/TP2802.c ****                     {
 6119              		.loc 1 2130 0 discriminator 3
 6120 038c 0129     		cmp	r1, #1
 6121 038e 00F05782 		beq	.L387
2133:TP2824/TP2802.c ****                         {
 6122              		.loc 1 2133 0 is_stmt 1
 6123 0392 2046     		mov	r0, r4
 6124 0394 FFF7FEFF 		bl	Set_HDC
 6125              	.LVL811:
 6126 0398 0028     		cmp	r0, #0
 6127 039a 00F05182 		beq	.L387
2135:TP2824/TP2802.c ****                             printf("turn to C ch%02x\r\n", (tWord)i);
 6128              		.loc 1 2135 0
 6129 039e 0222     		movs	r2, #2
 6130 03a0 8F4B     		ldr	r3, .L458+36
 6131 03a2 5A55     		strb	r2, [r3, r5]
2136:TP2824/TP2802.c ****                         }
 6132              		.loc 1 2136 0
 6133 03a4 8F48     		ldr	r0, .L458+40
 6134 03a6 2946     		mov	r1, r5
 6135 03a8 FFF7FEFF 		bl	printf
 6136              	.LVL812:
 6137 03ac 48E2     		b	.L387
 6138              	.L408:
2141:TP2824/TP2802.c ****             {
 6139              		.loc 1 2141 0
 6140 03ae 022A     		cmp	r2, #2
 6141 03b0 3DD1     		bne	.L410
2143:TP2824/TP2802.c ****                 {
 6142              		.loc 1 2143 0
 6143 03b2 874B     		ldr	r3, .L458+20
 6144 03b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6145 03b6 232B     		cmp	r3, #35
 6146 03b8 40F24282 		bls	.L387
2145:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
 6147              		.loc 1 2145 0
 6148 03bc 0120     		movs	r0, #1
 6149 03be FFF7FEFF 		bl	tp28xx_byte_read
 6150              	.LVL813:
 6151 03c2 0646     		mov	r6, r0
 6152              	.LVL814:
2146:TP2824/TP2802.c **** 			if(mode[i] == NTSC || mode[i] == PAL)
 6153              		.loc 1 2146 0
 6154 03c4 8348     		ldr	r0, .L458+24
ARM GAS  /tmp/ccSZlabO.s 			page 191


 6155 03c6 3146     		mov	r1, r6
 6156 03c8 FFF7FEFF 		bl	printf
 6157              	.LVL815:
2147:TP2824/TP2802.c ****                              printf("CVBS  mode:%d\r\n", (tWord)mode[i]);
 6158              		.loc 1 2147 0
 6159 03cc 824B     		ldr	r3, .L458+28
 6160 03ce 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6161 03d0 A1F10803 		sub	r3, r1, #8
 6162 03d4 DBB2     		uxtb	r3, r3
 6163 03d6 012B     		cmp	r3, #1
 6164 03d8 03D8     		bhi	.L411
2148:TP2824/TP2802.c **** //                 if( 0x10 != (0x11 & tmp) && HDC == std[i])
 6165              		.loc 1 2148 0
 6166 03da 8048     		ldr	r0, .L458+32
 6167 03dc FFF7FEFF 		bl	printf
 6168              	.LVL816:
 6169 03e0 2EE2     		b	.L387
 6170              	.L411:
2150:TP2824/TP2802.c **** 		                 (0x00 == (0x04 & tmp) && 
 6171              		.loc 1 2150 0
 6172 03e2 06F01103 		and	r3, r6, #17
 6173 03e6 102B     		cmp	r3, #16
 6174 03e8 03D0     		beq	.L412
2150:TP2824/TP2802.c **** 		                 (0x00 == (0x04 & tmp) && 
 6175              		.loc 1 2150 0 is_stmt 0 discriminator 1
 6176 03ea 7D4B     		ldr	r3, .L458+36
 6177 03ec 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6178 03ee 022B     		cmp	r3, #2
 6179 03f0 0FD0     		beq	.L413
 6180              	.L412:
2150:TP2824/TP2802.c **** 		                 (0x00 == (0x04 & tmp) && 
 6181              		.loc 1 2150 0 discriminator 3
 6182 03f2 16F0040F 		tst	r6, #4
 6183 03f6 40F02382 		bne	.L387
2152:TP2824/TP2802.c ****                     {
 6184              		.loc 1 2152 0 is_stmt 1
 6185 03fa 0B1F     		subs	r3, r1, #4
 6186 03fc DBB2     		uxtb	r3, r3
2151:TP2824/TP2802.c **** 		                 (mode[i] == R720P30 || mode[i] == R720P25 || mode[i] == R720P30V2 || mode[i] == 
 6187              		.loc 1 2151 0
 6188 03fe 012B     		cmp	r3, #1
 6189 0400 07D9     		bls	.L413
2152:TP2824/TP2802.c ****                     {
 6190              		.loc 1 2152 0
 6191 0402 0C29     		cmp	r1, #12
 6192 0404 05D0     		beq	.L413
2152:TP2824/TP2802.c ****                     {
 6193              		.loc 1 2152 0 is_stmt 0 discriminator 1
 6194 0406 0D29     		cmp	r1, #13
 6195 0408 03D0     		beq	.L413
2152:TP2824/TP2802.c ****                     {
 6196              		.loc 1 2152 0 discriminator 2
 6197 040a 11B1     		cbz	r1, .L413
2152:TP2824/TP2802.c ****                     {
 6198              		.loc 1 2152 0 discriminator 3
 6199 040c 0129     		cmp	r1, #1
 6200 040e 40F01782 		bne	.L387
ARM GAS  /tmp/ccSZlabO.s 			page 192


 6201              	.L413:
2154:TP2824/TP2802.c ****                         {
 6202              		.loc 1 2154 0 is_stmt 1
 6203 0412 2046     		mov	r0, r4
 6204 0414 FFF7FEFF 		bl	Set_HDA
 6205              	.LVL817:
 6206 0418 0028     		cmp	r0, #0
 6207 041a 00F01182 		beq	.L387
2156:TP2824/TP2802.c ****                             printf("turn to A ch%02x\r\n", (tWord)i);
 6208              		.loc 1 2156 0
 6209 041e 0122     		movs	r2, #1
 6210 0420 6F4B     		ldr	r3, .L458+36
 6211 0422 5A55     		strb	r2, [r3, r5]
2157:TP2824/TP2802.c ****                         }
 6212              		.loc 1 2157 0
 6213 0424 7048     		ldr	r0, .L458+44
 6214 0426 2946     		mov	r1, r5
 6215 0428 FFF7FEFF 		bl	printf
 6216              	.LVL818:
 6217 042c 08E2     		b	.L387
 6218              	.LVL819:
 6219              	.L410:
2164:TP2824/TP2802.c ****             {
 6220              		.loc 1 2164 0
 6221 042e 032A     		cmp	r2, #3
 6222 0430 50D1     		bne	.L414
2166:TP2824/TP2802.c ****                 {
 6223              		.loc 1 2166 0
 6224 0432 674B     		ldr	r3, .L458+20
 6225 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6226 0436 232B     		cmp	r3, #35
 6227 0438 40F20282 		bls	.L387
2168:TP2824/TP2802.c ****                     printf("Reg01 %02x\r\n", (tWord)tmp);
 6228              		.loc 1 2168 0
 6229 043c 0120     		movs	r0, #1
 6230 043e FFF7FEFF 		bl	tp28xx_byte_read
 6231              	.LVL820:
 6232 0442 0646     		mov	r6, r0
 6233              	.LVL821:
2169:TP2824/TP2802.c **** 
 6234              		.loc 1 2169 0
 6235 0444 6348     		ldr	r0, .L458+24
 6236 0446 3146     		mov	r1, r6
 6237 0448 FFF7FEFF 		bl	printf
 6238              	.LVL822:
2171:TP2824/TP2802.c ****                         printf("AHD 1080P30/P25  mode:%d\r\n", (tWord)mode[i]);
 6239              		.loc 1 2171 0
 6240 044c 624B     		ldr	r3, .L458+28
 6241 044e 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 6242 0450 8B1E     		subs	r3, r1, #2
 6243 0452 DBB2     		uxtb	r3, r3
 6244 0454 012B     		cmp	r3, #1
 6245 0456 06D8     		bhi	.L415
2171:TP2824/TP2802.c ****                         printf("AHD 1080P30/P25  mode:%d\r\n", (tWord)mode[i]);
 6246              		.loc 1 2171 0 is_stmt 0 discriminator 1
 6247 0458 16F0040F 		tst	r6, #4
 6248 045c 03D1     		bne	.L415
ARM GAS  /tmp/ccSZlabO.s 			page 193


2172:TP2824/TP2802.c **** 		      else if((mode[i] == R1080P30 || mode[i] == R1080P25) && 0x04 == (0x04 & tmp) && std[i] == T
 6249              		.loc 1 2172 0 is_stmt 1
 6250 045e 6348     		ldr	r0, .L458+48
 6251 0460 FFF7FEFF 		bl	printf
 6252              	.LVL823:
 6253 0464 ECE1     		b	.L387
 6254              	.L415:
2173:TP2824/TP2802.c ****                         printf("TVI 1080P30/P25   mode:%d\r\n", (tWord)mode[i]);
 6255              		.loc 1 2173 0
 6256 0466 012B     		cmp	r3, #1
 6257 0468 09D8     		bhi	.L416
2173:TP2824/TP2802.c ****                         printf("TVI 1080P30/P25   mode:%d\r\n", (tWord)mode[i]);
 6258              		.loc 1 2173 0 is_stmt 0 discriminator 1
 6259 046a 16F0040F 		tst	r6, #4
 6260 046e 06D0     		beq	.L416
2173:TP2824/TP2802.c ****                         printf("TVI 1080P30/P25   mode:%d\r\n", (tWord)mode[i]);
 6261              		.loc 1 2173 0 discriminator 2
 6262 0470 5B4B     		ldr	r3, .L458+36
 6263 0472 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6264 0474 1BB9     		cbnz	r3, .L416
2174:TP2824/TP2802.c **** 		      else if((mode[i] == R720P30 || mode[i] == R720P25 || mode[i] == R720P30V2 || mode[i] == R72
 6265              		.loc 1 2174 0 is_stmt 1
 6266 0476 5E48     		ldr	r0, .L458+52
 6267 0478 FFF7FEFF 		bl	printf
 6268              	.LVL824:
 6269 047c E0E1     		b	.L387
 6270              	.L416:
2175:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6271              		.loc 1 2175 0
 6272 047e 0B1F     		subs	r3, r1, #4
 6273 0480 DBB2     		uxtb	r3, r3
 6274 0482 012B     		cmp	r3, #1
 6275 0484 06D9     		bls	.L417
2175:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6276              		.loc 1 2175 0 is_stmt 0 discriminator 2
 6277 0486 0C29     		cmp	r1, #12
 6278 0488 04D0     		beq	.L417
2175:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6279              		.loc 1 2175 0 discriminator 4
 6280 048a 0D29     		cmp	r1, #13
 6281 048c 02D0     		beq	.L417
2175:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6282              		.loc 1 2175 0 discriminator 6
 6283 048e 09B1     		cbz	r1, .L417
2175:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6284              		.loc 1 2175 0 discriminator 8
 6285 0490 0129     		cmp	r1, #1
 6286 0492 0AD1     		bne	.L418
 6287              	.L417:
2175:TP2824/TP2802.c **** 			  	0x00 == (0x04 & tmp) && std[i] == HDA)
 6288              		.loc 1 2175 0 discriminator 9
 6289 0494 16F0040F 		tst	r6, #4
 6290 0498 07D1     		bne	.L418
2176:TP2824/TP2802.c ****                         printf("AHD 720P30/P25/P60/P50   mode:%d\r\n", (tWord)mode[i]);
 6291              		.loc 1 2176 0 is_stmt 1
 6292 049a 514B     		ldr	r3, .L458+36
 6293 049c 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
ARM GAS  /tmp/ccSZlabO.s 			page 194


 6294 049e 012B     		cmp	r3, #1
 6295 04a0 03D1     		bne	.L418
2177:TP2824/TP2802.c **** 		      else if(mode[i] == NTSC || mode[i] == PAL)
 6296              		.loc 1 2177 0
 6297 04a2 5448     		ldr	r0, .L458+56
 6298 04a4 FFF7FEFF 		bl	printf
 6299              	.LVL825:
 6300 04a8 CAE1     		b	.L387
 6301              	.L418:
2178:TP2824/TP2802.c ****                              printf("CVBS    mode:%d\r\n", (tWord)mode[i]);
 6302              		.loc 1 2178 0
 6303 04aa A1F10803 		sub	r3, r1, #8
 6304 04ae DBB2     		uxtb	r3, r3
 6305 04b0 012B     		cmp	r3, #1
 6306 04b2 03D8     		bhi	.L419
2179:TP2824/TP2802.c **** //		      if( 0x00 != (0x01 & tmp))
 6307              		.loc 1 2179 0
 6308 04b4 5048     		ldr	r0, .L458+60
 6309 04b6 FFF7FEFF 		bl	printf
 6310              	.LVL826:
 6311 04ba C1E1     		b	.L387
 6312              	.L419:
2181:TP2824/TP2802.c ****                     {
 6313              		.loc 1 2181 0
 6314 04bc 16F0010F 		tst	r6, #1
 6315 04c0 00F0BE81 		beq	.L387
2184:TP2824/TP2802.c ****                         printf("back to T ch%02x\r\n", (tWord)i); //chunyu
 6316              		.loc 1 2184 0
 6317 04c4 2046     		mov	r0, r4
 6318 04c6 FFF7FEFF 		bl	Set_VidRes
 6319              	.LVL827:
2185:TP2824/TP2802.c ****                     }
 6320              		.loc 1 2185 0
 6321 04ca 4C48     		ldr	r0, .L458+64
 6322 04cc 2946     		mov	r1, r5
 6323 04ce FFF7FEFF 		bl	printf
 6324              	.LVL828:
 6325 04d2 B5E1     		b	.L387
 6326              	.LVL829:
 6327              	.L414:
2189:TP2824/TP2802.c ****             {
 6328              		.loc 1 2189 0
 6329 04d4 062A     		cmp	r2, #6
 6330 04d6 0ED8     		bhi	.L420
2191:TP2824/TP2802.c ****                 egain[i][2] = egain[i][1];
 6331              		.loc 1 2191 0
 6332 04d8 494E     		ldr	r6, .L458+68
 6333 04da 06EB8503 		add	r3, r6, r5, lsl #2
 6334 04de 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 6335 04e0 DA70     		strb	r2, [r3, #3]
2192:TP2824/TP2802.c ****                 egain[i][1] = egain[i][0];
 6336              		.loc 1 2192 0
 6337 04e2 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 6338 04e4 9A70     		strb	r2, [r3, #2]
2193:TP2824/TP2802.c **** 
 6339              		.loc 1 2193 0
 6340 04e6 16F82520 		ldrb	r2, [r6, r5, lsl #2]	@ zero_extendqisi2
ARM GAS  /tmp/ccSZlabO.s 			page 195


 6341 04ea 5A70     		strb	r2, [r3, #1]
2195:TP2824/TP2802.c ****                 egain[i][0] = gain;
 6342              		.loc 1 2195 0
 6343 04ec FFF7FEFF 		bl	ReadGain
 6344              	.LVL830:
2196:TP2824/TP2802.c ****             }
 6345              		.loc 1 2196 0
 6346 04f0 06F82500 		strb	r0, [r6, r5, lsl #2]
 6347 04f4 A4E1     		b	.L387
 6348              	.LVL831:
 6349              	.L420:
2198:TP2824/TP2802.c ****             {
 6350              		.loc 1 2198 0
 6351 04f6 132A     		cmp	r2, #19
 6352 04f8 23D8     		bhi	.L421
2200:TP2824/TP2802.c ****                 egain[i][2] = egain[i][1];
 6353              		.loc 1 2200 0
 6354 04fa 414F     		ldr	r7, .L458+68
 6355 04fc 07EB8506 		add	r6, r7, r5, lsl #2
 6356 0500 B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 6357 0502 F370     		strb	r3, [r6, #3]
2201:TP2824/TP2802.c ****                 egain[i][1] = egain[i][0];
 6358              		.loc 1 2201 0
 6359 0504 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 6360 0506 B370     		strb	r3, [r6, #2]
2202:TP2824/TP2802.c **** 
 6361              		.loc 1 2202 0
 6362 0508 17F82530 		ldrb	r3, [r7, r5, lsl #2]	@ zero_extendqisi2
 6363 050c 7370     		strb	r3, [r6, #1]
2204:TP2824/TP2802.c ****                 egain[i][0] = gain;
 6364              		.loc 1 2204 0
 6365 050e FFF7FEFF 		bl	ReadGain
 6366              	.LVL832:
2205:TP2824/TP2802.c **** 
 6367              		.loc 1 2205 0
 6368 0512 07F82500 		strb	r0, [r7, r5, lsl #2]
2207:TP2824/TP2802.c ****                 {
 6369              		.loc 1 2207 0
 6370 0516 F378     		ldrb	r3, [r6, #3]	@ zero_extendqisi2
 6371 0518 1B1A     		subs	r3, r3, r0
 6372 051a 0133     		adds	r3, r3, #1
 6373 051c 022B     		cmp	r3, #2
 6374 051e 00F28F81 		bhi	.L387
2207:TP2824/TP2802.c ****                 {
 6375              		.loc 1 2207 0 is_stmt 0 discriminator 1
 6376 0522 B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 6377 0524 1B1A     		subs	r3, r3, r0
 6378 0526 0133     		adds	r3, r3, #1
 6379 0528 022B     		cmp	r3, #2
 6380 052a 00F28981 		bhi	.L387
2207:TP2824/TP2802.c ****                 {
 6381              		.loc 1 2207 0 discriminator 2
 6382 052e 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 6383 0530 1B1A     		subs	r3, r3, r0
 6384 0532 0133     		adds	r3, r3, #1
 6385 0534 022B     		cmp	r3, #2
 6386 0536 00F28381 		bhi	.L387
ARM GAS  /tmp/ccSZlabO.s 			page 196


2209:TP2824/TP2802.c ****                 }
 6387              		.loc 1 2209 0 is_stmt 1
 6388 053a 1322     		movs	r2, #19
 6389 053c 314B     		ldr	r3, .L458+72
 6390 053e 5A55     		strb	r2, [r3, r5]
 6391 0540 7EE1     		b	.L387
 6392              	.LVL833:
 6393              	.L421:
2212:TP2824/TP2802.c ****             {
 6394              		.loc 1 2212 0
 6395 0542 142A     		cmp	r2, #20
 6396 0544 40F0BE80 		bne	.L422
2214:TP2824/TP2802.c ****                 printf("Egain=0x%02x ch%02x,std=%d,mode=0x%02X\r\n", (tWord)gain, (tWord)i, (tWord)
 6397              		.loc 1 2214 0
 6398 0548 FFF7FEFF 		bl	ReadGain
 6399              	.LVL834:
 6400 054c 0646     		mov	r6, r0
 6401              	.LVL835:
2215:TP2824/TP2802.c **** 
 6402              		.loc 1 2215 0
 6403 054e 244B     		ldr	r3, .L458+36
 6404 0550 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6405 0552 214F     		ldr	r7, .L458+28
 6406 0554 7A5D     		ldrb	r2, [r7, r5]	@ zero_extendqisi2
 6407 0556 0092     		str	r2, [sp]
 6408 0558 2B48     		ldr	r0, .L458+76
 6409 055a 3146     		mov	r1, r6
 6410 055c 2A46     		mov	r2, r5
 6411 055e FFF7FEFF 		bl	printf
 6412              	.LVL836:
2217:TP2824/TP2802.c ****                 {
 6413              		.loc 1 2217 0
 6414 0562 7B5D     		ldrb	r3, [r7, r5]	@ zero_extendqisi2
 6415 0564 9A1E     		subs	r2, r3, #2
 6416 0566 D2B2     		uxtb	r2, r2
 6417 0568 012A     		cmp	r2, #1
 6418 056a 03D8     		bhi	.L423
2219:TP2824/TP2802.c ****                 }
 6419              		.loc 1 2219 0
 6420 056c 0622     		movs	r2, #6
 6421 056e 274B     		ldr	r3, .L458+80
 6422 0570 5A55     		strb	r2, [r3, r5]
 6423 0572 50E0     		b	.L424
 6424              	.L423:
2221:TP2824/TP2802.c ****                 {
 6425              		.loc 1 2221 0
 6426 0574 012B     		cmp	r3, #1
 6427 0576 03D8     		bhi	.L425
2223:TP2824/TP2802.c ****                 }
 6428              		.loc 1 2223 0
 6429 0578 0522     		movs	r2, #5
 6430 057a 244B     		ldr	r3, .L458+80
 6431 057c 5A55     		strb	r2, [r3, r5]
 6432 057e 4AE0     		b	.L424
 6433              	.L425:
2225:TP2824/TP2802.c ****                 {
 6434              		.loc 1 2225 0
ARM GAS  /tmp/ccSZlabO.s 			page 197


 6435 0580 1A1F     		subs	r2, r3, #4
 6436 0582 D2B2     		uxtb	r2, r2
 6437 0584 012A     		cmp	r2, #1
 6438 0586 03D8     		bhi	.L426
2227:TP2824/TP2802.c ****                 }
 6439              		.loc 1 2227 0
 6440 0588 0522     		movs	r2, #5
 6441 058a 204B     		ldr	r3, .L458+80
 6442 058c 5A55     		strb	r2, [r3, r5]
 6443 058e 42E0     		b	.L424
 6444              	.L426:
2229:TP2824/TP2802.c ****                 {
 6445              		.loc 1 2229 0
 6446 0590 A3F10C02 		sub	r2, r3, #12
 6447 0594 D2B2     		uxtb	r2, r2
 6448 0596 012A     		cmp	r2, #1
 6449 0598 03D8     		bhi	.L427
2231:TP2824/TP2802.c ****                 }
 6450              		.loc 1 2231 0
 6451 059a 0522     		movs	r2, #5
 6452 059c 1B4B     		ldr	r3, .L458+80
 6453 059e 5A55     		strb	r2, [r3, r5]
 6454 05a0 39E0     		b	.L424
 6455              	.L427:
2233:TP2824/TP2802.c ****                 {
 6456              		.loc 1 2233 0
 6457 05a2 082B     		cmp	r3, #8
 6458 05a4 03D1     		bne	.L428
2235:TP2824/TP2802.c ****                 }
 6459              		.loc 1 2235 0
 6460 05a6 0022     		movs	r2, #0
 6461 05a8 184B     		ldr	r3, .L458+80
 6462 05aa 5A55     		strb	r2, [r3, r5]
 6463 05ac 33E0     		b	.L424
 6464              	.L428:
2237:TP2824/TP2802.c ****                 {
 6465              		.loc 1 2237 0
 6466 05ae 092B     		cmp	r3, #9
 6467 05b0 2ED1     		bne	.L429
2239:TP2824/TP2802.c ****                 }
 6468              		.loc 1 2239 0
 6469 05b2 0122     		movs	r2, #1
 6470 05b4 154B     		ldr	r3, .L458+80
 6471 05b6 5A55     		strb	r2, [r3, r5]
 6472 05b8 2DE0     		b	.L424
 6473              	.L459:
 6474 05ba 00BF     		.align	2
 6475              	.L458:
 6476 05bc 00000000 		.word	.LANCHOR34
 6477 05c0 00000000 		.word	.LANCHOR35
 6478 05c4 00000000 		.word	CurRes
 6479 05c8 00000000 		.word	ManVidResRx
 6480 05cc B8020000 		.word	.LC48
 6481 05d0 00000000 		.word	chip
 6482 05d4 D0020000 		.word	.LC49
 6483 05d8 00000000 		.word	mode
 6484 05dc E0020000 		.word	.LC50
ARM GAS  /tmp/ccSZlabO.s 			page 198


 6485 05e0 00000000 		.word	std
 6486 05e4 F0020000 		.word	.LC51
 6487 05e8 04030000 		.word	.LC52
 6488 05ec 18030000 		.word	.LC53
 6489 05f0 34030000 		.word	.LC54
 6490 05f4 50030000 		.word	.LC55
 6491 05f8 74030000 		.word	.LC56
 6492 05fc 88030000 		.word	.LC57
 6493 0600 00000000 		.word	egain
 6494 0604 00000000 		.word	count
 6495 0608 9C030000 		.word	.LC58
 6496 060c 00000000 		.word	.LANCHOR23
 6497              	.L429:
2243:TP2824/TP2802.c ****                 }
 6498              		.loc 1 2243 0
 6499 0610 1422     		movs	r2, #20
 6500 0612 8F4B     		ldr	r3, .L460
 6501 0614 5A55     		strb	r2, [r3, r5]
 6502              	.L424:
2246:TP2824/TP2802.c **** 				   if(SelectInputMode==1)
 6503              		.loc 1 2246 0
 6504 0616 8E4B     		ldr	r3, .L460
 6505 0618 5A5D     		ldrb	r2, [r3, r5]	@ zero_extendqisi2
 6506 061a 8E4B     		ldr	r3, .L460+4
 6507 061c 1A70     		strb	r2, [r3]
2247:TP2824/TP2802.c **** 					   {
 6508              		.loc 1 2247 0
 6509 061e 8E4B     		ldr	r3, .L460+8
 6510 0620 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6511 0622 012B     		cmp	r3, #1
 6512 0624 04D1     		bne	.L430
2249:TP2824/TP2802.c **** 				   //MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);
 6513              		.loc 1 2249 0
 6514 0626 4FF47A70 		mov	r0, #1000
 6515 062a 4021     		movs	r1, #64
 6516 062c FFF7FEFF 		bl	MCUTimerActiveTimerEvent
 6517              	.LVL837:
 6518              	.L430:
2253:TP2824/TP2802.c ****                 {
 6519              		.loc 1 2253 0
 6520 0630 874B     		ldr	r3, .L460
 6521 0632 5A5D     		ldrb	r2, [r3, r5]	@ zero_extendqisi2
 6522 0634 894B     		ldr	r3, .L460+12
 6523 0636 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6524 0638 9A42     		cmp	r2, r3
 6525 063a 05D0     		beq	.L431
2270:TP2824/TP2802.c **** 
 6526              		.loc 1 2270 0
 6527 063c 8848     		ldr	r0, .L460+16
 6528 063e 2946     		mov	r1, r5
 6529 0640 884B     		ldr	r3, .L460+20
 6530 0642 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6531 0644 FFF7FEFF 		bl	printf
 6532              	.LVL838:
 6533              	.L431:
2308:TP2824/TP2802.c ****                 {
 6534              		.loc 1 2308 0
ARM GAS  /tmp/ccSZlabO.s 			page 199


 6535 0648 874B     		ldr	r3, .L460+24
 6536 064a 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6537 064c 93B1     		cbz	r3, .L432
2310:TP2824/TP2802.c ****                     if (std[i]== HDA )
 6538              		.loc 1 2310 0
 6539 064e C6F38601 		ubfx	r1, r6, #2, #7
 6540 0652 0720     		movs	r0, #7
 6541 0654 41F08001 		orr	r1, r1, #128
 6542 0658 FFF7FEFF 		bl	tp28xx_byte_write
 6543              	.LVL839:
2311:TP2824/TP2802.c ****                     {
 6544              		.loc 1 2311 0
 6545 065c 824B     		ldr	r3, .L460+24
 6546 065e 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6547 0660 012B     		cmp	r3, #1
 6548 0662 03D1     		bne	.L433
2313:TP2824/TP2802.c ****                     }
 6549              		.loc 1 2313 0
 6550 0664 8148     		ldr	r0, .L460+28
 6551 0666 FFF7FEFF 		bl	puts
 6552              	.LVL840:
 6553 066a E9E0     		b	.L387
 6554              	.L433:
2317:TP2824/TP2802.c ****                     }
 6555              		.loc 1 2317 0
 6556 066c 8048     		ldr	r0, .L460+32
 6557 066e FFF7FEFF 		bl	puts
 6558              	.LVL841:
 6559 0672 E5E0     		b	.L387
 6560              	.L432:
2322:TP2824/TP2802.c ****                     {
 6561              		.loc 1 2322 0
 6562 0674 7F4B     		ldr	r3, .L460+36
 6563 0676 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6564 0678 243B     		subs	r3, r3, #36
 6565 067a DBB2     		uxtb	r3, r3
 6566 067c 012B     		cmp	r3, #1
 6567 067e 0DD8     		bhi	.L434
2324:TP2824/TP2802.c ****                         {
 6568              		.loc 1 2324 0
 6569 0680 7D4B     		ldr	r3, .L460+40
 6570 0682 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6571 0684 13F0200F 		tst	r3, #32
 6572 0688 08D0     		beq	.L434
2326:TP2824/TP2802.c ****                         }
 6573              		.loc 1 2326 0
 6574 068a 0321     		movs	r1, #3
 6575 068c B6FBF1F1 		udiv	r1, r6, r1
 6576 0690 61F07F01 		orn	r1, r1, #127
 6577 0694 0720     		movs	r0, #7
 6578 0696 C9B2     		uxtb	r1, r1
 6579 0698 FFF7FEFF 		bl	tp28xx_byte_write
 6580              	.LVL842:
 6581              	.L434:
2329:TP2824/TP2802.c **** 			  	printf("CVBS NTSC   mode\r\n");
 6582              		.loc 1 2329 0
 6583 069c 764B     		ldr	r3, .L460+40
ARM GAS  /tmp/ccSZlabO.s 			page 200


 6584 069e 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6585 06a0 082B     		cmp	r3, #8
 6586 06a2 03D1     		bne	.L435
2330:TP2824/TP2802.c **** 		      else if(mode[i] == PAL) //20200408 cvbs night no burst
 6587              		.loc 1 2330 0
 6588 06a4 7548     		ldr	r0, .L460+44
 6589 06a6 FFF7FEFF 		bl	puts
 6590              	.LVL843:
 6591 06aa C9E0     		b	.L387
 6592              	.L435:
2331:TP2824/TP2802.c **** 			  	printf("CVBS PAL   mode\r\n");
 6593              		.loc 1 2331 0
 6594 06ac 092B     		cmp	r3, #9
 6595 06ae 03D1     		bne	.L436
2332:TP2824/TP2802.c **** 		      else
 6596              		.loc 1 2332 0
 6597 06b0 7348     		ldr	r0, .L460+48
 6598 06b2 FFF7FEFF 		bl	puts
 6599              	.LVL844:
 6600 06b6 C3E0     		b	.L387
 6601              	.L436:
2334:TP2824/TP2802.c ****                     //gRxLoopFlg = 0 ;
 6602              		.loc 1 2334 0
 6603 06b8 7248     		ldr	r0, .L460+52
 6604 06ba 40F61E11 		movw	r1, #2334
 6605 06be FFF7FEFF 		bl	printf
 6606              	.LVL845:
 6607 06c2 BDE0     		b	.L387
 6608              	.LVL846:
 6609              	.L422:
2338:TP2824/TP2802.c ****             {
 6610              		.loc 1 2338 0
 6611 06c4 152A     		cmp	r2, #21
 6612 06c6 1AD1     		bne	.L437
2340:TP2824/TP2802.c ****                 {
 6613              		.loc 1 2340 0
 6614 06c8 674B     		ldr	r3, .L460+24
 6615 06ca 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6616 06cc 33B1     		cbz	r3, .L438
2342:TP2824/TP2802.c ****                     SetCGain(0x0c);
 6617              		.loc 1 2342 0
 6618 06ce 2046     		mov	r0, r4
 6619 06d0 FFF7FEFF 		bl	ManualAGC
 6620              	.LVL847:
2343:TP2824/TP2802.c ****                 }
 6621              		.loc 1 2343 0
 6622 06d4 0C20     		movs	r0, #12
 6623 06d6 FFF7FEFF 		bl	SetCGain
 6624              	.LVL848:
 6625 06da B1E0     		b	.L387
 6626              	.L438:
2347:TP2824/TP2802.c ****                     {
 6627              		.loc 1 2347 0
 6628 06dc 654B     		ldr	r3, .L460+36
 6629 06de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6630 06e0 243B     		subs	r3, r3, #36
 6631 06e2 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccSZlabO.s 			page 201


 6632 06e4 012B     		cmp	r3, #1
 6633 06e6 00F2AB80 		bhi	.L387
2349:TP2824/TP2802.c ****                         {
 6634              		.loc 1 2349 0
 6635 06ea 634B     		ldr	r3, .L460+40
 6636 06ec 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6637 06ee 13F0200F 		tst	r3, #32
 6638 06f2 00F0A580 		beq	.L387
2351:TP2824/TP2802.c ****                         }
 6639              		.loc 1 2351 0
 6640 06f6 1620     		movs	r0, #22
 6641 06f8 FFF7FEFF 		bl	SetCGain
 6642              	.LVL849:
 6643 06fc A0E0     		b	.L387
 6644              	.L437:
2356:TP2824/TP2802.c ****             {	
 6645              		.loc 1 2356 0
 6646 06fe 162A     		cmp	r2, #22
 6647 0700 40F09E80 		bne	.L387
2358:TP2824/TP2802.c ****             		{
 6648              		.loc 1 2358 0
 6649 0704 022B     		cmp	r3, #2
 6650 0706 40F09B80 		bne	.L387
 6651              	.LBB3:
2361:TP2824/TP2802.c **** 				{
 6652              		.loc 1 2361 0
 6653 070a 574B     		ldr	r3, .L460+24
 6654 070c 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6655 070e 002B     		cmp	r3, #0
 6656 0710 3CD1     		bne	.L439
2363:TP2824/TP2802.c **** 					{
 6657              		.loc 1 2363 0
 6658 0712 594B     		ldr	r3, .L460+40
 6659 0714 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6660 0716 083B     		subs	r3, r3, #8
 6661 0718 DBB2     		uxtb	r3, r3
 6662 071a 012B     		cmp	r3, #1
 6663 071c 01D8     		bhi	.L454
2365:TP2824/TP2802.c **** 					}
 6664              		.loc 1 2365 0
 6665 071e 5A48     		ldr	r0, .L460+56
 6666 0720 00E0     		b	.L440
 6667              	.L454:
2369:TP2824/TP2802.c **** 					}
 6668              		.loc 1 2369 0
 6669 0722 5A48     		ldr	r0, .L460+60
 6670              	.L440:
 6671              	.LVL850:
2372:TP2824/TP2802.c **** 					
 6672              		.loc 1 2372 0
 6673 0724 FFF7FEFF 		bl	I2CDeviceSet1
 6674              	.LVL851:
2374:TP2824/TP2802.c **** 					{
 6675              		.loc 1 2374 0
 6676 0728 534B     		ldr	r3, .L460+40
 6677 072a 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6678 072c 023B     		subs	r3, r3, #2
ARM GAS  /tmp/ccSZlabO.s 			page 202


 6679 072e DBB2     		uxtb	r3, r3
 6680 0730 012B     		cmp	r3, #1
 6681 0732 03D8     		bhi	.L441
2376:TP2824/TP2802.c **** 					}
 6682              		.loc 1 2376 0
 6683 0734 C620     		movs	r0, #198
 6684 0736 1921     		movs	r1, #25
 6685 0738 FFF7FEFF 		bl	tp28xx_byte_write
 6686              	.LVL852:
 6687              	.L441:
2379:TP2824/TP2802.c **** 					
 6688              		.loc 1 2379 0
 6689 073c 4020     		movs	r0, #64
 6690 073e 2146     		mov	r1, r4
 6691 0740 FFF7FEFF 		bl	tp28xx_byte_write
 6692              	.LVL853:
2381:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB6);
 6693              		.loc 1 2381 0
 6694 0744 BE20     		movs	r0, #190
 6695 0746 8021     		movs	r1, #128
 6696 0748 FFF7FEFF 		bl	tp28xx_byte_write
 6697              	.LVL854:
2382:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB5);
 6698              		.loc 1 2382 0
 6699 074c B620     		movs	r0, #182
 6700 074e FFF7FEFF 		bl	tp28xx_byte_read
 6701              	.LVL855:
2383:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB4);
 6702              		.loc 1 2383 0
 6703 0752 B520     		movs	r0, #181
 6704 0754 FFF7FEFF 		bl	tp28xx_byte_read
 6705              	.LVL856:
2384:TP2824/TP2802.c **** 
 6706              		.loc 1 2384 0
 6707 0758 B420     		movs	r0, #180
 6708 075a FFF7FEFF 		bl	tp28xx_byte_read
 6709              	.LVL857:
2387:TP2824/TP2802.c **** 					delay(1);//5ms
 6710              		.loc 1 2387 0
 6711 075e A720     		movs	r0, #167
 6712 0760 0021     		movs	r1, #0
 6713 0762 FFF7FEFF 		bl	tp28xx_byte_write
 6714              	.LVL858:
2388:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x83);
 6715              		.loc 1 2388 0
 6716 0766 0120     		movs	r0, #1
 6717 0768 FFF7FEFF 		bl	delay
 6718              	.LVL859:
2389:TP2824/TP2802.c **** 					
 6719              		.loc 1 2389 0
 6720 076c A720     		movs	r0, #167
 6721 076e 8321     		movs	r1, #131
 6722 0770 FFF7FEFF 		bl	tp28xx_byte_write
 6723              	.LVL860:
2391:TP2824/TP2802.c **** 					{
 6724              		.loc 1 2391 0
 6725 0774 404B     		ldr	r3, .L460+40
ARM GAS  /tmp/ccSZlabO.s 			page 203


 6726 0776 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6727 0778 023B     		subs	r3, r3, #2
 6728 077a DBB2     		uxtb	r3, r3
 6729 077c 012B     		cmp	r3, #1
 6730 077e 05D8     		bhi	.L439
2393:TP2824/TP2802.c **** 						printf("EQdet %d\r\n",  PtzTxChNum);
 6731              		.loc 1 2393 0
 6732 0780 434B     		ldr	r3, .L460+64
 6733 0782 1C70     		strb	r4, [r3]
2394:TP2824/TP2802.c **** 					}
 6734              		.loc 1 2394 0
 6735 0784 4348     		ldr	r0, .L460+68
 6736 0786 2946     		mov	r1, r5
 6737 0788 FFF7FEFF 		bl	printf
 6738              	.LVL861:
 6739              	.L439:
2399:TP2824/TP2802.c **** 				{
 6740              		.loc 1 2399 0
 6741 078c 364B     		ldr	r3, .L460+24
 6742 078e 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6743 0790 012B     		cmp	r3, #1
 6744 0792 29D1     		bne	.L442
2403:TP2824/TP2802.c **** 						//#else
 6745              		.loc 1 2403 0
 6746 0794 FFF7FEFF 		bl	Init_COC_PTZOUT1
 6747              	.LVL862:
2406:TP2824/TP2802.c **** 					
 6748              		.loc 1 2406 0
 6749 0798 3F48     		ldr	r0, .L460+72
 6750 079a FFF7FEFF 		bl	I2CDeviceSet1
 6751              	.LVL863:
2408:TP2824/TP2802.c **** 							tp28xx_byte_write(0x40,0x04);
 6752              		.loc 1 2408 0
 6753 079e 4020     		movs	r0, #64
 6754 07a0 2146     		mov	r1, r4
 6755 07a2 FFF7FEFF 		bl	tp28xx_byte_write
 6756              	.LVL864:
2409:TP2824/TP2802.c **** 						tp28xx_byte_write(0xbe, 0x80);
 6757              		.loc 1 2409 0
 6758 07a6 4020     		movs	r0, #64
 6759 07a8 0421     		movs	r1, #4
 6760 07aa FFF7FEFF 		bl	tp28xx_byte_write
 6761              	.LVL865:
2410:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB6);
 6762              		.loc 1 2410 0
 6763 07ae BE20     		movs	r0, #190
 6764 07b0 8021     		movs	r1, #128
 6765 07b2 FFF7FEFF 		bl	tp28xx_byte_write
 6766              	.LVL866:
2411:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB5);
 6767              		.loc 1 2411 0
 6768 07b6 B620     		movs	r0, #182
 6769 07b8 FFF7FEFF 		bl	tp28xx_byte_read
 6770              	.LVL867:
2412:TP2824/TP2802.c **** 						tp28xx_byte_read(0xB4);
 6771              		.loc 1 2412 0
 6772 07bc B520     		movs	r0, #181
ARM GAS  /tmp/ccSZlabO.s 			page 204


 6773 07be FFF7FEFF 		bl	tp28xx_byte_read
 6774              	.LVL868:
2413:TP2824/TP2802.c **** 
 6775              		.loc 1 2413 0
 6776 07c2 B420     		movs	r0, #180
 6777 07c4 FFF7FEFF 		bl	tp28xx_byte_read
 6778              	.LVL869:
2416:TP2824/TP2802.c **** 						delay(1);//5ms
 6779              		.loc 1 2416 0
 6780 07c8 A720     		movs	r0, #167
 6781 07ca 2421     		movs	r1, #36
 6782 07cc FFF7FEFF 		bl	tp28xx_byte_write
 6783              	.LVL870:
2417:TP2824/TP2802.c **** 						tp28xx_byte_write(0xa7, 0xA7);
 6784              		.loc 1 2417 0
 6785 07d0 0120     		movs	r0, #1
 6786 07d2 FFF7FEFF 		bl	delay
 6787              	.LVL871:
2418:TP2824/TP2802.c **** 						#endif
 6788              		.loc 1 2418 0
 6789 07d6 A720     		movs	r0, #167
 6790 07d8 0146     		mov	r1, r0
 6791 07da FFF7FEFF 		bl	tp28xx_byte_write
 6792              	.LVL872:
2431:TP2824/TP2802.c **** 				}
 6793              		.loc 1 2431 0
 6794 07de 2F48     		ldr	r0, .L460+76
 6795 07e0 2B4B     		ldr	r3, .L460+64
 6796 07e2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6797 07e4 FFF7FEFF 		bl	printf
 6798              	.LVL873:
 6799              	.L442:
2434:TP2824/TP2802.c **** 				{
 6800              		.loc 1 2434 0
 6801 07e8 1F4B     		ldr	r3, .L460+24
 6802 07ea 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 6803 07ec 022B     		cmp	r3, #2
 6804 07ee 27D1     		bne	.L387
 6805              	.LVL874:
2437:TP2824/TP2802.c **** 				
 6806              		.loc 1 2437 0
 6807 07f0 2B48     		ldr	r0, .L460+80
 6808 07f2 FFF7FEFF 		bl	I2CDeviceSet1
 6809              	.LVL875:
2439:TP2824/TP2802.c **** 					tp28xx_byte_write(0xbe, 0x80);
 6810              		.loc 1 2439 0
 6811 07f6 4020     		movs	r0, #64
 6812 07f8 2146     		mov	r1, r4
 6813 07fa FFF7FEFF 		bl	tp28xx_byte_write
 6814              	.LVL876:
2440:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB6);
 6815              		.loc 1 2440 0
 6816 07fe BE20     		movs	r0, #190
 6817 0800 8021     		movs	r1, #128
 6818 0802 FFF7FEFF 		bl	tp28xx_byte_write
 6819              	.LVL877:
2441:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB5);
ARM GAS  /tmp/ccSZlabO.s 			page 205


 6820              		.loc 1 2441 0
 6821 0806 B620     		movs	r0, #182
 6822 0808 FFF7FEFF 		bl	tp28xx_byte_read
 6823              	.LVL878:
2442:TP2824/TP2802.c **** 					tp28xx_byte_read(0xB4);
 6824              		.loc 1 2442 0
 6825 080c B520     		movs	r0, #181
 6826 080e FFF7FEFF 		bl	tp28xx_byte_read
 6827              	.LVL879:
2443:TP2824/TP2802.c **** 
 6828              		.loc 1 2443 0
 6829 0812 B420     		movs	r0, #180
 6830 0814 FFF7FEFF 		bl	tp28xx_byte_read
 6831              	.LVL880:
2446:TP2824/TP2802.c **** 					tp28xx_byte_read(0xA2);
 6832              		.loc 1 2446 0
 6833 0818 A420     		movs	r0, #164
 6834 081a FFF7FEFF 		bl	tp28xx_byte_read
 6835              	.LVL881:
2447:TP2824/TP2802.c **** 					tp28xx_byte_read(0xA3);
 6836              		.loc 1 2447 0
 6837 081e A220     		movs	r0, #162
 6838 0820 FFF7FEFF 		bl	tp28xx_byte_read
 6839              	.LVL882:
2448:TP2824/TP2802.c **** 					
 6840              		.loc 1 2448 0
 6841 0824 A320     		movs	r0, #163
 6842 0826 FFF7FEFF 		bl	tp28xx_byte_read
 6843              	.LVL883:
2450:TP2824/TP2802.c **** 					delay(1);//5ms
 6844              		.loc 1 2450 0
 6845 082a A720     		movs	r0, #167
 6846 082c 0021     		movs	r1, #0
 6847 082e FFF7FEFF 		bl	tp28xx_byte_write
 6848              	.LVL884:
2451:TP2824/TP2802.c **** 					tp28xx_byte_write(0xa7, 0x83);
 6849              		.loc 1 2451 0
 6850 0832 0120     		movs	r0, #1
 6851 0834 FFF7FEFF 		bl	delay
 6852              	.LVL885:
2452:TP2824/TP2802.c **** 
 6853              		.loc 1 2452 0
 6854 0838 A720     		movs	r0, #167
 6855 083a 8321     		movs	r1, #131
 6856 083c FFF7FEFF 		bl	tp28xx_byte_write
 6857              	.LVL886:
 6858              	.L387:
 6859              	.LBE3:
1742:TP2824/TP2802.c ****     {
 6860              		.loc 1 1742 0 discriminator 2
 6861 0840 0134     		adds	r4, r4, #1
 6862              	.LVL887:
 6863 0842 E4B2     		uxtb	r4, r4
 6864              	.LVL888:
 6865              	.L383:
1742:TP2824/TP2802.c ****     {
 6866              		.loc 1 1742 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccSZlabO.s 			page 206


 6867 0844 002C     		cmp	r4, #0
 6868 0846 3FF4E0AB 		beq	.L443
2488:TP2824/TP2802.c **** #if 0
 6869              		.loc 1 2488 0 is_stmt 1
 6870 084a 03B0     		add	sp, sp, #12
 6871              	.LCFI43:
 6872              		.cfi_def_cfa_offset 20
 6873              		@ sp needed
 6874 084c F0BD     		pop	{r4, r5, r6, r7, pc}
 6875              	.LVL889:
 6876              	.L461:
 6877 084e 00BF     		.align	2
 6878              	.L460:
 6879 0850 00000000 		.word	.LANCHOR23
 6880 0854 00000000 		.word	.LANCHOR22
 6881 0858 00000000 		.word	SelectInputMode
 6882 085c 00000000 		.word	gbVXIS_InputMode
 6883 0860 C8030000 		.word	.LC59
 6884 0864 00000000 		.word	gbVXIS_OuputModeflg
 6885 0868 00000000 		.word	std
 6886 086c 08040000 		.word	.LC60
 6887 0870 14040000 		.word	.LC61
 6888 0874 00000000 		.word	chip
 6889 0878 00000000 		.word	mode
 6890 087c 20040000 		.word	.LC62
 6891 0880 34040000 		.word	.LC63
 6892 0884 48040000 		.word	.LC64
 6893 0888 00000000 		.word	.LANCHOR31
 6894 088c 00000000 		.word	.LANCHOR32
 6895 0890 00000000 		.word	.LANCHOR25
 6896 0894 5C040000 		.word	.LC65
 6897 0898 00000000 		.word	.LANCHOR36
 6898 089c 68040000 		.word	.LC66
 6899 08a0 00000000 		.word	.LANCHOR37
 6900              		.cfi_endproc
 6901              	.LFE82:
 6903              		.section	.text.Set_Mirror_COC,"ax",%progbits
 6904              		.align	2
 6905              		.global	Set_Mirror_COC
 6906              		.thumb
 6907              		.thumb_func
 6909              	Set_Mirror_COC:
 6910              	.LFB104:
4278:TP2824/TP2802.c **** #endif
4279:TP2824/TP2802.c **** 
4280:TP2824/TP2802.c **** }
4281:TP2824/TP2802.c **** 
4282:TP2824/TP2802.c **** void Set_Mirror_COC(void)
4283:TP2824/TP2802.c **** {
 6911              		.loc 1 4283 0
 6912              		.cfi_startproc
 6913              		@ args = 0, pretend = 0, frame = 0
 6914              		@ frame_needed = 0, uses_anonymous_args = 0
 6915 0000 08B5     		push	{r3, lr}
 6916              	.LCFI44:
 6917              		.cfi_def_cfa_offset 8
 6918              		.cfi_offset 3, -8
ARM GAS  /tmp/ccSZlabO.s 			page 207


 6919              		.cfi_offset 14, -4
4284:TP2824/TP2802.c **** #if 0
4285:TP2824/TP2802.c **** VXISI2CWrite(0x40,0x04);
4286:TP2824/TP2802.c **** VXISI2CWrite(0x56,0x02);
4287:TP2824/TP2802.c **** VXISI2CWrite(0x57,0x00);
4288:TP2824/TP2802.c **** VXISI2CWrite(0x58,0x3C);
4289:TP2824/TP2802.c **** VXISI2CWrite(0x59,0x89);
4290:TP2824/TP2802.c **** VXISI2CWrite(0x5a,0x9A);
4291:TP2824/TP2802.c **** 
4292:TP2824/TP2802.c **** VXISI2CWrite(0x5c,0x02);
4293:TP2824/TP2802.c **** VXISI2CWrite(0x5d,0x02);
4294:TP2824/TP2802.c **** VXISI2CWrite(0x5e,0x00);
4295:TP2824/TP2802.c **** VXISI2CWrite(0x5f,0x3E);
4296:TP2824/TP2802.c **** VXISI2CWrite(0x60,0x9F);
4297:TP2824/TP2802.c **** #endif
4298:TP2824/TP2802.c **** VXISI2CWrite(0x6f,0x43);
 6920              		.loc 1 4298 0
 6921 0002 6F20     		movs	r0, #111
 6922 0004 4321     		movs	r1, #67
 6923 0006 FFF7FEFF 		bl	VXISI2CWrite
 6924              	.LVL890:
4299:TP2824/TP2802.c **** delay(5);//50ms
 6925              		.loc 1 4299 0
 6926 000a 0520     		movs	r0, #5
 6927 000c FFF7FEFF 		bl	delay
 6928              	.LVL891:
4300:TP2824/TP2802.c **** VXISI2CWrite(0x6f,0x42);
 6929              		.loc 1 4300 0
 6930 0010 6F20     		movs	r0, #111
 6931 0012 4221     		movs	r1, #66
 6932 0014 FFF7FEFF 		bl	VXISI2CWrite
 6933              	.LVL892:
 6934 0018 08BD     		pop	{r3, pc}
 6935              		.cfi_endproc
 6936              	.LFE104:
 6938              		.global	TP2802_FORMAT_DataSet
 6939              		.global	TP2824C_CVIHD_PTZ_DataSet
 6940              		.global	TP2824C_CVBS_PTZ_DataSet
 6941              		.global	TP2824C_AHD_FHD_PTZ_DataSet
 6942              		.global	TP2824C_TVI_FHD_PTZ_DataSet
 6943              		.global	TP2802D_DataSet
 6944              		.global	TP2822_DataSet
 6945              		.global	TP2823_MODE_DataSet
 6946              		.global	TP2823_DataSet
 6947              		.global	TP2834_MODE_DataSet
 6948              		.global	TP2834_DataSet
 6949              		.global	TP2833_HDA_DataSet
 6950              		.global	TP2833_MODE_DataSet
 6951              		.global	TP2833_DataSet
 6952              		.global	TP2834_Audio_DataSet
 6953              		.global	TP2853C_HDC_DataSet
 6954              		.global	TP2853C_HDA_DataSet
 6955              		.global	TP2853C_MODE_DataSet
 6956              		.global	TP2853C_DataSet
 6957              		.global	TP2824C_HDC_DataSet
 6958              		.global	TP2826_HDC_DataSet
 6959              		.global	TP2824C_HDA_DataSet
ARM GAS  /tmp/ccSZlabO.s 			page 208


 6960              		.global	TP2826_HDA_DataSet
 6961              		.global	TP2824C_MODE_DataSet
 6962              		.global	TP2826_MODE_DataSet
 6963              		.global	TP2826_DataSet
 6964              		.global	TP2824C_DataSet
 6965              		.global	QuadBoxMode
 6966              		.global	QuadBoxId
 6967              		.global	PtzTxChNum
 6968              		.global	PreCOCSelectModeType
 6969              		.global	COCSelectModeType
 6970              		.global	Flisheye_VLOSS_Count
 6971              		.global	TP_InputMode
 6972              		.comm	Flisheye_COC,1,1
 6973              		.global	Flisheye_CAM
 6974              		.comm	ptztxflag,4,4
 6975              		.comm	TVI_speed,1,1
 6976              		.comm	TVI_Chksum,1,1
 6977              		.comm	presetNum,1,1
 6978              		.comm	TVI_Command,1,1
 6979              		.comm	AHDcmd4,1,1
 6980              		.comm	AHDcmd3,1,1
 6981              		.comm	AHDcmd2,1,1
 6982              		.comm	AHDcmd1,1,1
 6983              		.comm	COCRX4,12,4
 6984              		.comm	COCRX3,12,4
 6985              		.comm	COCRX2,12,4
 6986              		.comm	COCRX1,12,4
 6987              		.comm	tpRxD,26,4
 6988              		.global	REG_FA
 6989              		.global	REG_F7
 6990              		.global	REG_F6
 6991              		.global	SYS_AND
 6992              		.global	SYS_MODE
 6993              		.comm	flag_MEGA,4,4
 6994              		.comm	flag_AUDIO,4,4
 6995              		.comm	flag_CVBS,4,4
 6996              		.comm	sywd,4,4
 6997              		.comm	crc,1,1
 6998              		.comm	CurCH,1,1
 6999              		.comm	CurRes,1,1
 7000              		.comm	PTZ_pelco,2,2
 7001              		.comm	PTZ_buf,16,4
 7002              		.comm	TVII2CAddress,1,1
 7003              		.comm	flag_LOCKED,1,1
 7004              		.comm	chip,1,1
 7005              		.comm	revision,1,1
 7006              		.comm	VideoSave,1,4
 7007              		.comm	egain,4,4
 7008              		.comm	std,1,4
 7009              		.comm	mode,1,4
 7010              		.comm	count,1,4
 7011              		.comm	state,1,4
 7012              		.comm	ManVidResRx,1,1
 7013              		.global	newInRes
 7014 001a 00BF     		.section	.data.TP_InputMode,"aw",%progbits
 7015              		.set	.LANCHOR22,. + 0
 7018              	TP_InputMode:
ARM GAS  /tmp/ccSZlabO.s 			page 209


 7019 0000 07       		.byte	7
 7020              		.section	.rodata.TP2853C_HDC_DataSet,"a",%progbits
 7021              		.align	2
 7022              		.set	.LANCHOR12,. + 0
 7025              	TP2853C_HDC_DataSet:
 7026 0000 15       		.byte	21
 7027 0001 16       		.byte	22
 7028 0002 20       		.byte	32
 7029 0003 2B       		.byte	43
 7030 0004 2D       		.byte	45
 7031 0005 2E       		.byte	46
 7032 0006 30       		.byte	48
 7033 0007 31       		.byte	49
 7034 0008 32       		.byte	50
 7035 0009 33       		.byte	51
 7036 000a 27       		.byte	39
 7037 000b 28       		.byte	40
 7038 000c FF       		.byte	-1
 7039 000d 13       		.byte	19
 7040 000e 40       		.byte	64
 7041 000f 50       		.byte	80
 7042 0010 60       		.byte	96
 7043 0011 42       		.byte	66
 7044 0012 40       		.byte	64
 7045 0013 48       		.byte	72
 7046 0014 67       		.byte	103
 7047 0015 2E       		.byte	46
 7048 0016 90       		.byte	-112
 7049 0017 5A       		.byte	90
 7050 0018 04       		.byte	4
 7051 0019 FF       		.byte	-1
 7052 001a 13       		.byte	19
 7053 001b 40       		.byte	64
 7054 001c 50       		.byte	80
 7055 001d 60       		.byte	96
 7056 001e 42       		.byte	66
 7057 001f 40       		.byte	64
 7058 0020 48       		.byte	72
 7059 0021 67       		.byte	103
 7060 0022 2E       		.byte	46
 7061 0023 90       		.byte	-112
 7062 0024 5A       		.byte	90
 7063 0025 04       		.byte	4
 7064 0026 FF       		.byte	-1
 7065 0027 13       		.byte	19
 7066 0028 20       		.byte	32
 7067 0029 48       		.byte	72
 7068 002a 60       		.byte	96
 7069 002b 45       		.byte	69
 7070 002c 40       		.byte	64
 7071 002d 41       		.byte	65
 7072 002e 83       		.byte	-125
 7073 002f 2E       		.byte	46
 7074 0030 90       		.byte	-112
 7075 0031 5A       		.byte	90
 7076 0032 04       		.byte	4
 7077 0033 FF       		.byte	-1
ARM GAS  /tmp/ccSZlabO.s 			page 210


 7078 0034 13       		.byte	19
 7079 0035 84       		.byte	-124
 7080 0036 48       		.byte	72
 7081 0037 60       		.byte	96
 7082 0038 45       		.byte	69
 7083 0039 40       		.byte	64
 7084 003a 41       		.byte	65
 7085 003b 83       		.byte	-125
 7086 003c 2E       		.byte	46
 7087 003d 90       		.byte	-112
 7088 003e 5A       		.byte	90
 7089 003f 04       		.byte	4
 7090 0040 FF       		.byte	-1
 7091              		.section	.rodata.TP2824C_MODE_DataSet,"a",%progbits
 7092              		.align	2
 7093              		.set	.LANCHOR7,. + 0
 7096              	TP2824C_MODE_DataSet:
 7097 0000 0C       		.byte	12
 7098 0001 0D       		.byte	13
 7099 0002 20       		.byte	32
 7100 0003 26       		.byte	38
 7101 0004 2B       		.byte	43
 7102 0005 2D       		.byte	45
 7103 0006 2E       		.byte	46
 7104 0007 30       		.byte	48
 7105 0008 31       		.byte	49
 7106 0009 32       		.byte	50
 7107 000a 33       		.byte	51
 7108 000b 39       		.byte	57
 7109 000c 2C       		.byte	44
 7110 000d 21       		.byte	33
 7111 000e 22       		.byte	34
 7112 000f 23       		.byte	35
 7113 0010 25       		.byte	37
 7114 0011 27       		.byte	39
 7115 0012 28       		.byte	40
 7116 0013 FF       		.byte	-1
 7117 0014 03       		.byte	3
 7118 0015 50       		.byte	80
 7119 0016 30       		.byte	48
 7120 0017 05       		.byte	5
 7121 0018 60       		.byte	96
 7122 0019 30       		.byte	48
 7123 001a 70       		.byte	112
 7124 001b 48       		.byte	72
 7125 001c BB       		.byte	-69
 7126 001d 2E       		.byte	46
 7127 001e 90       		.byte	-112
 7128 001f 1C       		.byte	28
 7129 0020 0A       		.byte	10
 7130 0021 84       		.byte	-124
 7131 0022 36       		.byte	54
 7132 0023 3C       		.byte	60
 7133 0024 FF       		.byte	-1
 7134 0025 2D       		.byte	45
 7135 0026 00       		.byte	0
 7136 0027 FF       		.byte	-1
ARM GAS  /tmp/ccSZlabO.s 			page 211


 7137 0028 13       		.byte	19
 7138 0029 50       		.byte	80
 7139 002a 30       		.byte	48
 7140 002b 05       		.byte	5
 7141 002c 60       		.byte	96
 7142 002d 30       		.byte	48
 7143 002e 70       		.byte	112
 7144 002f 48       		.byte	72
 7145 0030 BB       		.byte	-69
 7146 0031 2E       		.byte	46
 7147 0032 90       		.byte	-112
 7148 0033 18       		.byte	24
 7149 0034 0A       		.byte	10
 7150 0035 84       		.byte	-124
 7151 0036 36       		.byte	54
 7152 0037 3C       		.byte	60
 7153 0038 FF       		.byte	-1
 7154 0039 2D       		.byte	45
 7155 003a 00       		.byte	0
 7156 003b FF       		.byte	-1
 7157 003c 13       		.byte	19
 7158 003d 50       		.byte	80
 7159 003e 40       		.byte	64
 7160 003f 05       		.byte	5
 7161 0040 70       		.byte	112
 7162 0041 68       		.byte	104
 7163 0042 5E       		.byte	94
 7164 0043 62       		.byte	98
 7165 0044 BB       		.byte	-69
 7166 0045 96       		.byte	-106
 7167 0046 C0       		.byte	-64
 7168 0047 04       		.byte	4
 7169 0048 2A       		.byte	42
 7170 0049 84       		.byte	-124
 7171 004a 36       		.byte	54
 7172 004b 3C       		.byte	60
 7173 004c FF       		.byte	-1
 7174 004d 2D       		.byte	45
 7175 004e 00       		.byte	0
 7176 004f FF       		.byte	-1
 7177 0050 13       		.byte	19
 7178 0051 51       		.byte	81
 7179 0052 48       		.byte	72
 7180 0053 05       		.byte	5
 7181 0054 70       		.byte	112
 7182 0055 60       		.byte	96
 7183 0056 5E       		.byte	94
 7184 0057 7A       		.byte	122
 7185 0058 4A       		.byte	74
 7186 0059 4D       		.byte	77
 7187 005a F0       		.byte	-16
 7188 005b 04       		.byte	4
 7189 005c 2A       		.byte	42
 7190 005d 84       		.byte	-124
 7191 005e 37       		.byte	55
 7192 005f 3F       		.byte	63
 7193 0060 FF       		.byte	-1
ARM GAS  /tmp/ccSZlabO.s 			page 212


 7194 0061 2D       		.byte	45
 7195 0062 00       		.byte	0
 7196 0063 FF       		.byte	-1
 7197              		.section	.rodata.TP2833_HDA_DataSet,"a",%progbits
 7198              		.align	2
 7199              		.set	.LANCHOR9,. + 0
 7202              	TP2833_HDA_DataSet:
 7203 0000 2B       		.byte	43
 7204 0001 2D       		.byte	45
 7205 0002 2E       		.byte	46
 7206 0003 30       		.byte	48
 7207 0004 31       		.byte	49
 7208 0005 32       		.byte	50
 7209 0006 33       		.byte	51
 7210 0007 FF       		.byte	-1
 7211 0008 70       		.byte	112
 7212 0009 48       		.byte	72
 7213 000a 5E       		.byte	94
 7214 000b 27       		.byte	39
 7215 000c 72       		.byte	114
 7216 000d 80       		.byte	-128
 7217 000e 77       		.byte	119
 7218 000f FF       		.byte	-1
 7219 0010 70       		.byte	112
 7220 0011 48       		.byte	72
 7221 0012 5E       		.byte	94
 7222 0013 27       		.byte	39
 7223 0014 88       		.byte	-120
 7224 0015 04       		.byte	4
 7225 0016 23       		.byte	35
 7226 0017 FF       		.byte	-1
 7227 0018 58       		.byte	88
 7228 0019 45       		.byte	69
 7229 001a 50       		.byte	80
 7230 001b 29       		.byte	41
 7231 001c 65       		.byte	101
 7232 001d 78       		.byte	120
 7233 001e 16       		.byte	22
 7234 001f FF       		.byte	-1
 7235 0020 58       		.byte	88
 7236 0021 45       		.byte	69
 7237 0022 40       		.byte	64
 7238 0023 29       		.byte	41
 7239 0024 61       		.byte	97
 7240 0025 78       		.byte	120
 7241 0026 16       		.byte	22
 7242 0027 FF       		.byte	-1
 7243              		.section	.rodata.TP2823_DataSet,"a",%progbits
 7244              		.align	2
 7245              		.set	.LANCHOR16,. + 0
 7248              	TP2823_DataSet:
 7249 0000 40       		.byte	64
 7250 0001 04       		.byte	4
 7251 0002 0B       		.byte	11
 7252 0003 60       		.byte	96
 7253 0004 22       		.byte	34
 7254 0005 34       		.byte	52
ARM GAS  /tmp/ccSZlabO.s 			page 213


 7255 0006 23       		.byte	35
 7256 0007 44       		.byte	68
 7257 0008 26       		.byte	38
 7258 0009 01       		.byte	1
 7259 000a 38       		.byte	56
 7260 000b 40       		.byte	64
 7261 000c 3F       		.byte	63
 7262 000d 08       		.byte	8
 7263 000e 4D       		.byte	77
 7264 000f 03       		.byte	3
 7265 0010 4E       		.byte	78
 7266 0011 33       		.byte	51
 7267 0012 FA       		.byte	-6
 7268 0013 00       		.byte	0
 7269 0014 FF       		.byte	-1
 7270 0015 FF       		.byte	-1
 7271              		.section	.rodata.SYS_MODE,"a",%progbits
 7272              		.align	2
 7273              		.set	.LANCHOR1,. + 0
 7276              	SYS_MODE:
 7277 0000 01       		.byte	1
 7278 0001 02       		.byte	2
 7279 0002 04       		.byte	4
 7280 0003 08       		.byte	8
 7281 0004 0F       		.byte	15
 7282              		.section	.bss.PtzTxChNum,"aw",%nobits
 7283              		.set	.LANCHOR25,. + 0
 7286              	PtzTxChNum:
 7287 0000 00       		.space	1
 7288              		.section	.rodata.TP2824C_CVBS_PTZ_DataSet,"a",%progbits
 7289              		.align	2
 7290              		.set	.LANCHOR31,. + 0
 7293              	TP2824C_CVBS_PTZ_DataSet:
 7294 0000 C0       		.byte	-64
 7295 0001 00       		.byte	0
 7296 0002 C2       		.byte	-62
 7297 0003 0F       		.byte	15
 7298 0004 C3       		.byte	-61
 7299 0005 10       		.byte	16
 7300 0006 C1       		.byte	-63
 7301 0007 00       		.byte	0
 7302 0008 C4       		.byte	-60
 7303 0009 00       		.byte	0
 7304 000a C5       		.byte	-59
 7305 000b 00       		.byte	0
 7306 000c C6       		.byte	-58
 7307 000d 49       		.byte	73
 7308 000e C7       		.byte	-57
 7309 000f 14       		.byte	20
 7310 0010 C8       		.byte	-56
 7311 0011 AF       		.byte	-81
 7312 0012 6F       		.byte	111
 7313 0013 60       		.byte	96
 7314 0014 70       		.byte	112
 7315 0015 00       		.byte	0
 7316 0016 55       		.byte	85
 7317 0017 00       		.byte	0
ARM GAS  /tmp/ccSZlabO.s 			page 214


 7318 0018 56       		.byte	86
 7319 0019 00       		.byte	0
 7320 001a 57       		.byte	87
 7321 001b 00       		.byte	0
 7322 001c 58       		.byte	88
 7323 001d 00       		.byte	0
 7324 001e 59       		.byte	89
 7325 001f 00       		.byte	0
 7326 0020 5A       		.byte	90
 7327 0021 00       		.byte	0
 7328 0022 5B       		.byte	91
 7329 0023 00       		.byte	0
 7330 0024 5C       		.byte	92
 7331 0025 00       		.byte	0
 7332 0026 5D       		.byte	93
 7333 0027 00       		.byte	0
 7334 0028 5E       		.byte	94
 7335 0029 00       		.byte	0
 7336 002a 5F       		.byte	95
 7337 002b 00       		.byte	0
 7338 002c 60       		.byte	96
 7339 002d 00       		.byte	0
 7340 002e 62       		.byte	98
 7341 002f 00       		.byte	0
 7342 0030 63       		.byte	99
 7343 0031 00       		.byte	0
 7344 0032 64       		.byte	100
 7345 0033 00       		.byte	0
 7346 0034 65       		.byte	101
 7347 0035 00       		.byte	0
 7348 0036 66       		.byte	102
 7349 0037 00       		.byte	0
 7350 0038 68       		.byte	104
 7351 0039 00       		.byte	0
 7352 003a 69       		.byte	105
 7353 003b 00       		.byte	0
 7354 003c 6A       		.byte	106
 7355 003d 00       		.byte	0
 7356 003e 6B       		.byte	107
 7357 003f 00       		.byte	0
 7358 0040 6C       		.byte	108
 7359 0041 00       		.byte	0
 7360 0042 FF       		.byte	-1
 7361 0043 FF       		.byte	-1
 7362              		.section	.rodata.PTZ_RX_dat.8672,"a",%progbits
 7363              		.align	2
 7364              		.set	.LANCHOR28,. + 0
 7367              	PTZ_RX_dat.8672:
 7368 0000 00       		.byte	0
 7369 0001 00       		.byte	0
 7370 0002 07       		.byte	7
 7371 0003 08       		.byte	8
 7372 0004 00       		.byte	0
 7373 0005 00       		.byte	0
 7374 0006 04       		.byte	4
 7375 0007 00       		.byte	0
 7376 0008 00       		.byte	0
ARM GAS  /tmp/ccSZlabO.s 			page 215


 7377 0009 60       		.byte	96
 7378 000a 10       		.byte	16
 7379 000b 04       		.byte	4
 7380 000c F0       		.byte	-16
 7381 000d D8       		.byte	-40
 7382 000e 27       		.byte	39
 7383 000f 00       		.byte	0
 7384 0010 00       		.byte	0
 7385 0011 07       		.byte	7
 7386 0012 08       		.byte	8
 7387 0013 09       		.byte	9
 7388 0014 0A       		.byte	10
 7389 0015 04       		.byte	4
 7390 0016 00       		.byte	0
 7391 0017 00       		.byte	0
 7392 0018 60       		.byte	96
 7393 0019 10       		.byte	16
 7394 001a 04       		.byte	4
 7395 001b F0       		.byte	-16
 7396 001c D8       		.byte	-40
 7397 001d 27       		.byte	39
 7398 001e 00       		.byte	0
 7399 001f 00       		.byte	0
 7400 0020 06       		.byte	6
 7401 0021 07       		.byte	7
 7402 0022 08       		.byte	8
 7403 0023 09       		.byte	9
 7404 0024 03       		.byte	3
 7405 0025 52       		.byte	82
 7406 0026 53       		.byte	83
 7407 0027 60       		.byte	96
 7408 0028 10       		.byte	16
 7409 0029 04       		.byte	4
 7410 002a F0       		.byte	-16
 7411 002b D8       		.byte	-40
 7412 002c 17       		.byte	23
 7413 002d 00       		.byte	0
 7414 002e 00       		.byte	0
 7415 002f 06       		.byte	6
 7416 0030 07       		.byte	7
 7417 0031 08       		.byte	8
 7418 0032 09       		.byte	9
 7419 0033 02       		.byte	2
 7420 0034 DF       		.byte	-33
 7421 0035 88       		.byte	-120
 7422 0036 60       		.byte	96
 7423 0037 10       		.byte	16
 7424 0038 04       		.byte	4
 7425 0039 F0       		.byte	-16
 7426 003a D8       		.byte	-40
 7427 003b 17       		.byte	23
 7428 003c 00       		.byte	0
 7429 003d 00       		.byte	0
 7430 003e 06       		.byte	6
 7431 003f 07       		.byte	7
 7432 0040 08       		.byte	8
 7433 0041 09       		.byte	9
ARM GAS  /tmp/ccSZlabO.s 			page 216


 7434 0042 04       		.byte	4
 7435 0043 EC       		.byte	-20
 7436 0044 E9       		.byte	-23
 7437 0045 60       		.byte	96
 7438 0046 10       		.byte	16
 7439 0047 04       		.byte	4
 7440 0048 F0       		.byte	-16
 7441 0049 D8       		.byte	-40
 7442 004a 17       		.byte	23
 7443              		.section	.bss.QuadBoxId,"aw",%nobits
 7444              		.set	.LANCHOR24,. + 0
 7447              	QuadBoxId:
 7448 0000 00       		.space	1
 7449              		.section	.rodata.TP2834_MODE_DataSet,"a",%progbits
 7450              		.align	2
 7451              		.set	.LANCHOR5,. + 0
 7454              	TP2834_MODE_DataSet:
 7455 0000 0C       		.byte	12
 7456 0001 0D       		.byte	13
 7457 0002 20       		.byte	32
 7458 0003 26       		.byte	38
 7459 0004 2B       		.byte	43
 7460 0005 2D       		.byte	45
 7461 0006 2E       		.byte	46
 7462 0007 30       		.byte	48
 7463 0008 31       		.byte	49
 7464 0009 32       		.byte	50
 7465 000a 33       		.byte	51
 7466 000b 39       		.byte	57
 7467 000c FF       		.byte	-1
 7468 000d 03       		.byte	3
 7469 000e 10       		.byte	16
 7470 000f 60       		.byte	96
 7471 0010 02       		.byte	2
 7472 0011 58       		.byte	88
 7473 0012 30       		.byte	48
 7474 0013 70       		.byte	112
 7475 0014 48       		.byte	72
 7476 0015 BB       		.byte	-69
 7477 0016 2E       		.byte	46
 7478 0017 90       		.byte	-112
 7479 0018 8C       		.byte	-116
 7480 0019 FF       		.byte	-1
 7481 001a 03       		.byte	3
 7482 001b 10       		.byte	16
 7483 001c 60       		.byte	96
 7484 001d 02       		.byte	2
 7485 001e 58       		.byte	88
 7486 001f 30       		.byte	48
 7487 0020 70       		.byte	112
 7488 0021 48       		.byte	72
 7489 0022 BB       		.byte	-69
 7490 0023 2E       		.byte	46
 7491 0024 90       		.byte	-112
 7492 0025 88       		.byte	-120
 7493 0026 FF       		.byte	-1
 7494 0027 43       		.byte	67
ARM GAS  /tmp/ccSZlabO.s 			page 217


 7495 0028 10       		.byte	16
 7496 0029 A0       		.byte	-96
 7497 002a 12       		.byte	18
 7498 002b 70       		.byte	112
 7499 002c 68       		.byte	104
 7500 002d 5E       		.byte	94
 7501 002e 62       		.byte	98
 7502 002f BB       		.byte	-69
 7503 0030 96       		.byte	-106
 7504 0031 C0       		.byte	-64
 7505 0032 84       		.byte	-124
 7506 0033 FF       		.byte	-1
 7507 0034 43       		.byte	67
 7508 0035 11       		.byte	17
 7509 0036 B0       		.byte	-80
 7510 0037 02       		.byte	2
 7511 0038 70       		.byte	112
 7512 0039 60       		.byte	96
 7513 003a 5E       		.byte	94
 7514 003b 7A       		.byte	122
 7515 003c 4A       		.byte	74
 7516 003d 4D       		.byte	77
 7517 003e F0       		.byte	-16
 7518 003f 84       		.byte	-124
 7519 0040 FF       		.byte	-1
 7520              		.section	.rodata.TP2802_FORMAT_DataSet,"a",%progbits
 7521              		.align	2
 7522              		.set	.LANCHOR2,. + 0
 7525              	TP2802_FORMAT_DataSet:
 7526 0000 02       		.byte	2
 7527 0001 15       		.byte	21
 7528 0002 16       		.byte	22
 7529 0003 17       		.byte	23
 7530 0004 18       		.byte	24
 7531 0005 19       		.byte	25
 7532 0006 1A       		.byte	26
 7533 0007 1C       		.byte	28
 7534 0008 1D       		.byte	29
 7535 0009 35       		.byte	53
 7536 000a 36       		.byte	54
 7537 000b 14       		.byte	20
 7538 000c FF       		.byte	-1
 7539 000d 48       		.byte	72
 7540 000e 03       		.byte	3
 7541 000f D3       		.byte	-45
 7542 0010 80       		.byte	-128
 7543 0011 29       		.byte	41
 7544 0012 38       		.byte	56
 7545 0013 47       		.byte	71
 7546 0014 08       		.byte	8
 7547 0015 98       		.byte	-104
 7548 0016 05       		.byte	5
 7549 0017 DC       		.byte	-36
 7550 0018 0A       		.byte	10
 7551 0019 FF       		.byte	-1
 7552 001a 48       		.byte	72
 7553 001b 03       		.byte	3
ARM GAS  /tmp/ccSZlabO.s 			page 218


 7554 001c D3       		.byte	-45
 7555 001d 80       		.byte	-128
 7556 001e 29       		.byte	41
 7557 001f 38       		.byte	56
 7558 0020 47       		.byte	71
 7559 0021 0A       		.byte	10
 7560 0022 50       		.byte	80
 7561 0023 05       		.byte	5
 7562 0024 DC       		.byte	-36
 7563 0025 0A       		.byte	10
 7564 0026 FF       		.byte	-1
 7565 0027 4A       		.byte	74
 7566 0028 13       		.byte	19
 7567 0029 16       		.byte	22
 7568 002a 00       		.byte	0
 7569 002b 19       		.byte	25
 7570 002c D0       		.byte	-48
 7571 002d 25       		.byte	37
 7572 002e 06       		.byte	6
 7573 002f 72       		.byte	114
 7574 0030 05       		.byte	5
 7575 0031 DC       		.byte	-36
 7576 0032 0A       		.byte	10
 7577 0033 FF       		.byte	-1
 7578 0034 4A       		.byte	74
 7579 0035 13       		.byte	19
 7580 0036 16       		.byte	22
 7581 0037 00       		.byte	0
 7582 0038 19       		.byte	25
 7583 0039 D0       		.byte	-48
 7584 003a 25       		.byte	37
 7585 003b 07       		.byte	7
 7586 003c BC       		.byte	-68
 7587 003d 05       		.byte	5
 7588 003e DC       		.byte	-36
 7589 003f 0A       		.byte	10
 7590 0040 FF       		.byte	-1
 7591 0041 4A       		.byte	74
 7592 0042 13       		.byte	19
 7593 0043 16       		.byte	22
 7594 0044 00       		.byte	0
 7595 0045 19       		.byte	25
 7596 0046 D0       		.byte	-48
 7597 0047 25       		.byte	37
 7598 0048 0C       		.byte	12
 7599 0049 E4       		.byte	-28
 7600 004a 05       		.byte	5
 7601 004b DC       		.byte	-36
 7602 004c 0A       		.byte	10
 7603 004d FF       		.byte	-1
 7604 004e 4A       		.byte	74
 7605 004f 13       		.byte	19
 7606 0050 16       		.byte	22
 7607 0051 00       		.byte	0
 7608 0052 19       		.byte	25
 7609 0053 D0       		.byte	-48
 7610 0054 25       		.byte	37
ARM GAS  /tmp/ccSZlabO.s 			page 219


 7611 0055 0F       		.byte	15
 7612 0056 78       		.byte	120
 7613 0057 05       		.byte	5
 7614 0058 DC       		.byte	-36
 7615 0059 0A       		.byte	10
 7616 005a FF       		.byte	-1
 7617 005b 4F       		.byte	79
 7618 005c 13       		.byte	19
 7619 005d 4E       		.byte	78
 7620 005e BC       		.byte	-68
 7621 005f 15       		.byte	21
 7622 0060 F0       		.byte	-16
 7623 0061 07       		.byte	7
 7624 0062 09       		.byte	9
 7625 0063 38       		.byte	56
 7626 0064 25       		.byte	37
 7627 0065 DC       		.byte	-36
 7628 0066 0A       		.byte	10
 7629 0067 FF       		.byte	-1
 7630 0068 4F       		.byte	79
 7631 0069 13       		.byte	19
 7632 006a 5F       		.byte	95
 7633 006b BC       		.byte	-68
 7634 006c 17       		.byte	23
 7635 006d 20       		.byte	32
 7636 006e 17       		.byte	23
 7637 006f 09       		.byte	9
 7638 0070 48       		.byte	72
 7639 0071 25       		.byte	37
 7640 0072 DC       		.byte	-36
 7641 0073 0A       		.byte	10
 7642 0074 FF       		.byte	-1
 7643 0075 48       		.byte	72
 7644 0076 13       		.byte	19
 7645 0077 6C       		.byte	108
 7646 0078 00       		.byte	0
 7647 0079 2C       		.byte	44
 7648 007a 00       		.byte	0
 7649 007b 68       		.byte	104
 7650 007c 09       		.byte	9
 7651 007d C4       		.byte	-60
 7652 007e 16       		.byte	22
 7653 007f 30       		.byte	48
 7654 0080 0A       		.byte	10
 7655 0081 FF       		.byte	-1
 7656 0082 48       		.byte	72
 7657 0083 13       		.byte	19
 7658 0084 1F       		.byte	31
 7659 0085 20       		.byte	32
 7660 0086 34       		.byte	52
 7661 0087 98       		.byte	-104
 7662 0088 7A       		.byte	122
 7663 0089 0B       		.byte	11
 7664 008a 9A       		.byte	-102
 7665 008b 17       		.byte	23
 7666 008c D0       		.byte	-48
 7667 008d 0A       		.byte	10
ARM GAS  /tmp/ccSZlabO.s 			page 220


 7668 008e FF       		.byte	-1
 7669 008f 4A       		.byte	74
 7670 0090 13       		.byte	19
 7671 0091 16       		.byte	22
 7672 0092 00       		.byte	0
 7673 0093 19       		.byte	25
 7674 0094 D0       		.byte	-48
 7675 0095 25       		.byte	37
 7676 0096 06       		.byte	6
 7677 0097 72       		.byte	114
 7678 0098 25       		.byte	37
 7679 0099 DC       		.byte	-36
 7680 009a 0A       		.byte	10
 7681 009b FF       		.byte	-1
 7682 009c 4A       		.byte	74
 7683 009d 13       		.byte	19
 7684 009e 16       		.byte	22
 7685 009f 00       		.byte	0
 7686 00a0 19       		.byte	25
 7687 00a1 D0       		.byte	-48
 7688 00a2 25       		.byte	37
 7689 00a3 07       		.byte	7
 7690 00a4 BC       		.byte	-68
 7691 00a5 25       		.byte	37
 7692 00a6 DC       		.byte	-36
 7693 00a7 0A       		.byte	10
 7694 00a8 FF       		.byte	-1
 7695 00a9 48       		.byte	72
 7696 00aa 13       		.byte	19
 7697 00ab 1F       		.byte	31
 7698 00ac 80       		.byte	-128
 7699 00ad 7D       		.byte	125
 7700 00ae F0       		.byte	-16
 7701 00af 5A       		.byte	90
 7702 00b0 0B       		.byte	11
 7703 00b1 B8       		.byte	-72
 7704 00b2 16       		.byte	22
 7705 00b3 72       		.byte	114
 7706 00b4 0A       		.byte	10
 7707 00b5 FF       		.byte	-1
 7708 00b6 48       		.byte	72
 7709 00b7 13       		.byte	19
 7710 00b8 6C       		.byte	108
 7711 00b9 00       		.byte	0
 7712 00ba 2C       		.byte	44
 7713 00bb 00       		.byte	0
 7714 00bc 68       		.byte	104
 7715 00bd 09       		.byte	9
 7716 00be C4       		.byte	-60
 7717 00bf 16       		.byte	22
 7718 00c0 72       		.byte	114
 7719 00c1 0A       		.byte	10
 7720 00c2 FF       		.byte	-1
 7721 00c3 48       		.byte	72
 7722 00c4 23       		.byte	35
 7723 00c5 34       		.byte	52
 7724 00c6 78       		.byte	120
ARM GAS  /tmp/ccSZlabO.s 			page 221


 7725 00c7 8C       		.byte	-116
 7726 00c8 F0       		.byte	-16
 7727 00c9 5A       		.byte	90
 7728 00ca 0C       		.byte	12
 7729 00cb E4       		.byte	-28
 7730 00cc 17       		.byte	23
 7731 00cd 08       		.byte	8
 7732 00ce 0A       		.byte	10
 7733 00cf FF       		.byte	-1
 7734 00d0 48       		.byte	72
 7735 00d1 13       		.byte	19
 7736 00d2 EC       		.byte	-20
 7737 00d3 80       		.byte	-128
 7738 00d4 B0       		.byte	-80
 7739 00d5 08       		.byte	8
 7740 00d6 7C       		.byte	124
 7741 00d7 0E       		.byte	14
 7742 00d8 A6       		.byte	-90
 7743 00d9 17       		.byte	23
 7744 00da BC       		.byte	-68
 7745 00db 0A       		.byte	10
 7746 00dc FF       		.byte	-1
 7747 00dd 48       		.byte	72
 7748 00de 13       		.byte	19
 7749 00df 0F       		.byte	15
 7750 00e0 00       		.byte	0
 7751 00e1 32       		.byte	50
 7752 00e2 A0       		.byte	-96
 7753 00e3 55       		.byte	85
 7754 00e4 06       		.byte	6
 7755 00e5 72       		.byte	114
 7756 00e6 15       		.byte	21
 7757 00e7 DC       		.byte	-36
 7758 00e8 0A       		.byte	10
 7759 00e9 FF       		.byte	-1
 7760 00ea 48       		.byte	72
 7761 00eb 13       		.byte	19
 7762 00ec 20       		.byte	32
 7763 00ed 00       		.byte	0
 7764 00ee 20       		.byte	32
 7765 00ef A0       		.byte	-96
 7766 00f0 55       		.byte	85
 7767 00f1 07       		.byte	7
 7768 00f2 BC       		.byte	-68
 7769 00f3 15       		.byte	21
 7770 00f4 DC       		.byte	-36
 7771 00f5 0A       		.byte	10
 7772 00f6 FF       		.byte	-1
 7773              		.section	.rodata.TP2826_DataSet,"a",%progbits
 7774              		.align	2
 7775              		.set	.LANCHOR20,. + 0
 7778              	TP2826_DataSet:
 7779 0000 40       		.byte	64
 7780 0001 04       		.byte	4
 7781 0002 07       		.byte	7
 7782 0003 C0       		.byte	-64
 7783 0004 0B       		.byte	11
ARM GAS  /tmp/ccSZlabO.s 			page 222


 7784 0005 C0       		.byte	-64
 7785 0006 21       		.byte	33
 7786 0007 84       		.byte	-124
 7787 0008 38       		.byte	56
 7788 0009 00       		.byte	0
 7789 000a 3A       		.byte	58
 7790 000b 22       		.byte	34
 7791 000c 3B       		.byte	59
 7792 000d 05       		.byte	5
 7793 000e 26       		.byte	38
 7794 000f 04       		.byte	4
 7795 0010 4D       		.byte	77
 7796 0011 07       		.byte	7
 7797 0012 4E       		.byte	78
 7798 0013 05       		.byte	5
 7799 0014 F1       		.byte	-15
 7800 0015 07       		.byte	7
 7801 0016 FF       		.byte	-1
 7802 0017 FF       		.byte	-1
 7803              		.section	.rodata.TP2853C_HDA_DataSet,"a",%progbits
 7804              		.align	2
 7805              		.set	.LANCHOR8,. + 0
 7808              	TP2853C_HDA_DataSet:
 7809 0000 2B       		.byte	43
 7810 0001 2D       		.byte	45
 7811 0002 2E       		.byte	46
 7812 0003 30       		.byte	48
 7813 0004 31       		.byte	49
 7814 0005 32       		.byte	50
 7815 0006 33       		.byte	51
 7816 0007 21       		.byte	33
 7817 0008 25       		.byte	37
 7818 0009 FF       		.byte	-1
 7819 000a 70       		.byte	112
 7820 000b 48       		.byte	72
 7821 000c 5E       		.byte	94
 7822 000d 27       		.byte	39
 7823 000e 72       		.byte	114
 7824 000f 80       		.byte	-128
 7825 0010 77       		.byte	119
 7826 0011 44       		.byte	68
 7827 0012 F0       		.byte	-16
 7828 0013 FF       		.byte	-1
 7829 0014 70       		.byte	112
 7830 0015 48       		.byte	72
 7831 0016 5E       		.byte	94
 7832 0017 27       		.byte	39
 7833 0018 88       		.byte	-120
 7834 0019 04       		.byte	4
 7835 001a 23       		.byte	35
 7836 001b 44       		.byte	68
 7837 001c F0       		.byte	-16
 7838 001d FF       		.byte	-1
 7839 001e 58       		.byte	88
 7840 001f 45       		.byte	69
 7841 0020 50       		.byte	80
 7842 0021 29       		.byte	41
ARM GAS  /tmp/ccSZlabO.s 			page 223


 7843 0022 65       		.byte	101
 7844 0023 78       		.byte	120
 7845 0024 16       		.byte	22
 7846 0025 44       		.byte	68
 7847 0026 F0       		.byte	-16
 7848 0027 FF       		.byte	-1
 7849 0028 58       		.byte	88
 7850 0029 45       		.byte	69
 7851 002a 40       		.byte	64
 7852 002b 29       		.byte	41
 7853 002c 61       		.byte	97
 7854 002d 78       		.byte	120
 7855 002e 16       		.byte	22
 7856 002f 44       		.byte	68
 7857 0030 F0       		.byte	-16
 7858 0031 FF       		.byte	-1
 7859              		.section	.rodata.TP2826_MODE_DataSet,"a",%progbits
 7860              		.align	2
 7861              		.set	.LANCHOR6,. + 0
 7864              	TP2826_MODE_DataSet:
 7865 0000 0C       		.byte	12
 7866 0001 0D       		.byte	13
 7867 0002 20       		.byte	32
 7868 0003 26       		.byte	38
 7869 0004 2B       		.byte	43
 7870 0005 2D       		.byte	45
 7871 0006 2E       		.byte	46
 7872 0007 30       		.byte	48
 7873 0008 31       		.byte	49
 7874 0009 32       		.byte	50
 7875 000a 33       		.byte	51
 7876 000b 39       		.byte	57
 7877 000c 2C       		.byte	44
 7878 000d 21       		.byte	33
 7879 000e 22       		.byte	34
 7880 000f 23       		.byte	35
 7881 0010 25       		.byte	37
 7882 0011 27       		.byte	39
 7883 0012 28       		.byte	40
 7884 0013 FF       		.byte	-1
 7885 0014 03       		.byte	3
 7886 0015 50       		.byte	80
 7887 0016 30       		.byte	48
 7888 0017 05       		.byte	5
 7889 0018 60       		.byte	96
 7890 0019 30       		.byte	48
 7891 001a 70       		.byte	112
 7892 001b 48       		.byte	72
 7893 001c BB       		.byte	-69
 7894 001d 2E       		.byte	46
 7895 001e 90       		.byte	-112
 7896 001f 1C       		.byte	28
 7897 0020 0A       		.byte	10
 7898 0021 84       		.byte	-124
 7899 0022 36       		.byte	54
 7900 0023 3C       		.byte	60
 7901 0024 FF       		.byte	-1
ARM GAS  /tmp/ccSZlabO.s 			page 224


 7902 0025 2D       		.byte	45
 7903 0026 00       		.byte	0
 7904 0027 FF       		.byte	-1
 7905 0028 13       		.byte	19
 7906 0029 50       		.byte	80
 7907 002a 30       		.byte	48
 7908 002b 05       		.byte	5
 7909 002c 60       		.byte	96
 7910 002d 30       		.byte	48
 7911 002e 70       		.byte	112
 7912 002f 48       		.byte	72
 7913 0030 BB       		.byte	-69
 7914 0031 2E       		.byte	46
 7915 0032 90       		.byte	-112
 7916 0033 18       		.byte	24
 7917 0034 0A       		.byte	10
 7918 0035 84       		.byte	-124
 7919 0036 36       		.byte	54
 7920 0037 3C       		.byte	60
 7921 0038 FF       		.byte	-1
 7922 0039 2D       		.byte	45
 7923 003a 00       		.byte	0
 7924 003b FF       		.byte	-1
 7925 003c 13       		.byte	19
 7926 003d 50       		.byte	80
 7927 003e 40       		.byte	64
 7928 003f 05       		.byte	5
 7929 0040 70       		.byte	112
 7930 0041 68       		.byte	104
 7931 0042 5E       		.byte	94
 7932 0043 62       		.byte	98
 7933 0044 BB       		.byte	-69
 7934 0045 96       		.byte	-106
 7935 0046 C0       		.byte	-64
 7936 0047 04       		.byte	4
 7937 0048 2A       		.byte	42
 7938 0049 84       		.byte	-124
 7939 004a 36       		.byte	54
 7940 004b 3C       		.byte	60
 7941 004c FF       		.byte	-1
 7942 004d 2D       		.byte	45
 7943 004e 00       		.byte	0
 7944 004f FF       		.byte	-1
 7945 0050 13       		.byte	19
 7946 0051 51       		.byte	81
 7947 0052 48       		.byte	72
 7948 0053 05       		.byte	5
 7949 0054 70       		.byte	112
 7950 0055 60       		.byte	96
 7951 0056 5E       		.byte	94
 7952 0057 7A       		.byte	122
 7953 0058 4A       		.byte	74
 7954 0059 4D       		.byte	77
 7955 005a F0       		.byte	-16
 7956 005b 04       		.byte	4
 7957 005c 2A       		.byte	42
 7958 005d 84       		.byte	-124
ARM GAS  /tmp/ccSZlabO.s 			page 225


 7959 005e 37       		.byte	55
 7960 005f 3F       		.byte	63
 7961 0060 FF       		.byte	-1
 7962 0061 2D       		.byte	45
 7963 0062 00       		.byte	0
 7964 0063 FF       		.byte	-1
 7965              		.section	.rodata.TP2834_DataSet,"a",%progbits
 7966              		.align	2
 7967              		.set	.LANCHOR17,. + 0
 7970              	TP2834_DataSet:
 7971 0000 40       		.byte	64
 7972 0001 04       		.byte	4
 7973 0002 07       		.byte	7
 7974 0003 C0       		.byte	-64
 7975 0004 0B       		.byte	11
 7976 0005 C0       		.byte	-64
 7977 0006 3A       		.byte	58
 7978 0007 70       		.byte	112
 7979 0008 26       		.byte	38
 7980 0009 01       		.byte	1
 7981 000a 4D       		.byte	77
 7982 000b 0F       		.byte	15
 7983 000c 4E       		.byte	78
 7984 000d 0F       		.byte	15
 7985 000e FF       		.byte	-1
 7986 000f FF       		.byte	-1
 7987              		.section	.data.PreCOCSelectModeType,"aw",%progbits
 7988              		.align	2
 7991              	PreCOCSelectModeType:
 7992 0000 05       		.byte	5
 7993 0001 05       		.byte	5
 7994 0002 05       		.byte	5
 7995 0003 05       		.byte	5
 7996              		.section	.rodata.PTZ_reg.8661,"a",%progbits
 7997              		.align	2
 7998              		.set	.LANCHOR26,. + 0
 8001              	PTZ_reg.8661:
 8002 0000 C2       		.byte	-62
 8003 0001 C3       		.byte	-61
 8004 0002 C4       		.byte	-60
 8005 0003 C5       		.byte	-59
 8006 0004 C6       		.byte	-58
 8007 0005 C7       		.byte	-57
 8008 0006 C8       		.byte	-56
 8009 0007 DA       		.byte	-38
 8010 0008 DB       		.byte	-37
 8011 0009 DC       		.byte	-36
 8012 000a DD       		.byte	-35
 8013 000b DE       		.byte	-34
 8014 000c DF       		.byte	-33
 8015 000d E0       		.byte	-32
 8016 000e C2       		.byte	-62
 8017 000f C3       		.byte	-61
 8018 0010 C4       		.byte	-60
 8019 0011 C5       		.byte	-59
 8020 0012 C6       		.byte	-58
 8021 0013 C7       		.byte	-57
ARM GAS  /tmp/ccSZlabO.s 			page 226


 8022 0014 C8       		.byte	-56
 8023 0015 DA       		.byte	-38
 8024 0016 DB       		.byte	-37
 8025 0017 DC       		.byte	-36
 8026 0018 DD       		.byte	-35
 8027 0019 DE       		.byte	-34
 8028 001a DF       		.byte	-33
 8029 001b E0       		.byte	-32
 8030              		.section	.rodata.TP2853C_MODE_DataSet,"a",%progbits
 8031              		.align	2
 8032              		.set	.LANCHOR3,. + 0
 8035              	TP2853C_MODE_DataSet:
 8036 0000 0C       		.byte	12
 8037 0001 0D       		.byte	13
 8038 0002 20       		.byte	32
 8039 0003 26       		.byte	38
 8040 0004 2B       		.byte	43
 8041 0005 2D       		.byte	45
 8042 0006 2E       		.byte	46
 8043 0007 30       		.byte	48
 8044 0008 31       		.byte	49
 8045 0009 32       		.byte	50
 8046 000a 33       		.byte	51
 8047 000b 39       		.byte	57
 8048 000c 2C       		.byte	44
 8049 000d 21       		.byte	33
 8050 000e 25       		.byte	37
 8051 000f 27       		.byte	39
 8052 0010 28       		.byte	40
 8053 0011 FF       		.byte	-1
 8054 0012 03       		.byte	3
 8055 0013 50       		.byte	80
 8056 0014 30       		.byte	48
 8057 0015 05       		.byte	5
 8058 0016 60       		.byte	96
 8059 0017 30       		.byte	48
 8060 0018 70       		.byte	112
 8061 0019 48       		.byte	72
 8062 001a BB       		.byte	-69
 8063 001b 2E       		.byte	46
 8064 001c 90       		.byte	-112
 8065 001d 0C       		.byte	12
 8066 001e 0A       		.byte	10
 8067 001f 84       		.byte	-124
 8068 0020 F0       		.byte	-16
 8069 0021 2D       		.byte	45
 8070 0022 00       		.byte	0
 8071 0023 FF       		.byte	-1
 8072 0024 13       		.byte	19
 8073 0025 50       		.byte	80
 8074 0026 30       		.byte	48
 8075 0027 05       		.byte	5
 8076 0028 60       		.byte	96
 8077 0029 30       		.byte	48
 8078 002a 70       		.byte	112
 8079 002b 48       		.byte	72
 8080 002c BB       		.byte	-69
ARM GAS  /tmp/ccSZlabO.s 			page 227


 8081 002d 2E       		.byte	46
 8082 002e 90       		.byte	-112
 8083 002f 08       		.byte	8
 8084 0030 0A       		.byte	10
 8085 0031 84       		.byte	-124
 8086 0032 F0       		.byte	-16
 8087 0033 2D       		.byte	45
 8088 0034 00       		.byte	0
 8089 0035 FF       		.byte	-1
 8090 0036 13       		.byte	19
 8091 0037 50       		.byte	80
 8092 0038 40       		.byte	64
 8093 0039 05       		.byte	5
 8094 003a 70       		.byte	112
 8095 003b 68       		.byte	104
 8096 003c 5E       		.byte	94
 8097 003d 62       		.byte	98
 8098 003e BB       		.byte	-69
 8099 003f 96       		.byte	-106
 8100 0040 C0       		.byte	-64
 8101 0041 04       		.byte	4
 8102 0042 2A       		.byte	42
 8103 0043 84       		.byte	-124
 8104 0044 F0       		.byte	-16
 8105 0045 2D       		.byte	45
 8106 0046 00       		.byte	0
 8107 0047 FF       		.byte	-1
 8108 0048 13       		.byte	19
 8109 0049 51       		.byte	81
 8110 004a 48       		.byte	72
 8111 004b 05       		.byte	5
 8112 004c 70       		.byte	112
 8113 004d 60       		.byte	96
 8114 004e 5E       		.byte	94
 8115 004f 7A       		.byte	122
 8116 0050 4A       		.byte	74
 8117 0051 4D       		.byte	77
 8118 0052 F0       		.byte	-16
 8119 0053 04       		.byte	4
 8120 0054 2A       		.byte	42
 8121 0055 84       		.byte	-124
 8122 0056 F0       		.byte	-16
 8123 0057 2D       		.byte	45
 8124 0058 00       		.byte	0
 8125 0059 FF       		.byte	-1
 8126              		.section	.rodata.TP2826_HDC_DataSet,"a",%progbits
 8127              		.align	2
 8128              		.set	.LANCHOR13,. + 0
 8131              	TP2826_HDC_DataSet:
 8132 0000 0C       		.byte	12
 8133 0001 15       		.byte	21
 8134 0002 16       		.byte	22
 8135 0003 17       		.byte	23
 8136 0004 18       		.byte	24
 8137 0005 19       		.byte	25
 8138 0006 1A       		.byte	26
 8139 0007 1C       		.byte	28
ARM GAS  /tmp/ccSZlabO.s 			page 228


 8140 0008 1D       		.byte	29
 8141 0009 20       		.byte	32
 8142 000a 2B       		.byte	43
 8143 000b 2D       		.byte	45
 8144 000c 2E       		.byte	46
 8145 000d 30       		.byte	48
 8146 000e 31       		.byte	49
 8147 000f 32       		.byte	50
 8148 0010 33       		.byte	51
 8149 0011 27       		.byte	39
 8150 0012 28       		.byte	40
 8151 0013 FF       		.byte	-1
 8152 0014 03       		.byte	3
 8153 0015 13       		.byte	19
 8154 0016 08       		.byte	8
 8155 0017 00       		.byte	0
 8156 0018 19       		.byte	25
 8157 0019 D0       		.byte	-48
 8158 001a 25       		.byte	37
 8159 001b 06       		.byte	6
 8160 001c 72       		.byte	114
 8161 001d 30       		.byte	48
 8162 001e 60       		.byte	96
 8163 001f 37       		.byte	55
 8164 0020 40       		.byte	64
 8165 0021 48       		.byte	72
 8166 0022 67       		.byte	103
 8167 0023 6F       		.byte	111
 8168 0024 30       		.byte	48
 8169 0025 5A       		.byte	90
 8170 0026 04       		.byte	4
 8171 0027 FF       		.byte	-1
 8172 0028 03       		.byte	3
 8173 0029 13       		.byte	19
 8174 002a 0A       		.byte	10
 8175 002b 00       		.byte	0
 8176 002c 19       		.byte	25
 8177 002d D0       		.byte	-48
 8178 002e 25       		.byte	37
 8179 002f 06       		.byte	6
 8180 0030 7A       		.byte	122
 8181 0031 3A       		.byte	58
 8182 0032 60       		.byte	96
 8183 0033 42       		.byte	66
 8184 0034 40       		.byte	64
 8185 0035 48       		.byte	72
 8186 0036 67       		.byte	103
 8187 0037 6F       		.byte	111
 8188 0038 33       		.byte	51
 8189 0039 5A       		.byte	90
 8190 003a 04       		.byte	4
 8191 003b FF       		.byte	-1
 8192 003c 03       		.byte	3
 8193 003d 13       		.byte	19
 8194 003e 60       		.byte	96
 8195 003f 80       		.byte	-128
 8196 0040 29       		.byte	41
ARM GAS  /tmp/ccSZlabO.s 			page 229


 8197 0041 38       		.byte	56
 8198 0042 47       		.byte	71
 8199 0043 09       		.byte	9
 8200 0044 60       		.byte	96
 8201 0045 3C       		.byte	60
 8202 0046 60       		.byte	96
 8203 0047 47       		.byte	71
 8204 0048 40       		.byte	64
 8205 0049 41       		.byte	65
 8206 004a 82       		.byte	-126
 8207 004b 27       		.byte	39
 8208 004c A4       		.byte	-92
 8209 004d 5A       		.byte	90
 8210 004e 04       		.byte	4
 8211 004f FF       		.byte	-1
 8212 0050 03       		.byte	3
 8213 0051 13       		.byte	19
 8214 0052 60       		.byte	96
 8215 0053 80       		.byte	-128
 8216 0054 29       		.byte	41
 8217 0055 38       		.byte	56
 8218 0056 47       		.byte	71
 8219 0057 09       		.byte	9
 8220 0058 60       		.byte	96
 8221 0059 50       		.byte	80
 8222 005a 60       		.byte	96
 8223 005b 54       		.byte	84
 8224 005c 40       		.byte	64
 8225 005d 41       		.byte	65
 8226 005e 82       		.byte	-126
 8227 005f 27       		.byte	39
 8228 0060 A2       		.byte	-94
 8229 0061 5A       		.byte	90
 8230 0062 04       		.byte	4
 8231 0063 FF       		.byte	-1
 8232              		.section	.bss.QuadBoxMode,"aw",%nobits
 8235              	QuadBoxMode:
 8236 0000 00       		.space	1
 8237              		.section	.bss.Flisheye_CAM,"aw",%nobits
 8238              		.align	2
 8241              	Flisheye_CAM:
 8242 0000 00000000 		.space	4
 8243              		.section	.rodata.PTZ_reg.8683,"a",%progbits
 8244              		.align	2
 8245              		.set	.LANCHOR29,. + 0
 8248              	PTZ_reg.8683:
 8249 0000 6F       		.byte	111
 8250 0001 70       		.byte	112
 8251 0002 71       		.byte	113
 8252 0003 C0       		.byte	-64
 8253 0004 C1       		.byte	-63
 8254 0005 C2       		.byte	-62
 8255 0006 C3       		.byte	-61
 8256 0007 C4       		.byte	-60
 8257 0008 C5       		.byte	-59
 8258 0009 C6       		.byte	-58
 8259 000a C7       		.byte	-57
ARM GAS  /tmp/ccSZlabO.s 			page 230


 8260 000b C8       		.byte	-56
 8261              		.section	.rodata.SYS_AND,"a",%progbits
 8262              		.align	2
 8263              		.set	.LANCHOR0,. + 0
 8266              	SYS_AND:
 8267 0000 FE       		.byte	-2
 8268 0001 FD       		.byte	-3
 8269 0002 FB       		.byte	-5
 8270 0003 F7       		.byte	-9
 8271 0004 F0       		.byte	-16
 8272              		.section	.data.COCSelectModeType,"aw",%progbits
 8273              		.align	2
 8276              	COCSelectModeType:
 8277 0000 05       		.byte	5
 8278 0001 05       		.byte	5
 8279 0002 05       		.byte	5
 8280 0003 05       		.byte	5
 8281              		.section	.rodata.TP2824C_AHD_FHD_PTZ_DataSet,"a",%progbits
 8282              		.align	2
 8283              		.set	.LANCHOR36,. + 0
 8286              	TP2824C_AHD_FHD_PTZ_DataSet:
 8287 0000 C0       		.byte	-64
 8288 0001 00       		.byte	0
 8289 0002 C2       		.byte	-62
 8290 0003 0E       		.byte	14
 8291 0004 C3       		.byte	-61
 8292 0005 0F       		.byte	15
 8293 0006 C1       		.byte	-63
 8294 0007 00       		.byte	0
 8295 0008 C4       		.byte	-60
 8296 0009 10       		.byte	16
 8297 000a C5       		.byte	-59
 8298 000b 11       		.byte	17
 8299 000c C6       		.byte	-58
 8300 000d 2C       		.byte	44
 8301 000e C7       		.byte	-57
 8302 000f 15       		.byte	21
 8303 0010 C8       		.byte	-56
 8304 0011 97       		.byte	-105
 8305 0012 6F       		.byte	111
 8306 0013 44       		.byte	68
 8307 0014 70       		.byte	112
 8308 0015 00       		.byte	0
 8309 0016 55       		.byte	85
 8310 0017 00       		.byte	0
 8311 0018 56       		.byte	86
 8312 0019 00       		.byte	0
 8313 001a 57       		.byte	87
 8314 001b 00       		.byte	0
 8315 001c 58       		.byte	88
 8316 001d 00       		.byte	0
 8317 001e 59       		.byte	89
 8318 001f 00       		.byte	0
 8319 0020 5A       		.byte	90
 8320 0021 00       		.byte	0
 8321 0022 5B       		.byte	91
 8322 0023 00       		.byte	0
ARM GAS  /tmp/ccSZlabO.s 			page 231


 8323 0024 5C       		.byte	92
 8324 0025 00       		.byte	0
 8325 0026 5D       		.byte	93
 8326 0027 00       		.byte	0
 8327 0028 5E       		.byte	94
 8328 0029 00       		.byte	0
 8329 002a 5F       		.byte	95
 8330 002b 00       		.byte	0
 8331 002c 60       		.byte	96
 8332 002d 00       		.byte	0
 8333 002e 62       		.byte	98
 8334 002f 00       		.byte	0
 8335 0030 63       		.byte	99
 8336 0031 00       		.byte	0
 8337 0032 64       		.byte	100
 8338 0033 00       		.byte	0
 8339 0034 65       		.byte	101
 8340 0035 00       		.byte	0
 8341 0036 66       		.byte	102
 8342 0037 00       		.byte	0
 8343 0038 68       		.byte	104
 8344 0039 00       		.byte	0
 8345 003a 69       		.byte	105
 8346 003b 00       		.byte	0
 8347 003c 6A       		.byte	106
 8348 003d 00       		.byte	0
 8349 003e 6B       		.byte	107
 8350 003f 00       		.byte	0
 8351 0040 6C       		.byte	108
 8352 0041 00       		.byte	0
 8353 0042 CB       		.byte	-53
 8354 0043 07       		.byte	7
 8355 0044 CC       		.byte	-52
 8356 0045 08       		.byte	8
 8357 0046 CD       		.byte	-51
 8358 0047 00       		.byte	0
 8359 0048 CE       		.byte	-50
 8360 0049 00       		.byte	0
 8361 004a CF       		.byte	-49
 8362 004b 04       		.byte	4
 8363 004c D0       		.byte	-48
 8364 004d 00       		.byte	0
 8365 004e D1       		.byte	-47
 8366 004f 00       		.byte	0
 8367 0050 D2       		.byte	-46
 8368 0051 60       		.byte	96
 8369 0052 D3       		.byte	-45
 8370 0053 10       		.byte	16
 8371 0054 D4       		.byte	-44
 8372 0055 06       		.byte	6
 8373 0056 D5       		.byte	-43
 8374 0057 BE       		.byte	-66
 8375 0058 D6       		.byte	-42
 8376 0059 39       		.byte	57
 8377 005a D7       		.byte	-41
 8378 005b 27       		.byte	39
 8379 005c A7       		.byte	-89
ARM GAS  /tmp/ccSZlabO.s 			page 232


 8380 005d 24       		.byte	36
 8381 005e FF       		.byte	-1
 8382 005f FF       		.byte	-1
 8383              		.section	.rodata.TP2824C_TVI_FHD_PTZ_DataSet,"a",%progbits
 8384              		.align	2
 8385              		.set	.LANCHOR32,. + 0
 8388              	TP2824C_TVI_FHD_PTZ_DataSet:
 8389 0000 C0       		.byte	-64
 8390 0001 00       		.byte	0
 8391 0002 C2       		.byte	-62
 8392 0003 0B       		.byte	11
 8393 0004 C3       		.byte	-61
 8394 0005 0C       		.byte	12
 8395 0006 C1       		.byte	-63
 8396 0007 00       		.byte	0
 8397 0008 C4       		.byte	-60
 8398 0009 00       		.byte	0
 8399 000a C5       		.byte	-59
 8400 000b 00       		.byte	0
 8401 000c C6       		.byte	-58
 8402 000d 33       		.byte	51
 8403 000e C7       		.byte	-57
 8404 000f 78       		.byte	120
 8405 0010 C8       		.byte	-56
 8406 0011 21       		.byte	33
 8407 0012 6F       		.byte	111
 8408 0013 40       		.byte	64
 8409 0014 70       		.byte	112
 8410 0015 00       		.byte	0
 8411 0016 55       		.byte	85
 8412 0017 00       		.byte	0
 8413 0018 56       		.byte	86
 8414 0019 02       		.byte	2
 8415 001a 57       		.byte	87
 8416 001b B5       		.byte	-75
 8417 001c 58       		.byte	88
 8418 001d 01       		.byte	1
 8419 001e 59       		.byte	89
 8420 001f 17       		.byte	23
 8421 0020 5A       		.byte	90
 8422 0021 01       		.byte	1
 8423 0022 5B       		.byte	91
 8424 0023 00       		.byte	0
 8425 0024 5C       		.byte	92
 8426 0025 02       		.byte	2
 8427 0026 5D       		.byte	93
 8428 0027 00       		.byte	0
 8429 0028 5E       		.byte	94
 8430 0029 00       		.byte	0
 8431 002a 5F       		.byte	95
 8432 002b 00       		.byte	0
 8433 002c 60       		.byte	96
 8434 002d CE       		.byte	-50
 8435 002e CB       		.byte	-53
 8436 002f 07       		.byte	7
 8437 0030 CC       		.byte	-52
 8438 0031 08       		.byte	8
ARM GAS  /tmp/ccSZlabO.s 			page 233


 8439 0032 CD       		.byte	-51
 8440 0033 00       		.byte	0
 8441 0034 CE       		.byte	-50
 8442 0035 00       		.byte	0
 8443 0036 CF       		.byte	-49
 8444 0037 04       		.byte	4
 8445 0038 D0       		.byte	-48
 8446 0039 00       		.byte	0
 8447 003a D1       		.byte	-47
 8448 003b 00       		.byte	0
 8449 003c D2       		.byte	-46
 8450 003d 60       		.byte	96
 8451 003e D3       		.byte	-45
 8452 003f 10       		.byte	16
 8453 0040 D4       		.byte	-44
 8454 0041 06       		.byte	6
 8455 0042 D5       		.byte	-43
 8456 0043 BE       		.byte	-66
 8457 0044 D6       		.byte	-42
 8458 0045 39       		.byte	57
 8459 0046 D7       		.byte	-41
 8460 0047 21       		.byte	33
 8461 0048 A7       		.byte	-89
 8462 0049 00       		.byte	0
 8463 004a FF       		.byte	-1
 8464 004b FF       		.byte	-1
 8465              		.section	.data.newInRes,"aw",%progbits
 8466              		.align	2
 8467              		.set	.LANCHOR23,. + 0
 8470              	newInRes:
 8471 0000 07       		.byte	7
 8472 0001 07       		.byte	7
 8473 0002 07       		.byte	7
 8474 0003 07       		.byte	7
 8475              		.section	.bss.Flisheye_VLOSS_Count,"aw",%nobits
 8476              		.align	2
 8479              	Flisheye_VLOSS_Count:
 8480 0000 00000000 		.space	16
 8480      00000000 
 8480      00000000 
 8480      00000000 
 8481              		.section	.rodata.TP2826_HDA_DataSet,"a",%progbits
 8482              		.align	2
 8483              		.set	.LANCHOR10,. + 0
 8486              	TP2826_HDA_DataSet:
 8487 0000 0C       		.byte	12
 8488 0001 20       		.byte	32
 8489 0002 2B       		.byte	43
 8490 0003 2D       		.byte	45
 8491 0004 2E       		.byte	46
 8492 0005 30       		.byte	48
 8493 0006 31       		.byte	49
 8494 0007 32       		.byte	50
 8495 0008 33       		.byte	51
 8496 0009 21       		.byte	33
 8497 000a 25       		.byte	37
 8498 000b FF       		.byte	-1
ARM GAS  /tmp/ccSZlabO.s 			page 234


 8499 000c 03       		.byte	3
 8500 000d 40       		.byte	64
 8501 000e 60       		.byte	96
 8502 000f 48       		.byte	72
 8503 0010 40       		.byte	64
 8504 0011 27       		.byte	39
 8505 0012 72       		.byte	114
 8506 0013 80       		.byte	-128
 8507 0014 77       		.byte	119
 8508 0015 46       		.byte	70
 8509 0016 FE       		.byte	-2
 8510 0017 FF       		.byte	-1
 8511 0018 03       		.byte	3
 8512 0019 40       		.byte	64
 8513 001a 60       		.byte	96
 8514 001b 48       		.byte	72
 8515 001c 40       		.byte	64
 8516 001d 27       		.byte	39
 8517 001e 88       		.byte	-120
 8518 001f 04       		.byte	4
 8519 0020 23       		.byte	35
 8520 0021 46       		.byte	70
 8521 0022 FE       		.byte	-2
 8522 0023 FF       		.byte	-1
 8523 0024 03       		.byte	3
 8524 0025 38       		.byte	56
 8525 0026 60       		.byte	96
 8526 0027 44       		.byte	68
 8527 0028 40       		.byte	64
 8528 0029 29       		.byte	41
 8529 002a 65       		.byte	101
 8530 002b 78       		.byte	120
 8531 002c 16       		.byte	22
 8532 002d 46       		.byte	70
 8533 002e FE       		.byte	-2
 8534 002f FF       		.byte	-1
 8535 0030 03       		.byte	3
 8536 0031 3C       		.byte	60
 8537 0032 60       		.byte	96
 8538 0033 44       		.byte	68
 8539 0034 40       		.byte	64
 8540 0035 29       		.byte	41
 8541 0036 61       		.byte	97
 8542 0037 78       		.byte	120
 8543 0038 16       		.byte	22
 8544 0039 46       		.byte	70
 8545 003a FE       		.byte	-2
 8546 003b FF       		.byte	-1
 8547              		.section	.rodata.TP2824C_HDC_DataSet,"a",%progbits
 8548              		.align	2
 8549              		.set	.LANCHOR14,. + 0
 8552              	TP2824C_HDC_DataSet:
 8553 0000 0C       		.byte	12
 8554 0001 15       		.byte	21
 8555 0002 16       		.byte	22
 8556 0003 17       		.byte	23
 8557 0004 18       		.byte	24
ARM GAS  /tmp/ccSZlabO.s 			page 235


 8558 0005 19       		.byte	25
 8559 0006 1A       		.byte	26
 8560 0007 1C       		.byte	28
 8561 0008 1D       		.byte	29
 8562 0009 20       		.byte	32
 8563 000a 2B       		.byte	43
 8564 000b 2D       		.byte	45
 8565 000c 2E       		.byte	46
 8566 000d 30       		.byte	48
 8567 000e 31       		.byte	49
 8568 000f 32       		.byte	50
 8569 0010 33       		.byte	51
 8570 0011 27       		.byte	39
 8571 0012 28       		.byte	40
 8572 0013 FF       		.byte	-1
 8573 0014 03       		.byte	3
 8574 0015 13       		.byte	19
 8575 0016 08       		.byte	8
 8576 0017 00       		.byte	0
 8577 0018 19       		.byte	25
 8578 0019 D0       		.byte	-48
 8579 001a 25       		.byte	37
 8580 001b 06       		.byte	6
 8581 001c 72       		.byte	114
 8582 001d 30       		.byte	48
 8583 001e 60       		.byte	96
 8584 001f 37       		.byte	55
 8585 0020 40       		.byte	64
 8586 0021 48       		.byte	72
 8587 0022 67       		.byte	103
 8588 0023 6F       		.byte	111
 8589 0024 30       		.byte	48
 8590 0025 5A       		.byte	90
 8591 0026 04       		.byte	4
 8592 0027 FF       		.byte	-1
 8593 0028 03       		.byte	3
 8594 0029 13       		.byte	19
 8595 002a 0A       		.byte	10
 8596 002b 00       		.byte	0
 8597 002c 19       		.byte	25
 8598 002d D0       		.byte	-48
 8599 002e 25       		.byte	37
 8600 002f 06       		.byte	6
 8601 0030 7A       		.byte	122
 8602 0031 3A       		.byte	58
 8603 0032 60       		.byte	96
 8604 0033 42       		.byte	66
 8605 0034 40       		.byte	64
 8606 0035 48       		.byte	72
 8607 0036 67       		.byte	103
 8608 0037 6F       		.byte	111
 8609 0038 33       		.byte	51
 8610 0039 5A       		.byte	90
 8611 003a 04       		.byte	4
 8612 003b FF       		.byte	-1
 8613 003c 03       		.byte	3
 8614 003d 13       		.byte	19
ARM GAS  /tmp/ccSZlabO.s 			page 236


 8615 003e 60       		.byte	96
 8616 003f 80       		.byte	-128
 8617 0040 29       		.byte	41
 8618 0041 38       		.byte	56
 8619 0042 47       		.byte	71
 8620 0043 09       		.byte	9
 8621 0044 60       		.byte	96
 8622 0045 3C       		.byte	60
 8623 0046 60       		.byte	96
 8624 0047 47       		.byte	71
 8625 0048 40       		.byte	64
 8626 0049 41       		.byte	65
 8627 004a 82       		.byte	-126
 8628 004b 27       		.byte	39
 8629 004c A4       		.byte	-92
 8630 004d 5A       		.byte	90
 8631 004e 04       		.byte	4
 8632 004f FF       		.byte	-1
 8633 0050 03       		.byte	3
 8634 0051 13       		.byte	19
 8635 0052 60       		.byte	96
 8636 0053 80       		.byte	-128
 8637 0054 29       		.byte	41
 8638 0055 38       		.byte	56
 8639 0056 47       		.byte	71
 8640 0057 09       		.byte	9
 8641 0058 60       		.byte	96
 8642 0059 50       		.byte	80
 8643 005a 60       		.byte	96
 8644 005b 54       		.byte	84
 8645 005c 40       		.byte	64
 8646 005d 41       		.byte	65
 8647 005e 82       		.byte	-126
 8648 005f 27       		.byte	39
 8649 0060 A2       		.byte	-94
 8650 0061 5A       		.byte	90
 8651 0062 04       		.byte	4
 8652 0063 FF       		.byte	-1
 8653              		.section	.rodata.PTZ_dat.8662,"a",%progbits
 8654              		.align	2
 8655              		.set	.LANCHOR27,. + 0
 8658              	PTZ_dat.8662:
 8659 0000 0B       		.byte	11
 8660 0001 0C       		.byte	12
 8661 0002 0D       		.byte	13
 8662 0003 0E       		.byte	14
 8663 0004 19       		.byte	25
 8664 0005 78       		.byte	120
 8665 0006 21       		.byte	33
 8666 0007 0B       		.byte	11
 8667 0008 0C       		.byte	12
 8668 0009 0D       		.byte	13
 8669 000a 0E       		.byte	14
 8670 000b 33       		.byte	51
 8671 000c F0       		.byte	-16
 8672 000d 21       		.byte	33
 8673 000e 0E       		.byte	14
ARM GAS  /tmp/ccSZlabO.s 			page 237


 8674 000f 0F       		.byte	15
 8675 0010 10       		.byte	16
 8676 0011 11       		.byte	17
 8677 0012 66       		.byte	102
 8678 0013 F0       		.byte	-16
 8679 0014 17       		.byte	23
 8680 0015 0E       		.byte	14
 8681 0016 0F       		.byte	15
 8682 0017 10       		.byte	16
 8683 0018 11       		.byte	17
 8684 0019 26       		.byte	38
 8685 001a F0       		.byte	-16
 8686 001b 57       		.byte	87
 8687 001c 0E       		.byte	14
 8688 001d 0F       		.byte	15
 8689 001e 00       		.byte	0
 8690 001f 00       		.byte	0
 8691 0020 26       		.byte	38
 8692 0021 E0       		.byte	-32
 8693 0022 EF       		.byte	-17
 8694 0023 0F       		.byte	15
 8695 0024 10       		.byte	16
 8696 0025 00       		.byte	0
 8697 0026 00       		.byte	0
 8698 0027 48       		.byte	72
 8699 0028 F0       		.byte	-16
 8700 0029 6F       		.byte	111
 8701 002a 10       		.byte	16
 8702 002b 11       		.byte	17
 8703 002c 12       		.byte	18
 8704 002d 13       		.byte	19
 8705 002e 15       		.byte	21
 8706 002f B8       		.byte	-72
 8707 0030 A2       		.byte	-94
 8708 0031 10       		.byte	16
 8709 0032 11       		.byte	17
 8710 0033 12       		.byte	18
 8711 0034 13       		.byte	19
 8712 0035 95       		.byte	-107
 8713 0036 B8       		.byte	-72
 8714 0037 22       		.byte	34
 8715              		.section	.rodata.TP2824C_DataSet,"a",%progbits
 8716              		.align	2
 8717              		.set	.LANCHOR15,. + 0
 8720              	TP2824C_DataSet:
 8721 0000 40       		.byte	64
 8722 0001 04       		.byte	4
 8723 0002 07       		.byte	7
 8724 0003 C0       		.byte	-64
 8725 0004 0B       		.byte	11
 8726 0005 C0       		.byte	-64
 8727 0006 21       		.byte	33
 8728 0007 84       		.byte	-124
 8729 0008 38       		.byte	56
 8730 0009 00       		.byte	0
 8731 000a 3A       		.byte	58
 8732 000b 22       		.byte	34
ARM GAS  /tmp/ccSZlabO.s 			page 238


 8733 000c 3B       		.byte	59
 8734 000d 05       		.byte	5
 8735 000e 26       		.byte	38
 8736 000f 04       		.byte	4
 8737 0010 4D       		.byte	77
 8738 0011 0F       		.byte	15
 8739 0012 4E       		.byte	78
 8740 0013 0F       		.byte	15
 8741 0014 F1       		.byte	-15
 8742 0015 00       		.byte	0
 8743 0016 FF       		.byte	-1
 8744 0017 FF       		.byte	-1
 8745              		.section	.rodata.REG_F6,"a",%progbits
 8746              		.align	2
 8747              		.set	.LANCHOR33,. + 0
 8750              	REG_F6:
 8751 0000 00       		.byte	0
 8752 0001 11       		.byte	17
 8753 0002 22       		.byte	34
 8754 0003 33       		.byte	51
 8755              		.section	.rodata.REG_F7,"a",%progbits
 8756              		.align	2
 8757              		.set	.LANCHOR34,. + 0
 8760              	REG_F7:
 8761 0000 44       		.byte	68
 8762 0001 55       		.byte	85
 8763 0002 66       		.byte	102
 8764 0003 77       		.byte	119
 8765              		.section	.rodata.TP2822_DataSet,"a",%progbits
 8766              		.align	2
 8769              	TP2822_DataSet:
 8770 0000 40       		.byte	64
 8771 0001 04       		.byte	4
 8772 0002 39       		.byte	57
 8773 0003 00       		.byte	0
 8774 0004 3D       		.byte	61
 8775 0005 08       		.byte	8
 8776 0006 3A       		.byte	58
 8777 0007 01       		.byte	1
 8778 0008 30       		.byte	48
 8779 0009 48       		.byte	72
 8780 000a 31       		.byte	49
 8781 000b BB       		.byte	-69
 8782 000c 32       		.byte	50
 8783 000d 2E       		.byte	46
 8784 000e 33       		.byte	51
 8785 000f 90       		.byte	-112
 8786 0010 4D       		.byte	77
 8787 0011 03       		.byte	3
 8788 0012 4E       		.byte	78
 8789 0013 33       		.byte	51
 8790 0014 3D       		.byte	61
 8791 0015 00       		.byte	0
 8792 0016 FF       		.byte	-1
 8793 0017 FF       		.byte	-1
 8794              		.section	.rodata.PTZ_dat.8684,"a",%progbits
 8795              		.align	2
ARM GAS  /tmp/ccSZlabO.s 			page 239


 8796              		.set	.LANCHOR30,. + 0
 8799              	PTZ_dat.8684:
 8800 0000 42       		.byte	66
 8801 0001 40       		.byte	64
 8802 0002 00       		.byte	0
 8803 0003 00       		.byte	0
 8804 0004 00       		.byte	0
 8805 0005 0B       		.byte	11
 8806 0006 0C       		.byte	12
 8807 0007 0D       		.byte	13
 8808 0008 0E       		.byte	14
 8809 0009 19       		.byte	25
 8810 000a 78       		.byte	120
 8811 000b 21       		.byte	33
 8812 000c 42       		.byte	66
 8813 000d 40       		.byte	64
 8814 000e 00       		.byte	0
 8815 000f 00       		.byte	0
 8816 0010 00       		.byte	0
 8817 0011 0B       		.byte	11
 8818 0012 0C       		.byte	12
 8819 0013 0D       		.byte	13
 8820 0014 0E       		.byte	14
 8821 0015 33       		.byte	51
 8822 0016 F0       		.byte	-16
 8823 0017 21       		.byte	33
 8824 0018 42       		.byte	66
 8825 0019 40       		.byte	64
 8826 001a 00       		.byte	0
 8827 001b 00       		.byte	0
 8828 001c 00       		.byte	0
 8829 001d 0E       		.byte	14
 8830 001e 0F       		.byte	15
 8831 001f 10       		.byte	16
 8832 0020 11       		.byte	17
 8833 0021 26       		.byte	38
 8834 0022 F0       		.byte	-16
 8835 0023 57       		.byte	87
 8836 0024 42       		.byte	66
 8837 0025 40       		.byte	64
 8838 0026 00       		.byte	0
 8839 0027 00       		.byte	0
 8840 0028 00       		.byte	0
 8841 0029 0E       		.byte	14
 8842 002a 0F       		.byte	15
 8843 002b 00       		.byte	0
 8844 002c 00       		.byte	0
 8845 002d 26       		.byte	38
 8846 002e E0       		.byte	-32
 8847 002f EF       		.byte	-17
 8848 0030 42       		.byte	66
 8849 0031 40       		.byte	64
 8850 0032 00       		.byte	0
 8851 0033 00       		.byte	0
 8852 0034 00       		.byte	0
 8853 0035 0F       		.byte	15
 8854 0036 10       		.byte	16
ARM GAS  /tmp/ccSZlabO.s 			page 240


 8855 0037 00       		.byte	0
 8856 0038 00       		.byte	0
 8857 0039 4D       		.byte	77
 8858 003a F0       		.byte	-16
 8859 003b 6F       		.byte	111
 8860 003c 42       		.byte	66
 8861 003d 40       		.byte	64
 8862 003e 00       		.byte	0
 8863 003f 00       		.byte	0
 8864 0040 00       		.byte	0
 8865 0041 10       		.byte	16
 8866 0042 11       		.byte	17
 8867 0043 12       		.byte	18
 8868 0044 15       		.byte	21
 8869 0045 15       		.byte	21
 8870 0046 B8       		.byte	-72
 8871 0047 A2       		.byte	-94
 8872              		.section	.rodata.REG_FA,"a",%progbits
 8873              		.align	2
 8874              		.set	.LANCHOR35,. + 0
 8877              	REG_FA:
 8878 0000 BB       		.byte	-69
 8879 0001 CC       		.byte	-52
 8880 0002 DD       		.byte	-35
 8881 0003 EE       		.byte	-18
 8882              		.section	.rodata.TP2823_MODE_DataSet,"a",%progbits
 8883              		.align	2
 8886              	TP2823_MODE_DataSet:
 8887 0000 0C       		.byte	12
 8888 0001 0D       		.byte	13
 8889 0002 20       		.byte	32
 8890 0003 26       		.byte	38
 8891 0004 2B       		.byte	43
 8892 0005 2D       		.byte	45
 8893 0006 2E       		.byte	46
 8894 0007 30       		.byte	48
 8895 0008 31       		.byte	49
 8896 0009 32       		.byte	50
 8897 000a 33       		.byte	51
 8898 000b 39       		.byte	57
 8899 000c FF       		.byte	-1
 8900 000d 43       		.byte	67
 8901 000e 10       		.byte	16
 8902 000f 60       		.byte	96
 8903 0010 02       		.byte	2
 8904 0011 58       		.byte	88
 8905 0012 30       		.byte	48
 8906 0013 70       		.byte	112
 8907 0014 48       		.byte	72
 8908 0015 BB       		.byte	-69
 8909 0016 2E       		.byte	46
 8910 0017 90       		.byte	-112
 8911 0018 30       		.byte	48
 8912 0019 FF       		.byte	-1
 8913 001a 53       		.byte	83
 8914 001b 10       		.byte	16
 8915 001c 60       		.byte	96
ARM GAS  /tmp/ccSZlabO.s 			page 241


 8916 001d 02       		.byte	2
 8917 001e 58       		.byte	88
 8918 001f 30       		.byte	48
 8919 0020 70       		.byte	112
 8920 0021 48       		.byte	72
 8921 0022 BB       		.byte	-69
 8922 0023 2E       		.byte	46
 8923 0024 90       		.byte	-112
 8924 0025 20       		.byte	32
 8925 0026 FF       		.byte	-1
 8926 0027 53       		.byte	83
 8927 0028 10       		.byte	16
 8928 0029 A0       		.byte	-96
 8929 002a 12       		.byte	18
 8930 002b 70       		.byte	112
 8931 002c 68       		.byte	104
 8932 002d 5E       		.byte	94
 8933 002e 62       		.byte	98
 8934 002f BB       		.byte	-69
 8935 0030 96       		.byte	-106
 8936 0031 C0       		.byte	-64
 8937 0032 10       		.byte	16
 8938 0033 FF       		.byte	-1
 8939 0034 53       		.byte	83
 8940 0035 11       		.byte	17
 8941 0036 B0       		.byte	-80
 8942 0037 02       		.byte	2
 8943 0038 70       		.byte	112
 8944 0039 60       		.byte	96
 8945 003a 5E       		.byte	94
 8946 003b 7A       		.byte	122
 8947 003c 4A       		.byte	74
 8948 003d 4D       		.byte	77
 8949 003e F0       		.byte	-16
 8950 003f 10       		.byte	16
 8951 0040 FF       		.byte	-1
 8952              		.section	.rodata.TP2833_MODE_DataSet,"a",%progbits
 8953              		.align	2
 8954              		.set	.LANCHOR4,. + 0
 8957              	TP2833_MODE_DataSet:
 8958 0000 0C       		.byte	12
 8959 0001 0D       		.byte	13
 8960 0002 20       		.byte	32
 8961 0003 26       		.byte	38
 8962 0004 2B       		.byte	43
 8963 0005 2D       		.byte	45
 8964 0006 2E       		.byte	46
 8965 0007 30       		.byte	48
 8966 0008 31       		.byte	49
 8967 0009 32       		.byte	50
 8968 000a 33       		.byte	51
 8969 000b 39       		.byte	57
 8970 000c 18       		.byte	24
 8971 000d FF       		.byte	-1
 8972 000e 03       		.byte	3
 8973 000f 50       		.byte	80
 8974 0010 30       		.byte	48
ARM GAS  /tmp/ccSZlabO.s 			page 242


 8975 0011 05       		.byte	5
 8976 0012 58       		.byte	88
 8977 0013 30       		.byte	48
 8978 0014 70       		.byte	112
 8979 0015 48       		.byte	72
 8980 0016 BB       		.byte	-69
 8981 0017 2E       		.byte	46
 8982 0018 90       		.byte	-112
 8983 0019 0C       		.byte	12
 8984 001a 12       		.byte	18
 8985 001b FF       		.byte	-1
 8986 001c 13       		.byte	19
 8987 001d 50       		.byte	80
 8988 001e 30       		.byte	48
 8989 001f 05       		.byte	5
 8990 0020 58       		.byte	88
 8991 0021 30       		.byte	48
 8992 0022 70       		.byte	112
 8993 0023 48       		.byte	72
 8994 0024 BB       		.byte	-69
 8995 0025 2E       		.byte	46
 8996 0026 90       		.byte	-112
 8997 0027 08       		.byte	8
 8998 0028 12       		.byte	18
 8999 0029 FF       		.byte	-1
 9000 002a 13       		.byte	19
 9001 002b 50       		.byte	80
 9002 002c 40       		.byte	64
 9003 002d 05       		.byte	5
 9004 002e 70       		.byte	112
 9005 002f 68       		.byte	104
 9006 0030 5E       		.byte	94
 9007 0031 62       		.byte	98
 9008 0032 BB       		.byte	-69
 9009 0033 96       		.byte	-106
 9010 0034 C0       		.byte	-64
 9011 0035 04       		.byte	4
 9012 0036 11       		.byte	17
 9013 0037 FF       		.byte	-1
 9014 0038 13       		.byte	19
 9015 0039 51       		.byte	81
 9016 003a 48       		.byte	72
 9017 003b 05       		.byte	5
 9018 003c 70       		.byte	112
 9019 003d 60       		.byte	96
 9020 003e 5E       		.byte	94
 9021 003f 7A       		.byte	122
 9022 0040 4A       		.byte	74
 9023 0041 4D       		.byte	77
 9024 0042 F0       		.byte	-16
 9025 0043 04       		.byte	4
 9026 0044 11       		.byte	17
 9027 0045 FF       		.byte	-1
 9028              		.section	.rodata.TP2824C_CVIHD_PTZ_DataSet,"a",%progbits
 9029              		.align	2
 9030              		.set	.LANCHOR37,. + 0
 9033              	TP2824C_CVIHD_PTZ_DataSet:
ARM GAS  /tmp/ccSZlabO.s 			page 243


 9034 0000 70       		.byte	112
 9035 0001 1D       		.byte	29
 9036 0002 C0       		.byte	-64
 9037 0003 00       		.byte	0
 9038 0004 C2       		.byte	-62
 9039 0005 10       		.byte	16
 9040 0006 C3       		.byte	-61
 9041 0007 00       		.byte	0
 9042 0008 C1       		.byte	-63
 9043 0009 00       		.byte	0
 9044 000a C4       		.byte	-60
 9045 000b 00       		.byte	0
 9046 000c C5       		.byte	-59
 9047 000d 00       		.byte	0
 9048 000e C6       		.byte	-58
 9049 000f 15       		.byte	21
 9050 0010 C7       		.byte	-57
 9051 0011 5B       		.byte	91
 9052 0012 C8       		.byte	-56
 9053 0013 A4       		.byte	-92
 9054 0014 6F       		.byte	111
 9055 0015 48       		.byte	72
 9056 0016 55       		.byte	85
 9057 0017 00       		.byte	0
 9058 0018 56       		.byte	86
 9059 0019 00       		.byte	0
 9060 001a 57       		.byte	87
 9061 001b 00       		.byte	0
 9062 001c 58       		.byte	88
 9063 001d 00       		.byte	0
 9064 001e 59       		.byte	89
 9065 001f 00       		.byte	0
 9066 0020 5A       		.byte	90
 9067 0021 00       		.byte	0
 9068 0022 5B       		.byte	91
 9069 0023 00       		.byte	0
 9070 0024 5C       		.byte	92
 9071 0025 00       		.byte	0
 9072 0026 5D       		.byte	93
 9073 0027 00       		.byte	0
 9074 0028 5E       		.byte	94
 9075 0029 00       		.byte	0
 9076 002a 5F       		.byte	95
 9077 002b 00       		.byte	0
 9078 002c 60       		.byte	96
 9079 002d 00       		.byte	0
 9080 002e 62       		.byte	98
 9081 002f 00       		.byte	0
 9082 0030 63       		.byte	99
 9083 0031 00       		.byte	0
 9084 0032 64       		.byte	100
 9085 0033 00       		.byte	0
 9086 0034 65       		.byte	101
 9087 0035 00       		.byte	0
 9088 0036 66       		.byte	102
 9089 0037 00       		.byte	0
 9090 0038 68       		.byte	104
ARM GAS  /tmp/ccSZlabO.s 			page 244


 9091 0039 00       		.byte	0
 9092 003a 69       		.byte	105
 9093 003b 00       		.byte	0
 9094 003c 6A       		.byte	106
 9095 003d 00       		.byte	0
 9096 003e 6B       		.byte	107
 9097 003f 00       		.byte	0
 9098 0040 6C       		.byte	108
 9099 0041 00       		.byte	0
 9100 0042 FF       		.byte	-1
 9101 0043 FF       		.byte	-1
 9102              		.section	.rodata.TP2824C_HDA_DataSet,"a",%progbits
 9103              		.align	2
 9104              		.set	.LANCHOR11,. + 0
 9107              	TP2824C_HDA_DataSet:
 9108 0000 0C       		.byte	12
 9109 0001 20       		.byte	32
 9110 0002 2B       		.byte	43
 9111 0003 2D       		.byte	45
 9112 0004 2E       		.byte	46
 9113 0005 30       		.byte	48
 9114 0006 31       		.byte	49
 9115 0007 32       		.byte	50
 9116 0008 33       		.byte	51
 9117 0009 21       		.byte	33
 9118 000a 25       		.byte	37
 9119 000b FF       		.byte	-1
 9120 000c 03       		.byte	3
 9121 000d 40       		.byte	64
 9122 000e 60       		.byte	96
 9123 000f 48       		.byte	72
 9124 0010 40       		.byte	64
 9125 0011 27       		.byte	39
 9126 0012 72       		.byte	114
 9127 0013 80       		.byte	-128
 9128 0014 77       		.byte	119
 9129 0015 46       		.byte	70
 9130 0016 FE       		.byte	-2
 9131 0017 FF       		.byte	-1
 9132 0018 03       		.byte	3
 9133 0019 40       		.byte	64
 9134 001a 60       		.byte	96
 9135 001b 48       		.byte	72
 9136 001c 40       		.byte	64
 9137 001d 27       		.byte	39
 9138 001e 88       		.byte	-120
 9139 001f 04       		.byte	4
 9140 0020 23       		.byte	35
 9141 0021 46       		.byte	70
 9142 0022 FE       		.byte	-2
 9143 0023 FF       		.byte	-1
 9144 0024 03       		.byte	3
 9145 0025 38       		.byte	56
 9146 0026 60       		.byte	96
 9147 0027 44       		.byte	68
 9148 0028 40       		.byte	64
 9149 0029 29       		.byte	41
ARM GAS  /tmp/ccSZlabO.s 			page 245


 9150 002a 65       		.byte	101
 9151 002b 78       		.byte	120
 9152 002c 16       		.byte	22
 9153 002d 46       		.byte	70
 9154 002e FE       		.byte	-2
 9155 002f FF       		.byte	-1
 9156 0030 03       		.byte	3
 9157 0031 3C       		.byte	60
 9158 0032 60       		.byte	96
 9159 0033 44       		.byte	68
 9160 0034 40       		.byte	64
 9161 0035 29       		.byte	41
 9162 0036 61       		.byte	97
 9163 0037 78       		.byte	120
 9164 0038 16       		.byte	22
 9165 0039 46       		.byte	70
 9166 003a FE       		.byte	-2
 9167 003b FF       		.byte	-1
 9168              		.section	.rodata.TP2853C_DataSet,"a",%progbits
 9169              		.align	2
 9170              		.set	.LANCHOR18,. + 0
 9173              	TP2853C_DataSet:
 9174 0000 40       		.byte	64
 9175 0001 04       		.byte	4
 9176 0002 07       		.byte	7
 9177 0003 C0       		.byte	-64
 9178 0004 0B       		.byte	11
 9179 0005 C0       		.byte	-64
 9180 0006 21       		.byte	33
 9181 0007 84       		.byte	-124
 9182 0008 38       		.byte	56
 9183 0009 00       		.byte	0
 9184 000a 3A       		.byte	58
 9185 000b 32       		.byte	50
 9186 000c 3B       		.byte	59
 9187 000d 05       		.byte	5
 9188 000e 26       		.byte	38
 9189 000f 04       		.byte	4
 9190 0010 4D       		.byte	77
 9191 0011 03       		.byte	3
 9192 0012 4E       		.byte	78
 9193 0013 03       		.byte	3
 9194 0014 4F       		.byte	79
 9195 0015 01       		.byte	1
 9196 0016 F5       		.byte	-11
 9197 0017 F0       		.byte	-16
 9198 0018 F1       		.byte	-15
 9199 0019 07       		.byte	7
 9200 001a FF       		.byte	-1
 9201 001b FF       		.byte	-1
 9202              		.section	.rodata.TP2833_DataSet,"a",%progbits
 9203              		.align	2
 9204              		.set	.LANCHOR19,. + 0
 9207              	TP2833_DataSet:
 9208 0000 40       		.byte	64
 9209 0001 04       		.byte	4
 9210 0002 07       		.byte	7
ARM GAS  /tmp/ccSZlabO.s 			page 246


 9211 0003 C0       		.byte	-64
 9212 0004 0B       		.byte	11
 9213 0005 C0       		.byte	-64
 9214 0006 22       		.byte	34
 9215 0007 36       		.byte	54
 9216 0008 38       		.byte	56
 9217 0009 40       		.byte	64
 9218 000a 26       		.byte	38
 9219 000b 04       		.byte	4
 9220 000c 4D       		.byte	77
 9221 000d 03       		.byte	3
 9222 000e 4E       		.byte	78
 9223 000f 03       		.byte	3
 9224 0010 4F       		.byte	79
 9225 0011 01       		.byte	1
 9226 0012 FF       		.byte	-1
 9227 0013 FF       		.byte	-1
 9228              		.section	.rodata.TP2834_Audio_DataSet,"a",%progbits
 9229              		.align	2
 9230              		.set	.LANCHOR21,. + 0
 9233              	TP2834_Audio_DataSet:
 9234 0000 40       		.byte	64
 9235 0001 40       		.byte	64
 9236 0002 00       		.byte	0
 9237 0003 01       		.byte	1
 9238 0004 01       		.byte	1
 9239 0005 02       		.byte	2
 9240 0006 02       		.byte	2
 9241 0007 03       		.byte	3
 9242 0008 03       		.byte	3
 9243 0009 04       		.byte	4
 9244 000a 04       		.byte	4
 9245 000b 11       		.byte	17
 9246 000c 17       		.byte	23
 9247 000d 00       		.byte	0
 9248 000e 18       		.byte	24
 9249 000f 10       		.byte	16
 9250 0010 19       		.byte	25
 9251 0011 0F       		.byte	15
 9252 0012 1A       		.byte	26
 9253 0013 15       		.byte	21
 9254 0014 1B       		.byte	27
 9255 0015 01       		.byte	1
 9256 0016 37       		.byte	55
 9257 0017 20       		.byte	32
 9258 0018 1D       		.byte	29
 9259 0019 08       		.byte	8
 9260 001a 1D       		.byte	29
 9261 001b 00       		.byte	0
 9262 001c 3C       		.byte	60
 9263 001d 3F       		.byte	63
 9264 001e 3C       		.byte	60
 9265 001f 00       		.byte	0
 9266 0020 3D       		.byte	61
 9267 0021 01       		.byte	1
 9268 0022 FF       		.byte	-1
 9269 0023 FF       		.byte	-1
ARM GAS  /tmp/ccSZlabO.s 			page 247


 9270              		.section	.rodata.str1.4,"aMS",%progbits,1
 9271              		.align	2
 9272              	.LC0:
 9273 0000 31303830 		.ascii	"1080p30\000"
 9273      70333000 
 9274              	.LC1:
 9275 0008 31303830 		.ascii	"1080p25\000"
 9275      70323500 
 9276              	.LC2:
 9277 0010 37323070 		.ascii	"720p60\000"
 9277      363000
 9278 0017 00       		.space	1
 9279              	.LC3:
 9280 0018 37323070 		.ascii	"720p30V2\000"
 9280      33305632 
 9280      00
 9281 0021 000000   		.space	3
 9282              	.LC4:
 9283 0024 37323070 		.ascii	"720p50\000"
 9283      353000
 9284 002b 00       		.space	1
 9285              	.LC5:
 9286 002c 37323070 		.ascii	"720p25V2\000"
 9286      32355632 
 9286      00
 9287 0035 000000   		.space	3
 9288              	.LC6:
 9289 0038 37323070 		.ascii	"720p30\000"
 9289      333000
 9290 003f 00       		.space	1
 9291              	.LC7:
 9292 0040 37323070 		.ascii	"720p25\000"
 9292      323500
 9293 0047 00       		.space	1
 9294              	.LC8:
 9295 0048 50414C00 		.ascii	"PAL\000"
 9296              	.LC9:
 9297 004c 4E545343 		.ascii	"NTSC\000"
 9297      00
 9298 0051 000000   		.space	3
 9299              	.LC10:
 9300 0054 334D3138 		.ascii	"3M18\000"
 9300      00
 9301 0059 000000   		.space	3
 9302              	.LC11:
 9303 005c 354D3132 		.ascii	"5M12\000"
 9303      00
 9304 0061 000000   		.space	3
 9305              	.LC12:
 9306 0064 344D3135 		.ascii	"4M15\000"
 9306      00
 9307 0069 000000   		.space	3
 9308              	.LC13:
 9309 006c 334D3230 		.ascii	"3M20\000"
 9309      00
 9310 0071 000000   		.space	3
 9311              	.LC14:
ARM GAS  /tmp/ccSZlabO.s 			page 248


 9312 0074 344D3132 		.ascii	"4M12\000"
 9312      00
 9313 0079 000000   		.space	3
 9314              	.LC15:
 9315 007c 364D3130 		.ascii	"6M10\000"
 9315      00
 9316 0081 000000   		.space	3
 9317              	.LC16:
 9318 0084 344D3330 		.ascii	"4M30\000"
 9318      00
 9319 0089 000000   		.space	3
 9320              	.LC17:
 9321 008c 2E2E2E0D 		.ascii	"...\015\000"
 9321      00
 9322 0091 000000   		.space	3
 9323              	.LC18:
 9324 0094 74703238 		.ascii	"tp2826MODEDATASET\015\000"
 9324      32364D4F 
 9324      44454441 
 9324      54415345 
 9324      540D00
 9325 00a7 00       		.space	1
 9326              	.LC19:
 9327 00a8 74703238 		.ascii	"tp2824C MODEDATASET\015\000"
 9327      32344320 
 9327      4D4F4445 
 9327      44415441 
 9327      5345540D 
 9328 00bd 000000   		.space	3
 9329              	.LC20:
 9330 00c0 0D0A4E2F 		.ascii	"\015\012N/P detected\000"
 9330      50206465 
 9330      74656374 
 9330      656400
 9331 00cf 00       		.space	1
 9332              	.LC21:
 9333 00d0 0D0A4E6F 		.ascii	"\015\012No res detect...\000"
 9333      20726573 
 9333      20646574 
 9333      6563742E 
 9333      2E2E00
 9334 00e3 00       		.space	1
 9335              	.LC22:
 9336 00e4 4E6F2000 		.ascii	"No \000"
 9337              	.LC23:
 9338 00e8 76696465 		.ascii	"video detected\000"
 9338      6F206465 
 9338      74656374 
 9338      656400
 9339 00f7 00       		.space	1
 9340              	.LC24:
 9341 00f8 72657375 		.ascii	"result AGC=0X%04x ch%02X\015\012\000"
 9341      6C742041 
 9341      47433D30 
 9341      58253034 
 9341      78206368 
 9342 0113 00       		.space	1
ARM GAS  /tmp/ccSZlabO.s 			page 249


 9343              	.LC25:
 9344 0114 482F5620 		.ascii	"H/V is not locked\015\000"
 9344      6973206E 
 9344      6F74206C 
 9344      6F636B65 
 9344      640D00
 9345 0127 00       		.space	1
 9346              	.LC26:
 9347 0128 0D0A6368 		.ascii	"\015\012chip %02x revision %02x\015\012\000"
 9347      69702025 
 9347      30327820 
 9347      72657669 
 9347      73696F6E 
 9348              	.LC27:
 9349 0144 454F4C20 		.ascii	"EOL ID\015\000"
 9349      49440D00 
 9350              	.LC28:
 9351 014c 54503238 		.ascii	"TP2824C test\015\000"
 9351      32344320 
 9351      74657374 
 9351      0D00
 9352 015a 0000     		.space	2
 9353              	.LC29:
 9354 015c 756E6B6E 		.ascii	"unknown ID\015\000"
 9354      6F776E20 
 9354      49440D00 
 9355              	.LC30:
 9356 0168 0D0A434F 		.ascii	"\015\012COC4:\000"
 9356      43343A00 
 9357              	.LC31:
 9358 0170 20253032 		.ascii	" %02X\000"
 9358      5800
 9359 0176 0000     		.space	2
 9360              	.LC32:
 9361 0178 51756164 		.ascii	"QuadBoxId %02x\015\012\000"
 9361      426F7849 
 9361      64202530 
 9361      32780D0A 
 9361      00
 9362 0189 000000   		.space	3
 9363              	.LC33:
 9364 018c 0D0A434F 		.ascii	"\015\012COC3:\000"
 9364      43333A00 
 9365              	.LC34:
 9366 0194 0D0A434F 		.ascii	"\015\012COC2:\000"
 9366      43323A00 
 9367              	.LC35:
 9368 019c 0D0A434F 		.ascii	"\015\012COC1:\000"
 9368      43313A00 
 9369              	.LC36:
 9370 01a4 43564253 		.ascii	"CVBS-Tx %x,%x,%x,%x\012\000"
 9370      2D547820 
 9370      25782C25 
 9370      782C2578 
 9370      2C25780A 
 9371 01b9 000000   		.space	3
 9372              	.LC37:
ARM GAS  /tmp/ccSZlabO.s 			page 250


 9373 01bc 5456492D 		.ascii	"TVI-Tx %x,%x,%x\012\000"
 9373      54782025 
 9373      782C2578 
 9373      2C25780A 
 9373      00
 9374 01cd 000000   		.space	3
 9375              	.LC38:
 9376 01d0 4356492D 		.ascii	"CVI-Tx %x\012\000"
 9376      54782025 
 9376      780A00
 9377 01db 00       		.space	1
 9378              	.LC39:
 9379 01dc 41484420 		.ascii	"AHD %02x,%02x,%02x to \000"
 9379      25303278 
 9379      2C253032 
 9379      782C2530 
 9379      32782074 
 9380 01f3 00       		.space	1
 9381              	.LC40:
 9382 01f4 54782025 		.ascii	"Tx %02x,%02x,%02x,%02x\000"
 9382      3032782C 
 9382      25303278 
 9382      2C253032 
 9382      782C2530 
 9383 020b 00       		.space	1
 9384              	.LC41:
 9385 020c 0D0A2049 		.ascii	"\015\012 Init_COC_PTZOUT1..\000"
 9385      6E69745F 
 9385      434F435F 
 9385      50545A4F 
 9385      5554312E 
 9386 0222 0000     		.space	2
 9387              	.LC42:
 9388 0224 31766964 		.ascii	"1video in ch%02x \015\012\000"
 9388      656F2069 
 9388      6E206368 
 9388      25303278 
 9388      200D0A00 
 9389              	.LC43:
 9390 0238 76696465 		.ascii	"video locked ch%02x \015\012\000"
 9390      6F206C6F 
 9390      636B6564 
 9390      20636825 
 9390      30327820 
 9391 024f 00       		.space	1
 9392              	.LC44:
 9393 0250 76696465 		.ascii	"video in ch%02x \015\012\000"
 9393      6F20696E 
 9393      20636825 
 9393      30327820 
 9393      0D0A00
 9394 0263 00       		.space	1
 9395              	.LC45:
 9396 0264 76696465 		.ascii	"video unstable ch%02x \015\012\000"
 9396      6F20756E 
 9396      73746162 
 9396      6C652063 
ARM GAS  /tmp/ccSZlabO.s 			page 251


 9396      68253032 
 9397 027d 000000   		.space	3
 9398              	.LC46:
 9399 0280 76696465 		.ascii	"video unlocked ch%02x \015\012\000"
 9399      6F20756E 
 9399      6C6F636B 
 9399      65642063 
 9399      68253032 
 9400 0299 000000   		.space	3
 9401              	.LC47:
 9402 029c 5365745F 		.ascii	"Set_VidResmode[%d] =%d\015\012\000"
 9402      56696452 
 9402      65736D6F 
 9402      64655B25 
 9402      645D203D 
 9403 02b5 000000   		.space	3
 9404              	.LC48:
 9405 02b8 4D616E56 		.ascii	"ManVidResRx=0x%02x\015\012\000"
 9405      69645265 
 9405      7352783D 
 9405      30782530 
 9405      32780D0A 
 9406 02cd 000000   		.space	3
 9407              	.LC49:
 9408 02d0 52656730 		.ascii	"Reg01 %02x\015\012\000"
 9408      31202530 
 9408      32780D0A 
 9408      00
 9409 02dd 000000   		.space	3
 9410              	.LC50:
 9411 02e0 43564253 		.ascii	"CVBS  mode:%d\015\012\000"
 9411      20206D6F 
 9411      64653A25 
 9411      640D0A00 
 9412              	.LC51:
 9413 02f0 7475726E 		.ascii	"turn to C ch%02x\015\012\000"
 9413      20746F20 
 9413      43206368 
 9413      25303278 
 9413      0D0A00
 9414 0303 00       		.space	1
 9415              	.LC52:
 9416 0304 7475726E 		.ascii	"turn to A ch%02x\015\012\000"
 9416      20746F20 
 9416      41206368 
 9416      25303278 
 9416      0D0A00
 9417 0317 00       		.space	1
 9418              	.LC53:
 9419 0318 41484420 		.ascii	"AHD 1080P30/P25  mode:%d\015\012\000"
 9419      31303830 
 9419      5033302F 
 9419      50323520 
 9419      206D6F64 
 9420 0333 00       		.space	1
 9421              	.LC54:
 9422 0334 54564920 		.ascii	"TVI 1080P30/P25   mode:%d\015\012\000"
ARM GAS  /tmp/ccSZlabO.s 			page 252


 9422      31303830 
 9422      5033302F 
 9422      50323520 
 9422      20206D6F 
 9423              	.LC55:
 9424 0350 41484420 		.ascii	"AHD 720P30/P25/P60/P50   mode:%d\015\012\000"
 9424      37323050 
 9424      33302F50 
 9424      32352F50 
 9424      36302F50 
 9425 0373 00       		.space	1
 9426              	.LC56:
 9427 0374 43564253 		.ascii	"CVBS    mode:%d\015\012\000"
 9427      20202020 
 9427      6D6F6465 
 9427      3A25640D 
 9427      0A00
 9428 0386 0000     		.space	2
 9429              	.LC57:
 9430 0388 6261636B 		.ascii	"back to T ch%02x\015\012\000"
 9430      20746F20 
 9430      54206368 
 9430      25303278 
 9430      0D0A00
 9431 039b 00       		.space	1
 9432              	.LC58:
 9433 039c 45676169 		.ascii	"Egain=0x%02x ch%02x,std=%d,mode=0x%02X\015\012\000"
 9433      6E3D3078 
 9433      25303278 
 9433      20636825 
 9433      3032782C 
 9434 03c5 000000   		.space	3
 9435              	.LC59:
 9436 03c8 56533432 		.ascii	"VS4210_SetInModeOutMode(),i=%d,newInRes=%d,OuputMod"
 9436      31305F53 
 9436      6574496E 
 9436      4D6F6465 
 9436      4F75744D 
 9437 03fb 65666C67 		.ascii	"eflg=%d\015\012\000"
 9437      3D25640D 
 9437      0A00
 9438 0405 000000   		.space	3
 9439              	.LC60:
 9440 0408 41484420 		.ascii	"AHD Mode\015\000"
 9440      4D6F6465 
 9440      0D00
 9441 0412 0000     		.space	2
 9442              	.LC61:
 9443 0414 43564920 		.ascii	"CVI Mode\015\000"
 9443      4D6F6465 
 9443      0D00
 9444 041e 0000     		.space	2
 9445              	.LC62:
 9446 0420 43564253 		.ascii	"CVBS NTSC   mode\015\000"
 9446      204E5453 
 9446      43202020 
 9446      6D6F6465 
ARM GAS  /tmp/ccSZlabO.s 			page 253


 9446      0D00
 9447 0432 0000     		.space	2
 9448              	.LC63:
 9449 0434 43564253 		.ascii	"CVBS PAL   mode\015\000"
 9449      2050414C 
 9449      2020206D 
 9449      6F64650D 
 9449      00
 9450 0445 000000   		.space	3
 9451              	.LC64:
 9452 0448 4C494E45 		.ascii	"LINE=%d,TVI Mode\015\012\000"
 9452      3D25642C 
 9452      54564920 
 9452      4D6F6465 
 9452      0D0A00
 9453 045b 00       		.space	1
 9454              	.LC65:
 9455 045c 45516465 		.ascii	"EQdet %d\015\012\000"
 9455      74202564 
 9455      0D0A00
 9456 0467 00       		.space	1
 9457              	.LC66:
 9458 0468 0D0A4148 		.ascii	"\015\012AHD COC Ready CH=%d\015\012\000"
 9458      4420434F 
 9458      43205265 
 9458      61647920 
 9458      43483D25 
 9459              		.section	.rodata.TP2802D_DataSet,"a",%progbits
 9460              		.align	2
 9463              	TP2802D_DataSet:
 9464 0000 40       		.byte	64
 9465 0001 04       		.byte	4
 9466 0002 2B       		.byte	43
 9467 0003 44       		.byte	68
 9468 0004 23       		.byte	35
 9469 0005 50       		.byte	80
 9470 0006 39       		.byte	57
 9471 0007 42       		.byte	66
 9472 0008 3A       		.byte	58
 9473 0009 01       		.byte	1
 9474 000a 30       		.byte	48
 9475 000b 48       		.byte	72
 9476 000c 31       		.byte	49
 9477 000d BB       		.byte	-69
 9478 000e 32       		.byte	50
 9479 000f 2E       		.byte	46
 9480 0010 33       		.byte	51
 9481 0011 90       		.byte	-112
 9482 0012 4D       		.byte	77
 9483 0013 0F       		.byte	15
 9484 0014 4E       		.byte	78
 9485 0015 FF       		.byte	-1
 9486 0016 40       		.byte	64
 9487 0017 01       		.byte	1
 9488 0018 50       		.byte	80
 9489 0019 00       		.byte	0
 9490 001a 51       		.byte	81
ARM GAS  /tmp/ccSZlabO.s 			page 254


 9491 001b 00       		.byte	0
 9492 001c 52       		.byte	82
 9493 001d 00       		.byte	0
 9494 001e 7F       		.byte	127
 9495 001f 00       		.byte	0
 9496 0020 80       		.byte	-128
 9497 0021 00       		.byte	0
 9498 0022 81       		.byte	-127
 9499 0023 00       		.byte	0
 9500 0024 40       		.byte	64
 9501 0025 00       		.byte	0
 9502 0026 50       		.byte	80
 9503 0027 00       		.byte	0
 9504 0028 51       		.byte	81
 9505 0029 0B       		.byte	11
 9506 002a 52       		.byte	82
 9507 002b 0C       		.byte	12
 9508 002c 53       		.byte	83
 9509 002d 19       		.byte	25
 9510 002e 54       		.byte	84
 9511 002f 78       		.byte	120
 9512 0030 55       		.byte	85
 9513 0031 21       		.byte	33
 9514 0032 7E       		.byte	126
 9515 0033 0F       		.byte	15
 9516 0034 7F       		.byte	127
 9517 0035 00       		.byte	0
 9518 0036 80       		.byte	-128
 9519 0037 07       		.byte	7
 9520 0038 81       		.byte	-127
 9521 0039 08       		.byte	8
 9522 003a 82       		.byte	-126
 9523 003b 04       		.byte	4
 9524 003c 83       		.byte	-125
 9525 003d 00       		.byte	0
 9526 003e 84       		.byte	-124
 9527 003f 00       		.byte	0
 9528 0040 85       		.byte	-123
 9529 0041 60       		.byte	96
 9530 0042 86       		.byte	-122
 9531 0043 10       		.byte	16
 9532 0044 87       		.byte	-121
 9533 0045 06       		.byte	6
 9534 0046 88       		.byte	-120
 9535 0047 BE       		.byte	-66
 9536 0048 89       		.byte	-119
 9537 0049 39       		.byte	57
 9538 004a 8A       		.byte	-118
 9539 004b 27       		.byte	39
 9540 004c B9       		.byte	-71
 9541 004d 0F       		.byte	15
 9542 004e FF       		.byte	-1
 9543 004f FF       		.byte	-1
 9544              		.text
 9545              	.Letext0:
 9546              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 9547              		.file 3 "/usr/include/newlib/sys/_stdint.h"
ARM GAS  /tmp/ccSZlabO.s 			page 255


 9548              		.file 4 "VS4210/VXIS_Extern_Define.h"
 9549              		.file 5 "TP2824/tpinc/TP2802.h"
 9550              		.file 6 "VS4210/VS4210.h"
 9551              		.file 7 "Drivers/CMSIS/Include/core_cm3.h"
 9552              		.file 8 "sw_i2c/VX_swi2c.h"
 9553              		.file 9 "/usr/include/newlib/stdio.h"
 9554              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 9555              		.file 11 "VS4210/Printf.h"
 9556              		.file 12 "<built-in>"
 9557              		.file 13 "VS4210/keyremo.h"
ARM GAS  /tmp/ccSZlabO.s 			page 256


DEFINED SYMBOLS
                            *ABS*:0000000000000000 TP2802.c
     /tmp/ccSZlabO.s:19     .text.tp2824_reset_default:0000000000000000 $t
     /tmp/ccSZlabO.s:23     .text.tp2824_reset_default:0000000000000000 tp2824_reset_default
     /tmp/ccSZlabO.s:45     .text.tp28xx_SYSCLK_V1:0000000000000000 $t
     /tmp/ccSZlabO.s:49     .text.tp28xx_SYSCLK_V1:0000000000000000 tp28xx_SYSCLK_V1
     /tmp/ccSZlabO.s:91     .text.tp28xx_SYSCLK_V1:0000000000000028 $d
     /tmp/ccSZlabO.s:96     .text.tp28xx_SYSCLK_V2:0000000000000000 $t
     /tmp/ccSZlabO.s:100    .text.tp28xx_SYSCLK_V2:0000000000000000 tp28xx_SYSCLK_V2
     /tmp/ccSZlabO.s:144    .text.tp28xx_SYSCLK_V2:000000000000002c $d
     /tmp/ccSZlabO.s:149    .text.tp2853C_reset_default:0000000000000000 $t
     /tmp/ccSZlabO.s:153    .text.tp2853C_reset_default:0000000000000000 tp2853C_reset_default
     /tmp/ccSZlabO.s:200    .text.TP28xx_reset_default:0000000000000000 $t
     /tmp/ccSZlabO.s:204    .text.TP28xx_reset_default:0000000000000000 TP28xx_reset_default
     /tmp/ccSZlabO.s:251    .text.I2CDeviceSet1:0000000000000000 $t
     /tmp/ccSZlabO.s:256    .text.I2CDeviceSet1:0000000000000000 I2CDeviceSet1
     /tmp/ccSZlabO.s:295    .text.I2CDeviceSet2:0000000000000000 $t
     /tmp/ccSZlabO.s:300    .text.I2CDeviceSet2:0000000000000000 I2CDeviceSet2
     /tmp/ccSZlabO.s:343    .text.SetRegPage:0000000000000000 $t
     /tmp/ccSZlabO.s:348    .text.SetRegPage:0000000000000000 SetRegPage
     /tmp/ccSZlabO.s:371    .text.Set_VidRes:0000000000000000 $t
     /tmp/ccSZlabO.s:376    .text.Set_VidRes:0000000000000000 Set_VidRes
     /tmp/ccSZlabO.s:399    .text.Set_VidRes:0000000000000012 $d
     /tmp/ccSZlabO.s:866    .text.Set_VidRes:0000000000000248 $d
                            *COM*:0000000000000001 mode
                            *COM*:0000000000000001 ManVidResRx
                            *COM*:0000000000000001 chip
     /tmp/ccSZlabO.s:899    .text.Set_HDA:0000000000000000 $t
     /tmp/ccSZlabO.s:904    .text.Set_HDA:0000000000000000 Set_HDA
     /tmp/ccSZlabO.s:924    .text.Set_HDA:000000000000000e $d
     /tmp/ccSZlabO.s:938    .text.Set_HDA:000000000000001c $t
     /tmp/ccSZlabO.s:1046   .text.Set_HDA:00000000000000a8 $d
     /tmp/ccSZlabO.s:1056   .text.Set_HDC:0000000000000000 $t
     /tmp/ccSZlabO.s:1061   .text.Set_HDC:0000000000000000 Set_HDC
     /tmp/ccSZlabO.s:1081   .text.Set_HDC:000000000000000e $d
     /tmp/ccSZlabO.s:1095   .text.Set_HDC:000000000000001c $t
     /tmp/ccSZlabO.s:1197   .text.Set_HDC:00000000000000a4 $d
     /tmp/ccSZlabO.s:1206   .text.Det_VidRes:0000000000000000 $t
     /tmp/ccSZlabO.s:1211   .text.Det_VidRes:0000000000000000 Det_VidRes
     /tmp/ccSZlabO.s:1233   .text.Det_VidRes:0000000000000014 $d
     /tmp/ccSZlabO.s:1306   .text.Det_VidRes:0000000000000048 $d
     /tmp/ccSZlabO.s:1312   .text.Det_VideoLoss:0000000000000000 $t
     /tmp/ccSZlabO.s:1317   .text.Det_VideoLoss:0000000000000000 Det_VideoLoss
     /tmp/ccSZlabO.s:1359   .text.Det_VideoLoss:0000000000000028 $d
     /tmp/ccSZlabO.s:1365   .text.ManualAGC:0000000000000000 $t
     /tmp/ccSZlabO.s:1370   .text.ManualAGC:0000000000000000 ManualAGC
     /tmp/ccSZlabO.s:1456   .text.ManualAGC:0000000000000068 $d
     /tmp/ccSZlabO.s:1461   .text.ReadGain:0000000000000000 $t
     /tmp/ccSZlabO.s:1466   .text.ReadGain:0000000000000000 ReadGain
     /tmp/ccSZlabO.s:1492   .text.SetCGain:0000000000000000 $t
     /tmp/ccSZlabO.s:1497   .text.SetCGain:0000000000000000 SetCGain
     /tmp/ccSZlabO.s:1649   .text.INPUT_VIDEO_CHECK:0000000000000000 $t
     /tmp/ccSZlabO.s:1654   .text.INPUT_VIDEO_CHECK:0000000000000000 INPUT_VIDEO_CHECK
     /tmp/ccSZlabO.s:1669   .text.INPUT_VIDEO_CHECK:000000000000000c $d
     /tmp/ccSZlabO.s:1971   .text.INPUT_VIDEO_CHECK:0000000000000118 $d
     /tmp/ccSZlabO.s:1976   .text.Det_HLock:0000000000000000 $t
     /tmp/ccSZlabO.s:1981   .text.Det_HLock:0000000000000000 Det_HLock
ARM GAS  /tmp/ccSZlabO.s 			page 257


     /tmp/ccSZlabO.s:2014   .text.Set_ResWithAutoDet:0000000000000000 $t
     /tmp/ccSZlabO.s:2019   .text.Set_ResWithAutoDet:0000000000000000 Set_ResWithAutoDet
     /tmp/ccSZlabO.s:2088   .text.Set_ResWithAutoDet:0000000000000044 $d
     /tmp/ccSZlabO.s:2093   .text.Scan_Channels:0000000000000000 $t
     /tmp/ccSZlabO.s:2098   .text.Scan_Channels:0000000000000000 Scan_Channels
     /tmp/ccSZlabO.s:2151   .text.Set_PLL_StartUp:0000000000000000 $t
     /tmp/ccSZlabO.s:2156   .text.Set_PLL_StartUp:0000000000000000 Set_PLL_StartUp
     /tmp/ccSZlabO.s:2190   .text.Init_TP280x_RegSet:0000000000000000 $t
     /tmp/ccSZlabO.s:2195   .text.Init_TP280x_RegSet:0000000000000000 Init_TP280x_RegSet
     /tmp/ccSZlabO.s:2278   .text.Init_TP280x_RegSet:0000000000000060 $d
     /tmp/ccSZlabO.s:2316   .text.Init_TP280x_RegSet:0000000000000086 $t
     /tmp/ccSZlabO.s:2535   .text.Init_TP280x_RegSet:000000000000018c $d
                            *COM*:0000000000000001 TVII2CAddress
                            *COM*:0000000000000001 revision
                            *COM*:0000000000000004 flag_CVBS
                            *COM*:0000000000000004 flag_AUDIO
                            *COM*:0000000000000004 flag_MEGA
                            *COM*:0000000000000001 CurRes
                            *COM*:0000000000000001 count
                            *COM*:0000000000000001 state
                            *COM*:0000000000000001 std
     /tmp/ccSZlabO.s:2564   .text.ConvertData:0000000000000000 $t
     /tmp/ccSZlabO.s:2569   .text.ConvertData:0000000000000000 ConvertData
     /tmp/ccSZlabO.s:2648   .text.ConvertData:0000000000000050 $d
                            *COM*:0000000000000002 PTZ_pelco
                            *COM*:0000000000000010 PTZ_buf
     /tmp/ccSZlabO.s:2654   .text.SwapBit:0000000000000000 $t
     /tmp/ccSZlabO.s:2659   .text.SwapBit:0000000000000000 SwapBit
     /tmp/ccSZlabO.s:2751   .text.SwapBit:0000000000000058 $d
                            *COM*:0000000000000001 crc
     /tmp/ccSZlabO.s:2757   .text.AHDBitsReverse:0000000000000000 $t
     /tmp/ccSZlabO.s:2762   .text.AHDBitsReverse:0000000000000000 AHDBitsReverse
     /tmp/ccSZlabO.s:2855   .text.HDC_SetData:0000000000000000 $t
     /tmp/ccSZlabO.s:2860   .text.HDC_SetData:0000000000000000 HDC_SetData
     /tmp/ccSZlabO.s:2915   .text.HDC_SetData:0000000000000044 $d
     /tmp/ccSZlabO.s:2920   .text.HDA_SetData:0000000000000000 $t
     /tmp/ccSZlabO.s:2925   .text.HDA_SetData:0000000000000000 HDA_SetData
     /tmp/ccSZlabO.s:2969   .text.HDA_SetData:000000000000002c $d
     /tmp/ccSZlabO.s:2974   .text.TVICommandToAHData:0000000000000000 $t
     /tmp/ccSZlabO.s:2979   .text.TVICommandToAHData:0000000000000000 TVICommandToAHData
     /tmp/ccSZlabO.s:3295   .text.TVICommandToAHData:00000000000001ac $d
                            *COM*:0000000000000001 TVI_speed
                            *COM*:0000000000000001 AHDcmd3
                            *COM*:0000000000000001 presetNum
                            *COM*:0000000000000001 AHDcmd4
                            *COM*:0000000000000001 TVI_Command
                            *COM*:0000000000000001 AHDcmd1
                            *COM*:0000000000000001 AHDcmd2
     /tmp/ccSZlabO.s:3306   .text.ACPSTOPCOMMAND:0000000000000000 $t
     /tmp/ccSZlabO.s:3311   .text.ACPSTOPCOMMAND:0000000000000000 ACPSTOPCOMMAND
     /tmp/ccSZlabO.s:3395   .text.Get_2824cIrq:0000000000000000 $t
     /tmp/ccSZlabO.s:3400   .text.Get_2824cIrq:0000000000000000 Get_2824cIrq
     /tmp/ccSZlabO.s:3960   .text.Get_2824cIrq:00000000000002cc $d
                            *COM*:000000000000001a tpRxD
                            *COM*:000000000000000c COCRX4
                            *COM*:000000000000000c COCRX3
                            *COM*:000000000000000c COCRX2
ARM GAS  /tmp/ccSZlabO.s 			page 258


     /tmp/ccSZlabO.s:3975   .text.Get_2824cIrq:00000000000002fc $t
     /tmp/ccSZlabO.s:4400   .text.Get_2824cIrq:0000000000000540 $d
     /tmp/ccSZlabO.s:4410   .text.Get_2824cIrq:000000000000054a $t
     /tmp/ccSZlabO.s:4529   .text.Get_2824cIrq:00000000000005f4 $d
                            *COM*:000000000000000c COCRX1
                            *COM*:0000000000000004 ptztxflag
                            *COM*:0000000000000001 TVI_Chksum
     /tmp/ccSZlabO.s:4547   .text.Get_2824cIrq:0000000000000634 $t
     /tmp/ccSZlabO.s:4740   .text.Get_2824cIrq:0000000000000754 $d
     /tmp/ccSZlabO.s:4757   .text.TP2824_PTZ_init:0000000000000000 $t
     /tmp/ccSZlabO.s:4762   .text.TP2824_PTZ_init:0000000000000000 TP2824_PTZ_init
     /tmp/ccSZlabO.s:4942   .text.TP2824_PTZ_mode:0000000000000000 $t
     /tmp/ccSZlabO.s:4947   .text.TP2824_PTZ_mode:0000000000000000 TP2824_PTZ_mode
     /tmp/ccSZlabO.s:4995   .text.TP2824_PTZ_mode:000000000000002c $d
     /tmp/ccSZlabO.s:5001   .text.TP2824C_RX_init:0000000000000000 $t
     /tmp/ccSZlabO.s:5006   .text.TP2824C_RX_init:0000000000000000 TP2824C_RX_init
     /tmp/ccSZlabO.s:5045   .text.TP2824C_RX_init:0000000000000020 $d
     /tmp/ccSZlabO.s:5050   .text.TP2824C_PTZ_mode:0000000000000000 $t
     /tmp/ccSZlabO.s:5055   .text.TP2824C_PTZ_mode:0000000000000000 TP2824C_PTZ_mode
     /tmp/ccSZlabO.s:5099   .text.TP2824C_PTZ_mode:0000000000000024 $d
     /tmp/ccSZlabO.s:5105   .text.HDA_SetACPV2Data:0000000000000000 $t
     /tmp/ccSZlabO.s:5110   .text.HDA_SetACPV2Data:0000000000000000 HDA_SetACPV2Data
     /tmp/ccSZlabO.s:5184   .text.TP2824C_StartTX:0000000000000000 $t
     /tmp/ccSZlabO.s:5189   .text.TP2824C_StartTX:0000000000000000 TP2824C_StartTX
     /tmp/ccSZlabO.s:5263   .text.COC_test:0000000000000000 $t
     /tmp/ccSZlabO.s:5268   .text.COC_test:0000000000000000 COC_test
     /tmp/ccSZlabO.s:5298   .text.COC_test:0000000000000020 $d
     /tmp/ccSZlabO.s:5307   .text.Init_COC_PTZOUT1:0000000000000000 $t
     /tmp/ccSZlabO.s:5312   .text.Init_COC_PTZOUT1:0000000000000000 Init_COC_PTZOUT1
     /tmp/ccSZlabO.s:5496   .text.Init_COC_PTZOUT1:0000000000000114 $d
     /tmp/ccSZlabO.s:5501   .text.EQ_Detect:0000000000000000 $t
     /tmp/ccSZlabO.s:5506   .text.EQ_Detect:0000000000000000 EQ_Detect
     /tmp/ccSZlabO.s:6017   .text.EQ_Detect:00000000000002b4 $d
                            *COM*:0000000000000001 flag_LOCKED
                            *COM*:0000000000000004 sywd
                            *COM*:0000000000000001 CurCH
     /tmp/ccSZlabO.s:6039   .text.EQ_Detect:0000000000000304 $t
     /tmp/ccSZlabO.s:6476   .text.EQ_Detect:00000000000005bc $d
                            *COM*:0000000000000004 egain
     /tmp/ccSZlabO.s:6499   .text.EQ_Detect:0000000000000610 $t
     /tmp/ccSZlabO.s:6879   .text.EQ_Detect:0000000000000850 $d
     /tmp/ccSZlabO.s:6904   .text.Set_Mirror_COC:0000000000000000 $t
     /tmp/ccSZlabO.s:6909   .text.Set_Mirror_COC:0000000000000000 Set_Mirror_COC
     /tmp/ccSZlabO.s:7525   .rodata.TP2802_FORMAT_DataSet:0000000000000000 TP2802_FORMAT_DataSet
     /tmp/ccSZlabO.s:9033   .rodata.TP2824C_CVIHD_PTZ_DataSet:0000000000000000 TP2824C_CVIHD_PTZ_DataSet
     /tmp/ccSZlabO.s:7293   .rodata.TP2824C_CVBS_PTZ_DataSet:0000000000000000 TP2824C_CVBS_PTZ_DataSet
     /tmp/ccSZlabO.s:8286   .rodata.TP2824C_AHD_FHD_PTZ_DataSet:0000000000000000 TP2824C_AHD_FHD_PTZ_DataSet
     /tmp/ccSZlabO.s:8388   .rodata.TP2824C_TVI_FHD_PTZ_DataSet:0000000000000000 TP2824C_TVI_FHD_PTZ_DataSet
     /tmp/ccSZlabO.s:9463   .rodata.TP2802D_DataSet:0000000000000000 TP2802D_DataSet
     /tmp/ccSZlabO.s:8769   .rodata.TP2822_DataSet:0000000000000000 TP2822_DataSet
     /tmp/ccSZlabO.s:8886   .rodata.TP2823_MODE_DataSet:0000000000000000 TP2823_MODE_DataSet
     /tmp/ccSZlabO.s:7248   .rodata.TP2823_DataSet:0000000000000000 TP2823_DataSet
     /tmp/ccSZlabO.s:7454   .rodata.TP2834_MODE_DataSet:0000000000000000 TP2834_MODE_DataSet
     /tmp/ccSZlabO.s:7970   .rodata.TP2834_DataSet:0000000000000000 TP2834_DataSet
     /tmp/ccSZlabO.s:7202   .rodata.TP2833_HDA_DataSet:0000000000000000 TP2833_HDA_DataSet
     /tmp/ccSZlabO.s:8957   .rodata.TP2833_MODE_DataSet:0000000000000000 TP2833_MODE_DataSet
     /tmp/ccSZlabO.s:9207   .rodata.TP2833_DataSet:0000000000000000 TP2833_DataSet
ARM GAS  /tmp/ccSZlabO.s 			page 259


     /tmp/ccSZlabO.s:9233   .rodata.TP2834_Audio_DataSet:0000000000000000 TP2834_Audio_DataSet
     /tmp/ccSZlabO.s:7025   .rodata.TP2853C_HDC_DataSet:0000000000000000 TP2853C_HDC_DataSet
     /tmp/ccSZlabO.s:7808   .rodata.TP2853C_HDA_DataSet:0000000000000000 TP2853C_HDA_DataSet
     /tmp/ccSZlabO.s:8035   .rodata.TP2853C_MODE_DataSet:0000000000000000 TP2853C_MODE_DataSet
     /tmp/ccSZlabO.s:9173   .rodata.TP2853C_DataSet:0000000000000000 TP2853C_DataSet
     /tmp/ccSZlabO.s:8552   .rodata.TP2824C_HDC_DataSet:0000000000000000 TP2824C_HDC_DataSet
     /tmp/ccSZlabO.s:8131   .rodata.TP2826_HDC_DataSet:0000000000000000 TP2826_HDC_DataSet
     /tmp/ccSZlabO.s:9107   .rodata.TP2824C_HDA_DataSet:0000000000000000 TP2824C_HDA_DataSet
     /tmp/ccSZlabO.s:8486   .rodata.TP2826_HDA_DataSet:0000000000000000 TP2826_HDA_DataSet
     /tmp/ccSZlabO.s:7096   .rodata.TP2824C_MODE_DataSet:0000000000000000 TP2824C_MODE_DataSet
     /tmp/ccSZlabO.s:7864   .rodata.TP2826_MODE_DataSet:0000000000000000 TP2826_MODE_DataSet
     /tmp/ccSZlabO.s:7778   .rodata.TP2826_DataSet:0000000000000000 TP2826_DataSet
     /tmp/ccSZlabO.s:8720   .rodata.TP2824C_DataSet:0000000000000000 TP2824C_DataSet
     /tmp/ccSZlabO.s:8235   .bss.QuadBoxMode:0000000000000000 QuadBoxMode
     /tmp/ccSZlabO.s:7447   .bss.QuadBoxId:0000000000000000 QuadBoxId
     /tmp/ccSZlabO.s:7286   .bss.PtzTxChNum:0000000000000000 PtzTxChNum
     /tmp/ccSZlabO.s:7991   .data.PreCOCSelectModeType:0000000000000000 PreCOCSelectModeType
     /tmp/ccSZlabO.s:8276   .data.COCSelectModeType:0000000000000000 COCSelectModeType
     /tmp/ccSZlabO.s:8479   .bss.Flisheye_VLOSS_Count:0000000000000000 Flisheye_VLOSS_Count
     /tmp/ccSZlabO.s:7018   .data.TP_InputMode:0000000000000000 TP_InputMode
                            *COM*:0000000000000001 Flisheye_COC
     /tmp/ccSZlabO.s:8241   .bss.Flisheye_CAM:0000000000000000 Flisheye_CAM
     /tmp/ccSZlabO.s:8877   .rodata.REG_FA:0000000000000000 REG_FA
     /tmp/ccSZlabO.s:8760   .rodata.REG_F7:0000000000000000 REG_F7
     /tmp/ccSZlabO.s:8750   .rodata.REG_F6:0000000000000000 REG_F6
     /tmp/ccSZlabO.s:8266   .rodata.SYS_AND:0000000000000000 SYS_AND
     /tmp/ccSZlabO.s:7276   .rodata.SYS_MODE:0000000000000000 SYS_MODE
                            *COM*:0000000000000001 VideoSave
     /tmp/ccSZlabO.s:8470   .data.newInRes:0000000000000000 newInRes
     /tmp/ccSZlabO.s:7021   .rodata.TP2853C_HDC_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:7092   .rodata.TP2824C_MODE_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:7198   .rodata.TP2833_HDA_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:7244   .rodata.TP2823_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:7272   .rodata.SYS_MODE:0000000000000000 $d
     /tmp/ccSZlabO.s:7287   .bss.PtzTxChNum:0000000000000000 $d
     /tmp/ccSZlabO.s:7289   .rodata.TP2824C_CVBS_PTZ_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:7363   .rodata.PTZ_RX_dat.8672:0000000000000000 $d
     /tmp/ccSZlabO.s:7367   .rodata.PTZ_RX_dat.8672:0000000000000000 PTZ_RX_dat.8672
     /tmp/ccSZlabO.s:7448   .bss.QuadBoxId:0000000000000000 $d
     /tmp/ccSZlabO.s:7450   .rodata.TP2834_MODE_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:7521   .rodata.TP2802_FORMAT_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:7774   .rodata.TP2826_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:7804   .rodata.TP2853C_HDA_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:7860   .rodata.TP2826_MODE_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:7966   .rodata.TP2834_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:7988   .data.PreCOCSelectModeType:0000000000000000 $d
     /tmp/ccSZlabO.s:7997   .rodata.PTZ_reg.8661:0000000000000000 $d
     /tmp/ccSZlabO.s:8001   .rodata.PTZ_reg.8661:0000000000000000 PTZ_reg.8661
     /tmp/ccSZlabO.s:8031   .rodata.TP2853C_MODE_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:8127   .rodata.TP2826_HDC_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:8236   .bss.QuadBoxMode:0000000000000000 $d
     /tmp/ccSZlabO.s:8238   .bss.Flisheye_CAM:0000000000000000 $d
     /tmp/ccSZlabO.s:8244   .rodata.PTZ_reg.8683:0000000000000000 $d
     /tmp/ccSZlabO.s:8248   .rodata.PTZ_reg.8683:0000000000000000 PTZ_reg.8683
     /tmp/ccSZlabO.s:8262   .rodata.SYS_AND:0000000000000000 $d
     /tmp/ccSZlabO.s:8273   .data.COCSelectModeType:0000000000000000 $d
     /tmp/ccSZlabO.s:8282   .rodata.TP2824C_AHD_FHD_PTZ_DataSet:0000000000000000 $d
ARM GAS  /tmp/ccSZlabO.s 			page 260


     /tmp/ccSZlabO.s:8384   .rodata.TP2824C_TVI_FHD_PTZ_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:8466   .data.newInRes:0000000000000000 $d
     /tmp/ccSZlabO.s:8476   .bss.Flisheye_VLOSS_Count:0000000000000000 $d
     /tmp/ccSZlabO.s:8482   .rodata.TP2826_HDA_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:8548   .rodata.TP2824C_HDC_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:8654   .rodata.PTZ_dat.8662:0000000000000000 $d
     /tmp/ccSZlabO.s:8658   .rodata.PTZ_dat.8662:0000000000000000 PTZ_dat.8662
     /tmp/ccSZlabO.s:8716   .rodata.TP2824C_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:8746   .rodata.REG_F6:0000000000000000 $d
     /tmp/ccSZlabO.s:8756   .rodata.REG_F7:0000000000000000 $d
     /tmp/ccSZlabO.s:8766   .rodata.TP2822_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:8795   .rodata.PTZ_dat.8684:0000000000000000 $d
     /tmp/ccSZlabO.s:8799   .rodata.PTZ_dat.8684:0000000000000000 PTZ_dat.8684
     /tmp/ccSZlabO.s:8873   .rodata.REG_FA:0000000000000000 $d
     /tmp/ccSZlabO.s:8883   .rodata.TP2823_MODE_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:8953   .rodata.TP2833_MODE_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:9029   .rodata.TP2824C_CVIHD_PTZ_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:9103   .rodata.TP2824C_HDA_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:9169   .rodata.TP2853C_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:9203   .rodata.TP2833_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:9229   .rodata.TP2834_Audio_DataSet:0000000000000000 $d
     /tmp/ccSZlabO.s:9271   .rodata.str1.4:0000000000000000 $d
     /tmp/ccSZlabO.s:9460   .rodata.TP2802D_DataSet:0000000000000000 $d
                     .debug_frame:0000000000000010 $d
     /tmp/ccSZlabO.s:438    .text.Set_VidRes:0000000000000039 $d
     /tmp/ccSZlabO.s:438    .text.Set_VidRes:000000000000003a $t
     /tmp/ccSZlabO.s:1240   .text.Det_VidRes:000000000000001b $d
     /tmp/ccSZlabO.s:1240   .text.Det_VidRes:000000000000001c $t
     /tmp/ccSZlabO.s:1704   .text.INPUT_VIDEO_CHECK:000000000000002f $d
     /tmp/ccSZlabO.s:1704   .text.INPUT_VIDEO_CHECK:0000000000000030 $t

UNDEFINED SYMBOLS
tp28xx_byte_write
tp28xx_byte_read
delay
printf
puts
CURRENT_CH
VS4210_Rx_NoSignal
Set_Video_Loss_OSD
SelectInputMode
HAL_Delay
Printf
msleep
VXISI2CWrite
HS_Select_Win
MCUTimerActiveTimerEvent
gbVXIS_InputMode
gbVXIS_OuputModeflg
