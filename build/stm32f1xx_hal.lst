ARM GAS  /tmp/ccaGcnsT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f1xx_hal.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.HAL_MspInit,"ax",%progbits
  19              		.align	2
  20              		.weak	HAL_MspInit
  21              		.thumb
  22              		.thumb_func
  24              	HAL_MspInit:
  25              	.LFB67:
  26              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @file    stm32f1xx_hal.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   @verbatim
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     The HAL contains two APIs' categories:
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   @endverbatim
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @attention
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
ARM GAS  /tmp/ccaGcnsT.s 			page 2


  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #include "stm32f1xx_hal.h"
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @addtogroup STM32F1xx_HAL_Driver
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL HAL
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private define ------------------------------------------------------------*/
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  * @brief STM32F1xx HAL Driver version number V1.1.4
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB1   (0x01U) /*!< [23:16] sub1 version */
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB2   (0x04U) /*!< [15:8]  sub2 version */
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION         ((__STM32F1xx_HAL_VERSION_MAIN << 24)\
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB1 << 16)\
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB2 << 8 )\
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_RC))
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define IDCODE_DEVID_MASK    0x00000FFFU
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Private Variables
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __IO uint32_t uwTick;
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
ARM GAS  /tmp/ccaGcnsT.s 			page 3


  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  *  @brief    Initialization and de-initialization functions
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  *
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****               ##### Initialization and de-initialization functions #####
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    [..]  This section provides functions allowing to:
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           and the backup domain when enabled.
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) de-Initializes common part of the HAL.
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           Tick interrupt priority.
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              handled in milliseconds basis.
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             ISR process will be blocked.
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         HAL function), it performs the following:
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configure the Flash prefetch.
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Set NVIC Group Priority to 4.
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           "stm32f1xx_hal_msp.c" to do the global low level hardware initialization
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         to have correct HAL operation.
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F101x6) || defined(STM32F101xB) || defined(STM32F101xE) || defined(STM32F101xG) ||
ARM GAS  /tmp/ccaGcnsT.s 			page 4


 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F102x6) || defined(STM32F102xB) || \
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) ||
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F105xC) || defined(STM32F107xC)
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Prefetch buffer is not available on value line devices */
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif /* PREFETCH_ENABLE */
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Set Interrupt Group Priority */
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Init the low level hardware */
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspInit();
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function de-Initializes common part of the HAL and stops the systick.
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        of time base.
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is optional.
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* De-Init the low level hardware */
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspDeInit();
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Initialize the MSP.
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspInit(void)
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
  27              		.loc 1 201 0
  28              		.cfi_startproc
ARM GAS  /tmp/ccaGcnsT.s 			page 5


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE67:
  36 0002 00BF     		.section	.text.HAL_MspDeInit,"ax",%progbits
  37              		.align	2
  38              		.weak	HAL_MspDeInit
  39              		.thumb
  40              		.thumb_func
  42              	HAL_MspDeInit:
  43              	.LFB68:
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  DeInitializes the MSP.
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspDeInit(void)
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
  44              		.loc 1 212 0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 0, uses_anonymous_args = 0
  48              		@ link register save eliminated.
  49 0000 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE68:
  53 0002 00BF     		.section	.text.HAL_DeInit,"ax",%progbits
  54              		.align	2
  55              		.global	HAL_DeInit
  56              		.thumb
  57              		.thumb_func
  59              	HAL_DeInit:
  60              	.LFB66:
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
  61              		.loc 1 176 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
  65              		.loc 1 176 0
  66 0000 10B5     		push	{r4, lr}
  67              	.LCFI0:
  68              		.cfi_def_cfa_offset 8
  69              		.cfi_offset 4, -8
  70              		.cfi_offset 14, -4
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  71              		.loc 1 178 0
  72 0002 064B     		ldr	r3, .L5
  73 0004 4FF0FF32 		mov	r2, #-1
  74 0008 DA60     		str	r2, [r3, #12]
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
ARM GAS  /tmp/ccaGcnsT.s 			page 6


  75              		.loc 1 179 0
  76 000a 0024     		movs	r4, #0
  77 000c 1C61     		str	r4, [r3, #16]
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  78              		.loc 1 181 0
  79 000e DA60     		str	r2, [r3, #12]
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  80              		.loc 1 182 0
  81 0010 DC60     		str	r4, [r3, #12]
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  82              		.loc 1 190 0
  83 0012 FFF7FEFF 		bl	HAL_MspDeInit
  84              	.LVL0:
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  85              		.loc 1 194 0
  86 0016 2046     		mov	r0, r4
  87 0018 10BD     		pop	{r4, pc}
  88              	.L6:
  89 001a 00BF     		.align	2
  90              	.L5:
  91 001c 00100240 		.word	1073876992
  92              		.cfi_endproc
  93              	.LFE66:
  95              		.section	.text.HAL_InitTick,"ax",%progbits
  96              		.align	2
  97              		.weak	HAL_InitTick
  98              		.thumb
  99              		.thumb_func
 101              	HAL_InitTick:
 102              	.LFB69:
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function configures the source of the time base.
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        Tick interrupt priority.
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementation  in user file.
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 103              		.loc 1 235 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccaGcnsT.s 			page 7


 107              	.LVL1:
 108 0000 10B5     		push	{r4, lr}
 109              	.LCFI1:
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
 113 0002 0446     		mov	r4, r0
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 114              		.loc 1 237 0
 115 0004 0E4B     		ldr	r3, .L12
 116 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 117              	.LVL2:
 118 0008 4FF47A73 		mov	r3, #1000
 119 000c B3FBF0F3 		udiv	r3, r3, r0
 120 0010 0C4A     		ldr	r2, .L12+4
 121 0012 1068     		ldr	r0, [r2]
 122 0014 B0FBF3F0 		udiv	r0, r0, r3
 123 0018 FFF7FEFF 		bl	HAL_SYSTICK_Config
 124              	.LVL3:
 125 001c 58B9     		cbnz	r0, .L9
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     return HAL_ERROR;
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure the SysTick IRQ priority */
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 126              		.loc 1 243 0
 127 001e 0F2C     		cmp	r4, #15
 128 0020 0BD8     		bhi	.L10
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 129              		.loc 1 245 0
 130 0022 4FF0FF30 		mov	r0, #-1
 131 0026 2146     		mov	r1, r4
 132 0028 0022     		movs	r2, #0
 133 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 134              	.LVL4:
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     uwTickPrio = TickPriority;
 135              		.loc 1 246 0
 136 002e 064B     		ldr	r3, .L12+8
 137 0030 1C60     		str	r4, [r3]
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   else
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     return HAL_ERROR;
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 138              		.loc 1 254 0
 139 0032 0020     		movs	r0, #0
 140 0034 10BD     		pop	{r4, pc}
 141              	.LVL5:
 142              	.L9:
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 143              		.loc 1 239 0
ARM GAS  /tmp/ccaGcnsT.s 			page 8


 144 0036 0120     		movs	r0, #1
 145 0038 10BD     		pop	{r4, pc}
 146              	.LVL6:
 147              	.L10:
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 148              		.loc 1 250 0
 149 003a 0120     		movs	r0, #1
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 150              		.loc 1 255 0
 151 003c 10BD     		pop	{r4, pc}
 152              	.LVL7:
 153              	.L13:
 154 003e 00BF     		.align	2
 155              	.L12:
 156 0040 00000000 		.word	.LANCHOR0
 157 0044 00000000 		.word	SystemCoreClock
 158 0048 00000000 		.word	.LANCHOR1
 159              		.cfi_endproc
 160              	.LFE69:
 162              		.section	.text.HAL_Init,"ax",%progbits
 163              		.align	2
 164              		.global	HAL_Init
 165              		.thumb
 166              		.thumb_func
 168              	HAL_Init:
 169              	.LFB65:
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 170              		.loc 1 143 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174 0000 08B5     		push	{r3, lr}
 175              	.LCFI2:
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 3, -8
 178              		.cfi_offset 14, -4
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 179              		.loc 1 152 0
 180 0002 074A     		ldr	r2, .L16
 181 0004 1368     		ldr	r3, [r2]
 182 0006 43F01003 		orr	r3, r3, #16
 183 000a 1360     		str	r3, [r2]
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 184              		.loc 1 157 0
 185 000c 0320     		movs	r0, #3
 186 000e FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 187              	.LVL8:
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 188              		.loc 1 160 0
 189 0012 0020     		movs	r0, #0
 190 0014 FFF7FEFF 		bl	HAL_InitTick
 191              	.LVL9:
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 192              		.loc 1 163 0
 193 0018 FFF7FEFF 		bl	HAL_MspInit
 194              	.LVL10:
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
ARM GAS  /tmp/ccaGcnsT.s 			page 9


 195              		.loc 1 167 0
 196 001c 0020     		movs	r0, #0
 197 001e 08BD     		pop	{r3, pc}
 198              	.L17:
 199              		.align	2
 200              	.L16:
 201 0020 00200240 		.word	1073881088
 202              		.cfi_endproc
 203              	.LFE65:
 205              		.section	.text.HAL_IncTick,"ax",%progbits
 206              		.align	2
 207              		.weak	HAL_IncTick
 208              		.thumb
 209              		.thumb_func
 211              	HAL_IncTick:
 212              	.LFB70:
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *  @brief    HAL Control functions
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                       ##### HAL Control functions #####
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]  This section provides functions allowing to:
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a tick value in millisecond
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a blocking delay in millisecond
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Suspend the time base source interrupt
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Resume the time base source interrupt
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the HAL API driver version
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device identifier
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device revision identifier
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        used as application time base.
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       in SysTick ISR.
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      implementations in user file.
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_IncTick(void)
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 213              		.loc 1 294 0
 214              		.cfi_startproc
ARM GAS  /tmp/ccaGcnsT.s 			page 10


 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uwTick += uwTickFreq;
 218              		.loc 1 295 0
 219 0000 034A     		ldr	r2, .L19
 220 0002 1368     		ldr	r3, [r2]
 221 0004 0349     		ldr	r1, .L19+4
 222 0006 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 223 0008 0B44     		add	r3, r3, r1
 224 000a 1360     		str	r3, [r2]
 225 000c 7047     		bx	lr
 226              	.L20:
 227 000e 00BF     		.align	2
 228              	.L19:
 229 0010 00000000 		.word	uwTick
 230 0014 00000000 		.word	.LANCHOR0
 231              		.cfi_endproc
 232              	.LFE70:
 234              		.section	.text.HAL_GetTick,"ax",%progbits
 235              		.align	2
 236              		.weak	HAL_GetTick
 237              		.thumb
 238              		.thumb_func
 240              	HAL_GetTick:
 241              	.LFB71:
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Provides a tick value in millisecond.
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note  This function is declared as __weak to be overwritten in case of other
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick value
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 242              		.loc 1 305 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTick;
 247              		.loc 1 306 0
 248 0000 014B     		ldr	r3, .L22
 249 0002 1868     		ldr	r0, [r3]
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 250              		.loc 1 307 0
 251 0004 7047     		bx	lr
 252              	.L23:
 253 0006 00BF     		.align	2
 254              	.L22:
 255 0008 00000000 		.word	uwTick
 256              		.cfi_endproc
 257              	.LFE71:
 259              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 260              		.align	2
 261              		.global	HAL_GetTickPrio
ARM GAS  /tmp/ccaGcnsT.s 			page 11


 262              		.thumb
 263              		.thumb_func
 265              	HAL_GetTickPrio:
 266              	.LFB72:
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function returns a tick priority.
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick priority
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 267              		.loc 1 314 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		@ link register save eliminated.
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTickPrio;
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 272              		.loc 1 316 0
 273 0000 014B     		ldr	r3, .L25
 274 0002 1868     		ldr	r0, [r3]
 275 0004 7047     		bx	lr
 276              	.L26:
 277 0006 00BF     		.align	2
 278              	.L25:
 279 0008 00000000 		.word	.LANCHOR1
 280              		.cfi_endproc
 281              	.LFE72:
 283              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 284              		.align	2
 285              		.global	HAL_SetTickFreq
 286              		.thumb
 287              		.thumb_func
 289              	HAL_SetTickFreq:
 290              	.LFB73:
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Set new tick Freq.
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval status
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 291              		.loc 1 323 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              	.LVL11:
 296 0000 10B5     		push	{r4, lr}
 297              	.LCFI3:
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 4, -8
 300              		.cfi_offset 14, -4
 301 0002 0446     		mov	r4, r0
 302              	.LVL12:
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
ARM GAS  /tmp/ccaGcnsT.s 			page 12


 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (uwTickFreq != Freq)
 303              		.loc 1 327 0
 304 0004 074B     		ldr	r3, .L31
 305 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306 0008 8342     		cmp	r3, r0
 307 000a 08D0     		beq	.L29
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     /* Apply the new tick Freq  */
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 308              		.loc 1 330 0
 309 000c 064B     		ldr	r3, .L31+4
 310 000e 1868     		ldr	r0, [r3]
 311              	.LVL13:
 312 0010 FFF7FEFF 		bl	HAL_InitTick
 313              	.LVL14:
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     if (status == HAL_OK)
 314              		.loc 1 331 0
 315 0014 0346     		mov	r3, r0
 316 0016 18B9     		cbnz	r0, .L28
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     {
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       uwTickFreq = Freq;
 317              		.loc 1 333 0
 318 0018 024A     		ldr	r2, .L31
 319 001a 1470     		strb	r4, [r2]
 320 001c 00E0     		b	.L28
 321              	.LVL15:
 322              	.L29:
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 323              		.loc 1 324 0
 324 001e 0023     		movs	r3, #0
 325              	.LVL16:
 326              	.L28:
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     }
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return status;
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 327              		.loc 1 338 0
 328 0020 1846     		mov	r0, r3
 329 0022 10BD     		pop	{r4, pc}
 330              	.L32:
 331              		.align	2
 332              	.L31:
 333 0024 00000000 		.word	.LANCHOR0
 334 0028 00000000 		.word	.LANCHOR1
 335              		.cfi_endproc
 336              	.LFE73:
 338              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 339              		.align	2
 340              		.global	HAL_GetTickFreq
 341              		.thumb
 342              		.thumb_func
 344              	HAL_GetTickFreq:
 345              	.LFB74:
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Return tick frequency.
ARM GAS  /tmp/ccaGcnsT.s 			page 13


 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick period in Hz
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 346              		.loc 1 345 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              		@ link register save eliminated.
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTickFreq;
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 351              		.loc 1 347 0
 352 0000 014B     		ldr	r3, .L34
 353 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 354 0004 7047     		bx	lr
 355              	.L35:
 356 0006 00BF     		.align	2
 357              	.L34:
 358 0008 00000000 		.word	.LANCHOR0
 359              		.cfi_endproc
 360              	.LFE74:
 362              		.section	.text.HAL_Delay,"ax",%progbits
 363              		.align	2
 364              		.weak	HAL_Delay
 365              		.thumb
 366              		.thumb_func
 368              	HAL_Delay:
 369              	.LFB75:
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        on variable incremented.
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is incremented.
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 370              		.loc 1 361 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              	.LVL17:
 375 0000 38B5     		push	{r3, r4, r5, lr}
 376              	.LCFI4:
 377              		.cfi_def_cfa_offset 16
 378              		.cfi_offset 3, -16
 379              		.cfi_offset 4, -12
 380              		.cfi_offset 5, -8
 381              		.cfi_offset 14, -4
 382 0002 0446     		mov	r4, r0
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 383              		.loc 1 362 0
ARM GAS  /tmp/ccaGcnsT.s 			page 14


 384 0004 FFF7FEFF 		bl	HAL_GetTick
 385              	.LVL18:
 386 0008 0546     		mov	r5, r0
 387              	.LVL19:
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t wait = Delay;
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 388              		.loc 1 366 0
 389 000a B4F1FF3F 		cmp	r4, #-1
 390 000e 02D0     		beq	.L38
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 391              		.loc 1 368 0
 392 0010 044B     		ldr	r3, .L40
 393 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 394 0014 1C44     		add	r4, r4, r3
 395              	.LVL20:
 396              	.L38:
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 397              		.loc 1 371 0 discriminator 1
 398 0016 FFF7FEFF 		bl	HAL_GetTick
 399              	.LVL21:
 400 001a 401B     		subs	r0, r0, r5
 401 001c 8442     		cmp	r4, r0
 402 001e FAD8     		bhi	.L38
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 403              		.loc 1 374 0
 404 0020 38BD     		pop	{r3, r4, r5, pc}
 405              	.LVL22:
 406              	.L41:
 407 0022 00BF     		.align	2
 408              	.L40:
 409 0024 00000000 		.word	.LANCHOR0
 410              		.cfi_endproc
 411              	.LFE75:
 413              		.section	.text.HAL_SuspendTick,"ax",%progbits
 414              		.align	2
 415              		.weak	HAL_SuspendTick
 416              		.thumb
 417              		.thumb_func
 419              	HAL_SuspendTick:
 420              	.LFB76:
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Suspend Tick increment.
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is suspended.
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
ARM GAS  /tmp/ccaGcnsT.s 			page 15


 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_SuspendTick(void)
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 421              		.loc 1 387 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              		@ link register save eliminated.
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Disable SysTick Interrupt */
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_TICKINT_Msk);
 426              		.loc 1 389 0
 427 0000 024A     		ldr	r2, .L43
 428 0002 1368     		ldr	r3, [r2]
 429 0004 23F00203 		bic	r3, r3, #2
 430 0008 1360     		str	r3, [r2]
 431 000a 7047     		bx	lr
 432              	.L44:
 433              		.align	2
 434              	.L43:
 435 000c 10E000E0 		.word	-536813552
 436              		.cfi_endproc
 437              	.LFE76:
 439              		.section	.text.HAL_ResumeTick,"ax",%progbits
 440              		.align	2
 441              		.weak	HAL_ResumeTick
 442              		.thumb
 443              		.thumb_func
 445              	HAL_ResumeTick:
 446              	.LFB77:
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Resume Tick increment.
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is resumed.
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_ResumeTick(void)
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 447              		.loc 1 403 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              		@ link register save eliminated.
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Enable SysTick Interrupt */
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(SysTick->CTRL, SysTick_CTRL_TICKINT_Msk);
 452              		.loc 1 405 0
 453 0000 024A     		ldr	r2, .L46
 454 0002 1368     		ldr	r3, [r2]
 455 0004 43F00203 		orr	r3, r3, #2
 456 0008 1360     		str	r3, [r2]
 457 000a 7047     		bx	lr
 458              	.L47:
ARM GAS  /tmp/ccaGcnsT.s 			page 16


 459              		.align	2
 460              	.L46:
 461 000c 10E000E0 		.word	-536813552
 462              		.cfi_endproc
 463              	.LFE77:
 465              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 466              		.align	2
 467              		.global	HAL_GetHalVersion
 468              		.thumb
 469              		.thumb_func
 471              	HAL_GetHalVersion:
 472              	.LFB78:
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the HAL revision
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval version 0xXYZR (8bits for each decimal, R for RC)
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 473              		.loc 1 413 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477              		@ link register save eliminated.
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return __STM32F1xx_HAL_VERSION;
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 478              		.loc 1 415 0
 479 0000 0048     		ldr	r0, .L49
 480 0002 7047     		bx	lr
 481              	.L50:
 482              		.align	2
 483              	.L49:
 484 0004 00040101 		.word	16843776
 485              		.cfi_endproc
 486              	.LFE78:
 488              		.section	.text.HAL_GetREVID,"ax",%progbits
 489              		.align	2
 490              		.global	HAL_GetREVID
 491              		.thumb
 492              		.thumb_func
 494              	HAL_GetREVID:
 495              	.LFB79:
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Returns the device revision identifier.
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device revision identifier
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetREVID(void)
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
ARM GAS  /tmp/ccaGcnsT.s 			page 17


 496              		.loc 1 429 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return ((DBGMCU->IDCODE) >> DBGMCU_IDCODE_REV_ID_Pos);
 501              		.loc 1 430 0
 502 0000 014B     		ldr	r3, .L52
 503 0002 1868     		ldr	r0, [r3]
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 504              		.loc 1 431 0
 505 0004 000C     		lsrs	r0, r0, #16
 506 0006 7047     		bx	lr
 507              	.L53:
 508              		.align	2
 509              	.L52:
 510 0008 002004E0 		.word	-536600576
 511              		.cfi_endproc
 512              	.LFE79:
 514              		.section	.text.HAL_GetDEVID,"ax",%progbits
 515              		.align	2
 516              		.global	HAL_GetDEVID
 517              		.thumb
 518              		.thumb_func
 520              	HAL_GetDEVID:
 521              	.LFB80:
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the device identifier.
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetDEVID(void)
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 522              		.loc 1 445 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              		@ link register save eliminated.
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return ((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 527              		.loc 1 446 0
 528 0000 024B     		ldr	r3, .L55
 529 0002 1868     		ldr	r0, [r3]
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 530              		.loc 1 447 0
 531 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 532 0008 7047     		bx	lr
 533              	.L56:
 534 000a 00BF     		.align	2
 535              	.L55:
 536 000c 002004E0 		.word	-536600576
ARM GAS  /tmp/ccaGcnsT.s 			page 18


 537              		.cfi_endproc
 538              	.LFE80:
 540              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 541              		.align	2
 542              		.global	HAL_GetUIDw0
 543              		.thumb
 544              		.thumb_func
 546              	HAL_GetUIDw0:
 547              	.LFB81:
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 548              		.loc 1 454 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552              		@ link register save eliminated.
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 553              		.loc 1 456 0
 554 0000 014B     		ldr	r3, .L58
 555 0002 1868     		ldr	r0, [r3]
 556 0004 7047     		bx	lr
 557              	.L59:
 558 0006 00BF     		.align	2
 559              	.L58:
 560 0008 E8F7FF1F 		.word	536868840
 561              		.cfi_endproc
 562              	.LFE81:
 564              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 565              		.align	2
 566              		.global	HAL_GetUIDw1
 567              		.thumb
 568              		.thumb_func
 570              	HAL_GetUIDw1:
 571              	.LFB82:
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 572              		.loc 1 463 0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 577              		.loc 1 465 0
 578 0000 014B     		ldr	r3, .L61
 579 0002 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccaGcnsT.s 			page 19


 580 0004 7047     		bx	lr
 581              	.L62:
 582 0006 00BF     		.align	2
 583              	.L61:
 584 0008 ECF7FF1F 		.word	536868844
 585              		.cfi_endproc
 586              	.LFE82:
 588              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 589              		.align	2
 590              		.global	HAL_GetUIDw2
 591              		.thumb
 592              		.thumb_func
 594              	HAL_GetUIDw2:
 595              	.LFB83:
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 596              		.loc 1 472 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 601              		.loc 1 474 0
 602 0000 014B     		ldr	r3, .L64
 603 0002 1868     		ldr	r0, [r3]
 604 0004 7047     		bx	lr
 605              	.L65:
 606 0006 00BF     		.align	2
 607              	.L64:
 608 0008 F0F7FF1F 		.word	536868848
 609              		.cfi_endproc
 610              	.LFE83:
 612              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 613              		.align	2
 614              		.global	HAL_DBGMCU_EnableDBGSleepMode
 615              		.thumb
 616              		.thumb_func
 618              	HAL_DBGMCU_EnableDBGSleepMode:
 619              	.LFB84:
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 620              		.loc 1 481 0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              		@ link register save eliminated.
ARM GAS  /tmp/ccaGcnsT.s 			page 20


 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 625              		.loc 1 482 0
 626 0000 024A     		ldr	r2, .L67
 627 0002 5368     		ldr	r3, [r2, #4]
 628 0004 43F00103 		orr	r3, r3, #1
 629 0008 5360     		str	r3, [r2, #4]
 630 000a 7047     		bx	lr
 631              	.L68:
 632              		.align	2
 633              	.L67:
 634 000c 002004E0 		.word	-536600576
 635              		.cfi_endproc
 636              	.LFE84:
 638              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 639              		.align	2
 640              		.global	HAL_DBGMCU_DisableDBGSleepMode
 641              		.thumb
 642              		.thumb_func
 644              	HAL_DBGMCU_DisableDBGSleepMode:
 645              	.LFB85:
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 646              		.loc 1 497 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              		@ link register save eliminated.
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 651              		.loc 1 498 0
 652 0000 024A     		ldr	r2, .L70
 653 0002 5368     		ldr	r3, [r2, #4]
 654 0004 23F00103 		bic	r3, r3, #1
 655 0008 5360     		str	r3, [r2, #4]
 656 000a 7047     		bx	lr
 657              	.L71:
 658              		.align	2
 659              	.L70:
 660 000c 002004E0 		.word	-536600576
 661              		.cfi_endproc
 662              	.LFE85:
 664              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 665              		.align	2
 666              		.global	HAL_DBGMCU_EnableDBGStopMode
 667              		.thumb
ARM GAS  /tmp/ccaGcnsT.s 			page 21


 668              		.thumb_func
 670              	HAL_DBGMCU_EnableDBGStopMode:
 671              	.LFB86:
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 672              		.loc 1 527 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 0
 675              		@ frame_needed = 0, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 677              		.loc 1 528 0
 678 0000 024A     		ldr	r2, .L73
 679 0002 5368     		ldr	r3, [r2, #4]
 680 0004 43F00203 		orr	r3, r3, #2
 681 0008 5360     		str	r3, [r2, #4]
 682 000a 7047     		bx	lr
 683              	.L74:
 684              		.align	2
 685              	.L73:
 686 000c 002004E0 		.word	-536600576
 687              		.cfi_endproc
 688              	.LFE86:
 690              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 691              		.align	2
 692              		.global	HAL_DBGMCU_DisableDBGStopMode
 693              		.thumb
 694              		.thumb_func
 696              	HAL_DBGMCU_DisableDBGStopMode:
 697              	.LFB87:
ARM GAS  /tmp/ccaGcnsT.s 			page 22


 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 698              		.loc 1 543 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702              		@ link register save eliminated.
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 703              		.loc 1 544 0
 704 0000 024A     		ldr	r2, .L76
 705 0002 5368     		ldr	r3, [r2, #4]
 706 0004 23F00203 		bic	r3, r3, #2
 707 0008 5360     		str	r3, [r2, #4]
 708 000a 7047     		bx	lr
 709              	.L77:
 710              		.align	2
 711              	.L76:
 712 000c 002004E0 		.word	-536600576
 713              		.cfi_endproc
 714              	.LFE87:
 716              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 717              		.align	2
 718              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 719              		.thumb
 720              		.thumb_func
 722              	HAL_DBGMCU_EnableDBGStandbyMode:
 723              	.LFB88:
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 724              		.loc 1 559 0
 725              		.cfi_startproc
ARM GAS  /tmp/ccaGcnsT.s 			page 23


 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              		@ link register save eliminated.
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 729              		.loc 1 560 0
 730 0000 024A     		ldr	r2, .L79
 731 0002 5368     		ldr	r3, [r2, #4]
 732 0004 43F00403 		orr	r3, r3, #4
 733 0008 5360     		str	r3, [r2, #4]
 734 000a 7047     		bx	lr
 735              	.L80:
 736              		.align	2
 737              	.L79:
 738 000c 002004E0 		.word	-536600576
 739              		.cfi_endproc
 740              	.LFE88:
 742              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 743              		.align	2
 744              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 745              		.thumb
 746              		.thumb_func
 748              	HAL_DBGMCU_DisableDBGStandbyMode:
 749              	.LFB89:
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 750              		.loc 1 575 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 0
 753              		@ frame_needed = 0, uses_anonymous_args = 0
 754              		@ link register save eliminated.
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 755              		.loc 1 576 0
 756 0000 024A     		ldr	r2, .L82
 757 0002 5368     		ldr	r3, [r2, #4]
 758 0004 23F00403 		bic	r3, r3, #4
 759 0008 5360     		str	r3, [r2, #4]
 760 000a 7047     		bx	lr
 761              	.L83:
 762              		.align	2
 763              	.L82:
 764 000c 002004E0 		.word	-536600576
 765              		.cfi_endproc
 766              	.LFE89:
 768              		.global	uwTickFreq
ARM GAS  /tmp/ccaGcnsT.s 			page 24


 769              		.global	uwTickPrio
 770              		.comm	uwTick,4,4
 771              		.section	.data.uwTickPrio,"aw",%progbits
 772              		.align	2
 773              		.set	.LANCHOR1,. + 0
 776              	uwTickPrio:
 777 0000 10000000 		.word	16
 778              		.section	.data.uwTickFreq,"aw",%progbits
 779              		.set	.LANCHOR0,. + 0
 782              	uwTickFreq:
 783 0000 01       		.byte	1
 784              		.text
 785              	.Letext0:
 786              		.file 2 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 787              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 788              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 789              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 790              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 791              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 792              		.file 8 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 793              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/ccaGcnsT.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal.c
     /tmp/ccaGcnsT.s:19     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccaGcnsT.s:24     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccaGcnsT.s:37     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccaGcnsT.s:42     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccaGcnsT.s:54     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccaGcnsT.s:59     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccaGcnsT.s:91     .text.HAL_DeInit:000000000000001c $d
     /tmp/ccaGcnsT.s:96     .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccaGcnsT.s:101    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccaGcnsT.s:156    .text.HAL_InitTick:0000000000000040 $d
     /tmp/ccaGcnsT.s:163    .text.HAL_Init:0000000000000000 $t
     /tmp/ccaGcnsT.s:168    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccaGcnsT.s:201    .text.HAL_Init:0000000000000020 $d
     /tmp/ccaGcnsT.s:206    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccaGcnsT.s:211    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccaGcnsT.s:229    .text.HAL_IncTick:0000000000000010 $d
                            *COM*:0000000000000004 uwTick
     /tmp/ccaGcnsT.s:235    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccaGcnsT.s:240    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccaGcnsT.s:255    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccaGcnsT.s:260    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccaGcnsT.s:265    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccaGcnsT.s:279    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/ccaGcnsT.s:284    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccaGcnsT.s:289    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccaGcnsT.s:333    .text.HAL_SetTickFreq:0000000000000024 $d
     /tmp/ccaGcnsT.s:339    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccaGcnsT.s:344    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccaGcnsT.s:358    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/ccaGcnsT.s:363    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccaGcnsT.s:368    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccaGcnsT.s:409    .text.HAL_Delay:0000000000000024 $d
     /tmp/ccaGcnsT.s:414    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccaGcnsT.s:419    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccaGcnsT.s:435    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/ccaGcnsT.s:440    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccaGcnsT.s:445    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccaGcnsT.s:461    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/ccaGcnsT.s:466    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccaGcnsT.s:471    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccaGcnsT.s:484    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/ccaGcnsT.s:489    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccaGcnsT.s:494    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccaGcnsT.s:510    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccaGcnsT.s:515    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccaGcnsT.s:520    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccaGcnsT.s:536    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccaGcnsT.s:541    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccaGcnsT.s:546    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccaGcnsT.s:560    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/ccaGcnsT.s:565    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccaGcnsT.s:570    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/ccaGcnsT.s:584    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/ccaGcnsT.s:589    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccaGcnsT.s:594    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
ARM GAS  /tmp/ccaGcnsT.s 			page 26


     /tmp/ccaGcnsT.s:608    .text.HAL_GetUIDw2:0000000000000008 $d
     /tmp/ccaGcnsT.s:613    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/ccaGcnsT.s:618    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccaGcnsT.s:634    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/ccaGcnsT.s:639    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccaGcnsT.s:644    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccaGcnsT.s:660    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/ccaGcnsT.s:665    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccaGcnsT.s:670    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccaGcnsT.s:686    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/ccaGcnsT.s:691    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccaGcnsT.s:696    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccaGcnsT.s:712    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccaGcnsT.s:717    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccaGcnsT.s:722    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccaGcnsT.s:738    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccaGcnsT.s:743    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccaGcnsT.s:748    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccaGcnsT.s:764    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/ccaGcnsT.s:782    .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccaGcnsT.s:776    .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccaGcnsT.s:772    .data.uwTickPrio:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
