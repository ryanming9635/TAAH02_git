ARM GAS  /tmp/ccwHfacM.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"monitor.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.RS_ready,"ax",%progbits
  16              		.align	1
  17              		.global	RS_ready
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	RS_ready:
  24              	.LFB68:
  25              		.file 1 "VS4210/monitor.c"
   1:VS4210/monitor.c **** /*****************************************************************************/
   2:VS4210/monitor.c **** /*                                                                           										*/
   3:VS4210/monitor.c **** /*  TELI ML070I   MCU                    													*/
   4:VS4210/monitor.c **** /*                                                                           										*/
   5:VS4210/monitor.c **** /*  Monitor.c		                                            										*/
   6:VS4210/monitor.c **** /*                                                                           										*/
   7:VS4210/monitor.c **** /*****************************************************************************/
   8:VS4210/monitor.c **** #include "VXIS_Extern_Define.h"
   9:VS4210/monitor.c **** 
  10:VS4210/monitor.c **** #include "tpinc/Device_Rx.h"
  11:VS4210/monitor.c **** #include "tpinc/TP2802.h"
  12:VS4210/monitor.c **** #include "stdlib.h"
  13:VS4210/monitor.c **** #include "VX_swi2c.h"
  14:VS4210/monitor.c **** #include "VS4210.h"
  15:VS4210/monitor.c **** 
  16:VS4210/monitor.c **** //#include "config.h"
  17:VS4210/monitor.c **** 
  18:VS4210/monitor.c **** //#ifdef SERIAL
  19:VS4210/monitor.c **** 
  20:VS4210/monitor.c **** //#include "typedefs.h"
  21:VS4210/monitor.c **** #include "main.h"
  22:VS4210/monitor.c **** //#include "i2c.h"
  23:VS4210/monitor.c **** //#include "reg.h"
  24:VS4210/monitor.c **** #include "printf.h"
  25:VS4210/monitor.c **** //#include "etc_eep.h"
  26:VS4210/monitor.c **** #include "monitor.h"
  27:VS4210/monitor.c **** //#include "cpu.h"
  28:VS4210/monitor.c **** //#include "Adc.h"
  29:VS4210/monitor.c **** 
  30:VS4210/monitor.c **** IDATA BYTE MonAddress = 0x8a;		// initialize value should be placed to IDATA area
  31:VS4210/monitor.c **** BYTE MonIndex;
  32:VS4210/monitor.c **** BYTE MonRdata, MonWdata;
  33:VS4210/monitor.c **** BYTE monstr[30];		// buffer for input string
ARM GAS  /tmp/ccwHfacM.s 			page 2


  34:VS4210/monitor.c **** #if 1
  35:VS4210/monitor.c **** BYTE *argv[7];
  36:VS4210/monitor.c **** //char *argv[7];
  37:VS4210/monitor.c **** #else
  38:VS4210/monitor.c **** volatile  BYTE *argv[7];
  39:VS4210/monitor.c **** //char *argv[7];
  40:VS4210/monitor.c **** #endif
  41:VS4210/monitor.c **** BYTE argc=0;
  42:VS4210/monitor.c **** bit	echo=1;
  43:VS4210/monitor.c **** 
  44:VS4210/monitor.c **** BYTE Monitor_flag=OFF;
  45:VS4210/monitor.c **** BYTE Monitor_I2C=0x40;//0x88;//0x40;///0x90;//0x40;//0x28;//0x12;//EEPROM_24C02_addr;
  46:VS4210/monitor.c **** 
  47:VS4210/monitor.c **** 		DATA BYTE	RS_buf[BUF_MAX];
  48:VS4210/monitor.c ****         	DATA BYTE   	RS2_buf[TOA_BUF_MAX];
  49:VS4210/monitor.c **** 		DATA BYTE	DVR_buf[DVR_BUF_MAX];
  50:VS4210/monitor.c **** 
  51:VS4210/monitor.c **** 		
  52:VS4210/monitor.c **** 		DATA BYTE   RS_in=0, RS_out=0;
  53:VS4210/monitor.c **** 		DATA BYTE   RS2_in=0, RS2_out=0;
  54:VS4210/monitor.c **** 		bit	        RS_Xbusy=0;			// bit RS_Xbusy=0;
  55:VS4210/monitor.c **** 		bit 		RS2_Xbusy=0; 		// bit RS_Xbusy=0;
  56:VS4210/monitor.c **** 
  57:VS4210/monitor.c **** BYTE bytVersionFlag=0;
  58:VS4210/monitor.c **** 
  59:VS4210/monitor.c **** static bit indirect=0;
  60:VS4210/monitor.c **** extern BYTE TriggerFlag;
  61:VS4210/monitor.c **** 
  62:VS4210/monitor.c **** //extern		  bit	AutoDetect;
  63:VS4210/monitor.c **** extern   BYTE InputSelection;
  64:VS4210/monitor.c **** extern	      BYTE	DebugLevel;
  65:VS4210/monitor.c **** //extern  CODE  struct struct_IdName struct_InputSelection[];
  66:VS4210/monitor.c **** extern 		  bit	NoInitAccess;
  67:VS4210/monitor.c ****  		  bit	AccessEnable=1;
  68:VS4210/monitor.c **** extern  BYTE PSW_Flag;
  69:VS4210/monitor.c **** extern BYTE year1,year2,month,day,hour,minute,second;
  70:VS4210/monitor.c **** 
  71:VS4210/monitor.c **** extern UART_HandleTypeDef huart1;
  72:VS4210/monitor.c **** extern UART_HandleTypeDef huart2;
  73:VS4210/monitor.c **** extern tByte	count[4];
  74:VS4210/monitor.c **** extern tByte	state[4];
  75:VS4210/monitor.c **** extern tByte	count[4];
  76:VS4210/monitor.c **** extern tByte	mode[4];
  77:VS4210/monitor.c **** extern tByte	std[4];
  78:VS4210/monitor.c **** extern tByte	egain[4][4];
  79:VS4210/monitor.c **** extern  tByte TP_InputMode;
  80:VS4210/monitor.c **** extern BYTE SelectInputMode;///0=HDMI , 1=AHD
  81:VS4210/monitor.c **** extern tByte bSignal[4] ;
  82:VS4210/monitor.c **** extern BYTE TVI_Command;
  83:VS4210/monitor.c **** extern BYTE presetNum;
  84:VS4210/monitor.c **** extern BYTE TVI_Chksum;
  85:VS4210/monitor.c **** extern BYTE TVI_speed;
  86:VS4210/monitor.c **** extern bit ptztxflag;
  87:VS4210/monitor.c **** 
  88:VS4210/monitor.c **** //char * asctime(const struct tm * timeptr);
  89:VS4210/monitor.c **** //char *ctime(const time_t *timep);
  90:VS4210/monitor.c **** 
ARM GAS  /tmp/ccwHfacM.s 			page 3


  91:VS4210/monitor.c **** //=============================================================================
  92:VS4210/monitor.c **** //		Serial RX Check 												   
  93:VS4210/monitor.c **** //=============================================================================
  94:VS4210/monitor.c **** BYTE RS_ready(void)
  95:VS4210/monitor.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  96:VS4210/monitor.c **** 	if( RS_in == RS_out ) return 0;
  31              		.loc 1 96 0
  32 0000 044B     		ldr	r3, .L5
  33 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  34 0004 044B     		ldr	r3, .L5+4
  35 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  36 0008 9A42     		cmp	r2, r3
  37 000a 01D0     		beq	.L4
  97:VS4210/monitor.c **** 	else return 1;
  38              		.loc 1 97 0
  39 000c 0120     		movs	r0, #1
  98:VS4210/monitor.c **** }
  40              		.loc 1 98 0
  41 000e 7047     		bx	lr
  42              	.L4:
  96:VS4210/monitor.c **** 	if( RS_in == RS_out ) return 0;
  43              		.loc 1 96 0
  44 0010 0020     		movs	r0, #0
  45 0012 7047     		bx	lr
  46              	.L6:
  47              		.align	2
  48              	.L5:
  49 0014 00000000 		.word	.LANCHOR0
  50 0018 00000000 		.word	.LANCHOR1
  51              		.cfi_endproc
  52              	.LFE68:
  54              		.section	.text.RS2_ready,"ax",%progbits
  55              		.align	1
  56              		.global	RS2_ready
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu softvfp
  62              	RS2_ready:
  63              	.LFB69:
  99:VS4210/monitor.c **** 
 100:VS4210/monitor.c **** BYTE RS2_ready(void)
 101:VS4210/monitor.c **** {
  64              		.loc 1 101 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
 102:VS4210/monitor.c **** 	if( RS2_in == RS2_out ) return 0;
  69              		.loc 1 102 0
  70 0000 044B     		ldr	r3, .L11
  71 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccwHfacM.s 			page 4


  72 0004 044B     		ldr	r3, .L11+4
  73 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  74 0008 9A42     		cmp	r2, r3
  75 000a 01D0     		beq	.L10
 103:VS4210/monitor.c **** 	else return 1;
  76              		.loc 1 103 0
  77 000c 0120     		movs	r0, #1
 104:VS4210/monitor.c **** }
  78              		.loc 1 104 0
  79 000e 7047     		bx	lr
  80              	.L10:
 102:VS4210/monitor.c **** 	if( RS2_in == RS2_out ) return 0;
  81              		.loc 1 102 0
  82 0010 0020     		movs	r0, #0
  83 0012 7047     		bx	lr
  84              	.L12:
  85              		.align	2
  86              	.L11:
  87 0014 00000000 		.word	.LANCHOR2
  88 0018 00000000 		.word	.LANCHOR3
  89              		.cfi_endproc
  90              	.LFE69:
  92              		.section	.text.RS_rx,"ax",%progbits
  93              		.align	1
  94              		.global	RS_rx
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu softvfp
 100              	RS_rx:
 101              	.LFB70:
 105:VS4210/monitor.c **** 
 106:VS4210/monitor.c **** //#ifdef Hs_debug
 107:VS4210/monitor.c **** //=============================================================================
 108:VS4210/monitor.c **** //		Serial RX														   
 109:VS4210/monitor.c **** //=============================================================================
 110:VS4210/monitor.c **** BYTE RS_rx(void)
 111:VS4210/monitor.c **** {
 102              		.loc 1 111 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 112:VS4210/monitor.c **** 	BYTE ret;
 113:VS4210/monitor.c **** 		
 114:VS4210/monitor.c **** //	ES = 0;
 115:VS4210/monitor.c **** 	ret = RS_buf[RS_out];
 107              		.loc 1 115 0
 108 0000 064A     		ldr	r2, .L15
 109 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 110 0004 0649     		ldr	r1, .L15+4
 111 0006 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 112              	.LVL0:
 116:VS4210/monitor.c **** //	ret = DVR_buf[RS_out];
 117:VS4210/monitor.c **** 	RS_out++;
 113              		.loc 1 117 0
 114 0008 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccwHfacM.s 			page 5


 115 000a DBB2     		uxtb	r3, r3
 116 000c 1370     		strb	r3, [r2]
 118:VS4210/monitor.c **** 	if(RS_out >= BUF_MAX) 
 117              		.loc 1 118 0
 118 000e 1D2B     		cmp	r3, #29
 119 0010 02D9     		bls	.L14
 119:VS4210/monitor.c **** 		RS_out = 0;
 120              		.loc 1 119 0
 121 0012 1346     		mov	r3, r2
 122 0014 0022     		movs	r2, #0
 123 0016 1A70     		strb	r2, [r3]
 124              	.L14:
 120:VS4210/monitor.c **** //	ES = 1;
 121:VS4210/monitor.c **** 
 122:VS4210/monitor.c **** 	return ret;
 123:VS4210/monitor.c **** }
 125              		.loc 1 123 0
 126 0018 7047     		bx	lr
 127              	.L16:
 128 001a 00BF     		.align	2
 129              	.L15:
 130 001c 00000000 		.word	.LANCHOR1
 131 0020 00000000 		.word	RS_buf
 132              		.cfi_endproc
 133              	.LFE70:
 135              		.section	.text.RS2_rx,"ax",%progbits
 136              		.align	1
 137              		.global	RS2_rx
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu softvfp
 143              	RS2_rx:
 144              	.LFB71:
 124:VS4210/monitor.c **** 
 125:VS4210/monitor.c **** BYTE RS2_rx(void)
 126:VS4210/monitor.c **** {
 145              		.loc 1 126 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 127:VS4210/monitor.c **** 	BYTE ret;
 128:VS4210/monitor.c **** 		
 129:VS4210/monitor.c **** //	ES = 0;
 130:VS4210/monitor.c **** 	ret = RS2_buf[RS2_out];
 150              		.loc 1 130 0
 151 0000 064A     		ldr	r2, .L19
 152 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 153 0004 0649     		ldr	r1, .L19+4
 154 0006 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 155              	.LVL1:
 131:VS4210/monitor.c **** //	ret = DVR_buf[RS_out];
 132:VS4210/monitor.c **** 	RS2_out++;
 156              		.loc 1 132 0
 157 0008 0133     		adds	r3, r3, #1
 158 000a DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccwHfacM.s 			page 6


 159 000c 1370     		strb	r3, [r2]
 133:VS4210/monitor.c **** 	if(RS2_out >= TOA_BUF_MAX) 
 160              		.loc 1 133 0
 161 000e C72B     		cmp	r3, #199
 162 0010 02D9     		bls	.L18
 134:VS4210/monitor.c **** 		RS2_out = 0;
 163              		.loc 1 134 0
 164 0012 1346     		mov	r3, r2
 165 0014 0022     		movs	r2, #0
 166 0016 1A70     		strb	r2, [r3]
 167              	.L18:
 135:VS4210/monitor.c **** //	ES = 1;
 136:VS4210/monitor.c **** 
 137:VS4210/monitor.c **** 	return ret;
 138:VS4210/monitor.c **** }
 168              		.loc 1 138 0
 169 0018 7047     		bx	lr
 170              	.L20:
 171 001a 00BF     		.align	2
 172              	.L19:
 173 001c 00000000 		.word	.LANCHOR3
 174 0020 00000000 		.word	RS2_buf
 175              		.cfi_endproc
 176              	.LFE71:
 178              		.section	.text.RS_tx,"ax",%progbits
 179              		.align	1
 180              		.global	RS_tx
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu softvfp
 186              	RS_tx:
 187              	.LFB72:
 139:VS4210/monitor.c **** 
 140:VS4210/monitor.c **** 
 141:VS4210/monitor.c **** //=============================================================================
 142:VS4210/monitor.c **** //		Serial TX														   
 143:VS4210/monitor.c **** //=============================================================================
 144:VS4210/monitor.c **** void RS_tx(BYTE tx_buf)
 145:VS4210/monitor.c **** {
 188              		.loc 1 145 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 8
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              	.LVL2:
 193 0000 00B5     		push	{lr}
 194              	.LCFI0:
 195              		.cfi_def_cfa_offset 4
 196              		.cfi_offset 14, -4
 197 0002 83B0     		sub	sp, sp, #12
 198              	.LCFI1:
 199              		.cfi_def_cfa_offset 16
 200 0004 02A9     		add	r1, sp, #8
 201 0006 01F8010D 		strb	r0, [r1, #-1]!
 146:VS4210/monitor.c **** 
 147:VS4210/monitor.c **** 
 148:VS4210/monitor.c **** HAL_UART_Transmit(&huart1,&tx_buf,1,0xffff);
ARM GAS  /tmp/ccwHfacM.s 			page 7


 202              		.loc 1 148 0
 203 000a 4FF6FF73 		movw	r3, #65535
 204 000e 0122     		movs	r2, #1
 205 0010 0248     		ldr	r0, .L23
 206              	.LVL3:
 207 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 208              	.LVL4:
 149:VS4210/monitor.c **** //USART1->DR = tx_buf;
 150:VS4210/monitor.c **** //while(0 == (USART1->SR&(1<<6)));
 151:VS4210/monitor.c **** 
 152:VS4210/monitor.c **** }
 209              		.loc 1 152 0
 210 0016 03B0     		add	sp, sp, #12
 211              	.LCFI2:
 212              		.cfi_def_cfa_offset 4
 213              		@ sp needed
 214 0018 5DF804FB 		ldr	pc, [sp], #4
 215              	.L24:
 216              		.align	2
 217              	.L23:
 218 001c 00000000 		.word	huart1
 219              		.cfi_endproc
 220              	.LFE72:
 222              		.section	.text.RS2_tx,"ax",%progbits
 223              		.align	1
 224              		.global	RS2_tx
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu softvfp
 230              	RS2_tx:
 231              	.LFB73:
 153:VS4210/monitor.c **** 
 154:VS4210/monitor.c **** void RS2_tx(BYTE tx_buf)
 155:VS4210/monitor.c **** {
 232              		.loc 1 155 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 8
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              	.LVL5:
 237 0000 00B5     		push	{lr}
 238              	.LCFI3:
 239              		.cfi_def_cfa_offset 4
 240              		.cfi_offset 14, -4
 241 0002 83B0     		sub	sp, sp, #12
 242              	.LCFI4:
 243              		.cfi_def_cfa_offset 16
 244 0004 02A9     		add	r1, sp, #8
 245 0006 01F8010D 		strb	r0, [r1, #-1]!
 156:VS4210/monitor.c **** 
 157:VS4210/monitor.c **** 
 158:VS4210/monitor.c **** HAL_UART_Transmit(&huart2,&tx_buf,1,0xffff);
 246              		.loc 1 158 0
 247 000a 4FF6FF73 		movw	r3, #65535
 248 000e 0122     		movs	r2, #1
 249 0010 0248     		ldr	r0, .L27
 250              	.LVL6:
ARM GAS  /tmp/ccwHfacM.s 			page 8


 251 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 252              	.LVL7:
 159:VS4210/monitor.c **** //USART2->DR = tx_buf;
 160:VS4210/monitor.c **** //while(0 == (USART2->SR&(1<<6)));
 161:VS4210/monitor.c **** 
 162:VS4210/monitor.c **** }
 253              		.loc 1 162 0
 254 0016 03B0     		add	sp, sp, #12
 255              	.LCFI5:
 256              		.cfi_def_cfa_offset 4
 257              		@ sp needed
 258 0018 5DF804FB 		ldr	pc, [sp], #4
 259              	.L28:
 260              		.align	2
 261              	.L27:
 262 001c 00000000 		.word	huart2
 263              		.cfi_endproc
 264              	.LFE73:
 266              		.section	.text.Prompt,"ax",%progbits
 267              		.align	1
 268              		.global	Prompt
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 272              		.fpu softvfp
 274              	Prompt:
 275              	.LFB74:
 163:VS4210/monitor.c **** 
 164:VS4210/monitor.c **** //void Loader(BYTE);
 165:VS4210/monitor.c **** 
 166:VS4210/monitor.c **** //=============================================================================
 167:VS4210/monitor.c **** //
 168:VS4210/monitor.c **** //=============================================================================
 169:VS4210/monitor.c **** void Prompt(void)
 170:VS4210/monitor.c **** {
 276              		.loc 1 170 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 171:VS4210/monitor.c **** if(bytVersionFlag)
 280              		.loc 1 171 0
 281 0000 1E4B     		ldr	r3, .L42
 282 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 283 0004 9BB9     		cbnz	r3, .L38
 170:VS4210/monitor.c **** if(bytVersionFlag)
 284              		.loc 1 170 0
 285 0006 00B5     		push	{lr}
 286              	.LCFI6:
 287              		.cfi_def_cfa_offset 4
 288              		.cfi_offset 14, -4
 289 0008 83B0     		sub	sp, sp, #12
 290              	.LCFI7:
 291              		.cfi_def_cfa_offset 16
 172:VS4210/monitor.c **** 	bytVersionFlag=0;
 173:VS4210/monitor.c **** else
 174:VS4210/monitor.c **** {
 175:VS4210/monitor.c **** 
ARM GAS  /tmp/ccwHfacM.s 			page 9


 176:VS4210/monitor.c **** 	if(day)
 292              		.loc 1 176 0
 293 000a 1D4B     		ldr	r3, .L42+4
 294 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 295 000e 92B9     		cbnz	r2, .L39
 177:VS4210/monitor.c **** 	{
 178:VS4210/monitor.c **** 	Printf("\r\nMCU_I2C[%02x][%d:%d:%d:%d]>",(WORD)Monitor_I2C,(WORD)day,(WORD)hour,(WORD)minute,(WORD
 179:VS4210/monitor.c **** 	}
 180:VS4210/monitor.c **** 	else if(hour)
 296              		.loc 1 180 0
 297 0010 1C4B     		ldr	r3, .L42+8
 298 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 299 0014 FAB9     		cbnz	r2, .L40
 181:VS4210/monitor.c **** 	{
 182:VS4210/monitor.c **** 	Printf("\r\nMCU_I2C[%02x][%d:%d:%d]>",(WORD)Monitor_I2C,(WORD)hour,(WORD)minute,(WORD)second);
 183:VS4210/monitor.c **** 	}
 184:VS4210/monitor.c **** 	else if(minute)
 300              		.loc 1 184 0
 301 0016 1C4B     		ldr	r3, .L42+12
 302 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 303 001a 002A     		cmp	r2, #0
 304 001c 26D1     		bne	.L41
 185:VS4210/monitor.c **** 		{
 186:VS4210/monitor.c **** 		Printf("\r\nMCU_I2C[%02x][%d:%d]>",(WORD)Monitor_I2C,(WORD)minute,(WORD)second);
 187:VS4210/monitor.c **** 		}
 188:VS4210/monitor.c **** 	else
 189:VS4210/monitor.c **** 		{
 190:VS4210/monitor.c **** 		Printf("\r\nMCU_I2C[%02x][%d]>",(WORD)Monitor_I2C,(WORD)second);
 305              		.loc 1 190 0
 306 001e 1B4B     		ldr	r3, .L42+16
 307 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 308 0022 1B4B     		ldr	r3, .L42+20
 309 0024 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 310 0026 1B48     		ldr	r0, .L42+24
 311 0028 FFF7FEFF 		bl	Printf
 312              	.LVL8:
 191:VS4210/monitor.c **** 		}
 192:VS4210/monitor.c **** }
 193:VS4210/monitor.c **** }
 313              		.loc 1 193 0
 314 002c 10E0     		b	.L29
 315              	.L38:
 316              	.LCFI8:
 317              		.cfi_def_cfa_offset 0
 318              		.cfi_restore 14
 172:VS4210/monitor.c **** else
 319              		.loc 1 172 0
 320 002e 134B     		ldr	r3, .L42
 321 0030 0022     		movs	r2, #0
 322 0032 1A70     		strb	r2, [r3]
 323 0034 7047     		bx	lr
 324              	.L39:
 325              	.LCFI9:
 326              		.cfi_def_cfa_offset 16
 327              		.cfi_offset 14, -4
 178:VS4210/monitor.c **** 	}
 328              		.loc 1 178 0
ARM GAS  /tmp/ccwHfacM.s 			page 10


 329 0036 134B     		ldr	r3, .L42+8
 330 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 331 003a 1549     		ldr	r1, .L42+20
 332 003c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 333 003e 1348     		ldr	r0, .L42+16
 334 0040 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 335 0042 0190     		str	r0, [sp, #4]
 336 0044 1048     		ldr	r0, .L42+12
 337 0046 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 338 0048 0090     		str	r0, [sp]
 339 004a 1348     		ldr	r0, .L42+28
 340 004c FFF7FEFF 		bl	Printf
 341              	.LVL9:
 342              	.L29:
 343              		.loc 1 193 0
 344 0050 03B0     		add	sp, sp, #12
 345              	.LCFI10:
 346              		.cfi_remember_state
 347              		.cfi_def_cfa_offset 4
 348              		@ sp needed
 349 0052 5DF804FB 		ldr	pc, [sp], #4
 350              	.L40:
 351              	.LCFI11:
 352              		.cfi_restore_state
 182:VS4210/monitor.c **** 	}
 353              		.loc 1 182 0
 354 0056 0C4B     		ldr	r3, .L42+12
 355 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 356 005a 0D49     		ldr	r1, .L42+20
 357 005c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 358 005e 0B48     		ldr	r0, .L42+16
 359 0060 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 360 0062 0090     		str	r0, [sp]
 361 0064 0D48     		ldr	r0, .L42+32
 362 0066 FFF7FEFF 		bl	Printf
 363              	.LVL10:
 364 006a F1E7     		b	.L29
 365              	.L41:
 186:VS4210/monitor.c **** 		}
 366              		.loc 1 186 0
 367 006c 074B     		ldr	r3, .L42+16
 368 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 369 0070 0749     		ldr	r1, .L42+20
 370 0072 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 371 0074 0A48     		ldr	r0, .L42+36
 372 0076 FFF7FEFF 		bl	Printf
 373              	.LVL11:
 374 007a E9E7     		b	.L29
 375              	.L43:
 376              		.align	2
 377              	.L42:
 378 007c 00000000 		.word	.LANCHOR4
 379 0080 00000000 		.word	day
 380 0084 00000000 		.word	hour
 381 0088 00000000 		.word	minute
 382 008c 00000000 		.word	second
 383 0090 00000000 		.word	.LANCHOR5
ARM GAS  /tmp/ccwHfacM.s 			page 11


 384 0094 54000000 		.word	.LC3
 385 0098 00000000 		.word	.LC0
 386 009c 20000000 		.word	.LC1
 387 00a0 3C000000 		.word	.LC2
 388              		.cfi_endproc
 389              	.LFE74:
 391              		.section	.text.Mon_tx,"ax",%progbits
 392              		.align	1
 393              		.global	Mon_tx
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 397              		.fpu softvfp
 399              	Mon_tx:
 400              	.LFB75:
 194:VS4210/monitor.c **** 
 195:VS4210/monitor.c **** void Mon_tx(BYTE ch)
 196:VS4210/monitor.c **** {
 401              		.loc 1 196 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              	.LVL12:
 406 0000 08B5     		push	{r3, lr}
 407              	.LCFI12:
 408              		.cfi_def_cfa_offset 8
 409              		.cfi_offset 3, -8
 410              		.cfi_offset 14, -4
 197:VS4210/monitor.c **** 	RS_tx(ch);
 411              		.loc 1 197 0
 412 0002 FFF7FEFF 		bl	RS_tx
 413              	.LVL13:
 198:VS4210/monitor.c **** }
 414              		.loc 1 198 0
 415 0006 08BD     		pop	{r3, pc}
 416              		.cfi_endproc
 417              	.LFE75:
 419              		.section	.text.a2i,"ax",%progbits
 420              		.align	1
 421              		.global	a2i
 422              		.syntax unified
 423              		.thumb
 424              		.thumb_func
 425              		.fpu softvfp
 427              	a2i:
 428              	.LFB76:
 199:VS4210/monitor.c **** 
 200:VS4210/monitor.c **** 
 201:VS4210/monitor.c **** //=============================================================================
 202:VS4210/monitor.c **** //		Convert ASCII to Binery                                             
 203:VS4210/monitor.c **** //=============================================================================
 204:VS4210/monitor.c ****  DWORD a2i(BYTE *str)
 205:VS4210/monitor.c **** {
 429              		.loc 1 205 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccwHfacM.s 			page 12


 433              		@ link register save eliminated.
 434              	.LVL14:
 206:VS4210/monitor.c **** 	 DWORD num=0;
 435              		.loc 1 206 0
 436 0000 0023     		movs	r3, #0
 437              	.LVL15:
 438              	.L48:
 207:VS4210/monitor.c **** 	BYTE i;
 208:VS4210/monitor.c **** 
 209:VS4210/monitor.c **** 	for(i=0; ; i++, str++) {
 210:VS4210/monitor.c **** 		if( *str=='\0' || *str==' ' ) break;
 439              		.loc 1 210 0
 440 0002 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 441 0004 41B1     		cbz	r1, .L46
 442              		.loc 1 210 0 is_stmt 0 discriminator 1
 443 0006 2029     		cmp	r1, #32
 444 0008 06D0     		beq	.L46
 211:VS4210/monitor.c **** 		num = num*10 + *str - '0';
 445              		.loc 1 211 0 is_stmt 1
 446 000a 03EB8303 		add	r3, r3, r3, lsl #2
 447              	.LVL16:
 448 000e 5A00     		lsls	r2, r3, #1
 449 0010 5318     		adds	r3, r2, r1
 450 0012 303B     		subs	r3, r3, #48
 451              	.LVL17:
 209:VS4210/monitor.c **** 		if( *str=='\0' || *str==' ' ) break;
 452              		.loc 1 209 0
 453 0014 0130     		adds	r0, r0, #1
 454              	.LVL18:
 210:VS4210/monitor.c **** 		num = num*10 + *str - '0';
 455              		.loc 1 210 0
 456 0016 F4E7     		b	.L48
 457              	.L46:
 212:VS4210/monitor.c **** 	}
 213:VS4210/monitor.c **** 	return num;
 214:VS4210/monitor.c **** }
 458              		.loc 1 214 0
 459 0018 1846     		mov	r0, r3
 460              	.LVL19:
 461 001a 7047     		bx	lr
 462              		.cfi_endproc
 463              	.LFE76:
 465              		.section	.text.Asc1Bin,"ax",%progbits
 466              		.align	1
 467              		.global	Asc1Bin
 468              		.syntax unified
 469              		.thumb
 470              		.thumb_func
 471              		.fpu softvfp
 473              	Asc1Bin:
 474              	.LFB77:
 215:VS4210/monitor.c **** 
 216:VS4210/monitor.c **** BYTE Asc1Bin(BYTE asc)
 217:VS4210/monitor.c **** {
 475              		.loc 1 217 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccwHfacM.s 			page 13


 478              		@ frame_needed = 0, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 480              	.LVL20:
 481 0000 0246     		mov	r2, r0
 218:VS4210/monitor.c **** 	if(asc>='0' && asc <='9') return (asc - '0');
 482              		.loc 1 218 0
 483 0002 A0F13003 		sub	r3, r0, #48
 484 0006 D8B2     		uxtb	r0, r3
 485              	.LVL21:
 486 0008 0928     		cmp	r0, #9
 487 000a 12D9     		bls	.L50
 219:VS4210/monitor.c **** 	if(asc>='a' && asc <='f') return (asc - 'a' + 0x0a);
 488              		.loc 1 219 0
 489 000c A2F16103 		sub	r3, r2, #97
 490 0010 DBB2     		uxtb	r3, r3
 491 0012 052B     		cmp	r3, #5
 492 0014 08D9     		bls	.L53
 220:VS4210/monitor.c **** 	if(asc>='A' && asc <='F') return (asc - 'A' + 0x0a);
 493              		.loc 1 220 0
 494 0016 A2F14103 		sub	r3, r2, #65
 495 001a DBB2     		uxtb	r3, r3
 496 001c 052B     		cmp	r3, #5
 497 001e 07D8     		bhi	.L52
 498              		.loc 1 220 0 is_stmt 0 discriminator 1
 499 0020 A2F13700 		sub	r0, r2, #55
 500 0024 C0B2     		uxtb	r0, r0
 501 0026 7047     		bx	lr
 502              	.L53:
 219:VS4210/monitor.c **** 	if(asc>='a' && asc <='f') return (asc - 'a' + 0x0a);
 503              		.loc 1 219 0 is_stmt 1 discriminator 1
 504 0028 A2F15700 		sub	r0, r2, #87
 505 002c C0B2     		uxtb	r0, r0
 506 002e 7047     		bx	lr
 507              	.L52:
 221:VS4210/monitor.c **** 	
 222:VS4210/monitor.c **** 	return 0;
 508              		.loc 1 222 0
 509 0030 0020     		movs	r0, #0
 510              	.L50:
 223:VS4210/monitor.c **** }
 511              		.loc 1 223 0
 512 0032 7047     		bx	lr
 513              		.cfi_endproc
 514              	.LFE77:
 516              		.section	.text.Asc2Bin,"ax",%progbits
 517              		.align	1
 518              		.global	Asc2Bin
 519              		.syntax unified
 520              		.thumb
 521              		.thumb_func
 522              		.fpu softvfp
 524              	Asc2Bin:
 525              	.LFB78:
 224:VS4210/monitor.c **** 
 225:VS4210/monitor.c **** BYTE Asc2Bin(PDATA_P BYTE *s)
 226:VS4210/monitor.c **** {
 526              		.loc 1 226 0
ARM GAS  /tmp/ccwHfacM.s 			page 14


 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530              	.LVL22:
 531 0000 38B5     		push	{r3, r4, r5, lr}
 532              	.LCFI13:
 533              		.cfi_def_cfa_offset 16
 534              		.cfi_offset 3, -16
 535              		.cfi_offset 4, -12
 536              		.cfi_offset 5, -8
 537              		.cfi_offset 14, -4
 538 0002 0546     		mov	r5, r0
 539              	.LVL23:
 227:VS4210/monitor.c **** 	WORD bin;
 228:VS4210/monitor.c **** 
 229:VS4210/monitor.c **** 	bin = 0;
 540              		.loc 1 229 0
 541 0004 0024     		movs	r4, #0
 230:VS4210/monitor.c **** 	while(*s != '\0' && *s !=' ') {
 542              		.loc 1 230 0
 543 0006 04E0     		b	.L55
 544              	.LVL24:
 545              	.L57:
 231:VS4210/monitor.c **** 		bin = bin<<4;
 546              		.loc 1 231 0
 547 0008 2401     		lsls	r4, r4, #4
 548              	.LVL25:
 232:VS4210/monitor.c **** 		bin = bin + Asc1Bin(*s);
 549              		.loc 1 232 0
 550 000a FFF7FEFF 		bl	Asc1Bin
 551              	.LVL26:
 552 000e 0444     		add	r4, r4, r0
 553              	.LVL27:
 233:VS4210/monitor.c **** 		s++;
 554              		.loc 1 233 0
 555 0010 0135     		adds	r5, r5, #1
 556              	.LVL28:
 557              	.L55:
 230:VS4210/monitor.c **** 		bin = bin<<4;
 558              		.loc 1 230 0
 559 0012 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 560 0014 08B1     		cbz	r0, .L56
 230:VS4210/monitor.c **** 		bin = bin<<4;
 561              		.loc 1 230 0 is_stmt 0 discriminator 1
 562 0016 2028     		cmp	r0, #32
 563 0018 F6D1     		bne	.L57
 564              	.L56:
 234:VS4210/monitor.c **** 	}
 235:VS4210/monitor.c **** 	return (bin);
 236:VS4210/monitor.c **** }
 565              		.loc 1 236 0 is_stmt 1
 566 001a E0B2     		uxtb	r0, r4
 567 001c 38BD     		pop	{r3, r4, r5, pc}
 568              		.cfi_endproc
 569              	.LFE78:
 571              		.section	.text.hs_toupper,"ax",%progbits
 572              		.align	1
ARM GAS  /tmp/ccwHfacM.s 			page 15


 573              		.global	hs_toupper
 574              		.syntax unified
 575              		.thumb
 576              		.thumb_func
 577              		.fpu softvfp
 579              	hs_toupper:
 580              	.LFB79:
 237:VS4210/monitor.c **** 
 238:VS4210/monitor.c **** 
 239:VS4210/monitor.c **** //=============================================================================
 240:VS4210/monitor.c **** BYTE hs_toupper(BYTE ch)
 241:VS4210/monitor.c **** {
 581              		.loc 1 241 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586              	.LVL29:
 242:VS4210/monitor.c **** 	if( ch>='a' && ch<='z' )
 587              		.loc 1 242 0
 588 0000 A0F16103 		sub	r3, r0, #97
 589 0004 DBB2     		uxtb	r3, r3
 590 0006 192B     		cmp	r3, #25
 591 0008 01D8     		bhi	.L60
 243:VS4210/monitor.c **** 		return (ch - 'a' + 'A');
 592              		.loc 1 243 0
 593 000a 2038     		subs	r0, r0, #32
 594              	.LVL30:
 595 000c C0B2     		uxtb	r0, r0
 596              	.L60:
 244:VS4210/monitor.c **** 	
 245:VS4210/monitor.c **** 	return ch;
 246:VS4210/monitor.c **** }
 597              		.loc 1 246 0
 598 000e 7047     		bx	lr
 599              		.cfi_endproc
 600              	.LFE79:
 602              		.section	.text.stricmp,"ax",%progbits
 603              		.align	1
 604              		.global	stricmp
 605              		.syntax unified
 606              		.thumb
 607              		.thumb_func
 608              		.fpu softvfp
 610              	stricmp:
 611              	.LFB80:
 247:VS4210/monitor.c **** 
 248:VS4210/monitor.c **** int stricmp(BYTE *ptr1, BYTE *ptr2)
 249:VS4210/monitor.c **** {
 612              		.loc 1 249 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616              	.LVL31:
 617 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 618              	.LCFI14:
 619              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccwHfacM.s 			page 16


 620              		.cfi_offset 3, -24
 621              		.cfi_offset 4, -20
 622              		.cfi_offset 5, -16
 623              		.cfi_offset 6, -12
 624              		.cfi_offset 7, -8
 625              		.cfi_offset 14, -4
 626 0002 0546     		mov	r5, r0
 627 0004 0E46     		mov	r6, r1
 628              	.LVL32:
 629              	.L63:
 250:VS4210/monitor.c **** 	int		i;
 251:VS4210/monitor.c **** 	int		ret;
 252:VS4210/monitor.c **** 	
 253:VS4210/monitor.c **** 	for(i=0; *ptr1; i++) {
 630              		.loc 1 253 0 discriminator 1
 631 0006 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 632 0008 58B1     		cbz	r0, .L62
 254:VS4210/monitor.c **** 	  ret = hs_toupper(*ptr1++) - hs_toupper(*ptr2++);
 633              		.loc 1 254 0
 634 000a 0135     		adds	r5, r5, #1
 635              	.LVL33:
 636 000c FFF7FEFF 		bl	hs_toupper
 637              	.LVL34:
 638 0010 0446     		mov	r4, r0
 639 0012 771C     		adds	r7, r6, #1
 640              	.LVL35:
 641 0014 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 642 0016 FFF7FEFF 		bl	hs_toupper
 643              	.LVL36:
 255:VS4210/monitor.c **** 		if( ret ) return ret;
 644              		.loc 1 255 0
 645 001a 201A     		subs	r0, r4, r0
 646              	.LVL37:
 647 001c 01D1     		bne	.L62
 254:VS4210/monitor.c **** 	  ret = hs_toupper(*ptr1++) - hs_toupper(*ptr2++);
 648              		.loc 1 254 0
 649 001e 3E46     		mov	r6, r7
 650 0020 F1E7     		b	.L63
 651              	.LVL38:
 652              	.L62:
 256:VS4210/monitor.c **** 	}
 257:VS4210/monitor.c **** 	return 0;
 258:VS4210/monitor.c **** }
 653              		.loc 1 258 0
 654 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 655              		.cfi_endproc
 656              	.LFE80:
 658              		.section	.text.MonReadI2C,"ax",%progbits
 659              		.align	1
 660              		.global	MonReadI2C
 661              		.syntax unified
 662              		.thumb
 663              		.thumb_func
 664              		.fpu softvfp
 666              	MonReadI2C:
 667              	.LFB81:
 259:VS4210/monitor.c **** 
ARM GAS  /tmp/ccwHfacM.s 			page 17


 260:VS4210/monitor.c **** //=============================================================================
 261:VS4210/monitor.c **** //
 262:VS4210/monitor.c **** //=============================================================================
 263:VS4210/monitor.c **** /*
 264:VS4210/monitor.c **** void SetMonAddress(BYTE addr)
 265:VS4210/monitor.c **** {
 266:VS4210/monitor.c **** 	MonAddress = addr;
 267:VS4210/monitor.c **** }
 268:VS4210/monitor.c **** */
 269:VS4210/monitor.c **** void MonReadI2C(void)
 270:VS4210/monitor.c **** {
 668              		.loc 1 270 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 0
 671              		@ frame_needed = 0, uses_anonymous_args = 0
 672              		@ link register save eliminated.
 271:VS4210/monitor.c **** /*
 272:VS4210/monitor.c **** 	if( argc>=2 ) MonIndex = Asc2Bin( argv[1] );
 273:VS4210/monitor.c **** 	else	{
 274:VS4210/monitor.c **** 		Printf("   --> Missing parameter !!!");
 275:VS4210/monitor.c **** 		return;
 276:VS4210/monitor.c **** 	}
 277:VS4210/monitor.c **** 
 278:VS4210/monitor.c **** 	if ( MonAddress == TW88I2CAddress )
 279:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 280:VS4210/monitor.c **** 	else
 281:VS4210/monitor.c **** 		MonRdata = ReadI2C(MonAddress, MonIndex);
 282:VS4210/monitor.c **** 
 283:VS4210/monitor.c **** 	if( echo )
 284:VS4210/monitor.c **** 		Printf("\r\nRead %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);	
 285:VS4210/monitor.c **** 	
 286:VS4210/monitor.c **** 	MonWdata = MonRdata;
 287:VS4210/monitor.c **** 	*/
 288:VS4210/monitor.c **** }
 673              		.loc 1 288 0
 674 0000 7047     		bx	lr
 675              		.cfi_endproc
 676              	.LFE81:
 678              		.section	.text.MonWriteI2C,"ax",%progbits
 679              		.align	1
 680              		.global	MonWriteI2C
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
 684              		.fpu softvfp
 686              	MonWriteI2C:
 687              	.LFB82:
 289:VS4210/monitor.c **** 
 290:VS4210/monitor.c **** 
 291:VS4210/monitor.c **** void MonWriteI2C(void)
 292:VS4210/monitor.c **** {
 688              		.loc 1 292 0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 293:VS4210/monitor.c **** /*
ARM GAS  /tmp/ccwHfacM.s 			page 18


 294:VS4210/monitor.c **** 	if( argc<3 ) {
 295:VS4210/monitor.c **** 		Printf("   --> Missing parameter !!!");
 296:VS4210/monitor.c **** 		return;
 297:VS4210/monitor.c **** 	}
 298:VS4210/monitor.c **** 	
 299:VS4210/monitor.c **** 	MonIndex = Asc2Bin( argv[1] );
 300:VS4210/monitor.c **** 	MonWdata = Asc2Bin( argv[2] );
 301:VS4210/monitor.c **** 	
 302:VS4210/monitor.c **** 	if( echo ) {
 303:VS4210/monitor.c **** 		Printf("\r\nWrite %2xh:%2xh ", (tWord)MonIndex, (tWord)MonWdata);
 304:VS4210/monitor.c **** 		if ( MonAddress == TW88I2CAddress ) {
 305:VS4210/monitor.c **** 			WriteTW88(MonIndex, MonWdata);
 306:VS4210/monitor.c **** 			MonRdata = ReadTW88(MonIndex);
 307:VS4210/monitor.c **** 		}
 308:VS4210/monitor.c **** 		else {
 309:VS4210/monitor.c **** 			WriteI2C(MonAddress, MonIndex, MonWdata);
 310:VS4210/monitor.c **** 			MonRdata = ReadI2C(MonAddress, MonIndex);
 311:VS4210/monitor.c **** 		}
 312:VS4210/monitor.c ****    		Printf("==> Read %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 313:VS4210/monitor.c **** 	}
 314:VS4210/monitor.c **** 	else {
 315:VS4210/monitor.c **** 		if ( MonAddress == TW88I2CAddress ) {
 316:VS4210/monitor.c **** 			WriteTW88(MonIndex, MonWdata);
 317:VS4210/monitor.c **** 		}
 318:VS4210/monitor.c **** 		else {
 319:VS4210/monitor.c **** 			WriteI2C(MonAddress, MonIndex, MonWdata);
 320:VS4210/monitor.c **** 		}
 321:VS4210/monitor.c **** 	}
 322:VS4210/monitor.c **** 	*/
 323:VS4210/monitor.c **** }
 693              		.loc 1 323 0
 694 0000 7047     		bx	lr
 695              		.cfi_endproc
 696              	.LFE82:
 698              		.section	.text.MonIncDecI2C,"ax",%progbits
 699              		.align	1
 700              		.global	MonIncDecI2C
 701              		.syntax unified
 702              		.thumb
 703              		.thumb_func
 704              		.fpu softvfp
 706              	MonIncDecI2C:
 707              	.LFB83:
 324:VS4210/monitor.c **** 
 325:VS4210/monitor.c **** 
 326:VS4210/monitor.c **** void MonIncDecI2C(BYTE inc)
 327:VS4210/monitor.c **** {
 708              		.loc 1 327 0
 709              		.cfi_startproc
 710              		@ args = 0, pretend = 0, frame = 0
 711              		@ frame_needed = 0, uses_anonymous_args = 0
 712              	.LVL39:
 713 0000 10B5     		push	{r4, lr}
 714              	.LCFI15:
 715              		.cfi_def_cfa_offset 8
 716              		.cfi_offset 4, -8
 717              		.cfi_offset 14, -4
ARM GAS  /tmp/ccwHfacM.s 			page 19


 328:VS4210/monitor.c **** 
 329:VS4210/monitor.c **** BYTE ret;
 330:VS4210/monitor.c **** 
 331:VS4210/monitor.c **** 	switch(inc){
 718              		.loc 1 331 0
 719 0002 0B28     		cmp	r0, #11
 720 0004 0BD8     		bhi	.L70
 721 0006 DFE800F0 		tbb	[pc, r0]
 722              	.L72:
 723 000a 06       		.byte	(.L71-.L72)/2
 724 000b 19       		.byte	(.L73-.L72)/2
 725 000c 0A       		.byte	(.L70-.L72)/2
 726 000d 0A       		.byte	(.L70-.L72)/2
 727 000e 0A       		.byte	(.L70-.L72)/2
 728 000f 0A       		.byte	(.L70-.L72)/2
 729 0010 0A       		.byte	(.L70-.L72)/2
 730 0011 0A       		.byte	(.L70-.L72)/2
 731 0012 0A       		.byte	(.L70-.L72)/2
 732 0013 0A       		.byte	(.L70-.L72)/2
 733 0014 1E       		.byte	(.L74-.L72)/2
 734 0015 23       		.byte	(.L75-.L72)/2
 735              		.p2align 1
 736              	.L71:
 332:VS4210/monitor.c **** 	case 0:  MonWdata--;	break;
 737              		.loc 1 332 0
 738 0016 3A4A     		ldr	r2, .L87
 739 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 740 001a 013B     		subs	r3, r3, #1
 741 001c 1370     		strb	r3, [r2]
 742              	.L70:
 333:VS4210/monitor.c **** 	case 1:  MonWdata++;	break;
 334:VS4210/monitor.c **** 	case 10: MonWdata-=0x10;	break;
 335:VS4210/monitor.c **** 	case 11: MonWdata+=0x10;	break;
 336:VS4210/monitor.c **** 	}
 337:VS4210/monitor.c **** 
 338:VS4210/monitor.c **** 	/*
 339:VS4210/monitor.c **** 
 340:VS4210/monitor.c **** 	if ( MonAddress == TW88I2CAddress ) {
 341:VS4210/monitor.c **** 		WriteTW88(MonIndex, MonWdata);
 342:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 343:VS4210/monitor.c **** 	}
 344:VS4210/monitor.c **** 	else {
 345:VS4210/monitor.c **** 		WriteI2C(MonAddress, MonIndex, MonWdata);
 346:VS4210/monitor.c **** 		MonRdata = ReadI2C(MonAddress, MonIndex);
 347:VS4210/monitor.c **** 	}
 348:VS4210/monitor.c **** 
 349:VS4210/monitor.c **** 	if( echo ) {
 350:VS4210/monitor.c **** 		Printf("Write %2xh:%2xh ", (tWord)MonIndex, (tWord)MonWdata);
 351:VS4210/monitor.c **** 		Printf("==> Read %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 352:VS4210/monitor.c **** 	}
 353:VS4210/monitor.c **** 
 354:VS4210/monitor.c **** */
 355:VS4210/monitor.c **** 	if(Monitor_I2C==0xA0)
 743              		.loc 1 355 0
 744 001e 394B     		ldr	r3, .L87+4
 745 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 746 0022 A02B     		cmp	r3, #160
ARM GAS  /tmp/ccwHfacM.s 			page 20


 747 0024 19D0     		beq	.L82
 356:VS4210/monitor.c **** 		{
 357:VS4210/monitor.c **** 		WriteEEP( MonIndex, MonWdata );
 358:VS4210/monitor.c **** 		 ret= ReadEEP(MonIndex);	
 359:VS4210/monitor.c **** 		  Printf("\r\nEEPROM Write addr=%02x  data=%02x",(WORD)MonIndex,(WORD)ret);
 360:VS4210/monitor.c **** 		}
 361:VS4210/monitor.c **** 	else if(Monitor_I2C==0x40)
 748              		.loc 1 361 0
 749 0026 402B     		cmp	r3, #64
 750 0028 26D0     		beq	.L83
 362:VS4210/monitor.c **** 	{
 363:VS4210/monitor.c **** 		VXISI2CWrite( MonIndex, MonWdata );
 364:VS4210/monitor.c **** 		 ret= VXISI2CRead(MonIndex);	
 365:VS4210/monitor.c **** 		   Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)MonIndex,(WORD)ret);
 366:VS4210/monitor.c **** 	}
 367:VS4210/monitor.c **** 	else if(Monitor_I2C==0x12)
 751              		.loc 1 367 0
 752 002a 122B     		cmp	r3, #18
 753 002c 33D0     		beq	.L84
 368:VS4210/monitor.c **** 	{
 369:VS4210/monitor.c **** 		VS8812Write( MonIndex ,MonWdata);
 370:VS4210/monitor.c **** 		ret= VS8812Read(MonIndex);	
 371:VS4210/monitor.c **** 		   Printf("\r\nVS8812 Write addr=%02x  data=%02x",(WORD)MonIndex,(WORD)ret);
 372:VS4210/monitor.c **** 	}
 373:VS4210/monitor.c **** 	else if( Monitor_I2C==0x88)
 754              		.loc 1 373 0
 755 002e 882B     		cmp	r3, #136
 756 0030 40D0     		beq	.L85
 374:VS4210/monitor.c **** 		{
 375:VS4210/monitor.c **** 		tp28xx_byte_write( MonIndex, MonWdata);	
 376:VS4210/monitor.c **** 		ret= tp28xx_byte_read(MonIndex);			
 377:VS4210/monitor.c **** 		 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)MonIndex,(WORD)ret);
 378:VS4210/monitor.c **** 		}
 379:VS4210/monitor.c **** 	
 380:VS4210/monitor.c **** 	else if( Monitor_I2C==0x90)
 757              		.loc 1 380 0
 758 0032 902B     		cmp	r3, #144
 759 0034 4DD0     		beq	.L86
 760              	.LVL40:
 761              	.L77:
 381:VS4210/monitor.c **** 		{
 382:VS4210/monitor.c **** 		gHDMI_Index=0;	
 383:VS4210/monitor.c **** 		HDMIRX_WriteI2C_Byte( MonIndex, MonWdata ); 
 384:VS4210/monitor.c **** 		ret= HDMIRX_ReadI2C_Byte(MonIndex); 	
 385:VS4210/monitor.c **** 		 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 386:VS4210/monitor.c **** 		}
 387:VS4210/monitor.c **** 
 388:VS4210/monitor.c **** 	Prompt();
 762              		.loc 1 388 0
 763 0036 FFF7FEFF 		bl	Prompt
 764              	.LVL41:
 389:VS4210/monitor.c **** 
 390:VS4210/monitor.c **** }
 765              		.loc 1 390 0
 766 003a 10BD     		pop	{r4, pc}
 767              	.LVL42:
 768              	.L73:
ARM GAS  /tmp/ccwHfacM.s 			page 21


 333:VS4210/monitor.c **** 	case 10: MonWdata-=0x10;	break;
 769              		.loc 1 333 0
 770 003c 304A     		ldr	r2, .L87
 771 003e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 772 0040 0133     		adds	r3, r3, #1
 773 0042 1370     		strb	r3, [r2]
 774 0044 EBE7     		b	.L70
 775              	.L74:
 334:VS4210/monitor.c **** 	case 11: MonWdata+=0x10;	break;
 776              		.loc 1 334 0
 777 0046 2E4A     		ldr	r2, .L87
 778 0048 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 779 004a 103B     		subs	r3, r3, #16
 780 004c 1370     		strb	r3, [r2]
 781 004e E6E7     		b	.L70
 782              	.L75:
 335:VS4210/monitor.c **** 	}
 783              		.loc 1 335 0
 784 0050 2B4A     		ldr	r2, .L87
 785 0052 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 786 0054 1033     		adds	r3, r3, #16
 787 0056 1370     		strb	r3, [r2]
 788 0058 E1E7     		b	.L70
 789              	.L82:
 357:VS4210/monitor.c **** 		 ret= ReadEEP(MonIndex);	
 790              		.loc 1 357 0
 791 005a 2B4C     		ldr	r4, .L87+8
 792 005c 284B     		ldr	r3, .L87
 793 005e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 794 0060 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 795              	.LVL43:
 796 0062 FFF7FEFF 		bl	WriteEEP
 797              	.LVL44:
 358:VS4210/monitor.c **** 		  Printf("\r\nEEPROM Write addr=%02x  data=%02x",(WORD)MonIndex,(WORD)ret);
 798              		.loc 1 358 0
 799 0066 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 800 0068 FFF7FEFF 		bl	ReadEEP
 801              	.LVL45:
 359:VS4210/monitor.c **** 		}
 802              		.loc 1 359 0
 803 006c 0246     		mov	r2, r0
 804 006e 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 805 0070 2648     		ldr	r0, .L87+12
 806              	.LVL46:
 807 0072 FFF7FEFF 		bl	Printf
 808              	.LVL47:
 809 0076 DEE7     		b	.L77
 810              	.LVL48:
 811              	.L83:
 363:VS4210/monitor.c **** 		 ret= VXISI2CRead(MonIndex);	
 812              		.loc 1 363 0
 813 0078 234C     		ldr	r4, .L87+8
 814 007a 214B     		ldr	r3, .L87
 815 007c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 816 007e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 817              	.LVL49:
 818 0080 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccwHfacM.s 			page 22


 819              	.LVL50:
 364:VS4210/monitor.c **** 		   Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)MonIndex,(WORD)ret);
 820              		.loc 1 364 0
 821 0084 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 822 0086 FFF7FEFF 		bl	VXISI2CRead
 823              	.LVL51:
 365:VS4210/monitor.c **** 	}
 824              		.loc 1 365 0
 825 008a 0246     		mov	r2, r0
 826 008c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 827 008e 2048     		ldr	r0, .L87+16
 828              	.LVL52:
 829 0090 FFF7FEFF 		bl	Printf
 830              	.LVL53:
 831 0094 CFE7     		b	.L77
 832              	.LVL54:
 833              	.L84:
 369:VS4210/monitor.c **** 		ret= VS8812Read(MonIndex);	
 834              		.loc 1 369 0
 835 0096 1C4C     		ldr	r4, .L87+8
 836 0098 194B     		ldr	r3, .L87
 837 009a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 838 009c 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 839              	.LVL55:
 840 009e FFF7FEFF 		bl	VS8812Write
 841              	.LVL56:
 370:VS4210/monitor.c **** 		   Printf("\r\nVS8812 Write addr=%02x  data=%02x",(WORD)MonIndex,(WORD)ret);
 842              		.loc 1 370 0
 843 00a2 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 844 00a4 FFF7FEFF 		bl	VS8812Read
 845              	.LVL57:
 371:VS4210/monitor.c **** 	}
 846              		.loc 1 371 0
 847 00a8 0246     		mov	r2, r0
 848 00aa 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 849 00ac 1948     		ldr	r0, .L87+20
 850              	.LVL58:
 851 00ae FFF7FEFF 		bl	Printf
 852              	.LVL59:
 853 00b2 C0E7     		b	.L77
 854              	.LVL60:
 855              	.L85:
 375:VS4210/monitor.c **** 		ret= tp28xx_byte_read(MonIndex);			
 856              		.loc 1 375 0
 857 00b4 144C     		ldr	r4, .L87+8
 858 00b6 124B     		ldr	r3, .L87
 859 00b8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 860 00ba 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 861              	.LVL61:
 862 00bc FFF7FEFF 		bl	tp28xx_byte_write
 863              	.LVL62:
 376:VS4210/monitor.c **** 		 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)MonIndex,(WORD)ret);
 864              		.loc 1 376 0
 865 00c0 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 866 00c2 FFF7FEFF 		bl	tp28xx_byte_read
 867              	.LVL63:
 377:VS4210/monitor.c **** 		}
ARM GAS  /tmp/ccwHfacM.s 			page 23


 868              		.loc 1 377 0
 869 00c6 0246     		mov	r2, r0
 870 00c8 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 871 00ca 1348     		ldr	r0, .L87+24
 872              	.LVL64:
 873 00cc FFF7FEFF 		bl	Printf
 874              	.LVL65:
 875 00d0 B1E7     		b	.L77
 876              	.LVL66:
 877              	.L86:
 382:VS4210/monitor.c **** 		HDMIRX_WriteI2C_Byte( MonIndex, MonWdata ); 
 878              		.loc 1 382 0
 879 00d2 124B     		ldr	r3, .L87+28
 880 00d4 0022     		movs	r2, #0
 881 00d6 1A70     		strb	r2, [r3]
 383:VS4210/monitor.c **** 		ret= HDMIRX_ReadI2C_Byte(MonIndex); 	
 882              		.loc 1 383 0
 883 00d8 0B4C     		ldr	r4, .L87+8
 884 00da 094B     		ldr	r3, .L87
 885 00dc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 886 00de 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 887              	.LVL67:
 888 00e0 FFF7FEFF 		bl	HDMIRX_WriteI2C_Byte
 889              	.LVL68:
 384:VS4210/monitor.c **** 		 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 890              		.loc 1 384 0
 891 00e4 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 892 00e6 FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 893              	.LVL69:
 894 00ea 0446     		mov	r4, r0
 895              	.LVL70:
 385:VS4210/monitor.c **** 		}
 896              		.loc 1 385 0
 897 00ec 0C4B     		ldr	r3, .L87+32
 898 00ee 5868     		ldr	r0, [r3, #4]
 899 00f0 FFF7FEFF 		bl	Asc2Bin
 900              	.LVL71:
 901 00f4 2246     		mov	r2, r4
 902 00f6 0146     		mov	r1, r0
 903 00f8 0A48     		ldr	r0, .L87+36
 904 00fa FFF7FEFF 		bl	Printf
 905              	.LVL72:
 906 00fe 9AE7     		b	.L77
 907              	.L88:
 908              		.align	2
 909              	.L87:
 910 0100 00000000 		.word	MonWdata
 911 0104 00000000 		.word	.LANCHOR5
 912 0108 00000000 		.word	MonIndex
 913 010c 00000000 		.word	.LC4
 914 0110 24000000 		.word	.LC5
 915 0114 48000000 		.word	.LC6
 916 0118 6C000000 		.word	.LC7
 917 011c 00000000 		.word	gHDMI_Index
 918 0120 00000000 		.word	argv
 919 0124 90000000 		.word	.LC8
 920              		.cfi_endproc
ARM GAS  /tmp/ccwHfacM.s 			page 24


 921              	.LFE83:
 923              		.section	.text.MonDumpI2C,"ax",%progbits
 924              		.align	1
 925              		.global	MonDumpI2C
 926              		.syntax unified
 927              		.thumb
 928              		.thumb_func
 929              		.fpu softvfp
 931              	MonDumpI2C:
 932              	.LFB84:
 391:VS4210/monitor.c **** 
 392:VS4210/monitor.c **** void MonDumpI2C(void)
 393:VS4210/monitor.c **** {
 933              		.loc 1 393 0
 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 0
 936              		@ frame_needed = 0, uses_anonymous_args = 0
 937              		@ link register save eliminated.
 394:VS4210/monitor.c **** /*
 395:VS4210/monitor.c **** 	BYTE ToMonIndex;
 396:VS4210/monitor.c **** 	int  cnt=8;
 397:VS4210/monitor.c **** 
 398:VS4210/monitor.c **** 	if( argc>=2 ) MonIndex = Asc2Bin(argv[1]);
 399:VS4210/monitor.c **** 	if( argc>=3 ) ToMonIndex = Asc2Bin(argv[2]);
 400:VS4210/monitor.c **** 	else ToMonIndex = MonIndex+cnt;
 401:VS4210/monitor.c **** 	if ( ToMonIndex < MonIndex ) ToMonIndex = 0xFF;
 402:VS4210/monitor.c **** 	cnt = ToMonIndex - MonIndex + 1;
 403:VS4210/monitor.c **** 
 404:VS4210/monitor.c **** 	if( echo ) {
 405:VS4210/monitor.c **** 		if ( MonAddress == TW88I2CAddress ) {
 406:VS4210/monitor.c **** 			for ( ; cnt > 0; cnt-- ) {
 407:VS4210/monitor.c **** 				MonRdata = ReadTW88(MonIndex);
 408:VS4210/monitor.c **** 				Printf("\r\n==> Read %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 409:VS4210/monitor.c **** 				MonIndex++;
 410:VS4210/monitor.c **** 			}
 411:VS4210/monitor.c **** 		}
 412:VS4210/monitor.c **** 		else {
 413:VS4210/monitor.c **** 			for ( ; cnt > 0; cnt-- ) {
 414:VS4210/monitor.c **** 				MonRdata = ReadI2C(MonAddress, MonIndex);
 415:VS4210/monitor.c **** 				Printf("\r\n==> Read %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 416:VS4210/monitor.c **** 				MonIndex++;
 417:VS4210/monitor.c **** 			}
 418:VS4210/monitor.c **** 		}
 419:VS4210/monitor.c **** 	}
 420:VS4210/monitor.c **** 	else {
 421:VS4210/monitor.c **** 		if ( MonAddress == TW88I2CAddress ) {
 422:VS4210/monitor.c **** 			for ( ; cnt > 0; cnt-- ) {
 423:VS4210/monitor.c **** 				MonRdata = ReadTW88(MonIndex);
 424:VS4210/monitor.c **** 				MonIndex++;
 425:VS4210/monitor.c **** 			}
 426:VS4210/monitor.c **** 		}
 427:VS4210/monitor.c **** 		else {
 428:VS4210/monitor.c **** 			for ( ; cnt > 0; cnt-- ) {
 429:VS4210/monitor.c **** 				MonRdata = ReadI2C(MonAddress, MonIndex);
 430:VS4210/monitor.c **** 				MonIndex++;
 431:VS4210/monitor.c **** 			}
 432:VS4210/monitor.c **** 		}
ARM GAS  /tmp/ccwHfacM.s 			page 25


 433:VS4210/monitor.c **** 	}
 434:VS4210/monitor.c **** 	*/
 435:VS4210/monitor.c **** }
 938              		.loc 1 435 0
 939 0000 7047     		bx	lr
 940              		.cfi_endproc
 941              	.LFE84:
 943              		.section	.text.MonNewReadI2C,"ax",%progbits
 944              		.align	1
 945              		.global	MonNewReadI2C
 946              		.syntax unified
 947              		.thumb
 948              		.thumb_func
 949              		.fpu softvfp
 951              	MonNewReadI2C:
 952              	.LFB85:
 436:VS4210/monitor.c **** 
 437:VS4210/monitor.c **** //-----------------------------------------------------------------------------
 438:VS4210/monitor.c **** 
 439:VS4210/monitor.c **** void MonNewReadI2C(void)
 440:VS4210/monitor.c **** {
 953              		.loc 1 440 0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957              		@ link register save eliminated.
 441:VS4210/monitor.c **** /*
 442:VS4210/monitor.c **** 	BYTE Slave;
 443:VS4210/monitor.c **** 
 444:VS4210/monitor.c **** 	if( argc>=3 ) MonIndex = Asc2Bin( argv[2] );
 445:VS4210/monitor.c **** 	else	{
 446:VS4210/monitor.c **** 		Printf("   --> Missing parameter !!!");
 447:VS4210/monitor.c **** 		return;
 448:VS4210/monitor.c **** 	}
 449:VS4210/monitor.c **** 	Slave = Asc2Bin(argv[1]);
 450:VS4210/monitor.c **** 
 451:VS4210/monitor.c **** 	if ( Slave == TW88I2CAddress )
 452:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 453:VS4210/monitor.c **** 	else
 454:VS4210/monitor.c **** 		MonRdata = ReadI2C(Slave, MonIndex);
 455:VS4210/monitor.c **** 
 456:VS4210/monitor.c **** 	if( echo )
 457:VS4210/monitor.c **** 		Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)MonIndex, (tWord)MonRdata);
 458:VS4210/monitor.c **** 	
 459:VS4210/monitor.c **** 	MonWdata = MonRdata;
 460:VS4210/monitor.c **** 	*/
 461:VS4210/monitor.c **** }
 958              		.loc 1 461 0
 959 0000 7047     		bx	lr
 960              		.cfi_endproc
 961              	.LFE85:
 963              		.section	.text.MonNewWriteI2C,"ax",%progbits
 964              		.align	1
 965              		.global	MonNewWriteI2C
 966              		.syntax unified
 967              		.thumb
 968              		.thumb_func
ARM GAS  /tmp/ccwHfacM.s 			page 26


 969              		.fpu softvfp
 971              	MonNewWriteI2C:
 972              	.LFB86:
 462:VS4210/monitor.c **** 
 463:VS4210/monitor.c **** void MonNewWriteI2C(void)
 464:VS4210/monitor.c **** {
 973              		.loc 1 464 0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 0
 976              		@ frame_needed = 0, uses_anonymous_args = 0
 977              		@ link register save eliminated.
 465:VS4210/monitor.c **** /*
 466:VS4210/monitor.c **** 	BYTE Slave;
 467:VS4210/monitor.c **** 
 468:VS4210/monitor.c **** 	if( argc<4 ) {
 469:VS4210/monitor.c **** 		Printf("   --> Missing parameter !!!");
 470:VS4210/monitor.c **** 		return;
 471:VS4210/monitor.c **** 	}
 472:VS4210/monitor.c **** 	
 473:VS4210/monitor.c **** 	MonIndex = Asc2Bin( argv[2] );
 474:VS4210/monitor.c **** 	MonWdata = Asc2Bin( argv[3] );
 475:VS4210/monitor.c **** 	Slave = Asc2Bin(argv[1]);
 476:VS4210/monitor.c **** 	
 477:VS4210/monitor.c **** 	if ( Slave == TW88I2CAddress ) {
 478:VS4210/monitor.c **** 		WriteTW88(MonIndex, MonWdata);
 479:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 480:VS4210/monitor.c **** 	}
 481:VS4210/monitor.c **** 	else {
 482:VS4210/monitor.c **** 		WriteI2C(Slave, MonIndex, MonWdata);
 483:VS4210/monitor.c **** 		MonRdata = ReadI2C(Slave, MonIndex);
 484:VS4210/monitor.c ****    	}
 485:VS4210/monitor.c **** 
 486:VS4210/monitor.c **** 	if( echo )
 487:VS4210/monitor.c **** 		Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)MonIndex, (tWord)MonRdata);
 488:VS4210/monitor.c **** */
 489:VS4210/monitor.c **** }
 978              		.loc 1 489 0
 979 0000 7047     		bx	lr
 980              		.cfi_endproc
 981              	.LFE86:
 983              		.section	.text.MonNewDumpI2C,"ax",%progbits
 984              		.align	1
 985              		.global	MonNewDumpI2C
 986              		.syntax unified
 987              		.thumb
 988              		.thumb_func
 989              		.fpu softvfp
 991              	MonNewDumpI2C:
 992              	.LFB87:
 490:VS4210/monitor.c **** 
 491:VS4210/monitor.c **** void MonNewDumpI2C(void)
 492:VS4210/monitor.c **** {
 993              		.loc 1 492 0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 0
 996              		@ frame_needed = 0, uses_anonymous_args = 0
 997              		@ link register save eliminated.
ARM GAS  /tmp/ccwHfacM.s 			page 27


 493:VS4210/monitor.c **** /*
 494:VS4210/monitor.c **** 	BYTE 	ToMonIndex, Slave;
 495:VS4210/monitor.c **** 	tWord	i;
 496:VS4210/monitor.c **** 	
 497:VS4210/monitor.c **** 	if( argc>=2 ) MonIndex = Asc2Bin(argv[2]);
 498:VS4210/monitor.c **** 	if( argc>=3 ) ToMonIndex = Asc2Bin(argv[3]);
 499:VS4210/monitor.c **** 	Slave = Asc2Bin(argv[1]);
 500:VS4210/monitor.c **** 
 501:VS4210/monitor.c **** 	if( echo ) {
 502:VS4210/monitor.c **** 		if ( Slave == TW88I2CAddress ) {
 503:VS4210/monitor.c **** 			for(i=MonIndex; i<=ToMonIndex; i++) {
 504:VS4210/monitor.c **** 				MonRdata = ReadTW88(i);
 505:VS4210/monitor.c ****         		Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)i, (tWord)MonRdata);
 506:VS4210/monitor.c **** 			}
 507:VS4210/monitor.c **** 		}
 508:VS4210/monitor.c **** 		else {
 509:VS4210/monitor.c **** 			for(i=MonIndex; i<=ToMonIndex; i++) {
 510:VS4210/monitor.c **** 				MonRdata = ReadI2C(Slave, i);
 511:VS4210/monitor.c ****         		Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)i, (tWord)MonRdata);
 512:VS4210/monitor.c **** 			}
 513:VS4210/monitor.c **** 		}
 514:VS4210/monitor.c **** 	}
 515:VS4210/monitor.c **** 	else {
 516:VS4210/monitor.c **** 		if ( Slave == TW88I2CAddress ) {
 517:VS4210/monitor.c **** 			for(i=MonIndex; i<=ToMonIndex; i++) {
 518:VS4210/monitor.c **** 				MonRdata = ReadTW88(i);
 519:VS4210/monitor.c **** 			}
 520:VS4210/monitor.c **** 		}
 521:VS4210/monitor.c **** 		else {
 522:VS4210/monitor.c **** 			for(i=MonIndex; i<=ToMonIndex; i++) {
 523:VS4210/monitor.c **** 				MonRdata = ReadI2C(Slave, i);
 524:VS4210/monitor.c **** 			}
 525:VS4210/monitor.c **** 		}
 526:VS4210/monitor.c **** 	}
 527:VS4210/monitor.c **** 	*/
 528:VS4210/monitor.c **** }
 998              		.loc 1 528 0
 999 0000 7047     		bx	lr
 1000              		.cfi_endproc
 1001              	.LFE87:
 1003              		.section	.text.MonWriteBit,"ax",%progbits
 1004              		.align	1
 1005              		.global	MonWriteBit
 1006              		.syntax unified
 1007              		.thumb
 1008              		.thumb_func
 1009              		.fpu softvfp
 1011              	MonWriteBit:
 1012              	.LFB88:
 529:VS4210/monitor.c **** 
 530:VS4210/monitor.c **** 
 531:VS4210/monitor.c **** void MonWriteBit(void)
 532:VS4210/monitor.c **** {
 1013              		.loc 1 532 0
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 0
 1016              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccwHfacM.s 			page 28


 1017              		@ link register save eliminated.
 533:VS4210/monitor.c **** /*
 534:VS4210/monitor.c **** 	BYTE mask, i, FromBit, ToBit,  MonMask, val;
 535:VS4210/monitor.c **** 	BYTE Slave;
 536:VS4210/monitor.c **** 	// b 88 index startbit|endbit data
 537:VS4210/monitor.c **** 
 538:VS4210/monitor.c **** 	if( argc<5 ) {
 539:VS4210/monitor.c **** 		Printf("   --> Missing parameter !!!");
 540:VS4210/monitor.c **** 		return;
 541:VS4210/monitor.c **** 	}
 542:VS4210/monitor.c **** 	Slave = Asc2Bin(argv[1]);
 543:VS4210/monitor.c **** 
 544:VS4210/monitor.c **** 	MonIndex = Asc2Bin( argv[2] );
 545:VS4210/monitor.c **** 	FromBit  = (Asc2Bin( argv[3] ) >> 4) & 0x0f;
 546:VS4210/monitor.c **** 	ToBit  = Asc2Bin( argv[3] )  & 0x0f;
 547:VS4210/monitor.c **** 	MonMask  = Asc2Bin( argv[4] );
 548:VS4210/monitor.c **** 
 549:VS4210/monitor.c **** 	if( FromBit<ToBit || FromBit>7 || ToBit>7) {
 550:VS4210/monitor.c **** 		Printf("\r\n   --> Wrong range of bit operation !!!");
 551:VS4210/monitor.c **** 		return;
 552:VS4210/monitor.c **** 	}
 553:VS4210/monitor.c **** 	
 554:VS4210/monitor.c **** 	mask = 0xff; 
 555:VS4210/monitor.c **** 	val=0x7f;
 556:VS4210/monitor.c **** 	for(i=7; i>FromBit; i--) {
 557:VS4210/monitor.c **** 		mask &= val;
 558:VS4210/monitor.c **** 		val = val>>1;
 559:VS4210/monitor.c **** 	}
 560:VS4210/monitor.c **** 
 561:VS4210/monitor.c **** 	val=0xfe;
 562:VS4210/monitor.c **** 	for(i=0; i<ToBit; i++) {
 563:VS4210/monitor.c **** 		mask &= val;
 564:VS4210/monitor.c **** 		val = val<<1;
 565:VS4210/monitor.c **** 	}
 566:VS4210/monitor.c **** 
 567:VS4210/monitor.c **** 	if ( Slave == TW88I2CAddress ) {
 568:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 569:VS4210/monitor.c **** 		MonWdata = (MonRdata & (~mask)) | (MonMask & mask);
 570:VS4210/monitor.c **** 				
 571:VS4210/monitor.c **** 		WriteTW88(MonIndex, MonWdata);
 572:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 573:VS4210/monitor.c **** 	}
 574:VS4210/monitor.c **** 	else {
 575:VS4210/monitor.c **** 		MonRdata = ReadI2C(Slave, MonIndex);
 576:VS4210/monitor.c **** 		MonWdata = (MonRdata & (~mask)) | (MonMask & mask);
 577:VS4210/monitor.c **** 				
 578:VS4210/monitor.c **** 		WriteI2C(Slave, MonIndex, MonWdata);
 579:VS4210/monitor.c **** 		MonRdata = ReadI2C(Slave, MonIndex);
 580:VS4210/monitor.c **** 	}
 581:VS4210/monitor.c **** 
 582:VS4210/monitor.c **** 	if( echo )
 583:VS4210/monitor.c **** 		Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)MonIndex, (tWord)MonRdata);
 584:VS4210/monitor.c **** */
 585:VS4210/monitor.c **** }
 1018              		.loc 1 585 0
 1019 0000 7047     		bx	lr
 1020              		.cfi_endproc
ARM GAS  /tmp/ccwHfacM.s 			page 29


 1021              	.LFE88:
 1023              		.section	.text.MonTxDump,"ax",%progbits
 1024              		.align	1
 1025              		.global	MonTxDump
 1026              		.syntax unified
 1027              		.thumb
 1028              		.thumb_func
 1029              		.fpu softvfp
 1031              	MonTxDump:
 1032              	.LFB89:
 586:VS4210/monitor.c **** 
 587:VS4210/monitor.c **** #if  0// defined( SUPPORT_PC ) || defined( SUPPORT_DTV )
 588:VS4210/monitor.c **** void PclkAccess(void)
 589:VS4210/monitor.c **** {
 590:VS4210/monitor.c **** 	DtWord pclk;
 591:VS4210/monitor.c **** 
 592:VS4210/monitor.c **** 	if( argc > 2 ) {
 593:VS4210/monitor.c **** 		Printf("   --> Too many parameter !!!");
 594:VS4210/monitor.c **** 		return;
 595:VS4210/monitor.c **** 	}
 596:VS4210/monitor.c **** 
 597:VS4210/monitor.c **** 	if( argc==2 ) {
 598:VS4210/monitor.c **** 		pclk = (DtWord)a2i(argv[1]) * 1000000;
 599:VS4210/monitor.c **** 		Printf("\r\n --> Set Pclk:  %ld Hz ", pclk);
 600:VS4210/monitor.c **** //		Printf("\r\n Not Suuport ");
 601:VS4210/monitor.c **** 		ChangeInternPLL(pclk);
 602:VS4210/monitor.c **** 	}
 603:VS4210/monitor.c **** 	
 604:VS4210/monitor.c **** 	if( argc==1)   GetPPF();
 605:VS4210/monitor.c **** 	
 606:VS4210/monitor.c **** }
 607:VS4210/monitor.c **** #endif
 608:VS4210/monitor.c **** 
 609:VS4210/monitor.c **** void MonTxDump(void)
 610:VS4210/monitor.c **** {
 1033              		.loc 1 610 0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 0
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037              		@ link register save eliminated.
 611:VS4210/monitor.c **** /*
 612:VS4210/monitor.c **** 	tWord	count;
 613:VS4210/monitor.c **** 
 614:VS4210/monitor.c **** 	if ( argc < 2 ) {
 615:VS4210/monitor.c **** 		Puts("\r\nInsufficient parameters...");
 616:VS4210/monitor.c **** 		return;
 617:VS4210/monitor.c **** 	}
 618:VS4210/monitor.c **** 	count = (tWord)a2i(argv[1]);
 619:VS4210/monitor.c **** 	do {
 620:VS4210/monitor.c **** 		RS_tx((count&0x1F)+0x20);
 621:VS4210/monitor.c **** 		count--;
 622:VS4210/monitor.c **** 	} while ( count != 0 );
 623:VS4210/monitor.c **** 	*/
 624:VS4210/monitor.c **** }
 1038              		.loc 1 624 0
 1039 0000 7047     		bx	lr
 1040              		.cfi_endproc
ARM GAS  /tmp/ccwHfacM.s 			page 30


 1041              	.LFE89:
 1043              		.section	.text.MonHelp,"ax",%progbits
 1044              		.align	1
 1045              		.global	MonHelp
 1046              		.syntax unified
 1047              		.thumb
 1048              		.thumb_func
 1049              		.fpu softvfp
 1051              	MonHelp:
 1052              	.LFB90:
 625:VS4210/monitor.c **** 
 626:VS4210/monitor.c **** //=============================================================================
 627:VS4210/monitor.c **** //			Help Message
 628:VS4210/monitor.c **** //=============================================================================
 629:VS4210/monitor.c **** void MonHelp(void)
 630:VS4210/monitor.c **** {
 1053              		.loc 1 630 0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 0
 1056              		@ frame_needed = 0, uses_anonymous_args = 0
 1057 0000 38B5     		push	{r3, r4, r5, lr}
 1058              	.LCFI16:
 1059              		.cfi_def_cfa_offset 16
 1060              		.cfi_offset 3, -16
 1061              		.cfi_offset 4, -12
 1062              		.cfi_offset 5, -8
 1063              		.cfi_offset 14, -4
 631:VS4210/monitor.c **** 	#if 1
 632:VS4210/monitor.c **** 	  Printf("\r\n=======================================================");
 1064              		.loc 1 632 0
 1065 0002 154C     		ldr	r4, .L97
 1066 0004 2046     		mov	r0, r4
 1067 0006 FFF7FEFF 		bl	Printf
 1068              	.LVL73:
 633:VS4210/monitor.c **** 	  Printf("\r\n>>>   Welcome to TOA TAAH02 console	 Rev 1.00   <<<");
 1069              		.loc 1 633 0
 1070 000a 1448     		ldr	r0, .L97+4
 1071 000c FFF7FEFF 		bl	Printf
 1072              	.LVL74:
 634:VS4210/monitor.c **** 	  Printf("\r\n=======================================================");
 1073              		.loc 1 634 0
 1074 0010 2046     		mov	r0, r4
 1075 0012 FFF7FEFF 		bl	Printf
 1076              	.LVL75:
 635:VS4210/monitor.c **** 	  Printf("\r\n R [ii] 		   ; Read Register data");
 1077              		.loc 1 635 0
 1078 0016 1248     		ldr	r0, .L97+8
 1079 0018 FFF7FEFF 		bl	Printf
 1080              	.LVL76:
 636:VS4210/monitor.c **** 	  Printf("\r\n W [ii] [dd]		   ; Write Register data");
 1081              		.loc 1 636 0
 1082 001c 1148     		ldr	r0, .L97+12
 1083 001e FFF7FEFF 		bl	Printf
 1084              	.LVL77:
 637:VS4210/monitor.c **** 	  Printf("\r\n Dump [ii] [cc] 	   ; Dump [first][end] Reg.") ;
 1085              		.loc 1 637 0
 1086 0022 1148     		ldr	r0, .L97+16
ARM GAS  /tmp/ccwHfacM.s 			page 31


 1087 0024 FFF7FEFF 		bl	Printf
 1088              	.LVL78:
 638:VS4210/monitor.c **** 	  Printf("\r\n I2C [aa]		   ; Change I2C address");
 1089              		.loc 1 638 0
 1090 0028 1048     		ldr	r0, .L97+20
 1091 002a FFF7FEFF 		bl	Printf
 1092              	.LVL79:
 639:VS4210/monitor.c **** 	  Printf("\r\n < VS4210:40 TP2824:88 EEPROM:0xA0 HDMI:90 >");
 1093              		.loc 1 639 0
 1094 002e 1048     		ldr	r0, .L97+24
 1095 0030 FFF7FEFF 		bl	Printf
 1096              	.LVL80:
 640:VS4210/monitor.c **** 	  Printf("\r\n WIN [ii] 	           ; Change Input Source");
 1097              		.loc 1 640 0
 1098 0034 0F48     		ldr	r0, .L97+28
 1099 0036 FFF7FEFF 		bl	Printf
 1100              	.LVL81:
 641:VS4210/monitor.c **** 	  Printf("\r\n Access [0,1]		   ; TP2824 Access OFF/ON");
 1101              		.loc 1 641 0
 1102 003a 0F48     		ldr	r0, .L97+32
 1103 003c FFF7FEFF 		bl	Printf
 1104              	.LVL82:
 642:VS4210/monitor.c **** 	  Printf("\r\n");
 1105              		.loc 1 642 0
 1106 0040 0E4D     		ldr	r5, .L97+36
 1107 0042 2846     		mov	r0, r5
 1108 0044 FFF7FEFF 		bl	Printf
 1109              	.LVL83:
 643:VS4210/monitor.c **** 	  Printf("\r\n=======================================================");
 1110              		.loc 1 643 0
 1111 0048 2046     		mov	r0, r4
 1112 004a FFF7FEFF 		bl	Printf
 1113              	.LVL84:
 644:VS4210/monitor.c **** 	  Printf("\r\n");
 1114              		.loc 1 644 0
 1115 004e 2846     		mov	r0, r5
 1116 0050 FFF7FEFF 		bl	Printf
 1117              	.LVL85:
 645:VS4210/monitor.c **** 
 646:VS4210/monitor.c **** 	#else
 647:VS4210/monitor.c **** 	Printf("\r\n=======================================================");
 648:VS4210/monitor.c **** 	Printf("\r\n>>>     Welcome to ML076HQ     Rev 1.00     <<<");
 649:VS4210/monitor.c **** 	Printf("\r\n=======================================================");
 650:VS4210/monitor.c **** 	Printf("\r\n   R ii             ; Read TP2824 data");
 651:VS4210/monitor.c **** 	Printf("\r\n   W ii dd          ; Write TP2824 data");
 652:VS4210/monitor.c **** 	Printf("\r\n   VR ii             ; Read VS4210 data");
 653:VS4210/monitor.c **** 	Printf("\r\n   VW ii dd          ; Write VS4210 data");
 654:VS4210/monitor.c **** 	Printf("\r\n   D [ii] [cc]      ; Dump");
 655:VS4210/monitor.c **** 	Printf("\r\n   C aa             ; Change I2C address");
 656:VS4210/monitor.c **** 	Printf("\r\n   M ?              ; Current Input");
 657:VS4210/monitor.c **** 	Printf("\r\n   M dd             ; Change Input");
 658:VS4210/monitor.c **** 	Printf("\r\n   Access [0,1]     ; Program TW88xx Access OFF/ON");
 659:VS4210/monitor.c **** 	Printf("\r\n   AutoDetect [0,1] ; PC Automode OFF/ON");
 660:VS4210/monitor.c **** 	Printf("\r\n   PCAuto		    ; RUN PC Auto Adjust");
 661:VS4210/monitor.c **** 	Printf("\r\n   Debug [0..255]   ; Debuging display level");
 662:VS4210/monitor.c **** 	Printf("\r\n   Echo On/Off      ; Terminal Echoing On/Off");
 663:VS4210/monitor.c **** 	Printf("\r\n   Delta            ; Init DeltaRGB Panel");
ARM GAS  /tmp/ccwHfacM.s 			page 32


 664:VS4210/monitor.c **** 	Printf("\r\n   Delta w ii dh dl; SPI Write to DeltaRGB Panel");
 665:VS4210/monitor.c **** 	Printf("\r\n");
 666:VS4210/monitor.c **** 	Printf("\r\n=======================================================");
 667:VS4210/monitor.c **** 	Printf("\r\n");
 668:VS4210/monitor.c **** 	#endif
 669:VS4210/monitor.c **** }
 1118              		.loc 1 669 0
 1119 0054 38BD     		pop	{r3, r4, r5, pc}
 1120              	.L98:
 1121 0056 00BF     		.align	2
 1122              	.L97:
 1123 0058 00000000 		.word	.LC9
 1124 005c 3C000000 		.word	.LC10
 1125 0060 74000000 		.word	.LC11
 1126 0064 98000000 		.word	.LC12
 1127 0068 C4000000 		.word	.LC13
 1128 006c F4000000 		.word	.LC14
 1129 0070 1C010000 		.word	.LC15
 1130 0074 4C010000 		.word	.LC16
 1131 0078 7C010000 		.word	.LC17
 1132 007c A8010000 		.word	.LC18
 1133              		.cfi_endproc
 1134              	.LFE90:
 1136              		.section	.text.MonGetCommand,"ax",%progbits
 1137              		.align	1
 1138              		.global	MonGetCommand
 1139              		.syntax unified
 1140              		.thumb
 1141              		.thumb_func
 1142              		.fpu softvfp
 1144              	MonGetCommand:
 1145              	.LFB91:
 670:VS4210/monitor.c **** 
 671:VS4210/monitor.c **** //=============================================================================
 672:VS4210/monitor.c **** //
 673:VS4210/monitor.c **** //=============================================================================
 674:VS4210/monitor.c **** BYTE MonGetCommand(void)
 675:VS4210/monitor.c **** {
 1146              		.loc 1 675 0
 1147              		.cfi_startproc
 1148              		@ args = 0, pretend = 0, frame = 0
 1149              		@ frame_needed = 0, uses_anonymous_args = 0
 1150 0000 38B5     		push	{r3, r4, r5, lr}
 1151              	.LCFI17:
 1152              		.cfi_def_cfa_offset 16
 1153              		.cfi_offset 3, -16
 1154              		.cfi_offset 4, -12
 1155              		.cfi_offset 5, -8
 1156              		.cfi_offset 14, -4
 1157              	.LVL86:
 676:VS4210/monitor.c **** 	static BYTE comment=0;
 677:VS4210/monitor.c **** 	static BYTE incnt=0, last_argc=0;
 678:VS4210/monitor.c **** 	BYTE i, ch;
 679:VS4210/monitor.c **** 	BYTE ret=0;
 680:VS4210/monitor.c **** 
 681:VS4210/monitor.c **** 	if( !RS_ready() ) return 0;
 1158              		.loc 1 681 0
ARM GAS  /tmp/ccwHfacM.s 			page 33


 1159 0002 FFF7FEFF 		bl	RS_ready
 1160              	.LVL87:
 1161 0006 0446     		mov	r4, r0
 1162 0008 08B9     		cbnz	r0, .L132
 1163              	.LVL88:
 1164              	.L100:
 682:VS4210/monitor.c **** 	//#ifdef HS_DEBUG
 683:VS4210/monitor.c **** 	ch = RS_rx();
 684:VS4210/monitor.c **** 	//#endif
 685:VS4210/monitor.c **** 
 686:VS4210/monitor.c **** 	#if (_DEBUG_MESSAGE_Monitor==ON)
 687:VS4210/monitor.c **** 	 Monitor_flag=_TRUE;
 688:VS4210/monitor.c **** 	#endif
 689:VS4210/monitor.c **** 	  MCUTimerReactiveTimerEvent(SEC(30), _USER_TIMER_EVENT_Monitor_ON);  
 690:VS4210/monitor.c **** 
 691:VS4210/monitor.c **** 	//----- if comment, echo back and ignore -----
 692:VS4210/monitor.c **** 	if( comment ) {
 693:VS4210/monitor.c **** 		if( ch=='\r' || ch==0x1b ) comment = 0;
 694:VS4210/monitor.c **** 		else { 
 695:VS4210/monitor.c **** 			Mon_tx(ch);
 696:VS4210/monitor.c **** 			return 0;
 697:VS4210/monitor.c **** 		}
 698:VS4210/monitor.c **** 	}
 699:VS4210/monitor.c **** 	else if( ch==';' ) {
 700:VS4210/monitor.c **** 		comment = 1;
 701:VS4210/monitor.c **** 		Mon_tx(ch);
 702:VS4210/monitor.c **** 		return 0;
 703:VS4210/monitor.c **** 	}
 704:VS4210/monitor.c **** 
 705:VS4210/monitor.c **** 	//=====================================
 706:VS4210/monitor.c **** 	switch( ch ) {
 707:VS4210/monitor.c **** 
 708:VS4210/monitor.c **** 	case 0x1b:
 709:VS4210/monitor.c **** 		argc = 0;
 710:VS4210/monitor.c **** 		incnt = 0;
 711:VS4210/monitor.c **** 		comment = 0;
 712:VS4210/monitor.c **** 		Prompt();
 713:VS4210/monitor.c **** 		return 0;
 714:VS4210/monitor.c **** 
 715:VS4210/monitor.c **** 	//--- end of string
 716:VS4210/monitor.c **** 	case '\r':
 717:VS4210/monitor.c **** 
 718:VS4210/monitor.c **** 		if( incnt==0 ) {
 719:VS4210/monitor.c **** 			Prompt();
 720:VS4210/monitor.c **** 			break;
 721:VS4210/monitor.c **** 		}
 722:VS4210/monitor.c **** 
 723:VS4210/monitor.c **** 		monstr[incnt++] = '\0';
 724:VS4210/monitor.c **** 		argc=0;
 725:VS4210/monitor.c **** 
 726:VS4210/monitor.c **** 		for(i=0; i<incnt; i++) if( monstr[i]!=' ' ) break;
 727:VS4210/monitor.c **** 
 728:VS4210/monitor.c **** 		if( !monstr[i] ) {
 729:VS4210/monitor.c **** 			incnt = 0;
 730:VS4210/monitor.c **** 			comment = 0;
 731:VS4210/monitor.c **** 			Prompt();
 732:VS4210/monitor.c **** 			return 0;
ARM GAS  /tmp/ccwHfacM.s 			page 34


 733:VS4210/monitor.c **** 		}
 734:VS4210/monitor.c **** 		argv[0] = &monstr[i];
 735:VS4210/monitor.c **** 		for(; i<incnt; i++) {
 736:VS4210/monitor.c **** 			if( monstr[i]==' ' || monstr[i]=='\0' ) {
 737:VS4210/monitor.c **** 				monstr[i]='\0';
 738:VS4210/monitor.c ****      			 //Printf("(%s) ",  argv[argc]);
 739:VS4210/monitor.c **** 				i++;
 740:VS4210/monitor.c **** 				while( monstr[i]==' ' ) i++;
 741:VS4210/monitor.c **** 				argc++;
 742:VS4210/monitor.c **** 				if( monstr[i] ){
 743:VS4210/monitor.c ****      			 argv[argc] = &monstr[i];
 744:VS4210/monitor.c **** 				}
 745:VS4210/monitor.c **** 			}
 746:VS4210/monitor.c **** 		}
 747:VS4210/monitor.c **** 
 748:VS4210/monitor.c **** 		ret = 1;
 749:VS4210/monitor.c **** 		last_argc = argc;
 750:VS4210/monitor.c **** 		incnt = 0;
 751:VS4210/monitor.c **** 		
 752:VS4210/monitor.c **** 		break;
 753:VS4210/monitor.c **** 
 754:VS4210/monitor.c **** 	//--- repeat command
 755:VS4210/monitor.c **** 	case '/':
 756:VS4210/monitor.c **** 		argc = last_argc;
 757:VS4210/monitor.c **** 		ret = 1;
 758:VS4210/monitor.c **** 		break;
 759:VS4210/monitor.c **** 
 760:VS4210/monitor.c **** 	//--- back space
 761:VS4210/monitor.c **** 	case 0x08:
 762:VS4210/monitor.c **** 		if( incnt ) {
 763:VS4210/monitor.c **** 			incnt--;
 764:VS4210/monitor.c **** 			Mon_tx(ch);
 765:VS4210/monitor.c **** 			Mon_tx(' ');
 766:VS4210/monitor.c **** 			Mon_tx(ch);
 767:VS4210/monitor.c **** 		}
 768:VS4210/monitor.c **** 		break;
 769:VS4210/monitor.c **** 
 770:VS4210/monitor.c **** 	//--- decreamental write
 771:VS4210/monitor.c **** 	case ',':
 772:VS4210/monitor.c **** 		if( incnt ) {
 773:VS4210/monitor.c **** 			Mon_tx(ch);
 774:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 775:VS4210/monitor.c **** 		}
 776:VS4210/monitor.c **** 		else
 777:VS4210/monitor.c **** 			MonIncDecI2C(0);
 778:VS4210/monitor.c **** 		break;
 779:VS4210/monitor.c **** 
 780:VS4210/monitor.c **** 	case '<':
 781:VS4210/monitor.c **** 		if( incnt ) {
 782:VS4210/monitor.c **** 			Mon_tx(ch);
 783:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 784:VS4210/monitor.c **** 		}
 785:VS4210/monitor.c **** 		else
 786:VS4210/monitor.c **** 			MonIncDecI2C(10);
 787:VS4210/monitor.c **** 		break;
 788:VS4210/monitor.c **** 	//--- increamental write
 789:VS4210/monitor.c **** 	case '.':
ARM GAS  /tmp/ccwHfacM.s 			page 35


 790:VS4210/monitor.c **** 		if( incnt ) {
 791:VS4210/monitor.c **** 			Mon_tx(ch);
 792:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 793:VS4210/monitor.c **** 		}
 794:VS4210/monitor.c **** 		else
 795:VS4210/monitor.c **** 			MonIncDecI2C(1);
 796:VS4210/monitor.c **** 		break;
 797:VS4210/monitor.c **** 
 798:VS4210/monitor.c **** 	case '>':
 799:VS4210/monitor.c **** 		if( incnt ) {
 800:VS4210/monitor.c **** 			Mon_tx(ch);
 801:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 802:VS4210/monitor.c **** 		}
 803:VS4210/monitor.c **** 		else
 804:VS4210/monitor.c **** 			MonIncDecI2C(11);
 805:VS4210/monitor.c **** 		break;
 806:VS4210/monitor.c **** 
 807:VS4210/monitor.c **** 	default:
 808:VS4210/monitor.c **** 		Mon_tx(ch);
 809:VS4210/monitor.c **** 		monstr[incnt++] = ch;
 810:VS4210/monitor.c **** 		break;
 811:VS4210/monitor.c **** 	}
 812:VS4210/monitor.c **** 
 813:VS4210/monitor.c **** 	if( ret ) {
 814:VS4210/monitor.c **** 		comment = 0;
 815:VS4210/monitor.c **** 		last_argc = argc;
 816:VS4210/monitor.c **** 		return ret;
 817:VS4210/monitor.c **** 	}
 818:VS4210/monitor.c **** 	else {
 819:VS4210/monitor.c **** 		return ret;
 820:VS4210/monitor.c **** 	}
 821:VS4210/monitor.c **** }
 1165              		.loc 1 821 0
 1166 000a 2046     		mov	r0, r4
 1167 000c 38BD     		pop	{r3, r4, r5, pc}
 1168              	.LVL89:
 1169              	.L132:
 683:VS4210/monitor.c **** 	//#endif
 1170              		.loc 1 683 0
 1171 000e FFF7FEFF 		bl	RS_rx
 1172              	.LVL90:
 1173 0012 0546     		mov	r5, r0
 1174              	.LVL91:
 687:VS4210/monitor.c **** 	#endif
 1175              		.loc 1 687 0
 1176 0014 944B     		ldr	r3, .L137
 1177 0016 0122     		movs	r2, #1
 1178 0018 1A70     		strb	r2, [r3]
 689:VS4210/monitor.c **** 
 1179              		.loc 1 689 0
 1180 001a 1F21     		movs	r1, #31
 1181 001c 47F23050 		movw	r0, #30000
 1182 0020 FFF7FEFF 		bl	MCUTimerReactiveTimerEvent
 1183              	.LVL92:
 692:VS4210/monitor.c **** 		if( ch=='\r' || ch==0x1b ) comment = 0;
 1184              		.loc 1 692 0
 1185 0024 914B     		ldr	r3, .L137+4
ARM GAS  /tmp/ccwHfacM.s 			page 36


 1186 0026 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1187 0028 64B1     		cbz	r4, .L101
 693:VS4210/monitor.c **** 		else { 
 1188              		.loc 1 693 0
 1189 002a 0D2D     		cmp	r5, #13
 1190 002c 01D0     		beq	.L102
 693:VS4210/monitor.c **** 		else { 
 1191              		.loc 1 693 0 is_stmt 0 discriminator 2
 1192 002e 1B2D     		cmp	r5, #27
 1193 0030 03D1     		bne	.L103
 1194              	.L102:
 693:VS4210/monitor.c **** 		else { 
 1195              		.loc 1 693 0 discriminator 3
 1196 0032 8E4B     		ldr	r3, .L137+4
 1197 0034 0022     		movs	r2, #0
 1198 0036 1A70     		strb	r2, [r3]
 1199 0038 06E0     		b	.L104
 1200              	.L103:
 695:VS4210/monitor.c **** 			return 0;
 1201              		.loc 1 695 0 is_stmt 1
 1202 003a 2846     		mov	r0, r5
 1203 003c FFF7FEFF 		bl	Mon_tx
 1204              	.LVL93:
 696:VS4210/monitor.c **** 		}
 1205              		.loc 1 696 0
 1206 0040 0024     		movs	r4, #0
 1207 0042 E2E7     		b	.L100
 1208              	.L101:
 699:VS4210/monitor.c **** 		comment = 1;
 1209              		.loc 1 699 0
 1210 0044 3B2D     		cmp	r5, #59
 1211 0046 3DD0     		beq	.L133
 1212              	.L104:
 706:VS4210/monitor.c **** 
 1213              		.loc 1 706 0
 1214 0048 A5F10803 		sub	r3, r5, #8
 1215 004c 362B     		cmp	r3, #54
 1216 004e 00F2FF80 		bhi	.L105
 1217 0052 DFE813F0 		tbh	[pc, r3, lsl #1]
 1218              	.L107:
 1219 0056 A300     		.2byte	(.L106-.L107)/2
 1220 0058 FD00     		.2byte	(.L105-.L107)/2
 1221 005a FD00     		.2byte	(.L105-.L107)/2
 1222 005c FD00     		.2byte	(.L105-.L107)/2
 1223 005e FD00     		.2byte	(.L105-.L107)/2
 1224 0060 4800     		.2byte	(.L108-.L107)/2
 1225 0062 FD00     		.2byte	(.L105-.L107)/2
 1226 0064 FD00     		.2byte	(.L105-.L107)/2
 1227 0066 FD00     		.2byte	(.L105-.L107)/2
 1228 0068 FD00     		.2byte	(.L105-.L107)/2
 1229 006a FD00     		.2byte	(.L105-.L107)/2
 1230 006c FD00     		.2byte	(.L105-.L107)/2
 1231 006e FD00     		.2byte	(.L105-.L107)/2
 1232 0070 FD00     		.2byte	(.L105-.L107)/2
 1233 0072 FD00     		.2byte	(.L105-.L107)/2
 1234 0074 FD00     		.2byte	(.L105-.L107)/2
 1235 0076 FD00     		.2byte	(.L105-.L107)/2
ARM GAS  /tmp/ccwHfacM.s 			page 37


 1236 0078 FD00     		.2byte	(.L105-.L107)/2
 1237 007a FD00     		.2byte	(.L105-.L107)/2
 1238 007c 3E00     		.2byte	(.L109-.L107)/2
 1239 007e FD00     		.2byte	(.L105-.L107)/2
 1240 0080 FD00     		.2byte	(.L105-.L107)/2
 1241 0082 FD00     		.2byte	(.L105-.L107)/2
 1242 0084 FD00     		.2byte	(.L105-.L107)/2
 1243 0086 FD00     		.2byte	(.L105-.L107)/2
 1244 0088 FD00     		.2byte	(.L105-.L107)/2
 1245 008a FD00     		.2byte	(.L105-.L107)/2
 1246 008c FD00     		.2byte	(.L105-.L107)/2
 1247 008e FD00     		.2byte	(.L105-.L107)/2
 1248 0090 FD00     		.2byte	(.L105-.L107)/2
 1249 0092 FD00     		.2byte	(.L105-.L107)/2
 1250 0094 FD00     		.2byte	(.L105-.L107)/2
 1251 0096 FD00     		.2byte	(.L105-.L107)/2
 1252 0098 FD00     		.2byte	(.L105-.L107)/2
 1253 009a FD00     		.2byte	(.L105-.L107)/2
 1254 009c FD00     		.2byte	(.L105-.L107)/2
 1255 009e B500     		.2byte	(.L110-.L107)/2
 1256 00a0 FD00     		.2byte	(.L105-.L107)/2
 1257 00a2 D900     		.2byte	(.L111-.L107)/2
 1258 00a4 9600     		.2byte	(.L112-.L107)/2
 1259 00a6 FD00     		.2byte	(.L105-.L107)/2
 1260 00a8 FD00     		.2byte	(.L105-.L107)/2
 1261 00aa FD00     		.2byte	(.L105-.L107)/2
 1262 00ac FD00     		.2byte	(.L105-.L107)/2
 1263 00ae FD00     		.2byte	(.L105-.L107)/2
 1264 00b0 FD00     		.2byte	(.L105-.L107)/2
 1265 00b2 FD00     		.2byte	(.L105-.L107)/2
 1266 00b4 FD00     		.2byte	(.L105-.L107)/2
 1267 00b6 FD00     		.2byte	(.L105-.L107)/2
 1268 00b8 FD00     		.2byte	(.L105-.L107)/2
 1269 00ba FD00     		.2byte	(.L105-.L107)/2
 1270 00bc FD00     		.2byte	(.L105-.L107)/2
 1271 00be C700     		.2byte	(.L113-.L107)/2
 1272 00c0 FD00     		.2byte	(.L105-.L107)/2
 1273 00c2 EB00     		.2byte	(.L114-.L107)/2
 1274              		.p2align 1
 1275              	.L133:
 700:VS4210/monitor.c **** 		Mon_tx(ch);
 1276              		.loc 1 700 0
 1277 00c4 694B     		ldr	r3, .L137+4
 1278 00c6 0122     		movs	r2, #1
 1279 00c8 1A70     		strb	r2, [r3]
 701:VS4210/monitor.c **** 		return 0;
 1280              		.loc 1 701 0
 1281 00ca 2846     		mov	r0, r5
 1282 00cc FFF7FEFF 		bl	Mon_tx
 1283              	.LVL94:
 702:VS4210/monitor.c **** 	}
 1284              		.loc 1 702 0
 1285 00d0 9BE7     		b	.L100
 1286              	.L109:
 709:VS4210/monitor.c **** 		incnt = 0;
 1287              		.loc 1 709 0
 1288 00d2 0024     		movs	r4, #0
ARM GAS  /tmp/ccwHfacM.s 			page 38


 1289 00d4 664B     		ldr	r3, .L137+8
 1290 00d6 1C70     		strb	r4, [r3]
 710:VS4210/monitor.c **** 		comment = 0;
 1291              		.loc 1 710 0
 1292 00d8 664B     		ldr	r3, .L137+12
 1293 00da 1C70     		strb	r4, [r3]
 711:VS4210/monitor.c **** 		Prompt();
 1294              		.loc 1 711 0
 1295 00dc 634B     		ldr	r3, .L137+4
 1296 00de 1C70     		strb	r4, [r3]
 712:VS4210/monitor.c **** 		return 0;
 1297              		.loc 1 712 0
 1298 00e0 FFF7FEFF 		bl	Prompt
 1299              	.LVL95:
 713:VS4210/monitor.c **** 
 1300              		.loc 1 713 0
 1301 00e4 91E7     		b	.L100
 1302              	.L108:
 718:VS4210/monitor.c **** 			Prompt();
 1303              		.loc 1 718 0
 1304 00e6 634B     		ldr	r3, .L137+12
 1305 00e8 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1306 00ea 84B1     		cbz	r4, .L134
 723:VS4210/monitor.c **** 		argc=0;
 1307              		.loc 1 723 0
 1308 00ec 601C     		adds	r0, r4, #1
 1309 00ee C0B2     		uxtb	r0, r0
 1310 00f0 0023     		movs	r3, #0
 1311 00f2 614A     		ldr	r2, .L137+16
 1312 00f4 1355     		strb	r3, [r2, r4]
 724:VS4210/monitor.c **** 
 1313              		.loc 1 724 0
 1314 00f6 5E4A     		ldr	r2, .L137+8
 1315 00f8 1370     		strb	r3, [r2]
 1316              	.LVL96:
 726:VS4210/monitor.c **** 
 1317              		.loc 1 726 0
 1318 00fa 1D46     		mov	r5, r3
 1319              	.LVL97:
 1320              	.L116:
 726:VS4210/monitor.c **** 
 1321              		.loc 1 726 0 is_stmt 0 discriminator 3
 1322 00fc A842     		cmp	r0, r5
 1323 00fe 09D9     		bls	.L117
 726:VS4210/monitor.c **** 
 1324              		.loc 1 726 0 discriminator 4
 1325 0100 5D4A     		ldr	r2, .L137+16
 1326 0102 525D     		ldrb	r2, [r2, r5]	@ zero_extendqisi2
 1327 0104 202A     		cmp	r2, #32
 1328 0106 05D1     		bne	.L117
 726:VS4210/monitor.c **** 
 1329              		.loc 1 726 0 discriminator 2
 1330 0108 6B1C     		adds	r3, r5, #1
 1331 010a DDB2     		uxtb	r5, r3
 1332              	.LVL98:
 1333 010c F6E7     		b	.L116
 1334              	.LVL99:
ARM GAS  /tmp/ccwHfacM.s 			page 39


 1335              	.L134:
 719:VS4210/monitor.c **** 			break;
 1336              		.loc 1 719 0 is_stmt 1
 1337 010e FFF7FEFF 		bl	Prompt
 1338              	.LVL100:
 1339 0112 7AE7     		b	.L100
 1340              	.LVL101:
 1341              	.L117:
 728:VS4210/monitor.c **** 			incnt = 0;
 1342              		.loc 1 728 0
 1343 0114 584B     		ldr	r3, .L137+16
 1344 0116 5C5D     		ldrb	r4, [r3, r5]	@ zero_extendqisi2
 1345 0118 24B1     		cbz	r4, .L135
 734:VS4210/monitor.c **** 		for(; i<incnt; i++) {
 1346              		.loc 1 734 0
 1347 011a 574B     		ldr	r3, .L137+16
 1348 011c 2B44     		add	r3, r3, r5
 1349 011e 574A     		ldr	r2, .L137+20
 1350 0120 1360     		str	r3, [r2]
 735:VS4210/monitor.c **** 			if( monstr[i]==' ' || monstr[i]=='\0' ) {
 1351              		.loc 1 735 0
 1352 0122 1BE0     		b	.L120
 1353              	.L135:
 729:VS4210/monitor.c **** 			comment = 0;
 1354              		.loc 1 729 0
 1355 0124 0023     		movs	r3, #0
 1356 0126 534A     		ldr	r2, .L137+12
 1357 0128 1370     		strb	r3, [r2]
 730:VS4210/monitor.c **** 			Prompt();
 1358              		.loc 1 730 0
 1359 012a 504A     		ldr	r2, .L137+4
 1360 012c 1370     		strb	r3, [r2]
 731:VS4210/monitor.c **** 			return 0;
 1361              		.loc 1 731 0
 1362 012e FFF7FEFF 		bl	Prompt
 1363              	.LVL102:
 732:VS4210/monitor.c **** 		}
 1364              		.loc 1 732 0
 1365 0132 6AE7     		b	.L100
 1366              	.L124:
 740:VS4210/monitor.c **** 				argc++;
 1367              		.loc 1 740 0 discriminator 2
 1368 0134 6B1C     		adds	r3, r5, #1
 1369 0136 DDB2     		uxtb	r5, r3
 1370              	.LVL103:
 1371              	.L123:
 740:VS4210/monitor.c **** 				argc++;
 1372              		.loc 1 740 0 is_stmt 0 discriminator 1
 1373 0138 2A46     		mov	r2, r5
 1374 013a 4F4B     		ldr	r3, .L137+16
 1375 013c 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 1376 013e 202B     		cmp	r3, #32
 1377 0140 F8D0     		beq	.L124
 741:VS4210/monitor.c **** 				if( monstr[i] ){
 1378              		.loc 1 741 0 is_stmt 1
 1379 0142 4B4C     		ldr	r4, .L137+8
 1380 0144 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
ARM GAS  /tmp/ccwHfacM.s 			page 40


 1381 0146 0131     		adds	r1, r1, #1
 1382 0148 C9B2     		uxtb	r1, r1
 1383 014a 2170     		strb	r1, [r4]
 742:VS4210/monitor.c ****      			 argv[argc] = &monstr[i];
 1384              		.loc 1 742 0
 1385 014c 23B1     		cbz	r3, .L122
 743:VS4210/monitor.c **** 				}
 1386              		.loc 1 743 0
 1387 014e 4A4B     		ldr	r3, .L137+16
 1388 0150 1A44     		add	r2, r2, r3
 1389 0152 4A4B     		ldr	r3, .L137+20
 1390 0154 43F82120 		str	r2, [r3, r1, lsl #2]
 1391              	.L122:
 735:VS4210/monitor.c **** 			if( monstr[i]==' ' || monstr[i]=='\0' ) {
 1392              		.loc 1 735 0
 1393 0158 6B1C     		adds	r3, r5, #1
 1394 015a DDB2     		uxtb	r5, r3
 1395              	.LVL104:
 1396              	.L120:
 735:VS4210/monitor.c **** 			if( monstr[i]==' ' || monstr[i]=='\0' ) {
 1397              		.loc 1 735 0 is_stmt 0 discriminator 1
 1398 015c A842     		cmp	r0, r5
 1399 015e 0CD9     		bls	.L136
 736:VS4210/monitor.c **** 				monstr[i]='\0';
 1400              		.loc 1 736 0 is_stmt 1
 1401 0160 2B46     		mov	r3, r5
 1402 0162 454A     		ldr	r2, .L137+16
 1403 0164 525D     		ldrb	r2, [r2, r5]	@ zero_extendqisi2
 1404 0166 202A     		cmp	r2, #32
 1405 0168 01D0     		beq	.L121
 736:VS4210/monitor.c **** 				monstr[i]='\0';
 1406              		.loc 1 736 0 is_stmt 0 discriminator 1
 1407 016a 002A     		cmp	r2, #0
 1408 016c F4D1     		bne	.L122
 1409              	.L121:
 737:VS4210/monitor.c ****      			 //Printf("(%s) ",  argv[argc]);
 1410              		.loc 1 737 0 is_stmt 1
 1411 016e 424A     		ldr	r2, .L137+16
 1412 0170 0021     		movs	r1, #0
 1413 0172 D154     		strb	r1, [r2, r3]
 739:VS4210/monitor.c **** 				while( monstr[i]==' ' ) i++;
 1414              		.loc 1 739 0
 1415 0174 6B1C     		adds	r3, r5, #1
 1416 0176 DDB2     		uxtb	r5, r3
 1417              	.LVL105:
 740:VS4210/monitor.c **** 				argc++;
 1418              		.loc 1 740 0
 1419 0178 DEE7     		b	.L123
 1420              	.L136:
 1421              	.LVL106:
 750:VS4210/monitor.c **** 		
 1422              		.loc 1 750 0
 1423 017a 3E4B     		ldr	r3, .L137+12
 1424 017c 0022     		movs	r2, #0
 1425 017e 1A70     		strb	r2, [r3]
 1426 0180 03E0     		b	.L126
 1427              	.LVL107:
ARM GAS  /tmp/ccwHfacM.s 			page 41


 1428              	.L112:
 756:VS4210/monitor.c **** 		ret = 1;
 1429              		.loc 1 756 0
 1430 0182 3F4B     		ldr	r3, .L137+24
 1431 0184 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1432 0186 3A4B     		ldr	r3, .L137+8
 1433 0188 1A70     		strb	r2, [r3]
 1434              	.LVL108:
 1435              	.L126:
 814:VS4210/monitor.c **** 		last_argc = argc;
 1436              		.loc 1 814 0
 1437 018a 384B     		ldr	r3, .L137+4
 1438 018c 0022     		movs	r2, #0
 1439 018e 1A70     		strb	r2, [r3]
 815:VS4210/monitor.c **** 		return ret;
 1440              		.loc 1 815 0
 1441 0190 374B     		ldr	r3, .L137+8
 1442 0192 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1443 0194 3A4B     		ldr	r3, .L137+24
 1444 0196 1A70     		strb	r2, [r3]
 816:VS4210/monitor.c **** 	}
 1445              		.loc 1 816 0
 1446 0198 0124     		movs	r4, #1
 1447 019a 36E7     		b	.L100
 1448              	.LVL109:
 1449              	.L106:
 762:VS4210/monitor.c **** 			incnt--;
 1450              		.loc 1 762 0
 1451 019c 354B     		ldr	r3, .L137+12
 1452 019e 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1453 01a0 002C     		cmp	r4, #0
 1454 01a2 3FF432AF 		beq	.L100
 763:VS4210/monitor.c **** 			Mon_tx(ch);
 1455              		.loc 1 763 0
 1456 01a6 013C     		subs	r4, r4, #1
 1457 01a8 1C70     		strb	r4, [r3]
 764:VS4210/monitor.c **** 			Mon_tx(' ');
 1458              		.loc 1 764 0
 1459 01aa 2846     		mov	r0, r5
 1460 01ac FFF7FEFF 		bl	Mon_tx
 1461              	.LVL110:
 765:VS4210/monitor.c **** 			Mon_tx(ch);
 1462              		.loc 1 765 0
 1463 01b0 2020     		movs	r0, #32
 1464 01b2 FFF7FEFF 		bl	Mon_tx
 1465              	.LVL111:
 766:VS4210/monitor.c **** 		}
 1466              		.loc 1 766 0
 1467 01b6 2846     		mov	r0, r5
 1468 01b8 FFF7FEFF 		bl	Mon_tx
 1469              	.LVL112:
 1470 01bc 0024     		movs	r4, #0
 1471 01be 24E7     		b	.L100
 1472              	.L110:
 772:VS4210/monitor.c **** 			Mon_tx(ch);
 1473              		.loc 1 772 0
 1474 01c0 2C4B     		ldr	r3, .L137+12
ARM GAS  /tmp/ccwHfacM.s 			page 42


 1475 01c2 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1476 01c4 54B1     		cbz	r4, .L127
 773:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 1477              		.loc 1 773 0
 1478 01c6 2846     		mov	r0, r5
 1479 01c8 FFF7FEFF 		bl	Mon_tx
 1480              	.LVL113:
 774:VS4210/monitor.c **** 		}
 1481              		.loc 1 774 0
 1482 01cc 294A     		ldr	r2, .L137+12
 1483 01ce 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1484 01d0 591C     		adds	r1, r3, #1
 1485 01d2 1170     		strb	r1, [r2]
 1486 01d4 284A     		ldr	r2, .L137+16
 1487 01d6 D554     		strb	r5, [r2, r3]
 1488 01d8 0024     		movs	r4, #0
 1489 01da 16E7     		b	.L100
 1490              	.L127:
 777:VS4210/monitor.c **** 		break;
 1491              		.loc 1 777 0
 1492 01dc 0020     		movs	r0, #0
 1493 01de FFF7FEFF 		bl	MonIncDecI2C
 1494              	.LVL114:
 1495 01e2 12E7     		b	.L100
 1496              	.L113:
 781:VS4210/monitor.c **** 			Mon_tx(ch);
 1497              		.loc 1 781 0
 1498 01e4 234B     		ldr	r3, .L137+12
 1499 01e6 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1500 01e8 54B1     		cbz	r4, .L128
 782:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 1501              		.loc 1 782 0
 1502 01ea 2846     		mov	r0, r5
 1503 01ec FFF7FEFF 		bl	Mon_tx
 1504              	.LVL115:
 783:VS4210/monitor.c **** 		}
 1505              		.loc 1 783 0
 1506 01f0 204A     		ldr	r2, .L137+12
 1507 01f2 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1508 01f4 591C     		adds	r1, r3, #1
 1509 01f6 1170     		strb	r1, [r2]
 1510 01f8 1F4A     		ldr	r2, .L137+16
 1511 01fa D554     		strb	r5, [r2, r3]
 1512 01fc 0024     		movs	r4, #0
 1513 01fe 04E7     		b	.L100
 1514              	.L128:
 786:VS4210/monitor.c **** 		break;
 1515              		.loc 1 786 0
 1516 0200 0A20     		movs	r0, #10
 1517 0202 FFF7FEFF 		bl	MonIncDecI2C
 1518              	.LVL116:
 1519 0206 00E7     		b	.L100
 1520              	.L111:
 790:VS4210/monitor.c **** 			Mon_tx(ch);
 1521              		.loc 1 790 0
 1522 0208 1A4B     		ldr	r3, .L137+12
 1523 020a 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccwHfacM.s 			page 43


 1524 020c 54B1     		cbz	r4, .L129
 791:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 1525              		.loc 1 791 0
 1526 020e 2846     		mov	r0, r5
 1527 0210 FFF7FEFF 		bl	Mon_tx
 1528              	.LVL117:
 792:VS4210/monitor.c **** 		}
 1529              		.loc 1 792 0
 1530 0214 174A     		ldr	r2, .L137+12
 1531 0216 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1532 0218 591C     		adds	r1, r3, #1
 1533 021a 1170     		strb	r1, [r2]
 1534 021c 164A     		ldr	r2, .L137+16
 1535 021e D554     		strb	r5, [r2, r3]
 1536 0220 0024     		movs	r4, #0
 1537 0222 F2E6     		b	.L100
 1538              	.L129:
 795:VS4210/monitor.c **** 		break;
 1539              		.loc 1 795 0
 1540 0224 0120     		movs	r0, #1
 1541 0226 FFF7FEFF 		bl	MonIncDecI2C
 1542              	.LVL118:
 1543 022a EEE6     		b	.L100
 1544              	.L114:
 799:VS4210/monitor.c **** 			Mon_tx(ch);
 1545              		.loc 1 799 0
 1546 022c 114B     		ldr	r3, .L137+12
 1547 022e 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1548 0230 54B1     		cbz	r4, .L130
 800:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 1549              		.loc 1 800 0
 1550 0232 2846     		mov	r0, r5
 1551 0234 FFF7FEFF 		bl	Mon_tx
 1552              	.LVL119:
 801:VS4210/monitor.c **** 		}
 1553              		.loc 1 801 0
 1554 0238 0E4A     		ldr	r2, .L137+12
 1555 023a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1556 023c 591C     		adds	r1, r3, #1
 1557 023e 1170     		strb	r1, [r2]
 1558 0240 0D4A     		ldr	r2, .L137+16
 1559 0242 D554     		strb	r5, [r2, r3]
 1560 0244 0024     		movs	r4, #0
 1561 0246 E0E6     		b	.L100
 1562              	.L130:
 804:VS4210/monitor.c **** 		break;
 1563              		.loc 1 804 0
 1564 0248 0B20     		movs	r0, #11
 1565 024a FFF7FEFF 		bl	MonIncDecI2C
 1566              	.LVL120:
 1567 024e DCE6     		b	.L100
 1568              	.L105:
 808:VS4210/monitor.c **** 		monstr[incnt++] = ch;
 1569              		.loc 1 808 0
 1570 0250 2846     		mov	r0, r5
 1571 0252 FFF7FEFF 		bl	Mon_tx
 1572              	.LVL121:
ARM GAS  /tmp/ccwHfacM.s 			page 44


 809:VS4210/monitor.c **** 		break;
 1573              		.loc 1 809 0
 1574 0256 074A     		ldr	r2, .L137+12
 1575 0258 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1576 025a 591C     		adds	r1, r3, #1
 1577 025c 1170     		strb	r1, [r2]
 1578 025e 064A     		ldr	r2, .L137+16
 1579 0260 D554     		strb	r5, [r2, r3]
 1580 0262 0024     		movs	r4, #0
 1581 0264 D1E6     		b	.L100
 1582              	.L138:
 1583 0266 00BF     		.align	2
 1584              	.L137:
 1585 0268 00000000 		.word	.LANCHOR6
 1586 026c 00000000 		.word	.LANCHOR7
 1587 0270 00000000 		.word	.LANCHOR8
 1588 0274 00000000 		.word	.LANCHOR9
 1589 0278 00000000 		.word	monstr
 1590 027c 00000000 		.word	argv
 1591 0280 00000000 		.word	.LANCHOR10
 1592              		.cfi_endproc
 1593              	.LFE91:
 1595              		.section	.text.SET_AHD_SYNC_PARA,"ax",%progbits
 1596              		.align	1
 1597              		.global	SET_AHD_SYNC_PARA
 1598              		.syntax unified
 1599              		.thumb
 1600              		.thumb_func
 1601              		.fpu softvfp
 1603              	SET_AHD_SYNC_PARA:
 1604              	.LFB93:
 822:VS4210/monitor.c **** 
 823:VS4210/monitor.c **** //*****************************************************************************
 824:VS4210/monitor.c **** //				Monitoring Command
 825:VS4210/monitor.c **** //*****************************************************************************
 826:VS4210/monitor.c **** //#ifdef  HS_DEBUG
 827:VS4210/monitor.c **** #ifdef  HS_DEBUG
 828:VS4210/monitor.c **** void Monitor(void)
 829:VS4210/monitor.c **** {
 830:VS4210/monitor.c **** 
 831:VS4210/monitor.c **** 	 BYTE ret/*,temp*/;
 832:VS4210/monitor.c **** 	//WORD addr;		
 833:VS4210/monitor.c **** 	if( !MonGetCommand() ) return;
 834:VS4210/monitor.c **** 
 835:VS4210/monitor.c **** 	//--------------------------------------------------
 836:VS4210/monitor.c **** 	// Check Indirect command
 837:VS4210/monitor.c **** 	/*
 838:VS4210/monitor.c **** 	if( !stricmp( argv[0], "I" ) ) 			indirect=1;	
 839:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "O" ) ) 	indirect=1;	
 840:VS4210/monitor.c **** 
 841:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "," ) ) 	indirect=0;	
 842:VS4210/monitor.c **** 	else if( !stricmp( argv[0], ">" ) ) 	indirect=0;	
 843:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "<" ) ) 	indirect=0;	
 844:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "." ) ) 	indirect=0;	
 845:VS4210/monitor.c **** 	else  indirect=0;	
 846:VS4210/monitor.c **** 	*/
 847:VS4210/monitor.c **** 	indirect = 0;
ARM GAS  /tmp/ccwHfacM.s 			page 45


 848:VS4210/monitor.c **** 
 849:VS4210/monitor.c **** 	//---------------- Write Register -------------------
 850:VS4210/monitor.c **** 	if( !stricmp( (BYTE *)argv[0],(BYTE *)"W" ) ) {
 851:VS4210/monitor.c **** 
 852:VS4210/monitor.c **** #if 0
 853:VS4210/monitor.c **** 
 854:VS4210/monitor.c **** VXISI2CWrite( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 855:VS4210/monitor.c **** 		 ret= VXISI2CRead(Asc2Bin(argv[1]));	
 856:VS4210/monitor.c **** 	   Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 857:VS4210/monitor.c **** 
 858:VS4210/monitor.c **** #else
 859:VS4210/monitor.c **** if(Monitor_I2C==0xA0)
 860:VS4210/monitor.c **** 	{
 861:VS4210/monitor.c **** 	WriteEEP( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 862:VS4210/monitor.c **** 	   //tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2])); 	
 863:VS4210/monitor.c **** 	 ret= ReadEEP(Asc2Bin(argv[1]));	
 864:VS4210/monitor.c **** 		MonIndex=Asc2Bin(argv[1]);
 865:VS4210/monitor.c **** 		MonWdata=Asc2Bin(argv[2]);
 866:VS4210/monitor.c **** 	  Printf("\r\nEEPROM Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 867:VS4210/monitor.c **** 	}
 868:VS4210/monitor.c **** else if(Monitor_I2C==0x40)
 869:VS4210/monitor.c **** {
 870:VS4210/monitor.c **** 	VXISI2CWrite( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 871:VS4210/monitor.c **** 	 ret= VXISI2CRead(Asc2Bin(argv[1]));	
 872:VS4210/monitor.c **** 	 MonIndex=Asc2Bin(argv[1]);
 873:VS4210/monitor.c **** 	 MonWdata=Asc2Bin(argv[2]); 
 874:VS4210/monitor.c **** 	   Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 875:VS4210/monitor.c **** }
 876:VS4210/monitor.c **** else if(Monitor_I2C==0x12)
 877:VS4210/monitor.c **** {
 878:VS4210/monitor.c **** 	VS8812Write( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 879:VS4210/monitor.c **** 	 ret= VS8812Read(Asc2Bin(argv[1]));	
 880:VS4210/monitor.c **** 	 MonIndex=Asc2Bin(argv[1]);
 881:VS4210/monitor.c **** 	 MonWdata=Asc2Bin(argv[2]); 
 882:VS4210/monitor.c **** 	   Printf("\r\nVS8812 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 883:VS4210/monitor.c **** }
 884:VS4210/monitor.c **** /*
 885:VS4210/monitor.c **** else if(Monitor_I2C==0x28)
 886:VS4210/monitor.c **** {
 887:VS4210/monitor.c **** 	
 888:VS4210/monitor.c **** 	addr=Asc2Bin(argv[1]);
 889:VS4210/monitor.c **** 	addr<<=8;
 890:VS4210/monitor.c **** 	addr|=Asc2Bin(argv[2]);
 891:VS4210/monitor.c **** 
 892:VS4210/monitor.c **** 	temp=Asc2Bin(argv[3]);
 893:VS4210/monitor.c **** 	SET_nGT911( addr,&temp,1 );
 894:VS4210/monitor.c **** 
 895:VS4210/monitor.c **** Printf("\r\nGT911  Write addr=%02x%02x data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]),(WO
 896:VS4210/monitor.c **** 	
 897:VS4210/monitor.c **** 	GET_nGT911(addr,&ret,1); 
 898:VS4210/monitor.c **** 	
 899:VS4210/monitor.c **** Printf("\r\nGT911  Read addr=%02x%02x data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]),(WOR
 900:VS4210/monitor.c ****   
 901:VS4210/monitor.c **** }
 902:VS4210/monitor.c **** */
 903:VS4210/monitor.c **** else if( Monitor_I2C==0x88)
 904:VS4210/monitor.c **** 	{
ARM GAS  /tmp/ccwHfacM.s 			page 46


 905:VS4210/monitor.c **** 	tp28xx_byte_write( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );	
 906:VS4210/monitor.c **** 	ret= tp28xx_byte_read(Asc2Bin(argv[1]));	
 907:VS4210/monitor.c **** 	MonIndex=Asc2Bin(argv[1]);
 908:VS4210/monitor.c **** 	MonWdata=Asc2Bin(argv[2]);
 909:VS4210/monitor.c **** 	 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 910:VS4210/monitor.c **** 	}
 911:VS4210/monitor.c **** 
 912:VS4210/monitor.c **** else if( Monitor_I2C==0x90)
 913:VS4210/monitor.c **** 	{
 914:VS4210/monitor.c **** 	gHDMI_Index=0;	
 915:VS4210/monitor.c **** 	HDMIRX_WriteI2C_Byte( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );	
 916:VS4210/monitor.c **** 	ret= HDMIRX_ReadI2C_Byte(Asc2Bin(argv[1]));		
 917:VS4210/monitor.c **** 	MonIndex=Asc2Bin(argv[1]);
 918:VS4210/monitor.c **** 	MonWdata=Asc2Bin(argv[2]);
 919:VS4210/monitor.c **** 	 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 920:VS4210/monitor.c **** 	}
 921:VS4210/monitor.c **** else
 922:VS4210/monitor.c **** {
 923:VS4210/monitor.c **** 	Printf("\r\nI2C addr. error");   
 924:VS4210/monitor.c **** 
 925:VS4210/monitor.c **** }
 926:VS4210/monitor.c **** 
 927:VS4210/monitor.c **** #endif
 928:VS4210/monitor.c **** /*
 929:VS4210/monitor.c **** 		if(Monitor_I2C==EEPROM_24C02_addr)
 930:VS4210/monitor.c **** 		{
 931:VS4210/monitor.c **** 		 SW_I2C1Write( Monitor_I2C , Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 932:VS4210/monitor.c **** 		//tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2]));	 
 933:VS4210/monitor.c **** 		  ret= SW_I2C1Read(Monitor_I2C,Asc2Bin(argv[1]));	 
 934:VS4210/monitor.c **** 		Printf("\r\nEEPROM Write addr=%02x	data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 935:VS4210/monitor.c **** 		}
 936:VS4210/monitor.c **** 		else
 937:VS4210/monitor.c **** 			{
 938:VS4210/monitor.c **** 		    	tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2]));   
 939:VS4210/monitor.c **** 	        	//ret= tp28xx_byte_read(0x2a);   
 940:VS4210/monitor.c **** 			  ret= tp28xx_byte_read(Asc2Bin(argv[1]));   
 941:VS4210/monitor.c **** 			Printf("\r\nTP2824 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 942:VS4210/monitor.c **** 			}
 943:VS4210/monitor.c **** 		*/
 944:VS4210/monitor.c **** 		
 945:VS4210/monitor.c **** 	}
 946:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0],(BYTE *) ")" ) ) {
 947:VS4210/monitor.c **** 		indirect=0;
 948:VS4210/monitor.c **** 	//	MonNewWriteI2C();
 949:VS4210/monitor.c **** 	}
 950:VS4210/monitor.c **** 	/*
 951:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "O" ) ) {			// inderect addressing for 8806
 952:VS4210/monitor.c **** 		MonIndex = Asc2Bin( argv[1] );
 953:VS4210/monitor.c **** 		MonWdata = Asc2Bin( argv[2] );
 954:VS4210/monitor.c **** 		WriteI2C(MonAddress, 0xc5, MonIndex);
 955:VS4210/monitor.c **** 		WriteI2C(MonAddress, 0xc6, MonWdata);
 956:VS4210/monitor.c **** 		MonRdata = ReadI2C(MonAddress, 0xc6);
 957:VS4210/monitor.c **** 		Printf("\r\n==> Read %2xh:%2xh", (WORD)MonIndex, (WORD)MonRdata);
 958:VS4210/monitor.c **** 	}
 959:VS4210/monitor.c **** 	*/
 960:VS4210/monitor.c **** 	//---------------- Read Register --------------------
 961:VS4210/monitor.c **** 	else if ( !stricmp((BYTE*) argv[0],(BYTE*) "R" ) ) {
ARM GAS  /tmp/ccwHfacM.s 			page 47


 962:VS4210/monitor.c **** 		//MonReadI2C();
 963:VS4210/monitor.c **** 	
 964:VS4210/monitor.c **** 		#if 0
 965:VS4210/monitor.c **** 			   ret= VXISI2CRead(Asc2Bin(argv[1]));			 
 966:VS4210/monitor.c **** 			Printf("\r\nVS4210	Read addr=%02x	data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 967:VS4210/monitor.c **** 
 968:VS4210/monitor.c **** 		#else
 969:VS4210/monitor.c **** 	if(Monitor_I2C==0xA0)
 970:VS4210/monitor.c **** 		{
 971:VS4210/monitor.c **** 		   ret= ReadEEP(Asc2Bin(argv[1])); 
 972:VS4210/monitor.c **** 		   MonIndex=Asc2Bin(argv[1]);
 973:VS4210/monitor.c **** 		   MonWdata=ret;
 974:VS4210/monitor.c **** 		Printf("\r\nEEPROM  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 975:VS4210/monitor.c **** 		}
 976:VS4210/monitor.c **** 	else if(Monitor_I2C==0x40)
 977:VS4210/monitor.c **** 		{
 978:VS4210/monitor.c **** 		ret= VXISI2CRead(Asc2Bin(argv[1])); 	
 979:VS4210/monitor.c **** 		 MonIndex=Asc2Bin(argv[1]);
 980:VS4210/monitor.c **** 		 MonWdata=ret;
 981:VS4210/monitor.c **** 		 Printf("\r\nVS4210  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 982:VS4210/monitor.c **** 		}
 983:VS4210/monitor.c **** 	else if(Monitor_I2C==0x12)
 984:VS4210/monitor.c **** 		{
 985:VS4210/monitor.c **** 		ret= VS8812Read(Asc2Bin(argv[1])); 	
 986:VS4210/monitor.c **** 		 MonIndex=Asc2Bin(argv[1]);
 987:VS4210/monitor.c **** 		 MonWdata=ret;
 988:VS4210/monitor.c **** 		 Printf("\r\nVS8812  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 989:VS4210/monitor.c **** 		}
 990:VS4210/monitor.c **** 	/*
 991:VS4210/monitor.c **** 	else if(Monitor_I2C==0x28)
 992:VS4210/monitor.c **** 		{
 993:VS4210/monitor.c **** 
 994:VS4210/monitor.c **** 		addr=Asc2Bin(argv[1]);
 995:VS4210/monitor.c **** 		addr<<=8;
 996:VS4210/monitor.c **** 		addr|=Asc2Bin(argv[2]);
 997:VS4210/monitor.c **** 		
 998:VS4210/monitor.c **** 		GET_nGT911(addr,&temp,1); 		  
 999:VS4210/monitor.c **** 		 Printf("\r\nGT911  Read addr=%02x%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]),
1000:VS4210/monitor.c **** 		}
1001:VS4210/monitor.c **** 	*/
1002:VS4210/monitor.c **** 	else if( Monitor_I2C==0x88)
1003:VS4210/monitor.c **** 		{	
1004:VS4210/monitor.c **** 		ret= tp28xx_byte_read(Asc2Bin(argv[1])); 	
1005:VS4210/monitor.c **** 		MonIndex=Asc2Bin(argv[1]);
1006:VS4210/monitor.c **** 		MonWdata=ret;
1007:VS4210/monitor.c **** 		 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
1008:VS4210/monitor.c **** 		}
1009:VS4210/monitor.c **** 	else if( Monitor_I2C==0x90)
1010:VS4210/monitor.c **** 			{
1011:VS4210/monitor.c **** 			gHDMI_Index=0;
1012:VS4210/monitor.c **** 			ret= HDMIRX_ReadI2C_Byte(Asc2Bin(argv[1]));	  
1013:VS4210/monitor.c **** 			 MonIndex=Asc2Bin(argv[1]);
1014:VS4210/monitor.c **** 			 MonWdata=ret;
1015:VS4210/monitor.c **** 			 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
1016:VS4210/monitor.c **** 			}
1017:VS4210/monitor.c **** 	else
1018:VS4210/monitor.c **** 		{
ARM GAS  /tmp/ccwHfacM.s 			page 48


1019:VS4210/monitor.c **** 		Printf("\r\nI2C addr. error");
1020:VS4210/monitor.c **** 		}
1021:VS4210/monitor.c **** 		#endif
1022:VS4210/monitor.c **** 		/*
1023:VS4210/monitor.c **** 		if(Monitor_I2C==EEPROM_24C02_addr)
1024:VS4210/monitor.c **** 				{
1025:VS4210/monitor.c **** 			   ret= SW_I2C1Read(Monitor_I2C,Asc2Bin(argv[1]));              
1026:VS4210/monitor.c **** 			Printf("\r\nEEPROM Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);	
1027:VS4210/monitor.c **** 			}
1028:VS4210/monitor.c **** 		else
1029:VS4210/monitor.c **** 			{
1030:VS4210/monitor.c **** 			   ret= tp28xx_byte_read(Asc2Bin(argv[1]));              
1031:VS4210/monitor.c **** 			Printf("\r\nTP2824 Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);		
1032:VS4210/monitor.c **** 			}
1033:VS4210/monitor.c **** 		*/
1034:VS4210/monitor.c **** 	}  
1035:VS4210/monitor.c **** 	else if(!stricmp( (BYTE *)argv[0],(BYTE *) "FW" )){
1036:VS4210/monitor.c **** 		bytVersionFlag=1;
1037:VS4210/monitor.c **** 		Printf("\r\nTAAH02 FW Version:V%04x", (WORD)GetFWRevEE());
1038:VS4210/monitor.c **** 		}
1039:VS4210/monitor.c **** 	else if ( !stricmp( (BYTE *)argv[0],(BYTE *) "VR" ) ) {
1040:VS4210/monitor.c **** 			//MonReadI2C();
1041:VS4210/monitor.c **** 	//	 ret=VXISI2CRead(Asc2Bin(argv[1])); 
1042:VS4210/monitor.c **** 	//	Printf("\r\nVS4210 Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);	
1043:VS4210/monitor.c **** 	
1044:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x02));
1045:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x03));
1046:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x04));
1047:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x05));
1048:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x06));
1049:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x07));
1050:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x08));
1051:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x09));
1052:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0A));
1053:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0B));
1054:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0C));
1055:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0D));
1056:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x10));
1057:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x11));
1058:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x15));
1059:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x16));
1060:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x17));
1061:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x18));
1062:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x19));
1063:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1A));
1064:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1C));
1065:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1D));
1066:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1E));
1067:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x28));
1068:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x29));
1069:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2A));
1070:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2B));
1071:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2C));
1072:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2D));
1073:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x74));
1074:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x7E));
1075:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x7F));
ARM GAS  /tmp/ccwHfacM.s 			page 49


1076:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x80));
1077:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x81));
1078:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x82));
1079:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x83));
1080:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x84));
1081:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x85));
1082:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x86));
1083:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x87));
1084:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x88));
1085:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x89));
1086:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8A));
1087:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8B));
1088:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8C));
1089:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8D));
1090:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8E));
1091:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8F));
1092:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x90));
1093:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x91));
1094:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x92));
1095:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x93));
1096:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x94));
1097:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x95));
1098:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x97));
1099:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x98));
1100:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x99));
1101:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9B));
1102:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9C));
1103:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9D));
1104:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9E));
1105:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9F));
1106:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA0));
1107:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA1));
1108:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA2));
1109:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA3));
1110:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA4));
1111:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA5));
1112:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA6));
1113:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA7));
1114:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA8));
1115:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA9));
1116:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAA));
1117:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAB));
1118:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAF));
1119:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xC0));
1120:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD6));
1121:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD7));
1122:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD8));
1123:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE6));
1124:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE7));
1125:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE8));
1126:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE9));
1127:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEA));
1128:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEB));
1129:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEC));
1130:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xED));
1131:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEE));
1132:VS4210/monitor.c **** 
ARM GAS  /tmp/ccwHfacM.s 			page 50


1133:VS4210/monitor.c **** 		}
1134:VS4210/monitor.c **** 	else if ( !stricmp( (BYTE *)argv[0], (BYTE *)"VW" ) ) {
1135:VS4210/monitor.c **** 		    VXISI2CWrite(Asc2Bin(argv[1]), Asc2Bin(argv[2]));   
1136:VS4210/monitor.c **** 	  ret= VXISI2CRead(Asc2Bin(argv[1]));   
1137:VS4210/monitor.c **** 	Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);				
1138:VS4210/monitor.c **** 		}
1139:VS4210/monitor.c **** 	else if ( !stricmp( argv[0],(BYTE *)"(" ) ) {
1140:VS4210/monitor.c **** 		indirect=0;
1141:VS4210/monitor.c **** 		//MonNewReadI2C();
1142:VS4210/monitor.c **** 	}
1143:VS4210/monitor.c **** 	else if ( !stricmp( (BYTE *)argv[0],(BYTE *) "I2C" ) ) {
1144:VS4210/monitor.c **** 		 ret=Asc2Bin(argv[1]); 
1145:VS4210/monitor.c **** 		Printf("\r\nChange I2C addr. from %02x to %02x",(WORD)Monitor_I2C,(WORD)ret);		
1146:VS4210/monitor.c **** 		Monitor_I2C=ret;
1147:VS4210/monitor.c **** 		}
1148:VS4210/monitor.c **** 	else if ( !stricmp( (BYTE *)argv[0],(BYTE *) "Q" ) ) {
1149:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1150:VS4210/monitor.c **** 		}
1151:VS4210/monitor.c **** 	else if ( !stricmp( (BYTE *)argv[0],(BYTE *) "DUMP" ) ) {
1152:VS4210/monitor.c **** 		WORD s,e;	//20201211-03
1153:VS4210/monitor.c **** 		
1154:VS4210/monitor.c **** 		 s=Asc2Bin(argv[1]); 
1155:VS4210/monitor.c **** 		 e=Asc2Bin(argv[2]); 
1156:VS4210/monitor.c **** 
1157:VS4210/monitor.c **** 
1158:VS4210/monitor.c **** 		 if(Monitor_I2C==0xA0)
1159:VS4210/monitor.c **** 			 {
1160:VS4210/monitor.c **** 			 Printf("\r\nDUMP EEPROM Reg..");
1161:VS4210/monitor.c **** 			 }
1162:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x40)
1163:VS4210/monitor.c **** 			 {
1164:VS4210/monitor.c **** 			 Printf("\r\nDUMP VS4210 Reg..");
1165:VS4210/monitor.c **** 			 }
1166:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x12)
1167:VS4210/monitor.c **** 			 {
1168:VS4210/monitor.c **** 			 Printf("\r\nDUMP VS8812 Reg..");
1169:VS4210/monitor.c **** 			 }
1170:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x90)
1171:VS4210/monitor.c **** 			 {
1172:VS4210/monitor.c **** 			 Printf("\r\nDUMP IT66021 Reg..");
1173:VS4210/monitor.c **** 			 }		 
1174:VS4210/monitor.c **** 
1175:VS4210/monitor.c **** for(;s<=e;s++)
1176:VS4210/monitor.c **** {
1177:VS4210/monitor.c **** 		 if(Monitor_I2C==0xA0)
1178:VS4210/monitor.c **** 			 {
1179:VS4210/monitor.c **** 				ret= ReadEEP(s); 		  
1180:VS4210/monitor.c **** 			 Printf("\r\nEEPROM  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
1181:VS4210/monitor.c **** 			 }
1182:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x40)
1183:VS4210/monitor.c **** 			 {
1184:VS4210/monitor.c **** 			 ret= VXISI2CRead(s);		   
1185:VS4210/monitor.c **** 			 // Printf("\r\nVXISI2CWrite(0x%02x,0x%02x);",(WORD)s,(WORD)ret);
1186:VS4210/monitor.c **** 			  Printf("\r\n40,%02x,%02x",(WORD)s,(WORD)ret);
1187:VS4210/monitor.c **** 			 }
1188:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x12)
1189:VS4210/monitor.c **** 			 {
ARM GAS  /tmp/ccwHfacM.s 			page 51


1190:VS4210/monitor.c **** 			 ret= VS8812Read(s); 	   
1191:VS4210/monitor.c **** //			  Printf("\r\nVS8812  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
1192:VS4210/monitor.c **** 			  Printf("\r\nVS8812,%02x,%02x",(WORD)s,(WORD)ret);
1193:VS4210/monitor.c **** 			 }
1194:VS4210/monitor.c **** 		  else if(Monitor_I2C==0x88)
1195:VS4210/monitor.c **** 					  {
1196:VS4210/monitor.c **** 					  ret= tp28xx_byte_read(s);		
1197:VS4210/monitor.c **** 					 // Printf("\r\ntp28xx,%02x,%02x",(WORD)s,(WORD)ret);
1198:VS4210/monitor.c **** 					  Printf("\r\nR %02x %02x",(WORD)s,(WORD)ret);
1199:VS4210/monitor.c **** 					  } 
1200:VS4210/monitor.c **** 		  else if(Monitor_I2C==0x90)
1201:VS4210/monitor.c **** 								{
1202:VS4210/monitor.c **** 								gHDMI_Index=0;
1203:VS4210/monitor.c **** 							ret= HDMIRX_ReadI2C_Byte(s);	  
1204:VS4210/monitor.c **** 								 Printf("\r\nIT66021,%02x,%02x",(WORD)s,(WORD)ret);
1205:VS4210/monitor.c **** 								} 
1206:VS4210/monitor.c **** 
1207:VS4210/monitor.c **** 		 /*
1208:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x28)
1209:VS4210/monitor.c **** 		 {
1210:VS4210/monitor.c **** 			 addr=Asc2Bin(argv[1]);
1211:VS4210/monitor.c **** 			 addr<<=8;
1212:VS4210/monitor.c **** 			 addr|=Asc2Bin(argv[2]);
1213:VS4210/monitor.c **** 			 
1214:VS4210/monitor.c **** 			 GET_nGT911(addr,&temp,1);		   
1215:VS4210/monitor.c **** 			  Printf("\r\nGT911  Read addr=%02x%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]
1216:VS4210/monitor.c **** 		 
1217:VS4210/monitor.c **** 		 }	
1218:VS4210/monitor.c **** 		 */
1219:VS4210/monitor.c **** 		 else
1220:VS4210/monitor.c **** 			 {
1221:VS4210/monitor.c **** 			 Printf("\r\nI2C addr. error");
1222:VS4210/monitor.c **** 			 }
1223:VS4210/monitor.c **** }
1224:VS4210/monitor.c **** 		}
1225:VS4210/monitor.c **** 	#if 0
1226:VS4210/monitor.c **** 		else if ( !stricmp( (BYTE *)argv[0],(BYTE *) "DTP" ) ) {
1227:VS4210/monitor.c **** 			WORD /*s,e,*/n,i;
1228:VS4210/monitor.c **** 			
1229:VS4210/monitor.c **** 				 addr=Asc2Bin(argv[1]);
1230:VS4210/monitor.c **** 				 addr<<=8;
1231:VS4210/monitor.c **** 				 addr|=Asc2Bin(argv[2]);
1232:VS4210/monitor.c ****  					
1233:VS4210/monitor.c **** 				 n=Asc2Bin(argv[3]);
1234:VS4210/monitor.c **** 
1235:VS4210/monitor.c **** 			 Printf("\r\nDUMP GT911 Reg..");
1236:VS4210/monitor.c **** 
1237:VS4210/monitor.c **** 	
1238:VS4210/monitor.c **** 		for(i=0;i<n;i++)
1239:VS4210/monitor.c **** 		{	
1240:VS4210/monitor.c ****    		GET_nGT911(addr+i,&temp,1);		  	
1241:VS4210/monitor.c **** 		  Printf("\r\nAddr=%04x Data=%02x",(WORD)addr+i,(WORD)temp);
1242:VS4210/monitor.c **** 		}
1243:VS4210/monitor.c **** 	}
1244:VS4210/monitor.c **** 		#endif
1245:VS4210/monitor.c **** 	/*
1246:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "i" ) ) {
ARM GAS  /tmp/ccwHfacM.s 			page 52


1247:VS4210/monitor.c **** 		MonIndex = Asc2Bin( argv[1] );
1248:VS4210/monitor.c **** 		WriteI2C(MonAddress, 0xc5, MonIndex);
1249:VS4210/monitor.c **** 		MonRdata = ReadI2C(MonAddress, 0xc6);
1250:VS4210/monitor.c **** 		Printf("\r\n==> Read %2xh:%2xh", (WORD)MonIndex, (WORD)MonRdata);
1251:VS4210/monitor.c **** 
1252:VS4210/monitor.c **** 	}
1253:VS4210/monitor.c **** 	*/
1254:VS4210/monitor.c **** 	/*
1255:VS4210/monitor.c **** 	//---------------- Dump Register --------------------
1256:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "D" ) ) {
1257:VS4210/monitor.c **** 		Puts("\r\ndump start");
1258:VS4210/monitor.c **** 		MonDumpI2C();
1259:VS4210/monitor.c **** 	}
1260:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "&" ) ) {
1261:VS4210/monitor.c **** 		indirect=0;
1262:VS4210/monitor.c **** 		MonNewDumpI2C();
1263:VS4210/monitor.c **** 	}
1264:VS4210/monitor.c **** 
1265:VS4210/monitor.c **** 	//---------------- Bit Operation --------------------
1266:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "B" ) ) {// Write bits - B AA II bb DD
1267:VS4210/monitor.c **** 		MonWriteBit();
1268:VS4210/monitor.c **** 	}
1269:VS4210/monitor.c **** 	//---------------- AD5110 CMD --------------------
1270:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PSW" ) ) {
1271:VS4210/monitor.c **** 		PSW_Flag=1;
1272:VS4210/monitor.c **** 		Printf("\r\n(PSW_Flag =1)");
1273:VS4210/monitor.c **** 	}
1274:VS4210/monitor.c **** 	//---------------- AD5110 CMD --------------------
1275:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "ADW" ) ) {
1276:VS4210/monitor.c **** 		WriteAD5110(Asc2Bin(argv[1]),Asc2Bin(argv[2]));
1277:VS4210/monitor.c **** 		Printf("\r\nAD5110 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]));
1278:VS4210/monitor.c **** 	}
1279:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "ADR" ) ) {
1280:VS4210/monitor.c **** 		ReadAD5110(Asc2Bin(argv[1]));
1281:VS4210/monitor.c **** 		Printf("\r\nAD5110 Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ReadAD5110(Asc2Bin(arg
1282:VS4210/monitor.c **** 	}
1283:VS4210/monitor.c **** */
1284:VS4210/monitor.c **** 	/*	no indirect addressing in TW8816
1285:VS4210/monitor.c ****     //---------------------------------------------------
1286:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "@" ) ) { // Indirect address bit access
1287:VS4210/monitor.c **** 
1288:VS4210/monitor.c **** 					BYTE Slave, mask, FromBit, ToBit,  MonMask, val,i;
1289:VS4210/monitor.c **** 					// @ 8a iaddr idata index  startbit|endbit  data
1290:VS4210/monitor.c **** 					// 0  1   2    3     4     5                 6
1291:VS4210/monitor.c **** 
1292:VS4210/monitor.c **** 					if( argc<7 ) {
1293:VS4210/monitor.c **** 						Printf("   --> Missing parameter !!!");
1294:VS4210/monitor.c **** 						return;
1295:VS4210/monitor.c **** 					}
1296:VS4210/monitor.c **** 
1297:VS4210/monitor.c **** 					Slave = Asc2Bin(argv[1]);
1298:VS4210/monitor.c **** 					
1299:VS4210/monitor.c **** 					FromBit = Asc2Bin( argv[5] );
1300:VS4210/monitor.c **** 					FromBit  = ( FromBit >> 4) & 0x0f;
1301:VS4210/monitor.c **** 					ToBit = Asc2Bin( argv[5] );
1302:VS4210/monitor.c **** 					ToBit  =  ToBit & 0x0f;
1303:VS4210/monitor.c **** 					MonMask  = Asc2Bin( argv[6] );
ARM GAS  /tmp/ccwHfacM.s 			page 53


1304:VS4210/monitor.c **** 
1305:VS4210/monitor.c **** 					if( FromBit<ToBit || FromBit>7 || ToBit>7) {
1306:VS4210/monitor.c **** 						Printf("\r\n   --> Wrong range of bit operation !!!");
1307:VS4210/monitor.c **** 						return;
1308:VS4210/monitor.c **** 					}
1309:VS4210/monitor.c **** 	
1310:VS4210/monitor.c **** 					mask = 0xff; 
1311:VS4210/monitor.c **** 					val=0x7f;
1312:VS4210/monitor.c **** 					for(i=7; i>FromBit; i--) {
1313:VS4210/monitor.c **** 						mask &= val;
1314:VS4210/monitor.c **** 						val = val>>1;
1315:VS4210/monitor.c **** 					}
1316:VS4210/monitor.c **** 
1317:VS4210/monitor.c **** 					val=0xfe;
1318:VS4210/monitor.c **** 					for(i=0; i<ToBit; i++) {
1319:VS4210/monitor.c **** 						mask &= val;
1320:VS4210/monitor.c **** 						val = val<<1;
1321:VS4210/monitor.c **** 					}
1322:VS4210/monitor.c **** 
1323:VS4210/monitor.c **** 					// @ 8a iaddr idata index  startbit|endbit  data
1324:VS4210/monitor.c **** 					// 0  1   2    3     4     5                 6
1325:VS4210/monitor.c **** 					MonIndex = Asc2Bin(argv[2]);
1326:VS4210/monitor.c **** 					MonWdata = Asc2Bin(argv[4]);
1327:VS4210/monitor.c **** 					WriteI2C( Slave, MonIndex, MonWdata);
1328:VS4210/monitor.c **** 
1329:VS4210/monitor.c **** 					MonRdata = ReadI2C(Slave, Asc2Bin( argv[3]));
1330:VS4210/monitor.c **** 					MonWdata = (MonRdata & (~mask)) | (MonMask & mask);
1331:VS4210/monitor.c **** 					MonIndex = Asc2Bin(argv[3]);
1332:VS4210/monitor.c **** 					WriteI2C(Slave, MonIndex, MonWdata);
1333:VS4210/monitor.c **** 
1334:VS4210/monitor.c **** 					MonRdata = ReadI2C(Slave, MonIndex);
1335:VS4210/monitor.c **** 
1336:VS4210/monitor.c **** 					Printf("\r\n<R>%2x[%2x]=%2x", (WORD)Slave, (WORD)MonIndex, (WORD)MonRdata);
1337:VS4210/monitor.c **** 
1338:VS4210/monitor.c **** 	}
1339:VS4210/monitor.c **** 	//------------------------------------------------------------------				
1340:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "!" ) ) //  Indirect address write access
1341:VS4210/monitor.c **** 	{
1342:VS4210/monitor.c **** 					BYTE Slave;
1343:VS4210/monitor.c **** 					// @ 8a iaddr idata index data
1344:VS4210/monitor.c **** 					if( argc<6 ) {
1345:VS4210/monitor.c **** 						Printf("   --> Missing parameter !!!");
1346:VS4210/monitor.c **** 						return;
1347:VS4210/monitor.c **** 					}
1348:VS4210/monitor.c **** 
1349:VS4210/monitor.c **** 					Slave = Asc2Bin(argv[1]);
1350:VS4210/monitor.c **** 
1351:VS4210/monitor.c **** 					MonIndex = Asc2Bin(argv[2]);
1352:VS4210/monitor.c **** 					MonWdata = Asc2Bin(argv[4]);
1353:VS4210/monitor.c **** 					WriteI2C(Slave, MonIndex, MonWdata);
1354:VS4210/monitor.c **** 
1355:VS4210/monitor.c **** 					MonIndex = Asc2Bin(argv[3]);
1356:VS4210/monitor.c **** 					MonWdata = Asc2Bin(argv[5]);
1357:VS4210/monitor.c **** 					WriteI2C(Slave, MonIndex, MonWdata);
1358:VS4210/monitor.c **** 
1359:VS4210/monitor.c **** 					MonRdata = ReadI2C(Slave, MonIndex);
1360:VS4210/monitor.c **** 
ARM GAS  /tmp/ccwHfacM.s 			page 54


1361:VS4210/monitor.c **** 					Printf("\r\n<R>%2x[%2x]=%2x", (WORD)Slave, (WORD)MonIndex, (WORD)MonRdata);
1362:VS4210/monitor.c **** 
1363:VS4210/monitor.c **** 	}
1364:VS4210/monitor.c **** 	*/    
1365:VS4210/monitor.c **** 
1366:VS4210/monitor.c **** 	//---------------- Change I2C -----------------------
1367:VS4210/monitor.c **** 	/*
1368:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0],(BYTE *) "C" ) ) {
1369:VS4210/monitor.c **** 		//Monitor_I2C = Asc2Bin( argv[1] );
1370:VS4210/monitor.c **** 		SetNowMode(); 
1371:VS4210/monitor.c **** 	}
1372:VS4210/monitor.c **** 	
1373:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0],(BYTE *) "PON" ) ) {
1374:VS4210/monitor.c **** 			//Monitor_I2C = Asc2Bin( argv[1] );
1375:VS4210/monitor.c **** 			SetNowMode(); 
1376:VS4210/monitor.c **** 				LCDPowerON();
1377:VS4210/monitor.c **** 		}
1378:VS4210/monitor.c **** 	*/
1379:VS4210/monitor.c **** 
1380:VS4210/monitor.c **** 	//---------------- Help -----------------------------
1381:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0],(BYTE *) "H" ) || !stricmp( (BYTE *)argv[0],(BYTE *) "HELP" ) |
1382:VS4210/monitor.c **** 		MonHelp();
1383:VS4210/monitor.c **** 	}
1384:VS4210/monitor.c **** 	else if( !stricmp( argv[0], (BYTE *)"PWM" ) ) {
1385:VS4210/monitor.c **** 
1386:VS4210/monitor.c **** 		user_pwm_setvalue(Asc2Bin(argv[1])*15);
1387:VS4210/monitor.c **** 
1388:VS4210/monitor.c **** 			Printf("\r\nPWM=%d",(WORD)(Asc2Bin(argv[1])*15));
1389:VS4210/monitor.c **** 	}
1390:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "ALCR" ) ) {
1391:VS4210/monitor.c **** 
1392:VS4210/monitor.c **** 			Printf("\r\nALCR=%04x",(WORD)GET_ALC122(0x02));
1393:VS4210/monitor.c **** 
1394:VS4210/monitor.c **** 		}
1395:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "ALCW" ) ) {
1396:VS4210/monitor.c **** 		WORD val=0;
1397:VS4210/monitor.c **** 		val=Asc2Bin(argv[1]);
1398:VS4210/monitor.c **** 		val<<=8;
1399:VS4210/monitor.c **** 		val|=Asc2Bin(argv[1]);
1400:VS4210/monitor.c **** 	
1401:VS4210/monitor.c **** 		SET_ALC122(0x02,val);
1402:VS4210/monitor.c **** 
1403:VS4210/monitor.c **** 			Printf("\r\nALCR=%04x",(WORD)GET_ALC122(0x02));
1404:VS4210/monitor.c **** 	}
1405:VS4210/monitor.c **** 	/*
1406:VS4210/monitor.c **** 	else if( !stricmp( argv[0], (BYTE *)"tri" ) ) {
1407:VS4210/monitor.c **** 	TriggerFlag=Asc2Bin( argv[1]);
1408:VS4210/monitor.c **** 
1409:VS4210/monitor.c **** 			Printf("\r\nTrigger=%02x",(WORD)TriggerFlag);
1410:VS4210/monitor.c **** 	}
1411:VS4210/monitor.c **** 	*/
1412:VS4210/monitor.c **** else if( !stricmp( argv[0], (BYTE *) "ACCESS" ) ) {
1413:VS4210/monitor.c **** 		//if( argc==2 ) {
1414:VS4210/monitor.c **** 			AccessEnable = Asc2Bin(argv[1]);
1415:VS4210/monitor.c **** 		//}
1416:VS4210/monitor.c **** 		Printf("\r\nVS4210 AUTO ACCESS = %d", (WORD)AccessEnable);
1417:VS4210/monitor.c **** 	}
ARM GAS  /tmp/ccwHfacM.s 			page 55


1418:VS4210/monitor.c **** else if( !stricmp( argv[0], (BYTE *) "Win" ) ) {	//20201214-02
1419:VS4210/monitor.c **** 
1420:VS4210/monitor.c **** 		BYTE ch;
1421:VS4210/monitor.c **** 		ch=Asc2Bin(argv[1]);
1422:VS4210/monitor.c **** 		
1423:VS4210/monitor.c **** 		HS_Select_Win(ch);
1424:VS4210/monitor.c **** 		
1425:VS4210/monitor.c **** 
1426:VS4210/monitor.c **** 		if(ch==1)
1427:VS4210/monitor.c **** 		{
1428:VS4210/monitor.c **** 		Printf("\r\nTP_InputMode = %d", (WORD)TP_InputMode);
1429:VS4210/monitor.c **** 		
1430:VS4210/monitor.c **** 			if(TP_InputMode==5)
1431:VS4210/monitor.c **** 			TP_bt1120_720P_1080P_mode0_w0();
1432:VS4210/monitor.c **** 			else if(TP_InputMode==6)
1433:VS4210/monitor.c **** 				TP_bt1120_1080P_1080P_mode0_w0();
1434:VS4210/monitor.c **** 			else if(TP_InputMode==0)
1435:VS4210/monitor.c **** 				TP_bt1120_NTSC_1080P_mode0_w0();
1436:VS4210/monitor.c **** 			else if(TP_InputMode==1)
1437:VS4210/monitor.c **** 				TP_bt1120_PAL_1080P_mode0_w0();
1438:VS4210/monitor.c **** 							
1439:VS4210/monitor.c **** 		}
1440:VS4210/monitor.c **** }	
1441:VS4210/monitor.c **** 	else if( !stricmp( argv[0], (BYTE *) "TP0" ) ) { //720P
1442:VS4210/monitor.c **** 		TP_bt1120_720P_1080P_mode0_w0();
1443:VS4210/monitor.c **** 	}	
1444:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *)  "TP1" ) ) { //1080P
1445:VS4210/monitor.c **** 		TP_bt1120_1080P_1080P_mode0_w0();
1446:VS4210/monitor.c **** 	}	
1447:VS4210/monitor.c **** 	else if( !stricmp( argv[0], (BYTE *) "TP2" ) ) { //NTSC
1448:VS4210/monitor.c **** 		TP_bt1120_NTSC_1080P_mode0_w0();
1449:VS4210/monitor.c **** 	}	
1450:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "TP3" ) ) { //PAL
1451:VS4210/monitor.c **** 		TP_bt1120_PAL_1080P_mode0_w0();
1452:VS4210/monitor.c **** 	}	
1453:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "HDMI" ) ) { //HDMI
1454:VS4210/monitor.c **** 
1455:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1456:VS4210/monitor.c **** 		
1457:VS4210/monitor.c **** 		SelectInputMode=0;
1458:VS4210/monitor.c **** 		HS_Select_Win(0);
1459:VS4210/monitor.c **** 	}
1460:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "AHD" ) ) { //AHD
1461:VS4210/monitor.c **** 
1462:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1463:VS4210/monitor.c **** 	
1464:VS4210/monitor.c **** 		SelectInputMode=1;
1465:VS4210/monitor.c **** 		HS_Select_Win(1);
1466:VS4210/monitor.c **** 		Printf("\r\nTP_InputMode = %d", (WORD)TP_InputMode);
1467:VS4210/monitor.c **** 		
1468:VS4210/monitor.c **** 			if(TP_InputMode==5)
1469:VS4210/monitor.c **** 			TP_bt1120_720P_1080P_mode0_w0();
1470:VS4210/monitor.c **** 			else if(TP_InputMode==6)
1471:VS4210/monitor.c **** 				TP_bt1120_1080P_1080P_mode0_w0();
1472:VS4210/monitor.c **** 			else if(TP_InputMode==0)
1473:VS4210/monitor.c **** 				TP_bt1120_NTSC_1080P_mode0_w0();
1474:VS4210/monitor.c **** 			else if(TP_InputMode==1)
ARM GAS  /tmp/ccwHfacM.s 			page 56


1475:VS4210/monitor.c **** 				TP_bt1120_PAL_1080P_mode0_w0();
1476:VS4210/monitor.c **** 			
1477:VS4210/monitor.c **** 							
1478:VS4210/monitor.c **** 	}	
1479:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "BS" ) ) { //HDMI input
1480:VS4210/monitor.c **** 		extern tByte bSignal[4] ;
1481:VS4210/monitor.c **** 		Printf("\r\nbSignal[0] = %d", (WORD) bSignal[0]);
1482:VS4210/monitor.c **** 		Printf("\r\nbSignal[1] = %d", (WORD) bSignal[1]);
1483:VS4210/monitor.c **** 		Printf("\r\nbSignal[2] = %d", (WORD) bSignal[2]);
1484:VS4210/monitor.c **** 		Printf("\r\nbSignal[3] = %d", (WORD) bSignal[3]);
1485:VS4210/monitor.c **** 
1486:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1487:VS4210/monitor.c **** 							
1488:VS4210/monitor.c **** 	}	
1489:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "SETHDMI" ) ) { //set HDMI embedded sync
1490:VS4210/monitor.c **** 
1491:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1492:VS4210/monitor.c **** 		SET_HDMI_SYNC_PARA();
1493:VS4210/monitor.c **** 
1494:VS4210/monitor.c **** 	}	
1495:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "SETAHD" ) ) { //set AHD embedded sync
1496:VS4210/monitor.c **** 
1497:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1498:VS4210/monitor.c **** 		SET_AHD_SYNC_PARA();
1499:VS4210/monitor.c **** 
1500:VS4210/monitor.c **** 	}	  
1501:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "TPRST" ) ) { //reset TP2824
1502:VS4210/monitor.c **** 
1503:VS4210/monitor.c **** 		Init_TP280x_RegSet();
1504:VS4210/monitor.c **** 
1505:VS4210/monitor.c **** 	}	
1506:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "HDMI6" ) ) { 
1507:VS4210/monitor.c **** 
1508:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1509:VS4210/monitor.c **** 		SET_HDMI_640_480P_PARA();
1510:VS4210/monitor.c **** 
1511:VS4210/monitor.c **** 		}
1512:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "V720" ) ) { 
1513:VS4210/monitor.c **** 
1514:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1515:VS4210/monitor.c **** 		SET_VS4210_720_480_out();
1516:VS4210/monitor.c **** 		
1517:VS4210/monitor.c **** 	}	
1518:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "om" ) ) {    //COC menu
1519:VS4210/monitor.c **** 
1520:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1521:VS4210/monitor.c **** 		TVI_Command=0x0F;
1522:VS4210/monitor.c **** 		presetNum=0;
1523:VS4210/monitor.c **** 		TVI_speed=0;
1524:VS4210/monitor.c **** 		TVI_Chksum=0xC5;
1525:VS4210/monitor.c **** 		ptztxflag=1;
1526:VS4210/monitor.c **** 		
1527:VS4210/monitor.c **** 	}	
1528:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "ou" ) ) {    //COC up
1529:VS4210/monitor.c **** 
1530:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1531:VS4210/monitor.c **** 		TVI_Command=0x06;
ARM GAS  /tmp/ccwHfacM.s 			page 57


1532:VS4210/monitor.c **** 		presetNum=0x1F;
1533:VS4210/monitor.c **** 		TVI_speed=0;
1534:VS4210/monitor.c **** 		TVI_Chksum=0xDB;
1535:VS4210/monitor.c **** 		ptztxflag=1;
1536:VS4210/monitor.c **** 		
1537:VS4210/monitor.c **** 	}	
1538:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "od" ) ) {    //COC down
1539:VS4210/monitor.c **** 
1540:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1541:VS4210/monitor.c **** 		TVI_Command=0x07;
1542:VS4210/monitor.c **** 		presetNum=0x1F;
1543:VS4210/monitor.c **** 		TVI_speed=0;
1544:VS4210/monitor.c **** 		TVI_Chksum=0xDC;
1545:VS4210/monitor.c **** 		ptztxflag=1;
1546:VS4210/monitor.c **** 
1547:VS4210/monitor.c **** 	}	else if( !stricmp( argv[0],(BYTE *) "ol" ) ) {    //COC left
1548:VS4210/monitor.c **** 
1549:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1550:VS4210/monitor.c **** 		TVI_Command=0x09;
1551:VS4210/monitor.c **** 		presetNum=0;
1552:VS4210/monitor.c **** 		TVI_speed=0x1F;
1553:VS4210/monitor.c **** 		TVI_Chksum=0xDE;
1554:VS4210/monitor.c **** 		ptztxflag=1;
1555:VS4210/monitor.c **** 
1556:VS4210/monitor.c **** 	}	else if( !stricmp( argv[0],(BYTE *) "or" ) ) {    //COC right
1557:VS4210/monitor.c **** 
1558:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1559:VS4210/monitor.c **** 		TVI_Command=0x08;
1560:VS4210/monitor.c **** 		presetNum=0;
1561:VS4210/monitor.c **** 		TVI_speed=0x1F;
1562:VS4210/monitor.c **** 		TVI_Chksum=0xDD;
1563:VS4210/monitor.c **** 		ptztxflag=1;
1564:VS4210/monitor.c **** 		
1565:VS4210/monitor.c **** 	}
1566:VS4210/monitor.c **** 		else if( !stricmp( argv[0],(BYTE *) "op" ) ) {    //COC stop
1567:VS4210/monitor.c **** 			Monitor_flag=_FALSE;
1568:VS4210/monitor.c **** 		TVI_Command=0x14;
1569:VS4210/monitor.c **** 			presetNum=0;
1570:VS4210/monitor.c **** 			TVI_speed=0;
1571:VS4210/monitor.c **** 			TVI_Chksum=0;
1572:VS4210/monitor.c **** 				ptztxflag=1;	
1573:VS4210/monitor.c **** 			}
1574:VS4210/monitor.c **** 	#if 0
1575:VS4210/monitor.c **** 	else if( !stricmp( argv[0], (BYTE *)"sw" ) ) {
1576:VS4210/monitor.c **** 		BYTE ch,win;
1577:VS4210/monitor.c **** 	ch=Asc2Bin( argv[1]);
1578:VS4210/monitor.c **** 	win=Asc2Bin( (BYTE *)argv[2]);
1579:VS4210/monitor.c **** 	VS4210_SwitchChannel(ch,win);
1580:VS4210/monitor.c **** 
1581:VS4210/monitor.c **** 			Printf("\r\n(VS4210_SwitchChannel ch=%02x win=%02x)",(WORD)ch,(WORD)win);
1582:VS4210/monitor.c **** 	}
1583:VS4210/monitor.c **** 	#endif
1584:VS4210/monitor.c **** 	#if 0
1585:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0], (BYTE *)"dpreg" ) ) {	
1586:VS4210/monitor.c **** 		BYTE i;
1587:VS4210/monitor.c **** 		    for( i = 0; i < 4; i++)
1588:VS4210/monitor.c ****     {/*
ARM GAS  /tmp/ccwHfacM.s 			page 58


1589:VS4210/monitor.c ****         count[i] = 0;
1590:VS4210/monitor.c ****         state[i] = VIDEO_UNPLUG;
1591:VS4210/monitor.c ****         std[i] = TVI;
1592:VS4210/monitor.c ****         mode[i] = NoDet;
1593:VS4210/monitor.c **** 		egain[4][4];        
1594:VS4210/monitor.c **** 		*/
1595:VS4210/monitor.c **** Printf("\r\n(ch=%02x count=%02x state=%02x std=%02x mode=%02x)",(WORD)i,(WORD)count[i],(WORD)state[
1596:VS4210/monitor.c **** Printf("(egain[%02x]  [0]=%02x [1]=%02x [2]=%02x [3]=%02x)",(WORD)i,(WORD)egain[i][0],(WORD)egain[i
1597:VS4210/monitor.c ****     }
1598:VS4210/monitor.c **** 	
1599:VS4210/monitor.c **** 		}
1600:VS4210/monitor.c **** #endif	
1601:VS4210/monitor.c **** 		/*
1602:VS4210/monitor.c **** 	//---------------------------------------------------
1603:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "*" ) ) {
1604:VS4210/monitor.c **** 			
1605:VS4210/monitor.c **** 				if( argc==1 ) {
1606:VS4210/monitor.c **** 					Printf("\r\n  * 0 : Program default Loader");
1607:VS4210/monitor.c **** 					Printf("\r\n  * 1 : Program external Loader");
1608:VS4210/monitor.c **** 					Printf("\r\n  * 2 : Execute Loader");
1609:VS4210/monitor.c **** 				}
1610:VS4210/monitor.c **** 				else { 
1611:VS4210/monitor.c **** 					BYTE mode;
1612:VS4210/monitor.c **** 					mode = Asc2Bin(argv[1]);
1613:VS4210/monitor.c **** 					//Loader(mode);
1614:VS4210/monitor.c **** 				}
1615:VS4210/monitor.c **** 	}
1616:VS4210/monitor.c **** 
1617:VS4210/monitor.c **** 	//---------------------------------------------------
1618:VS4210/monitor.c **** #if defined( SUPPORT_PC ) || defined( SUPPORT_DTV )
1619:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PCLK" ) ) {
1620:VS4210/monitor.c **** 		PclkAccess();			
1621:VS4210/monitor.c **** 	}
1622:VS4210/monitor.c **** #endif	
1623:VS4210/monitor.c **** 
1624:VS4210/monitor.c **** 	//---------------------------------------------------
1625:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "POWER" ) ) {
1626:VS4210/monitor.c **** 		//LCDPower();
1627:VS4210/monitor.c **** 	}
1628:VS4210/monitor.c **** 
1629:VS4210/monitor.c **** 	//---------------------------------------------------
1630:VS4210/monitor.c **** #if defined( SUPPORT_PC ) || defined( SUPPORT_DTV )
1631:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "M" ) ) {
1632:VS4210/monitor.c **** 		if( argc==2 ) {
1633:VS4210/monitor.c **** 			if( !stricmp( argv[1], "?" ) ) {
1634:VS4210/monitor.c **** 				BYTE i;
1635:VS4210/monitor.c **** 				Printf("\r\nCurrent Input:%d \r\n", (WORD)InputSelection);
1636:VS4210/monitor.c **** 				for(i=1; struct_InputSelection[i].Id!=0 ; i++)
1637:VS4210/monitor.c **** 						Printf("%s:%d  ",struct_InputSelection[i].Name,(WORD)struct_InputSelection[i].Id );
1638:VS4210/monitor.c **** 				Printf("\r\n");
1639:VS4210/monitor.c **** 			}
1640:VS4210/monitor.c **** 			else
1641:VS4210/monitor.c **** 				ChangeInput(Asc2Bin( argv[1] ));
1642:VS4210/monitor.c **** 		}
1643:VS4210/monitor.c **** 		else
1644:VS4210/monitor.c **** 			ChangeInput(GetNextInputSelection());
1645:VS4210/monitor.c **** 	}	
ARM GAS  /tmp/ccwHfacM.s 			page 59


1646:VS4210/monitor.c **** 	//---------------------------------------------------
1647:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "ACCESS" ) ) {
1648:VS4210/monitor.c **** 		if( argc==2 ) {
1649:VS4210/monitor.c **** 			AccessEnable = Asc2Bin(argv[1]);
1650:VS4210/monitor.c **** 		}
1651:VS4210/monitor.c **** 		Printf("\r\nTW88xx AUTO ACCESS = %d", (WORD)AccessEnable);
1652:VS4210/monitor.c **** 	}
1653:VS4210/monitor.c **** 	#if 0
1654:VS4210/monitor.c **** 	//---------------------------------------------------
1655:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "AUTODETECT" ) ) {
1656:VS4210/monitor.c **** 		if( argc==2 ) {
1657:VS4210/monitor.c **** 			AutoDetect = Asc2Bin(argv[1]);
1658:VS4210/monitor.c **** 		}
1659:VS4210/monitor.c **** 		Printf("\r\nPC Auto Detect = %d", (WORD)AutoDetect);
1660:VS4210/monitor.c **** 	}	
1661:VS4210/monitor.c **** 	#endif
1662:VS4210/monitor.c **** 	//---------------------------------------------------
1663:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PCAUTO" ) ) {
1664:VS4210/monitor.c **** 		Puts("\r\nPC Auto Measurement");
1665:VS4210/monitor.c **** 		AutoAdjust();
1666:VS4210/monitor.c **** 	}	
1667:VS4210/monitor.c **** 	//---------------------------------------------------
1668:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PCCOLOR" ) ) {
1669:VS4210/monitor.c **** 		Puts("\r\nPC Color Auto Measurement");
1670:VS4210/monitor.c **** 		AutoColorAdjust();
1671:VS4210/monitor.c **** 	}	
1672:VS4210/monitor.c **** 	//---------------------------------------------------
1673:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "7" ) ) {
1674:VS4210/monitor.c **** 		Puts("\r\nGet HPN / VPN");
1675:VS4210/monitor.c **** 		GetHpnVpn(DebugLevel);
1676:VS4210/monitor.c **** 	}	
1677:VS4210/monitor.c **** #endif
1678:VS4210/monitor.c **** 	//---------------- Debug Level ---------------------
1679:VS4210/monitor.c **** 	else if ( !stricmp( argv[0], "DEBUG" ) ) {
1680:VS4210/monitor.c **** 		if( argc==2 ) {
1681:VS4210/monitor.c **** 			DebugLevel = Asc2Bin(argv[1]);
1682:VS4210/monitor.c **** 			SaveDebugLevelEE(DebugLevel);
1683:VS4210/monitor.c **** 		}
1684:VS4210/monitor.c **** 		Printf("\r\nDebug Level = %2x", (WORD)DebugLevel);
1685:VS4210/monitor.c **** 	}
1686:VS4210/monitor.c **** 	
1687:VS4210/monitor.c **** 	//---------------- Display on/off -------------------
1688:VS4210/monitor.c **** 	else if ( !stricmp( argv[0], "echo" ) ) {
1689:VS4210/monitor.c **** 		if( !stricmp( argv[1], "off" ) ) {
1690:VS4210/monitor.c **** 			echo = 0;
1691:VS4210/monitor.c **** 			Printf("\r\necho off");
1692:VS4210/monitor.c **** 		}
1693:VS4210/monitor.c **** 		else {
1694:VS4210/monitor.c **** 			echo = 1;
1695:VS4210/monitor.c **** 			Printf("\r\necho on");
1696:VS4210/monitor.c **** 		}
1697:VS4210/monitor.c **** 	}
1698:VS4210/monitor.c **** 	//---------------- RESET/ TEST / POWER_DOWN -------------------
1699:VS4210/monitor.c **** 	else if ( !stricmp( argv[0], "reset" ) ) {
1700:VS4210/monitor.c **** 		if( !stricmp( argv[1], "0" ) ) {
1701:VS4210/monitor.c **** //			P3_4 = 0;
1702:VS4210/monitor.c **** 			Printf("\r\nTW_reset_pin => 0");
ARM GAS  /tmp/ccwHfacM.s 			page 60


1703:VS4210/monitor.c **** 		}
1704:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "1" ) ) {
1705:VS4210/monitor.c **** 	//		P3_4 = 1;
1706:VS4210/monitor.c **** 			Printf("\r\nTW_reset_pin => 1");
1707:VS4210/monitor.c **** 		}
1708:VS4210/monitor.c **** 		else {
1709:VS4210/monitor.c **** 			//Printf("\r\nTW_reset_pin = %d", (WORD)P3_4);
1710:VS4210/monitor.c **** 		}
1711:VS4210/monitor.c **** 	}
1712:VS4210/monitor.c **** 	else if ( !stricmp( argv[0], "test" ) ) {
1713:VS4210/monitor.c **** 		if( !stricmp( argv[1], "0" ) ) {
1714:VS4210/monitor.c **** 			//P0_7 = 0;
1715:VS4210/monitor.c **** 			Printf("\r\nTW_test_pin => 0");
1716:VS4210/monitor.c **** 		}
1717:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "1" ) ) {
1718:VS4210/monitor.c **** 			//P0_7 = 1;
1719:VS4210/monitor.c **** 			Printf("\r\nTW_test_pin => 1");
1720:VS4210/monitor.c **** 		}
1721:VS4210/monitor.c **** 		else {
1722:VS4210/monitor.c **** 		//	Printf("\r\nTW_test_pin = %d", (WORD)P0_7);
1723:VS4210/monitor.c **** 		}
1724:VS4210/monitor.c **** 	}
1725:VS4210/monitor.c **** 	else if ( !stricmp( argv[0], "pdn" ) ) {
1726:VS4210/monitor.c **** 		if( !stricmp( argv[1], "0" ) ) {
1727:VS4210/monitor.c **** 		//	P3_7 = 0;
1728:VS4210/monitor.c **** 			Printf("\r\nTW_PowerDown_pin => 0");
1729:VS4210/monitor.c **** 		}
1730:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "1" ) ) {
1731:VS4210/monitor.c **** 			//P3_7 = 1;
1732:VS4210/monitor.c **** 			Printf("\r\nTW_PowerDown_pin => 1");
1733:VS4210/monitor.c **** 		}
1734:VS4210/monitor.c **** 		else {
1735:VS4210/monitor.c **** 			//Printf("\r\nTW_PowerDown_pin = %d", (WORD)P3_7);
1736:VS4210/monitor.c **** 		}
1737:VS4210/monitor.c **** 	}
1738:VS4210/monitor.c **** 	//---------------- OSD test for parallel -----------------------------------
1739:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "OSD" ) ) {
1740:VS4210/monitor.c **** 		if( !stricmp( argv[1], "logo" ) ) {
1741:VS4210/monitor.c **** //			DisplayLogo();
1742:VS4210/monitor.c **** 		}
1743:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "end" ) ) {
1744:VS4210/monitor.c **** 		  	Puts("\r\nIf you'd like to exit, press any Key....");
1745:VS4210/monitor.c **** 	 		while ( !RS_ready() ){
1746:VS4210/monitor.c **** 				P2 = ReadTW88( 0x95 );
1747:VS4210/monitor.c **** 			}
1748:VS4210/monitor.c **** 		}
1749:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "input" ) ) {
1750:VS4210/monitor.c **** //			DisplayInput();
1751:VS4210/monitor.c **** 		}
1752:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "off" ) ) {
1753:VS4210/monitor.c **** ////			ShowOSDWindowAll(OFF);
1754:VS4210/monitor.c **** 		}
1755:VS4210/monitor.c **** 		//else if( !stricmp( argv[1], "grid" ) ) {
1756:VS4210/monitor.c **** 		//	DisplayGrid();
1757:VS4210/monitor.c **** 		//}
1758:VS4210/monitor.c **** #if 0		
1759:VS4210/monitor.c **** #ifndef BANKING
ARM GAS  /tmp/ccwHfacM.s 			page 61


1760:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "cone" ) ) {
1761:VS4210/monitor.c **** 			DisplayCone();
1762:VS4210/monitor.c **** 			DisplayJapanese();
1763:VS4210/monitor.c **** 		}
1764:VS4210/monitor.c **** #endif		
1765:VS4210/monitor.c **** #endif
1766:VS4210/monitor.c **** 		#ifdef BANKING
1767:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "agrid" ) ) {
1768:VS4210/monitor.c **** 		  	BYTE i, j, k;
1769:VS4210/monitor.c **** 		  	Puts("\r\nIf you'd like to exit, press any Key....");
1770:VS4210/monitor.c **** 			j = 0;
1771:VS4210/monitor.c **** 			k = 0;
1772:VS4210/monitor.c **** 			DisplayMessage();
1773:VS4210/monitor.c **** 			if ( argc == 3 )
1774:VS4210/monitor.c **** 				i = Asc2Bin(argv[2]);
1775:VS4210/monitor.c **** 			else i = 0;
1776:VS4210/monitor.c **** 	 		while ( !RS_ready() ){
1777:VS4210/monitor.c **** 				if ( j < 9 )
1778:VS4210/monitor.c **** 					DisplayGridBank0(j);
1779:VS4210/monitor.c **** 				else
1780:VS4210/monitor.c **** 					DisplayGridBank1(j);
1781:VS4210/monitor.c **** 				if ( i )
1782:VS4210/monitor.c **** 					delay(10*i);
1783:VS4210/monitor.c **** 				if (k==0) {
1784:VS4210/monitor.c **** 					if (j==16) {
1785:VS4210/monitor.c **** 						k = 1;
1786:VS4210/monitor.c **** 						j--;
1787:VS4210/monitor.c **** 					}
1788:VS4210/monitor.c **** 					else j++;
1789:VS4210/monitor.c **** 				}
1790:VS4210/monitor.c **** 				else {
1791:VS4210/monitor.c **** 					if ( j==0 ) {
1792:VS4210/monitor.c **** 						k = 0;
1793:VS4210/monitor.c **** 						j++;
1794:VS4210/monitor.c **** 					}
1795:VS4210/monitor.c **** 					else j--;
1796:VS4210/monitor.c **** 				}
1797:VS4210/monitor.c **** 			}
1798:VS4210/monitor.c **** 		}
1799:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "cgrid" ) ) {
1800:VS4210/monitor.c **** 		  	BYTE i, j, k;
1801:VS4210/monitor.c **** 		  	Puts("\r\nIf you'd like to exit, press any Key....");
1802:VS4210/monitor.c **** 			j = 0;
1803:VS4210/monitor.c **** 			k = 0;
1804:VS4210/monitor.c **** 			DisplayChinese();
1805:VS4210/monitor.c **** 			if ( argc == 3 )
1806:VS4210/monitor.c **** 				i = Asc2Bin(argv[2]);
1807:VS4210/monitor.c **** 			else i = 0;
1808:VS4210/monitor.c **** 	 		while ( !RS_ready() ){
1809:VS4210/monitor.c **** 				if ( j < 9 )
1810:VS4210/monitor.c **** 					DisplayGridBank0(j);
1811:VS4210/monitor.c **** 				else
1812:VS4210/monitor.c **** 					DisplayGridBank1(j);
1813:VS4210/monitor.c **** 				if ( i )
1814:VS4210/monitor.c **** 					delay(10*i);
1815:VS4210/monitor.c **** 				if (k==0) {
1816:VS4210/monitor.c **** 					if (j==16) {
ARM GAS  /tmp/ccwHfacM.s 			page 62


1817:VS4210/monitor.c **** 						k = 1;
1818:VS4210/monitor.c **** 						j--;
1819:VS4210/monitor.c **** 					}
1820:VS4210/monitor.c **** 					else j++;
1821:VS4210/monitor.c **** 				}
1822:VS4210/monitor.c **** 				else {
1823:VS4210/monitor.c **** 					if ( j==0 ) {
1824:VS4210/monitor.c **** 						k = 0;
1825:VS4210/monitor.c **** 						j++;
1826:VS4210/monitor.c **** 					}
1827:VS4210/monitor.c **** 					else j--;
1828:VS4210/monitor.c **** 				}
1829:VS4210/monitor.c **** 			}
1830:VS4210/monitor.c **** 		}
1831:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "jgrid" ) ) {
1832:VS4210/monitor.c **** 		  	BYTE i, j, k;
1833:VS4210/monitor.c **** 		  	Puts("\r\nIf you'd like to exit, press any Key....");
1834:VS4210/monitor.c **** 			j = 0;
1835:VS4210/monitor.c **** 			k = 0;
1836:VS4210/monitor.c **** 			DisplayJapanese();
1837:VS4210/monitor.c **** 			if ( argc == 3 )
1838:VS4210/monitor.c **** 				i = Asc2Bin(argv[2]);
1839:VS4210/monitor.c **** 			else i = 0;
1840:VS4210/monitor.c **** 	 		while ( !RS_ready() ){
1841:VS4210/monitor.c **** 				if ( j < 9 )
1842:VS4210/monitor.c **** 					DisplayGridBank0(j);
1843:VS4210/monitor.c **** 				else
1844:VS4210/monitor.c **** 					DisplayGridBank1(j);
1845:VS4210/monitor.c **** 				if ( i )
1846:VS4210/monitor.c **** 					delay(10*i);
1847:VS4210/monitor.c **** 				if (k==0) {
1848:VS4210/monitor.c **** 					if (j==16) {
1849:VS4210/monitor.c **** 						k = 1;
1850:VS4210/monitor.c **** 						j--;
1851:VS4210/monitor.c **** 					}
1852:VS4210/monitor.c **** 					else j++;
1853:VS4210/monitor.c **** 				}
1854:VS4210/monitor.c **** 				else {
1855:VS4210/monitor.c **** 					if ( j==0 ) {
1856:VS4210/monitor.c **** 						k = 0;
1857:VS4210/monitor.c **** 						j++;
1858:VS4210/monitor.c **** 					}
1859:VS4210/monitor.c **** 					else j--;
1860:VS4210/monitor.c **** 				}
1861:VS4210/monitor.c **** 			}
1862:VS4210/monitor.c **** 		}
1863:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "kgrid" ) ) {
1864:VS4210/monitor.c **** 		  	BYTE i, j, k;
1865:VS4210/monitor.c **** 		  	Puts("\r\nIf you'd like to exit, press any Key....");
1866:VS4210/monitor.c **** 			j = 0;
1867:VS4210/monitor.c **** 			k = 0;
1868:VS4210/monitor.c **** 			DisplayKorean();
1869:VS4210/monitor.c **** 			if ( argc == 3 )
1870:VS4210/monitor.c **** 				i = Asc2Bin(argv[2]);
1871:VS4210/monitor.c **** 			else i = 0;
1872:VS4210/monitor.c **** 	 		while ( !RS_ready() ){
1873:VS4210/monitor.c **** 				if ( j < 9 )
ARM GAS  /tmp/ccwHfacM.s 			page 63


1874:VS4210/monitor.c **** 					DisplayGridBank0(j);
1875:VS4210/monitor.c **** 				else
1876:VS4210/monitor.c **** 					DisplayGridBank1(j);
1877:VS4210/monitor.c **** 				if ( i )
1878:VS4210/monitor.c **** 					delay(10*i);
1879:VS4210/monitor.c **** 				if (k==0) {
1880:VS4210/monitor.c **** 					if (j==16) {
1881:VS4210/monitor.c **** 						k = 1;
1882:VS4210/monitor.c **** 						j--;
1883:VS4210/monitor.c **** 					}
1884:VS4210/monitor.c **** 					else j++;
1885:VS4210/monitor.c **** 				}
1886:VS4210/monitor.c **** 				else {
1887:VS4210/monitor.c **** 					if ( j==0 ) {
1888:VS4210/monitor.c **** 						k = 0;
1889:VS4210/monitor.c **** 						j++;
1890:VS4210/monitor.c **** 					}
1891:VS4210/monitor.c **** 					else j--;
1892:VS4210/monitor.c **** 				}
1893:VS4210/monitor.c **** 			}
1894:VS4210/monitor.c **** 		}
1895:VS4210/monitor.c **** 		#endif
1896:VS4210/monitor.c **** 	}
1897:VS4210/monitor.c **** 	//---------------- TELI ML070I Test function -----------------------------------
1898:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PWM0" ) ) {
1899:VS4210/monitor.c **** 		SET_PWM(_BL_PWM, Asc2Bin(argv[1]));
1900:VS4210/monitor.c **** 		Puts("\r\nSET PWMP1.4");
1901:VS4210/monitor.c **** 	}
1902:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PWM1" ) ) {
1903:VS4210/monitor.c **** 		SET_PWM(_CHG_CURR, Asc2Bin(argv[1]));
1904:VS4210/monitor.c **** 		Puts("\r\nSET PWMP1.5");
1905:VS4210/monitor.c **** 	}
1906:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PWM" ) ) {
1907:VS4210/monitor.c **** 		if(Asc2Bin(argv[1]))
1908:VS4210/monitor.c **** 			{
1909:VS4210/monitor.c **** 			SET_PWM(_RUN_PWM, _RUN_PWM);
1910:VS4210/monitor.c **** 			Puts("\r\nPOEN PWM");
1911:VS4210/monitor.c **** 			}
1912:VS4210/monitor.c **** 		else
1913:VS4210/monitor.c **** 			{
1914:VS4210/monitor.c **** 			SET_PWM(_STOP_PWM, _STOP_PWM);
1915:VS4210/monitor.c **** 			Puts("\r\nSTOP PWM");
1916:VS4210/monitor.c **** 			}
1917:VS4210/monitor.c **** 	}
1918:VS4210/monitor.c **** 	//---------------- serial tx test with some number -----------------------------------
1919:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "TX" ) ) {
1920:VS4210/monitor.c **** 		MonTxDump();
1921:VS4210/monitor.c **** 	}
1922:VS4210/monitor.c **** 	//---------------- OSD FONTtest for parallel -----------------------------------
1923:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "FONT" ) ) {
1924:VS4210/monitor.c **** 		if ( !stricmp( argv[1], "RAM" ) ) {
1925:VS4210/monitor.c **** //			DisplayRAMFont( Asc2Bin(argv[2]) );
1926:VS4210/monitor.c **** 		}
1927:VS4210/monitor.c **** 		else if ( !stricmp( argv[1], "ROM" ) ) {
1928:VS4210/monitor.c **** 		//	DisplayROMFont(Asc2Bin(argv[2]));
1929:VS4210/monitor.c **** 		}
1930:VS4210/monitor.c **** 		else {
ARM GAS  /tmp/ccwHfacM.s 			page 64


1931:VS4210/monitor.c **** 			Puts("\r\n Font ROM # or Font RAM # for testing");
1932:VS4210/monitor.c **** 		}
1933:VS4210/monitor.c **** 	}
1934:VS4210/monitor.c **** 	*/
1935:VS4210/monitor.c **** 	//---------------- Delta RGB Panel Test -------------------------
1936:VS4210/monitor.c **** 	#if 0//def SUPPORT_DELTA_RGB
1937:VS4210/monitor.c **** 
1938:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "delta" ) ) {
1939:VS4210/monitor.c **** 		if( argc==1 )	DeltaRGBPanelInit();
1940:VS4210/monitor.c **** 		else {
1941:VS4210/monitor.c **** 			
1942:VS4210/monitor.c **** 			if( !stricmp( argv[1], "w" ) ) {
1943:VS4210/monitor.c **** 
1944:VS4210/monitor.c **** 				WORD val;
1945:VS4210/monitor.c **** 				val= Asc2Bin(argv[3])<<8 | Asc2Bin(argv[4]);
1946:VS4210/monitor.c **** 				Printf("\r\n SPI Write: Addr:%2x  Data:%4x", (WORD)Asc2Bin(argv[2]), val);
1947:VS4210/monitor.c **** 				WriteSPI(Asc2Bin(argv[2]), val );
1948:VS4210/monitor.c **** 			}
1949:VS4210/monitor.c **** 			else if( !stricmp( argv[1], "r" ) ) {
1950:VS4210/monitor.c **** 				WORD val;
1951:VS4210/monitor.c **** 				val = ReadSPI(Asc2Bin(argv[2]));
1952:VS4210/monitor.c **** 				Printf("\r\n SPI Read: Addr:%2x  Data:%4x", (WORD)Asc2Bin(argv[2]), val);
1953:VS4210/monitor.c **** 			}
1954:VS4210/monitor.c **** 		}
1955:VS4210/monitor.c **** 	}
1956:VS4210/monitor.c **** 	#endif
1957:VS4210/monitor.c **** 	//----------------------------------------------------
1958:VS4210/monitor.c **** 	else {
1959:VS4210/monitor.c **** 		Printf("\r\nInvalid command...");
1960:VS4210/monitor.c **** 	}
1961:VS4210/monitor.c **** 
1962:VS4210/monitor.c **** 
1963:VS4210/monitor.c **** 	Prompt();
1964:VS4210/monitor.c **** 
1965:VS4210/monitor.c **** 
1966:VS4210/monitor.c **** }
1967:VS4210/monitor.c **** #endif
1968:VS4210/monitor.c **** 
1969:VS4210/monitor.c **** 
1970:VS4210/monitor.c **** 
1971:VS4210/monitor.c **** void SET_AHD_SYNC_PARA(void)
1972:VS4210/monitor.c **** {
 1605              		.loc 1 1972 0
 1606              		.cfi_startproc
 1607              		@ args = 0, pretend = 0, frame = 0
 1608              		@ frame_needed = 0, uses_anonymous_args = 0
 1609 0000 08B5     		push	{r3, lr}
 1610              	.LCFI18:
 1611              		.cfi_def_cfa_offset 8
 1612              		.cfi_offset 3, -8
 1613              		.cfi_offset 14, -4
1973:VS4210/monitor.c **** 	Printf("\r\nLoading AHD Embedded Sync para.... ");
 1614              		.loc 1 1973 0
 1615 0002 5448     		ldr	r0, .L141
 1616 0004 FFF7FEFF 		bl	Printf
 1617              	.LVL122:
1974:VS4210/monitor.c **** 	//DUMP VS4210 Reg..
ARM GAS  /tmp/ccwHfacM.s 			page 65


1975:VS4210/monitor.c **** #if 1
1976:VS4210/monitor.c **** 	VXISI2CWrite(0x08,0x40);
 1618              		.loc 1 1976 0
 1619 0008 4021     		movs	r1, #64
 1620 000a 0820     		movs	r0, #8
 1621 000c FFF7FEFF 		bl	VXISI2CWrite
 1622              	.LVL123:
1977:VS4210/monitor.c **** 	
1978:VS4210/monitor.c **** 	VXISI2CWrite(0x0A,0x40);
 1623              		.loc 1 1978 0
 1624 0010 4021     		movs	r1, #64
 1625 0012 0A20     		movs	r0, #10
 1626 0014 FFF7FEFF 		bl	VXISI2CWrite
 1627              	.LVL124:
1979:VS4210/monitor.c **** 	
1980:VS4210/monitor.c **** //	VXISI2CWrite(0x10,0x80);
1981:VS4210/monitor.c **** 	
1982:VS4210/monitor.c **** 	VXISI2CWrite(0x12,0x74);
 1628              		.loc 1 1982 0
 1629 0018 7421     		movs	r1, #116
 1630 001a 1220     		movs	r0, #18
 1631 001c FFF7FEFF 		bl	VXISI2CWrite
 1632              	.LVL125:
1983:VS4210/monitor.c **** 	VXISI2CWrite(0x13,0x80);
 1633              		.loc 1 1983 0
 1634 0020 8021     		movs	r1, #128
 1635 0022 1320     		movs	r0, #19
 1636 0024 FFF7FEFF 		bl	VXISI2CWrite
 1637              	.LVL126:
1984:VS4210/monitor.c **** 	VXISI2CWrite(0x14,0x38);
 1638              		.loc 1 1984 0
 1639 0028 3821     		movs	r1, #56
 1640 002a 1420     		movs	r0, #20
 1641 002c FFF7FEFF 		bl	VXISI2CWrite
 1642              	.LVL127:
1985:VS4210/monitor.c **** 	
1986:VS4210/monitor.c **** 	VXISI2CWrite(0x19,0x00);
 1643              		.loc 1 1986 0
 1644 0030 0021     		movs	r1, #0
 1645 0032 1920     		movs	r0, #25
 1646 0034 FFF7FEFF 		bl	VXISI2CWrite
 1647              	.LVL128:
1987:VS4210/monitor.c **** 	VXISI2CWrite(0x1A,0x20);
 1648              		.loc 1 1987 0
 1649 0038 2021     		movs	r1, #32
 1650 003a 1A20     		movs	r0, #26
 1651 003c FFF7FEFF 		bl	VXISI2CWrite
 1652              	.LVL129:
1988:VS4210/monitor.c **** 	VXISI2CWrite(0x1B,0x30);
 1653              		.loc 1 1988 0
 1654 0040 3021     		movs	r1, #48
 1655 0042 1B20     		movs	r0, #27
 1656 0044 FFF7FEFF 		bl	VXISI2CWrite
 1657              	.LVL130:
1989:VS4210/monitor.c **** 	
1990:VS4210/monitor.c **** 	VXISI2CWrite(0x1F,0xA4);
 1658              		.loc 1 1990 0
ARM GAS  /tmp/ccwHfacM.s 			page 66


 1659 0048 A421     		movs	r1, #164
 1660 004a 1F20     		movs	r0, #31
 1661 004c FFF7FEFF 		bl	VXISI2CWrite
 1662              	.LVL131:
1991:VS4210/monitor.c **** 	VXISI2CWrite(0x20,0x50);
 1663              		.loc 1 1991 0
 1664 0050 5021     		movs	r1, #80
 1665 0052 2020     		movs	r0, #32
 1666 0054 FFF7FEFF 		bl	VXISI2CWrite
 1667              	.LVL132:
1992:VS4210/monitor.c **** 	VXISI2CWrite(0x21,0xE2);
 1668              		.loc 1 1992 0
 1669 0058 E221     		movs	r1, #226
 1670 005a 2120     		movs	r0, #33
 1671 005c FFF7FEFF 		bl	VXISI2CWrite
 1672              	.LVL133:
1993:VS4210/monitor.c **** 	VXISI2CWrite(0x22,0x87);
 1673              		.loc 1 1993 0
 1674 0060 8721     		movs	r1, #135
 1675 0062 2220     		movs	r0, #34
 1676 0064 FFF7FEFF 		bl	VXISI2CWrite
 1677              	.LVL134:
1994:VS4210/monitor.c **** 	VXISI2CWrite(0x23,0x98);
 1678              		.loc 1 1994 0
 1679 0068 9821     		movs	r1, #152
 1680 006a 2320     		movs	r0, #35
 1681 006c FFF7FEFF 		bl	VXISI2CWrite
 1682              	.LVL135:
1995:VS4210/monitor.c **** 	VXISI2CWrite(0x24,0x80);
 1683              		.loc 1 1995 0
 1684 0070 8021     		movs	r1, #128
 1685 0072 2420     		movs	r0, #36
 1686 0074 FFF7FEFF 		bl	VXISI2CWrite
 1687              	.LVL136:
1996:VS4210/monitor.c **** 	VXISI2CWrite(0x25,0x44);
 1688              		.loc 1 1996 0
 1689 0078 4421     		movs	r1, #68
 1690 007a 2520     		movs	r0, #37
 1691 007c FFF7FEFF 		bl	VXISI2CWrite
 1692              	.LVL137:
1997:VS4210/monitor.c **** 	
1998:VS4210/monitor.c **** 	VXISI2CWrite(0x27,0x38);
 1693              		.loc 1 1998 0
 1694 0080 3821     		movs	r1, #56
 1695 0082 2720     		movs	r0, #39
 1696 0084 FFF7FEFF 		bl	VXISI2CWrite
 1697              	.LVL138:
1999:VS4210/monitor.c **** 	
2000:VS4210/monitor.c **** 	VXISI2CWrite(0x2E,0x47);
 1698              		.loc 1 2000 0
 1699 0088 4721     		movs	r1, #71
 1700 008a 2E20     		movs	r0, #46
 1701 008c FFF7FEFF 		bl	VXISI2CWrite
 1702              	.LVL139:
2001:VS4210/monitor.c **** 	VXISI2CWrite(0x2F,0x80);
 1703              		.loc 1 2001 0
 1704 0090 8021     		movs	r1, #128
ARM GAS  /tmp/ccwHfacM.s 			page 67


 1705 0092 2F20     		movs	r0, #47
 1706 0094 FFF7FEFF 		bl	VXISI2CWrite
 1707              	.LVL140:
2002:VS4210/monitor.c **** 	
2003:VS4210/monitor.c **** 	VXISI2CWrite(0x3A,0x1D);
 1708              		.loc 1 2003 0
 1709 0098 1D21     		movs	r1, #29
 1710 009a 3A20     		movs	r0, #58
 1711 009c FFF7FEFF 		bl	VXISI2CWrite
 1712              	.LVL141:
2004:VS4210/monitor.c **** 	
2005:VS4210/monitor.c **** 	VXISI2CWrite(0x45,0x00);
 1713              		.loc 1 2005 0
 1714 00a0 0021     		movs	r1, #0
 1715 00a2 4520     		movs	r0, #69
 1716 00a4 FFF7FEFF 		bl	VXISI2CWrite
 1717              	.LVL142:
2006:VS4210/monitor.c **** 	
2007:VS4210/monitor.c **** 	VXISI2CWrite(0x58,0x00);
 1718              		.loc 1 2007 0
 1719 00a8 0021     		movs	r1, #0
 1720 00aa 5820     		movs	r0, #88
 1721 00ac FFF7FEFF 		bl	VXISI2CWrite
 1722              	.LVL143:
2008:VS4210/monitor.c **** 	
2009:VS4210/monitor.c **** 	VXISI2CWrite(0x69,0x88);
 1723              		.loc 1 2009 0
 1724 00b0 8821     		movs	r1, #136
 1725 00b2 6920     		movs	r0, #105
 1726 00b4 FFF7FEFF 		bl	VXISI2CWrite
 1727              	.LVL144:
2010:VS4210/monitor.c **** 	
2011:VS4210/monitor.c **** 	VXISI2CWrite(0x74,0x06);
 1728              		.loc 1 2011 0
 1729 00b8 0621     		movs	r1, #6
 1730 00ba 7420     		movs	r0, #116
 1731 00bc FFF7FEFF 		bl	VXISI2CWrite
 1732              	.LVL145:
2012:VS4210/monitor.c **** 
2013:VS4210/monitor.c **** 	VXISI2CWrite(0x80,0x01);
 1733              		.loc 1 2013 0
 1734 00c0 0121     		movs	r1, #1
 1735 00c2 8020     		movs	r0, #128
 1736 00c4 FFF7FEFF 		bl	VXISI2CWrite
 1737              	.LVL146:
2014:VS4210/monitor.c **** 	VXISI2CWrite(0x81,0x15);
 1738              		.loc 1 2014 0
 1739 00c8 1521     		movs	r1, #21
 1740 00ca 8120     		movs	r0, #129
 1741 00cc FFF7FEFF 		bl	VXISI2CWrite
 1742              	.LVL147:
2015:VS4210/monitor.c **** 	
2016:VS4210/monitor.c **** 	VXISI2CWrite(0x83,0x2D);
 1743              		.loc 1 2016 0
 1744 00d0 2D21     		movs	r1, #45
 1745 00d2 8320     		movs	r0, #131
 1746 00d4 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccwHfacM.s 			page 68


 1747              	.LVL148:
2017:VS4210/monitor.c **** 	
2018:VS4210/monitor.c **** 	VXISI2CWrite(0x86,0x00);
 1748              		.loc 1 2018 0
 1749 00d8 0021     		movs	r1, #0
 1750 00da 8620     		movs	r0, #134
 1751 00dc FFF7FEFF 		bl	VXISI2CWrite
 1752              	.LVL149:
2019:VS4210/monitor.c **** 	VXISI2CWrite(0x87,0x00);
 1753              		.loc 1 2019 0
 1754 00e0 0021     		movs	r1, #0
 1755 00e2 8720     		movs	r0, #135
 1756 00e4 FFF7FEFF 		bl	VXISI2CWrite
 1757              	.LVL150:
2020:VS4210/monitor.c **** 	VXISI2CWrite(0x88,0x00);
 1758              		.loc 1 2020 0
 1759 00e8 0021     		movs	r1, #0
 1760 00ea 8820     		movs	r0, #136
 1761 00ec FFF7FEFF 		bl	VXISI2CWrite
 1762              	.LVL151:
2021:VS4210/monitor.c **** 	VXISI2CWrite(0x89,0x00);
 1763              		.loc 1 2021 0
 1764 00f0 0021     		movs	r1, #0
 1765 00f2 8920     		movs	r0, #137
 1766 00f4 FFF7FEFF 		bl	VXISI2CWrite
 1767              	.LVL152:
2022:VS4210/monitor.c **** 	
2023:VS4210/monitor.c **** 	VXISI2CWrite(0x8D,0x17);
 1768              		.loc 1 2023 0
 1769 00f8 1721     		movs	r1, #23
 1770 00fa 8D20     		movs	r0, #141
 1771 00fc FFF7FEFF 		bl	VXISI2CWrite
 1772              	.LVL153:
2024:VS4210/monitor.c **** 	
2025:VS4210/monitor.c **** 	VXISI2CWrite(0x9A,0x80);
 1773              		.loc 1 2025 0
 1774 0100 8021     		movs	r1, #128
 1775 0102 9A20     		movs	r0, #154
 1776 0104 FFF7FEFF 		bl	VXISI2CWrite
 1777              	.LVL154:
2026:VS4210/monitor.c **** 	
2027:VS4210/monitor.c **** 	
2028:VS4210/monitor.c **** 	VXISI2CWrite(0xB8,0x80);
 1778              		.loc 1 2028 0
 1779 0108 8021     		movs	r1, #128
 1780 010a B820     		movs	r0, #184
 1781 010c FFF7FEFF 		bl	VXISI2CWrite
 1782              	.LVL155:
2029:VS4210/monitor.c **** 
2030:VS4210/monitor.c **** 	VXISI2CWrite(0xBA,0x01);
 1783              		.loc 1 2030 0
 1784 0110 0121     		movs	r1, #1
 1785 0112 BA20     		movs	r0, #186
 1786 0114 FFF7FEFF 		bl	VXISI2CWrite
 1787              	.LVL156:
2031:VS4210/monitor.c **** 	
2032:VS4210/monitor.c **** 	VXISI2CWrite(0xBE,0x2C);
ARM GAS  /tmp/ccwHfacM.s 			page 69


 1788              		.loc 1 2032 0
 1789 0118 2C21     		movs	r1, #44
 1790 011a BE20     		movs	r0, #190
 1791 011c FFF7FEFF 		bl	VXISI2CWrite
 1792              	.LVL157:
2033:VS4210/monitor.c **** 	
2034:VS4210/monitor.c **** 	VXISI2CWrite(0xD7,0x0F);
 1793              		.loc 1 2034 0
 1794 0120 0F21     		movs	r1, #15
 1795 0122 D720     		movs	r0, #215
 1796 0124 FFF7FEFF 		bl	VXISI2CWrite
 1797              	.LVL158:
2035:VS4210/monitor.c **** 	
2036:VS4210/monitor.c **** 	VXISI2CWrite(0xDE,0xB0);
 1798              		.loc 1 2036 0
 1799 0128 B021     		movs	r1, #176
 1800 012a DE20     		movs	r0, #222
 1801 012c FFF7FEFF 		bl	VXISI2CWrite
 1802              	.LVL159:
2037:VS4210/monitor.c **** 	
2038:VS4210/monitor.c **** 	VXISI2CWrite(0xF0,0x30);
 1803              		.loc 1 2038 0
 1804 0130 3021     		movs	r1, #48
 1805 0132 F020     		movs	r0, #240
 1806 0134 FFF7FEFF 		bl	VXISI2CWrite
 1807              	.LVL160:
2039:VS4210/monitor.c **** 	
2040:VS4210/monitor.c **** 	VXISI2CWrite(0xFD,0x70);
 1808              		.loc 1 2040 0
 1809 0138 7021     		movs	r1, #112
 1810 013a FD20     		movs	r0, #253
 1811 013c FFF7FEFF 		bl	VXISI2CWrite
 1812              	.LVL161:
2041:VS4210/monitor.c **** 	VXISI2CWrite(0xFE,0x18);
 1813              		.loc 1 2041 0
 1814 0140 1821     		movs	r1, #24
 1815 0142 FE20     		movs	r0, #254
 1816 0144 FFF7FEFF 		bl	VXISI2CWrite
 1817              	.LVL162:
2042:VS4210/monitor.c **** 	VXISI2CWrite(0xFF,0x07);
 1818              		.loc 1 2042 0
 1819 0148 0721     		movs	r1, #7
 1820 014a FF20     		movs	r0, #255
 1821 014c FFF7FEFF 		bl	VXISI2CWrite
 1822              	.LVL163:
2043:VS4210/monitor.c **** #else
2044:VS4210/monitor.c **** 	VXISI2CWrite(0x08,0x40);
2045:VS4210/monitor.c **** 	
2046:VS4210/monitor.c **** 	VXISI2CWrite(0x0A,0x40);
2047:VS4210/monitor.c **** 	
2048:VS4210/monitor.c **** //	VXISI2CWrite(0x10,0x80);
2049:VS4210/monitor.c **** 	
2050:VS4210/monitor.c **** 	VXISI2CWrite(0x12,0x74);
2051:VS4210/monitor.c **** 	VXISI2CWrite(0x13,0x80);
2052:VS4210/monitor.c **** 	VXISI2CWrite(0x14,0x38);
2053:VS4210/monitor.c **** 	
2054:VS4210/monitor.c **** 	VXISI2CWrite(0x19,0x00);
ARM GAS  /tmp/ccwHfacM.s 			page 70


2055:VS4210/monitor.c **** 	VXISI2CWrite(0x1A,0x20);
2056:VS4210/monitor.c **** 	VXISI2CWrite(0x1B,0x30);
2057:VS4210/monitor.c **** 	
2058:VS4210/monitor.c **** 	VXISI2CWrite(0x1F,0xA4);
2059:VS4210/monitor.c **** 	VXISI2CWrite(0x20,0x50);
2060:VS4210/monitor.c **** 	VXISI2CWrite(0x21,0xE2);
2061:VS4210/monitor.c **** 	VXISI2CWrite(0x22,0x87);
2062:VS4210/monitor.c **** 	VXISI2CWrite(0x23,0x98);
2063:VS4210/monitor.c **** 	VXISI2CWrite(0x24,0x80);
2064:VS4210/monitor.c **** 	VXISI2CWrite(0x25,0x44);
2065:VS4210/monitor.c **** 	
2066:VS4210/monitor.c **** 	VXISI2CWrite(0x27,0x38);
2067:VS4210/monitor.c **** 	
2068:VS4210/monitor.c **** //	VXISI2CWrite(0x2E,0x47);
2069:VS4210/monitor.c **** //	VXISI2CWrite(0x2F,0x80);
2070:VS4210/monitor.c **** 	
2071:VS4210/monitor.c **** //	VXISI2CWrite(0x3A,0x1D);
2072:VS4210/monitor.c **** 	
2073:VS4210/monitor.c **** //	VXISI2CWrite(0x45,0x00);
2074:VS4210/monitor.c **** 	
2075:VS4210/monitor.c **** //	VXISI2CWrite(0x58,0x00);
2076:VS4210/monitor.c **** 	
2077:VS4210/monitor.c **** //	VXISI2CWrite(0x69,0x88);
2078:VS4210/monitor.c **** 	
2079:VS4210/monitor.c **** 	VXISI2CWrite(0x74,0x06);
2080:VS4210/monitor.c **** 
2081:VS4210/monitor.c **** 	VXISI2CWrite(0x80,0x01);
2082:VS4210/monitor.c **** 	VXISI2CWrite(0x81,0x15);
2083:VS4210/monitor.c **** 	
2084:VS4210/monitor.c **** 	VXISI2CWrite(0x83,0x2D);
2085:VS4210/monitor.c **** 	
2086:VS4210/monitor.c **** //	VXISI2CWrite(0x86,0x00);
2087:VS4210/monitor.c **** //	VXISI2CWrite(0x87,0x00);
2088:VS4210/monitor.c **** //	VXISI2CWrite(0x88,0x00);
2089:VS4210/monitor.c **** //	VXISI2CWrite(0x89,0x00);
2090:VS4210/monitor.c **** 	
2091:VS4210/monitor.c **** 	VXISI2CWrite(0x8D,0x17);
2092:VS4210/monitor.c **** 	
2093:VS4210/monitor.c **** //	VXISI2CWrite(0x9A,0x80);
2094:VS4210/monitor.c **** 	
2095:VS4210/monitor.c **** 	
2096:VS4210/monitor.c **** //	VXISI2CWrite(0xB8,0x80);
2097:VS4210/monitor.c **** 	/*
2098:VS4210/monitor.c **** 	VXISI2CWrite(0xBA,0x01);
2099:VS4210/monitor.c **** 	
2100:VS4210/monitor.c **** 	VXISI2CWrite(0xBE,0x2C);
2101:VS4210/monitor.c **** 	
2102:VS4210/monitor.c **** 	VXISI2CWrite(0xD7,0x0F);
2103:VS4210/monitor.c **** 	
2104:VS4210/monitor.c **** 	VXISI2CWrite(0xDE,0xB0);
2105:VS4210/monitor.c **** 	
2106:VS4210/monitor.c **** 	VXISI2CWrite(0xF0,0x30);
2107:VS4210/monitor.c **** 	
2108:VS4210/monitor.c **** 	VXISI2CWrite(0xFD,0x70);
2109:VS4210/monitor.c **** 	VXISI2CWrite(0xFE,0x18);
2110:VS4210/monitor.c **** 	VXISI2CWrite(0xFF,0x07);
2111:VS4210/monitor.c **** */
ARM GAS  /tmp/ccwHfacM.s 			page 71


2112:VS4210/monitor.c **** 
2113:VS4210/monitor.c **** #endif
2114:VS4210/monitor.c **** }
 1823              		.loc 1 2114 0
 1824 0150 08BD     		pop	{r3, pc}
 1825              	.L142:
 1826 0152 00BF     		.align	2
 1827              	.L141:
 1828 0154 00000000 		.word	.LC19
 1829              		.cfi_endproc
 1830              	.LFE93:
 1832              		.section	.text.SET_HDMI_640_480P_PARA,"ax",%progbits
 1833              		.align	1
 1834              		.global	SET_HDMI_640_480P_PARA
 1835              		.syntax unified
 1836              		.thumb
 1837              		.thumb_func
 1838              		.fpu softvfp
 1840              	SET_HDMI_640_480P_PARA:
 1841              	.LFB94:
2115:VS4210/monitor.c **** 
2116:VS4210/monitor.c **** void SET_HDMI_640_480P_PARA(void)
2117:VS4210/monitor.c **** {
 1842              		.loc 1 2117 0
 1843              		.cfi_startproc
 1844              		@ args = 0, pretend = 0, frame = 0
 1845              		@ frame_needed = 0, uses_anonymous_args = 0
 1846 0000 08B5     		push	{r3, lr}
 1847              	.LCFI19:
 1848              		.cfi_def_cfa_offset 8
 1849              		.cfi_offset 3, -8
 1850              		.cfi_offset 14, -4
2118:VS4210/monitor.c **** 	Printf("\r\nLoading HDMI 640X480P Embedded Sync para.... ");
 1851              		.loc 1 2118 0
 1852 0002 FE48     		ldr	r0, .L145
 1853 0004 FFF7FEFF 		bl	Printf
 1854              	.LVL164:
2119:VS4210/monitor.c **** 	VXISI2CWrite(0x01,0x00);
 1855              		.loc 1 2119 0
 1856 0008 0021     		movs	r1, #0
 1857 000a 0120     		movs	r0, #1
 1858 000c FFF7FEFF 		bl	VXISI2CWrite
 1859              	.LVL165:
2120:VS4210/monitor.c **** 	VXISI2CWrite(0x02,0x00);
 1860              		.loc 1 2120 0
 1861 0010 0021     		movs	r1, #0
 1862 0012 0220     		movs	r0, #2
 1863 0014 FFF7FEFF 		bl	VXISI2CWrite
 1864              	.LVL166:
2121:VS4210/monitor.c **** 	VXISI2CWrite(0x03,0x75);
 1865              		.loc 1 2121 0
 1866 0018 7521     		movs	r1, #117
 1867 001a 0320     		movs	r0, #3
 1868 001c FFF7FEFF 		bl	VXISI2CWrite
 1869              	.LVL167:
2122:VS4210/monitor.c **** 	VXISI2CWrite(0x04,0x18);
 1870              		.loc 1 2122 0
ARM GAS  /tmp/ccwHfacM.s 			page 72


 1871 0020 1821     		movs	r1, #24
 1872 0022 0420     		movs	r0, #4
 1873 0024 FFF7FEFF 		bl	VXISI2CWrite
 1874              	.LVL168:
2123:VS4210/monitor.c **** 	VXISI2CWrite(0x05,0x80);
 1875              		.loc 1 2123 0
 1876 0028 8021     		movs	r1, #128
 1877 002a 0520     		movs	r0, #5
 1878 002c FFF7FEFF 		bl	VXISI2CWrite
 1879              	.LVL169:
2124:VS4210/monitor.c **** 	VXISI2CWrite(0x06,0x20);
 1880              		.loc 1 2124 0
 1881 0030 2021     		movs	r1, #32
 1882 0032 0620     		movs	r0, #6
 1883 0034 FFF7FEFF 		bl	VXISI2CWrite
 1884              	.LVL170:
2125:VS4210/monitor.c **** 	VXISI2CWrite(0x07,0x08);
 1885              		.loc 1 2125 0
 1886 0038 0821     		movs	r1, #8
 1887 003a 0720     		movs	r0, #7
 1888 003c FFF7FEFF 		bl	VXISI2CWrite
 1889              	.LVL171:
2126:VS4210/monitor.c **** 	VXISI2CWrite(0x08,0x40);
 1890              		.loc 1 2126 0
 1891 0040 4021     		movs	r1, #64
 1892 0042 0820     		movs	r0, #8
 1893 0044 FFF7FEFF 		bl	VXISI2CWrite
 1894              	.LVL172:
2127:VS4210/monitor.c **** 	VXISI2CWrite(0x09,0x0A);
 1895              		.loc 1 2127 0
 1896 0048 0A21     		movs	r1, #10
 1897 004a 0920     		movs	r0, #9
 1898 004c FFF7FEFF 		bl	VXISI2CWrite
 1899              	.LVL173:
2128:VS4210/monitor.c **** 	VXISI2CWrite(0x0A,0x40);
 1900              		.loc 1 2128 0
 1901 0050 4021     		movs	r1, #64
 1902 0052 0A20     		movs	r0, #10
 1903 0054 FFF7FEFF 		bl	VXISI2CWrite
 1904              	.LVL174:
2129:VS4210/monitor.c **** 	VXISI2CWrite(0x0B,0x03);
 1905              		.loc 1 2129 0
 1906 0058 0321     		movs	r1, #3
 1907 005a 0B20     		movs	r0, #11
 1908 005c FFF7FEFF 		bl	VXISI2CWrite
 1909              	.LVL175:
2130:VS4210/monitor.c **** 	VXISI2CWrite(0x0C,0x00);
 1910              		.loc 1 2130 0
 1911 0060 0021     		movs	r1, #0
 1912 0062 0C20     		movs	r0, #12
 1913 0064 FFF7FEFF 		bl	VXISI2CWrite
 1914              	.LVL176:
2131:VS4210/monitor.c **** 	VXISI2CWrite(0x0D,0x20);
 1915              		.loc 1 2131 0
 1916 0068 2021     		movs	r1, #32
 1917 006a 0D20     		movs	r0, #13
 1918 006c FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccwHfacM.s 			page 73


 1919              	.LVL177:
2132:VS4210/monitor.c **** 	VXISI2CWrite(0x0E,0x10);
 1920              		.loc 1 2132 0
 1921 0070 1021     		movs	r1, #16
 1922 0072 0E20     		movs	r0, #14
 1923 0074 FFF7FEFF 		bl	VXISI2CWrite
 1924              	.LVL178:
2133:VS4210/monitor.c **** 	VXISI2CWrite(0x0F,0x00);
 1925              		.loc 1 2133 0
 1926 0078 0021     		movs	r1, #0
 1927 007a 0F20     		movs	r0, #15
 1928 007c FFF7FEFF 		bl	VXISI2CWrite
 1929              	.LVL179:
2134:VS4210/monitor.c **** 	VXISI2CWrite(0x10,0x80);
 1930              		.loc 1 2134 0
 1931 0080 8021     		movs	r1, #128
 1932 0082 1020     		movs	r0, #16
 1933 0084 FFF7FEFF 		bl	VXISI2CWrite
 1934              	.LVL180:
2135:VS4210/monitor.c **** 	VXISI2CWrite(0x11,0x82);
 1935              		.loc 1 2135 0
 1936 0088 8221     		movs	r1, #130
 1937 008a 1120     		movs	r0, #17
 1938 008c FFF7FEFF 		bl	VXISI2CWrite
 1939              	.LVL181:
2136:VS4210/monitor.c **** 	VXISI2CWrite(0x12,0x42);
 1940              		.loc 1 2136 0
 1941 0090 4221     		movs	r1, #66
 1942 0092 1220     		movs	r0, #18
 1943 0094 FFF7FEFF 		bl	VXISI2CWrite
 1944              	.LVL182:
2137:VS4210/monitor.c **** 	VXISI2CWrite(0x13,0x81);
 1945              		.loc 1 2137 0
 1946 0098 8121     		movs	r1, #129
 1947 009a 1320     		movs	r0, #19
 1948 009c FFF7FEFF 		bl	VXISI2CWrite
 1949              	.LVL183:
2138:VS4210/monitor.c **** 	VXISI2CWrite(0x14,0xC6);
 1950              		.loc 1 2138 0
 1951 00a0 C621     		movs	r1, #198
 1952 00a2 1420     		movs	r0, #20
 1953 00a4 FFF7FEFF 		bl	VXISI2CWrite
 1954              	.LVL184:
2139:VS4210/monitor.c **** 	VXISI2CWrite(0x15,0x77);
 1955              		.loc 1 2139 0
 1956 00a8 7721     		movs	r1, #119
 1957 00aa 1520     		movs	r0, #21
 1958 00ac FFF7FEFF 		bl	VXISI2CWrite
 1959              	.LVL185:
2140:VS4210/monitor.c **** 	VXISI2CWrite(0x16,0xFE);
 1960              		.loc 1 2140 0
 1961 00b0 FE21     		movs	r1, #254
 1962 00b2 1620     		movs	r0, #22
 1963 00b4 FFF7FEFF 		bl	VXISI2CWrite
 1964              	.LVL186:
2141:VS4210/monitor.c **** 	VXISI2CWrite(0x17,0xFA);
 1965              		.loc 1 2141 0
ARM GAS  /tmp/ccwHfacM.s 			page 74


 1966 00b8 FA21     		movs	r1, #250
 1967 00ba 1720     		movs	r0, #23
 1968 00bc FFF7FEFF 		bl	VXISI2CWrite
 1969              	.LVL187:
2142:VS4210/monitor.c **** 	VXISI2CWrite(0x18,0xC0);
 1970              		.loc 1 2142 0
 1971 00c0 C021     		movs	r1, #192
 1972 00c2 1820     		movs	r0, #24
 1973 00c4 FFF7FEFF 		bl	VXISI2CWrite
 1974              	.LVL188:
2143:VS4210/monitor.c **** 	VXISI2CWrite(0x19,0x00);
 1975              		.loc 1 2143 0
 1976 00c8 0021     		movs	r1, #0
 1977 00ca 1920     		movs	r0, #25
 1978 00cc FFF7FEFF 		bl	VXISI2CWrite
 1979              	.LVL189:
2144:VS4210/monitor.c **** 	VXISI2CWrite(0x1A,0x20);
 1980              		.loc 1 2144 0
 1981 00d0 2021     		movs	r1, #32
 1982 00d2 1A20     		movs	r0, #26
 1983 00d4 FFF7FEFF 		bl	VXISI2CWrite
 1984              	.LVL190:
2145:VS4210/monitor.c **** 	VXISI2CWrite(0x1B,0x30);
 1985              		.loc 1 2145 0
 1986 00d8 3021     		movs	r1, #48
 1987 00da 1B20     		movs	r0, #27
 1988 00dc FFF7FEFF 		bl	VXISI2CWrite
 1989              	.LVL191:
2146:VS4210/monitor.c **** 	VXISI2CWrite(0x1C,0x00);
 1990              		.loc 1 2146 0
 1991 00e0 0021     		movs	r1, #0
 1992 00e2 1C20     		movs	r0, #28
 1993 00e4 FFF7FEFF 		bl	VXISI2CWrite
 1994              	.LVL192:
2147:VS4210/monitor.c **** 	VXISI2CWrite(0x1D,0x00);
 1995              		.loc 1 2147 0
 1996 00e8 0021     		movs	r1, #0
 1997 00ea 1D20     		movs	r0, #29
 1998 00ec FFF7FEFF 		bl	VXISI2CWrite
 1999              	.LVL193:
2148:VS4210/monitor.c **** 	VXISI2CWrite(0x1E,0x20);
 2000              		.loc 1 2148 0
 2001 00f0 2021     		movs	r1, #32
 2002 00f2 1E20     		movs	r0, #30
 2003 00f4 FFF7FEFF 		bl	VXISI2CWrite
 2004              	.LVL194:
2149:VS4210/monitor.c **** 	VXISI2CWrite(0x1F,0x52);
 2005              		.loc 1 2149 0
 2006 00f8 5221     		movs	r1, #82
 2007 00fa 1F20     		movs	r0, #31
 2008 00fc FFF7FEFF 		bl	VXISI2CWrite
 2009              	.LVL195:
2150:VS4210/monitor.c **** 	VXISI2CWrite(0x20,0xA0);
 2010              		.loc 1 2150 0
 2011 0100 A021     		movs	r1, #160
 2012 0102 2020     		movs	r0, #32
 2013 0104 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccwHfacM.s 			page 75


 2014              	.LVL196:
2151:VS4210/monitor.c **** 	VXISI2CWrite(0x21,0xE5);
 2015              		.loc 1 2151 0
 2016 0108 E521     		movs	r1, #229
 2017 010a 2120     		movs	r0, #33
 2018 010c FFF7FEFF 		bl	VXISI2CWrite
 2019              	.LVL197:
2152:VS4210/monitor.c **** 	VXISI2CWrite(0x22,0x32);
 2020              		.loc 1 2152 0
 2021 0110 3221     		movs	r1, #50
 2022 0112 2220     		movs	r0, #34
 2023 0114 FFF7FEFF 		bl	VXISI2CWrite
 2024              	.LVL198:
2153:VS4210/monitor.c **** 	VXISI2CWrite(0x23,0x20);
 2025              		.loc 1 2153 0
 2026 0118 2021     		movs	r1, #32
 2027 011a 2320     		movs	r0, #35
 2028 011c FFF7FEFF 		bl	VXISI2CWrite
 2029              	.LVL199:
2154:VS4210/monitor.c **** 	VXISI2CWrite(0x24,0x80);
 2030              		.loc 1 2154 0
 2031 0120 8021     		movs	r1, #128
 2032 0122 2420     		movs	r0, #36
 2033 0124 FFF7FEFF 		bl	VXISI2CWrite
 2034              	.LVL200:
2155:VS4210/monitor.c **** 	VXISI2CWrite(0x25,0x21);
 2035              		.loc 1 2155 0
 2036 0128 2121     		movs	r1, #33
 2037 012a 2520     		movs	r0, #37
 2038 012c FFF7FEFF 		bl	VXISI2CWrite
 2039              	.LVL201:
2156:VS4210/monitor.c **** 	VXISI2CWrite(0x26,0x0D);
 2040              		.loc 1 2156 0
 2041 0130 0D21     		movs	r1, #13
 2042 0132 2620     		movs	r0, #38
 2043 0134 FFF7FEFF 		bl	VXISI2CWrite
 2044              	.LVL202:
2157:VS4210/monitor.c **** 	VXISI2CWrite(0x27,0xE0);
 2045              		.loc 1 2157 0
 2046 0138 E021     		movs	r1, #224
 2047 013a 2720     		movs	r0, #39
 2048 013c FFF7FEFF 		bl	VXISI2CWrite
 2049              	.LVL203:
2158:VS4210/monitor.c **** 	VXISI2CWrite(0x28,0xF0);
 2050              		.loc 1 2158 0
 2051 0140 F021     		movs	r1, #240
 2052 0142 2820     		movs	r0, #40
 2053 0144 FFF7FEFF 		bl	VXISI2CWrite
 2054              	.LVL204:
2159:VS4210/monitor.c **** 	VXISI2CWrite(0x29,0x00);
 2055              		.loc 1 2159 0
 2056 0148 0021     		movs	r1, #0
 2057 014a 2920     		movs	r0, #41
 2058 014c FFF7FEFF 		bl	VXISI2CWrite
 2059              	.LVL205:
2160:VS4210/monitor.c **** 	VXISI2CWrite(0x2A,0x00);
 2060              		.loc 1 2160 0
ARM GAS  /tmp/ccwHfacM.s 			page 76


 2061 0150 0021     		movs	r1, #0
 2062 0152 2A20     		movs	r0, #42
 2063 0154 FFF7FEFF 		bl	VXISI2CWrite
 2064              	.LVL206:
2161:VS4210/monitor.c **** 	VXISI2CWrite(0x2B,0x11);
 2065              		.loc 1 2161 0
 2066 0158 1121     		movs	r1, #17
 2067 015a 2B20     		movs	r0, #43
 2068 015c FFF7FEFF 		bl	VXISI2CWrite
 2069              	.LVL207:
2162:VS4210/monitor.c **** 	VXISI2CWrite(0x2C,0x00);
 2070              		.loc 1 2162 0
 2071 0160 0021     		movs	r1, #0
 2072 0162 2C20     		movs	r0, #44
 2073 0164 FFF7FEFF 		bl	VXISI2CWrite
 2074              	.LVL208:
2163:VS4210/monitor.c **** 	VXISI2CWrite(0x2D,0x00);
 2075              		.loc 1 2163 0
 2076 0168 0021     		movs	r1, #0
 2077 016a 2D20     		movs	r0, #45
 2078 016c FFF7FEFF 		bl	VXISI2CWrite
 2079              	.LVL209:
2164:VS4210/monitor.c **** 	VXISI2CWrite(0x2E,0x12);
 2080              		.loc 1 2164 0
 2081 0170 1221     		movs	r1, #18
 2082 0172 2E20     		movs	r0, #46
 2083 0174 FFF7FEFF 		bl	VXISI2CWrite
 2084              	.LVL210:
2165:VS4210/monitor.c **** 	VXISI2CWrite(0x2F,0x80);
 2085              		.loc 1 2165 0
 2086 0178 8021     		movs	r1, #128
 2087 017a 2F20     		movs	r0, #47
 2088 017c FFF7FEFF 		bl	VXISI2CWrite
 2089              	.LVL211:
2166:VS4210/monitor.c **** 	VXISI2CWrite(0x30,0xE0);
 2090              		.loc 1 2166 0
 2091 0180 E021     		movs	r1, #224
 2092 0182 3020     		movs	r0, #48
 2093 0184 FFF7FEFF 		bl	VXISI2CWrite
 2094              	.LVL212:
2167:VS4210/monitor.c **** 	VXISI2CWrite(0x31,0x80);
 2095              		.loc 1 2167 0
 2096 0188 8021     		movs	r1, #128
 2097 018a 3120     		movs	r0, #49
 2098 018c FFF7FEFF 		bl	VXISI2CWrite
 2099              	.LVL213:
2168:VS4210/monitor.c **** 	VXISI2CWrite(0x32,0x80);
 2100              		.loc 1 2168 0
 2101 0190 8021     		movs	r1, #128
 2102 0192 3220     		movs	r0, #50
 2103 0194 FFF7FEFF 		bl	VXISI2CWrite
 2104              	.LVL214:
2169:VS4210/monitor.c **** 	VXISI2CWrite(0x33,0x80);
 2105              		.loc 1 2169 0
 2106 0198 8021     		movs	r1, #128
 2107 019a 3320     		movs	r0, #51
 2108 019c FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccwHfacM.s 			page 77


 2109              	.LVL215:
2170:VS4210/monitor.c **** 	VXISI2CWrite(0x34,0xA0);
 2110              		.loc 1 2170 0
 2111 01a0 A021     		movs	r1, #160
 2112 01a2 3420     		movs	r0, #52
 2113 01a4 FFF7FEFF 		bl	VXISI2CWrite
 2114              	.LVL216:
2171:VS4210/monitor.c **** 	VXISI2CWrite(0x35,0x18);
 2115              		.loc 1 2171 0
 2116 01a8 1821     		movs	r1, #24
 2117 01aa 3520     		movs	r0, #53
 2118 01ac FFF7FEFF 		bl	VXISI2CWrite
 2119              	.LVL217:
2172:VS4210/monitor.c **** 	VXISI2CWrite(0x36,0x46);
 2120              		.loc 1 2172 0
 2121 01b0 4621     		movs	r1, #70
 2122 01b2 3620     		movs	r0, #54
 2123 01b4 FFF7FEFF 		bl	VXISI2CWrite
 2124              	.LVL218:
2173:VS4210/monitor.c **** 	VXISI2CWrite(0x37,0x64);
 2125              		.loc 1 2173 0
 2126 01b8 6421     		movs	r1, #100
 2127 01ba 3720     		movs	r0, #55
 2128 01bc FFF7FEFF 		bl	VXISI2CWrite
 2129              	.LVL219:
2174:VS4210/monitor.c **** 	VXISI2CWrite(0x38,0x00);
 2130              		.loc 1 2174 0
 2131 01c0 0021     		movs	r1, #0
 2132 01c2 3820     		movs	r0, #56
 2133 01c4 FFF7FEFF 		bl	VXISI2CWrite
 2134              	.LVL220:
2175:VS4210/monitor.c **** 	VXISI2CWrite(0x39,0xFF);
 2135              		.loc 1 2175 0
 2136 01c8 FF21     		movs	r1, #255
 2137 01ca 3920     		movs	r0, #57
 2138 01cc FFF7FEFF 		bl	VXISI2CWrite
 2139              	.LVL221:
2176:VS4210/monitor.c **** 	VXISI2CWrite(0x3A,0x2C);
 2140              		.loc 1 2176 0
 2141 01d0 2C21     		movs	r1, #44
 2142 01d2 3A20     		movs	r0, #58
 2143 01d4 FFF7FEFF 		bl	VXISI2CWrite
 2144              	.LVL222:
2177:VS4210/monitor.c **** 	VXISI2CWrite(0x3B,0x80);
 2145              		.loc 1 2177 0
 2146 01d8 8021     		movs	r1, #128
 2147 01da 3B20     		movs	r0, #59
 2148 01dc FFF7FEFF 		bl	VXISI2CWrite
 2149              	.LVL223:
2178:VS4210/monitor.c **** 	VXISI2CWrite(0x3C,0x80);
 2150              		.loc 1 2178 0
 2151 01e0 8021     		movs	r1, #128
 2152 01e2 3C20     		movs	r0, #60
 2153 01e4 FFF7FEFF 		bl	VXISI2CWrite
 2154              	.LVL224:
2179:VS4210/monitor.c **** 	VXISI2CWrite(0x3D,0x80);
 2155              		.loc 1 2179 0
ARM GAS  /tmp/ccwHfacM.s 			page 78


 2156 01e8 8021     		movs	r1, #128
 2157 01ea 3D20     		movs	r0, #61
 2158 01ec FFF7FEFF 		bl	VXISI2CWrite
 2159              	.LVL225:
2180:VS4210/monitor.c **** 	VXISI2CWrite(0x3E,0x80);
 2160              		.loc 1 2180 0
 2161 01f0 8021     		movs	r1, #128
 2162 01f2 3E20     		movs	r0, #62
 2163 01f4 FFF7FEFF 		bl	VXISI2CWrite
 2164              	.LVL226:
2181:VS4210/monitor.c **** 	VXISI2CWrite(0x3F,0x80);
 2165              		.loc 1 2181 0
 2166 01f8 8021     		movs	r1, #128
 2167 01fa 3F20     		movs	r0, #63
 2168 01fc FFF7FEFF 		bl	VXISI2CWrite
 2169              	.LVL227:
2182:VS4210/monitor.c **** 	//VXISI2CWrite(0xVXISI2CWrite(0x80
2183:VS4210/monitor.c **** 	VXISI2CWrite(0x41,0x60);
 2170              		.loc 1 2183 0
 2171 0200 6021     		movs	r1, #96
 2172 0202 4120     		movs	r0, #65
 2173 0204 FFF7FEFF 		bl	VXISI2CWrite
 2174              	.LVL228:
2184:VS4210/monitor.c **** 	VXISI2CWrite(0x42,0x5F);
 2175              		.loc 1 2184 0
 2176 0208 5F21     		movs	r1, #95
 2177 020a 4220     		movs	r0, #66
 2178 020c FFF7FEFF 		bl	VXISI2CWrite
 2179              	.LVL229:
2185:VS4210/monitor.c **** 	VXISI2CWrite(0x43,0x37);
 2180              		.loc 1 2185 0
 2181 0210 3721     		movs	r1, #55
 2182 0212 4320     		movs	r0, #67
 2183 0214 FFF7FEFF 		bl	VXISI2CWrite
 2184              	.LVL230:
2186:VS4210/monitor.c **** 	VXISI2CWrite(0x44,0x14);
 2185              		.loc 1 2186 0
 2186 0218 1421     		movs	r1, #20
 2187 021a 4420     		movs	r0, #68
 2188 021c FFF7FEFF 		bl	VXISI2CWrite
 2189              	.LVL231:
2187:VS4210/monitor.c **** 	VXISI2CWrite(0x45,0x05);
 2190              		.loc 1 2187 0
 2191 0220 0521     		movs	r1, #5
 2192 0222 4520     		movs	r0, #69
 2193 0224 FFF7FEFF 		bl	VXISI2CWrite
 2194              	.LVL232:
2188:VS4210/monitor.c **** 	VXISI2CWrite(0x46,0x00);
 2195              		.loc 1 2188 0
 2196 0228 0021     		movs	r1, #0
 2197 022a 4620     		movs	r0, #70
 2198 022c FFF7FEFF 		bl	VXISI2CWrite
 2199              	.LVL233:
2189:VS4210/monitor.c **** 	VXISI2CWrite(0x47,0x00);
 2200              		.loc 1 2189 0
 2201 0230 0021     		movs	r1, #0
 2202 0232 4720     		movs	r0, #71
ARM GAS  /tmp/ccwHfacM.s 			page 79


 2203 0234 FFF7FEFF 		bl	VXISI2CWrite
 2204              	.LVL234:
2190:VS4210/monitor.c **** 	VXISI2CWrite(0x48,0x00);
 2205              		.loc 1 2190 0
 2206 0238 0021     		movs	r1, #0
 2207 023a 4820     		movs	r0, #72
 2208 023c FFF7FEFF 		bl	VXISI2CWrite
 2209              	.LVL235:
2191:VS4210/monitor.c **** 	VXISI2CWrite(0x49,0x00);
 2210              		.loc 1 2191 0
 2211 0240 0021     		movs	r1, #0
 2212 0242 4920     		movs	r0, #73
 2213 0244 FFF7FEFF 		bl	VXISI2CWrite
 2214              	.LVL236:
2192:VS4210/monitor.c **** 	VXISI2CWrite(0x4B,0x20); 
 2215              		.loc 1 2192 0
 2216 0248 2021     		movs	r1, #32
 2217 024a 4B20     		movs	r0, #75
 2218 024c FFF7FEFF 		bl	VXISI2CWrite
 2219              	.LVL237:
2193:VS4210/monitor.c **** 	VXISI2CWrite(0x4C,0x00); 
 2220              		.loc 1 2193 0
 2221 0250 0021     		movs	r1, #0
 2222 0252 4C20     		movs	r0, #76
 2223 0254 FFF7FEFF 		bl	VXISI2CWrite
 2224              	.LVL238:
2194:VS4210/monitor.c **** 	VXISI2CWrite(0x4D,0x00); 
 2225              		.loc 1 2194 0
 2226 0258 0021     		movs	r1, #0
 2227 025a 4D20     		movs	r0, #77
 2228 025c FFF7FEFF 		bl	VXISI2CWrite
 2229              	.LVL239:
2195:VS4210/monitor.c **** 	VXISI2CWrite(0x4E,0x00); 
 2230              		.loc 1 2195 0
 2231 0260 0021     		movs	r1, #0
 2232 0262 4E20     		movs	r0, #78
 2233 0264 FFF7FEFF 		bl	VXISI2CWrite
 2234              	.LVL240:
2196:VS4210/monitor.c **** 	VXISI2CWrite(0x4F,0x7F); 
 2235              		.loc 1 2196 0
 2236 0268 7F21     		movs	r1, #127
 2237 026a 4F20     		movs	r0, #79
 2238 026c FFF7FEFF 		bl	VXISI2CWrite
 2239              	.LVL241:
2197:VS4210/monitor.c **** 	VXISI2CWrite(0x50,0x20); 
 2240              		.loc 1 2197 0
 2241 0270 2021     		movs	r1, #32
 2242 0272 5020     		movs	r0, #80
 2243 0274 FFF7FEFF 		bl	VXISI2CWrite
 2244              	.LVL242:
2198:VS4210/monitor.c **** 	VXISI2CWrite(0x51,0x00); 
 2245              		.loc 1 2198 0
 2246 0278 0021     		movs	r1, #0
 2247 027a 5120     		movs	r0, #81
 2248 027c FFF7FEFF 		bl	VXISI2CWrite
 2249              	.LVL243:
2199:VS4210/monitor.c **** 	VXISI2CWrite(0x52,0x00); 
ARM GAS  /tmp/ccwHfacM.s 			page 80


 2250              		.loc 1 2199 0
 2251 0280 0021     		movs	r1, #0
 2252 0282 5220     		movs	r0, #82
 2253 0284 FFF7FEFF 		bl	VXISI2CWrite
 2254              	.LVL244:
2200:VS4210/monitor.c **** 	VXISI2CWrite(0x53,0x06); 
 2255              		.loc 1 2200 0
 2256 0288 0621     		movs	r1, #6
 2257 028a 5320     		movs	r0, #83
 2258 028c FFF7FEFF 		bl	VXISI2CWrite
 2259              	.LVL245:
2201:VS4210/monitor.c **** 	VXISI2CWrite(0x54,0x00);
 2260              		.loc 1 2201 0
 2261 0290 0021     		movs	r1, #0
 2262 0292 5420     		movs	r0, #84
 2263 0294 FFF7FEFF 		bl	VXISI2CWrite
 2264              	.LVL246:
2202:VS4210/monitor.c **** 	VXISI2CWrite(0x55,0xB4);
 2265              		.loc 1 2202 0
 2266 0298 B421     		movs	r1, #180
 2267 029a 5520     		movs	r0, #85
 2268 029c FFF7FEFF 		bl	VXISI2CWrite
 2269              	.LVL247:
2203:VS4210/monitor.c **** 	VXISI2CWrite(0x56,0x3D);
 2270              		.loc 1 2203 0
 2271 02a0 3D21     		movs	r1, #61
 2272 02a2 5620     		movs	r0, #86
 2273 02a4 FFF7FEFF 		bl	VXISI2CWrite
 2274              	.LVL248:
2204:VS4210/monitor.c **** 	VXISI2CWrite(0x57,0x04);
 2275              		.loc 1 2204 0
 2276 02a8 0421     		movs	r1, #4
 2277 02aa 5720     		movs	r0, #87
 2278 02ac FFF7FEFF 		bl	VXISI2CWrite
 2279              	.LVL249:
2205:VS4210/monitor.c **** 	VXISI2CWrite(0x58,0x00);
 2280              		.loc 1 2205 0
 2281 02b0 0021     		movs	r1, #0
 2282 02b2 5820     		movs	r0, #88
 2283 02b4 FFF7FEFF 		bl	VXISI2CWrite
 2284              	.LVL250:
2206:VS4210/monitor.c **** 	VXISI2CWrite(0x59,0x08);
 2285              		.loc 1 2206 0
 2286 02b8 0821     		movs	r1, #8
 2287 02ba 5920     		movs	r0, #89
 2288 02bc FFF7FEFF 		bl	VXISI2CWrite
 2289              	.LVL251:
2207:VS4210/monitor.c **** 	VXISI2CWrite(0x5A,0x10);
 2290              		.loc 1 2207 0
 2291 02c0 1021     		movs	r1, #16
 2292 02c2 5A20     		movs	r0, #90
 2293 02c4 FFF7FEFF 		bl	VXISI2CWrite
 2294              	.LVL252:
2208:VS4210/monitor.c **** 	VXISI2CWrite(0x5B,0x00);
 2295              		.loc 1 2208 0
 2296 02c8 0021     		movs	r1, #0
 2297 02ca 5B20     		movs	r0, #91
ARM GAS  /tmp/ccwHfacM.s 			page 81


 2298 02cc FFF7FEFF 		bl	VXISI2CWrite
 2299              	.LVL253:
2209:VS4210/monitor.c **** 	VXISI2CWrite(0x5C,0x68);
 2300              		.loc 1 2209 0
 2301 02d0 6821     		movs	r1, #104
 2302 02d2 5C20     		movs	r0, #92
 2303 02d4 FFF7FEFF 		bl	VXISI2CWrite
 2304              	.LVL254:
2210:VS4210/monitor.c **** 	VXISI2CWrite(0x5D,0x40);
 2305              		.loc 1 2210 0
 2306 02d8 4021     		movs	r1, #64
 2307 02da 5D20     		movs	r0, #93
 2308 02dc FFF7FEFF 		bl	VXISI2CWrite
 2309              	.LVL255:
2211:VS4210/monitor.c **** 	VXISI2CWrite(0x5E,0x0A);
 2310              		.loc 1 2211 0
 2311 02e0 0A21     		movs	r1, #10
 2312 02e2 5E20     		movs	r0, #94
 2313 02e4 FFF7FEFF 		bl	VXISI2CWrite
 2314              	.LVL256:
2212:VS4210/monitor.c **** 	VXISI2CWrite(0x5F,0x00);
 2315              		.loc 1 2212 0
 2316 02e8 0021     		movs	r1, #0
 2317 02ea 5F20     		movs	r0, #95
 2318 02ec FFF7FEFF 		bl	VXISI2CWrite
 2319              	.LVL257:
2213:VS4210/monitor.c **** 	VXISI2CWrite(0x60,0xB4);
 2320              		.loc 1 2213 0
 2321 02f0 B421     		movs	r1, #180
 2322 02f2 6020     		movs	r0, #96
 2323 02f4 FFF7FEFF 		bl	VXISI2CWrite
 2324              	.LVL258:
2214:VS4210/monitor.c **** 	VXISI2CWrite(0x61,0x51);
 2325              		.loc 1 2214 0
 2326 02f8 5121     		movs	r1, #81
 2327 02fa 6120     		movs	r0, #97
 2328 02fc FFF7FEFF 		bl	VXISI2CWrite
 2329              	.LVL259:
2215:VS4210/monitor.c **** 	VXISI2CWrite(0x62,0x33);
 2330              		.loc 1 2215 0
 2331 0300 3321     		movs	r1, #51
 2332 0302 6220     		movs	r0, #98
 2333 0304 FFF7FEFF 		bl	VXISI2CWrite
 2334              	.LVL260:
2216:VS4210/monitor.c **** 	VXISI2CWrite(0x63,0x01);
 2335              		.loc 1 2216 0
 2336 0308 0121     		movs	r1, #1
 2337 030a 6320     		movs	r0, #99
 2338 030c FFF7FEFF 		bl	VXISI2CWrite
 2339              	.LVL261:
2217:VS4210/monitor.c **** 	VXISI2CWrite(0x64,0xFF);
 2340              		.loc 1 2217 0
 2341 0310 FF21     		movs	r1, #255
 2342 0312 6420     		movs	r0, #100
 2343 0314 FFF7FEFF 		bl	VXISI2CWrite
 2344              	.LVL262:
2218:VS4210/monitor.c **** 	VXISI2CWrite(0x65,0x01);
ARM GAS  /tmp/ccwHfacM.s 			page 82


 2345              		.loc 1 2218 0
 2346 0318 0121     		movs	r1, #1
 2347 031a 6520     		movs	r0, #101
 2348 031c FFF7FEFF 		bl	VXISI2CWrite
 2349              	.LVL263:
2219:VS4210/monitor.c **** 	VXISI2CWrite(0x66,0xFF);
 2350              		.loc 1 2219 0
 2351 0320 FF21     		movs	r1, #255
 2352 0322 6620     		movs	r0, #102
 2353 0324 FFF7FEFF 		bl	VXISI2CWrite
 2354              	.LVL264:
2220:VS4210/monitor.c **** 	VXISI2CWrite(0x67,0x89);
 2355              		.loc 1 2220 0
 2356 0328 8921     		movs	r1, #137
 2357 032a 6720     		movs	r0, #103
 2358 032c FFF7FEFF 		bl	VXISI2CWrite
 2359              	.LVL265:
2221:VS4210/monitor.c **** 	VXISI2CWrite(0x68,0xAB);
 2360              		.loc 1 2221 0
 2361 0330 AB21     		movs	r1, #171
 2362 0332 6820     		movs	r0, #104
 2363 0334 FFF7FEFF 		bl	VXISI2CWrite
 2364              	.LVL266:
2222:VS4210/monitor.c **** 	VXISI2CWrite(0x69,0x88);
 2365              		.loc 1 2222 0
 2366 0338 8821     		movs	r1, #136
 2367 033a 6920     		movs	r0, #105
 2368 033c FFF7FEFF 		bl	VXISI2CWrite
 2369              	.LVL267:
2223:VS4210/monitor.c **** 	VXISI2CWrite(0x6A,0x6E);
 2370              		.loc 1 2223 0
 2371 0340 6E21     		movs	r1, #110
 2372 0342 6A20     		movs	r0, #106
 2373 0344 FFF7FEFF 		bl	VXISI2CWrite
 2374              	.LVL268:
2224:VS4210/monitor.c **** 	VXISI2CWrite(0x6B,0x6E);
 2375              		.loc 1 2224 0
 2376 0348 6E21     		movs	r1, #110
 2377 034a 6B20     		movs	r0, #107
 2378 034c FFF7FEFF 		bl	VXISI2CWrite
 2379              	.LVL269:
2225:VS4210/monitor.c **** 	VXISI2CWrite(0x6C,0x6E);
 2380              		.loc 1 2225 0
 2381 0350 6E21     		movs	r1, #110
 2382 0352 6C20     		movs	r0, #108
 2383 0354 FFF7FEFF 		bl	VXISI2CWrite
 2384              	.LVL270:
2226:VS4210/monitor.c **** 	VXISI2CWrite(0x6D,0x00);
 2385              		.loc 1 2226 0
 2386 0358 0021     		movs	r1, #0
 2387 035a 6D20     		movs	r0, #109
 2388 035c FFF7FEFF 		bl	VXISI2CWrite
 2389              	.LVL271:
2227:VS4210/monitor.c **** 	VXISI2CWrite(0x6E,0x00);
 2390              		.loc 1 2227 0
 2391 0360 0021     		movs	r1, #0
 2392 0362 6E20     		movs	r0, #110
ARM GAS  /tmp/ccwHfacM.s 			page 83


 2393 0364 FFF7FEFF 		bl	VXISI2CWrite
 2394              	.LVL272:
2228:VS4210/monitor.c **** 	VXISI2CWrite(0x6F,0x00);
 2395              		.loc 1 2228 0
 2396 0368 0021     		movs	r1, #0
 2397 036a 6F20     		movs	r0, #111
 2398 036c FFF7FEFF 		bl	VXISI2CWrite
 2399              	.LVL273:
2229:VS4210/monitor.c **** 	VXISI2CWrite(0x70,0x00);
 2400              		.loc 1 2229 0
 2401 0370 0021     		movs	r1, #0
 2402 0372 7020     		movs	r0, #112
 2403 0374 FFF7FEFF 		bl	VXISI2CWrite
 2404              	.LVL274:
2230:VS4210/monitor.c **** 	VXISI2CWrite(0x71,0x00);
 2405              		.loc 1 2230 0
 2406 0378 0021     		movs	r1, #0
 2407 037a 7120     		movs	r0, #113
 2408 037c FFF7FEFF 		bl	VXISI2CWrite
 2409              	.LVL275:
2231:VS4210/monitor.c **** 	VXISI2CWrite(0x72,0x00);
 2410              		.loc 1 2231 0
 2411 0380 0021     		movs	r1, #0
 2412 0382 7220     		movs	r0, #114
 2413 0384 FFF7FEFF 		bl	VXISI2CWrite
 2414              	.LVL276:
2232:VS4210/monitor.c **** 	VXISI2CWrite(0x73,0x00);
 2415              		.loc 1 2232 0
 2416 0388 0021     		movs	r1, #0
 2417 038a 7320     		movs	r0, #115
 2418 038c FFF7FEFF 		bl	VXISI2CWrite
 2419              	.LVL277:
2233:VS4210/monitor.c **** 	VXISI2CWrite(0x74,0x04);
 2420              		.loc 1 2233 0
 2421 0390 0421     		movs	r1, #4
 2422 0392 7420     		movs	r0, #116
 2423 0394 FFF7FEFF 		bl	VXISI2CWrite
 2424              	.LVL278:
2234:VS4210/monitor.c **** 	VXISI2CWrite(0x75,0xFF);
 2425              		.loc 1 2234 0
 2426 0398 FF21     		movs	r1, #255
 2427 039a 7520     		movs	r0, #117
 2428 039c FFF7FEFF 		bl	VXISI2CWrite
 2429              	.LVL279:
2235:VS4210/monitor.c **** 	VXISI2CWrite(0x76,0xFF);
 2430              		.loc 1 2235 0
 2431 03a0 FF21     		movs	r1, #255
 2432 03a2 7620     		movs	r0, #118
 2433 03a4 FFF7FEFF 		bl	VXISI2CWrite
 2434              	.LVL280:
2236:VS4210/monitor.c **** 	VXISI2CWrite(0x77,0xFF);
 2435              		.loc 1 2236 0
 2436 03a8 FF21     		movs	r1, #255
 2437 03aa 7720     		movs	r0, #119
 2438 03ac FFF7FEFF 		bl	VXISI2CWrite
 2439              	.LVL281:
2237:VS4210/monitor.c **** 	VXISI2CWrite(0x78,0xFF);
ARM GAS  /tmp/ccwHfacM.s 			page 84


 2440              		.loc 1 2237 0
 2441 03b0 FF21     		movs	r1, #255
 2442 03b2 7820     		movs	r0, #120
 2443 03b4 FFF7FEFF 		bl	VXISI2CWrite
 2444              	.LVL282:
2238:VS4210/monitor.c **** 	VXISI2CWrite(0x79,0xFF);
 2445              		.loc 1 2238 0
 2446 03b8 FF21     		movs	r1, #255
 2447 03ba 7920     		movs	r0, #121
 2448 03bc FFF7FEFF 		bl	VXISI2CWrite
 2449              	.LVL283:
2239:VS4210/monitor.c **** 	VXISI2CWrite(0x7A,0xFF);
 2450              		.loc 1 2239 0
 2451 03c0 FF21     		movs	r1, #255
 2452 03c2 7A20     		movs	r0, #122
 2453 03c4 FFF7FEFF 		bl	VXISI2CWrite
 2454              	.LVL284:
2240:VS4210/monitor.c **** 	VXISI2CWrite(0x7B,0xFF);
 2455              		.loc 1 2240 0
 2456 03c8 FF21     		movs	r1, #255
 2457 03ca 7B20     		movs	r0, #123
 2458 03cc FFF7FEFF 		bl	VXISI2CWrite
 2459              	.LVL285:
2241:VS4210/monitor.c **** 	VXISI2CWrite(0x7C,0xFF);
 2460              		.loc 1 2241 0
 2461 03d0 FF21     		movs	r1, #255
 2462 03d2 7C20     		movs	r0, #124
 2463 03d4 FFF7FEFF 		bl	VXISI2CWrite
 2464              	.LVL286:
2242:VS4210/monitor.c **** 	VXISI2CWrite(0x7D,0xF0);
 2465              		.loc 1 2242 0
 2466 03d8 F021     		movs	r1, #240
 2467 03da 7D20     		movs	r0, #125
 2468 03dc FFF7FEFF 		bl	VXISI2CWrite
 2469              	.LVL287:
2243:VS4210/monitor.c **** 	VXISI2CWrite(0x7E,0x80);
 2470              		.loc 1 2243 0
 2471 03e0 8021     		movs	r1, #128
 2472 03e2 7E20     		movs	r0, #126
 2473 03e4 FFF7FEFF 		bl	VXISI2CWrite
 2474              	.LVL288:
2244:VS4210/monitor.c **** 	VXISI2CWrite(0x7F,0x00);
 2475              		.loc 1 2244 0
 2476 03e8 0021     		movs	r1, #0
 2477 03ea 7F20     		movs	r0, #127
 2478 03ec FFF7FEFF 		bl	VXISI2CWrite
 2479              	.LVL289:
2245:VS4210/monitor.c **** 	VXISI2CWrite(0x80,0x01);
 2480              		.loc 1 2245 0
 2481 03f0 0121     		movs	r1, #1
 2482 03f2 8020     		movs	r0, #128
 2483 03f4 FFF7FEFF 		bl	VXISI2CWrite
 2484              	.LVL290:
 2485 03f8 02E0     		b	.L146
 2486              	.L147:
 2487 03fa 00BF     		.align	2
 2488              	.L145:
ARM GAS  /tmp/ccwHfacM.s 			page 85


 2489 03fc 00000000 		.word	.LC20
 2490              	.L146:
2246:VS4210/monitor.c **** 	VXISI2CWrite(0x81,0x34);
 2491              		.loc 1 2246 0
 2492 0400 3421     		movs	r1, #52
 2493 0402 8120     		movs	r0, #129
 2494 0404 FFF7FEFF 		bl	VXISI2CWrite
 2495              	.LVL291:
2247:VS4210/monitor.c **** 	VXISI2CWrite(0x82,0x40);
 2496              		.loc 1 2247 0
 2497 0408 4021     		movs	r1, #64
 2498 040a 8220     		movs	r0, #130
 2499 040c FFF7FEFF 		bl	VXISI2CWrite
 2500              	.LVL292:
2248:VS4210/monitor.c **** 	VXISI2CWrite(0x83,0x2D);
 2501              		.loc 1 2248 0
 2502 0410 2D21     		movs	r1, #45
 2503 0412 8320     		movs	r0, #131
 2504 0414 FFF7FEFF 		bl	VXISI2CWrite
 2505              	.LVL293:
2249:VS4210/monitor.c **** 	VXISI2CWrite(0x84,0x59);
 2506              		.loc 1 2249 0
 2507 0418 5921     		movs	r1, #89
 2508 041a 8420     		movs	r0, #132
 2509 041c FFF7FEFF 		bl	VXISI2CWrite
 2510              	.LVL294:
2250:VS4210/monitor.c **** 	VXISI2CWrite(0x85,0xFD);
 2511              		.loc 1 2250 0
 2512 0420 FD21     		movs	r1, #253
 2513 0422 8520     		movs	r0, #133
 2514 0424 FFF7FEFF 		bl	VXISI2CWrite
 2515              	.LVL295:
2251:VS4210/monitor.c **** 	VXISI2CWrite(0x86,0x00);
 2516              		.loc 1 2251 0
 2517 0428 0021     		movs	r1, #0
 2518 042a 8620     		movs	r0, #134
 2519 042c FFF7FEFF 		bl	VXISI2CWrite
 2520              	.LVL296:
2252:VS4210/monitor.c **** 	VXISI2CWrite(0x87,0x00);
 2521              		.loc 1 2252 0
 2522 0430 0021     		movs	r1, #0
 2523 0432 8720     		movs	r0, #135
 2524 0434 FFF7FEFF 		bl	VXISI2CWrite
 2525              	.LVL297:
2253:VS4210/monitor.c **** 	VXISI2CWrite(0x88,0x00);
 2526              		.loc 1 2253 0
 2527 0438 0021     		movs	r1, #0
 2528 043a 8820     		movs	r0, #136
 2529 043c FFF7FEFF 		bl	VXISI2CWrite
 2530              	.LVL298:
2254:VS4210/monitor.c **** 	VXISI2CWrite(0x89,0x00);
 2531              		.loc 1 2254 0
 2532 0440 0021     		movs	r1, #0
 2533 0442 8920     		movs	r0, #137
 2534 0444 FFF7FEFF 		bl	VXISI2CWrite
 2535              	.LVL299:
2255:VS4210/monitor.c **** 	VXISI2CWrite(0x8A,0x00);
ARM GAS  /tmp/ccwHfacM.s 			page 86


 2536              		.loc 1 2255 0
 2537 0448 0021     		movs	r1, #0
 2538 044a 8A20     		movs	r0, #138
 2539 044c FFF7FEFF 		bl	VXISI2CWrite
 2540              	.LVL300:
2256:VS4210/monitor.c **** 	VXISI2CWrite(0x8B,0x7E);
 2541              		.loc 1 2256 0
 2542 0450 7E21     		movs	r1, #126
 2543 0452 8B20     		movs	r0, #139
 2544 0454 FFF7FEFF 		bl	VXISI2CWrite
 2545              	.LVL301:
2257:VS4210/monitor.c **** 	VXISI2CWrite(0x8C,0x03);
 2546              		.loc 1 2257 0
 2547 0458 0321     		movs	r1, #3
 2548 045a 8C20     		movs	r0, #140
 2549 045c FFF7FEFF 		bl	VXISI2CWrite
 2550              	.LVL302:
2258:VS4210/monitor.c **** 	VXISI2CWrite(0x8D,0x17);
 2551              		.loc 1 2258 0
 2552 0460 1721     		movs	r1, #23
 2553 0462 8D20     		movs	r0, #141
 2554 0464 FFF7FEFF 		bl	VXISI2CWrite
 2555              	.LVL303:
2259:VS4210/monitor.c **** 	VXISI2CWrite(0x8E,0x8C);
 2556              		.loc 1 2259 0
 2557 0468 8C21     		movs	r1, #140
 2558 046a 8E20     		movs	r0, #142
 2559 046c FFF7FEFF 		bl	VXISI2CWrite
 2560              	.LVL304:
2260:VS4210/monitor.c **** 	VXISI2CWrite(0x8F,0x00);
 2561              		.loc 1 2260 0
 2562 0470 0021     		movs	r1, #0
 2563 0472 8F20     		movs	r0, #143
 2564 0474 FFF7FEFF 		bl	VXISI2CWrite
 2565              	.LVL305:
2261:VS4210/monitor.c **** 	VXISI2CWrite(0x90,0xCC);
 2566              		.loc 1 2261 0
 2567 0478 CC21     		movs	r1, #204
 2568 047a 9020     		movs	r0, #144
 2569 047c FFF7FEFF 		bl	VXISI2CWrite
 2570              	.LVL306:
2262:VS4210/monitor.c **** 	VXISI2CWrite(0x91,0x41);
 2571              		.loc 1 2262 0
 2572 0480 4121     		movs	r1, #65
 2573 0482 9120     		movs	r0, #145
 2574 0484 FFF7FEFF 		bl	VXISI2CWrite
 2575              	.LVL307:
2263:VS4210/monitor.c **** 	VXISI2CWrite(0x92,0xC4);
 2576              		.loc 1 2263 0
 2577 0488 C421     		movs	r1, #196
 2578 048a 9220     		movs	r0, #146
 2579 048c FFF7FEFF 		bl	VXISI2CWrite
 2580              	.LVL308:
2264:VS4210/monitor.c **** 	VXISI2CWrite(0x93,0x31);
 2581              		.loc 1 2264 0
 2582 0490 3121     		movs	r1, #49
 2583 0492 9320     		movs	r0, #147
ARM GAS  /tmp/ccwHfacM.s 			page 87


 2584 0494 FFF7FEFF 		bl	VXISI2CWrite
 2585              	.LVL309:
2265:VS4210/monitor.c **** 	VXISI2CWrite(0x94,0x88);
 2586              		.loc 1 2265 0
 2587 0498 8821     		movs	r1, #136
 2588 049a 9420     		movs	r0, #148
 2589 049c FFF7FEFF 		bl	VXISI2CWrite
 2590              	.LVL310:
2266:VS4210/monitor.c **** 	VXISI2CWrite(0x95,0x80);
 2591              		.loc 1 2266 0
 2592 04a0 8021     		movs	r1, #128
 2593 04a2 9520     		movs	r0, #149
 2594 04a4 FFF7FEFF 		bl	VXISI2CWrite
 2595              	.LVL311:
2267:VS4210/monitor.c **** 	VXISI2CWrite(0x96,0xF2);
 2596              		.loc 1 2267 0
 2597 04a8 F221     		movs	r1, #242
 2598 04aa 9620     		movs	r0, #150
 2599 04ac FFF7FEFF 		bl	VXISI2CWrite
 2600              	.LVL312:
2268:VS4210/monitor.c **** 	VXISI2CWrite(0x97,0x20);
 2601              		.loc 1 2268 0
 2602 04b0 2021     		movs	r1, #32
 2603 04b2 9720     		movs	r0, #151
 2604 04b4 FFF7FEFF 		bl	VXISI2CWrite
 2605              	.LVL313:
2269:VS4210/monitor.c **** 	VXISI2CWrite(0x98,0x10);
 2606              		.loc 1 2269 0
 2607 04b8 1021     		movs	r1, #16
 2608 04ba 9820     		movs	r0, #152
 2609 04bc FFF7FEFF 		bl	VXISI2CWrite
 2610              	.LVL314:
2270:VS4210/monitor.c **** 	VXISI2CWrite(0x99,0x90);
 2611              		.loc 1 2270 0
 2612 04c0 9021     		movs	r1, #144
 2613 04c2 9920     		movs	r0, #153
 2614 04c4 FFF7FEFF 		bl	VXISI2CWrite
 2615              	.LVL315:
2271:VS4210/monitor.c **** 	VXISI2CWrite(0x9A,0x80);
 2616              		.loc 1 2271 0
 2617 04c8 8021     		movs	r1, #128
 2618 04ca 9A20     		movs	r0, #154
 2619 04cc FFF7FEFF 		bl	VXISI2CWrite
 2620              	.LVL316:
2272:VS4210/monitor.c **** 	VXISI2CWrite(0x9B,0x04);
 2621              		.loc 1 2272 0
 2622 04d0 0421     		movs	r1, #4
 2623 04d2 9B20     		movs	r0, #155
 2624 04d4 FFF7FEFF 		bl	VXISI2CWrite
 2625              	.LVL317:
2273:VS4210/monitor.c **** 	VXISI2CWrite(0x9C,0x0A);
 2626              		.loc 1 2273 0
 2627 04d8 0A21     		movs	r1, #10
 2628 04da 9C20     		movs	r0, #156
 2629 04dc FFF7FEFF 		bl	VXISI2CWrite
 2630              	.LVL318:
2274:VS4210/monitor.c **** 	VXISI2CWrite(0x9D,0x00);
ARM GAS  /tmp/ccwHfacM.s 			page 88


 2631              		.loc 1 2274 0
 2632 04e0 0021     		movs	r1, #0
 2633 04e2 9D20     		movs	r0, #157
 2634 04e4 FFF7FEFF 		bl	VXISI2CWrite
 2635              	.LVL319:
2275:VS4210/monitor.c **** 	VXISI2CWrite(0x9E,0x04);
 2636              		.loc 1 2275 0
 2637 04e8 0421     		movs	r1, #4
 2638 04ea 9E20     		movs	r0, #158
 2639 04ec FFF7FEFF 		bl	VXISI2CWrite
 2640              	.LVL320:
2276:VS4210/monitor.c **** 	VXISI2CWrite(0x9F,0x65);
 2641              		.loc 1 2276 0
 2642 04f0 6521     		movs	r1, #101
 2643 04f2 9F20     		movs	r0, #159
 2644 04f4 FFF7FEFF 		bl	VXISI2CWrite
 2645              	.LVL321:
2277:VS4210/monitor.c **** 	VXISI2CWrite(0xA0,0x2A);
 2646              		.loc 1 2277 0
 2647 04f8 2A21     		movs	r1, #42
 2648 04fa A020     		movs	r0, #160
 2649 04fc FFF7FEFF 		bl	VXISI2CWrite
 2650              	.LVL322:
2278:VS4210/monitor.c **** 	VXISI2CWrite(0xA1,0xD8);
 2651              		.loc 1 2278 0
 2652 0500 D821     		movs	r1, #216
 2653 0502 A120     		movs	r0, #161
 2654 0504 FFF7FEFF 		bl	VXISI2CWrite
 2655              	.LVL323:
2279:VS4210/monitor.c **** 	VXISI2CWrite(0xA2,0x98);
 2656              		.loc 1 2279 0
 2657 0508 9821     		movs	r1, #152
 2658 050a A220     		movs	r0, #162
 2659 050c FFF7FEFF 		bl	VXISI2CWrite
 2660              	.LVL324:
2280:VS4210/monitor.c **** 	VXISI2CWrite(0xA3,0x87);
 2661              		.loc 1 2280 0
 2662 0510 8721     		movs	r1, #135
 2663 0512 A320     		movs	r0, #163
 2664 0514 FFF7FEFF 		bl	VXISI2CWrite
 2665              	.LVL325:
2281:VS4210/monitor.c **** 	VXISI2CWrite(0xA4,0xD9);
 2666              		.loc 1 2281 0
 2667 0518 D921     		movs	r1, #217
 2668 051a A420     		movs	r0, #164
 2669 051c FFF7FEFF 		bl	VXISI2CWrite
 2670              	.LVL326:
2282:VS4210/monitor.c **** 	VXISI2CWrite(0xA5,0x38);
 2671              		.loc 1 2282 0
 2672 0520 3821     		movs	r1, #56
 2673 0522 A520     		movs	r0, #165
 2674 0524 FFF7FEFF 		bl	VXISI2CWrite
 2675              	.LVL327:
2283:VS4210/monitor.c **** 	VXISI2CWrite(0xA6,0xBA);
 2676              		.loc 1 2283 0
 2677 0528 BA21     		movs	r1, #186
 2678 052a A620     		movs	r0, #166
ARM GAS  /tmp/ccwHfacM.s 			page 89


 2679 052c FFF7FEFF 		bl	VXISI2CWrite
 2680              	.LVL328:
2284:VS4210/monitor.c **** 	VXISI2CWrite(0xA7,0x70);
 2681              		.loc 1 2284 0
 2682 0530 7021     		movs	r1, #112
 2683 0532 A720     		movs	r0, #167
 2684 0534 FFF7FEFF 		bl	VXISI2CWrite
 2685              	.LVL329:
2285:VS4210/monitor.c **** 	VXISI2CWrite(0xA8,0x40);
 2686              		.loc 1 2285 0
 2687 0538 4021     		movs	r1, #64
 2688 053a A820     		movs	r0, #168
 2689 053c FFF7FEFF 		bl	VXISI2CWrite
 2690              	.LVL330:
2286:VS4210/monitor.c **** 	VXISI2CWrite(0xA9,0x1E);
 2691              		.loc 1 2286 0
 2692 0540 1E21     		movs	r1, #30
 2693 0542 A920     		movs	r0, #169
 2694 0544 FFF7FEFF 		bl	VXISI2CWrite
 2695              	.LVL331:
2287:VS4210/monitor.c **** 	VXISI2CWrite(0xAA,0x2E);
 2696              		.loc 1 2287 0
 2697 0548 2E21     		movs	r1, #46
 2698 054a AA20     		movs	r0, #170
 2699 054c FFF7FEFF 		bl	VXISI2CWrite
 2700              	.LVL332:
2288:VS4210/monitor.c **** 	VXISI2CWrite(0xAB,0x00);
 2701              		.loc 1 2288 0
 2702 0550 0021     		movs	r1, #0
 2703 0552 AB20     		movs	r0, #171
 2704 0554 FFF7FEFF 		bl	VXISI2CWrite
 2705              	.LVL333:
2289:VS4210/monitor.c **** 	VXISI2CWrite(0xAC,0x84);
 2706              		.loc 1 2289 0
 2707 0558 8421     		movs	r1, #132
 2708 055a AC20     		movs	r0, #172
 2709 055c FFF7FEFF 		bl	VXISI2CWrite
 2710              	.LVL334:
2290:VS4210/monitor.c **** 	VXISI2CWrite(0xAD,0xF2);
 2711              		.loc 1 2290 0
 2712 0560 F221     		movs	r1, #242
 2713 0562 AD20     		movs	r0, #173
 2714 0564 FFF7FEFF 		bl	VXISI2CWrite
 2715              	.LVL335:
2291:VS4210/monitor.c **** 	VXISI2CWrite(0xAE,0x65);
 2716              		.loc 1 2291 0
 2717 0568 6521     		movs	r1, #101
 2718 056a AE20     		movs	r0, #174
 2719 056c FFF7FEFF 		bl	VXISI2CWrite
 2720              	.LVL336:
2292:VS4210/monitor.c **** 	VXISI2CWrite(0xAF,0x99);
 2721              		.loc 1 2292 0
 2722 0570 9921     		movs	r1, #153
 2723 0572 AF20     		movs	r0, #175
 2724 0574 FFF7FEFF 		bl	VXISI2CWrite
 2725              	.LVL337:
2293:VS4210/monitor.c **** 	VXISI2CWrite(0xB0,0x00);
ARM GAS  /tmp/ccwHfacM.s 			page 90


 2726              		.loc 1 2293 0
 2727 0578 0021     		movs	r1, #0
 2728 057a B020     		movs	r0, #176
 2729 057c FFF7FEFF 		bl	VXISI2CWrite
 2730              	.LVL338:
2294:VS4210/monitor.c **** 	VXISI2CWrite(0xB1,0x00);
 2731              		.loc 1 2294 0
 2732 0580 0021     		movs	r1, #0
 2733 0582 B120     		movs	r0, #177
 2734 0584 FFF7FEFF 		bl	VXISI2CWrite
 2735              	.LVL339:
2295:VS4210/monitor.c **** 	VXISI2CWrite(0xB2,0x00);
 2736              		.loc 1 2295 0
 2737 0588 0021     		movs	r1, #0
 2738 058a B220     		movs	r0, #178
 2739 058c FFF7FEFF 		bl	VXISI2CWrite
 2740              	.LVL340:
2296:VS4210/monitor.c **** 	VXISI2CWrite(0xB3,0x00);
 2741              		.loc 1 2296 0
 2742 0590 0021     		movs	r1, #0
 2743 0592 B320     		movs	r0, #179
 2744 0594 FFF7FEFF 		bl	VXISI2CWrite
 2745              	.LVL341:
2297:VS4210/monitor.c **** 	VXISI2CWrite(0xB4,0x00);
 2746              		.loc 1 2297 0
 2747 0598 0021     		movs	r1, #0
 2748 059a B420     		movs	r0, #180
 2749 059c FFF7FEFF 		bl	VXISI2CWrite
 2750              	.LVL342:
2298:VS4210/monitor.c **** 	VXISI2CWrite(0xB5,0x00);
 2751              		.loc 1 2298 0
 2752 05a0 0021     		movs	r1, #0
 2753 05a2 B520     		movs	r0, #181
 2754 05a4 FFF7FEFF 		bl	VXISI2CWrite
 2755              	.LVL343:
2299:VS4210/monitor.c **** 	VXISI2CWrite(0xB6,0x00);
 2756              		.loc 1 2299 0
 2757 05a8 0021     		movs	r1, #0
 2758 05aa B620     		movs	r0, #182
 2759 05ac FFF7FEFF 		bl	VXISI2CWrite
 2760              	.LVL344:
2300:VS4210/monitor.c **** 	VXISI2CWrite(0xB8,0x80);
 2761              		.loc 1 2300 0
 2762 05b0 8021     		movs	r1, #128
 2763 05b2 B820     		movs	r0, #184
 2764 05b4 FFF7FEFF 		bl	VXISI2CWrite
 2765              	.LVL345:
2301:VS4210/monitor.c **** 	VXISI2CWrite(0xB9,0x00);
 2766              		.loc 1 2301 0
 2767 05b8 0021     		movs	r1, #0
 2768 05ba B920     		movs	r0, #185
 2769 05bc FFF7FEFF 		bl	VXISI2CWrite
 2770              	.LVL346:
2302:VS4210/monitor.c **** 	VXISI2CWrite(0xBA,0x01);
 2771              		.loc 1 2302 0
 2772 05c0 0121     		movs	r1, #1
 2773 05c2 BA20     		movs	r0, #186
ARM GAS  /tmp/ccwHfacM.s 			page 91


 2774 05c4 FFF7FEFF 		bl	VXISI2CWrite
 2775              	.LVL347:
2303:VS4210/monitor.c **** 	VXISI2CWrite(0xBB,0x00);
 2776              		.loc 1 2303 0
 2777 05c8 0021     		movs	r1, #0
 2778 05ca BB20     		movs	r0, #187
 2779 05cc FFF7FEFF 		bl	VXISI2CWrite
 2780              	.LVL348:
2304:VS4210/monitor.c **** 	VXISI2CWrite(0xBC,0x90);
 2781              		.loc 1 2304 0
 2782 05d0 9021     		movs	r1, #144
 2783 05d2 BC20     		movs	r0, #188
 2784 05d4 FFF7FEFF 		bl	VXISI2CWrite
 2785              	.LVL349:
2305:VS4210/monitor.c **** 	VXISI2CWrite(0xBD,0x01);
 2786              		.loc 1 2305 0
 2787 05d8 0121     		movs	r1, #1
 2788 05da BD20     		movs	r0, #189
 2789 05dc FFF7FEFF 		bl	VXISI2CWrite
 2790              	.LVL350:
2306:VS4210/monitor.c **** 	VXISI2CWrite(0xBE,0x2C);
 2791              		.loc 1 2306 0
 2792 05e0 2C21     		movs	r1, #44
 2793 05e2 BE20     		movs	r0, #190
 2794 05e4 FFF7FEFF 		bl	VXISI2CWrite
 2795              	.LVL351:
2307:VS4210/monitor.c **** 	VXISI2CWrite(0xC0,0x00);
 2796              		.loc 1 2307 0
 2797 05e8 0021     		movs	r1, #0
 2798 05ea C020     		movs	r0, #192
 2799 05ec FFF7FEFF 		bl	VXISI2CWrite
 2800              	.LVL352:
2308:VS4210/monitor.c **** 	VXISI2CWrite(0xC1,0x20);
 2801              		.loc 1 2308 0
 2802 05f0 2021     		movs	r1, #32
 2803 05f2 C120     		movs	r0, #193
 2804 05f4 FFF7FEFF 		bl	VXISI2CWrite
 2805              	.LVL353:
2309:VS4210/monitor.c **** 	VXISI2CWrite(0xC2,0x20);
 2806              		.loc 1 2309 0
 2807 05f8 2021     		movs	r1, #32
 2808 05fa C220     		movs	r0, #194
 2809 05fc FFF7FEFF 		bl	VXISI2CWrite
 2810              	.LVL354:
2310:VS4210/monitor.c **** 	VXISI2CWrite(0xC3,0x20);
 2811              		.loc 1 2310 0
 2812 0600 2021     		movs	r1, #32
 2813 0602 C320     		movs	r0, #195
 2814 0604 FFF7FEFF 		bl	VXISI2CWrite
 2815              	.LVL355:
2311:VS4210/monitor.c **** 	VXISI2CWrite(0xC4,0x20);
 2816              		.loc 1 2311 0
 2817 0608 2021     		movs	r1, #32
 2818 060a C420     		movs	r0, #196
 2819 060c FFF7FEFF 		bl	VXISI2CWrite
 2820              	.LVL356:
2312:VS4210/monitor.c **** 	VXISI2CWrite(0xC5,0x20);
ARM GAS  /tmp/ccwHfacM.s 			page 92


 2821              		.loc 1 2312 0
 2822 0610 2021     		movs	r1, #32
 2823 0612 C520     		movs	r0, #197
 2824 0614 FFF7FEFF 		bl	VXISI2CWrite
 2825              	.LVL357:
2313:VS4210/monitor.c **** 	VXISI2CWrite(0xD0,0xFF);
 2826              		.loc 1 2313 0
 2827 0618 FF21     		movs	r1, #255
 2828 061a D020     		movs	r0, #208
 2829 061c FFF7FEFF 		bl	VXISI2CWrite
 2830              	.LVL358:
2314:VS4210/monitor.c **** 	VXISI2CWrite(0xD1,0x3F);
 2831              		.loc 1 2314 0
 2832 0620 3F21     		movs	r1, #63
 2833 0622 D120     		movs	r0, #209
 2834 0624 FFF7FEFF 		bl	VXISI2CWrite
 2835              	.LVL359:
2315:VS4210/monitor.c **** 	VXISI2CWrite(0xD2,0xC2);
 2836              		.loc 1 2315 0
 2837 0628 C221     		movs	r1, #194
 2838 062a D220     		movs	r0, #210
 2839 062c FFF7FEFF 		bl	VXISI2CWrite
 2840              	.LVL360:
2316:VS4210/monitor.c **** 	VXISI2CWrite(0xD3,0x3F);
 2841              		.loc 1 2316 0
 2842 0630 3F21     		movs	r1, #63
 2843 0632 D320     		movs	r0, #211
 2844 0634 FFF7FEFF 		bl	VXISI2CWrite
 2845              	.LVL361:
2317:VS4210/monitor.c **** 	VXISI2CWrite(0xD4,0x00);
 2846              		.loc 1 2317 0
 2847 0638 0021     		movs	r1, #0
 2848 063a D420     		movs	r0, #212
 2849 063c FFF7FEFF 		bl	VXISI2CWrite
 2850              	.LVL362:
2318:VS4210/monitor.c **** 	VXISI2CWrite(0xD5,0x00);
 2851              		.loc 1 2318 0
 2852 0640 0021     		movs	r1, #0
 2853 0642 D520     		movs	r0, #213
 2854 0644 FFF7FEFF 		bl	VXISI2CWrite
 2855              	.LVL363:
2319:VS4210/monitor.c **** 	VXISI2CWrite(0xD6,0x00);
 2856              		.loc 1 2319 0
 2857 0648 0021     		movs	r1, #0
 2858 064a D620     		movs	r0, #214
 2859 064c FFF7FEFF 		bl	VXISI2CWrite
 2860              	.LVL364:
2320:VS4210/monitor.c **** 	VXISI2CWrite(0xD7,0x10);
 2861              		.loc 1 2320 0
 2862 0650 1021     		movs	r1, #16
 2863 0652 D720     		movs	r0, #215
 2864 0654 FFF7FEFF 		bl	VXISI2CWrite
 2865              	.LVL365:
2321:VS4210/monitor.c **** 	VXISI2CWrite(0xD8,0x00);
 2866              		.loc 1 2321 0
 2867 0658 0021     		movs	r1, #0
 2868 065a D820     		movs	r0, #216
ARM GAS  /tmp/ccwHfacM.s 			page 93


 2869 065c FFF7FEFF 		bl	VXISI2CWrite
 2870              	.LVL366:
2322:VS4210/monitor.c **** 	VXISI2CWrite(0xDC,0x77);
 2871              		.loc 1 2322 0
 2872 0660 7721     		movs	r1, #119
 2873 0662 DC20     		movs	r0, #220
 2874 0664 FFF7FEFF 		bl	VXISI2CWrite
 2875              	.LVL367:
2323:VS4210/monitor.c **** 	VXISI2CWrite(0xDD,0x00);
 2876              		.loc 1 2323 0
 2877 0668 0021     		movs	r1, #0
 2878 066a DD20     		movs	r0, #221
 2879 066c FFF7FEFF 		bl	VXISI2CWrite
 2880              	.LVL368:
2324:VS4210/monitor.c **** 	VXISI2CWrite(0xDE,0xAF);
 2881              		.loc 1 2324 0
 2882 0670 AF21     		movs	r1, #175
 2883 0672 DE20     		movs	r0, #222
 2884 0674 FFF7FEFF 		bl	VXISI2CWrite
 2885              	.LVL369:
2325:VS4210/monitor.c **** 	VXISI2CWrite(0xDF,0xEC);
 2886              		.loc 1 2325 0
 2887 0678 EC21     		movs	r1, #236
 2888 067a DF20     		movs	r0, #223
 2889 067c FFF7FEFF 		bl	VXISI2CWrite
 2890              	.LVL370:
2326:VS4210/monitor.c **** 	VXISI2CWrite(0xE0,0x00);
 2891              		.loc 1 2326 0
 2892 0680 0021     		movs	r1, #0
 2893 0682 E020     		movs	r0, #224
 2894 0684 FFF7FEFF 		bl	VXISI2CWrite
 2895              	.LVL371:
2327:VS4210/monitor.c **** 	VXISI2CWrite(0xE1,0x00);
 2896              		.loc 1 2327 0
 2897 0688 0021     		movs	r1, #0
 2898 068a E120     		movs	r0, #225
 2899 068c FFF7FEFF 		bl	VXISI2CWrite
 2900              	.LVL372:
2328:VS4210/monitor.c **** 	VXISI2CWrite(0xE2,0x00);
 2901              		.loc 1 2328 0
 2902 0690 0021     		movs	r1, #0
 2903 0692 E220     		movs	r0, #226
 2904 0694 FFF7FEFF 		bl	VXISI2CWrite
 2905              	.LVL373:
2329:VS4210/monitor.c **** 	VXISI2CWrite(0xE3,0x12);
 2906              		.loc 1 2329 0
 2907 0698 1221     		movs	r1, #18
 2908 069a E320     		movs	r0, #227
 2909 069c FFF7FEFF 		bl	VXISI2CWrite
 2910              	.LVL374:
2330:VS4210/monitor.c **** 	VXISI2CWrite(0xE4,0xE2);
 2911              		.loc 1 2330 0
 2912 06a0 E221     		movs	r1, #226
 2913 06a2 E420     		movs	r0, #228
 2914 06a4 FFF7FEFF 		bl	VXISI2CWrite
 2915              	.LVL375:
2331:VS4210/monitor.c **** 	VXISI2CWrite(0xE5,0x80);
ARM GAS  /tmp/ccwHfacM.s 			page 94


 2916              		.loc 1 2331 0
 2917 06a8 8021     		movs	r1, #128
 2918 06aa E520     		movs	r0, #229
 2919 06ac FFF7FEFF 		bl	VXISI2CWrite
 2920              	.LVL376:
2332:VS4210/monitor.c **** 	VXISI2CWrite(0xE6,0x00);
 2921              		.loc 1 2332 0
 2922 06b0 0021     		movs	r1, #0
 2923 06b2 E620     		movs	r0, #230
 2924 06b4 FFF7FEFF 		bl	VXISI2CWrite
 2925              	.LVL377:
2333:VS4210/monitor.c **** 	VXISI2CWrite(0xE7,0x00);
 2926              		.loc 1 2333 0
 2927 06b8 0021     		movs	r1, #0
 2928 06ba E720     		movs	r0, #231
 2929 06bc FFF7FEFF 		bl	VXISI2CWrite
 2930              	.LVL378:
2334:VS4210/monitor.c **** 	VXISI2CWrite(0xE8,0x00);
 2931              		.loc 1 2334 0
 2932 06c0 0021     		movs	r1, #0
 2933 06c2 E820     		movs	r0, #232
 2934 06c4 FFF7FEFF 		bl	VXISI2CWrite
 2935              	.LVL379:
2335:VS4210/monitor.c **** 	VXISI2CWrite(0xE9,0x00);
 2936              		.loc 1 2335 0
 2937 06c8 0021     		movs	r1, #0
 2938 06ca E920     		movs	r0, #233
 2939 06cc FFF7FEFF 		bl	VXISI2CWrite
 2940              	.LVL380:
2336:VS4210/monitor.c **** 	VXISI2CWrite(0xEA,0x00);
 2941              		.loc 1 2336 0
 2942 06d0 0021     		movs	r1, #0
 2943 06d2 EA20     		movs	r0, #234
 2944 06d4 FFF7FEFF 		bl	VXISI2CWrite
 2945              	.LVL381:
2337:VS4210/monitor.c **** 	VXISI2CWrite(0xEB,0x00);
 2946              		.loc 1 2337 0
 2947 06d8 0021     		movs	r1, #0
 2948 06da EB20     		movs	r0, #235
 2949 06dc FFF7FEFF 		bl	VXISI2CWrite
 2950              	.LVL382:
2338:VS4210/monitor.c **** 	VXISI2CWrite(0xEC,0x88);
 2951              		.loc 1 2338 0
 2952 06e0 8821     		movs	r1, #136
 2953 06e2 EC20     		movs	r0, #236
 2954 06e4 FFF7FEFF 		bl	VXISI2CWrite
 2955              	.LVL383:
2339:VS4210/monitor.c **** 	VXISI2CWrite(0xED,0x00);
 2956              		.loc 1 2339 0
 2957 06e8 0021     		movs	r1, #0
 2958 06ea ED20     		movs	r0, #237
 2959 06ec FFF7FEFF 		bl	VXISI2CWrite
 2960              	.LVL384:
2340:VS4210/monitor.c **** 	VXISI2CWrite(0xEE,0x00);
 2961              		.loc 1 2340 0
 2962 06f0 0021     		movs	r1, #0
 2963 06f2 EE20     		movs	r0, #238
ARM GAS  /tmp/ccwHfacM.s 			page 95


 2964 06f4 FFF7FEFF 		bl	VXISI2CWrite
 2965              	.LVL385:
2341:VS4210/monitor.c **** 	VXISI2CWrite(0xEF,0x00);
 2966              		.loc 1 2341 0
 2967 06f8 0021     		movs	r1, #0
 2968 06fa EF20     		movs	r0, #239
 2969 06fc FFF7FEFF 		bl	VXISI2CWrite
 2970              	.LVL386:
2342:VS4210/monitor.c **** 	VXISI2CWrite(0xF0,0x30);
 2971              		.loc 1 2342 0
 2972 0700 3021     		movs	r1, #48
 2973 0702 F020     		movs	r0, #240
 2974 0704 FFF7FEFF 		bl	VXISI2CWrite
 2975              	.LVL387:
2343:VS4210/monitor.c **** 	VXISI2CWrite(0xF1,0x43);
 2976              		.loc 1 2343 0
 2977 0708 4321     		movs	r1, #67
 2978 070a F120     		movs	r0, #241
 2979 070c FFF7FEFF 		bl	VXISI2CWrite
 2980              	.LVL388:
2344:VS4210/monitor.c **** 	VXISI2CWrite(0xF2,0x1F);
 2981              		.loc 1 2344 0
 2982 0710 1F21     		movs	r1, #31
 2983 0712 F220     		movs	r0, #242
 2984 0714 FFF7FEFF 		bl	VXISI2CWrite
 2985              	.LVL389:
2345:VS4210/monitor.c **** 	VXISI2CWrite(0xF3,0x1F);
 2986              		.loc 1 2345 0
 2987 0718 1F21     		movs	r1, #31
 2988 071a F320     		movs	r0, #243
 2989 071c FFF7FEFF 		bl	VXISI2CWrite
 2990              	.LVL390:
2346:VS4210/monitor.c **** 	VXISI2CWrite(0xF4,0x22);
 2991              		.loc 1 2346 0
 2992 0720 2221     		movs	r1, #34
 2993 0722 F420     		movs	r0, #244
 2994 0724 FFF7FEFF 		bl	VXISI2CWrite
 2995              	.LVL391:
2347:VS4210/monitor.c **** 	VXISI2CWrite(0xF5,0x73);
 2996              		.loc 1 2347 0
 2997 0728 7321     		movs	r1, #115
 2998 072a F520     		movs	r0, #245
 2999 072c FFF7FEFF 		bl	VXISI2CWrite
 3000              	.LVL392:
2348:VS4210/monitor.c **** 	VXISI2CWrite(0xF6,0x53);
 3001              		.loc 1 2348 0
 3002 0730 5321     		movs	r1, #83
 3003 0732 F620     		movs	r0, #246
 3004 0734 FFF7FEFF 		bl	VXISI2CWrite
 3005              	.LVL393:
2349:VS4210/monitor.c **** 	VXISI2CWrite(0xF7,0x80);
 3006              		.loc 1 2349 0
 3007 0738 8021     		movs	r1, #128
 3008 073a F720     		movs	r0, #247
 3009 073c FFF7FEFF 		bl	VXISI2CWrite
 3010              	.LVL394:
2350:VS4210/monitor.c **** 	VXISI2CWrite(0xF8,0x01);
ARM GAS  /tmp/ccwHfacM.s 			page 96


 3011              		.loc 1 2350 0
 3012 0740 0121     		movs	r1, #1
 3013 0742 F820     		movs	r0, #248
 3014 0744 FFF7FEFF 		bl	VXISI2CWrite
 3015              	.LVL395:
2351:VS4210/monitor.c **** 	VXISI2CWrite(0xF9,0x01);
 3016              		.loc 1 2351 0
 3017 0748 0121     		movs	r1, #1
 3018 074a F920     		movs	r0, #249
 3019 074c FFF7FEFF 		bl	VXISI2CWrite
 3020              	.LVL396:
2352:VS4210/monitor.c **** 	VXISI2CWrite(0xFA,0x00);
 3021              		.loc 1 2352 0
 3022 0750 0021     		movs	r1, #0
 3023 0752 FA20     		movs	r0, #250
 3024 0754 FFF7FEFF 		bl	VXISI2CWrite
 3025              	.LVL397:
2353:VS4210/monitor.c **** 	VXISI2CWrite(0xFB,0x00);
 3026              		.loc 1 2353 0
 3027 0758 0021     		movs	r1, #0
 3028 075a FB20     		movs	r0, #251
 3029 075c FFF7FEFF 		bl	VXISI2CWrite
 3030              	.LVL398:
2354:VS4210/monitor.c **** 	VXISI2CWrite(0xFC,0x00);
 3031              		.loc 1 2354 0
 3032 0760 0021     		movs	r1, #0
 3033 0762 FC20     		movs	r0, #252
 3034 0764 FFF7FEFF 		bl	VXISI2CWrite
 3035              	.LVL399:
2355:VS4210/monitor.c **** 	VXISI2CWrite(0xFD,0x70);
 3036              		.loc 1 2355 0
 3037 0768 7021     		movs	r1, #112
 3038 076a FD20     		movs	r0, #253
 3039 076c FFF7FEFF 		bl	VXISI2CWrite
 3040              	.LVL400:
2356:VS4210/monitor.c **** 	VXISI2CWrite(0xFE,0x40);
 3041              		.loc 1 2356 0
 3042 0770 4021     		movs	r1, #64
 3043 0772 FE20     		movs	r0, #254
 3044 0774 FFF7FEFF 		bl	VXISI2CWrite
 3045              	.LVL401:
2357:VS4210/monitor.c **** 	VXISI2CWrite(0xFF,0x07);
 3046              		.loc 1 2357 0
 3047 0778 0721     		movs	r1, #7
 3048 077a FF20     		movs	r0, #255
 3049 077c FFF7FEFF 		bl	VXISI2CWrite
 3050              	.LVL402:
2358:VS4210/monitor.c **** 					   
2359:VS4210/monitor.c **** 
2360:VS4210/monitor.c **** }
 3051              		.loc 1 2360 0
 3052 0780 08BD     		pop	{r3, pc}
 3053              		.cfi_endproc
 3054              	.LFE94:
 3056 0782 00BF     		.section	.text.SET_HDMI_SYNC_PARA,"ax",%progbits
 3057              		.align	1
 3058              		.global	SET_HDMI_SYNC_PARA
ARM GAS  /tmp/ccwHfacM.s 			page 97


 3059              		.syntax unified
 3060              		.thumb
 3061              		.thumb_func
 3062              		.fpu softvfp
 3064              	SET_HDMI_SYNC_PARA:
 3065              	.LFB95:
2361:VS4210/monitor.c **** 
2362:VS4210/monitor.c **** void SET_HDMI_SYNC_PARA(void)
2363:VS4210/monitor.c **** {
 3066              		.loc 1 2363 0
 3067              		.cfi_startproc
 3068              		@ args = 0, pretend = 0, frame = 0
 3069              		@ frame_needed = 0, uses_anonymous_args = 0
 3070 0000 08B5     		push	{r3, lr}
 3071              	.LCFI20:
 3072              		.cfi_def_cfa_offset 8
 3073              		.cfi_offset 3, -8
 3074              		.cfi_offset 14, -4
2364:VS4210/monitor.c **** 	Printf("\r\nLoading HDMI Embedded Sync para.... ");
 3075              		.loc 1 2364 0
 3076 0002 0248     		ldr	r0, .L150
 3077 0004 FFF7FEFF 		bl	Printf
 3078              	.LVL403:
2365:VS4210/monitor.c **** 
2366:VS4210/monitor.c **** 	return;
2367:VS4210/monitor.c **** 	//DUMP VS4210 Reg..
2368:VS4210/monitor.c **** #if 0
2369:VS4210/monitor.c **** VXISI2CWrite(0x00,0x42);
2370:VS4210/monitor.c **** VXISI2CWrite(0x01,0x00);
2371:VS4210/monitor.c **** VXISI2CWrite(0x02,0x00);
2372:VS4210/monitor.c **** VXISI2CWrite(0x03,0x75);
2373:VS4210/monitor.c **** VXISI2CWrite(0x04,0x18);
2374:VS4210/monitor.c **** VXISI2CWrite(0x05,0x80);
2375:VS4210/monitor.c **** VXISI2CWrite(0x06,0x20);
2376:VS4210/monitor.c **** VXISI2CWrite(0x07,0x0C);
2377:VS4210/monitor.c **** VXISI2CWrite(0x08,0x40);
2378:VS4210/monitor.c **** VXISI2CWrite(0x09,0x0A);
2379:VS4210/monitor.c **** VXISI2CWrite(0x0A,0x40);
2380:VS4210/monitor.c **** VXISI2CWrite(0x0B,0x0A);
2381:VS4210/monitor.c **** VXISI2CWrite(0x0C,0x00);
2382:VS4210/monitor.c **** VXISI2CWrite(0x0D,0x20);
2383:VS4210/monitor.c **** VXISI2CWrite(0x0E,0x10);
2384:VS4210/monitor.c **** VXISI2CWrite(0x0F,0x00);
2385:VS4210/monitor.c **** VXISI2CWrite(0x10,0x80);
2386:VS4210/monitor.c **** VXISI2CWrite(0x11,0x82);
2387:VS4210/monitor.c **** VXISI2CWrite(0x12,0x74);
2388:VS4210/monitor.c **** VXISI2CWrite(0x13,0x80);
2389:VS4210/monitor.c **** VXISI2CWrite(0x14,0x38);
2390:VS4210/monitor.c **** VXISI2CWrite(0x15,0x78);
2391:VS4210/monitor.c **** VXISI2CWrite(0x16,0xFE);
2392:VS4210/monitor.c **** VXISI2CWrite(0x17,0x00);
2393:VS4210/monitor.c **** VXISI2CWrite(0x18,0xC0);
2394:VS4210/monitor.c **** VXISI2CWrite(0x19,0x00);
2395:VS4210/monitor.c **** VXISI2CWrite(0x1A,0x20);
2396:VS4210/monitor.c **** VXISI2CWrite(0x1B,0x30);
2397:VS4210/monitor.c **** VXISI2CWrite(0x1C,0x00);
2398:VS4210/monitor.c **** VXISI2CWrite(0x1D,0x00);
ARM GAS  /tmp/ccwHfacM.s 			page 98


2399:VS4210/monitor.c **** VXISI2CWrite(0x1E,0x20);
2400:VS4210/monitor.c **** VXISI2CWrite(0x1F,0xA4);
2401:VS4210/monitor.c **** VXISI2CWrite(0x20,0x50);
2402:VS4210/monitor.c **** VXISI2CWrite(0x21,0xE2);
2403:VS4210/monitor.c **** VXISI2CWrite(0x22,0x87);
2404:VS4210/monitor.c **** VXISI2CWrite(0x23,0x98);
2405:VS4210/monitor.c **** VXISI2CWrite(0x24,0x80);
2406:VS4210/monitor.c **** VXISI2CWrite(0x25,0x44);
2407:VS4210/monitor.c **** VXISI2CWrite(0x26,0x65);
2408:VS4210/monitor.c **** VXISI2CWrite(0x27,0x38);
2409:VS4210/monitor.c **** VXISI2CWrite(0x28,0xF0);
2410:VS4210/monitor.c **** VXISI2CWrite(0x29,0x00);
2411:VS4210/monitor.c **** VXISI2CWrite(0x2A,0x00);
2412:VS4210/monitor.c **** VXISI2CWrite(0x2B,0x11);
2413:VS4210/monitor.c **** VXISI2CWrite(0x2C,0x00);
2414:VS4210/monitor.c **** VXISI2CWrite(0x2D,0x00);
2415:VS4210/monitor.c **** VXISI2CWrite(0x2E,0x47);
2416:VS4210/monitor.c **** VXISI2CWrite(0x2F,0x80);
2417:VS4210/monitor.c **** VXISI2CWrite(0x30,0x38);
2418:VS4210/monitor.c **** VXISI2CWrite(0x31,0x80);
2419:VS4210/monitor.c **** VXISI2CWrite(0x32,0x80);
2420:VS4210/monitor.c **** VXISI2CWrite(0x33,0x80);
2421:VS4210/monitor.c **** VXISI2CWrite(0x34,0xA0);
2422:VS4210/monitor.c **** VXISI2CWrite(0x35,0x18);
2423:VS4210/monitor.c **** VXISI2CWrite(0x36,0x46);
2424:VS4210/monitor.c **** VXISI2CWrite(0x37,0x64);
2425:VS4210/monitor.c **** VXISI2CWrite(0x38,0x00);
2426:VS4210/monitor.c **** VXISI2CWrite(0x39,0xFF);
2427:VS4210/monitor.c **** VXISI2CWrite(0x3A,0x1D);
2428:VS4210/monitor.c **** VXISI2CWrite(0x3B,0x80);
2429:VS4210/monitor.c **** VXISI2CWrite(0x3C,0x80);
2430:VS4210/monitor.c **** VXISI2CWrite(0x3D,0x80);
2431:VS4210/monitor.c **** VXISI2CWrite(0x3E,0x80);
2432:VS4210/monitor.c **** VXISI2CWrite(0x3F,0x80);
2433:VS4210/monitor.c **** VXISI2CWrite(0x40,0x80);
2434:VS4210/monitor.c **** VXISI2CWrite(0x41,0x60);
2435:VS4210/monitor.c **** VXISI2CWrite(0x42,0x5F);
2436:VS4210/monitor.c **** VXISI2CWrite(0x43,0x37);
2437:VS4210/monitor.c **** VXISI2CWrite(0x44,0x14);
2438:VS4210/monitor.c **** VXISI2CWrite(0x45,0x00);
2439:VS4210/monitor.c **** VXISI2CWrite(0x46,0x00);
2440:VS4210/monitor.c **** VXISI2CWrite(0x47,0x00);
2441:VS4210/monitor.c **** VXISI2CWrite(0x48,0x00);
2442:VS4210/monitor.c **** VXISI2CWrite(0x49,0x00);
2443:VS4210/monitor.c **** VXISI2CWrite(0x4A,0x00);
2444:VS4210/monitor.c **** VXISI2CWrite(0x4B,0x20);
2445:VS4210/monitor.c **** VXISI2CWrite(0x4C,0x00);
2446:VS4210/monitor.c **** VXISI2CWrite(0x4D,0x00);
2447:VS4210/monitor.c **** VXISI2CWrite(0x4E,0x00);
2448:VS4210/monitor.c **** VXISI2CWrite(0x4F,0x7F);
2449:VS4210/monitor.c **** VXISI2CWrite(0x50,0x20);
2450:VS4210/monitor.c **** VXISI2CWrite(0x51,0x00);
2451:VS4210/monitor.c **** VXISI2CWrite(0x52,0xA4);
2452:VS4210/monitor.c **** VXISI2CWrite(0x53,0xC0);
2453:VS4210/monitor.c **** VXISI2CWrite(0x54,0x42);
2454:VS4210/monitor.c **** VXISI2CWrite(0x55,0x60);
2455:VS4210/monitor.c **** VXISI2CWrite(0x56,0x5C);
ARM GAS  /tmp/ccwHfacM.s 			page 99


2456:VS4210/monitor.c **** VXISI2CWrite(0x57,0x04);
2457:VS4210/monitor.c **** VXISI2CWrite(0x58,0x00);
2458:VS4210/monitor.c **** VXISI2CWrite(0x59,0x08);
2459:VS4210/monitor.c **** VXISI2CWrite(0x5A,0x10);
2460:VS4210/monitor.c **** VXISI2CWrite(0x5B,0x00);
2461:VS4210/monitor.c **** VXISI2CWrite(0x5C,0x68);
2462:VS4210/monitor.c **** VXISI2CWrite(0x5D,0xA8);
2463:VS4210/monitor.c **** VXISI2CWrite(0x5E,0xC0);
2464:VS4210/monitor.c **** VXISI2CWrite(0x5F,0x53);
2465:VS4210/monitor.c **** VXISI2CWrite(0x60,0xE0);
2466:VS4210/monitor.c **** VXISI2CWrite(0x61,0xCC);
2467:VS4210/monitor.c **** VXISI2CWrite(0x62,0x33);
2468:VS4210/monitor.c **** VXISI2CWrite(0x63,0x01);
2469:VS4210/monitor.c **** VXISI2CWrite(0x64,0xFF);
2470:VS4210/monitor.c **** VXISI2CWrite(0x65,0x01);
2471:VS4210/monitor.c **** VXISI2CWrite(0x66,0xFF);
2472:VS4210/monitor.c **** VXISI2CWrite(0x67,0x89);
2473:VS4210/monitor.c **** VXISI2CWrite(0x68,0xAB);
2474:VS4210/monitor.c **** VXISI2CWrite(0x69,0x88);
2475:VS4210/monitor.c **** VXISI2CWrite(0x6A,0x6E);
2476:VS4210/monitor.c **** VXISI2CWrite(0x6B,0x6E);
2477:VS4210/monitor.c **** VXISI2CWrite(0x6C,0x6E);
2478:VS4210/monitor.c **** VXISI2CWrite(0x6D,0x00);
2479:VS4210/monitor.c **** VXISI2CWrite(0x6E,0x00);
2480:VS4210/monitor.c **** VXISI2CWrite(0x6F,0x00);
2481:VS4210/monitor.c **** VXISI2CWrite(0x70,0x00);
2482:VS4210/monitor.c **** VXISI2CWrite(0x71,0x00);
2483:VS4210/monitor.c **** VXISI2CWrite(0x72,0x00);
2484:VS4210/monitor.c **** VXISI2CWrite(0x73,0x00);
2485:VS4210/monitor.c **** VXISI2CWrite(0x74,0x06);
2486:VS4210/monitor.c **** VXISI2CWrite(0x75,0xFF);
2487:VS4210/monitor.c **** VXISI2CWrite(0x76,0xFF);
2488:VS4210/monitor.c **** VXISI2CWrite(0x77,0xFF);
2489:VS4210/monitor.c **** VXISI2CWrite(0x78,0xFF);
2490:VS4210/monitor.c **** VXISI2CWrite(0x79,0xFF);
2491:VS4210/monitor.c **** VXISI2CWrite(0x7A,0xFF);
2492:VS4210/monitor.c **** VXISI2CWrite(0x7B,0xFF);
2493:VS4210/monitor.c **** VXISI2CWrite(0x7C,0xFF);
2494:VS4210/monitor.c **** VXISI2CWrite(0x7D,0xF0);
2495:VS4210/monitor.c **** VXISI2CWrite(0x7E,0x80);
2496:VS4210/monitor.c **** VXISI2CWrite(0x7F,0x00);
2497:VS4210/monitor.c **** VXISI2CWrite(0x80,0x01);
2498:VS4210/monitor.c **** VXISI2CWrite(0x81,0x15);
2499:VS4210/monitor.c **** VXISI2CWrite(0x82,0x40);
2500:VS4210/monitor.c **** VXISI2CWrite(0x83,0x2D);
2501:VS4210/monitor.c **** VXISI2CWrite(0x84,0x57);
2502:VS4210/monitor.c **** VXISI2CWrite(0x85,0xFD);
2503:VS4210/monitor.c **** VXISI2CWrite(0x86,0x00);
2504:VS4210/monitor.c **** VXISI2CWrite(0x87,0x00);
2505:VS4210/monitor.c **** VXISI2CWrite(0x88,0x00);
2506:VS4210/monitor.c **** VXISI2CWrite(0x89,0x00);
2507:VS4210/monitor.c **** VXISI2CWrite(0x8A,0x00);
2508:VS4210/monitor.c **** VXISI2CWrite(0x8B,0x7E);
2509:VS4210/monitor.c **** VXISI2CWrite(0x8C,0x03);
2510:VS4210/monitor.c **** VXISI2CWrite(0x8D,0x17);
2511:VS4210/monitor.c **** VXISI2CWrite(0x8E,0x8C);
2512:VS4210/monitor.c **** VXISI2CWrite(0x8F,0x00);
ARM GAS  /tmp/ccwHfacM.s 			page 100


2513:VS4210/monitor.c **** VXISI2CWrite(0x90,0xCC);
2514:VS4210/monitor.c **** VXISI2CWrite(0x91,0x41);
2515:VS4210/monitor.c **** VXISI2CWrite(0x92,0xC4);
2516:VS4210/monitor.c **** VXISI2CWrite(0x93,0x84);
2517:VS4210/monitor.c **** VXISI2CWrite(0x94,0x98);
2518:VS4210/monitor.c **** VXISI2CWrite(0x95,0x80);
2519:VS4210/monitor.c **** VXISI2CWrite(0x96,0x65);
2520:VS4210/monitor.c **** VXISI2CWrite(0x97,0x70);
2521:VS4210/monitor.c **** VXISI2CWrite(0x98,0x29);
2522:VS4210/monitor.c **** VXISI2CWrite(0x99,0x90);
2523:VS4210/monitor.c **** VXISI2CWrite(0x9A,0x80);
2524:VS4210/monitor.c **** VXISI2CWrite(0x9B,0x04);
2525:VS4210/monitor.c **** VXISI2CWrite(0x9C,0x0A);
2526:VS4210/monitor.c **** VXISI2CWrite(0x9D,0x00);
2527:VS4210/monitor.c **** VXISI2CWrite(0x9E,0x04);
2528:VS4210/monitor.c **** VXISI2CWrite(0x9F,0x65);
2529:VS4210/monitor.c **** VXISI2CWrite(0xA0,0x80);
2530:VS4210/monitor.c **** VXISI2CWrite(0xA1,0xD8);
2531:VS4210/monitor.c **** VXISI2CWrite(0xA2,0x98);
2532:VS4210/monitor.c **** VXISI2CWrite(0xA3,0x87);
2533:VS4210/monitor.c **** VXISI2CWrite(0xA4,0x00);
2534:VS4210/monitor.c **** VXISI2CWrite(0xA5,0x80);
2535:VS4210/monitor.c **** VXISI2CWrite(0xA6,0x00);
2536:VS4210/monitor.c **** VXISI2CWrite(0xA7,0x70);
2537:VS4210/monitor.c **** VXISI2CWrite(0xA8,0x40);
2538:VS4210/monitor.c **** VXISI2CWrite(0xA9,0x1E);
2539:VS4210/monitor.c **** VXISI2CWrite(0xAA,0x2C);
2540:VS4210/monitor.c **** VXISI2CWrite(0xAB,0x00);
2541:VS4210/monitor.c **** VXISI2CWrite(0xAC,0x90);
2542:VS4210/monitor.c **** VXISI2CWrite(0xAD,0x65);
2543:VS4210/monitor.c **** VXISI2CWrite(0xAE,0x65);
2544:VS4210/monitor.c **** VXISI2CWrite(0xAF,0x99);
2545:VS4210/monitor.c **** VXISI2CWrite(0xB0,0x00);
2546:VS4210/monitor.c **** VXISI2CWrite(0xB1,0x00);
2547:VS4210/monitor.c **** VXISI2CWrite(0xB2,0x00);
2548:VS4210/monitor.c **** VXISI2CWrite(0xB3,0x00);
2549:VS4210/monitor.c **** VXISI2CWrite(0xB4,0x00);
2550:VS4210/monitor.c **** VXISI2CWrite(0xB5,0x00);
2551:VS4210/monitor.c **** VXISI2CWrite(0xB6,0x00);
2552:VS4210/monitor.c **** VXISI2CWrite(0xB7,0x00);
2553:VS4210/monitor.c **** VXISI2CWrite(0xB8,0x80);
2554:VS4210/monitor.c **** VXISI2CWrite(0xB9,0x00);
2555:VS4210/monitor.c **** VXISI2CWrite(0xBA,0x01);
2556:VS4210/monitor.c **** VXISI2CWrite(0xBB,0x00);
2557:VS4210/monitor.c **** VXISI2CWrite(0xBC,0x90);
2558:VS4210/monitor.c **** VXISI2CWrite(0xBD,0x01);
2559:VS4210/monitor.c **** VXISI2CWrite(0xBE,0x2C);
2560:VS4210/monitor.c **** VXISI2CWrite(0xBF,0x00);
2561:VS4210/monitor.c **** VXISI2CWrite(0xC0,0x00);
2562:VS4210/monitor.c **** VXISI2CWrite(0xC1,0x20);
2563:VS4210/monitor.c **** VXISI2CWrite(0xC2,0x20);
2564:VS4210/monitor.c **** VXISI2CWrite(0xC3,0x20);
2565:VS4210/monitor.c **** VXISI2CWrite(0xC4,0x20);
2566:VS4210/monitor.c **** VXISI2CWrite(0xC5,0x20);
2567:VS4210/monitor.c **** VXISI2CWrite(0xC6,0x00);
2568:VS4210/monitor.c **** VXISI2CWrite(0xC7,0x00);
2569:VS4210/monitor.c **** VXISI2CWrite(0xC8,0x00);
ARM GAS  /tmp/ccwHfacM.s 			page 101


2570:VS4210/monitor.c **** VXISI2CWrite(0xC9,0x00);
2571:VS4210/monitor.c **** VXISI2CWrite(0xCA,0x00);
2572:VS4210/monitor.c **** VXISI2CWrite(0xCB,0x00);
2573:VS4210/monitor.c **** VXISI2CWrite(0xCC,0x00);
2574:VS4210/monitor.c **** VXISI2CWrite(0xCD,0x00);
2575:VS4210/monitor.c **** VXISI2CWrite(0xCE,0x00);
2576:VS4210/monitor.c **** VXISI2CWrite(0xCF,0x00);
2577:VS4210/monitor.c **** VXISI2CWrite(0xD0,0xFF);
2578:VS4210/monitor.c **** VXISI2CWrite(0xD1,0x3F);
2579:VS4210/monitor.c **** VXISI2CWrite(0xD2,0xC2);
2580:VS4210/monitor.c **** VXISI2CWrite(0xD3,0x3F);
2581:VS4210/monitor.c **** VXISI2CWrite(0xD4,0x00);
2582:VS4210/monitor.c **** VXISI2CWrite(0xD5,0x00);
2583:VS4210/monitor.c **** VXISI2CWrite(0xD6,0x00);
2584:VS4210/monitor.c **** VXISI2CWrite(0xD7,0x0F);
2585:VS4210/monitor.c **** VXISI2CWrite(0xD8,0x00);
2586:VS4210/monitor.c **** VXISI2CWrite(0xD9,0x00);
2587:VS4210/monitor.c **** VXISI2CWrite(0xDA,0x00);
2588:VS4210/monitor.c **** VXISI2CWrite(0xDB,0x00);
2589:VS4210/monitor.c **** VXISI2CWrite(0xDC,0x77);
2590:VS4210/monitor.c **** VXISI2CWrite(0xDD,0x00);
2591:VS4210/monitor.c **** VXISI2CWrite(0xDE,0xB0);
2592:VS4210/monitor.c **** VXISI2CWrite(0xDF,0x00);
2593:VS4210/monitor.c **** VXISI2CWrite(0xE0,0x00);
2594:VS4210/monitor.c **** VXISI2CWrite(0xE1,0x00);
2595:VS4210/monitor.c **** VXISI2CWrite(0xE2,0x00);
2596:VS4210/monitor.c **** VXISI2CWrite(0xE3,0x47);
2597:VS4210/monitor.c **** VXISI2CWrite(0xE4,0x3C);
2598:VS4210/monitor.c **** VXISI2CWrite(0xE5,0x80);
2599:VS4210/monitor.c **** VXISI2CWrite(0xE6,0x00);
2600:VS4210/monitor.c **** VXISI2CWrite(0xE7,0x00);
2601:VS4210/monitor.c **** VXISI2CWrite(0xE8,0x00);
2602:VS4210/monitor.c **** VXISI2CWrite(0xE9,0x00);
2603:VS4210/monitor.c **** VXISI2CWrite(0xEA,0x00);
2604:VS4210/monitor.c **** VXISI2CWrite(0xEB,0x00);
2605:VS4210/monitor.c **** VXISI2CWrite(0xEC,0x88);
2606:VS4210/monitor.c **** VXISI2CWrite(0xED,0x00);
2607:VS4210/monitor.c **** VXISI2CWrite(0xEE,0x00);
2608:VS4210/monitor.c **** VXISI2CWrite(0xEF,0x00);
2609:VS4210/monitor.c **** VXISI2CWrite(0xF0,0x30);
2610:VS4210/monitor.c **** VXISI2CWrite(0xF1,0x43);
2611:VS4210/monitor.c **** VXISI2CWrite(0xF2,0x1F);
2612:VS4210/monitor.c **** VXISI2CWrite(0xF3,0x1F);
2613:VS4210/monitor.c **** VXISI2CWrite(0xF4,0x22);
2614:VS4210/monitor.c **** VXISI2CWrite(0xF5,0x73);
2615:VS4210/monitor.c **** VXISI2CWrite(0xF6,0x53);
2616:VS4210/monitor.c **** VXISI2CWrite(0xF7,0x80);
2617:VS4210/monitor.c **** VXISI2CWrite(0xF8,0x01);
2618:VS4210/monitor.c **** VXISI2CWrite(0xF9,0x01);
2619:VS4210/monitor.c **** VXISI2CWrite(0xFA,0x00);
2620:VS4210/monitor.c **** VXISI2CWrite(0xFB,0x00);
2621:VS4210/monitor.c **** VXISI2CWrite(0xFC,0x00);
2622:VS4210/monitor.c **** VXISI2CWrite(0xFD,0x70);
2623:VS4210/monitor.c **** VXISI2CWrite(0xFE,0x18);
2624:VS4210/monitor.c **** VXISI2CWrite(0xFF,0x07);
2625:VS4210/monitor.c **** 
2626:VS4210/monitor.c **** #else
ARM GAS  /tmp/ccwHfacM.s 			page 102


2627:VS4210/monitor.c **** #if 1
2628:VS4210/monitor.c **** /*
2629:VS4210/monitor.c **** 	VXISI2CWrite(0x08,0x40);
2630:VS4210/monitor.c **** 	
2631:VS4210/monitor.c **** 	VXISI2CWrite(0x0A,0x40);
2632:VS4210/monitor.c **** 	
2633:VS4210/monitor.c **** 	VXISI2CWrite(0x10,0x80);
2634:VS4210/monitor.c **** 	
2635:VS4210/monitor.c **** 	VXISI2CWrite(0x12,0x74);
2636:VS4210/monitor.c **** 	VXISI2CWrite(0x13,0x80);
2637:VS4210/monitor.c **** 	VXISI2CWrite(0x14,0x38);
2638:VS4210/monitor.c **** 	
2639:VS4210/monitor.c **** 	VXISI2CWrite(0x19,0x00);
2640:VS4210/monitor.c **** */
2641:VS4210/monitor.c **** 
2642:VS4210/monitor.c **** 	VXISI2CWrite(0x1A,0x20);
2643:VS4210/monitor.c **** /*
2644:VS4210/monitor.c **** 	VXISI2CWrite(0x1B,0x30);
2645:VS4210/monitor.c **** 	
2646:VS4210/monitor.c **** 	VXISI2CWrite(0x1F,0xA4);
2647:VS4210/monitor.c **** 	VXISI2CWrite(0x20,0x50);
2648:VS4210/monitor.c **** 	VXISI2CWrite(0x21,0xE2);
2649:VS4210/monitor.c **** 	VXISI2CWrite(0x22,0x87);
2650:VS4210/monitor.c **** 	VXISI2CWrite(0x23,0x98);
2651:VS4210/monitor.c **** 	VXISI2CWrite(0x24,0x80);
2652:VS4210/monitor.c **** 	VXISI2CWrite(0x25,0x44);
2653:VS4210/monitor.c **** 	
2654:VS4210/monitor.c **** 	VXISI2CWrite(0x27,0x38);
2655:VS4210/monitor.c **** 	
2656:VS4210/monitor.c **** 	VXISI2CWrite(0x2E,0x47);
2657:VS4210/monitor.c **** 	VXISI2CWrite(0x2F,0x80);
2658:VS4210/monitor.c **** 	
2659:VS4210/monitor.c **** 	VXISI2CWrite(0x3A,0x1D);
2660:VS4210/monitor.c **** 	
2661:VS4210/monitor.c **** 	VXISI2CWrite(0x45,0x00);
2662:VS4210/monitor.c **** 
2663:VS4210/monitor.c **** 	VXISI2CWrite(0x58,0x00);
2664:VS4210/monitor.c **** 	
2665:VS4210/monitor.c **** 	VXISI2CWrite(0x69,0x88);
2666:VS4210/monitor.c **** */	
2667:VS4210/monitor.c **** 	VXISI2CWrite(0x74,0x06);
2668:VS4210/monitor.c **** 
2669:VS4210/monitor.c **** 	VXISI2CWrite(0x80,0x01);
2670:VS4210/monitor.c **** 	VXISI2CWrite(0x81,0x15);
2671:VS4210/monitor.c **** 	
2672:VS4210/monitor.c **** 	VXISI2CWrite(0x83,0x2D);
2673:VS4210/monitor.c **** 	
2674:VS4210/monitor.c **** 	VXISI2CWrite(0x86,0x00);
2675:VS4210/monitor.c **** 	VXISI2CWrite(0x87,0x00);
2676:VS4210/monitor.c **** 	VXISI2CWrite(0x88,0x00);
2677:VS4210/monitor.c **** 	VXISI2CWrite(0x89,0x00);
2678:VS4210/monitor.c **** 	
2679:VS4210/monitor.c **** 	VXISI2CWrite(0x8D,0x17);
2680:VS4210/monitor.c **** /*
2681:VS4210/monitor.c **** 	VXISI2CWrite(0x9A,0x80);
2682:VS4210/monitor.c **** 	
2683:VS4210/monitor.c **** 	
ARM GAS  /tmp/ccwHfacM.s 			page 103


2684:VS4210/monitor.c **** 	VXISI2CWrite(0xB8,0x80);
2685:VS4210/monitor.c **** 
2686:VS4210/monitor.c **** 	VXISI2CWrite(0xBA,0x01);
2687:VS4210/monitor.c **** 	
2688:VS4210/monitor.c **** 	VXISI2CWrite(0xBE,0x2C);
2689:VS4210/monitor.c **** 	
2690:VS4210/monitor.c **** 	VXISI2CWrite(0xD7,0x0F);
2691:VS4210/monitor.c **** 	
2692:VS4210/monitor.c **** 	VXISI2CWrite(0xDE,0xB0);
2693:VS4210/monitor.c **** 	
2694:VS4210/monitor.c **** 	VXISI2CWrite(0xF0,0x30);
2695:VS4210/monitor.c **** 	
2696:VS4210/monitor.c **** 	VXISI2CWrite(0xFD,0x70);
2697:VS4210/monitor.c **** 	VXISI2CWrite(0xFE,0x18);
2698:VS4210/monitor.c **** 	VXISI2CWrite(0xFF,0x07);
2699:VS4210/monitor.c **** */
2700:VS4210/monitor.c **** 
2701:VS4210/monitor.c **** 
2702:VS4210/monitor.c **** #else
2703:VS4210/monitor.c **** 	VXISI2CWrite(0x08,0x40);
2704:VS4210/monitor.c **** 	
2705:VS4210/monitor.c **** 	VXISI2CWrite(0x0A,0x40);
2706:VS4210/monitor.c **** 	
2707:VS4210/monitor.c **** 	VXISI2CWrite(0x10,0x80);
2708:VS4210/monitor.c **** 	
2709:VS4210/monitor.c **** 	VXISI2CWrite(0x12,0x74);
2710:VS4210/monitor.c **** 	VXISI2CWrite(0x13,0x80);
2711:VS4210/monitor.c **** 	VXISI2CWrite(0x14,0x38);
2712:VS4210/monitor.c **** 	
2713:VS4210/monitor.c **** 	VXISI2CWrite(0x19,0x00);
2714:VS4210/monitor.c **** 	VXISI2CWrite(0x1A,0x20);
2715:VS4210/monitor.c **** 	VXISI2CWrite(0x1B,0x30);
2716:VS4210/monitor.c **** 	
2717:VS4210/monitor.c **** 	VXISI2CWrite(0x1F,0xA4);
2718:VS4210/monitor.c **** 	VXISI2CWrite(0x20,0x50);
2719:VS4210/monitor.c **** 	VXISI2CWrite(0x21,0xE2);
2720:VS4210/monitor.c **** 	VXISI2CWrite(0x22,0x87);
2721:VS4210/monitor.c **** 	VXISI2CWrite(0x23,0x98);
2722:VS4210/monitor.c **** 	VXISI2CWrite(0x24,0x80);
2723:VS4210/monitor.c **** 	VXISI2CWrite(0x25,0x44);
2724:VS4210/monitor.c **** 	
2725:VS4210/monitor.c **** 	VXISI2CWrite(0x27,0x38);
2726:VS4210/monitor.c **** 	
2727:VS4210/monitor.c **** //	VXISI2CWrite(0x2E,0x47);
2728:VS4210/monitor.c **** //	VXISI2CWrite(0x2F,0x80);
2729:VS4210/monitor.c **** 	
2730:VS4210/monitor.c **** //	VXISI2CWrite(0x3A,0x1D);
2731:VS4210/monitor.c **** 	
2732:VS4210/monitor.c **** //	VXISI2CWrite(0x45,0x00);
2733:VS4210/monitor.c **** 	
2734:VS4210/monitor.c **** //	VXISI2CWrite(0x58,0x00);
2735:VS4210/monitor.c **** 	
2736:VS4210/monitor.c **** //	VXISI2CWrite(0x69,0x88);
2737:VS4210/monitor.c **** 	
2738:VS4210/monitor.c **** 	VXISI2CWrite(0x74,0x06);
2739:VS4210/monitor.c **** 
2740:VS4210/monitor.c **** 	VXISI2CWrite(0x80,0x01);
ARM GAS  /tmp/ccwHfacM.s 			page 104


2741:VS4210/monitor.c **** 	VXISI2CWrite(0x81,0x15);
2742:VS4210/monitor.c **** 	
2743:VS4210/monitor.c **** 	VXISI2CWrite(0x83,0x2D);
2744:VS4210/monitor.c **** 	
2745:VS4210/monitor.c **** //	VXISI2CWrite(0x86,0x00);
2746:VS4210/monitor.c **** //	VXISI2CWrite(0x87,0x00);
2747:VS4210/monitor.c **** //	VXISI2CWrite(0x88,0x00);
2748:VS4210/monitor.c **** //	VXISI2CWrite(0x89,0x00);
2749:VS4210/monitor.c **** 	
2750:VS4210/monitor.c **** 	VXISI2CWrite(0x8D,0x17);
2751:VS4210/monitor.c **** 
2752:VS4210/monitor.c **** //	VXISI2CWrite(0x9A,0x80);
2753:VS4210/monitor.c **** 	
2754:VS4210/monitor.c **** 	
2755:VS4210/monitor.c **** //	VXISI2CWrite(0xB8,0x80);
2756:VS4210/monitor.c **** 	/*
2757:VS4210/monitor.c **** 	VXISI2CWrite(0xBA,0x01);
2758:VS4210/monitor.c **** 	
2759:VS4210/monitor.c **** 	VXISI2CWrite(0xBE,0x2C);
2760:VS4210/monitor.c **** 	
2761:VS4210/monitor.c **** 	VXISI2CWrite(0xD7,0x0F);
2762:VS4210/monitor.c **** 	
2763:VS4210/monitor.c **** 	VXISI2CWrite(0xDE,0xB0);
2764:VS4210/monitor.c **** 	
2765:VS4210/monitor.c **** 	VXISI2CWrite(0xF0,0x30);
2766:VS4210/monitor.c **** 	
2767:VS4210/monitor.c **** 	VXISI2CWrite(0xFD,0x70);
2768:VS4210/monitor.c **** 	VXISI2CWrite(0xFE,0x18);
2769:VS4210/monitor.c **** 	VXISI2CWrite(0xFF,0x07);
2770:VS4210/monitor.c **** */
2771:VS4210/monitor.c ****  #endif
2772:VS4210/monitor.c **** #endif	
2773:VS4210/monitor.c **** 
2774:VS4210/monitor.c **** 
2775:VS4210/monitor.c **** }
 3079              		.loc 1 2775 0
 3080 0008 08BD     		pop	{r3, pc}
 3081              	.L151:
 3082 000a 00BF     		.align	2
 3083              	.L150:
 3084 000c 00000000 		.word	.LC21
 3085              		.cfi_endproc
 3086              	.LFE95:
 3088              		.section	.text.Monitor,"ax",%progbits
 3089              		.align	1
 3090              		.global	Monitor
 3091              		.syntax unified
 3092              		.thumb
 3093              		.thumb_func
 3094              		.fpu softvfp
 3096              	Monitor:
 3097              	.LFB92:
 829:VS4210/monitor.c **** 
 3098              		.loc 1 829 0
 3099              		.cfi_startproc
 3100              		@ args = 0, pretend = 0, frame = 0
 3101              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccwHfacM.s 			page 105


 3102 0000 70B5     		push	{r4, r5, r6, lr}
 3103              	.LCFI21:
 3104              		.cfi_def_cfa_offset 16
 3105              		.cfi_offset 4, -16
 3106              		.cfi_offset 5, -12
 3107              		.cfi_offset 6, -8
 3108              		.cfi_offset 14, -4
 833:VS4210/monitor.c **** 
 3109              		.loc 1 833 0
 3110 0002 FFF7FEFF 		bl	MonGetCommand
 3111              	.LVL404:
 3112 0006 00B9     		cbnz	r0, .L217
 3113              	.L152:
1966:VS4210/monitor.c **** #endif
 3114              		.loc 1 1966 0
 3115 0008 70BD     		pop	{r4, r5, r6, pc}
 3116              	.L217:
 850:VS4210/monitor.c **** 
 3117              		.loc 1 850 0
 3118 000a BA4B     		ldr	r3, .L234
 3119 000c 1C68     		ldr	r4, [r3]
 3120 000e BA49     		ldr	r1, .L234+4
 3121 0010 2046     		mov	r0, r4
 3122 0012 FFF7FEFF 		bl	stricmp
 3123              	.LVL405:
 3124 0016 0028     		cmp	r0, #0
 3125 0018 40F0D280 		bne	.L154
 859:VS4210/monitor.c **** 	{
 3126              		.loc 1 859 0
 3127 001c B74B     		ldr	r3, .L234+8
 3128 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3129 0020 A02B     		cmp	r3, #160
 3130 0022 0CD0     		beq	.L218
 868:VS4210/monitor.c **** {
 3131              		.loc 1 868 0
 3132 0024 402B     		cmp	r3, #64
 3133 0026 30D0     		beq	.L219
 876:VS4210/monitor.c **** {
 3134              		.loc 1 876 0
 3135 0028 122B     		cmp	r3, #18
 3136 002a 54D0     		beq	.L220
 903:VS4210/monitor.c **** 	{
 3137              		.loc 1 903 0
 3138 002c 882B     		cmp	r3, #136
 3139 002e 78D0     		beq	.L221
 912:VS4210/monitor.c **** 	{
 3140              		.loc 1 912 0
 3141 0030 902B     		cmp	r3, #144
 3142 0032 00F09C80 		beq	.L222
 923:VS4210/monitor.c **** 
 3143              		.loc 1 923 0
 3144 0036 B248     		ldr	r0, .L234+12
 3145 0038 FFF7FEFF 		bl	Printf
 3146              	.LVL406:
 3147 003c C5E0     		b	.L156
 3148              	.L218:
 861:VS4210/monitor.c **** 	   //tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2])); 	
ARM GAS  /tmp/ccwHfacM.s 			page 106


 3149              		.loc 1 861 0
 3150 003e AD4C     		ldr	r4, .L234
 3151 0040 6068     		ldr	r0, [r4, #4]
 3152 0042 FFF7FEFF 		bl	Asc2Bin
 3153              	.LVL407:
 3154 0046 0546     		mov	r5, r0
 3155 0048 A068     		ldr	r0, [r4, #8]
 3156 004a FFF7FEFF 		bl	Asc2Bin
 3157              	.LVL408:
 3158 004e 0146     		mov	r1, r0
 3159 0050 2846     		mov	r0, r5
 3160 0052 FFF7FEFF 		bl	WriteEEP
 3161              	.LVL409:
 863:VS4210/monitor.c **** 		MonIndex=Asc2Bin(argv[1]);
 3162              		.loc 1 863 0
 3163 0056 6068     		ldr	r0, [r4, #4]
 3164 0058 FFF7FEFF 		bl	Asc2Bin
 3165              	.LVL410:
 3166 005c FFF7FEFF 		bl	ReadEEP
 3167              	.LVL411:
 3168 0060 0646     		mov	r6, r0
 3169              	.LVL412:
 864:VS4210/monitor.c **** 		MonWdata=Asc2Bin(argv[2]);
 3170              		.loc 1 864 0
 3171 0062 6568     		ldr	r5, [r4, #4]
 3172 0064 2846     		mov	r0, r5
 3173 0066 FFF7FEFF 		bl	Asc2Bin
 3174              	.LVL413:
 3175 006a A64B     		ldr	r3, .L234+16
 3176 006c 1870     		strb	r0, [r3]
 865:VS4210/monitor.c **** 	  Printf("\r\nEEPROM Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3177              		.loc 1 865 0
 3178 006e A068     		ldr	r0, [r4, #8]
 3179 0070 FFF7FEFF 		bl	Asc2Bin
 3180              	.LVL414:
 3181 0074 A44B     		ldr	r3, .L234+20
 3182 0076 1870     		strb	r0, [r3]
 866:VS4210/monitor.c **** 	}
 3183              		.loc 1 866 0
 3184 0078 2846     		mov	r0, r5
 3185 007a FFF7FEFF 		bl	Asc2Bin
 3186              	.LVL415:
 3187 007e 3246     		mov	r2, r6
 3188 0080 0146     		mov	r1, r0
 3189 0082 A248     		ldr	r0, .L234+24
 3190 0084 FFF7FEFF 		bl	Printf
 3191              	.LVL416:
 3192 0088 9FE0     		b	.L156
 3193              	.LVL417:
 3194              	.L219:
 870:VS4210/monitor.c **** 	 ret= VXISI2CRead(Asc2Bin(argv[1]));	
 3195              		.loc 1 870 0
 3196 008a 9A4C     		ldr	r4, .L234
 3197 008c 6068     		ldr	r0, [r4, #4]
 3198 008e FFF7FEFF 		bl	Asc2Bin
 3199              	.LVL418:
 3200 0092 0546     		mov	r5, r0
ARM GAS  /tmp/ccwHfacM.s 			page 107


 3201 0094 A068     		ldr	r0, [r4, #8]
 3202 0096 FFF7FEFF 		bl	Asc2Bin
 3203              	.LVL419:
 3204 009a 0146     		mov	r1, r0
 3205 009c 2846     		mov	r0, r5
 3206 009e FFF7FEFF 		bl	VXISI2CWrite
 3207              	.LVL420:
 871:VS4210/monitor.c **** 	 MonIndex=Asc2Bin(argv[1]);
 3208              		.loc 1 871 0
 3209 00a2 6068     		ldr	r0, [r4, #4]
 3210 00a4 FFF7FEFF 		bl	Asc2Bin
 3211              	.LVL421:
 3212 00a8 FFF7FEFF 		bl	VXISI2CRead
 3213              	.LVL422:
 3214 00ac 0646     		mov	r6, r0
 3215              	.LVL423:
 872:VS4210/monitor.c **** 	 MonWdata=Asc2Bin(argv[2]); 
 3216              		.loc 1 872 0
 3217 00ae 6568     		ldr	r5, [r4, #4]
 3218 00b0 2846     		mov	r0, r5
 3219 00b2 FFF7FEFF 		bl	Asc2Bin
 3220              	.LVL424:
 3221 00b6 934B     		ldr	r3, .L234+16
 3222 00b8 1870     		strb	r0, [r3]
 873:VS4210/monitor.c **** 	   Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3223              		.loc 1 873 0
 3224 00ba A068     		ldr	r0, [r4, #8]
 3225 00bc FFF7FEFF 		bl	Asc2Bin
 3226              	.LVL425:
 3227 00c0 914B     		ldr	r3, .L234+20
 3228 00c2 1870     		strb	r0, [r3]
 874:VS4210/monitor.c **** }
 3229              		.loc 1 874 0
 3230 00c4 2846     		mov	r0, r5
 3231 00c6 FFF7FEFF 		bl	Asc2Bin
 3232              	.LVL426:
 3233 00ca 3246     		mov	r2, r6
 3234 00cc 0146     		mov	r1, r0
 3235 00ce 9048     		ldr	r0, .L234+28
 3236 00d0 FFF7FEFF 		bl	Printf
 3237              	.LVL427:
 3238 00d4 79E0     		b	.L156
 3239              	.LVL428:
 3240              	.L220:
 878:VS4210/monitor.c **** 	 ret= VS8812Read(Asc2Bin(argv[1]));	
 3241              		.loc 1 878 0
 3242 00d6 874C     		ldr	r4, .L234
 3243 00d8 6068     		ldr	r0, [r4, #4]
 3244 00da FFF7FEFF 		bl	Asc2Bin
 3245              	.LVL429:
 3246 00de 0546     		mov	r5, r0
 3247 00e0 A068     		ldr	r0, [r4, #8]
 3248 00e2 FFF7FEFF 		bl	Asc2Bin
 3249              	.LVL430:
 3250 00e6 0146     		mov	r1, r0
 3251 00e8 2846     		mov	r0, r5
 3252 00ea FFF7FEFF 		bl	VS8812Write
ARM GAS  /tmp/ccwHfacM.s 			page 108


 3253              	.LVL431:
 879:VS4210/monitor.c **** 	 MonIndex=Asc2Bin(argv[1]);
 3254              		.loc 1 879 0
 3255 00ee 6068     		ldr	r0, [r4, #4]
 3256 00f0 FFF7FEFF 		bl	Asc2Bin
 3257              	.LVL432:
 3258 00f4 FFF7FEFF 		bl	VS8812Read
 3259              	.LVL433:
 3260 00f8 0646     		mov	r6, r0
 3261              	.LVL434:
 880:VS4210/monitor.c **** 	 MonWdata=Asc2Bin(argv[2]); 
 3262              		.loc 1 880 0
 3263 00fa 6568     		ldr	r5, [r4, #4]
 3264 00fc 2846     		mov	r0, r5
 3265 00fe FFF7FEFF 		bl	Asc2Bin
 3266              	.LVL435:
 3267 0102 804B     		ldr	r3, .L234+16
 3268 0104 1870     		strb	r0, [r3]
 881:VS4210/monitor.c **** 	   Printf("\r\nVS8812 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3269              		.loc 1 881 0
 3270 0106 A068     		ldr	r0, [r4, #8]
 3271 0108 FFF7FEFF 		bl	Asc2Bin
 3272              	.LVL436:
 3273 010c 7E4B     		ldr	r3, .L234+20
 3274 010e 1870     		strb	r0, [r3]
 882:VS4210/monitor.c **** }
 3275              		.loc 1 882 0
 3276 0110 2846     		mov	r0, r5
 3277 0112 FFF7FEFF 		bl	Asc2Bin
 3278              	.LVL437:
 3279 0116 3246     		mov	r2, r6
 3280 0118 0146     		mov	r1, r0
 3281 011a 7E48     		ldr	r0, .L234+32
 3282 011c FFF7FEFF 		bl	Printf
 3283              	.LVL438:
 3284 0120 53E0     		b	.L156
 3285              	.LVL439:
 3286              	.L221:
 905:VS4210/monitor.c **** 	ret= tp28xx_byte_read(Asc2Bin(argv[1]));	
 3287              		.loc 1 905 0
 3288 0122 744C     		ldr	r4, .L234
 3289 0124 6068     		ldr	r0, [r4, #4]
 3290 0126 FFF7FEFF 		bl	Asc2Bin
 3291              	.LVL440:
 3292 012a 0546     		mov	r5, r0
 3293 012c A068     		ldr	r0, [r4, #8]
 3294 012e FFF7FEFF 		bl	Asc2Bin
 3295              	.LVL441:
 3296 0132 0146     		mov	r1, r0
 3297 0134 2846     		mov	r0, r5
 3298 0136 FFF7FEFF 		bl	tp28xx_byte_write
 3299              	.LVL442:
 906:VS4210/monitor.c **** 	MonIndex=Asc2Bin(argv[1]);
 3300              		.loc 1 906 0
 3301 013a 6068     		ldr	r0, [r4, #4]
 3302 013c FFF7FEFF 		bl	Asc2Bin
 3303              	.LVL443:
ARM GAS  /tmp/ccwHfacM.s 			page 109


 3304 0140 FFF7FEFF 		bl	tp28xx_byte_read
 3305              	.LVL444:
 3306 0144 0646     		mov	r6, r0
 3307              	.LVL445:
 907:VS4210/monitor.c **** 	MonWdata=Asc2Bin(argv[2]);
 3308              		.loc 1 907 0
 3309 0146 6568     		ldr	r5, [r4, #4]
 3310 0148 2846     		mov	r0, r5
 3311 014a FFF7FEFF 		bl	Asc2Bin
 3312              	.LVL446:
 3313 014e 6D4B     		ldr	r3, .L234+16
 3314 0150 1870     		strb	r0, [r3]
 908:VS4210/monitor.c **** 	 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3315              		.loc 1 908 0
 3316 0152 A068     		ldr	r0, [r4, #8]
 3317 0154 FFF7FEFF 		bl	Asc2Bin
 3318              	.LVL447:
 3319 0158 6B4B     		ldr	r3, .L234+20
 3320 015a 1870     		strb	r0, [r3]
 909:VS4210/monitor.c **** 	}
 3321              		.loc 1 909 0
 3322 015c 2846     		mov	r0, r5
 3323 015e FFF7FEFF 		bl	Asc2Bin
 3324              	.LVL448:
 3325 0162 3246     		mov	r2, r6
 3326 0164 0146     		mov	r1, r0
 3327 0166 6C48     		ldr	r0, .L234+36
 3328 0168 FFF7FEFF 		bl	Printf
 3329              	.LVL449:
 3330 016c 2DE0     		b	.L156
 3331              	.LVL450:
 3332              	.L222:
 914:VS4210/monitor.c **** 	HDMIRX_WriteI2C_Byte( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );	
 3333              		.loc 1 914 0
 3334 016e 6B4B     		ldr	r3, .L234+40
 3335 0170 0022     		movs	r2, #0
 3336 0172 1A70     		strb	r2, [r3]
 915:VS4210/monitor.c **** 	ret= HDMIRX_ReadI2C_Byte(Asc2Bin(argv[1]));		
 3337              		.loc 1 915 0
 3338 0174 5F4C     		ldr	r4, .L234
 3339 0176 6068     		ldr	r0, [r4, #4]
 3340 0178 FFF7FEFF 		bl	Asc2Bin
 3341              	.LVL451:
 3342 017c 0546     		mov	r5, r0
 3343 017e A068     		ldr	r0, [r4, #8]
 3344 0180 FFF7FEFF 		bl	Asc2Bin
 3345              	.LVL452:
 3346 0184 0146     		mov	r1, r0
 3347 0186 2846     		mov	r0, r5
 3348 0188 FFF7FEFF 		bl	HDMIRX_WriteI2C_Byte
 3349              	.LVL453:
 916:VS4210/monitor.c **** 	MonIndex=Asc2Bin(argv[1]);
 3350              		.loc 1 916 0
 3351 018c 6068     		ldr	r0, [r4, #4]
 3352 018e FFF7FEFF 		bl	Asc2Bin
 3353              	.LVL454:
 3354 0192 FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
ARM GAS  /tmp/ccwHfacM.s 			page 110


 3355              	.LVL455:
 3356 0196 0646     		mov	r6, r0
 3357              	.LVL456:
 917:VS4210/monitor.c **** 	MonWdata=Asc2Bin(argv[2]);
 3358              		.loc 1 917 0
 3359 0198 6568     		ldr	r5, [r4, #4]
 3360 019a 2846     		mov	r0, r5
 3361 019c FFF7FEFF 		bl	Asc2Bin
 3362              	.LVL457:
 3363 01a0 584B     		ldr	r3, .L234+16
 3364 01a2 1870     		strb	r0, [r3]
 918:VS4210/monitor.c **** 	 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3365              		.loc 1 918 0
 3366 01a4 A068     		ldr	r0, [r4, #8]
 3367 01a6 FFF7FEFF 		bl	Asc2Bin
 3368              	.LVL458:
 3369 01aa 574B     		ldr	r3, .L234+20
 3370 01ac 1870     		strb	r0, [r3]
 919:VS4210/monitor.c **** 	}
 3371              		.loc 1 919 0
 3372 01ae 2846     		mov	r0, r5
 3373 01b0 FFF7FEFF 		bl	Asc2Bin
 3374              	.LVL459:
 3375 01b4 3246     		mov	r2, r6
 3376 01b6 0146     		mov	r1, r0
 3377 01b8 5948     		ldr	r0, .L234+44
 3378 01ba FFF7FEFF 		bl	Printf
 3379              	.LVL460:
 3380 01be 04E0     		b	.L156
 3381              	.LVL461:
 3382              	.L154:
 946:VS4210/monitor.c **** 		indirect=0;
 3383              		.loc 1 946 0
 3384 01c0 5849     		ldr	r1, .L234+48
 3385 01c2 2046     		mov	r0, r4
 3386 01c4 FFF7FEFF 		bl	stricmp
 3387              	.LVL462:
 3388 01c8 10B9     		cbnz	r0, .L223
 3389              	.L156:
1963:VS4210/monitor.c **** 
 3390              		.loc 1 1963 0
 3391 01ca FFF7FEFF 		bl	Prompt
 3392              	.LVL463:
 3393 01ce 1BE7     		b	.L152
 3394              	.L223:
 961:VS4210/monitor.c **** 		//MonReadI2C();
 3395              		.loc 1 961 0
 3396 01d0 5549     		ldr	r1, .L234+52
 3397 01d2 2046     		mov	r0, r4
 3398 01d4 FFF7FEFF 		bl	stricmp
 3399              	.LVL464:
 3400 01d8 0028     		cmp	r0, #0
 3401 01da 40F0AD80 		bne	.L161
 969:VS4210/monitor.c **** 		{
 3402              		.loc 1 969 0
 3403 01de 474B     		ldr	r3, .L234+8
 3404 01e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccwHfacM.s 			page 111


 3405 01e2 A02B     		cmp	r3, #160
 3406 01e4 0BD0     		beq	.L224
 976:VS4210/monitor.c **** 		{
 3407              		.loc 1 976 0
 3408 01e6 402B     		cmp	r3, #64
 3409 01e8 21D0     		beq	.L225
 983:VS4210/monitor.c **** 		{
 3410              		.loc 1 983 0
 3411 01ea 122B     		cmp	r3, #18
 3412 01ec 37D0     		beq	.L226
1002:VS4210/monitor.c **** 		{	
 3413              		.loc 1 1002 0
 3414 01ee 882B     		cmp	r3, #136
 3415 01f0 4DD0     		beq	.L227
1009:VS4210/monitor.c **** 			{
 3416              		.loc 1 1009 0
 3417 01f2 902B     		cmp	r3, #144
 3418 01f4 63D0     		beq	.L228
1019:VS4210/monitor.c **** 		}
 3419              		.loc 1 1019 0
 3420 01f6 4248     		ldr	r0, .L234+12
 3421 01f8 FFF7FEFF 		bl	Printf
 3422              	.LVL465:
 3423 01fc E5E7     		b	.L156
 3424              	.L224:
 971:VS4210/monitor.c **** 		   MonIndex=Asc2Bin(argv[1]);
 3425              		.loc 1 971 0
 3426 01fe 3D4D     		ldr	r5, .L234
 3427 0200 6868     		ldr	r0, [r5, #4]
 3428 0202 FFF7FEFF 		bl	Asc2Bin
 3429              	.LVL466:
 3430 0206 FFF7FEFF 		bl	ReadEEP
 3431              	.LVL467:
 3432 020a 0446     		mov	r4, r0
 3433              	.LVL468:
 972:VS4210/monitor.c **** 		   MonWdata=ret;
 3434              		.loc 1 972 0
 3435 020c 6D68     		ldr	r5, [r5, #4]
 3436 020e 2846     		mov	r0, r5
 3437 0210 FFF7FEFF 		bl	Asc2Bin
 3438              	.LVL469:
 3439 0214 3B4B     		ldr	r3, .L234+16
 3440 0216 1870     		strb	r0, [r3]
 973:VS4210/monitor.c **** 		Printf("\r\nEEPROM  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3441              		.loc 1 973 0
 3442 0218 3B4B     		ldr	r3, .L234+20
 3443 021a 1C70     		strb	r4, [r3]
 974:VS4210/monitor.c **** 		}
 3444              		.loc 1 974 0
 3445 021c 2846     		mov	r0, r5
 3446 021e FFF7FEFF 		bl	Asc2Bin
 3447              	.LVL470:
 3448 0222 2246     		mov	r2, r4
 3449 0224 0146     		mov	r1, r0
 3450 0226 4148     		ldr	r0, .L234+56
 3451 0228 FFF7FEFF 		bl	Printf
 3452              	.LVL471:
ARM GAS  /tmp/ccwHfacM.s 			page 112


 3453 022c CDE7     		b	.L156
 3454              	.LVL472:
 3455              	.L225:
 978:VS4210/monitor.c **** 		 MonIndex=Asc2Bin(argv[1]);
 3456              		.loc 1 978 0
 3457 022e 314D     		ldr	r5, .L234
 3458 0230 6868     		ldr	r0, [r5, #4]
 3459 0232 FFF7FEFF 		bl	Asc2Bin
 3460              	.LVL473:
 3461 0236 FFF7FEFF 		bl	VXISI2CRead
 3462              	.LVL474:
 3463 023a 0446     		mov	r4, r0
 3464              	.LVL475:
 979:VS4210/monitor.c **** 		 MonWdata=ret;
 3465              		.loc 1 979 0
 3466 023c 6D68     		ldr	r5, [r5, #4]
 3467 023e 2846     		mov	r0, r5
 3468 0240 FFF7FEFF 		bl	Asc2Bin
 3469              	.LVL476:
 3470 0244 2F4B     		ldr	r3, .L234+16
 3471 0246 1870     		strb	r0, [r3]
 980:VS4210/monitor.c **** 		 Printf("\r\nVS4210  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3472              		.loc 1 980 0
 3473 0248 2F4B     		ldr	r3, .L234+20
 3474 024a 1C70     		strb	r4, [r3]
 981:VS4210/monitor.c **** 		}
 3475              		.loc 1 981 0
 3476 024c 2846     		mov	r0, r5
 3477 024e FFF7FEFF 		bl	Asc2Bin
 3478              	.LVL477:
 3479 0252 2246     		mov	r2, r4
 3480 0254 0146     		mov	r1, r0
 3481 0256 3648     		ldr	r0, .L234+60
 3482 0258 FFF7FEFF 		bl	Printf
 3483              	.LVL478:
 3484 025c B5E7     		b	.L156
 3485              	.LVL479:
 3486              	.L226:
 985:VS4210/monitor.c **** 		 MonIndex=Asc2Bin(argv[1]);
 3487              		.loc 1 985 0
 3488 025e 254D     		ldr	r5, .L234
 3489 0260 6868     		ldr	r0, [r5, #4]
 3490 0262 FFF7FEFF 		bl	Asc2Bin
 3491              	.LVL480:
 3492 0266 FFF7FEFF 		bl	VS8812Read
 3493              	.LVL481:
 3494 026a 0446     		mov	r4, r0
 3495              	.LVL482:
 986:VS4210/monitor.c **** 		 MonWdata=ret;
 3496              		.loc 1 986 0
 3497 026c 6D68     		ldr	r5, [r5, #4]
 3498 026e 2846     		mov	r0, r5
 3499 0270 FFF7FEFF 		bl	Asc2Bin
 3500              	.LVL483:
 3501 0274 234B     		ldr	r3, .L234+16
 3502 0276 1870     		strb	r0, [r3]
 987:VS4210/monitor.c **** 		 Printf("\r\nVS8812  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
ARM GAS  /tmp/ccwHfacM.s 			page 113


 3503              		.loc 1 987 0
 3504 0278 234B     		ldr	r3, .L234+20
 3505 027a 1C70     		strb	r4, [r3]
 988:VS4210/monitor.c **** 		}
 3506              		.loc 1 988 0
 3507 027c 2846     		mov	r0, r5
 3508 027e FFF7FEFF 		bl	Asc2Bin
 3509              	.LVL484:
 3510 0282 2246     		mov	r2, r4
 3511 0284 0146     		mov	r1, r0
 3512 0286 2B48     		ldr	r0, .L234+64
 3513 0288 FFF7FEFF 		bl	Printf
 3514              	.LVL485:
 3515 028c 9DE7     		b	.L156
 3516              	.LVL486:
 3517              	.L227:
1004:VS4210/monitor.c **** 		MonIndex=Asc2Bin(argv[1]);
 3518              		.loc 1 1004 0
 3519 028e 194D     		ldr	r5, .L234
 3520 0290 6868     		ldr	r0, [r5, #4]
 3521 0292 FFF7FEFF 		bl	Asc2Bin
 3522              	.LVL487:
 3523 0296 FFF7FEFF 		bl	tp28xx_byte_read
 3524              	.LVL488:
 3525 029a 0446     		mov	r4, r0
 3526              	.LVL489:
1005:VS4210/monitor.c **** 		MonWdata=ret;
 3527              		.loc 1 1005 0
 3528 029c 6D68     		ldr	r5, [r5, #4]
 3529 029e 2846     		mov	r0, r5
 3530 02a0 FFF7FEFF 		bl	Asc2Bin
 3531              	.LVL490:
 3532 02a4 174B     		ldr	r3, .L234+16
 3533 02a6 1870     		strb	r0, [r3]
1006:VS4210/monitor.c **** 		 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3534              		.loc 1 1006 0
 3535 02a8 174B     		ldr	r3, .L234+20
 3536 02aa 1C70     		strb	r4, [r3]
1007:VS4210/monitor.c **** 		}
 3537              		.loc 1 1007 0
 3538 02ac 2846     		mov	r0, r5
 3539 02ae FFF7FEFF 		bl	Asc2Bin
 3540              	.LVL491:
 3541 02b2 2246     		mov	r2, r4
 3542 02b4 0146     		mov	r1, r0
 3543 02b6 1848     		ldr	r0, .L234+36
 3544 02b8 FFF7FEFF 		bl	Printf
 3545              	.LVL492:
 3546 02bc 85E7     		b	.L156
 3547              	.LVL493:
 3548              	.L228:
1011:VS4210/monitor.c **** 			ret= HDMIRX_ReadI2C_Byte(Asc2Bin(argv[1]));	  
 3549              		.loc 1 1011 0
 3550 02be 174B     		ldr	r3, .L234+40
 3551 02c0 0022     		movs	r2, #0
 3552 02c2 1A70     		strb	r2, [r3]
1012:VS4210/monitor.c **** 			 MonIndex=Asc2Bin(argv[1]);
ARM GAS  /tmp/ccwHfacM.s 			page 114


 3553              		.loc 1 1012 0
 3554 02c4 0B4D     		ldr	r5, .L234
 3555 02c6 6868     		ldr	r0, [r5, #4]
 3556 02c8 FFF7FEFF 		bl	Asc2Bin
 3557              	.LVL494:
 3558 02cc FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 3559              	.LVL495:
 3560 02d0 0446     		mov	r4, r0
 3561              	.LVL496:
1013:VS4210/monitor.c **** 			 MonWdata=ret;
 3562              		.loc 1 1013 0
 3563 02d2 6D68     		ldr	r5, [r5, #4]
 3564 02d4 2846     		mov	r0, r5
 3565 02d6 FFF7FEFF 		bl	Asc2Bin
 3566              	.LVL497:
 3567 02da 0A4B     		ldr	r3, .L234+16
 3568 02dc 1870     		strb	r0, [r3]
1014:VS4210/monitor.c **** 			 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3569              		.loc 1 1014 0
 3570 02de 0A4B     		ldr	r3, .L234+20
 3571 02e0 1C70     		strb	r4, [r3]
1015:VS4210/monitor.c **** 			}
 3572              		.loc 1 1015 0
 3573 02e2 2846     		mov	r0, r5
 3574 02e4 FFF7FEFF 		bl	Asc2Bin
 3575              	.LVL498:
 3576 02e8 2246     		mov	r2, r4
 3577 02ea 0146     		mov	r1, r0
 3578 02ec 0C48     		ldr	r0, .L234+44
 3579 02ee FFF7FEFF 		bl	Printf
 3580              	.LVL499:
 3581 02f2 6AE7     		b	.L156
 3582              	.L235:
 3583              		.align	2
 3584              	.L234:
 3585 02f4 00000000 		.word	argv
 3586 02f8 00000000 		.word	.LC22
 3587 02fc 00000000 		.word	.LANCHOR5
 3588 0300 04000000 		.word	.LC23
 3589 0304 00000000 		.word	MonIndex
 3590 0308 00000000 		.word	MonWdata
 3591 030c 00000000 		.word	.LC4
 3592 0310 24000000 		.word	.LC5
 3593 0314 48000000 		.word	.LC6
 3594 0318 6C000000 		.word	.LC7
 3595 031c 00000000 		.word	gHDMI_Index
 3596 0320 90000000 		.word	.LC8
 3597 0324 18000000 		.word	.LC24
 3598 0328 1C000000 		.word	.LC25
 3599 032c 20000000 		.word	.LC26
 3600 0330 44000000 		.word	.LC27
 3601 0334 68000000 		.word	.LC28
 3602              	.LVL500:
 3603              	.L161:
1035:VS4210/monitor.c **** 		bytVersionFlag=1;
 3604              		.loc 1 1035 0
 3605 0338 0749     		ldr	r1, .L236
ARM GAS  /tmp/ccwHfacM.s 			page 115


 3606 033a 2046     		mov	r0, r4
 3607 033c FFF7FEFF 		bl	stricmp
 3608              	.LVL501:
 3609 0340 80B9     		cbnz	r0, .L167
1036:VS4210/monitor.c **** 		Printf("\r\nTAAH02 FW Version:V%04x", (WORD)GetFWRevEE());
 3610              		.loc 1 1036 0
 3611 0342 064B     		ldr	r3, .L236+4
 3612 0344 0122     		movs	r2, #1
 3613 0346 1A70     		strb	r2, [r3]
1037:VS4210/monitor.c **** 		}
 3614              		.loc 1 1037 0
 3615 0348 FFF7FEFF 		bl	GetFWRevEE
 3616              	.LVL502:
 3617 034c 0146     		mov	r1, r0
 3618 034e 0448     		ldr	r0, .L236+8
 3619 0350 FFF7FEFF 		bl	Printf
 3620              	.LVL503:
 3621 0354 39E7     		b	.L156
 3622              	.L237:
 3623 0356 00BF     		.align	2
 3624              	.L236:
 3625 0358 8C000000 		.word	.LC29
 3626 035c 00000000 		.word	.LANCHOR4
 3627 0360 90000000 		.word	.LC30
 3628              	.L167:
1039:VS4210/monitor.c **** 			//MonReadI2C();
 3629              		.loc 1 1039 0
 3630 0364 FC49     		ldr	r1, .L238
 3631 0366 2046     		mov	r0, r4
 3632 0368 FFF7FEFF 		bl	stricmp
 3633              	.LVL504:
 3634 036c 0028     		cmp	r0, #0
 3635 036e 40F06F82 		bne	.L168
1044:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x03));
 3636              		.loc 1 1044 0
 3637 0372 0220     		movs	r0, #2
 3638 0374 FFF7FEFF 		bl	VXISI2CRead
 3639              	.LVL505:
 3640 0378 F84C     		ldr	r4, .L238+4
 3641 037a 0146     		mov	r1, r0
 3642 037c 2046     		mov	r0, r4
 3643 037e FFF7FEFF 		bl	Printf
 3644              	.LVL506:
1045:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x04));
 3645              		.loc 1 1045 0
 3646 0382 0320     		movs	r0, #3
 3647 0384 FFF7FEFF 		bl	VXISI2CRead
 3648              	.LVL507:
 3649 0388 0146     		mov	r1, r0
 3650 038a 2046     		mov	r0, r4
 3651 038c FFF7FEFF 		bl	Printf
 3652              	.LVL508:
1046:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x05));
 3653              		.loc 1 1046 0
 3654 0390 0420     		movs	r0, #4
 3655 0392 FFF7FEFF 		bl	VXISI2CRead
 3656              	.LVL509:
ARM GAS  /tmp/ccwHfacM.s 			page 116


 3657 0396 0146     		mov	r1, r0
 3658 0398 2046     		mov	r0, r4
 3659 039a FFF7FEFF 		bl	Printf
 3660              	.LVL510:
1047:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x06));
 3661              		.loc 1 1047 0
 3662 039e 0520     		movs	r0, #5
 3663 03a0 FFF7FEFF 		bl	VXISI2CRead
 3664              	.LVL511:
 3665 03a4 0146     		mov	r1, r0
 3666 03a6 2046     		mov	r0, r4
 3667 03a8 FFF7FEFF 		bl	Printf
 3668              	.LVL512:
1048:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x07));
 3669              		.loc 1 1048 0
 3670 03ac 0620     		movs	r0, #6
 3671 03ae FFF7FEFF 		bl	VXISI2CRead
 3672              	.LVL513:
 3673 03b2 0146     		mov	r1, r0
 3674 03b4 2046     		mov	r0, r4
 3675 03b6 FFF7FEFF 		bl	Printf
 3676              	.LVL514:
1049:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x08));
 3677              		.loc 1 1049 0
 3678 03ba 0720     		movs	r0, #7
 3679 03bc FFF7FEFF 		bl	VXISI2CRead
 3680              	.LVL515:
 3681 03c0 0146     		mov	r1, r0
 3682 03c2 2046     		mov	r0, r4
 3683 03c4 FFF7FEFF 		bl	Printf
 3684              	.LVL516:
1050:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x09));
 3685              		.loc 1 1050 0
 3686 03c8 0820     		movs	r0, #8
 3687 03ca FFF7FEFF 		bl	VXISI2CRead
 3688              	.LVL517:
 3689 03ce 0146     		mov	r1, r0
 3690 03d0 2046     		mov	r0, r4
 3691 03d2 FFF7FEFF 		bl	Printf
 3692              	.LVL518:
1051:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0A));
 3693              		.loc 1 1051 0
 3694 03d6 0920     		movs	r0, #9
 3695 03d8 FFF7FEFF 		bl	VXISI2CRead
 3696              	.LVL519:
 3697 03dc 0146     		mov	r1, r0
 3698 03de 2046     		mov	r0, r4
 3699 03e0 FFF7FEFF 		bl	Printf
 3700              	.LVL520:
1052:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0B));
 3701              		.loc 1 1052 0
 3702 03e4 0A20     		movs	r0, #10
 3703 03e6 FFF7FEFF 		bl	VXISI2CRead
 3704              	.LVL521:
 3705 03ea 0146     		mov	r1, r0
 3706 03ec 2046     		mov	r0, r4
 3707 03ee FFF7FEFF 		bl	Printf
ARM GAS  /tmp/ccwHfacM.s 			page 117


 3708              	.LVL522:
1053:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0C));
 3709              		.loc 1 1053 0
 3710 03f2 0B20     		movs	r0, #11
 3711 03f4 FFF7FEFF 		bl	VXISI2CRead
 3712              	.LVL523:
 3713 03f8 0146     		mov	r1, r0
 3714 03fa 2046     		mov	r0, r4
 3715 03fc FFF7FEFF 		bl	Printf
 3716              	.LVL524:
1054:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0D));
 3717              		.loc 1 1054 0
 3718 0400 0C20     		movs	r0, #12
 3719 0402 FFF7FEFF 		bl	VXISI2CRead
 3720              	.LVL525:
 3721 0406 0146     		mov	r1, r0
 3722 0408 2046     		mov	r0, r4
 3723 040a FFF7FEFF 		bl	Printf
 3724              	.LVL526:
1055:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x10));
 3725              		.loc 1 1055 0
 3726 040e 0D20     		movs	r0, #13
 3727 0410 FFF7FEFF 		bl	VXISI2CRead
 3728              	.LVL527:
 3729 0414 0146     		mov	r1, r0
 3730 0416 2046     		mov	r0, r4
 3731 0418 FFF7FEFF 		bl	Printf
 3732              	.LVL528:
1056:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x11));
 3733              		.loc 1 1056 0
 3734 041c 1020     		movs	r0, #16
 3735 041e FFF7FEFF 		bl	VXISI2CRead
 3736              	.LVL529:
 3737 0422 0146     		mov	r1, r0
 3738 0424 2046     		mov	r0, r4
 3739 0426 FFF7FEFF 		bl	Printf
 3740              	.LVL530:
1057:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x15));
 3741              		.loc 1 1057 0
 3742 042a 1120     		movs	r0, #17
 3743 042c FFF7FEFF 		bl	VXISI2CRead
 3744              	.LVL531:
 3745 0430 0146     		mov	r1, r0
 3746 0432 2046     		mov	r0, r4
 3747 0434 FFF7FEFF 		bl	Printf
 3748              	.LVL532:
1058:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x16));
 3749              		.loc 1 1058 0
 3750 0438 1520     		movs	r0, #21
 3751 043a FFF7FEFF 		bl	VXISI2CRead
 3752              	.LVL533:
 3753 043e 0146     		mov	r1, r0
 3754 0440 2046     		mov	r0, r4
 3755 0442 FFF7FEFF 		bl	Printf
 3756              	.LVL534:
1059:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x17));
 3757              		.loc 1 1059 0
ARM GAS  /tmp/ccwHfacM.s 			page 118


 3758 0446 1620     		movs	r0, #22
 3759 0448 FFF7FEFF 		bl	VXISI2CRead
 3760              	.LVL535:
 3761 044c 0146     		mov	r1, r0
 3762 044e 2046     		mov	r0, r4
 3763 0450 FFF7FEFF 		bl	Printf
 3764              	.LVL536:
1060:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x18));
 3765              		.loc 1 1060 0
 3766 0454 1720     		movs	r0, #23
 3767 0456 FFF7FEFF 		bl	VXISI2CRead
 3768              	.LVL537:
 3769 045a 0146     		mov	r1, r0
 3770 045c 2046     		mov	r0, r4
 3771 045e FFF7FEFF 		bl	Printf
 3772              	.LVL538:
1061:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x19));
 3773              		.loc 1 1061 0
 3774 0462 1820     		movs	r0, #24
 3775 0464 FFF7FEFF 		bl	VXISI2CRead
 3776              	.LVL539:
 3777 0468 0146     		mov	r1, r0
 3778 046a 2046     		mov	r0, r4
 3779 046c FFF7FEFF 		bl	Printf
 3780              	.LVL540:
1062:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1A));
 3781              		.loc 1 1062 0
 3782 0470 1920     		movs	r0, #25
 3783 0472 FFF7FEFF 		bl	VXISI2CRead
 3784              	.LVL541:
 3785 0476 0146     		mov	r1, r0
 3786 0478 2046     		mov	r0, r4
 3787 047a FFF7FEFF 		bl	Printf
 3788              	.LVL542:
1063:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1C));
 3789              		.loc 1 1063 0
 3790 047e 1A20     		movs	r0, #26
 3791 0480 FFF7FEFF 		bl	VXISI2CRead
 3792              	.LVL543:
 3793 0484 0146     		mov	r1, r0
 3794 0486 2046     		mov	r0, r4
 3795 0488 FFF7FEFF 		bl	Printf
 3796              	.LVL544:
1064:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1D));
 3797              		.loc 1 1064 0
 3798 048c 1C20     		movs	r0, #28
 3799 048e FFF7FEFF 		bl	VXISI2CRead
 3800              	.LVL545:
 3801 0492 0146     		mov	r1, r0
 3802 0494 2046     		mov	r0, r4
 3803 0496 FFF7FEFF 		bl	Printf
 3804              	.LVL546:
1065:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1E));
 3805              		.loc 1 1065 0
 3806 049a 1D20     		movs	r0, #29
 3807 049c FFF7FEFF 		bl	VXISI2CRead
 3808              	.LVL547:
ARM GAS  /tmp/ccwHfacM.s 			page 119


 3809 04a0 0146     		mov	r1, r0
 3810 04a2 2046     		mov	r0, r4
 3811 04a4 FFF7FEFF 		bl	Printf
 3812              	.LVL548:
1066:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x28));
 3813              		.loc 1 1066 0
 3814 04a8 1E20     		movs	r0, #30
 3815 04aa FFF7FEFF 		bl	VXISI2CRead
 3816              	.LVL549:
 3817 04ae 0146     		mov	r1, r0
 3818 04b0 2046     		mov	r0, r4
 3819 04b2 FFF7FEFF 		bl	Printf
 3820              	.LVL550:
1067:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x29));
 3821              		.loc 1 1067 0
 3822 04b6 2820     		movs	r0, #40
 3823 04b8 FFF7FEFF 		bl	VXISI2CRead
 3824              	.LVL551:
 3825 04bc 0146     		mov	r1, r0
 3826 04be 2046     		mov	r0, r4
 3827 04c0 FFF7FEFF 		bl	Printf
 3828              	.LVL552:
1068:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2A));
 3829              		.loc 1 1068 0
 3830 04c4 2920     		movs	r0, #41
 3831 04c6 FFF7FEFF 		bl	VXISI2CRead
 3832              	.LVL553:
 3833 04ca 0146     		mov	r1, r0
 3834 04cc 2046     		mov	r0, r4
 3835 04ce FFF7FEFF 		bl	Printf
 3836              	.LVL554:
1069:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2B));
 3837              		.loc 1 1069 0
 3838 04d2 2A20     		movs	r0, #42
 3839 04d4 FFF7FEFF 		bl	VXISI2CRead
 3840              	.LVL555:
 3841 04d8 0146     		mov	r1, r0
 3842 04da 2046     		mov	r0, r4
 3843 04dc FFF7FEFF 		bl	Printf
 3844              	.LVL556:
1070:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2C));
 3845              		.loc 1 1070 0
 3846 04e0 2B20     		movs	r0, #43
 3847 04e2 FFF7FEFF 		bl	VXISI2CRead
 3848              	.LVL557:
 3849 04e6 0146     		mov	r1, r0
 3850 04e8 2046     		mov	r0, r4
 3851 04ea FFF7FEFF 		bl	Printf
 3852              	.LVL558:
1071:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2D));
 3853              		.loc 1 1071 0
 3854 04ee 2C20     		movs	r0, #44
 3855 04f0 FFF7FEFF 		bl	VXISI2CRead
 3856              	.LVL559:
 3857 04f4 0146     		mov	r1, r0
 3858 04f6 2046     		mov	r0, r4
 3859 04f8 FFF7FEFF 		bl	Printf
ARM GAS  /tmp/ccwHfacM.s 			page 120


 3860              	.LVL560:
1072:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x74));
 3861              		.loc 1 1072 0
 3862 04fc 2D20     		movs	r0, #45
 3863 04fe FFF7FEFF 		bl	VXISI2CRead
 3864              	.LVL561:
 3865 0502 0146     		mov	r1, r0
 3866 0504 2046     		mov	r0, r4
 3867 0506 FFF7FEFF 		bl	Printf
 3868              	.LVL562:
1073:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x7E));
 3869              		.loc 1 1073 0
 3870 050a 7420     		movs	r0, #116
 3871 050c FFF7FEFF 		bl	VXISI2CRead
 3872              	.LVL563:
 3873 0510 0146     		mov	r1, r0
 3874 0512 2046     		mov	r0, r4
 3875 0514 FFF7FEFF 		bl	Printf
 3876              	.LVL564:
1074:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x7F));
 3877              		.loc 1 1074 0
 3878 0518 7E20     		movs	r0, #126
 3879 051a FFF7FEFF 		bl	VXISI2CRead
 3880              	.LVL565:
 3881 051e 0146     		mov	r1, r0
 3882 0520 2046     		mov	r0, r4
 3883 0522 FFF7FEFF 		bl	Printf
 3884              	.LVL566:
1075:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x80));
 3885              		.loc 1 1075 0
 3886 0526 7F20     		movs	r0, #127
 3887 0528 FFF7FEFF 		bl	VXISI2CRead
 3888              	.LVL567:
 3889 052c 0146     		mov	r1, r0
 3890 052e 2046     		mov	r0, r4
 3891 0530 FFF7FEFF 		bl	Printf
 3892              	.LVL568:
1076:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x81));
 3893              		.loc 1 1076 0
 3894 0534 8020     		movs	r0, #128
 3895 0536 FFF7FEFF 		bl	VXISI2CRead
 3896              	.LVL569:
 3897 053a 0146     		mov	r1, r0
 3898 053c 2046     		mov	r0, r4
 3899 053e FFF7FEFF 		bl	Printf
 3900              	.LVL570:
1077:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x82));
 3901              		.loc 1 1077 0
 3902 0542 8120     		movs	r0, #129
 3903 0544 FFF7FEFF 		bl	VXISI2CRead
 3904              	.LVL571:
 3905 0548 0146     		mov	r1, r0
 3906 054a 2046     		mov	r0, r4
 3907 054c FFF7FEFF 		bl	Printf
 3908              	.LVL572:
1078:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x83));
 3909              		.loc 1 1078 0
ARM GAS  /tmp/ccwHfacM.s 			page 121


 3910 0550 8220     		movs	r0, #130
 3911 0552 FFF7FEFF 		bl	VXISI2CRead
 3912              	.LVL573:
 3913 0556 0146     		mov	r1, r0
 3914 0558 2046     		mov	r0, r4
 3915 055a FFF7FEFF 		bl	Printf
 3916              	.LVL574:
1079:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x84));
 3917              		.loc 1 1079 0
 3918 055e 8320     		movs	r0, #131
 3919 0560 FFF7FEFF 		bl	VXISI2CRead
 3920              	.LVL575:
 3921 0564 0146     		mov	r1, r0
 3922 0566 2046     		mov	r0, r4
 3923 0568 FFF7FEFF 		bl	Printf
 3924              	.LVL576:
1080:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x85));
 3925              		.loc 1 1080 0
 3926 056c 8420     		movs	r0, #132
 3927 056e FFF7FEFF 		bl	VXISI2CRead
 3928              	.LVL577:
 3929 0572 0146     		mov	r1, r0
 3930 0574 2046     		mov	r0, r4
 3931 0576 FFF7FEFF 		bl	Printf
 3932              	.LVL578:
1081:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x86));
 3933              		.loc 1 1081 0
 3934 057a 8520     		movs	r0, #133
 3935 057c FFF7FEFF 		bl	VXISI2CRead
 3936              	.LVL579:
 3937 0580 0146     		mov	r1, r0
 3938 0582 2046     		mov	r0, r4
 3939 0584 FFF7FEFF 		bl	Printf
 3940              	.LVL580:
1082:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x87));
 3941              		.loc 1 1082 0
 3942 0588 8620     		movs	r0, #134
 3943 058a FFF7FEFF 		bl	VXISI2CRead
 3944              	.LVL581:
 3945 058e 0146     		mov	r1, r0
 3946 0590 2046     		mov	r0, r4
 3947 0592 FFF7FEFF 		bl	Printf
 3948              	.LVL582:
1083:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x88));
 3949              		.loc 1 1083 0
 3950 0596 8720     		movs	r0, #135
 3951 0598 FFF7FEFF 		bl	VXISI2CRead
 3952              	.LVL583:
 3953 059c 0146     		mov	r1, r0
 3954 059e 2046     		mov	r0, r4
 3955 05a0 FFF7FEFF 		bl	Printf
 3956              	.LVL584:
1084:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x89));
 3957              		.loc 1 1084 0
 3958 05a4 8820     		movs	r0, #136
 3959 05a6 FFF7FEFF 		bl	VXISI2CRead
 3960              	.LVL585:
ARM GAS  /tmp/ccwHfacM.s 			page 122


 3961 05aa 0146     		mov	r1, r0
 3962 05ac 2046     		mov	r0, r4
 3963 05ae FFF7FEFF 		bl	Printf
 3964              	.LVL586:
1085:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8A));
 3965              		.loc 1 1085 0
 3966 05b2 8920     		movs	r0, #137
 3967 05b4 FFF7FEFF 		bl	VXISI2CRead
 3968              	.LVL587:
 3969 05b8 0146     		mov	r1, r0
 3970 05ba 2046     		mov	r0, r4
 3971 05bc FFF7FEFF 		bl	Printf
 3972              	.LVL588:
1086:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8B));
 3973              		.loc 1 1086 0
 3974 05c0 8A20     		movs	r0, #138
 3975 05c2 FFF7FEFF 		bl	VXISI2CRead
 3976              	.LVL589:
 3977 05c6 0146     		mov	r1, r0
 3978 05c8 2046     		mov	r0, r4
 3979 05ca FFF7FEFF 		bl	Printf
 3980              	.LVL590:
1087:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8C));
 3981              		.loc 1 1087 0
 3982 05ce 8B20     		movs	r0, #139
 3983 05d0 FFF7FEFF 		bl	VXISI2CRead
 3984              	.LVL591:
 3985 05d4 0146     		mov	r1, r0
 3986 05d6 2046     		mov	r0, r4
 3987 05d8 FFF7FEFF 		bl	Printf
 3988              	.LVL592:
1088:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8D));
 3989              		.loc 1 1088 0
 3990 05dc 8C20     		movs	r0, #140
 3991 05de FFF7FEFF 		bl	VXISI2CRead
 3992              	.LVL593:
 3993 05e2 0146     		mov	r1, r0
 3994 05e4 2046     		mov	r0, r4
 3995 05e6 FFF7FEFF 		bl	Printf
 3996              	.LVL594:
1089:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8E));
 3997              		.loc 1 1089 0
 3998 05ea 8D20     		movs	r0, #141
 3999 05ec FFF7FEFF 		bl	VXISI2CRead
 4000              	.LVL595:
 4001 05f0 0146     		mov	r1, r0
 4002 05f2 2046     		mov	r0, r4
 4003 05f4 FFF7FEFF 		bl	Printf
 4004              	.LVL596:
1090:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8F));
 4005              		.loc 1 1090 0
 4006 05f8 8E20     		movs	r0, #142
 4007 05fa FFF7FEFF 		bl	VXISI2CRead
 4008              	.LVL597:
 4009 05fe 0146     		mov	r1, r0
 4010 0600 2046     		mov	r0, r4
 4011 0602 FFF7FEFF 		bl	Printf
ARM GAS  /tmp/ccwHfacM.s 			page 123


 4012              	.LVL598:
1091:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x90));
 4013              		.loc 1 1091 0
 4014 0606 8F20     		movs	r0, #143
 4015 0608 FFF7FEFF 		bl	VXISI2CRead
 4016              	.LVL599:
 4017 060c 0146     		mov	r1, r0
 4018 060e 2046     		mov	r0, r4
 4019 0610 FFF7FEFF 		bl	Printf
 4020              	.LVL600:
1092:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x91));
 4021              		.loc 1 1092 0
 4022 0614 9020     		movs	r0, #144
 4023 0616 FFF7FEFF 		bl	VXISI2CRead
 4024              	.LVL601:
 4025 061a 0146     		mov	r1, r0
 4026 061c 2046     		mov	r0, r4
 4027 061e FFF7FEFF 		bl	Printf
 4028              	.LVL602:
1093:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x92));
 4029              		.loc 1 1093 0
 4030 0622 9120     		movs	r0, #145
 4031 0624 FFF7FEFF 		bl	VXISI2CRead
 4032              	.LVL603:
 4033 0628 0146     		mov	r1, r0
 4034 062a 2046     		mov	r0, r4
 4035 062c FFF7FEFF 		bl	Printf
 4036              	.LVL604:
1094:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x93));
 4037              		.loc 1 1094 0
 4038 0630 9220     		movs	r0, #146
 4039 0632 FFF7FEFF 		bl	VXISI2CRead
 4040              	.LVL605:
 4041 0636 0146     		mov	r1, r0
 4042 0638 2046     		mov	r0, r4
 4043 063a FFF7FEFF 		bl	Printf
 4044              	.LVL606:
1095:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x94));
 4045              		.loc 1 1095 0
 4046 063e 9320     		movs	r0, #147
 4047 0640 FFF7FEFF 		bl	VXISI2CRead
 4048              	.LVL607:
 4049 0644 0146     		mov	r1, r0
 4050 0646 2046     		mov	r0, r4
 4051 0648 FFF7FEFF 		bl	Printf
 4052              	.LVL608:
1096:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x95));
 4053              		.loc 1 1096 0
 4054 064c 9420     		movs	r0, #148
 4055 064e FFF7FEFF 		bl	VXISI2CRead
 4056              	.LVL609:
 4057 0652 0146     		mov	r1, r0
 4058 0654 2046     		mov	r0, r4
 4059 0656 FFF7FEFF 		bl	Printf
 4060              	.LVL610:
1097:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x97));
 4061              		.loc 1 1097 0
ARM GAS  /tmp/ccwHfacM.s 			page 124


 4062 065a 9520     		movs	r0, #149
 4063 065c FFF7FEFF 		bl	VXISI2CRead
 4064              	.LVL611:
 4065 0660 0146     		mov	r1, r0
 4066 0662 2046     		mov	r0, r4
 4067 0664 FFF7FEFF 		bl	Printf
 4068              	.LVL612:
1098:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x98));
 4069              		.loc 1 1098 0
 4070 0668 9720     		movs	r0, #151
 4071 066a FFF7FEFF 		bl	VXISI2CRead
 4072              	.LVL613:
 4073 066e 0146     		mov	r1, r0
 4074 0670 2046     		mov	r0, r4
 4075 0672 FFF7FEFF 		bl	Printf
 4076              	.LVL614:
1099:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x99));
 4077              		.loc 1 1099 0
 4078 0676 9820     		movs	r0, #152
 4079 0678 FFF7FEFF 		bl	VXISI2CRead
 4080              	.LVL615:
 4081 067c 0146     		mov	r1, r0
 4082 067e 2046     		mov	r0, r4
 4083 0680 FFF7FEFF 		bl	Printf
 4084              	.LVL616:
1100:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9B));
 4085              		.loc 1 1100 0
 4086 0684 9920     		movs	r0, #153
 4087 0686 FFF7FEFF 		bl	VXISI2CRead
 4088              	.LVL617:
 4089 068a 0146     		mov	r1, r0
 4090 068c 2046     		mov	r0, r4
 4091 068e FFF7FEFF 		bl	Printf
 4092              	.LVL618:
1101:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9C));
 4093              		.loc 1 1101 0
 4094 0692 9B20     		movs	r0, #155
 4095 0694 FFF7FEFF 		bl	VXISI2CRead
 4096              	.LVL619:
 4097 0698 0146     		mov	r1, r0
 4098 069a 2046     		mov	r0, r4
 4099 069c FFF7FEFF 		bl	Printf
 4100              	.LVL620:
1102:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9D));
 4101              		.loc 1 1102 0
 4102 06a0 9C20     		movs	r0, #156
 4103 06a2 FFF7FEFF 		bl	VXISI2CRead
 4104              	.LVL621:
 4105 06a6 0146     		mov	r1, r0
 4106 06a8 2046     		mov	r0, r4
 4107 06aa FFF7FEFF 		bl	Printf
 4108              	.LVL622:
1103:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9E));
 4109              		.loc 1 1103 0
 4110 06ae 9D20     		movs	r0, #157
 4111 06b0 FFF7FEFF 		bl	VXISI2CRead
 4112              	.LVL623:
ARM GAS  /tmp/ccwHfacM.s 			page 125


 4113 06b4 0146     		mov	r1, r0
 4114 06b6 2046     		mov	r0, r4
 4115 06b8 FFF7FEFF 		bl	Printf
 4116              	.LVL624:
1104:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9F));
 4117              		.loc 1 1104 0
 4118 06bc 9E20     		movs	r0, #158
 4119 06be FFF7FEFF 		bl	VXISI2CRead
 4120              	.LVL625:
 4121 06c2 0146     		mov	r1, r0
 4122 06c4 2046     		mov	r0, r4
 4123 06c6 FFF7FEFF 		bl	Printf
 4124              	.LVL626:
1105:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA0));
 4125              		.loc 1 1105 0
 4126 06ca 9F20     		movs	r0, #159
 4127 06cc FFF7FEFF 		bl	VXISI2CRead
 4128              	.LVL627:
 4129 06d0 0146     		mov	r1, r0
 4130 06d2 2046     		mov	r0, r4
 4131 06d4 FFF7FEFF 		bl	Printf
 4132              	.LVL628:
1106:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA1));
 4133              		.loc 1 1106 0
 4134 06d8 A020     		movs	r0, #160
 4135 06da FFF7FEFF 		bl	VXISI2CRead
 4136              	.LVL629:
 4137 06de 0146     		mov	r1, r0
 4138 06e0 2046     		mov	r0, r4
 4139 06e2 FFF7FEFF 		bl	Printf
 4140              	.LVL630:
1107:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA2));
 4141              		.loc 1 1107 0
 4142 06e6 A120     		movs	r0, #161
 4143 06e8 FFF7FEFF 		bl	VXISI2CRead
 4144              	.LVL631:
 4145 06ec 0146     		mov	r1, r0
 4146 06ee 2046     		mov	r0, r4
 4147 06f0 FFF7FEFF 		bl	Printf
 4148              	.LVL632:
1108:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA3));
 4149              		.loc 1 1108 0
 4150 06f4 A220     		movs	r0, #162
 4151 06f6 FFF7FEFF 		bl	VXISI2CRead
 4152              	.LVL633:
 4153 06fa 0146     		mov	r1, r0
 4154 06fc 2046     		mov	r0, r4
 4155 06fe FFF7FEFF 		bl	Printf
 4156              	.LVL634:
1109:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA4));
 4157              		.loc 1 1109 0
 4158 0702 A320     		movs	r0, #163
 4159 0704 FFF7FEFF 		bl	VXISI2CRead
 4160              	.LVL635:
 4161 0708 0146     		mov	r1, r0
 4162 070a 2046     		mov	r0, r4
 4163 070c FFF7FEFF 		bl	Printf
ARM GAS  /tmp/ccwHfacM.s 			page 126


 4164              	.LVL636:
1110:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA5));
 4165              		.loc 1 1110 0
 4166 0710 A420     		movs	r0, #164
 4167 0712 FFF7FEFF 		bl	VXISI2CRead
 4168              	.LVL637:
 4169 0716 0146     		mov	r1, r0
 4170 0718 2046     		mov	r0, r4
 4171 071a FFF7FEFF 		bl	Printf
 4172              	.LVL638:
1111:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA6));
 4173              		.loc 1 1111 0
 4174 071e A520     		movs	r0, #165
 4175 0720 FFF7FEFF 		bl	VXISI2CRead
 4176              	.LVL639:
 4177 0724 0146     		mov	r1, r0
 4178 0726 2046     		mov	r0, r4
 4179 0728 FFF7FEFF 		bl	Printf
 4180              	.LVL640:
1112:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA7));
 4181              		.loc 1 1112 0
 4182 072c A620     		movs	r0, #166
 4183 072e FFF7FEFF 		bl	VXISI2CRead
 4184              	.LVL641:
 4185 0732 0146     		mov	r1, r0
 4186 0734 2046     		mov	r0, r4
 4187 0736 FFF7FEFF 		bl	Printf
 4188              	.LVL642:
1113:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA8));
 4189              		.loc 1 1113 0
 4190 073a A720     		movs	r0, #167
 4191 073c FFF7FEFF 		bl	VXISI2CRead
 4192              	.LVL643:
 4193 0740 0146     		mov	r1, r0
 4194 0742 2046     		mov	r0, r4
 4195 0744 FFF7FEFF 		bl	Printf
 4196              	.LVL644:
1114:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA9));
 4197              		.loc 1 1114 0
 4198 0748 A820     		movs	r0, #168
 4199 074a FFF7FEFF 		bl	VXISI2CRead
 4200              	.LVL645:
 4201 074e 0146     		mov	r1, r0
 4202 0750 2046     		mov	r0, r4
 4203 0752 FFF7FEFF 		bl	Printf
 4204              	.LVL646:
 4205 0756 03E0     		b	.L239
 4206              	.L240:
 4207              		.align	2
 4208              	.L238:
 4209 0758 AC000000 		.word	.LC31
 4210 075c B0000000 		.word	.LC32
 4211              	.L239:
1115:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAA));
 4212              		.loc 1 1115 0
 4213 0760 A920     		movs	r0, #169
 4214 0762 FFF7FEFF 		bl	VXISI2CRead
ARM GAS  /tmp/ccwHfacM.s 			page 127


 4215              	.LVL647:
 4216 0766 0146     		mov	r1, r0
 4217 0768 2046     		mov	r0, r4
 4218 076a FFF7FEFF 		bl	Printf
 4219              	.LVL648:
1116:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAB));
 4220              		.loc 1 1116 0
 4221 076e AA20     		movs	r0, #170
 4222 0770 FFF7FEFF 		bl	VXISI2CRead
 4223              	.LVL649:
 4224 0774 0146     		mov	r1, r0
 4225 0776 2046     		mov	r0, r4
 4226 0778 FFF7FEFF 		bl	Printf
 4227              	.LVL650:
1117:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAF));
 4228              		.loc 1 1117 0
 4229 077c AB20     		movs	r0, #171
 4230 077e FFF7FEFF 		bl	VXISI2CRead
 4231              	.LVL651:
 4232 0782 0146     		mov	r1, r0
 4233 0784 2046     		mov	r0, r4
 4234 0786 FFF7FEFF 		bl	Printf
 4235              	.LVL652:
1118:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xC0));
 4236              		.loc 1 1118 0
 4237 078a AF20     		movs	r0, #175
 4238 078c FFF7FEFF 		bl	VXISI2CRead
 4239              	.LVL653:
 4240 0790 0146     		mov	r1, r0
 4241 0792 2046     		mov	r0, r4
 4242 0794 FFF7FEFF 		bl	Printf
 4243              	.LVL654:
1119:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD6));
 4244              		.loc 1 1119 0
 4245 0798 C020     		movs	r0, #192
 4246 079a FFF7FEFF 		bl	VXISI2CRead
 4247              	.LVL655:
 4248 079e 0146     		mov	r1, r0
 4249 07a0 2046     		mov	r0, r4
 4250 07a2 FFF7FEFF 		bl	Printf
 4251              	.LVL656:
1120:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD7));
 4252              		.loc 1 1120 0
 4253 07a6 D620     		movs	r0, #214
 4254 07a8 FFF7FEFF 		bl	VXISI2CRead
 4255              	.LVL657:
 4256 07ac 0146     		mov	r1, r0
 4257 07ae 2046     		mov	r0, r4
 4258 07b0 FFF7FEFF 		bl	Printf
 4259              	.LVL658:
1121:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD8));
 4260              		.loc 1 1121 0
 4261 07b4 D720     		movs	r0, #215
 4262 07b6 FFF7FEFF 		bl	VXISI2CRead
 4263              	.LVL659:
 4264 07ba 0146     		mov	r1, r0
 4265 07bc 2046     		mov	r0, r4
ARM GAS  /tmp/ccwHfacM.s 			page 128


 4266 07be FFF7FEFF 		bl	Printf
 4267              	.LVL660:
1122:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE6));
 4268              		.loc 1 1122 0
 4269 07c2 D820     		movs	r0, #216
 4270 07c4 FFF7FEFF 		bl	VXISI2CRead
 4271              	.LVL661:
 4272 07c8 0146     		mov	r1, r0
 4273 07ca 2046     		mov	r0, r4
 4274 07cc FFF7FEFF 		bl	Printf
 4275              	.LVL662:
1123:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE7));
 4276              		.loc 1 1123 0
 4277 07d0 E620     		movs	r0, #230
 4278 07d2 FFF7FEFF 		bl	VXISI2CRead
 4279              	.LVL663:
 4280 07d6 0146     		mov	r1, r0
 4281 07d8 2046     		mov	r0, r4
 4282 07da FFF7FEFF 		bl	Printf
 4283              	.LVL664:
1124:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE8));
 4284              		.loc 1 1124 0
 4285 07de E720     		movs	r0, #231
 4286 07e0 FFF7FEFF 		bl	VXISI2CRead
 4287              	.LVL665:
 4288 07e4 0146     		mov	r1, r0
 4289 07e6 2046     		mov	r0, r4
 4290 07e8 FFF7FEFF 		bl	Printf
 4291              	.LVL666:
1125:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE9));
 4292              		.loc 1 1125 0
 4293 07ec E820     		movs	r0, #232
 4294 07ee FFF7FEFF 		bl	VXISI2CRead
 4295              	.LVL667:
 4296 07f2 0146     		mov	r1, r0
 4297 07f4 2046     		mov	r0, r4
 4298 07f6 FFF7FEFF 		bl	Printf
 4299              	.LVL668:
1126:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEA));
 4300              		.loc 1 1126 0
 4301 07fa E920     		movs	r0, #233
 4302 07fc FFF7FEFF 		bl	VXISI2CRead
 4303              	.LVL669:
 4304 0800 0146     		mov	r1, r0
 4305 0802 2046     		mov	r0, r4
 4306 0804 FFF7FEFF 		bl	Printf
 4307              	.LVL670:
1127:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEB));
 4308              		.loc 1 1127 0
 4309 0808 EA20     		movs	r0, #234
 4310 080a FFF7FEFF 		bl	VXISI2CRead
 4311              	.LVL671:
 4312 080e 0146     		mov	r1, r0
 4313 0810 2046     		mov	r0, r4
 4314 0812 FFF7FEFF 		bl	Printf
 4315              	.LVL672:
1128:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEC));
ARM GAS  /tmp/ccwHfacM.s 			page 129


 4316              		.loc 1 1128 0
 4317 0816 EB20     		movs	r0, #235
 4318 0818 FFF7FEFF 		bl	VXISI2CRead
 4319              	.LVL673:
 4320 081c 0146     		mov	r1, r0
 4321 081e 2046     		mov	r0, r4
 4322 0820 FFF7FEFF 		bl	Printf
 4323              	.LVL674:
1129:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xED));
 4324              		.loc 1 1129 0
 4325 0824 EC20     		movs	r0, #236
 4326 0826 FFF7FEFF 		bl	VXISI2CRead
 4327              	.LVL675:
 4328 082a 0146     		mov	r1, r0
 4329 082c 2046     		mov	r0, r4
 4330 082e FFF7FEFF 		bl	Printf
 4331              	.LVL676:
1130:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEE));
 4332              		.loc 1 1130 0
 4333 0832 ED20     		movs	r0, #237
 4334 0834 FFF7FEFF 		bl	VXISI2CRead
 4335              	.LVL677:
 4336 0838 0146     		mov	r1, r0
 4337 083a 2046     		mov	r0, r4
 4338 083c FFF7FEFF 		bl	Printf
 4339              	.LVL678:
1131:VS4210/monitor.c **** 
 4340              		.loc 1 1131 0
 4341 0840 EE20     		movs	r0, #238
 4342 0842 FFF7FEFF 		bl	VXISI2CRead
 4343              	.LVL679:
 4344 0846 0146     		mov	r1, r0
 4345 0848 2046     		mov	r0, r4
 4346 084a FFF7FEFF 		bl	Printf
 4347              	.LVL680:
 4348 084e BCE4     		b	.L156
 4349              	.L168:
1134:VS4210/monitor.c **** 		    VXISI2CWrite(Asc2Bin(argv[1]), Asc2Bin(argv[2]));   
 4350              		.loc 1 1134 0
 4351 0850 B049     		ldr	r1, .L241
 4352 0852 2046     		mov	r0, r4
 4353 0854 FFF7FEFF 		bl	stricmp
 4354              	.LVL681:
 4355 0858 D0B9     		cbnz	r0, .L169
1135:VS4210/monitor.c **** 	  ret= VXISI2CRead(Asc2Bin(argv[1]));   
 4356              		.loc 1 1135 0
 4357 085a AF4C     		ldr	r4, .L241+4
 4358 085c 6068     		ldr	r0, [r4, #4]
 4359 085e FFF7FEFF 		bl	Asc2Bin
 4360              	.LVL682:
 4361 0862 0546     		mov	r5, r0
 4362 0864 A068     		ldr	r0, [r4, #8]
 4363 0866 FFF7FEFF 		bl	Asc2Bin
 4364              	.LVL683:
 4365 086a 0146     		mov	r1, r0
 4366 086c 2846     		mov	r0, r5
 4367 086e FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccwHfacM.s 			page 130


 4368              	.LVL684:
1136:VS4210/monitor.c **** 	Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);				
 4369              		.loc 1 1136 0
 4370 0872 6068     		ldr	r0, [r4, #4]
 4371 0874 FFF7FEFF 		bl	Asc2Bin
 4372              	.LVL685:
 4373 0878 FFF7FEFF 		bl	VXISI2CRead
 4374              	.LVL686:
 4375 087c 0546     		mov	r5, r0
 4376              	.LVL687:
1137:VS4210/monitor.c **** 		}
 4377              		.loc 1 1137 0
 4378 087e 6068     		ldr	r0, [r4, #4]
 4379 0880 FFF7FEFF 		bl	Asc2Bin
 4380              	.LVL688:
 4381 0884 2A46     		mov	r2, r5
 4382 0886 0146     		mov	r1, r0
 4383 0888 A448     		ldr	r0, .L241+8
 4384 088a FFF7FEFF 		bl	Printf
 4385              	.LVL689:
 4386 088e 9CE4     		b	.L156
 4387              	.LVL690:
 4388              	.L169:
1139:VS4210/monitor.c **** 		indirect=0;
 4389              		.loc 1 1139 0
 4390 0890 A349     		ldr	r1, .L241+12
 4391 0892 2046     		mov	r0, r4
 4392 0894 FFF7FEFF 		bl	stricmp
 4393              	.LVL691:
 4394 0898 0028     		cmp	r0, #0
 4395 089a 3FF496AC 		beq	.L156
1143:VS4210/monitor.c **** 		 ret=Asc2Bin(argv[1]); 
 4396              		.loc 1 1143 0
 4397 089e A149     		ldr	r1, .L241+16
 4398 08a0 2046     		mov	r0, r4
 4399 08a2 FFF7FEFF 		bl	stricmp
 4400              	.LVL692:
 4401 08a6 60B9     		cbnz	r0, .L170
1144:VS4210/monitor.c **** 		Printf("\r\nChange I2C addr. from %02x to %02x",(WORD)Monitor_I2C,(WORD)ret);		
 4402              		.loc 1 1144 0
 4403 08a8 9B4B     		ldr	r3, .L241+4
 4404 08aa 5868     		ldr	r0, [r3, #4]
 4405 08ac FFF7FEFF 		bl	Asc2Bin
 4406              	.LVL693:
 4407 08b0 0546     		mov	r5, r0
 4408              	.LVL694:
1145:VS4210/monitor.c **** 		Monitor_I2C=ret;
 4409              		.loc 1 1145 0
 4410 08b2 9D4C     		ldr	r4, .L241+20
 4411 08b4 0246     		mov	r2, r0
 4412 08b6 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4413 08b8 9C48     		ldr	r0, .L241+24
 4414              	.LVL695:
 4415 08ba FFF7FEFF 		bl	Printf
 4416              	.LVL696:
1146:VS4210/monitor.c **** 		}
 4417              		.loc 1 1146 0
ARM GAS  /tmp/ccwHfacM.s 			page 131


 4418 08be 2570     		strb	r5, [r4]
 4419 08c0 83E4     		b	.L156
 4420              	.L170:
1148:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
 4421              		.loc 1 1148 0
 4422 08c2 9B49     		ldr	r1, .L241+28
 4423 08c4 2046     		mov	r0, r4
 4424 08c6 FFF7FEFF 		bl	stricmp
 4425              	.LVL697:
 4426 08ca 18B9     		cbnz	r0, .L171
1149:VS4210/monitor.c **** 		}
 4427              		.loc 1 1149 0
 4428 08cc 994B     		ldr	r3, .L241+32
 4429 08ce 0022     		movs	r2, #0
 4430 08d0 1A70     		strb	r2, [r3]
 4431 08d2 7AE4     		b	.L156
 4432              	.L171:
1151:VS4210/monitor.c **** 		WORD s,e;	//20201211-03
 4433              		.loc 1 1151 0
 4434 08d4 9849     		ldr	r1, .L241+36
 4435 08d6 2046     		mov	r0, r4
 4436 08d8 FFF7FEFF 		bl	stricmp
 4437              	.LVL698:
 4438 08dc 0028     		cmp	r0, #0
 4439 08de 65D1     		bne	.L172
 4440              	.LBB2:
1154:VS4210/monitor.c **** 		 e=Asc2Bin(argv[2]); 
 4441              		.loc 1 1154 0
 4442 08e0 8D4D     		ldr	r5, .L241+4
 4443 08e2 6868     		ldr	r0, [r5, #4]
 4444 08e4 FFF7FEFF 		bl	Asc2Bin
 4445              	.LVL699:
 4446 08e8 0446     		mov	r4, r0
 4447              	.LVL700:
1155:VS4210/monitor.c **** 
 4448              		.loc 1 1155 0
 4449 08ea A868     		ldr	r0, [r5, #8]
 4450              	.LVL701:
 4451 08ec FFF7FEFF 		bl	Asc2Bin
 4452              	.LVL702:
 4453 08f0 0546     		mov	r5, r0
 4454              	.LVL703:
1158:VS4210/monitor.c **** 			 {
 4455              		.loc 1 1158 0
 4456 08f2 8D4B     		ldr	r3, .L241+20
 4457 08f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4458 08f6 A02B     		cmp	r3, #160
 4459 08f8 03D1     		bne	.L173
1160:VS4210/monitor.c **** 			 }
 4460              		.loc 1 1160 0
 4461 08fa 9048     		ldr	r0, .L241+40
 4462              	.LVL704:
 4463 08fc FFF7FEFF 		bl	Printf
 4464              	.LVL705:
 4465 0900 1AE0     		b	.L183
 4466              	.LVL706:
 4467              	.L173:
ARM GAS  /tmp/ccwHfacM.s 			page 132


1162:VS4210/monitor.c **** 			 {
 4468              		.loc 1 1162 0
 4469 0902 402B     		cmp	r3, #64
 4470 0904 03D1     		bne	.L175
1164:VS4210/monitor.c **** 			 }
 4471              		.loc 1 1164 0
 4472 0906 8E48     		ldr	r0, .L241+44
 4473              	.LVL707:
 4474 0908 FFF7FEFF 		bl	Printf
 4475              	.LVL708:
 4476 090c 14E0     		b	.L183
 4477              	.LVL709:
 4478              	.L175:
1166:VS4210/monitor.c **** 			 {
 4479              		.loc 1 1166 0
 4480 090e 122B     		cmp	r3, #18
 4481 0910 03D1     		bne	.L176
1168:VS4210/monitor.c **** 			 }
 4482              		.loc 1 1168 0
 4483 0912 8C48     		ldr	r0, .L241+48
 4484              	.LVL710:
 4485 0914 FFF7FEFF 		bl	Printf
 4486              	.LVL711:
 4487 0918 0EE0     		b	.L183
 4488              	.LVL712:
 4489              	.L176:
1170:VS4210/monitor.c **** 			 {
 4490              		.loc 1 1170 0
 4491 091a 902B     		cmp	r3, #144
 4492 091c 0CD1     		bne	.L183
1172:VS4210/monitor.c **** 			 }		 
 4493              		.loc 1 1172 0
 4494 091e 8A48     		ldr	r0, .L241+52
 4495              	.LVL713:
 4496 0920 FFF7FEFF 		bl	Printf
 4497              	.LVL714:
 4498 0924 08E0     		b	.L183
 4499              	.L229:
1179:VS4210/monitor.c **** 			 Printf("\r\nEEPROM  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
 4500              		.loc 1 1179 0
 4501 0926 2046     		mov	r0, r4
 4502 0928 FFF7FEFF 		bl	ReadEEP
 4503              	.LVL715:
1180:VS4210/monitor.c **** 			 }
 4504              		.loc 1 1180 0
 4505 092c 0246     		mov	r2, r0
 4506 092e 2146     		mov	r1, r4
 4507 0930 8648     		ldr	r0, .L241+56
 4508              	.LVL716:
 4509 0932 FFF7FEFF 		bl	Printf
 4510              	.LVL717:
 4511              	.L178:
1175:VS4210/monitor.c **** {
 4512              		.loc 1 1175 0
 4513 0936 0134     		adds	r4, r4, #1
 4514              	.LVL718:
 4515              	.L183:
ARM GAS  /tmp/ccwHfacM.s 			page 133


1175:VS4210/monitor.c **** {
 4516              		.loc 1 1175 0 is_stmt 0 discriminator 1
 4517 0938 AC42     		cmp	r4, r5
 4518 093a 3FF646AC 		bhi	.L156
1177:VS4210/monitor.c **** 			 {
 4519              		.loc 1 1177 0 is_stmt 1
 4520 093e 7A4B     		ldr	r3, .L241+20
 4521 0940 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4522 0942 A02B     		cmp	r3, #160
 4523 0944 EFD0     		beq	.L229
1182:VS4210/monitor.c **** 			 {
 4524              		.loc 1 1182 0
 4525 0946 402B     		cmp	r3, #64
 4526 0948 09D0     		beq	.L230
1188:VS4210/monitor.c **** 			 {
 4527              		.loc 1 1188 0
 4528 094a 122B     		cmp	r3, #18
 4529 094c 10D0     		beq	.L231
1194:VS4210/monitor.c **** 					  {
 4530              		.loc 1 1194 0
 4531 094e 882B     		cmp	r3, #136
 4532 0950 17D0     		beq	.L232
1200:VS4210/monitor.c **** 								{
 4533              		.loc 1 1200 0
 4534 0952 902B     		cmp	r3, #144
 4535 0954 1ED0     		beq	.L233
1221:VS4210/monitor.c **** 			 }
 4536              		.loc 1 1221 0
 4537 0956 7E48     		ldr	r0, .L241+60
 4538 0958 FFF7FEFF 		bl	Printf
 4539              	.LVL719:
 4540 095c EBE7     		b	.L178
 4541              	.L230:
1184:VS4210/monitor.c **** 			 // Printf("\r\nVXISI2CWrite(0x%02x,0x%02x);",(WORD)s,(WORD)ret);
 4542              		.loc 1 1184 0
 4543 095e E0B2     		uxtb	r0, r4
 4544 0960 FFF7FEFF 		bl	VXISI2CRead
 4545              	.LVL720:
1186:VS4210/monitor.c **** 			 }
 4546              		.loc 1 1186 0
 4547 0964 0246     		mov	r2, r0
 4548 0966 2146     		mov	r1, r4
 4549 0968 7A48     		ldr	r0, .L241+64
 4550              	.LVL721:
 4551 096a FFF7FEFF 		bl	Printf
 4552              	.LVL722:
 4553 096e E2E7     		b	.L178
 4554              	.L231:
1190:VS4210/monitor.c **** //			  Printf("\r\nVS8812  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
 4555              		.loc 1 1190 0
 4556 0970 E0B2     		uxtb	r0, r4
 4557 0972 FFF7FEFF 		bl	VS8812Read
 4558              	.LVL723:
1192:VS4210/monitor.c **** 			 }
 4559              		.loc 1 1192 0
 4560 0976 0246     		mov	r2, r0
 4561 0978 2146     		mov	r1, r4
ARM GAS  /tmp/ccwHfacM.s 			page 134


 4562 097a 7748     		ldr	r0, .L241+68
 4563              	.LVL724:
 4564 097c FFF7FEFF 		bl	Printf
 4565              	.LVL725:
 4566 0980 D9E7     		b	.L178
 4567              	.L232:
1196:VS4210/monitor.c **** 					 // Printf("\r\ntp28xx,%02x,%02x",(WORD)s,(WORD)ret);
 4568              		.loc 1 1196 0
 4569 0982 E0B2     		uxtb	r0, r4
 4570 0984 FFF7FEFF 		bl	tp28xx_byte_read
 4571              	.LVL726:
1198:VS4210/monitor.c **** 					  } 
 4572              		.loc 1 1198 0
 4573 0988 0246     		mov	r2, r0
 4574 098a 2146     		mov	r1, r4
 4575 098c 7348     		ldr	r0, .L241+72
 4576              	.LVL727:
 4577 098e FFF7FEFF 		bl	Printf
 4578              	.LVL728:
 4579 0992 D0E7     		b	.L178
 4580              	.L233:
1202:VS4210/monitor.c **** 							ret= HDMIRX_ReadI2C_Byte(s);	  
 4581              		.loc 1 1202 0
 4582 0994 724B     		ldr	r3, .L241+76
 4583 0996 0022     		movs	r2, #0
 4584 0998 1A70     		strb	r2, [r3]
1203:VS4210/monitor.c **** 								 Printf("\r\nIT66021,%02x,%02x",(WORD)s,(WORD)ret);
 4585              		.loc 1 1203 0
 4586 099a E0B2     		uxtb	r0, r4
 4587 099c FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 4588              	.LVL729:
1204:VS4210/monitor.c **** 								} 
 4589              		.loc 1 1204 0
 4590 09a0 0246     		mov	r2, r0
 4591 09a2 2146     		mov	r1, r4
 4592 09a4 6F48     		ldr	r0, .L241+80
 4593              	.LVL730:
 4594 09a6 FFF7FEFF 		bl	Printf
 4595              	.LVL731:
 4596 09aa C4E7     		b	.L178
 4597              	.LVL732:
 4598              	.L172:
 4599              	.LBE2:
1381:VS4210/monitor.c **** 		MonHelp();
 4600              		.loc 1 1381 0
 4601 09ac 6E49     		ldr	r1, .L241+84
 4602 09ae 2046     		mov	r0, r4
 4603 09b0 FFF7FEFF 		bl	stricmp
 4604              	.LVL733:
 4605 09b4 48B1     		cbz	r0, .L185
1381:VS4210/monitor.c **** 		MonHelp();
 4606              		.loc 1 1381 0 is_stmt 0 discriminator 1
 4607 09b6 6D49     		ldr	r1, .L241+88
 4608 09b8 2046     		mov	r0, r4
 4609 09ba FFF7FEFF 		bl	stricmp
 4610              	.LVL734:
 4611 09be 20B1     		cbz	r0, .L185
ARM GAS  /tmp/ccwHfacM.s 			page 135


1381:VS4210/monitor.c **** 		MonHelp();
 4612              		.loc 1 1381 0 discriminator 2
 4613 09c0 6B49     		ldr	r1, .L241+92
 4614 09c2 2046     		mov	r0, r4
 4615 09c4 FFF7FEFF 		bl	stricmp
 4616              	.LVL735:
 4617 09c8 18B9     		cbnz	r0, .L186
 4618              	.L185:
1382:VS4210/monitor.c **** 	}
 4619              		.loc 1 1382 0 is_stmt 1
 4620 09ca FFF7FEFF 		bl	MonHelp
 4621              	.LVL736:
 4622 09ce FFF7FCBB 		b	.L156
 4623              	.L186:
1384:VS4210/monitor.c **** 
 4624              		.loc 1 1384 0
 4625 09d2 6849     		ldr	r1, .L241+96
 4626 09d4 2046     		mov	r0, r4
 4627 09d6 FFF7FEFF 		bl	stricmp
 4628              	.LVL737:
 4629 09da 90B9     		cbnz	r0, .L187
1386:VS4210/monitor.c **** 
 4630              		.loc 1 1386 0
 4631 09dc 4E4C     		ldr	r4, .L241+4
 4632 09de 6068     		ldr	r0, [r4, #4]
 4633 09e0 FFF7FEFF 		bl	Asc2Bin
 4634              	.LVL738:
 4635 09e4 C0EB0010 		rsb	r0, r0, r0, lsl #4
 4636 09e8 80B2     		uxth	r0, r0
 4637 09ea FFF7FEFF 		bl	user_pwm_setvalue
 4638              	.LVL739:
1388:VS4210/monitor.c **** 	}
 4639              		.loc 1 1388 0
 4640 09ee 6068     		ldr	r0, [r4, #4]
 4641 09f0 FFF7FEFF 		bl	Asc2Bin
 4642              	.LVL740:
 4643 09f4 C0EB0011 		rsb	r1, r0, r0, lsl #4
 4644 09f8 5F48     		ldr	r0, .L241+100
 4645 09fa FFF7FEFF 		bl	Printf
 4646              	.LVL741:
 4647 09fe FFF7E4BB 		b	.L156
 4648              	.L187:
1390:VS4210/monitor.c **** 
 4649              		.loc 1 1390 0
 4650 0a02 5E49     		ldr	r1, .L241+104
 4651 0a04 2046     		mov	r0, r4
 4652 0a06 FFF7FEFF 		bl	stricmp
 4653              	.LVL742:
 4654 0a0a 40B9     		cbnz	r0, .L188
1392:VS4210/monitor.c **** 
 4655              		.loc 1 1392 0
 4656 0a0c 0220     		movs	r0, #2
 4657 0a0e FFF7FEFF 		bl	GET_ALC122
 4658              	.LVL743:
 4659 0a12 0146     		mov	r1, r0
 4660 0a14 5A48     		ldr	r0, .L241+108
 4661 0a16 FFF7FEFF 		bl	Printf
ARM GAS  /tmp/ccwHfacM.s 			page 136


 4662              	.LVL744:
 4663 0a1a FFF7D6BB 		b	.L156
 4664              	.L188:
1395:VS4210/monitor.c **** 		WORD val=0;
 4665              		.loc 1 1395 0
 4666 0a1e 5949     		ldr	r1, .L241+112
 4667 0a20 2046     		mov	r0, r4
 4668 0a22 FFF7FEFF 		bl	stricmp
 4669              	.LVL745:
 4670 0a26 88B9     		cbnz	r0, .L189
 4671              	.LVL746:
 4672              	.LBB3:
1397:VS4210/monitor.c **** 		val<<=8;
 4673              		.loc 1 1397 0
 4674 0a28 3B4B     		ldr	r3, .L241+4
 4675 0a2a 5868     		ldr	r0, [r3, #4]
 4676 0a2c FFF7FEFF 		bl	Asc2Bin
 4677              	.LVL747:
1401:VS4210/monitor.c **** 
 4678              		.loc 1 1401 0
 4679 0a30 40EA0021 		orr	r1, r0, r0, lsl #8
 4680              	.LVL748:
 4681 0a34 0220     		movs	r0, #2
 4682 0a36 FFF7FEFF 		bl	SET_ALC122
 4683              	.LVL749:
1403:VS4210/monitor.c **** 	}
 4684              		.loc 1 1403 0
 4685 0a3a 0220     		movs	r0, #2
 4686 0a3c FFF7FEFF 		bl	GET_ALC122
 4687              	.LVL750:
 4688 0a40 0146     		mov	r1, r0
 4689 0a42 4F48     		ldr	r0, .L241+108
 4690 0a44 FFF7FEFF 		bl	Printf
 4691              	.LVL751:
 4692              	.LBE3:
 4693 0a48 FFF7BFBB 		b	.L156
 4694              	.L189:
1412:VS4210/monitor.c **** 		//if( argc==2 ) {
 4695              		.loc 1 1412 0
 4696 0a4c 4E49     		ldr	r1, .L241+116
 4697 0a4e 2046     		mov	r0, r4
 4698 0a50 FFF7FEFF 		bl	stricmp
 4699              	.LVL752:
 4700 0a54 58B9     		cbnz	r0, .L190
1414:VS4210/monitor.c **** 		//}
 4701              		.loc 1 1414 0
 4702 0a56 304B     		ldr	r3, .L241+4
 4703 0a58 5868     		ldr	r0, [r3, #4]
 4704 0a5a FFF7FEFF 		bl	Asc2Bin
 4705              	.LVL753:
 4706 0a5e 0146     		mov	r1, r0
 4707 0a60 4A4B     		ldr	r3, .L241+120
 4708 0a62 1860     		str	r0, [r3]
1416:VS4210/monitor.c **** 	}
 4709              		.loc 1 1416 0
 4710 0a64 4A48     		ldr	r0, .L241+124
 4711 0a66 FFF7FEFF 		bl	Printf
ARM GAS  /tmp/ccwHfacM.s 			page 137


 4712              	.LVL754:
 4713 0a6a FFF7AEBB 		b	.L156
 4714              	.L190:
1418:VS4210/monitor.c **** 
 4715              		.loc 1 1418 0
 4716 0a6e 4949     		ldr	r1, .L241+128
 4717 0a70 2046     		mov	r0, r4
 4718 0a72 FFF7FEFF 		bl	stricmp
 4719              	.LVL755:
 4720 0a76 38BB     		cbnz	r0, .L191
 4721              	.LBB4:
1421:VS4210/monitor.c **** 		
 4722              		.loc 1 1421 0
 4723 0a78 274B     		ldr	r3, .L241+4
 4724 0a7a 5868     		ldr	r0, [r3, #4]
 4725 0a7c FFF7FEFF 		bl	Asc2Bin
 4726              	.LVL756:
 4727 0a80 0446     		mov	r4, r0
 4728              	.LVL757:
1423:VS4210/monitor.c **** 		
 4729              		.loc 1 1423 0
 4730 0a82 FFF7FEFF 		bl	HS_Select_Win
 4731              	.LVL758:
1426:VS4210/monitor.c **** 		{
 4732              		.loc 1 1426 0
 4733 0a86 012C     		cmp	r4, #1
 4734 0a88 7FF49FAB 		bne	.L156
1428:VS4210/monitor.c **** 		
 4735              		.loc 1 1428 0
 4736 0a8c 424C     		ldr	r4, .L241+132
 4737              	.LVL759:
 4738 0a8e 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4739 0a90 4248     		ldr	r0, .L241+136
 4740 0a92 FFF7FEFF 		bl	Printf
 4741              	.LVL760:
1430:VS4210/monitor.c **** 			TP_bt1120_720P_1080P_mode0_w0();
 4742              		.loc 1 1430 0
 4743 0a96 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4744 0a98 052B     		cmp	r3, #5
 4745 0a9a 03D1     		bne	.L192
1431:VS4210/monitor.c **** 			else if(TP_InputMode==6)
 4746              		.loc 1 1431 0
 4747 0a9c FFF7FEFF 		bl	TP_bt1120_720P_1080P_mode0_w0
 4748              	.LVL761:
 4749 0aa0 FFF793BB 		b	.L156
 4750              	.L192:
1432:VS4210/monitor.c **** 				TP_bt1120_1080P_1080P_mode0_w0();
 4751              		.loc 1 1432 0
 4752 0aa4 062B     		cmp	r3, #6
 4753 0aa6 03D1     		bne	.L193
1433:VS4210/monitor.c **** 			else if(TP_InputMode==0)
 4754              		.loc 1 1433 0
 4755 0aa8 FFF7FEFF 		bl	TP_bt1120_1080P_1080P_mode0_w0
 4756              	.LVL762:
 4757 0aac FFF78DBB 		b	.L156
 4758              	.L193:
1434:VS4210/monitor.c **** 				TP_bt1120_NTSC_1080P_mode0_w0();
ARM GAS  /tmp/ccwHfacM.s 			page 138


 4759              		.loc 1 1434 0
 4760 0ab0 1BB9     		cbnz	r3, .L194
1435:VS4210/monitor.c **** 			else if(TP_InputMode==1)
 4761              		.loc 1 1435 0
 4762 0ab2 FFF7FEFF 		bl	TP_bt1120_NTSC_1080P_mode0_w0
 4763              	.LVL763:
 4764 0ab6 FFF788BB 		b	.L156
 4765              	.L194:
1436:VS4210/monitor.c **** 				TP_bt1120_PAL_1080P_mode0_w0();
 4766              		.loc 1 1436 0
 4767 0aba 012B     		cmp	r3, #1
 4768 0abc 7FF485AB 		bne	.L156
1437:VS4210/monitor.c **** 							
 4769              		.loc 1 1437 0
 4770 0ac0 FFF7FEFF 		bl	TP_bt1120_PAL_1080P_mode0_w0
 4771              	.LVL764:
 4772 0ac4 FFF781BB 		b	.L156
 4773              	.L191:
 4774              	.LBE4:
1441:VS4210/monitor.c **** 		TP_bt1120_720P_1080P_mode0_w0();
 4775              		.loc 1 1441 0
 4776 0ac8 3549     		ldr	r1, .L241+140
 4777 0aca 2046     		mov	r0, r4
 4778 0acc FFF7FEFF 		bl	stricmp
 4779              	.LVL765:
 4780 0ad0 18B9     		cbnz	r0, .L195
1442:VS4210/monitor.c **** 	}	
 4781              		.loc 1 1442 0
 4782 0ad2 FFF7FEFF 		bl	TP_bt1120_720P_1080P_mode0_w0
 4783              	.LVL766:
 4784 0ad6 FFF778BB 		b	.L156
 4785              	.L195:
1444:VS4210/monitor.c **** 		TP_bt1120_1080P_1080P_mode0_w0();
 4786              		.loc 1 1444 0
 4787 0ada 3249     		ldr	r1, .L241+144
 4788 0adc 2046     		mov	r0, r4
 4789 0ade FFF7FEFF 		bl	stricmp
 4790              	.LVL767:
 4791 0ae2 18B9     		cbnz	r0, .L196
1445:VS4210/monitor.c **** 	}	
 4792              		.loc 1 1445 0
 4793 0ae4 FFF7FEFF 		bl	TP_bt1120_1080P_1080P_mode0_w0
 4794              	.LVL768:
 4795 0ae8 FFF76FBB 		b	.L156
 4796              	.L196:
1447:VS4210/monitor.c **** 		TP_bt1120_NTSC_1080P_mode0_w0();
 4797              		.loc 1 1447 0
 4798 0aec 2E49     		ldr	r1, .L241+148
 4799 0aee 2046     		mov	r0, r4
 4800 0af0 FFF7FEFF 		bl	stricmp
 4801              	.LVL769:
 4802 0af4 18B9     		cbnz	r0, .L197
1448:VS4210/monitor.c **** 	}	
 4803              		.loc 1 1448 0
 4804 0af6 FFF7FEFF 		bl	TP_bt1120_NTSC_1080P_mode0_w0
 4805              	.LVL770:
 4806 0afa FFF766BB 		b	.L156
ARM GAS  /tmp/ccwHfacM.s 			page 139


 4807              	.L197:
1450:VS4210/monitor.c **** 		TP_bt1120_PAL_1080P_mode0_w0();
 4808              		.loc 1 1450 0
 4809 0afe 2B49     		ldr	r1, .L241+152
 4810 0b00 2046     		mov	r0, r4
 4811 0b02 FFF7FEFF 		bl	stricmp
 4812              	.LVL771:
 4813 0b06 0028     		cmp	r0, #0
 4814 0b08 52D1     		bne	.L198
1451:VS4210/monitor.c **** 	}	
 4815              		.loc 1 1451 0
 4816 0b0a FFF7FEFF 		bl	TP_bt1120_PAL_1080P_mode0_w0
 4817              	.LVL772:
 4818 0b0e FFF75CBB 		b	.L156
 4819              	.L242:
 4820 0b12 00BF     		.align	2
 4821              	.L241:
 4822 0b14 C0000000 		.word	.LC33
 4823 0b18 00000000 		.word	argv
 4824 0b1c 24000000 		.word	.LC5
 4825 0b20 C4000000 		.word	.LC34
 4826 0b24 C8000000 		.word	.LC35
 4827 0b28 00000000 		.word	.LANCHOR5
 4828 0b2c CC000000 		.word	.LC36
 4829 0b30 F4000000 		.word	.LC37
 4830 0b34 00000000 		.word	.LANCHOR6
 4831 0b38 F8000000 		.word	.LC38
 4832 0b3c 00010000 		.word	.LC39
 4833 0b40 14010000 		.word	.LC40
 4834 0b44 28010000 		.word	.LC41
 4835 0b48 3C010000 		.word	.LC42
 4836 0b4c 20000000 		.word	.LC26
 4837 0b50 04000000 		.word	.LC23
 4838 0b54 B0000000 		.word	.LC32
 4839 0b58 54010000 		.word	.LC43
 4840 0b5c 68010000 		.word	.LC44
 4841 0b60 00000000 		.word	gHDMI_Index
 4842 0b64 78010000 		.word	.LC45
 4843 0b68 8C010000 		.word	.LC46
 4844 0b6c 90010000 		.word	.LC47
 4845 0b70 98010000 		.word	.LC48
 4846 0b74 9C010000 		.word	.LC49
 4847 0b78 A0010000 		.word	.LC50
 4848 0b7c AC010000 		.word	.LC51
 4849 0b80 B4010000 		.word	.LC52
 4850 0b84 C0010000 		.word	.LC53
 4851 0b88 C8010000 		.word	.LC54
 4852 0b8c 00000000 		.word	.LANCHOR11
 4853 0b90 D0010000 		.word	.LC55
 4854 0b94 EC010000 		.word	.LC56
 4855 0b98 00000000 		.word	TP_InputMode
 4856 0b9c F0010000 		.word	.LC57
 4857 0ba0 04020000 		.word	.LC58
 4858 0ba4 08020000 		.word	.LC59
 4859 0ba8 0C020000 		.word	.LC60
 4860 0bac 10020000 		.word	.LC61
 4861              	.L198:
ARM GAS  /tmp/ccwHfacM.s 			page 140


1453:VS4210/monitor.c **** 
 4862              		.loc 1 1453 0
 4863 0bb0 8E49     		ldr	r1, .L243
 4864 0bb2 2046     		mov	r0, r4
 4865 0bb4 FFF7FEFF 		bl	stricmp
 4866              	.LVL773:
 4867 0bb8 38B9     		cbnz	r0, .L199
1455:VS4210/monitor.c **** 		
 4868              		.loc 1 1455 0
 4869 0bba 8D4B     		ldr	r3, .L243+4
 4870 0bbc 1870     		strb	r0, [r3]
1457:VS4210/monitor.c **** 		HS_Select_Win(0);
 4871              		.loc 1 1457 0
 4872 0bbe 8D4B     		ldr	r3, .L243+8
 4873 0bc0 1870     		strb	r0, [r3]
1458:VS4210/monitor.c **** 	}
 4874              		.loc 1 1458 0
 4875 0bc2 FFF7FEFF 		bl	HS_Select_Win
 4876              	.LVL774:
 4877 0bc6 FFF700BB 		b	.L156
 4878              	.L199:
1460:VS4210/monitor.c **** 
 4879              		.loc 1 1460 0
 4880 0bca 8B49     		ldr	r1, .L243+12
 4881 0bcc 2046     		mov	r0, r4
 4882 0bce FFF7FEFF 		bl	stricmp
 4883              	.LVL775:
 4884 0bd2 28BB     		cbnz	r0, .L200
1462:VS4210/monitor.c **** 	
 4885              		.loc 1 1462 0
 4886 0bd4 864B     		ldr	r3, .L243+4
 4887 0bd6 0022     		movs	r2, #0
 4888 0bd8 1A70     		strb	r2, [r3]
1464:VS4210/monitor.c **** 		HS_Select_Win(1);
 4889              		.loc 1 1464 0
 4890 0bda 0120     		movs	r0, #1
 4891 0bdc 854B     		ldr	r3, .L243+8
 4892 0bde 1870     		strb	r0, [r3]
1465:VS4210/monitor.c **** 		Printf("\r\nTP_InputMode = %d", (WORD)TP_InputMode);
 4893              		.loc 1 1465 0
 4894 0be0 FFF7FEFF 		bl	HS_Select_Win
 4895              	.LVL776:
1466:VS4210/monitor.c **** 		
 4896              		.loc 1 1466 0
 4897 0be4 854C     		ldr	r4, .L243+16
 4898 0be6 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4899 0be8 8548     		ldr	r0, .L243+20
 4900 0bea FFF7FEFF 		bl	Printf
 4901              	.LVL777:
1468:VS4210/monitor.c **** 			TP_bt1120_720P_1080P_mode0_w0();
 4902              		.loc 1 1468 0
 4903 0bee 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4904 0bf0 052B     		cmp	r3, #5
 4905 0bf2 03D1     		bne	.L201
1469:VS4210/monitor.c **** 			else if(TP_InputMode==6)
 4906              		.loc 1 1469 0
 4907 0bf4 FFF7FEFF 		bl	TP_bt1120_720P_1080P_mode0_w0
ARM GAS  /tmp/ccwHfacM.s 			page 141


 4908              	.LVL778:
 4909 0bf8 FFF7E7BA 		b	.L156
 4910              	.L201:
1470:VS4210/monitor.c **** 				TP_bt1120_1080P_1080P_mode0_w0();
 4911              		.loc 1 1470 0
 4912 0bfc 062B     		cmp	r3, #6
 4913 0bfe 03D1     		bne	.L202
1471:VS4210/monitor.c **** 			else if(TP_InputMode==0)
 4914              		.loc 1 1471 0
 4915 0c00 FFF7FEFF 		bl	TP_bt1120_1080P_1080P_mode0_w0
 4916              	.LVL779:
 4917 0c04 FFF7E1BA 		b	.L156
 4918              	.L202:
1472:VS4210/monitor.c **** 				TP_bt1120_NTSC_1080P_mode0_w0();
 4919              		.loc 1 1472 0
 4920 0c08 1BB9     		cbnz	r3, .L203
1473:VS4210/monitor.c **** 			else if(TP_InputMode==1)
 4921              		.loc 1 1473 0
 4922 0c0a FFF7FEFF 		bl	TP_bt1120_NTSC_1080P_mode0_w0
 4923              	.LVL780:
 4924 0c0e FFF7DCBA 		b	.L156
 4925              	.L203:
1474:VS4210/monitor.c **** 				TP_bt1120_PAL_1080P_mode0_w0();
 4926              		.loc 1 1474 0
 4927 0c12 012B     		cmp	r3, #1
 4928 0c14 7FF4D9AA 		bne	.L156
1475:VS4210/monitor.c **** 			
 4929              		.loc 1 1475 0
 4930 0c18 FFF7FEFF 		bl	TP_bt1120_PAL_1080P_mode0_w0
 4931              	.LVL781:
 4932 0c1c FFF7D5BA 		b	.L156
 4933              	.L200:
1479:VS4210/monitor.c **** 		extern tByte bSignal[4] ;
 4934              		.loc 1 1479 0
 4935 0c20 7849     		ldr	r1, .L243+24
 4936 0c22 2046     		mov	r0, r4
 4937 0c24 FFF7FEFF 		bl	stricmp
 4938              	.LVL782:
 4939 0c28 A8B9     		cbnz	r0, .L204
 4940              	.LBB5:
1481:VS4210/monitor.c **** 		Printf("\r\nbSignal[1] = %d", (WORD) bSignal[1]);
 4941              		.loc 1 1481 0
 4942 0c2a 774C     		ldr	r4, .L243+28
 4943 0c2c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4944 0c2e 7748     		ldr	r0, .L243+32
 4945 0c30 FFF7FEFF 		bl	Printf
 4946              	.LVL783:
1482:VS4210/monitor.c **** 		Printf("\r\nbSignal[2] = %d", (WORD) bSignal[2]);
 4947              		.loc 1 1482 0
 4948 0c34 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 4949 0c36 7648     		ldr	r0, .L243+36
 4950 0c38 FFF7FEFF 		bl	Printf
 4951              	.LVL784:
1483:VS4210/monitor.c **** 		Printf("\r\nbSignal[3] = %d", (WORD) bSignal[3]);
 4952              		.loc 1 1483 0
 4953 0c3c A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 4954 0c3e 7548     		ldr	r0, .L243+40
ARM GAS  /tmp/ccwHfacM.s 			page 142


 4955 0c40 FFF7FEFF 		bl	Printf
 4956              	.LVL785:
1484:VS4210/monitor.c **** 
 4957              		.loc 1 1484 0
 4958 0c44 E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 4959 0c46 7448     		ldr	r0, .L243+44
 4960 0c48 FFF7FEFF 		bl	Printf
 4961              	.LVL786:
1486:VS4210/monitor.c **** 							
 4962              		.loc 1 1486 0
 4963 0c4c 684B     		ldr	r3, .L243+4
 4964 0c4e 0022     		movs	r2, #0
 4965 0c50 1A70     		strb	r2, [r3]
 4966              	.LBE5:
 4967 0c52 FFF7BABA 		b	.L156
 4968              	.L204:
1489:VS4210/monitor.c **** 
 4969              		.loc 1 1489 0
 4970 0c56 7149     		ldr	r1, .L243+48
 4971 0c58 2046     		mov	r0, r4
 4972 0c5a FFF7FEFF 		bl	stricmp
 4973              	.LVL787:
 4974 0c5e 30B9     		cbnz	r0, .L205
1491:VS4210/monitor.c **** 		SET_HDMI_SYNC_PARA();
 4975              		.loc 1 1491 0
 4976 0c60 634B     		ldr	r3, .L243+4
 4977 0c62 0022     		movs	r2, #0
 4978 0c64 1A70     		strb	r2, [r3]
1492:VS4210/monitor.c **** 
 4979              		.loc 1 1492 0
 4980 0c66 FFF7FEFF 		bl	SET_HDMI_SYNC_PARA
 4981              	.LVL788:
 4982 0c6a FFF7AEBA 		b	.L156
 4983              	.L205:
1495:VS4210/monitor.c **** 
 4984              		.loc 1 1495 0
 4985 0c6e 6C49     		ldr	r1, .L243+52
 4986 0c70 2046     		mov	r0, r4
 4987 0c72 FFF7FEFF 		bl	stricmp
 4988              	.LVL789:
 4989 0c76 30B9     		cbnz	r0, .L206
1497:VS4210/monitor.c **** 		SET_AHD_SYNC_PARA();
 4990              		.loc 1 1497 0
 4991 0c78 5D4B     		ldr	r3, .L243+4
 4992 0c7a 0022     		movs	r2, #0
 4993 0c7c 1A70     		strb	r2, [r3]
1498:VS4210/monitor.c **** 
 4994              		.loc 1 1498 0
 4995 0c7e FFF7FEFF 		bl	SET_AHD_SYNC_PARA
 4996              	.LVL790:
 4997 0c82 FFF7A2BA 		b	.L156
 4998              	.L206:
1501:VS4210/monitor.c **** 
 4999              		.loc 1 1501 0
 5000 0c86 6749     		ldr	r1, .L243+56
 5001 0c88 2046     		mov	r0, r4
 5002 0c8a FFF7FEFF 		bl	stricmp
ARM GAS  /tmp/ccwHfacM.s 			page 143


 5003              	.LVL791:
 5004 0c8e 18B9     		cbnz	r0, .L207
1503:VS4210/monitor.c **** 
 5005              		.loc 1 1503 0
 5006 0c90 FFF7FEFF 		bl	Init_TP280x_RegSet
 5007              	.LVL792:
 5008 0c94 FFF799BA 		b	.L156
 5009              	.L207:
1506:VS4210/monitor.c **** 
 5010              		.loc 1 1506 0
 5011 0c98 6349     		ldr	r1, .L243+60
 5012 0c9a 2046     		mov	r0, r4
 5013 0c9c FFF7FEFF 		bl	stricmp
 5014              	.LVL793:
 5015 0ca0 30B9     		cbnz	r0, .L208
1508:VS4210/monitor.c **** 		SET_HDMI_640_480P_PARA();
 5016              		.loc 1 1508 0
 5017 0ca2 534B     		ldr	r3, .L243+4
 5018 0ca4 0022     		movs	r2, #0
 5019 0ca6 1A70     		strb	r2, [r3]
1509:VS4210/monitor.c **** 
 5020              		.loc 1 1509 0
 5021 0ca8 FFF7FEFF 		bl	SET_HDMI_640_480P_PARA
 5022              	.LVL794:
 5023 0cac FFF78DBA 		b	.L156
 5024              	.L208:
1512:VS4210/monitor.c **** 
 5025              		.loc 1 1512 0
 5026 0cb0 5E49     		ldr	r1, .L243+64
 5027 0cb2 2046     		mov	r0, r4
 5028 0cb4 FFF7FEFF 		bl	stricmp
 5029              	.LVL795:
 5030 0cb8 30B9     		cbnz	r0, .L209
1514:VS4210/monitor.c **** 		SET_VS4210_720_480_out();
 5031              		.loc 1 1514 0
 5032 0cba 4D4B     		ldr	r3, .L243+4
 5033 0cbc 0022     		movs	r2, #0
 5034 0cbe 1A70     		strb	r2, [r3]
1515:VS4210/monitor.c **** 		
 5035              		.loc 1 1515 0
 5036 0cc0 FFF7FEFF 		bl	SET_VS4210_720_480_out
 5037              	.LVL796:
 5038 0cc4 FFF781BA 		b	.L156
 5039              	.L209:
1518:VS4210/monitor.c **** 
 5040              		.loc 1 1518 0
 5041 0cc8 5949     		ldr	r1, .L243+68
 5042 0cca 2046     		mov	r0, r4
 5043 0ccc FFF7FEFF 		bl	stricmp
 5044              	.LVL797:
 5045 0cd0 88B9     		cbnz	r0, .L210
1520:VS4210/monitor.c **** 		TVI_Command=0x0F;
 5046              		.loc 1 1520 0
 5047 0cd2 0023     		movs	r3, #0
 5048 0cd4 464A     		ldr	r2, .L243+4
 5049 0cd6 1370     		strb	r3, [r2]
1521:VS4210/monitor.c **** 		presetNum=0;
ARM GAS  /tmp/ccwHfacM.s 			page 144


 5050              		.loc 1 1521 0
 5051 0cd8 564A     		ldr	r2, .L243+72
 5052 0cda 0F21     		movs	r1, #15
 5053 0cdc 1170     		strb	r1, [r2]
1522:VS4210/monitor.c **** 		TVI_speed=0;
 5054              		.loc 1 1522 0
 5055 0cde 564A     		ldr	r2, .L243+76
 5056 0ce0 1370     		strb	r3, [r2]
1523:VS4210/monitor.c **** 		TVI_Chksum=0xC5;
 5057              		.loc 1 1523 0
 5058 0ce2 564A     		ldr	r2, .L243+80
 5059 0ce4 1370     		strb	r3, [r2]
1524:VS4210/monitor.c **** 		ptztxflag=1;
 5060              		.loc 1 1524 0
 5061 0ce6 564B     		ldr	r3, .L243+84
 5062 0ce8 C522     		movs	r2, #197
 5063 0cea 1A70     		strb	r2, [r3]
1525:VS4210/monitor.c **** 		
 5064              		.loc 1 1525 0
 5065 0cec 554B     		ldr	r3, .L243+88
 5066 0cee 0122     		movs	r2, #1
 5067 0cf0 1A60     		str	r2, [r3]
 5068 0cf2 FFF76ABA 		b	.L156
 5069              	.L210:
1528:VS4210/monitor.c **** 
 5070              		.loc 1 1528 0
 5071 0cf6 5449     		ldr	r1, .L243+92
 5072 0cf8 2046     		mov	r0, r4
 5073 0cfa FFF7FEFF 		bl	stricmp
 5074              	.LVL798:
 5075 0cfe 90B9     		cbnz	r0, .L211
1530:VS4210/monitor.c **** 		TVI_Command=0x06;
 5076              		.loc 1 1530 0
 5077 0d00 0023     		movs	r3, #0
 5078 0d02 3B4A     		ldr	r2, .L243+4
 5079 0d04 1370     		strb	r3, [r2]
1531:VS4210/monitor.c **** 		presetNum=0x1F;
 5080              		.loc 1 1531 0
 5081 0d06 4B4A     		ldr	r2, .L243+72
 5082 0d08 0621     		movs	r1, #6
 5083 0d0a 1170     		strb	r1, [r2]
1532:VS4210/monitor.c **** 		TVI_speed=0;
 5084              		.loc 1 1532 0
 5085 0d0c 4A4A     		ldr	r2, .L243+76
 5086 0d0e 1F21     		movs	r1, #31
 5087 0d10 1170     		strb	r1, [r2]
1533:VS4210/monitor.c **** 		TVI_Chksum=0xDB;
 5088              		.loc 1 1533 0
 5089 0d12 4A4A     		ldr	r2, .L243+80
 5090 0d14 1370     		strb	r3, [r2]
1534:VS4210/monitor.c **** 		ptztxflag=1;
 5091              		.loc 1 1534 0
 5092 0d16 4A4B     		ldr	r3, .L243+84
 5093 0d18 DB22     		movs	r2, #219
 5094 0d1a 1A70     		strb	r2, [r3]
1535:VS4210/monitor.c **** 		
 5095              		.loc 1 1535 0
ARM GAS  /tmp/ccwHfacM.s 			page 145


 5096 0d1c 494B     		ldr	r3, .L243+88
 5097 0d1e 0122     		movs	r2, #1
 5098 0d20 1A60     		str	r2, [r3]
 5099 0d22 FFF752BA 		b	.L156
 5100              	.L211:
1538:VS4210/monitor.c **** 
 5101              		.loc 1 1538 0
 5102 0d26 4949     		ldr	r1, .L243+96
 5103 0d28 2046     		mov	r0, r4
 5104 0d2a FFF7FEFF 		bl	stricmp
 5105              	.LVL799:
 5106 0d2e 90B9     		cbnz	r0, .L212
1540:VS4210/monitor.c **** 		TVI_Command=0x07;
 5107              		.loc 1 1540 0
 5108 0d30 0023     		movs	r3, #0
 5109 0d32 2F4A     		ldr	r2, .L243+4
 5110 0d34 1370     		strb	r3, [r2]
1541:VS4210/monitor.c **** 		presetNum=0x1F;
 5111              		.loc 1 1541 0
 5112 0d36 3F4A     		ldr	r2, .L243+72
 5113 0d38 0721     		movs	r1, #7
 5114 0d3a 1170     		strb	r1, [r2]
1542:VS4210/monitor.c **** 		TVI_speed=0;
 5115              		.loc 1 1542 0
 5116 0d3c 3E4A     		ldr	r2, .L243+76
 5117 0d3e 1F21     		movs	r1, #31
 5118 0d40 1170     		strb	r1, [r2]
1543:VS4210/monitor.c **** 		TVI_Chksum=0xDC;
 5119              		.loc 1 1543 0
 5120 0d42 3E4A     		ldr	r2, .L243+80
 5121 0d44 1370     		strb	r3, [r2]
1544:VS4210/monitor.c **** 		ptztxflag=1;
 5122              		.loc 1 1544 0
 5123 0d46 3E4B     		ldr	r3, .L243+84
 5124 0d48 DC22     		movs	r2, #220
 5125 0d4a 1A70     		strb	r2, [r3]
1545:VS4210/monitor.c **** 
 5126              		.loc 1 1545 0
 5127 0d4c 3D4B     		ldr	r3, .L243+88
 5128 0d4e 0122     		movs	r2, #1
 5129 0d50 1A60     		str	r2, [r3]
 5130 0d52 FFF73ABA 		b	.L156
 5131              	.L212:
1547:VS4210/monitor.c **** 
 5132              		.loc 1 1547 0
 5133 0d56 3E49     		ldr	r1, .L243+100
 5134 0d58 2046     		mov	r0, r4
 5135 0d5a FFF7FEFF 		bl	stricmp
 5136              	.LVL800:
 5137 0d5e 90B9     		cbnz	r0, .L213
1549:VS4210/monitor.c **** 		TVI_Command=0x09;
 5138              		.loc 1 1549 0
 5139 0d60 0023     		movs	r3, #0
 5140 0d62 234A     		ldr	r2, .L243+4
 5141 0d64 1370     		strb	r3, [r2]
1550:VS4210/monitor.c **** 		presetNum=0;
 5142              		.loc 1 1550 0
ARM GAS  /tmp/ccwHfacM.s 			page 146


 5143 0d66 334A     		ldr	r2, .L243+72
 5144 0d68 0921     		movs	r1, #9
 5145 0d6a 1170     		strb	r1, [r2]
1551:VS4210/monitor.c **** 		TVI_speed=0x1F;
 5146              		.loc 1 1551 0
 5147 0d6c 324A     		ldr	r2, .L243+76
 5148 0d6e 1370     		strb	r3, [r2]
1552:VS4210/monitor.c **** 		TVI_Chksum=0xDE;
 5149              		.loc 1 1552 0
 5150 0d70 324B     		ldr	r3, .L243+80
 5151 0d72 1F22     		movs	r2, #31
 5152 0d74 1A70     		strb	r2, [r3]
1553:VS4210/monitor.c **** 		ptztxflag=1;
 5153              		.loc 1 1553 0
 5154 0d76 324B     		ldr	r3, .L243+84
 5155 0d78 DE22     		movs	r2, #222
 5156 0d7a 1A70     		strb	r2, [r3]
1554:VS4210/monitor.c **** 
 5157              		.loc 1 1554 0
 5158 0d7c 314B     		ldr	r3, .L243+88
 5159 0d7e 0122     		movs	r2, #1
 5160 0d80 1A60     		str	r2, [r3]
 5161 0d82 FFF722BA 		b	.L156
 5162              	.L213:
1556:VS4210/monitor.c **** 
 5163              		.loc 1 1556 0
 5164 0d86 3349     		ldr	r1, .L243+104
 5165 0d88 2046     		mov	r0, r4
 5166 0d8a FFF7FEFF 		bl	stricmp
 5167              	.LVL801:
 5168 0d8e 90B9     		cbnz	r0, .L214
1558:VS4210/monitor.c **** 		TVI_Command=0x08;
 5169              		.loc 1 1558 0
 5170 0d90 0023     		movs	r3, #0
 5171 0d92 174A     		ldr	r2, .L243+4
 5172 0d94 1370     		strb	r3, [r2]
1559:VS4210/monitor.c **** 		presetNum=0;
 5173              		.loc 1 1559 0
 5174 0d96 274A     		ldr	r2, .L243+72
 5175 0d98 0821     		movs	r1, #8
 5176 0d9a 1170     		strb	r1, [r2]
1560:VS4210/monitor.c **** 		TVI_speed=0x1F;
 5177              		.loc 1 1560 0
 5178 0d9c 264A     		ldr	r2, .L243+76
 5179 0d9e 1370     		strb	r3, [r2]
1561:VS4210/monitor.c **** 		TVI_Chksum=0xDD;
 5180              		.loc 1 1561 0
 5181 0da0 264B     		ldr	r3, .L243+80
 5182 0da2 1F22     		movs	r2, #31
 5183 0da4 1A70     		strb	r2, [r3]
1562:VS4210/monitor.c **** 		ptztxflag=1;
 5184              		.loc 1 1562 0
 5185 0da6 264B     		ldr	r3, .L243+84
 5186 0da8 DD22     		movs	r2, #221
 5187 0daa 1A70     		strb	r2, [r3]
1563:VS4210/monitor.c **** 		
 5188              		.loc 1 1563 0
ARM GAS  /tmp/ccwHfacM.s 			page 147


 5189 0dac 254B     		ldr	r3, .L243+88
 5190 0dae 0122     		movs	r2, #1
 5191 0db0 1A60     		str	r2, [r3]
 5192 0db2 FFF70ABA 		b	.L156
 5193              	.L214:
1566:VS4210/monitor.c **** 			Monitor_flag=_FALSE;
 5194              		.loc 1 1566 0
 5195 0db6 2849     		ldr	r1, .L243+108
 5196 0db8 2046     		mov	r0, r4
 5197 0dba FFF7FEFF 		bl	stricmp
 5198              	.LVL802:
 5199 0dbe 80B9     		cbnz	r0, .L215
1567:VS4210/monitor.c **** 		TVI_Command=0x14;
 5200              		.loc 1 1567 0
 5201 0dc0 0023     		movs	r3, #0
 5202 0dc2 0B4A     		ldr	r2, .L243+4
 5203 0dc4 1370     		strb	r3, [r2]
1568:VS4210/monitor.c **** 			presetNum=0;
 5204              		.loc 1 1568 0
 5205 0dc6 1B4A     		ldr	r2, .L243+72
 5206 0dc8 1421     		movs	r1, #20
 5207 0dca 1170     		strb	r1, [r2]
1569:VS4210/monitor.c **** 			TVI_speed=0;
 5208              		.loc 1 1569 0
 5209 0dcc 1A4A     		ldr	r2, .L243+76
 5210 0dce 1370     		strb	r3, [r2]
1570:VS4210/monitor.c **** 			TVI_Chksum=0;
 5211              		.loc 1 1570 0
 5212 0dd0 1A4A     		ldr	r2, .L243+80
 5213 0dd2 1370     		strb	r3, [r2]
1571:VS4210/monitor.c **** 				ptztxflag=1;	
 5214              		.loc 1 1571 0
 5215 0dd4 1A4A     		ldr	r2, .L243+84
 5216 0dd6 1370     		strb	r3, [r2]
1572:VS4210/monitor.c **** 			}
 5217              		.loc 1 1572 0
 5218 0dd8 1A4B     		ldr	r3, .L243+88
 5219 0dda 0122     		movs	r2, #1
 5220 0ddc 1A60     		str	r2, [r3]
 5221 0dde FFF7F4B9 		b	.L156
 5222              	.L215:
1959:VS4210/monitor.c **** 	}
 5223              		.loc 1 1959 0
 5224 0de2 1E48     		ldr	r0, .L243+112
 5225 0de4 FFF7FEFF 		bl	Printf
 5226              	.LVL803:
 5227 0de8 FFF7EFB9 		b	.L156
 5228              	.L244:
 5229              		.align	2
 5230              	.L243:
 5231 0dec 14020000 		.word	.LC62
 5232 0df0 00000000 		.word	.LANCHOR6
 5233 0df4 00000000 		.word	SelectInputMode
 5234 0df8 1C020000 		.word	.LC63
 5235 0dfc 00000000 		.word	TP_InputMode
 5236 0e00 F0010000 		.word	.LC57
 5237 0e04 20020000 		.word	.LC64
ARM GAS  /tmp/ccwHfacM.s 			page 148


 5238 0e08 00000000 		.word	bSignal
 5239 0e0c 24020000 		.word	.LC65
 5240 0e10 38020000 		.word	.LC66
 5241 0e14 4C020000 		.word	.LC67
 5242 0e18 60020000 		.word	.LC68
 5243 0e1c 74020000 		.word	.LC69
 5244 0e20 7C020000 		.word	.LC70
 5245 0e24 84020000 		.word	.LC71
 5246 0e28 8C020000 		.word	.LC72
 5247 0e2c 94020000 		.word	.LC73
 5248 0e30 9C020000 		.word	.LC74
 5249 0e34 00000000 		.word	TVI_Command
 5250 0e38 00000000 		.word	presetNum
 5251 0e3c 00000000 		.word	TVI_speed
 5252 0e40 00000000 		.word	TVI_Chksum
 5253 0e44 00000000 		.word	ptztxflag
 5254 0e48 A0020000 		.word	.LC75
 5255 0e4c A4020000 		.word	.LC76
 5256 0e50 A8020000 		.word	.LC77
 5257 0e54 AC020000 		.word	.LC78
 5258 0e58 B0020000 		.word	.LC79
 5259 0e5c B4020000 		.word	.LC80
 5260              		.cfi_endproc
 5261              	.LFE92:
 5263              		.global	AccessEnable
 5264              		.global	bytVersionFlag
 5265              		.global	RS2_Xbusy
 5266              		.global	RS_Xbusy
 5267              		.global	RS2_out
 5268              		.global	RS2_in
 5269              		.global	RS_out
 5270              		.global	RS_in
 5271              		.comm	DVR_buf,30,4
 5272              		.comm	RS2_buf,200,4
 5273              		.comm	RS_buf,30,4
 5274              		.global	Monitor_I2C
 5275              		.global	Monitor_flag
 5276              		.global	echo
 5277              		.global	argc
 5278              		.comm	argv,28,4
 5279              		.comm	monstr,30,4
 5280              		.comm	MonWdata,1,1
 5281              		.comm	MonRdata,1,1
 5282              		.comm	MonIndex,1,1
 5283              		.global	MonAddress
 5284              		.comm	newInRes,4,4
 5285              		.section	.bss.Monitor_flag,"aw",%nobits
 5286              		.set	.LANCHOR6,. + 0
 5289              	Monitor_flag:
 5290 0000 00       		.space	1
 5291              		.section	.bss.RS2_Xbusy,"aw",%nobits
 5292              		.align	2
 5295              	RS2_Xbusy:
 5296 0000 00000000 		.space	4
 5297              		.section	.bss.RS2_in,"aw",%nobits
 5298              		.set	.LANCHOR2,. + 0
 5301              	RS2_in:
ARM GAS  /tmp/ccwHfacM.s 			page 149


 5302 0000 00       		.space	1
 5303              		.section	.bss.RS2_out,"aw",%nobits
 5304              		.set	.LANCHOR3,. + 0
 5307              	RS2_out:
 5308 0000 00       		.space	1
 5309              		.section	.bss.RS_Xbusy,"aw",%nobits
 5310              		.align	2
 5313              	RS_Xbusy:
 5314 0000 00000000 		.space	4
 5315              		.section	.bss.RS_in,"aw",%nobits
 5316              		.set	.LANCHOR0,. + 0
 5319              	RS_in:
 5320 0000 00       		.space	1
 5321              		.section	.bss.RS_out,"aw",%nobits
 5322              		.set	.LANCHOR1,. + 0
 5325              	RS_out:
 5326 0000 00       		.space	1
 5327              		.section	.bss.argc,"aw",%nobits
 5328              		.set	.LANCHOR8,. + 0
 5331              	argc:
 5332 0000 00       		.space	1
 5333              		.section	.bss.bytVersionFlag,"aw",%nobits
 5334              		.set	.LANCHOR4,. + 0
 5337              	bytVersionFlag:
 5338 0000 00       		.space	1
 5339              		.section	.bss.comment.8585,"aw",%nobits
 5340              		.set	.LANCHOR7,. + 0
 5343              	comment.8585:
 5344 0000 00       		.space	1
 5345              		.section	.bss.incnt.8586,"aw",%nobits
 5346              		.set	.LANCHOR9,. + 0
 5349              	incnt.8586:
 5350 0000 00       		.space	1
 5351              		.section	.bss.last_argc.8587,"aw",%nobits
 5352              		.set	.LANCHOR10,. + 0
 5355              	last_argc.8587:
 5356 0000 00       		.space	1
 5357              		.section	.data.AccessEnable,"aw",%progbits
 5358              		.align	2
 5359              		.set	.LANCHOR11,. + 0
 5362              	AccessEnable:
 5363 0000 01000000 		.word	1
 5364              		.section	.data.MonAddress,"aw",%progbits
 5367              	MonAddress:
 5368 0000 8A       		.byte	-118
 5369              		.section	.data.Monitor_I2C,"aw",%progbits
 5370              		.set	.LANCHOR5,. + 0
 5373              	Monitor_I2C:
 5374 0000 40       		.byte	64
 5375              		.section	.data.echo,"aw",%progbits
 5376              		.align	2
 5379              	echo:
 5380 0000 01000000 		.word	1
 5381              		.section	.rodata.MonHelp.str1.4,"aMS",%progbits,1
 5382              		.align	2
 5383              	.LC9:
 5384 0000 0D0A3D3D 		.ascii	"\015\012==========================================="
ARM GAS  /tmp/ccwHfacM.s 			page 150


 5384      3D3D3D3D 
 5384      3D3D3D3D 
 5384      3D3D3D3D 
 5384      3D3D3D3D 
 5385 002d 3D3D3D3D 		.ascii	"============\000"
 5385      3D3D3D3D 
 5385      3D3D3D3D 
 5385      00
 5386 003a 0000     		.space	2
 5387              	.LC10:
 5388 003c 0D0A3E3E 		.ascii	"\015\012>>>   Welcome to TOA TAAH02 console\011 Rev"
 5388      3E202020 
 5388      57656C63 
 5388      6F6D6520 
 5388      746F2054 
 5389 0066 20312E30 		.ascii	" 1.00   <<<\000"
 5389      30202020 
 5389      3C3C3C00 
 5390 0072 0000     		.space	2
 5391              	.LC11:
 5392 0074 0D0A2052 		.ascii	"\015\012 R [ii] \011\011   ; Read Register data\000"
 5392      205B6969 
 5392      5D200909 
 5392      2020203B 
 5392      20526561 
 5393              	.LC12:
 5394 0098 0D0A2057 		.ascii	"\015\012 W [ii] [dd]\011\011   ; Write Register dat"
 5394      205B6969 
 5394      5D205B64 
 5394      645D0909 
 5394      2020203B 
 5395 00bf 6100     		.ascii	"a\000"
 5396 00c1 000000   		.space	3
 5397              	.LC13:
 5398 00c4 0D0A2044 		.ascii	"\015\012 Dump [ii] [cc] \011   ; Dump [first][end] "
 5398      756D7020 
 5398      5B69695D 
 5398      205B6363 
 5398      5D200920 
 5399 00ee 5265672E 		.ascii	"Reg.\000"
 5399      00
 5400 00f3 00       		.space	1
 5401              	.LC14:
 5402 00f4 0D0A2049 		.ascii	"\015\012 I2C [aa]\011\011   ; Change I2C address\000"
 5402      3243205B 
 5402      61615D09 
 5402      09202020 
 5402      3B204368 
 5403 0119 000000   		.space	3
 5404              	.LC15:
 5405 011c 0D0A203C 		.ascii	"\015\012 < VS4210:40 TP2824:88 EEPROM:0xA0 HDMI:90 "
 5405      20565334 
 5405      3231303A 
 5405      34302054 
 5405      50323832 
 5406 0149 3E00     		.ascii	">\000"
 5407 014b 00       		.space	1
ARM GAS  /tmp/ccwHfacM.s 			page 151


 5408              	.LC16:
 5409 014c 0D0A2057 		.ascii	"\015\012 WIN [ii] \011           ; Change Input Sou"
 5409      494E205B 
 5409      69695D20 
 5409      09202020 
 5409      20202020 
 5410 0176 72636500 		.ascii	"rce\000"
 5411 017a 0000     		.space	2
 5412              	.LC17:
 5413 017c 0D0A2041 		.ascii	"\015\012 Access [0,1]\011\011   ; TP2824 Access OFF"
 5413      63636573 
 5413      73205B30 
 5413      2C315D09 
 5413      09202020 
 5414 01a3 2F4F4E00 		.ascii	"/ON\000"
 5415 01a7 00       		.space	1
 5416              	.LC18:
 5417 01a8 0D0A00   		.ascii	"\015\012\000"
 5418              		.section	.rodata.MonIncDecI2C.str1.4,"aMS",%progbits,1
 5419              		.align	2
 5420              	.LC4:
 5421 0000 0D0A4545 		.ascii	"\015\012EEPROM Write addr=%02x  data=%02x\000"
 5421      50524F4D 
 5421      20577269 
 5421      74652061 
 5421      6464723D 
 5422              	.LC5:
 5423 0024 0D0A5653 		.ascii	"\015\012VS4210 Write addr=%02x  data=%02x\000"
 5423      34323130 
 5423      20577269 
 5423      74652061 
 5423      6464723D 
 5424              	.LC6:
 5425 0048 0D0A5653 		.ascii	"\015\012VS8812 Write addr=%02x  data=%02x\000"
 5425      38383132 
 5425      20577269 
 5425      74652061 
 5425      6464723D 
 5426              	.LC7:
 5427 006c 0D0A5450 		.ascii	"\015\012TP2824  Read addr=%02x  data=%02x\000"
 5427      32383234 
 5427      20205265 
 5427      61642061 
 5427      6464723D 
 5428              	.LC8:
 5429 0090 0D0A4954 		.ascii	"\015\012IT66021  Read addr=%02x  data=%02x\000"
 5429      36363032 
 5429      31202052 
 5429      65616420 
 5429      61646472 
 5430              		.section	.rodata.Monitor.str1.4,"aMS",%progbits,1
 5431              		.align	2
 5432              	.LC22:
 5433 0000 5700     		.ascii	"W\000"
 5434 0002 0000     		.space	2
 5435              	.LC23:
 5436 0004 0D0A4932 		.ascii	"\015\012I2C addr. error\000"
ARM GAS  /tmp/ccwHfacM.s 			page 152


 5436      43206164 
 5436      64722E20 
 5436      6572726F 
 5436      7200
 5437 0016 0000     		.space	2
 5438              	.LC24:
 5439 0018 2900     		.ascii	")\000"
 5440 001a 0000     		.space	2
 5441              	.LC25:
 5442 001c 5200     		.ascii	"R\000"
 5443 001e 0000     		.space	2
 5444              	.LC26:
 5445 0020 0D0A4545 		.ascii	"\015\012EEPROM  Read addr=%02x  data=%02x\000"
 5445      50524F4D 
 5445      20205265 
 5445      61642061 
 5445      6464723D 
 5446              	.LC27:
 5447 0044 0D0A5653 		.ascii	"\015\012VS4210  Read addr=%02x  data=%02x\000"
 5447      34323130 
 5447      20205265 
 5447      61642061 
 5447      6464723D 
 5448              	.LC28:
 5449 0068 0D0A5653 		.ascii	"\015\012VS8812  Read addr=%02x  data=%02x\000"
 5449      38383132 
 5449      20205265 
 5449      61642061 
 5449      6464723D 
 5450              	.LC29:
 5451 008c 465700   		.ascii	"FW\000"
 5452 008f 00       		.space	1
 5453              	.LC30:
 5454 0090 0D0A5441 		.ascii	"\015\012TAAH02 FW Version:V%04x\000"
 5454      41483032 
 5454      20465720 
 5454      56657273 
 5454      696F6E3A 
 5455 00aa 0000     		.space	2
 5456              	.LC31:
 5457 00ac 565200   		.ascii	"VR\000"
 5458 00af 00       		.space	1
 5459              	.LC32:
 5460 00b0 0D0A3430 		.ascii	"\015\01240,%02x,%02x\000"
 5460      2C253032 
 5460      782C2530 
 5460      327800
 5461 00bf 00       		.space	1
 5462              	.LC33:
 5463 00c0 565700   		.ascii	"VW\000"
 5464 00c3 00       		.space	1
 5465              	.LC34:
 5466 00c4 2800     		.ascii	"(\000"
 5467 00c6 0000     		.space	2
 5468              	.LC35:
 5469 00c8 49324300 		.ascii	"I2C\000"
 5470              	.LC36:
ARM GAS  /tmp/ccwHfacM.s 			page 153


 5471 00cc 0D0A4368 		.ascii	"\015\012Change I2C addr. from %02x to %02x\000"
 5471      616E6765 
 5471      20493243 
 5471      20616464 
 5471      722E2066 
 5472 00f1 000000   		.space	3
 5473              	.LC37:
 5474 00f4 5100     		.ascii	"Q\000"
 5475 00f6 0000     		.space	2
 5476              	.LC38:
 5477 00f8 44554D50 		.ascii	"DUMP\000"
 5477      00
 5478 00fd 000000   		.space	3
 5479              	.LC39:
 5480 0100 0D0A4455 		.ascii	"\015\012DUMP EEPROM Reg..\000"
 5480      4D502045 
 5480      4550524F 
 5480      4D205265 
 5480      672E2E00 
 5481              	.LC40:
 5482 0114 0D0A4455 		.ascii	"\015\012DUMP VS4210 Reg..\000"
 5482      4D502056 
 5482      53343231 
 5482      30205265 
 5482      672E2E00 
 5483              	.LC41:
 5484 0128 0D0A4455 		.ascii	"\015\012DUMP VS8812 Reg..\000"
 5484      4D502056 
 5484      53383831 
 5484      32205265 
 5484      672E2E00 
 5485              	.LC42:
 5486 013c 0D0A4455 		.ascii	"\015\012DUMP IT66021 Reg..\000"
 5486      4D502049 
 5486      54363630 
 5486      32312052 
 5486      65672E2E 
 5487 0151 000000   		.space	3
 5488              	.LC43:
 5489 0154 0D0A5653 		.ascii	"\015\012VS8812,%02x,%02x\000"
 5489      38383132 
 5489      2C253032 
 5489      782C2530 
 5489      327800
 5490 0167 00       		.space	1
 5491              	.LC44:
 5492 0168 0D0A5220 		.ascii	"\015\012R %02x %02x\000"
 5492      25303278 
 5492      20253032 
 5492      7800
 5493 0176 0000     		.space	2
 5494              	.LC45:
 5495 0178 0D0A4954 		.ascii	"\015\012IT66021,%02x,%02x\000"
 5495      36363032 
 5495      312C2530 
 5495      32782C25 
 5495      30327800 
ARM GAS  /tmp/ccwHfacM.s 			page 154


 5496              	.LC46:
 5497 018c 4800     		.ascii	"H\000"
 5498 018e 0000     		.space	2
 5499              	.LC47:
 5500 0190 48454C50 		.ascii	"HELP\000"
 5500      00
 5501 0195 000000   		.space	3
 5502              	.LC48:
 5503 0198 3F00     		.ascii	"?\000"
 5504 019a 0000     		.space	2
 5505              	.LC49:
 5506 019c 50574D00 		.ascii	"PWM\000"
 5507              	.LC50:
 5508 01a0 0D0A5057 		.ascii	"\015\012PWM=%d\000"
 5508      4D3D2564 
 5508      00
 5509 01a9 000000   		.space	3
 5510              	.LC51:
 5511 01ac 414C4352 		.ascii	"ALCR\000"
 5511      00
 5512 01b1 000000   		.space	3
 5513              	.LC52:
 5514 01b4 0D0A414C 		.ascii	"\015\012ALCR=%04x\000"
 5514      43523D25 
 5514      30347800 
 5515              	.LC53:
 5516 01c0 414C4357 		.ascii	"ALCW\000"
 5516      00
 5517 01c5 000000   		.space	3
 5518              	.LC54:
 5519 01c8 41434345 		.ascii	"ACCESS\000"
 5519      535300
 5520 01cf 00       		.space	1
 5521              	.LC55:
 5522 01d0 0D0A5653 		.ascii	"\015\012VS4210 AUTO ACCESS = %d\000"
 5522      34323130 
 5522      20415554 
 5522      4F204143 
 5522      43455353 
 5523 01ea 0000     		.space	2
 5524              	.LC56:
 5525 01ec 57696E00 		.ascii	"Win\000"
 5526              	.LC57:
 5527 01f0 0D0A5450 		.ascii	"\015\012TP_InputMode = %d\000"
 5527      5F496E70 
 5527      75744D6F 
 5527      6465203D 
 5527      20256400 
 5528              	.LC58:
 5529 0204 54503000 		.ascii	"TP0\000"
 5530              	.LC59:
 5531 0208 54503100 		.ascii	"TP1\000"
 5532              	.LC60:
 5533 020c 54503200 		.ascii	"TP2\000"
 5534              	.LC61:
 5535 0210 54503300 		.ascii	"TP3\000"
 5536              	.LC62:
ARM GAS  /tmp/ccwHfacM.s 			page 155


 5537 0214 48444D49 		.ascii	"HDMI\000"
 5537      00
 5538 0219 000000   		.space	3
 5539              	.LC63:
 5540 021c 41484400 		.ascii	"AHD\000"
 5541              	.LC64:
 5542 0220 425300   		.ascii	"BS\000"
 5543 0223 00       		.space	1
 5544              	.LC65:
 5545 0224 0D0A6253 		.ascii	"\015\012bSignal[0] = %d\000"
 5545      69676E61 
 5545      6C5B305D 
 5545      203D2025 
 5545      6400
 5546 0236 0000     		.space	2
 5547              	.LC66:
 5548 0238 0D0A6253 		.ascii	"\015\012bSignal[1] = %d\000"
 5548      69676E61 
 5548      6C5B315D 
 5548      203D2025 
 5548      6400
 5549 024a 0000     		.space	2
 5550              	.LC67:
 5551 024c 0D0A6253 		.ascii	"\015\012bSignal[2] = %d\000"
 5551      69676E61 
 5551      6C5B325D 
 5551      203D2025 
 5551      6400
 5552 025e 0000     		.space	2
 5553              	.LC68:
 5554 0260 0D0A6253 		.ascii	"\015\012bSignal[3] = %d\000"
 5554      69676E61 
 5554      6C5B335D 
 5554      203D2025 
 5554      6400
 5555 0272 0000     		.space	2
 5556              	.LC69:
 5557 0274 53455448 		.ascii	"SETHDMI\000"
 5557      444D4900 
 5558              	.LC70:
 5559 027c 53455441 		.ascii	"SETAHD\000"
 5559      484400
 5560 0283 00       		.space	1
 5561              	.LC71:
 5562 0284 54505253 		.ascii	"TPRST\000"
 5562      5400
 5563 028a 0000     		.space	2
 5564              	.LC72:
 5565 028c 48444D49 		.ascii	"HDMI6\000"
 5565      3600
 5566 0292 0000     		.space	2
 5567              	.LC73:
 5568 0294 56373230 		.ascii	"V720\000"
 5568      00
 5569 0299 000000   		.space	3
 5570              	.LC74:
 5571 029c 6F6D00   		.ascii	"om\000"
ARM GAS  /tmp/ccwHfacM.s 			page 156


 5572 029f 00       		.space	1
 5573              	.LC75:
 5574 02a0 6F7500   		.ascii	"ou\000"
 5575 02a3 00       		.space	1
 5576              	.LC76:
 5577 02a4 6F6400   		.ascii	"od\000"
 5578 02a7 00       		.space	1
 5579              	.LC77:
 5580 02a8 6F6C00   		.ascii	"ol\000"
 5581 02ab 00       		.space	1
 5582              	.LC78:
 5583 02ac 6F7200   		.ascii	"or\000"
 5584 02af 00       		.space	1
 5585              	.LC79:
 5586 02b0 6F7000   		.ascii	"op\000"
 5587 02b3 00       		.space	1
 5588              	.LC80:
 5589 02b4 0D0A496E 		.ascii	"\015\012Invalid command...\000"
 5589      76616C69 
 5589      6420636F 
 5589      6D6D616E 
 5589      642E2E2E 
 5590              		.section	.rodata.Prompt.str1.4,"aMS",%progbits,1
 5591              		.align	2
 5592              	.LC0:
 5593 0000 0D0A4D43 		.ascii	"\015\012MCU_I2C[%02x][%d:%d:%d:%d]>\000"
 5593      555F4932 
 5593      435B2530 
 5593      32785D5B 
 5593      25643A25 
 5594 001e 0000     		.space	2
 5595              	.LC1:
 5596 0020 0D0A4D43 		.ascii	"\015\012MCU_I2C[%02x][%d:%d:%d]>\000"
 5596      555F4932 
 5596      435B2530 
 5596      32785D5B 
 5596      25643A25 
 5597 003b 00       		.space	1
 5598              	.LC2:
 5599 003c 0D0A4D43 		.ascii	"\015\012MCU_I2C[%02x][%d:%d]>\000"
 5599      555F4932 
 5599      435B2530 
 5599      32785D5B 
 5599      25643A25 
 5600              	.LC3:
 5601 0054 0D0A4D43 		.ascii	"\015\012MCU_I2C[%02x][%d]>\000"
 5601      555F4932 
 5601      435B2530 
 5601      32785D5B 
 5601      25645D3E 
 5602              		.section	.rodata.SET_AHD_SYNC_PARA.str1.4,"aMS",%progbits,1
 5603              		.align	2
 5604              	.LC19:
 5605 0000 0D0A4C6F 		.ascii	"\015\012Loading AHD Embedded Sync para.... \000"
 5605      6164696E 
 5605      67204148 
 5605      4420456D 
ARM GAS  /tmp/ccwHfacM.s 			page 157


 5605      62656464 
 5606              		.section	.rodata.SET_HDMI_640_480P_PARA.str1.4,"aMS",%progbits,1
 5607              		.align	2
 5608              	.LC20:
 5609 0000 0D0A4C6F 		.ascii	"\015\012Loading HDMI 640X480P Embedded Sync para..."
 5609      6164696E 
 5609      67204844 
 5609      4D492036 
 5609      34305834 
 5610 002d 2E2000   		.ascii	". \000"
 5611              		.section	.rodata.SET_HDMI_SYNC_PARA.str1.4,"aMS",%progbits,1
 5612              		.align	2
 5613              	.LC21:
 5614 0000 0D0A4C6F 		.ascii	"\015\012Loading HDMI Embedded Sync para.... \000"
 5614      6164696E 
 5614      67204844 
 5614      4D492045 
 5614      6D626564 
 5615              		.text
 5616              	.Letext0:
 5617              		.file 2 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_
 5618              		.file 3 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 5619              		.file 4 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 5620              		.file 5 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 5621              		.file 6 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 5622              		.file 7 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 5623              		.file 8 "VS4210/VXIS_Extern_Define.h"
 5624              		.file 9 "TP2824/tpinc/TP2802.h"
 5625              		.file 10 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 5626              		.file 11 "sw_i2c/VX_swi2c.h"
 5627              		.file 12 "VS4210/VS4210.h"
 5628              		.file 13 "Drivers/CMSIS/Include/core_cm3.h"
 5629              		.file 14 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 5630              		.file 15 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 5631              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 5632              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 5633              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 5634              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 5635              		.file 20 "VS4210/printf.h"
 5636              		.file 21 "VS4210/monitor.h"
 5637              		.file 22 "Inc/main.h"
ARM GAS  /tmp/ccwHfacM.s 			page 158


DEFINED SYMBOLS
                            *ABS*:0000000000000000 monitor.c
     /tmp/ccwHfacM.s:16     .text.RS_ready:0000000000000000 $t
     /tmp/ccwHfacM.s:23     .text.RS_ready:0000000000000000 RS_ready
     /tmp/ccwHfacM.s:49     .text.RS_ready:0000000000000014 $d
     /tmp/ccwHfacM.s:55     .text.RS2_ready:0000000000000000 $t
     /tmp/ccwHfacM.s:62     .text.RS2_ready:0000000000000000 RS2_ready
     /tmp/ccwHfacM.s:87     .text.RS2_ready:0000000000000014 $d
     /tmp/ccwHfacM.s:93     .text.RS_rx:0000000000000000 $t
     /tmp/ccwHfacM.s:100    .text.RS_rx:0000000000000000 RS_rx
     /tmp/ccwHfacM.s:130    .text.RS_rx:000000000000001c $d
                            *COM*:000000000000001e RS_buf
     /tmp/ccwHfacM.s:136    .text.RS2_rx:0000000000000000 $t
     /tmp/ccwHfacM.s:143    .text.RS2_rx:0000000000000000 RS2_rx
     /tmp/ccwHfacM.s:173    .text.RS2_rx:000000000000001c $d
                            *COM*:00000000000000c8 RS2_buf
     /tmp/ccwHfacM.s:179    .text.RS_tx:0000000000000000 $t
     /tmp/ccwHfacM.s:186    .text.RS_tx:0000000000000000 RS_tx
     /tmp/ccwHfacM.s:218    .text.RS_tx:000000000000001c $d
     /tmp/ccwHfacM.s:223    .text.RS2_tx:0000000000000000 $t
     /tmp/ccwHfacM.s:230    .text.RS2_tx:0000000000000000 RS2_tx
     /tmp/ccwHfacM.s:262    .text.RS2_tx:000000000000001c $d
     /tmp/ccwHfacM.s:267    .text.Prompt:0000000000000000 $t
     /tmp/ccwHfacM.s:274    .text.Prompt:0000000000000000 Prompt
     /tmp/ccwHfacM.s:378    .text.Prompt:000000000000007c $d
     /tmp/ccwHfacM.s:392    .text.Mon_tx:0000000000000000 $t
     /tmp/ccwHfacM.s:399    .text.Mon_tx:0000000000000000 Mon_tx
     /tmp/ccwHfacM.s:420    .text.a2i:0000000000000000 $t
     /tmp/ccwHfacM.s:427    .text.a2i:0000000000000000 a2i
     /tmp/ccwHfacM.s:466    .text.Asc1Bin:0000000000000000 $t
     /tmp/ccwHfacM.s:473    .text.Asc1Bin:0000000000000000 Asc1Bin
     /tmp/ccwHfacM.s:517    .text.Asc2Bin:0000000000000000 $t
     /tmp/ccwHfacM.s:524    .text.Asc2Bin:0000000000000000 Asc2Bin
     /tmp/ccwHfacM.s:572    .text.hs_toupper:0000000000000000 $t
     /tmp/ccwHfacM.s:579    .text.hs_toupper:0000000000000000 hs_toupper
     /tmp/ccwHfacM.s:603    .text.stricmp:0000000000000000 $t
     /tmp/ccwHfacM.s:610    .text.stricmp:0000000000000000 stricmp
     /tmp/ccwHfacM.s:659    .text.MonReadI2C:0000000000000000 $t
     /tmp/ccwHfacM.s:666    .text.MonReadI2C:0000000000000000 MonReadI2C
     /tmp/ccwHfacM.s:679    .text.MonWriteI2C:0000000000000000 $t
     /tmp/ccwHfacM.s:686    .text.MonWriteI2C:0000000000000000 MonWriteI2C
     /tmp/ccwHfacM.s:699    .text.MonIncDecI2C:0000000000000000 $t
     /tmp/ccwHfacM.s:706    .text.MonIncDecI2C:0000000000000000 MonIncDecI2C
     /tmp/ccwHfacM.s:723    .text.MonIncDecI2C:000000000000000a $d
     /tmp/ccwHfacM.s:735    .text.MonIncDecI2C:0000000000000016 $t
     /tmp/ccwHfacM.s:910    .text.MonIncDecI2C:0000000000000100 $d
                            *COM*:0000000000000001 MonWdata
                            *COM*:0000000000000001 MonIndex
                            *COM*:000000000000001c argv
     /tmp/ccwHfacM.s:924    .text.MonDumpI2C:0000000000000000 $t
     /tmp/ccwHfacM.s:931    .text.MonDumpI2C:0000000000000000 MonDumpI2C
     /tmp/ccwHfacM.s:944    .text.MonNewReadI2C:0000000000000000 $t
     /tmp/ccwHfacM.s:951    .text.MonNewReadI2C:0000000000000000 MonNewReadI2C
     /tmp/ccwHfacM.s:964    .text.MonNewWriteI2C:0000000000000000 $t
     /tmp/ccwHfacM.s:971    .text.MonNewWriteI2C:0000000000000000 MonNewWriteI2C
     /tmp/ccwHfacM.s:984    .text.MonNewDumpI2C:0000000000000000 $t
     /tmp/ccwHfacM.s:991    .text.MonNewDumpI2C:0000000000000000 MonNewDumpI2C
ARM GAS  /tmp/ccwHfacM.s 			page 159


     /tmp/ccwHfacM.s:1004   .text.MonWriteBit:0000000000000000 $t
     /tmp/ccwHfacM.s:1011   .text.MonWriteBit:0000000000000000 MonWriteBit
     /tmp/ccwHfacM.s:1024   .text.MonTxDump:0000000000000000 $t
     /tmp/ccwHfacM.s:1031   .text.MonTxDump:0000000000000000 MonTxDump
     /tmp/ccwHfacM.s:1044   .text.MonHelp:0000000000000000 $t
     /tmp/ccwHfacM.s:1051   .text.MonHelp:0000000000000000 MonHelp
     /tmp/ccwHfacM.s:1123   .text.MonHelp:0000000000000058 $d
     /tmp/ccwHfacM.s:1137   .text.MonGetCommand:0000000000000000 $t
     /tmp/ccwHfacM.s:1144   .text.MonGetCommand:0000000000000000 MonGetCommand
     /tmp/ccwHfacM.s:1219   .text.MonGetCommand:0000000000000056 $d
     /tmp/ccwHfacM.s:1274   .text.MonGetCommand:00000000000000c4 $t
     /tmp/ccwHfacM.s:1585   .text.MonGetCommand:0000000000000268 $d
                            *COM*:000000000000001e monstr
     /tmp/ccwHfacM.s:1596   .text.SET_AHD_SYNC_PARA:0000000000000000 $t
     /tmp/ccwHfacM.s:1603   .text.SET_AHD_SYNC_PARA:0000000000000000 SET_AHD_SYNC_PARA
     /tmp/ccwHfacM.s:1828   .text.SET_AHD_SYNC_PARA:0000000000000154 $d
     /tmp/ccwHfacM.s:1833   .text.SET_HDMI_640_480P_PARA:0000000000000000 $t
     /tmp/ccwHfacM.s:1840   .text.SET_HDMI_640_480P_PARA:0000000000000000 SET_HDMI_640_480P_PARA
     /tmp/ccwHfacM.s:2489   .text.SET_HDMI_640_480P_PARA:00000000000003fc $d
     /tmp/ccwHfacM.s:2492   .text.SET_HDMI_640_480P_PARA:0000000000000400 $t
     /tmp/ccwHfacM.s:3057   .text.SET_HDMI_SYNC_PARA:0000000000000000 $t
     /tmp/ccwHfacM.s:3064   .text.SET_HDMI_SYNC_PARA:0000000000000000 SET_HDMI_SYNC_PARA
     /tmp/ccwHfacM.s:3084   .text.SET_HDMI_SYNC_PARA:000000000000000c $d
     /tmp/ccwHfacM.s:3089   .text.Monitor:0000000000000000 $t
     /tmp/ccwHfacM.s:3096   .text.Monitor:0000000000000000 Monitor
     /tmp/ccwHfacM.s:3585   .text.Monitor:00000000000002f4 $d
     /tmp/ccwHfacM.s:3605   .text.Monitor:0000000000000338 $t
     /tmp/ccwHfacM.s:3625   .text.Monitor:0000000000000358 $d
     /tmp/ccwHfacM.s:3630   .text.Monitor:0000000000000364 $t
     /tmp/ccwHfacM.s:4209   .text.Monitor:0000000000000758 $d
     /tmp/ccwHfacM.s:4213   .text.Monitor:0000000000000760 $t
     /tmp/ccwHfacM.s:4822   .text.Monitor:0000000000000b14 $d
     /tmp/ccwHfacM.s:4863   .text.Monitor:0000000000000bb0 $t
     /tmp/ccwHfacM.s:5231   .text.Monitor:0000000000000dec $d
     /tmp/ccwHfacM.s:5362   .data.AccessEnable:0000000000000000 AccessEnable
     /tmp/ccwHfacM.s:5337   .bss.bytVersionFlag:0000000000000000 bytVersionFlag
     /tmp/ccwHfacM.s:5295   .bss.RS2_Xbusy:0000000000000000 RS2_Xbusy
     /tmp/ccwHfacM.s:5313   .bss.RS_Xbusy:0000000000000000 RS_Xbusy
     /tmp/ccwHfacM.s:5307   .bss.RS2_out:0000000000000000 RS2_out
     /tmp/ccwHfacM.s:5301   .bss.RS2_in:0000000000000000 RS2_in
     /tmp/ccwHfacM.s:5325   .bss.RS_out:0000000000000000 RS_out
     /tmp/ccwHfacM.s:5319   .bss.RS_in:0000000000000000 RS_in
                            *COM*:000000000000001e DVR_buf
     /tmp/ccwHfacM.s:5373   .data.Monitor_I2C:0000000000000000 Monitor_I2C
     /tmp/ccwHfacM.s:5289   .bss.Monitor_flag:0000000000000000 Monitor_flag
     /tmp/ccwHfacM.s:5379   .data.echo:0000000000000000 echo
     /tmp/ccwHfacM.s:5331   .bss.argc:0000000000000000 argc
                            *COM*:0000000000000001 MonRdata
     /tmp/ccwHfacM.s:5367   .data.MonAddress:0000000000000000 MonAddress
                            *COM*:0000000000000004 newInRes
     /tmp/ccwHfacM.s:5290   .bss.Monitor_flag:0000000000000000 $d
     /tmp/ccwHfacM.s:5292   .bss.RS2_Xbusy:0000000000000000 $d
     /tmp/ccwHfacM.s:5302   .bss.RS2_in:0000000000000000 $d
     /tmp/ccwHfacM.s:5308   .bss.RS2_out:0000000000000000 $d
     /tmp/ccwHfacM.s:5310   .bss.RS_Xbusy:0000000000000000 $d
     /tmp/ccwHfacM.s:5320   .bss.RS_in:0000000000000000 $d
     /tmp/ccwHfacM.s:5326   .bss.RS_out:0000000000000000 $d
ARM GAS  /tmp/ccwHfacM.s 			page 160


     /tmp/ccwHfacM.s:5332   .bss.argc:0000000000000000 $d
     /tmp/ccwHfacM.s:5338   .bss.bytVersionFlag:0000000000000000 $d
     /tmp/ccwHfacM.s:5343   .bss.comment.8585:0000000000000000 comment.8585
     /tmp/ccwHfacM.s:5344   .bss.comment.8585:0000000000000000 $d
     /tmp/ccwHfacM.s:5349   .bss.incnt.8586:0000000000000000 incnt.8586
     /tmp/ccwHfacM.s:5350   .bss.incnt.8586:0000000000000000 $d
     /tmp/ccwHfacM.s:5355   .bss.last_argc.8587:0000000000000000 last_argc.8587
     /tmp/ccwHfacM.s:5356   .bss.last_argc.8587:0000000000000000 $d
     /tmp/ccwHfacM.s:5358   .data.AccessEnable:0000000000000000 $d
     /tmp/ccwHfacM.s:5376   .data.echo:0000000000000000 $d
     /tmp/ccwHfacM.s:5382   .rodata.MonHelp.str1.4:0000000000000000 $d
     /tmp/ccwHfacM.s:5419   .rodata.MonIncDecI2C.str1.4:0000000000000000 $d
     /tmp/ccwHfacM.s:5431   .rodata.Monitor.str1.4:0000000000000000 $d
     /tmp/ccwHfacM.s:5591   .rodata.Prompt.str1.4:0000000000000000 $d
     /tmp/ccwHfacM.s:5603   .rodata.SET_AHD_SYNC_PARA.str1.4:0000000000000000 $d
     /tmp/ccwHfacM.s:5607   .rodata.SET_HDMI_640_480P_PARA.str1.4:0000000000000000 $d
     /tmp/ccwHfacM.s:5612   .rodata.SET_HDMI_SYNC_PARA.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
huart2
Printf
day
hour
minute
second
WriteEEP
ReadEEP
VXISI2CWrite
VXISI2CRead
VS8812Write
VS8812Read
tp28xx_byte_write
tp28xx_byte_read
HDMIRX_WriteI2C_Byte
HDMIRX_ReadI2C_Byte
gHDMI_Index
MCUTimerReactiveTimerEvent
GetFWRevEE
user_pwm_setvalue
GET_ALC122
SET_ALC122
HS_Select_Win
TP_bt1120_720P_1080P_mode0_w0
TP_bt1120_1080P_1080P_mode0_w0
TP_bt1120_NTSC_1080P_mode0_w0
TP_bt1120_PAL_1080P_mode0_w0
TP_InputMode
Init_TP280x_RegSet
SET_VS4210_720_480_out
SelectInputMode
bSignal
TVI_Command
presetNum
TVI_speed
TVI_Chksum
ARM GAS  /tmp/ccwHfacM.s 			page 161


ptztxflag
