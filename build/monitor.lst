ARM GAS  /tmp/ccD8Q2iX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"monitor.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.RS_ready,"ax",%progbits
  19              		.align	2
  20              		.global	RS_ready
  21              		.thumb
  22              		.thumb_func
  24              	RS_ready:
  25              	.LFB65:
  26              		.file 1 "VS4210/monitor.c"
   1:VS4210/monitor.c **** /*****************************************************************************/
   2:VS4210/monitor.c **** /*                                                                           										*/
   3:VS4210/monitor.c **** /*  TELI ML070I   MCU                    													*/
   4:VS4210/monitor.c **** /*                                                                           										*/
   5:VS4210/monitor.c **** /*  Monitor.c		                                            										*/
   6:VS4210/monitor.c **** /*                                                                           										*/
   7:VS4210/monitor.c **** /*****************************************************************************/
   8:VS4210/monitor.c **** #include "VXIS_Extern_Define.h"
   9:VS4210/monitor.c **** 
  10:VS4210/monitor.c **** #include "tpinc/Device_Rx.h"
  11:VS4210/monitor.c **** #include "tpinc/TP2802.h"
  12:VS4210/monitor.c **** #include "stdlib.h"
  13:VS4210/monitor.c **** #include "VX_swi2c.h"
  14:VS4210/monitor.c **** #include "VS4210.h"
  15:VS4210/monitor.c **** 
  16:VS4210/monitor.c **** //#include "config.h"
  17:VS4210/monitor.c **** 
  18:VS4210/monitor.c **** //#ifdef SERIAL
  19:VS4210/monitor.c **** 
  20:VS4210/monitor.c **** //#include "typedefs.h"
  21:VS4210/monitor.c **** #include "main.h"
  22:VS4210/monitor.c **** //#include "i2c.h"
  23:VS4210/monitor.c **** //#include "reg.h"
  24:VS4210/monitor.c **** #include "printf.h"
  25:VS4210/monitor.c **** //#include "etc_eep.h"
  26:VS4210/monitor.c **** #include "monitor.h"
  27:VS4210/monitor.c **** //#include "cpu.h"
  28:VS4210/monitor.c **** //#include "Adc.h"
  29:VS4210/monitor.c **** 
  30:VS4210/monitor.c **** IDATA BYTE MonAddress = 0x8a;		// initialize value should be placed to IDATA area
  31:VS4210/monitor.c **** BYTE MonIndex;
  32:VS4210/monitor.c **** BYTE MonRdata, MonWdata;
ARM GAS  /tmp/ccD8Q2iX.s 			page 2


  33:VS4210/monitor.c **** BYTE monstr[30];		// buffer for input string
  34:VS4210/monitor.c **** #if 1
  35:VS4210/monitor.c **** BYTE *argv[7];
  36:VS4210/monitor.c **** //char *argv[7];
  37:VS4210/monitor.c **** #else
  38:VS4210/monitor.c **** volatile  BYTE *argv[7];
  39:VS4210/monitor.c **** //char *argv[7];
  40:VS4210/monitor.c **** #endif
  41:VS4210/monitor.c **** BYTE argc=0;
  42:VS4210/monitor.c **** bit	echo=1;
  43:VS4210/monitor.c **** 
  44:VS4210/monitor.c **** BYTE Monitor_flag=OFF;
  45:VS4210/monitor.c **** BYTE Monitor_I2C=0x40;//0x88;//0x40;///0x90;//0x40;//0x28;//0x12;//EEPROM_24C02_addr;
  46:VS4210/monitor.c **** 
  47:VS4210/monitor.c **** 		DATA BYTE	RS_buf[BUF_MAX];
  48:VS4210/monitor.c ****         	DATA BYTE   	RS2_buf[TOA_BUF_MAX];
  49:VS4210/monitor.c **** 		DATA BYTE	DVR_buf[DVR_BUF_MAX];
  50:VS4210/monitor.c **** 
  51:VS4210/monitor.c **** 		
  52:VS4210/monitor.c **** 		DATA BYTE   RS_in=0, RS_out=0;
  53:VS4210/monitor.c **** 		DATA BYTE   RS2_in=0, RS2_out=0;
  54:VS4210/monitor.c **** 		bit	        RS_Xbusy=0;			// bit RS_Xbusy=0;
  55:VS4210/monitor.c **** 		bit 		RS2_Xbusy=0; 		// bit RS_Xbusy=0;
  56:VS4210/monitor.c **** 
  57:VS4210/monitor.c **** static bit indirect=0;
  58:VS4210/monitor.c **** extern BYTE TriggerFlag;
  59:VS4210/monitor.c **** 
  60:VS4210/monitor.c **** //extern		  bit	AutoDetect;
  61:VS4210/monitor.c **** extern   BYTE InputSelection;
  62:VS4210/monitor.c **** extern	      BYTE	DebugLevel;
  63:VS4210/monitor.c **** //extern  CODE  struct struct_IdName struct_InputSelection[];
  64:VS4210/monitor.c **** extern 		  bit	NoInitAccess;
  65:VS4210/monitor.c ****  		  bit	AccessEnable=1;
  66:VS4210/monitor.c **** extern  BYTE PSW_Flag;
  67:VS4210/monitor.c **** extern BYTE year1,year2,month,day,hour,minute,second;
  68:VS4210/monitor.c **** 
  69:VS4210/monitor.c **** extern UART_HandleTypeDef huart1;
  70:VS4210/monitor.c **** extern UART_HandleTypeDef huart2;
  71:VS4210/monitor.c **** extern tByte	count[4];
  72:VS4210/monitor.c **** extern tByte	state[4];
  73:VS4210/monitor.c **** extern tByte	count[4];
  74:VS4210/monitor.c **** extern tByte	mode[4];
  75:VS4210/monitor.c **** extern tByte	std[4];
  76:VS4210/monitor.c **** extern tByte	egain[4][4];
  77:VS4210/monitor.c **** extern  tByte TP_InputMode;
  78:VS4210/monitor.c **** extern BYTE SelectInputMode;///0=HDMI , 1=AHD
  79:VS4210/monitor.c **** extern tByte bSignal[4] ;
  80:VS4210/monitor.c **** extern BYTE TVI_Command;
  81:VS4210/monitor.c **** extern BYTE presetNum;
  82:VS4210/monitor.c **** extern BYTE TVI_Chksum;
  83:VS4210/monitor.c **** extern BYTE TVI_speed;
  84:VS4210/monitor.c **** extern bit ptztxflag;
  85:VS4210/monitor.c **** 
  86:VS4210/monitor.c **** //char * asctime(const struct tm * timeptr);
  87:VS4210/monitor.c **** //char *ctime(const time_t *timep);
  88:VS4210/monitor.c **** 
  89:VS4210/monitor.c **** //=============================================================================
ARM GAS  /tmp/ccD8Q2iX.s 			page 3


  90:VS4210/monitor.c **** //		Serial RX Check 												   
  91:VS4210/monitor.c **** //=============================================================================
  92:VS4210/monitor.c **** BYTE RS_ready(void)
  93:VS4210/monitor.c **** {
  27              		.loc 1 93 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  94:VS4210/monitor.c **** 	if( RS_in == RS_out ) return 0;
  32              		.loc 1 94 0
  33 0000 044B     		ldr	r3, .L4
  34 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  35 0004 044B     		ldr	r3, .L4+4
  36 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  37 0008 9A42     		cmp	r2, r3
  38 000a 01D1     		bne	.L3
  39 000c 0020     		movs	r0, #0
  40 000e 7047     		bx	lr
  41              	.L3:
  95:VS4210/monitor.c **** 	else return 1;
  42              		.loc 1 95 0
  43 0010 0120     		movs	r0, #1
  96:VS4210/monitor.c **** }
  44              		.loc 1 96 0
  45 0012 7047     		bx	lr
  46              	.L5:
  47              		.align	2
  48              	.L4:
  49 0014 00000000 		.word	.LANCHOR0
  50 0018 00000000 		.word	.LANCHOR1
  51              		.cfi_endproc
  52              	.LFE65:
  54              		.section	.text.RS2_ready,"ax",%progbits
  55              		.align	2
  56              		.global	RS2_ready
  57              		.thumb
  58              		.thumb_func
  60              	RS2_ready:
  61              	.LFB66:
  97:VS4210/monitor.c **** 
  98:VS4210/monitor.c **** BYTE RS2_ready(void)
  99:VS4210/monitor.c **** {
  62              		.loc 1 99 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
 100:VS4210/monitor.c **** 	if( RS2_in == RS2_out ) return 0;
  67              		.loc 1 100 0
  68 0000 044B     		ldr	r3, .L9
  69 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  70 0004 044B     		ldr	r3, .L9+4
  71 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  72 0008 9A42     		cmp	r2, r3
  73 000a 01D1     		bne	.L8
  74 000c 0020     		movs	r0, #0
ARM GAS  /tmp/ccD8Q2iX.s 			page 4


  75 000e 7047     		bx	lr
  76              	.L8:
 101:VS4210/monitor.c **** 	else return 1;
  77              		.loc 1 101 0
  78 0010 0120     		movs	r0, #1
 102:VS4210/monitor.c **** }
  79              		.loc 1 102 0
  80 0012 7047     		bx	lr
  81              	.L10:
  82              		.align	2
  83              	.L9:
  84 0014 00000000 		.word	.LANCHOR2
  85 0018 00000000 		.word	.LANCHOR3
  86              		.cfi_endproc
  87              	.LFE66:
  89              		.section	.text.RS_rx,"ax",%progbits
  90              		.align	2
  91              		.global	RS_rx
  92              		.thumb
  93              		.thumb_func
  95              	RS_rx:
  96              	.LFB67:
 103:VS4210/monitor.c **** 
 104:VS4210/monitor.c **** //#ifdef Hs_debug
 105:VS4210/monitor.c **** //=============================================================================
 106:VS4210/monitor.c **** //		Serial RX														   
 107:VS4210/monitor.c **** //=============================================================================
 108:VS4210/monitor.c **** BYTE RS_rx(void)
 109:VS4210/monitor.c **** {
  97              		.loc 1 109 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 110:VS4210/monitor.c **** 	BYTE ret;
 111:VS4210/monitor.c **** 		
 112:VS4210/monitor.c **** //	ES = 0;
 113:VS4210/monitor.c **** 	ret = RS_buf[RS_out];
 102              		.loc 1 113 0
 103 0000 064A     		ldr	r2, .L13
 104 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 105 0004 0649     		ldr	r1, .L13+4
 106 0006 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 107              	.LVL0:
 114:VS4210/monitor.c **** //	ret = DVR_buf[RS_out];
 115:VS4210/monitor.c **** 	RS_out++;
 108              		.loc 1 115 0
 109 0008 0133     		adds	r3, r3, #1
 110 000a DBB2     		uxtb	r3, r3
 111 000c 1370     		strb	r3, [r2]
 116:VS4210/monitor.c **** 	if(RS_out >= BUF_MAX) 
 112              		.loc 1 116 0
 113 000e 1D2B     		cmp	r3, #29
 114 0010 02D9     		bls	.L12
 117:VS4210/monitor.c **** 		RS_out = 0;
 115              		.loc 1 117 0
 116 0012 0022     		movs	r2, #0
ARM GAS  /tmp/ccD8Q2iX.s 			page 5


 117 0014 014B     		ldr	r3, .L13
 118 0016 1A70     		strb	r2, [r3]
 119              	.L12:
 118:VS4210/monitor.c **** //	ES = 1;
 119:VS4210/monitor.c **** 
 120:VS4210/monitor.c **** 	return ret;
 121:VS4210/monitor.c **** }
 120              		.loc 1 121 0
 121 0018 7047     		bx	lr
 122              	.L14:
 123 001a 00BF     		.align	2
 124              	.L13:
 125 001c 00000000 		.word	.LANCHOR1
 126 0020 00000000 		.word	RS_buf
 127              		.cfi_endproc
 128              	.LFE67:
 130              		.section	.text.RS2_rx,"ax",%progbits
 131              		.align	2
 132              		.global	RS2_rx
 133              		.thumb
 134              		.thumb_func
 136              	RS2_rx:
 137              	.LFB68:
 122:VS4210/monitor.c **** 
 123:VS4210/monitor.c **** BYTE RS2_rx(void)
 124:VS4210/monitor.c **** {
 138              		.loc 1 124 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              		@ link register save eliminated.
 125:VS4210/monitor.c **** 	BYTE ret;
 126:VS4210/monitor.c **** 		
 127:VS4210/monitor.c **** //	ES = 0;
 128:VS4210/monitor.c **** 	ret = RS2_buf[RS2_out];
 143              		.loc 1 128 0
 144 0000 064A     		ldr	r2, .L17
 145 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 146 0004 0649     		ldr	r1, .L17+4
 147 0006 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 148              	.LVL1:
 129:VS4210/monitor.c **** //	ret = DVR_buf[RS_out];
 130:VS4210/monitor.c **** 	RS2_out++;
 149              		.loc 1 130 0
 150 0008 0133     		adds	r3, r3, #1
 151 000a DBB2     		uxtb	r3, r3
 152 000c 1370     		strb	r3, [r2]
 131:VS4210/monitor.c **** 	if(RS2_out >= TOA_BUF_MAX) 
 153              		.loc 1 131 0
 154 000e C72B     		cmp	r3, #199
 155 0010 02D9     		bls	.L16
 132:VS4210/monitor.c **** 		RS2_out = 0;
 156              		.loc 1 132 0
 157 0012 0022     		movs	r2, #0
 158 0014 014B     		ldr	r3, .L17
 159 0016 1A70     		strb	r2, [r3]
 160              	.L16:
ARM GAS  /tmp/ccD8Q2iX.s 			page 6


 133:VS4210/monitor.c **** //	ES = 1;
 134:VS4210/monitor.c **** 
 135:VS4210/monitor.c **** 	return ret;
 136:VS4210/monitor.c **** }
 161              		.loc 1 136 0
 162 0018 7047     		bx	lr
 163              	.L18:
 164 001a 00BF     		.align	2
 165              	.L17:
 166 001c 00000000 		.word	.LANCHOR3
 167 0020 00000000 		.word	RS2_buf
 168              		.cfi_endproc
 169              	.LFE68:
 171              		.section	.text.RS_tx,"ax",%progbits
 172              		.align	2
 173              		.global	RS_tx
 174              		.thumb
 175              		.thumb_func
 177              	RS_tx:
 178              	.LFB69:
 137:VS4210/monitor.c **** 
 138:VS4210/monitor.c **** 
 139:VS4210/monitor.c **** //=============================================================================
 140:VS4210/monitor.c **** //		Serial TX														   
 141:VS4210/monitor.c **** //=============================================================================
 142:VS4210/monitor.c **** void RS_tx(BYTE tx_buf)
 143:VS4210/monitor.c **** {
 179              		.loc 1 143 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 8
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              	.LVL2:
 184 0000 00B5     		push	{lr}
 185              	.LCFI0:
 186              		.cfi_def_cfa_offset 4
 187              		.cfi_offset 14, -4
 188 0002 83B0     		sub	sp, sp, #12
 189              	.LCFI1:
 190              		.cfi_def_cfa_offset 16
 191 0004 02A9     		add	r1, sp, #8
 192 0006 01F8010D 		strb	r0, [r1, #-1]!
 144:VS4210/monitor.c **** 
 145:VS4210/monitor.c **** 
 146:VS4210/monitor.c **** HAL_UART_Transmit(&huart1,&tx_buf,1,0xffff);
 193              		.loc 1 146 0
 194 000a 0448     		ldr	r0, .L21
 195              	.LVL3:
 196 000c 0122     		movs	r2, #1
 197 000e 4FF6FF73 		movw	r3, #65535
 198 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 199              	.LVL4:
 147:VS4210/monitor.c **** //USART1->DR = tx_buf;
 148:VS4210/monitor.c **** //while(0 == (USART1->SR&(1<<6)));
 149:VS4210/monitor.c **** 
 150:VS4210/monitor.c **** }
 200              		.loc 1 150 0
 201 0016 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccD8Q2iX.s 			page 7


 202              	.LCFI2:
 203              		.cfi_def_cfa_offset 4
 204              		@ sp needed
 205 0018 5DF804FB 		ldr	pc, [sp], #4
 206              	.LVL5:
 207              	.L22:
 208              		.align	2
 209              	.L21:
 210 001c 00000000 		.word	huart1
 211              		.cfi_endproc
 212              	.LFE69:
 214              		.section	.text.RS2_tx,"ax",%progbits
 215              		.align	2
 216              		.global	RS2_tx
 217              		.thumb
 218              		.thumb_func
 220              	RS2_tx:
 221              	.LFB70:
 151:VS4210/monitor.c **** 
 152:VS4210/monitor.c **** void RS2_tx(BYTE tx_buf)
 153:VS4210/monitor.c **** {
 222              		.loc 1 153 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 8
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              	.LVL6:
 227 0000 00B5     		push	{lr}
 228              	.LCFI3:
 229              		.cfi_def_cfa_offset 4
 230              		.cfi_offset 14, -4
 231 0002 83B0     		sub	sp, sp, #12
 232              	.LCFI4:
 233              		.cfi_def_cfa_offset 16
 234 0004 02A9     		add	r1, sp, #8
 235 0006 01F8010D 		strb	r0, [r1, #-1]!
 154:VS4210/monitor.c **** 
 155:VS4210/monitor.c **** 
 156:VS4210/monitor.c **** HAL_UART_Transmit(&huart2,&tx_buf,1,0xffff);
 236              		.loc 1 156 0
 237 000a 0448     		ldr	r0, .L25
 238              	.LVL7:
 239 000c 0122     		movs	r2, #1
 240 000e 4FF6FF73 		movw	r3, #65535
 241 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 242              	.LVL8:
 157:VS4210/monitor.c **** //USART2->DR = tx_buf;
 158:VS4210/monitor.c **** //while(0 == (USART2->SR&(1<<6)));
 159:VS4210/monitor.c **** 
 160:VS4210/monitor.c **** }
 243              		.loc 1 160 0
 244 0016 03B0     		add	sp, sp, #12
 245              	.LCFI5:
 246              		.cfi_def_cfa_offset 4
 247              		@ sp needed
 248 0018 5DF804FB 		ldr	pc, [sp], #4
 249              	.LVL9:
 250              	.L26:
ARM GAS  /tmp/ccD8Q2iX.s 			page 8


 251              		.align	2
 252              	.L25:
 253 001c 00000000 		.word	huart2
 254              		.cfi_endproc
 255              	.LFE70:
 257              		.section	.text.Prompt,"ax",%progbits
 258              		.align	2
 259              		.global	Prompt
 260              		.thumb
 261              		.thumb_func
 263              	Prompt:
 264              	.LFB71:
 161:VS4210/monitor.c **** 
 162:VS4210/monitor.c **** //void Loader(BYTE);
 163:VS4210/monitor.c **** 
 164:VS4210/monitor.c **** //=============================================================================
 165:VS4210/monitor.c **** //
 166:VS4210/monitor.c **** //=============================================================================
 167:VS4210/monitor.c **** void Prompt(void)
 168:VS4210/monitor.c **** {
 265              		.loc 1 168 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269 0000 00B5     		push	{lr}
 270              	.LCFI6:
 271              		.cfi_def_cfa_offset 4
 272              		.cfi_offset 14, -4
 273 0002 83B0     		sub	sp, sp, #12
 274              	.LCFI7:
 275              		.cfi_def_cfa_offset 16
 169:VS4210/monitor.c **** 	if(day)
 276              		.loc 1 169 0
 277 0004 194B     		ldr	r3, .L33
 278 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 279 0008 6AB1     		cbz	r2, .L28
 170:VS4210/monitor.c **** 	{
 171:VS4210/monitor.c **** 	Printf("\r\nMCU_I2C[%02x][%d:%d:%d:%d]>",(WORD)Monitor_I2C,(WORD)day,(WORD)hour,(WORD)minute,(WORD
 280              		.loc 1 171 0
 281 000a 194B     		ldr	r3, .L33+4
 282 000c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 283 000e 194B     		ldr	r3, .L33+8
 284 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 285 0012 1948     		ldr	r0, .L33+12
 286 0014 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 287 0016 0090     		str	r0, [sp]
 288 0018 1848     		ldr	r0, .L33+16
 289 001a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 290 001c 0190     		str	r0, [sp, #4]
 291 001e 1848     		ldr	r0, .L33+20
 292 0020 FFF7FEFF 		bl	Printf
 293              	.LVL10:
 294 0024 1FE0     		b	.L27
 295              	.L28:
 172:VS4210/monitor.c **** 	}
 173:VS4210/monitor.c **** 	else if(hour)
 296              		.loc 1 173 0
ARM GAS  /tmp/ccD8Q2iX.s 			page 9


 297 0026 134B     		ldr	r3, .L33+8
 298 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 299 002a 52B1     		cbz	r2, .L30
 174:VS4210/monitor.c **** 	{
 175:VS4210/monitor.c **** 	Printf("\r\nMCU_I2C[%02x][%d:%d:%d]>",(WORD)Monitor_I2C,(WORD)hour,(WORD)minute,(WORD)second);
 300              		.loc 1 175 0
 301 002c 104B     		ldr	r3, .L33+4
 302 002e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 303 0030 114B     		ldr	r3, .L33+12
 304 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 305 0034 1148     		ldr	r0, .L33+16
 306 0036 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 307 0038 0090     		str	r0, [sp]
 308 003a 1248     		ldr	r0, .L33+24
 309 003c FFF7FEFF 		bl	Printf
 310              	.LVL11:
 311 0040 11E0     		b	.L27
 312              	.L30:
 176:VS4210/monitor.c **** 	}
 177:VS4210/monitor.c **** 	else if(minute)
 313              		.loc 1 177 0
 314 0042 0D4B     		ldr	r3, .L33+12
 315 0044 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 316 0046 3AB1     		cbz	r2, .L31
 178:VS4210/monitor.c **** 		{
 179:VS4210/monitor.c **** 		Printf("\r\nMCU_I2C[%02x][%d:%d]>",(WORD)Monitor_I2C,(WORD)minute,(WORD)second);
 317              		.loc 1 179 0
 318 0048 0F48     		ldr	r0, .L33+28
 319 004a 094B     		ldr	r3, .L33+4
 320 004c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 321 004e 0B4B     		ldr	r3, .L33+16
 322 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 323 0052 FFF7FEFF 		bl	Printf
 324              	.LVL12:
 325 0056 06E0     		b	.L27
 326              	.L31:
 180:VS4210/monitor.c **** 		}
 181:VS4210/monitor.c **** 	else
 182:VS4210/monitor.c **** 		{
 183:VS4210/monitor.c **** 		Printf("\r\nMCU_I2C[%02x][%d]>",(WORD)Monitor_I2C,(WORD)second);
 327              		.loc 1 183 0
 328 0058 0C48     		ldr	r0, .L33+32
 329 005a 054B     		ldr	r3, .L33+4
 330 005c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 331 005e 074B     		ldr	r3, .L33+16
 332 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 333 0062 FFF7FEFF 		bl	Printf
 334              	.LVL13:
 335              	.L27:
 184:VS4210/monitor.c **** 		}
 185:VS4210/monitor.c **** 
 186:VS4210/monitor.c **** }
 336              		.loc 1 186 0
 337 0066 03B0     		add	sp, sp, #12
 338              	.LCFI8:
 339              		.cfi_def_cfa_offset 4
 340              		@ sp needed
ARM GAS  /tmp/ccD8Q2iX.s 			page 10


 341 0068 5DF804FB 		ldr	pc, [sp], #4
 342              	.L34:
 343              		.align	2
 344              	.L33:
 345 006c 00000000 		.word	day
 346 0070 00000000 		.word	.LANCHOR4
 347 0074 00000000 		.word	hour
 348 0078 00000000 		.word	minute
 349 007c 00000000 		.word	second
 350 0080 00000000 		.word	.LC0
 351 0084 20000000 		.word	.LC1
 352 0088 3C000000 		.word	.LC2
 353 008c 54000000 		.word	.LC3
 354              		.cfi_endproc
 355              	.LFE71:
 357              		.section	.text.Mon_tx,"ax",%progbits
 358              		.align	2
 359              		.global	Mon_tx
 360              		.thumb
 361              		.thumb_func
 363              	Mon_tx:
 364              	.LFB72:
 187:VS4210/monitor.c **** 
 188:VS4210/monitor.c **** void Mon_tx(BYTE ch)
 189:VS4210/monitor.c **** {
 365              		.loc 1 189 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              	.LVL14:
 370 0000 08B5     		push	{r3, lr}
 371              	.LCFI9:
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 3, -8
 374              		.cfi_offset 14, -4
 190:VS4210/monitor.c **** 	RS_tx(ch);
 375              		.loc 1 190 0
 376 0002 FFF7FEFF 		bl	RS_tx
 377              	.LVL15:
 378 0006 08BD     		pop	{r3, pc}
 379              		.cfi_endproc
 380              	.LFE72:
 382              		.section	.text.a2i,"ax",%progbits
 383              		.align	2
 384              		.global	a2i
 385              		.thumb
 386              		.thumb_func
 388              	a2i:
 389              	.LFB73:
 191:VS4210/monitor.c **** }
 192:VS4210/monitor.c **** 
 193:VS4210/monitor.c **** 
 194:VS4210/monitor.c **** //=============================================================================
 195:VS4210/monitor.c **** //		Convert ASCII to Binery                                             
 196:VS4210/monitor.c **** //=============================================================================
 197:VS4210/monitor.c ****  DWORD a2i(BYTE *str)
 198:VS4210/monitor.c **** {
ARM GAS  /tmp/ccD8Q2iX.s 			page 11


 390              		.loc 1 198 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394              		@ link register save eliminated.
 395              	.LVL16:
 199:VS4210/monitor.c **** 	 DWORD num=0;
 396              		.loc 1 199 0
 397 0000 0023     		movs	r3, #0
 398              	.LVL17:
 399              	.L39:
 200:VS4210/monitor.c **** 	BYTE i;
 201:VS4210/monitor.c **** 
 202:VS4210/monitor.c **** 	for(i=0; ; i++, str++) {
 203:VS4210/monitor.c **** 		if( *str=='\0' || *str==' ' ) break;
 400              		.loc 1 203 0
 401 0002 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 402 0004 42B1     		cbz	r2, .L38
 403              		.loc 1 203 0 is_stmt 0 discriminator 1
 404 0006 202A     		cmp	r2, #32
 405 0008 06D0     		beq	.L38
 204:VS4210/monitor.c **** 		num = num*10 + *str - '0';
 406              		.loc 1 204 0 is_stmt 1
 407 000a 03EB8303 		add	r3, r3, r3, lsl #2
 408              	.LVL18:
 409 000e 5B00     		lsls	r3, r3, #1
 410 0010 1344     		add	r3, r3, r2
 411 0012 303B     		subs	r3, r3, #48
 412              	.LVL19:
 202:VS4210/monitor.c **** 		if( *str=='\0' || *str==' ' ) break;
 413              		.loc 1 202 0
 414 0014 0130     		adds	r0, r0, #1
 415              	.LVL20:
 205:VS4210/monitor.c **** 	}
 416              		.loc 1 205 0
 417 0016 F4E7     		b	.L39
 418              	.L38:
 206:VS4210/monitor.c **** 	return num;
 207:VS4210/monitor.c **** }
 419              		.loc 1 207 0
 420 0018 1846     		mov	r0, r3
 421              	.LVL21:
 422 001a 7047     		bx	lr
 423              		.cfi_endproc
 424              	.LFE73:
 426              		.section	.text.Asc1Bin,"ax",%progbits
 427              		.align	2
 428              		.global	Asc1Bin
 429              		.thumb
 430              		.thumb_func
 432              	Asc1Bin:
 433              	.LFB74:
 208:VS4210/monitor.c **** 
 209:VS4210/monitor.c **** BYTE Asc1Bin(BYTE asc)
 210:VS4210/monitor.c **** {
 434              		.loc 1 210 0
 435              		.cfi_startproc
ARM GAS  /tmp/ccD8Q2iX.s 			page 12


 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 439              	.LVL22:
 440 0000 0246     		mov	r2, r0
 211:VS4210/monitor.c **** 	if(asc>='0' && asc <='9') return (asc - '0');
 441              		.loc 1 211 0
 442 0002 A0F13003 		sub	r3, r0, #48
 443 0006 D8B2     		uxtb	r0, r3
 444              	.LVL23:
 445 0008 0928     		cmp	r0, #9
 446 000a 12D9     		bls	.L41
 212:VS4210/monitor.c **** 	if(asc>='a' && asc <='f') return (asc - 'a' + 0x0a);
 447              		.loc 1 212 0
 448 000c A2F16103 		sub	r3, r2, #97
 449 0010 DBB2     		uxtb	r3, r3
 450 0012 052B     		cmp	r3, #5
 451 0014 03D8     		bhi	.L42
 452              		.loc 1 212 0 is_stmt 0 discriminator 1
 453 0016 A2F15700 		sub	r0, r2, #87
 454 001a C0B2     		uxtb	r0, r0
 455 001c 7047     		bx	lr
 456              	.L42:
 213:VS4210/monitor.c **** 	if(asc>='A' && asc <='F') return (asc - 'A' + 0x0a);
 457              		.loc 1 213 0 is_stmt 1
 458 001e A2F14103 		sub	r3, r2, #65
 459 0022 DBB2     		uxtb	r3, r3
 460 0024 052B     		cmp	r3, #5
 461 0026 03D8     		bhi	.L43
 462              		.loc 1 213 0 is_stmt 0 discriminator 1
 463 0028 A2F13700 		sub	r0, r2, #55
 464 002c C0B2     		uxtb	r0, r0
 465 002e 7047     		bx	lr
 466              	.L43:
 214:VS4210/monitor.c **** 	
 215:VS4210/monitor.c **** 	return 0;
 467              		.loc 1 215 0 is_stmt 1
 468 0030 0020     		movs	r0, #0
 469              	.L41:
 216:VS4210/monitor.c **** }
 470              		.loc 1 216 0
 471 0032 7047     		bx	lr
 472              		.cfi_endproc
 473              	.LFE74:
 475              		.section	.text.Asc2Bin,"ax",%progbits
 476              		.align	2
 477              		.global	Asc2Bin
 478              		.thumb
 479              		.thumb_func
 481              	Asc2Bin:
 482              	.LFB75:
 217:VS4210/monitor.c **** 
 218:VS4210/monitor.c **** BYTE Asc2Bin(PDATA_P BYTE *s)
 219:VS4210/monitor.c **** {
 483              		.loc 1 219 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccD8Q2iX.s 			page 13


 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              	.LVL24:
 488 0000 38B5     		push	{r3, r4, r5, lr}
 489              	.LCFI10:
 490              		.cfi_def_cfa_offset 16
 491              		.cfi_offset 3, -16
 492              		.cfi_offset 4, -12
 493              		.cfi_offset 5, -8
 494              		.cfi_offset 14, -4
 495 0002 0546     		mov	r5, r0
 496              	.LVL25:
 220:VS4210/monitor.c **** 	WORD bin;
 221:VS4210/monitor.c **** 
 222:VS4210/monitor.c **** 	bin = 0;
 497              		.loc 1 222 0
 498 0004 0023     		movs	r3, #0
 223:VS4210/monitor.c **** 	while(*s != '\0' && *s !=' ') {
 499              		.loc 1 223 0
 500 0006 04E0     		b	.L45
 501              	.LVL26:
 502              	.L47:
 224:VS4210/monitor.c **** 		bin = bin<<4;
 503              		.loc 1 224 0
 504 0008 1C01     		lsls	r4, r3, #4
 505              	.LVL27:
 225:VS4210/monitor.c **** 		bin = bin + Asc1Bin(*s);
 506              		.loc 1 225 0
 507 000a FFF7FEFF 		bl	Asc1Bin
 508              	.LVL28:
 509 000e 0319     		adds	r3, r0, r4
 510              	.LVL29:
 226:VS4210/monitor.c **** 		s++;
 511              		.loc 1 226 0
 512 0010 0135     		adds	r5, r5, #1
 513              	.LVL30:
 514              	.L45:
 223:VS4210/monitor.c **** 		bin = bin<<4;
 515              		.loc 1 223 0
 516 0012 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 517 0014 08B1     		cbz	r0, .L46
 223:VS4210/monitor.c **** 		bin = bin<<4;
 518              		.loc 1 223 0 is_stmt 0 discriminator 1
 519 0016 2028     		cmp	r0, #32
 520 0018 F6D1     		bne	.L47
 521              	.L46:
 227:VS4210/monitor.c **** 	}
 228:VS4210/monitor.c **** 	return (bin);
 229:VS4210/monitor.c **** }
 522              		.loc 1 229 0 is_stmt 1
 523 001a D8B2     		uxtb	r0, r3
 524 001c 38BD     		pop	{r3, r4, r5, pc}
 525              		.cfi_endproc
 526              	.LFE75:
 528 001e 00BF     		.section	.text.hs_toupper,"ax",%progbits
 529              		.align	2
 530              		.global	hs_toupper
 531              		.thumb
ARM GAS  /tmp/ccD8Q2iX.s 			page 14


 532              		.thumb_func
 534              	hs_toupper:
 535              	.LFB76:
 230:VS4210/monitor.c **** 
 231:VS4210/monitor.c **** 
 232:VS4210/monitor.c **** //=============================================================================
 233:VS4210/monitor.c **** BYTE hs_toupper(BYTE ch)
 234:VS4210/monitor.c **** {
 536              		.loc 1 234 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540              		@ link register save eliminated.
 541              	.LVL31:
 235:VS4210/monitor.c **** 	if( ch>='a' && ch<='z' )
 542              		.loc 1 235 0
 543 0000 A0F16103 		sub	r3, r0, #97
 544 0004 DBB2     		uxtb	r3, r3
 545 0006 192B     		cmp	r3, #25
 546 0008 01D8     		bhi	.L50
 236:VS4210/monitor.c **** 		return (ch - 'a' + 'A');
 547              		.loc 1 236 0
 548 000a 2038     		subs	r0, r0, #32
 549              	.LVL32:
 550 000c C0B2     		uxtb	r0, r0
 551              	.L50:
 237:VS4210/monitor.c **** 	
 238:VS4210/monitor.c **** 	return ch;
 239:VS4210/monitor.c **** }
 552              		.loc 1 239 0
 553 000e 7047     		bx	lr
 554              		.cfi_endproc
 555              	.LFE76:
 557              		.section	.text.stricmp,"ax",%progbits
 558              		.align	2
 559              		.global	stricmp
 560              		.thumb
 561              		.thumb_func
 563              	stricmp:
 564              	.LFB77:
 240:VS4210/monitor.c **** 
 241:VS4210/monitor.c **** int stricmp(BYTE *ptr1, BYTE *ptr2)
 242:VS4210/monitor.c **** {
 565              		.loc 1 242 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              	.LVL33:
 570 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 571              	.LCFI11:
 572              		.cfi_def_cfa_offset 24
 573              		.cfi_offset 3, -24
 574              		.cfi_offset 4, -20
 575              		.cfi_offset 5, -16
 576              		.cfi_offset 6, -12
 577              		.cfi_offset 7, -8
 578              		.cfi_offset 14, -4
ARM GAS  /tmp/ccD8Q2iX.s 			page 15


 579 0002 0546     		mov	r5, r0
 580 0004 0E46     		mov	r6, r1
 581              	.LVL34:
 243:VS4210/monitor.c **** 	int		i;
 244:VS4210/monitor.c **** 	int		ret;
 245:VS4210/monitor.c **** 	
 246:VS4210/monitor.c **** 	for(i=0; *ptr1; i++) {
 582              		.loc 1 246 0
 583 0006 0AE0     		b	.L53
 584              	.LVL35:
 585              	.L55:
 247:VS4210/monitor.c **** 	  ret = hs_toupper(*ptr1++) - hs_toupper(*ptr2++);
 586              		.loc 1 247 0
 587 0008 0135     		adds	r5, r5, #1
 588              	.LVL36:
 589 000a FFF7FEFF 		bl	hs_toupper
 590              	.LVL37:
 591 000e 0446     		mov	r4, r0
 592 0010 771C     		adds	r7, r6, #1
 593              	.LVL38:
 594 0012 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 595 0014 FFF7FEFF 		bl	hs_toupper
 596              	.LVL39:
 248:VS4210/monitor.c **** 		if( ret ) return ret;
 597              		.loc 1 248 0
 598 0018 201A     		subs	r0, r4, r0
 599              	.LVL40:
 600 001a 03D1     		bne	.L54
 247:VS4210/monitor.c **** 	  ret = hs_toupper(*ptr1++) - hs_toupper(*ptr2++);
 601              		.loc 1 247 0
 602 001c 3E46     		mov	r6, r7
 603              	.LVL41:
 604              	.L53:
 246:VS4210/monitor.c **** 	  ret = hs_toupper(*ptr1++) - hs_toupper(*ptr2++);
 605              		.loc 1 246 0 discriminator 1
 606 001e 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 607 0020 0028     		cmp	r0, #0
 608 0022 F1D1     		bne	.L55
 609              	.LVL42:
 610              	.L54:
 249:VS4210/monitor.c **** 	}
 250:VS4210/monitor.c **** 	return 0;
 251:VS4210/monitor.c **** }
 611              		.loc 1 251 0
 612 0024 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 613              		.cfi_endproc
 614              	.LFE77:
 616 0026 00BF     		.section	.text.MonReadI2C,"ax",%progbits
 617              		.align	2
 618              		.global	MonReadI2C
 619              		.thumb
 620              		.thumb_func
 622              	MonReadI2C:
 623              	.LFB78:
 252:VS4210/monitor.c **** 
 253:VS4210/monitor.c **** //=============================================================================
 254:VS4210/monitor.c **** //
ARM GAS  /tmp/ccD8Q2iX.s 			page 16


 255:VS4210/monitor.c **** //=============================================================================
 256:VS4210/monitor.c **** /*
 257:VS4210/monitor.c **** void SetMonAddress(BYTE addr)
 258:VS4210/monitor.c **** {
 259:VS4210/monitor.c **** 	MonAddress = addr;
 260:VS4210/monitor.c **** }
 261:VS4210/monitor.c **** */
 262:VS4210/monitor.c **** void MonReadI2C(void)
 263:VS4210/monitor.c **** {
 624              		.loc 1 263 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628              		@ link register save eliminated.
 629 0000 7047     		bx	lr
 630              		.cfi_endproc
 631              	.LFE78:
 633 0002 00BF     		.section	.text.MonWriteI2C,"ax",%progbits
 634              		.align	2
 635              		.global	MonWriteI2C
 636              		.thumb
 637              		.thumb_func
 639              	MonWriteI2C:
 640              	.LFB79:
 264:VS4210/monitor.c **** /*
 265:VS4210/monitor.c **** 	if( argc>=2 ) MonIndex = Asc2Bin( argv[1] );
 266:VS4210/monitor.c **** 	else	{
 267:VS4210/monitor.c **** 		Printf("   --> Missing parameter !!!");
 268:VS4210/monitor.c **** 		return;
 269:VS4210/monitor.c **** 	}
 270:VS4210/monitor.c **** 
 271:VS4210/monitor.c **** 	if ( MonAddress == TW88I2CAddress )
 272:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 273:VS4210/monitor.c **** 	else
 274:VS4210/monitor.c **** 		MonRdata = ReadI2C(MonAddress, MonIndex);
 275:VS4210/monitor.c **** 
 276:VS4210/monitor.c **** 	if( echo )
 277:VS4210/monitor.c **** 		Printf("\r\nRead %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);	
 278:VS4210/monitor.c **** 	
 279:VS4210/monitor.c **** 	MonWdata = MonRdata;
 280:VS4210/monitor.c **** 	*/
 281:VS4210/monitor.c **** }
 282:VS4210/monitor.c **** 
 283:VS4210/monitor.c **** 
 284:VS4210/monitor.c **** void MonWriteI2C(void)
 285:VS4210/monitor.c **** {
 641              		.loc 1 285 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645              		@ link register save eliminated.
 646 0000 7047     		bx	lr
 647              		.cfi_endproc
 648              	.LFE79:
 650 0002 00BF     		.section	.text.MonIncDecI2C,"ax",%progbits
 651              		.align	2
 652              		.global	MonIncDecI2C
ARM GAS  /tmp/ccD8Q2iX.s 			page 17


 653              		.thumb
 654              		.thumb_func
 656              	MonIncDecI2C:
 657              	.LFB80:
 286:VS4210/monitor.c **** /*
 287:VS4210/monitor.c **** 	if( argc<3 ) {
 288:VS4210/monitor.c **** 		Printf("   --> Missing parameter !!!");
 289:VS4210/monitor.c **** 		return;
 290:VS4210/monitor.c **** 	}
 291:VS4210/monitor.c **** 	
 292:VS4210/monitor.c **** 	MonIndex = Asc2Bin( argv[1] );
 293:VS4210/monitor.c **** 	MonWdata = Asc2Bin( argv[2] );
 294:VS4210/monitor.c **** 	
 295:VS4210/monitor.c **** 	if( echo ) {
 296:VS4210/monitor.c **** 		Printf("\r\nWrite %2xh:%2xh ", (tWord)MonIndex, (tWord)MonWdata);
 297:VS4210/monitor.c **** 		if ( MonAddress == TW88I2CAddress ) {
 298:VS4210/monitor.c **** 			WriteTW88(MonIndex, MonWdata);
 299:VS4210/monitor.c **** 			MonRdata = ReadTW88(MonIndex);
 300:VS4210/monitor.c **** 		}
 301:VS4210/monitor.c **** 		else {
 302:VS4210/monitor.c **** 			WriteI2C(MonAddress, MonIndex, MonWdata);
 303:VS4210/monitor.c **** 			MonRdata = ReadI2C(MonAddress, MonIndex);
 304:VS4210/monitor.c **** 		}
 305:VS4210/monitor.c ****    		Printf("==> Read %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 306:VS4210/monitor.c **** 	}
 307:VS4210/monitor.c **** 	else {
 308:VS4210/monitor.c **** 		if ( MonAddress == TW88I2CAddress ) {
 309:VS4210/monitor.c **** 			WriteTW88(MonIndex, MonWdata);
 310:VS4210/monitor.c **** 		}
 311:VS4210/monitor.c **** 		else {
 312:VS4210/monitor.c **** 			WriteI2C(MonAddress, MonIndex, MonWdata);
 313:VS4210/monitor.c **** 		}
 314:VS4210/monitor.c **** 	}
 315:VS4210/monitor.c **** 	*/
 316:VS4210/monitor.c **** }
 317:VS4210/monitor.c **** 
 318:VS4210/monitor.c **** 
 319:VS4210/monitor.c **** void MonIncDecI2C(BYTE inc)
 320:VS4210/monitor.c **** {
 658              		.loc 1 320 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662              	.LVL43:
 663              		.loc 1 320 0
 664 0000 10B5     		push	{r4, lr}
 665              	.LCFI12:
 666              		.cfi_def_cfa_offset 8
 667              		.cfi_offset 4, -8
 668              		.cfi_offset 14, -4
 321:VS4210/monitor.c **** 
 322:VS4210/monitor.c **** BYTE ret;
 323:VS4210/monitor.c **** 
 324:VS4210/monitor.c **** 	switch(inc){
 669              		.loc 1 324 0
 670 0002 0B28     		cmp	r0, #11
 671 0004 1AD8     		bhi	.L61
ARM GAS  /tmp/ccD8Q2iX.s 			page 18


 672 0006 DFE800F0 		tbb	[pc, r0]
 673              	.L63:
 674 000a 06       		.byte	(.L62-.L63)/2
 675 000b 0B       		.byte	(.L64-.L63)/2
 676 000c 19       		.byte	(.L61-.L63)/2
 677 000d 19       		.byte	(.L61-.L63)/2
 678 000e 19       		.byte	(.L61-.L63)/2
 679 000f 19       		.byte	(.L61-.L63)/2
 680 0010 19       		.byte	(.L61-.L63)/2
 681 0011 19       		.byte	(.L61-.L63)/2
 682 0012 19       		.byte	(.L61-.L63)/2
 683 0013 19       		.byte	(.L61-.L63)/2
 684 0014 10       		.byte	(.L65-.L63)/2
 685 0015 15       		.byte	(.L66-.L63)/2
 686              		.p2align 1
 687              	.L62:
 325:VS4210/monitor.c **** 	case 0:  MonWdata--;	break;
 688              		.loc 1 325 0
 689 0016 3A4A     		ldr	r2, .L73
 690 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 691 001a 013B     		subs	r3, r3, #1
 692 001c 1370     		strb	r3, [r2]
 693 001e 0DE0     		b	.L61
 694              	.L64:
 326:VS4210/monitor.c **** 	case 1:  MonWdata++;	break;
 695              		.loc 1 326 0
 696 0020 374A     		ldr	r2, .L73
 697 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 698 0024 0133     		adds	r3, r3, #1
 699 0026 1370     		strb	r3, [r2]
 700 0028 08E0     		b	.L61
 701              	.L65:
 327:VS4210/monitor.c **** 	case 10: MonWdata-=0x10;	break;
 702              		.loc 1 327 0
 703 002a 354A     		ldr	r2, .L73
 704 002c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 705 002e 103B     		subs	r3, r3, #16
 706 0030 1370     		strb	r3, [r2]
 707 0032 03E0     		b	.L61
 708              	.L66:
 328:VS4210/monitor.c **** 	case 11: MonWdata+=0x10;	break;
 709              		.loc 1 328 0
 710 0034 324A     		ldr	r2, .L73
 711 0036 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 712 0038 1033     		adds	r3, r3, #16
 713 003a 1370     		strb	r3, [r2]
 714              	.L61:
 329:VS4210/monitor.c **** 	}
 330:VS4210/monitor.c **** 
 331:VS4210/monitor.c **** 	/*
 332:VS4210/monitor.c **** 
 333:VS4210/monitor.c **** 	if ( MonAddress == TW88I2CAddress ) {
 334:VS4210/monitor.c **** 		WriteTW88(MonIndex, MonWdata);
 335:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 336:VS4210/monitor.c **** 	}
 337:VS4210/monitor.c **** 	else {
 338:VS4210/monitor.c **** 		WriteI2C(MonAddress, MonIndex, MonWdata);
ARM GAS  /tmp/ccD8Q2iX.s 			page 19


 339:VS4210/monitor.c **** 		MonRdata = ReadI2C(MonAddress, MonIndex);
 340:VS4210/monitor.c **** 	}
 341:VS4210/monitor.c **** 
 342:VS4210/monitor.c **** 	if( echo ) {
 343:VS4210/monitor.c **** 		Printf("Write %2xh:%2xh ", (tWord)MonIndex, (tWord)MonWdata);
 344:VS4210/monitor.c **** 		Printf("==> Read %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 345:VS4210/monitor.c **** 	}
 346:VS4210/monitor.c **** 
 347:VS4210/monitor.c **** */
 348:VS4210/monitor.c **** 	if(Monitor_I2C==0xA0)
 715              		.loc 1 348 0
 716 003c 314B     		ldr	r3, .L73+4
 717 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 718 0040 A02B     		cmp	r3, #160
 719 0042 0ED1     		bne	.L67
 349:VS4210/monitor.c **** 		{
 350:VS4210/monitor.c **** 		WriteEEP( MonIndex, MonWdata );
 720              		.loc 1 350 0
 721 0044 304C     		ldr	r4, .L73+8
 722 0046 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 723              	.LVL44:
 724 0048 2D4B     		ldr	r3, .L73
 725 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 726 004c FFF7FEFF 		bl	WriteEEP
 727              	.LVL45:
 351:VS4210/monitor.c **** 		 ret= ReadEEP(MonIndex);	
 728              		.loc 1 351 0
 729 0050 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 730 0052 FFF7FEFF 		bl	ReadEEP
 731              	.LVL46:
 732 0056 0246     		mov	r2, r0
 733              	.LVL47:
 352:VS4210/monitor.c **** 		  Printf("\r\nEEPROM Write addr=%02x  data=%02x",(WORD)MonIndex,(WORD)ret);
 734              		.loc 1 352 0
 735 0058 2C48     		ldr	r0, .L73+12
 736 005a 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 737 005c FFF7FEFF 		bl	Printf
 738              	.LVL48:
 739 0060 4AE0     		b	.L68
 740              	.LVL49:
 741              	.L67:
 353:VS4210/monitor.c **** 		}
 354:VS4210/monitor.c **** 	else if(Monitor_I2C==0x40)
 742              		.loc 1 354 0
 743 0062 402B     		cmp	r3, #64
 744 0064 0ED1     		bne	.L69
 355:VS4210/monitor.c **** 	{
 356:VS4210/monitor.c **** 		VXISI2CWrite( MonIndex, MonWdata );
 745              		.loc 1 356 0
 746 0066 284C     		ldr	r4, .L73+8
 747 0068 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 748              	.LVL50:
 749 006a 254B     		ldr	r3, .L73
 750 006c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 751 006e FFF7FEFF 		bl	VXISI2CWrite
 752              	.LVL51:
 357:VS4210/monitor.c **** 		 ret= VXISI2CRead(MonIndex);	
ARM GAS  /tmp/ccD8Q2iX.s 			page 20


 753              		.loc 1 357 0
 754 0072 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 755 0074 FFF7FEFF 		bl	VXISI2CRead
 756              	.LVL52:
 757 0078 0246     		mov	r2, r0
 758              	.LVL53:
 358:VS4210/monitor.c **** 		   Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)MonIndex,(WORD)ret);
 759              		.loc 1 358 0
 760 007a 2548     		ldr	r0, .L73+16
 761 007c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 762 007e FFF7FEFF 		bl	Printf
 763              	.LVL54:
 764 0082 39E0     		b	.L68
 765              	.LVL55:
 766              	.L69:
 359:VS4210/monitor.c **** 	}
 360:VS4210/monitor.c **** 	else if(Monitor_I2C==0x12)
 767              		.loc 1 360 0
 768 0084 122B     		cmp	r3, #18
 769 0086 0ED1     		bne	.L70
 361:VS4210/monitor.c **** 	{
 362:VS4210/monitor.c **** 		VS8812Write( MonIndex ,MonWdata);
 770              		.loc 1 362 0
 771 0088 1F4C     		ldr	r4, .L73+8
 772 008a 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 773              	.LVL56:
 774 008c 1C4B     		ldr	r3, .L73
 775 008e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 776 0090 FFF7FEFF 		bl	VS8812Write
 777              	.LVL57:
 363:VS4210/monitor.c **** 		ret= VS8812Read(MonIndex);	
 778              		.loc 1 363 0
 779 0094 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 780 0096 FFF7FEFF 		bl	VS8812Read
 781              	.LVL58:
 782 009a 0246     		mov	r2, r0
 783              	.LVL59:
 364:VS4210/monitor.c **** 		   Printf("\r\nVS8812 Write addr=%02x  data=%02x",(WORD)MonIndex,(WORD)ret);
 784              		.loc 1 364 0
 785 009c 1D48     		ldr	r0, .L73+20
 786 009e 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 787 00a0 FFF7FEFF 		bl	Printf
 788              	.LVL60:
 789 00a4 28E0     		b	.L68
 790              	.LVL61:
 791              	.L70:
 365:VS4210/monitor.c **** 	}
 366:VS4210/monitor.c **** 	else if( Monitor_I2C==0x88)
 792              		.loc 1 366 0
 793 00a6 882B     		cmp	r3, #136
 794 00a8 0ED1     		bne	.L71
 367:VS4210/monitor.c **** 		{
 368:VS4210/monitor.c **** 		tp28xx_byte_write( MonIndex, MonWdata);	
 795              		.loc 1 368 0
 796 00aa 174C     		ldr	r4, .L73+8
 797 00ac 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 798              	.LVL62:
ARM GAS  /tmp/ccD8Q2iX.s 			page 21


 799 00ae 144B     		ldr	r3, .L73
 800 00b0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 801 00b2 FFF7FEFF 		bl	tp28xx_byte_write
 802              	.LVL63:
 369:VS4210/monitor.c **** 		ret= tp28xx_byte_read(MonIndex);			
 803              		.loc 1 369 0
 804 00b6 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 805 00b8 FFF7FEFF 		bl	tp28xx_byte_read
 806              	.LVL64:
 807 00bc 0246     		mov	r2, r0
 808              	.LVL65:
 370:VS4210/monitor.c **** 		 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)MonIndex,(WORD)ret);
 809              		.loc 1 370 0
 810 00be 1648     		ldr	r0, .L73+24
 811 00c0 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 812 00c2 FFF7FEFF 		bl	Printf
 813              	.LVL66:
 814 00c6 17E0     		b	.L68
 815              	.LVL67:
 816              	.L71:
 371:VS4210/monitor.c **** 		}
 372:VS4210/monitor.c **** 	
 373:VS4210/monitor.c **** 	else if( Monitor_I2C==0x90)
 817              		.loc 1 373 0
 818 00c8 902B     		cmp	r3, #144
 819 00ca 15D1     		bne	.L68
 374:VS4210/monitor.c **** 		{
 375:VS4210/monitor.c **** 		gHDMI_Index=0;	
 820              		.loc 1 375 0
 821 00cc 0022     		movs	r2, #0
 822 00ce 134B     		ldr	r3, .L73+28
 823 00d0 1A70     		strb	r2, [r3]
 376:VS4210/monitor.c **** 		HDMIRX_WriteI2C_Byte( MonIndex, MonWdata ); 
 824              		.loc 1 376 0
 825 00d2 0D4C     		ldr	r4, .L73+8
 826 00d4 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 827              	.LVL68:
 828 00d6 0A4B     		ldr	r3, .L73
 829 00d8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 830 00da FFF7FEFF 		bl	HDMIRX_WriteI2C_Byte
 831              	.LVL69:
 377:VS4210/monitor.c **** 		ret= HDMIRX_ReadI2C_Byte(MonIndex); 	
 832              		.loc 1 377 0
 833 00de 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 834 00e0 FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 835              	.LVL70:
 836 00e4 0446     		mov	r4, r0
 837              	.LVL71:
 378:VS4210/monitor.c **** 		 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 838              		.loc 1 378 0
 839 00e6 0E4B     		ldr	r3, .L73+32
 840 00e8 5868     		ldr	r0, [r3, #4]
 841 00ea FFF7FEFF 		bl	Asc2Bin
 842              	.LVL72:
 843 00ee 0146     		mov	r1, r0
 844 00f0 0C48     		ldr	r0, .L73+36
 845 00f2 2246     		mov	r2, r4
ARM GAS  /tmp/ccD8Q2iX.s 			page 22


 846 00f4 FFF7FEFF 		bl	Printf
 847              	.LVL73:
 848              	.L68:
 379:VS4210/monitor.c **** 		}
 380:VS4210/monitor.c **** 
 381:VS4210/monitor.c **** 	Prompt();
 849              		.loc 1 381 0
 850 00f8 FFF7FEFF 		bl	Prompt
 851              	.LVL74:
 852 00fc 10BD     		pop	{r4, pc}
 853              	.L74:
 854 00fe 00BF     		.align	2
 855              	.L73:
 856 0100 00000000 		.word	MonWdata
 857 0104 00000000 		.word	.LANCHOR4
 858 0108 00000000 		.word	MonIndex
 859 010c 6C000000 		.word	.LC4
 860 0110 90000000 		.word	.LC5
 861 0114 B4000000 		.word	.LC6
 862 0118 D8000000 		.word	.LC7
 863 011c 00000000 		.word	gHDMI_Index
 864 0120 00000000 		.word	argv
 865 0124 FC000000 		.word	.LC8
 866              		.cfi_endproc
 867              	.LFE80:
 869              		.section	.text.MonDumpI2C,"ax",%progbits
 870              		.align	2
 871              		.global	MonDumpI2C
 872              		.thumb
 873              		.thumb_func
 875              	MonDumpI2C:
 876              	.LFB81:
 382:VS4210/monitor.c **** 
 383:VS4210/monitor.c **** }
 384:VS4210/monitor.c **** 
 385:VS4210/monitor.c **** void MonDumpI2C(void)
 386:VS4210/monitor.c **** {
 877              		.loc 1 386 0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 0
 880              		@ frame_needed = 0, uses_anonymous_args = 0
 881              		@ link register save eliminated.
 882 0000 7047     		bx	lr
 883              		.cfi_endproc
 884              	.LFE81:
 886 0002 00BF     		.section	.text.MonNewReadI2C,"ax",%progbits
 887              		.align	2
 888              		.global	MonNewReadI2C
 889              		.thumb
 890              		.thumb_func
 892              	MonNewReadI2C:
 893              	.LFB82:
 387:VS4210/monitor.c **** /*
 388:VS4210/monitor.c **** 	BYTE ToMonIndex;
 389:VS4210/monitor.c **** 	int  cnt=8;
 390:VS4210/monitor.c **** 
 391:VS4210/monitor.c **** 	if( argc>=2 ) MonIndex = Asc2Bin(argv[1]);
ARM GAS  /tmp/ccD8Q2iX.s 			page 23


 392:VS4210/monitor.c **** 	if( argc>=3 ) ToMonIndex = Asc2Bin(argv[2]);
 393:VS4210/monitor.c **** 	else ToMonIndex = MonIndex+cnt;
 394:VS4210/monitor.c **** 	if ( ToMonIndex < MonIndex ) ToMonIndex = 0xFF;
 395:VS4210/monitor.c **** 	cnt = ToMonIndex - MonIndex + 1;
 396:VS4210/monitor.c **** 
 397:VS4210/monitor.c **** 	if( echo ) {
 398:VS4210/monitor.c **** 		if ( MonAddress == TW88I2CAddress ) {
 399:VS4210/monitor.c **** 			for ( ; cnt > 0; cnt-- ) {
 400:VS4210/monitor.c **** 				MonRdata = ReadTW88(MonIndex);
 401:VS4210/monitor.c **** 				Printf("\r\n==> Read %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 402:VS4210/monitor.c **** 				MonIndex++;
 403:VS4210/monitor.c **** 			}
 404:VS4210/monitor.c **** 		}
 405:VS4210/monitor.c **** 		else {
 406:VS4210/monitor.c **** 			for ( ; cnt > 0; cnt-- ) {
 407:VS4210/monitor.c **** 				MonRdata = ReadI2C(MonAddress, MonIndex);
 408:VS4210/monitor.c **** 				Printf("\r\n==> Read %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 409:VS4210/monitor.c **** 				MonIndex++;
 410:VS4210/monitor.c **** 			}
 411:VS4210/monitor.c **** 		}
 412:VS4210/monitor.c **** 	}
 413:VS4210/monitor.c **** 	else {
 414:VS4210/monitor.c **** 		if ( MonAddress == TW88I2CAddress ) {
 415:VS4210/monitor.c **** 			for ( ; cnt > 0; cnt-- ) {
 416:VS4210/monitor.c **** 				MonRdata = ReadTW88(MonIndex);
 417:VS4210/monitor.c **** 				MonIndex++;
 418:VS4210/monitor.c **** 			}
 419:VS4210/monitor.c **** 		}
 420:VS4210/monitor.c **** 		else {
 421:VS4210/monitor.c **** 			for ( ; cnt > 0; cnt-- ) {
 422:VS4210/monitor.c **** 				MonRdata = ReadI2C(MonAddress, MonIndex);
 423:VS4210/monitor.c **** 				MonIndex++;
 424:VS4210/monitor.c **** 			}
 425:VS4210/monitor.c **** 		}
 426:VS4210/monitor.c **** 	}
 427:VS4210/monitor.c **** 	*/
 428:VS4210/monitor.c **** }
 429:VS4210/monitor.c **** 
 430:VS4210/monitor.c **** //-----------------------------------------------------------------------------
 431:VS4210/monitor.c **** 
 432:VS4210/monitor.c **** void MonNewReadI2C(void)
 433:VS4210/monitor.c **** {
 894              		.loc 1 433 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 0
 897              		@ frame_needed = 0, uses_anonymous_args = 0
 898              		@ link register save eliminated.
 899 0000 7047     		bx	lr
 900              		.cfi_endproc
 901              	.LFE82:
 903 0002 00BF     		.section	.text.MonNewWriteI2C,"ax",%progbits
 904              		.align	2
 905              		.global	MonNewWriteI2C
 906              		.thumb
 907              		.thumb_func
 909              	MonNewWriteI2C:
 910              	.LFB83:
ARM GAS  /tmp/ccD8Q2iX.s 			page 24


 434:VS4210/monitor.c **** /*
 435:VS4210/monitor.c **** 	BYTE Slave;
 436:VS4210/monitor.c **** 
 437:VS4210/monitor.c **** 	if( argc>=3 ) MonIndex = Asc2Bin( argv[2] );
 438:VS4210/monitor.c **** 	else	{
 439:VS4210/monitor.c **** 		Printf("   --> Missing parameter !!!");
 440:VS4210/monitor.c **** 		return;
 441:VS4210/monitor.c **** 	}
 442:VS4210/monitor.c **** 	Slave = Asc2Bin(argv[1]);
 443:VS4210/monitor.c **** 
 444:VS4210/monitor.c **** 	if ( Slave == TW88I2CAddress )
 445:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 446:VS4210/monitor.c **** 	else
 447:VS4210/monitor.c **** 		MonRdata = ReadI2C(Slave, MonIndex);
 448:VS4210/monitor.c **** 
 449:VS4210/monitor.c **** 	if( echo )
 450:VS4210/monitor.c **** 		Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)MonIndex, (tWord)MonRdata);
 451:VS4210/monitor.c **** 	
 452:VS4210/monitor.c **** 	MonWdata = MonRdata;
 453:VS4210/monitor.c **** 	*/
 454:VS4210/monitor.c **** }
 455:VS4210/monitor.c **** 
 456:VS4210/monitor.c **** void MonNewWriteI2C(void)
 457:VS4210/monitor.c **** {
 911              		.loc 1 457 0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 0, uses_anonymous_args = 0
 915              		@ link register save eliminated.
 916 0000 7047     		bx	lr
 917              		.cfi_endproc
 918              	.LFE83:
 920 0002 00BF     		.section	.text.MonNewDumpI2C,"ax",%progbits
 921              		.align	2
 922              		.global	MonNewDumpI2C
 923              		.thumb
 924              		.thumb_func
 926              	MonNewDumpI2C:
 927              	.LFB84:
 458:VS4210/monitor.c **** /*
 459:VS4210/monitor.c **** 	BYTE Slave;
 460:VS4210/monitor.c **** 
 461:VS4210/monitor.c **** 	if( argc<4 ) {
 462:VS4210/monitor.c **** 		Printf("   --> Missing parameter !!!");
 463:VS4210/monitor.c **** 		return;
 464:VS4210/monitor.c **** 	}
 465:VS4210/monitor.c **** 	
 466:VS4210/monitor.c **** 	MonIndex = Asc2Bin( argv[2] );
 467:VS4210/monitor.c **** 	MonWdata = Asc2Bin( argv[3] );
 468:VS4210/monitor.c **** 	Slave = Asc2Bin(argv[1]);
 469:VS4210/monitor.c **** 	
 470:VS4210/monitor.c **** 	if ( Slave == TW88I2CAddress ) {
 471:VS4210/monitor.c **** 		WriteTW88(MonIndex, MonWdata);
 472:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 473:VS4210/monitor.c **** 	}
 474:VS4210/monitor.c **** 	else {
 475:VS4210/monitor.c **** 		WriteI2C(Slave, MonIndex, MonWdata);
ARM GAS  /tmp/ccD8Q2iX.s 			page 25


 476:VS4210/monitor.c **** 		MonRdata = ReadI2C(Slave, MonIndex);
 477:VS4210/monitor.c ****    	}
 478:VS4210/monitor.c **** 
 479:VS4210/monitor.c **** 	if( echo )
 480:VS4210/monitor.c **** 		Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)MonIndex, (tWord)MonRdata);
 481:VS4210/monitor.c **** */
 482:VS4210/monitor.c **** }
 483:VS4210/monitor.c **** 
 484:VS4210/monitor.c **** void MonNewDumpI2C(void)
 485:VS4210/monitor.c **** {
 928              		.loc 1 485 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932              		@ link register save eliminated.
 933 0000 7047     		bx	lr
 934              		.cfi_endproc
 935              	.LFE84:
 937 0002 00BF     		.section	.text.MonWriteBit,"ax",%progbits
 938              		.align	2
 939              		.global	MonWriteBit
 940              		.thumb
 941              		.thumb_func
 943              	MonWriteBit:
 944              	.LFB85:
 486:VS4210/monitor.c **** /*
 487:VS4210/monitor.c **** 	BYTE 	ToMonIndex, Slave;
 488:VS4210/monitor.c **** 	tWord	i;
 489:VS4210/monitor.c **** 	
 490:VS4210/monitor.c **** 	if( argc>=2 ) MonIndex = Asc2Bin(argv[2]);
 491:VS4210/monitor.c **** 	if( argc>=3 ) ToMonIndex = Asc2Bin(argv[3]);
 492:VS4210/monitor.c **** 	Slave = Asc2Bin(argv[1]);
 493:VS4210/monitor.c **** 
 494:VS4210/monitor.c **** 	if( echo ) {
 495:VS4210/monitor.c **** 		if ( Slave == TW88I2CAddress ) {
 496:VS4210/monitor.c **** 			for(i=MonIndex; i<=ToMonIndex; i++) {
 497:VS4210/monitor.c **** 				MonRdata = ReadTW88(i);
 498:VS4210/monitor.c ****         		Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)i, (tWord)MonRdata);
 499:VS4210/monitor.c **** 			}
 500:VS4210/monitor.c **** 		}
 501:VS4210/monitor.c **** 		else {
 502:VS4210/monitor.c **** 			for(i=MonIndex; i<=ToMonIndex; i++) {
 503:VS4210/monitor.c **** 				MonRdata = ReadI2C(Slave, i);
 504:VS4210/monitor.c ****         		Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)i, (tWord)MonRdata);
 505:VS4210/monitor.c **** 			}
 506:VS4210/monitor.c **** 		}
 507:VS4210/monitor.c **** 	}
 508:VS4210/monitor.c **** 	else {
 509:VS4210/monitor.c **** 		if ( Slave == TW88I2CAddress ) {
 510:VS4210/monitor.c **** 			for(i=MonIndex; i<=ToMonIndex; i++) {
 511:VS4210/monitor.c **** 				MonRdata = ReadTW88(i);
 512:VS4210/monitor.c **** 			}
 513:VS4210/monitor.c **** 		}
 514:VS4210/monitor.c **** 		else {
 515:VS4210/monitor.c **** 			for(i=MonIndex; i<=ToMonIndex; i++) {
 516:VS4210/monitor.c **** 				MonRdata = ReadI2C(Slave, i);
 517:VS4210/monitor.c **** 			}
ARM GAS  /tmp/ccD8Q2iX.s 			page 26


 518:VS4210/monitor.c **** 		}
 519:VS4210/monitor.c **** 	}
 520:VS4210/monitor.c **** 	*/
 521:VS4210/monitor.c **** }
 522:VS4210/monitor.c **** 
 523:VS4210/monitor.c **** 
 524:VS4210/monitor.c **** void MonWriteBit(void)
 525:VS4210/monitor.c **** {
 945              		.loc 1 525 0
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 0
 948              		@ frame_needed = 0, uses_anonymous_args = 0
 949              		@ link register save eliminated.
 950 0000 7047     		bx	lr
 951              		.cfi_endproc
 952              	.LFE85:
 954 0002 00BF     		.section	.text.MonTxDump,"ax",%progbits
 955              		.align	2
 956              		.global	MonTxDump
 957              		.thumb
 958              		.thumb_func
 960              	MonTxDump:
 961              	.LFB86:
 526:VS4210/monitor.c **** /*
 527:VS4210/monitor.c **** 	BYTE mask, i, FromBit, ToBit,  MonMask, val;
 528:VS4210/monitor.c **** 	BYTE Slave;
 529:VS4210/monitor.c **** 	// b 88 index startbit|endbit data
 530:VS4210/monitor.c **** 
 531:VS4210/monitor.c **** 	if( argc<5 ) {
 532:VS4210/monitor.c **** 		Printf("   --> Missing parameter !!!");
 533:VS4210/monitor.c **** 		return;
 534:VS4210/monitor.c **** 	}
 535:VS4210/monitor.c **** 	Slave = Asc2Bin(argv[1]);
 536:VS4210/monitor.c **** 
 537:VS4210/monitor.c **** 	MonIndex = Asc2Bin( argv[2] );
 538:VS4210/monitor.c **** 	FromBit  = (Asc2Bin( argv[3] ) >> 4) & 0x0f;
 539:VS4210/monitor.c **** 	ToBit  = Asc2Bin( argv[3] )  & 0x0f;
 540:VS4210/monitor.c **** 	MonMask  = Asc2Bin( argv[4] );
 541:VS4210/monitor.c **** 
 542:VS4210/monitor.c **** 	if( FromBit<ToBit || FromBit>7 || ToBit>7) {
 543:VS4210/monitor.c **** 		Printf("\r\n   --> Wrong range of bit operation !!!");
 544:VS4210/monitor.c **** 		return;
 545:VS4210/monitor.c **** 	}
 546:VS4210/monitor.c **** 	
 547:VS4210/monitor.c **** 	mask = 0xff; 
 548:VS4210/monitor.c **** 	val=0x7f;
 549:VS4210/monitor.c **** 	for(i=7; i>FromBit; i--) {
 550:VS4210/monitor.c **** 		mask &= val;
 551:VS4210/monitor.c **** 		val = val>>1;
 552:VS4210/monitor.c **** 	}
 553:VS4210/monitor.c **** 
 554:VS4210/monitor.c **** 	val=0xfe;
 555:VS4210/monitor.c **** 	for(i=0; i<ToBit; i++) {
 556:VS4210/monitor.c **** 		mask &= val;
 557:VS4210/monitor.c **** 		val = val<<1;
 558:VS4210/monitor.c **** 	}
 559:VS4210/monitor.c **** 
ARM GAS  /tmp/ccD8Q2iX.s 			page 27


 560:VS4210/monitor.c **** 	if ( Slave == TW88I2CAddress ) {
 561:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 562:VS4210/monitor.c **** 		MonWdata = (MonRdata & (~mask)) | (MonMask & mask);
 563:VS4210/monitor.c **** 				
 564:VS4210/monitor.c **** 		WriteTW88(MonIndex, MonWdata);
 565:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 566:VS4210/monitor.c **** 	}
 567:VS4210/monitor.c **** 	else {
 568:VS4210/monitor.c **** 		MonRdata = ReadI2C(Slave, MonIndex);
 569:VS4210/monitor.c **** 		MonWdata = (MonRdata & (~mask)) | (MonMask & mask);
 570:VS4210/monitor.c **** 				
 571:VS4210/monitor.c **** 		WriteI2C(Slave, MonIndex, MonWdata);
 572:VS4210/monitor.c **** 		MonRdata = ReadI2C(Slave, MonIndex);
 573:VS4210/monitor.c **** 	}
 574:VS4210/monitor.c **** 
 575:VS4210/monitor.c **** 	if( echo )
 576:VS4210/monitor.c **** 		Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)MonIndex, (tWord)MonRdata);
 577:VS4210/monitor.c **** */
 578:VS4210/monitor.c **** }
 579:VS4210/monitor.c **** 
 580:VS4210/monitor.c **** #if  0// defined( SUPPORT_PC ) || defined( SUPPORT_DTV )
 581:VS4210/monitor.c **** void PclkAccess(void)
 582:VS4210/monitor.c **** {
 583:VS4210/monitor.c **** 	DtWord pclk;
 584:VS4210/monitor.c **** 
 585:VS4210/monitor.c **** 	if( argc > 2 ) {
 586:VS4210/monitor.c **** 		Printf("   --> Too many parameter !!!");
 587:VS4210/monitor.c **** 		return;
 588:VS4210/monitor.c **** 	}
 589:VS4210/monitor.c **** 
 590:VS4210/monitor.c **** 	if( argc==2 ) {
 591:VS4210/monitor.c **** 		pclk = (DtWord)a2i(argv[1]) * 1000000;
 592:VS4210/monitor.c **** 		Printf("\r\n --> Set Pclk:  %ld Hz ", pclk);
 593:VS4210/monitor.c **** //		Printf("\r\n Not Suuport ");
 594:VS4210/monitor.c **** 		ChangeInternPLL(pclk);
 595:VS4210/monitor.c **** 	}
 596:VS4210/monitor.c **** 	
 597:VS4210/monitor.c **** 	if( argc==1)   GetPPF();
 598:VS4210/monitor.c **** 	
 599:VS4210/monitor.c **** }
 600:VS4210/monitor.c **** #endif
 601:VS4210/monitor.c **** 
 602:VS4210/monitor.c **** void MonTxDump(void)
 603:VS4210/monitor.c **** {
 962              		.loc 1 603 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 0
 965              		@ frame_needed = 0, uses_anonymous_args = 0
 966              		@ link register save eliminated.
 967 0000 7047     		bx	lr
 968              		.cfi_endproc
 969              	.LFE86:
 971 0002 00BF     		.section	.text.MonHelp,"ax",%progbits
 972              		.align	2
 973              		.global	MonHelp
 974              		.thumb
 975              		.thumb_func
ARM GAS  /tmp/ccD8Q2iX.s 			page 28


 977              	MonHelp:
 978              	.LFB87:
 604:VS4210/monitor.c **** /*
 605:VS4210/monitor.c **** 	tWord	count;
 606:VS4210/monitor.c **** 
 607:VS4210/monitor.c **** 	if ( argc < 2 ) {
 608:VS4210/monitor.c **** 		Puts("\r\nInsufficient parameters...");
 609:VS4210/monitor.c **** 		return;
 610:VS4210/monitor.c **** 	}
 611:VS4210/monitor.c **** 	count = (tWord)a2i(argv[1]);
 612:VS4210/monitor.c **** 	do {
 613:VS4210/monitor.c **** 		RS_tx((count&0x1F)+0x20);
 614:VS4210/monitor.c **** 		count--;
 615:VS4210/monitor.c **** 	} while ( count != 0 );
 616:VS4210/monitor.c **** 	*/
 617:VS4210/monitor.c **** }
 618:VS4210/monitor.c **** 
 619:VS4210/monitor.c **** //=============================================================================
 620:VS4210/monitor.c **** //			Help Message
 621:VS4210/monitor.c **** //=============================================================================
 622:VS4210/monitor.c **** void MonHelp(void)
 623:VS4210/monitor.c **** {
 979              		.loc 1 623 0
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 0
 982              		@ frame_needed = 0, uses_anonymous_args = 0
 983              		.loc 1 623 0
 984 0000 38B5     		push	{r3, r4, r5, lr}
 985              	.LCFI13:
 986              		.cfi_def_cfa_offset 16
 987              		.cfi_offset 3, -16
 988              		.cfi_offset 4, -12
 989              		.cfi_offset 5, -8
 990              		.cfi_offset 14, -4
 624:VS4210/monitor.c **** 	#if 1
 625:VS4210/monitor.c **** 	  Printf("\r\n=======================================================");
 991              		.loc 1 625 0
 992 0002 154C     		ldr	r4, .L83
 993 0004 2046     		mov	r0, r4
 994 0006 FFF7FEFF 		bl	Printf
 995              	.LVL75:
 626:VS4210/monitor.c **** 	  Printf("\r\n>>>   Welcome to TOA TAAH02 console	 Rev 1.00   <<<");
 996              		.loc 1 626 0
 997 000a 1448     		ldr	r0, .L83+4
 998 000c FFF7FEFF 		bl	Printf
 999              	.LVL76:
 627:VS4210/monitor.c **** 	  Printf("\r\n=======================================================");
 1000              		.loc 1 627 0
 1001 0010 2046     		mov	r0, r4
 1002 0012 FFF7FEFF 		bl	Printf
 1003              	.LVL77:
 628:VS4210/monitor.c **** 	  Printf("\r\n R [ii] 		   ; Read Register data");
 1004              		.loc 1 628 0
 1005 0016 1248     		ldr	r0, .L83+8
 1006 0018 FFF7FEFF 		bl	Printf
 1007              	.LVL78:
 629:VS4210/monitor.c **** 	  Printf("\r\n W [ii] [dd]		   ; Write Register data");
ARM GAS  /tmp/ccD8Q2iX.s 			page 29


 1008              		.loc 1 629 0
 1009 001c 1148     		ldr	r0, .L83+12
 1010 001e FFF7FEFF 		bl	Printf
 1011              	.LVL79:
 630:VS4210/monitor.c **** 	  Printf("\r\n Dump [ii] [cc] 	   ; Dump [first][end] Reg.") ;
 1012              		.loc 1 630 0
 1013 0022 1148     		ldr	r0, .L83+16
 1014 0024 FFF7FEFF 		bl	Printf
 1015              	.LVL80:
 631:VS4210/monitor.c **** 	  Printf("\r\n I2C [aa]		   ; Change I2C address");
 1016              		.loc 1 631 0
 1017 0028 1048     		ldr	r0, .L83+20
 1018 002a FFF7FEFF 		bl	Printf
 1019              	.LVL81:
 632:VS4210/monitor.c **** 	  Printf("\r\n < VS4210:40 TP2824:88 EEPROM:0xA0 HDMI:90 >");
 1020              		.loc 1 632 0
 1021 002e 1048     		ldr	r0, .L83+24
 1022 0030 FFF7FEFF 		bl	Printf
 1023              	.LVL82:
 633:VS4210/monitor.c **** 	  Printf("\r\n WIN [ii] 	           ; Change Input Source");
 1024              		.loc 1 633 0
 1025 0034 0F48     		ldr	r0, .L83+28
 1026 0036 FFF7FEFF 		bl	Printf
 1027              	.LVL83:
 634:VS4210/monitor.c **** 	  Printf("\r\n Access [0,1]		   ; TP2824 Access OFF/ON");
 1028              		.loc 1 634 0
 1029 003a 0F48     		ldr	r0, .L83+32
 1030 003c FFF7FEFF 		bl	Printf
 1031              	.LVL84:
 635:VS4210/monitor.c **** 	  Printf("\r\n");
 1032              		.loc 1 635 0
 1033 0040 0E4D     		ldr	r5, .L83+36
 1034 0042 2846     		mov	r0, r5
 1035 0044 FFF7FEFF 		bl	Printf
 1036              	.LVL85:
 636:VS4210/monitor.c **** 	  Printf("\r\n=======================================================");
 1037              		.loc 1 636 0
 1038 0048 2046     		mov	r0, r4
 1039 004a FFF7FEFF 		bl	Printf
 1040              	.LVL86:
 637:VS4210/monitor.c **** 	  Printf("\r\n");
 1041              		.loc 1 637 0
 1042 004e 2846     		mov	r0, r5
 1043 0050 FFF7FEFF 		bl	Printf
 1044              	.LVL87:
 1045 0054 38BD     		pop	{r3, r4, r5, pc}
 1046              	.L84:
 1047 0056 00BF     		.align	2
 1048              	.L83:
 1049 0058 24010000 		.word	.LC9
 1050 005c 60010000 		.word	.LC10
 1051 0060 98010000 		.word	.LC11
 1052 0064 BC010000 		.word	.LC12
 1053 0068 E8010000 		.word	.LC13
 1054 006c 18020000 		.word	.LC14
 1055 0070 40020000 		.word	.LC15
 1056 0074 70020000 		.word	.LC16
ARM GAS  /tmp/ccD8Q2iX.s 			page 30


 1057 0078 A0020000 		.word	.LC17
 1058 007c CC020000 		.word	.LC18
 1059              		.cfi_endproc
 1060              	.LFE87:
 1062              		.section	.text.MonGetCommand,"ax",%progbits
 1063              		.align	2
 1064              		.global	MonGetCommand
 1065              		.thumb
 1066              		.thumb_func
 1068              	MonGetCommand:
 1069              	.LFB88:
 638:VS4210/monitor.c **** 
 639:VS4210/monitor.c **** 	#else
 640:VS4210/monitor.c **** 	Printf("\r\n=======================================================");
 641:VS4210/monitor.c **** 	Printf("\r\n>>>     Welcome to ML076HQ     Rev 1.00     <<<");
 642:VS4210/monitor.c **** 	Printf("\r\n=======================================================");
 643:VS4210/monitor.c **** 	Printf("\r\n   R ii             ; Read TP2824 data");
 644:VS4210/monitor.c **** 	Printf("\r\n   W ii dd          ; Write TP2824 data");
 645:VS4210/monitor.c **** 	Printf("\r\n   VR ii             ; Read VS4210 data");
 646:VS4210/monitor.c **** 	Printf("\r\n   VW ii dd          ; Write VS4210 data");
 647:VS4210/monitor.c **** 	Printf("\r\n   D [ii] [cc]      ; Dump");
 648:VS4210/monitor.c **** 	Printf("\r\n   C aa             ; Change I2C address");
 649:VS4210/monitor.c **** 	Printf("\r\n   M ?              ; Current Input");
 650:VS4210/monitor.c **** 	Printf("\r\n   M dd             ; Change Input");
 651:VS4210/monitor.c **** 	Printf("\r\n   Access [0,1]     ; Program TW88xx Access OFF/ON");
 652:VS4210/monitor.c **** 	Printf("\r\n   AutoDetect [0,1] ; PC Automode OFF/ON");
 653:VS4210/monitor.c **** 	Printf("\r\n   PCAuto		    ; RUN PC Auto Adjust");
 654:VS4210/monitor.c **** 	Printf("\r\n   Debug [0..255]   ; Debuging display level");
 655:VS4210/monitor.c **** 	Printf("\r\n   Echo On/Off      ; Terminal Echoing On/Off");
 656:VS4210/monitor.c **** 	Printf("\r\n   Delta            ; Init DeltaRGB Panel");
 657:VS4210/monitor.c **** 	Printf("\r\n   Delta w ii dh dl; SPI Write to DeltaRGB Panel");
 658:VS4210/monitor.c **** 	Printf("\r\n");
 659:VS4210/monitor.c **** 	Printf("\r\n=======================================================");
 660:VS4210/monitor.c **** 	Printf("\r\n");
 661:VS4210/monitor.c **** 	#endif
 662:VS4210/monitor.c **** }
 663:VS4210/monitor.c **** 
 664:VS4210/monitor.c **** //=============================================================================
 665:VS4210/monitor.c **** //
 666:VS4210/monitor.c **** //=============================================================================
 667:VS4210/monitor.c **** BYTE MonGetCommand(void)
 668:VS4210/monitor.c **** {
 1070              		.loc 1 668 0
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 0
 1073              		@ frame_needed = 0, uses_anonymous_args = 0
 1074 0000 38B5     		push	{r3, r4, r5, lr}
 1075              	.LCFI14:
 1076              		.cfi_def_cfa_offset 16
 1077              		.cfi_offset 3, -16
 1078              		.cfi_offset 4, -12
 1079              		.cfi_offset 5, -8
 1080              		.cfi_offset 14, -4
 1081              	.LVL88:
 669:VS4210/monitor.c **** 	static BYTE comment=0;
 670:VS4210/monitor.c **** 	static BYTE incnt=0, last_argc=0;
 671:VS4210/monitor.c **** 	BYTE i, ch;
ARM GAS  /tmp/ccD8Q2iX.s 			page 31


 672:VS4210/monitor.c **** 	BYTE ret=0;
 673:VS4210/monitor.c **** 
 674:VS4210/monitor.c **** 	if( !RS_ready() ) return 0;
 1082              		.loc 1 674 0
 1083 0002 FFF7FEFF 		bl	RS_ready
 1084              	.LVL89:
 1085 0006 0446     		mov	r4, r0
 1086 0008 0028     		cmp	r0, #0
 1087 000a 00F03681 		beq	.L86
 675:VS4210/monitor.c **** 	//#ifdef HS_DEBUG
 676:VS4210/monitor.c **** 	ch = RS_rx();
 1088              		.loc 1 676 0
 1089 000e FFF7FEFF 		bl	RS_rx
 1090              	.LVL90:
 1091 0012 0546     		mov	r5, r0
 1092              	.LVL91:
 677:VS4210/monitor.c **** 	//#endif
 678:VS4210/monitor.c **** 
 679:VS4210/monitor.c **** 	#if (_DEBUG_MESSAGE_Monitor==ON)
 680:VS4210/monitor.c **** 	 Monitor_flag=_TRUE;
 1093              		.loc 1 680 0
 1094 0014 0122     		movs	r2, #1
 1095 0016 9A4B     		ldr	r3, .L120
 1096 0018 1A70     		strb	r2, [r3]
 681:VS4210/monitor.c **** 	#endif
 682:VS4210/monitor.c **** 	  MCUTimerReactiveTimerEvent(SEC(30), _USER_TIMER_EVENT_Monitor_ON);  
 1097              		.loc 1 682 0
 1098 001a 47F23050 		movw	r0, #30000
 1099 001e 1F21     		movs	r1, #31
 1100 0020 FFF7FEFF 		bl	MCUTimerReactiveTimerEvent
 1101              	.LVL92:
 683:VS4210/monitor.c **** 
 684:VS4210/monitor.c **** 	//----- if comment, echo back and ignore -----
 685:VS4210/monitor.c **** 	if( comment ) {
 1102              		.loc 1 685 0
 1103 0024 974B     		ldr	r3, .L120+4
 1104 0026 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1105 0028 64B1     		cbz	r4, .L87
 686:VS4210/monitor.c **** 		if( ch=='\r' || ch==0x1b ) comment = 0;
 1106              		.loc 1 686 0
 1107 002a 0D2D     		cmp	r5, #13
 1108 002c 01D0     		beq	.L88
 1109              		.loc 1 686 0 is_stmt 0 discriminator 2
 1110 002e 1B2D     		cmp	r5, #27
 1111 0030 03D1     		bne	.L89
 1112              	.L88:
 1113              		.loc 1 686 0 discriminator 3
 1114 0032 0022     		movs	r2, #0
 1115 0034 934B     		ldr	r3, .L120+4
 1116 0036 1A70     		strb	r2, [r3]
 1117 0038 0DE0     		b	.L90
 1118              	.L89:
 687:VS4210/monitor.c **** 		else { 
 688:VS4210/monitor.c **** 			Mon_tx(ch);
 1119              		.loc 1 688 0 is_stmt 1
 1120 003a 2846     		mov	r0, r5
 1121 003c FFF7FEFF 		bl	Mon_tx
ARM GAS  /tmp/ccD8Q2iX.s 			page 32


 1122              	.LVL93:
 689:VS4210/monitor.c **** 			return 0;
 1123              		.loc 1 689 0
 1124 0040 0024     		movs	r4, #0
 1125 0042 1AE1     		b	.L86
 1126              	.L87:
 690:VS4210/monitor.c **** 		}
 691:VS4210/monitor.c **** 	}
 692:VS4210/monitor.c **** 	else if( ch==';' ) {
 1127              		.loc 1 692 0
 1128 0044 3B2D     		cmp	r5, #59
 1129 0046 06D1     		bne	.L90
 693:VS4210/monitor.c **** 		comment = 1;
 1130              		.loc 1 693 0
 1131 0048 0122     		movs	r2, #1
 1132 004a 8E4B     		ldr	r3, .L120+4
 1133 004c 1A70     		strb	r2, [r3]
 694:VS4210/monitor.c **** 		Mon_tx(ch);
 1134              		.loc 1 694 0
 1135 004e 2846     		mov	r0, r5
 1136 0050 FFF7FEFF 		bl	Mon_tx
 1137              	.LVL94:
 695:VS4210/monitor.c **** 		return 0;
 1138              		.loc 1 695 0
 1139 0054 11E1     		b	.L86
 1140              	.L90:
 696:VS4210/monitor.c **** 	}
 697:VS4210/monitor.c **** 
 698:VS4210/monitor.c **** 	//=====================================
 699:VS4210/monitor.c **** 	switch( ch ) {
 1141              		.loc 1 699 0
 1142 0056 A5F10803 		sub	r3, r5, #8
 1143 005a 362B     		cmp	r3, #54
 1144 005c 00F2F980 		bhi	.L91
 1145 0060 DFE813F0 		tbh	[pc, r3, lsl #1]
 1146              	.L93:
 1147 0064 9900     		.2byte	(.L92-.L93)/2
 1148 0066 F700     		.2byte	(.L91-.L93)/2
 1149 0068 F700     		.2byte	(.L91-.L93)/2
 1150 006a F700     		.2byte	(.L91-.L93)/2
 1151 006c F700     		.2byte	(.L91-.L93)/2
 1152 006e 4100     		.2byte	(.L94-.L93)/2
 1153 0070 F700     		.2byte	(.L91-.L93)/2
 1154 0072 F700     		.2byte	(.L91-.L93)/2
 1155 0074 F700     		.2byte	(.L91-.L93)/2
 1156 0076 F700     		.2byte	(.L91-.L93)/2
 1157 0078 F700     		.2byte	(.L91-.L93)/2
 1158 007a F700     		.2byte	(.L91-.L93)/2
 1159 007c F700     		.2byte	(.L91-.L93)/2
 1160 007e F700     		.2byte	(.L91-.L93)/2
 1161 0080 F700     		.2byte	(.L91-.L93)/2
 1162 0082 F700     		.2byte	(.L91-.L93)/2
 1163 0084 F700     		.2byte	(.L91-.L93)/2
 1164 0086 F700     		.2byte	(.L91-.L93)/2
 1165 0088 F700     		.2byte	(.L91-.L93)/2
 1166 008a 3700     		.2byte	(.L95-.L93)/2
 1167 008c F700     		.2byte	(.L91-.L93)/2
ARM GAS  /tmp/ccD8Q2iX.s 			page 33


 1168 008e F700     		.2byte	(.L91-.L93)/2
 1169 0090 F700     		.2byte	(.L91-.L93)/2
 1170 0092 F700     		.2byte	(.L91-.L93)/2
 1171 0094 F700     		.2byte	(.L91-.L93)/2
 1172 0096 F700     		.2byte	(.L91-.L93)/2
 1173 0098 F700     		.2byte	(.L91-.L93)/2
 1174 009a F700     		.2byte	(.L91-.L93)/2
 1175 009c F700     		.2byte	(.L91-.L93)/2
 1176 009e F700     		.2byte	(.L91-.L93)/2
 1177 00a0 F700     		.2byte	(.L91-.L93)/2
 1178 00a2 F700     		.2byte	(.L91-.L93)/2
 1179 00a4 F700     		.2byte	(.L91-.L93)/2
 1180 00a6 F700     		.2byte	(.L91-.L93)/2
 1181 00a8 F700     		.2byte	(.L91-.L93)/2
 1182 00aa F700     		.2byte	(.L91-.L93)/2
 1183 00ac AB00     		.2byte	(.L96-.L93)/2
 1184 00ae F700     		.2byte	(.L91-.L93)/2
 1185 00b0 D100     		.2byte	(.L97-.L93)/2
 1186 00b2 9300     		.2byte	(.L98-.L93)/2
 1187 00b4 F700     		.2byte	(.L91-.L93)/2
 1188 00b6 F700     		.2byte	(.L91-.L93)/2
 1189 00b8 F700     		.2byte	(.L91-.L93)/2
 1190 00ba F700     		.2byte	(.L91-.L93)/2
 1191 00bc F700     		.2byte	(.L91-.L93)/2
 1192 00be F700     		.2byte	(.L91-.L93)/2
 1193 00c0 F700     		.2byte	(.L91-.L93)/2
 1194 00c2 F700     		.2byte	(.L91-.L93)/2
 1195 00c4 F700     		.2byte	(.L91-.L93)/2
 1196 00c6 F700     		.2byte	(.L91-.L93)/2
 1197 00c8 F700     		.2byte	(.L91-.L93)/2
 1198 00ca F700     		.2byte	(.L91-.L93)/2
 1199 00cc BE00     		.2byte	(.L99-.L93)/2
 1200 00ce F700     		.2byte	(.L91-.L93)/2
 1201 00d0 E400     		.2byte	(.L100-.L93)/2
 1202              		.p2align 1
 1203              	.L95:
 700:VS4210/monitor.c **** 
 701:VS4210/monitor.c **** 	case 0x1b:
 702:VS4210/monitor.c **** 		argc = 0;
 1204              		.loc 1 702 0
 1205 00d2 0024     		movs	r4, #0
 1206 00d4 6C4B     		ldr	r3, .L120+8
 1207 00d6 1C70     		strb	r4, [r3]
 703:VS4210/monitor.c **** 		incnt = 0;
 1208              		.loc 1 703 0
 1209 00d8 6C4B     		ldr	r3, .L120+12
 1210 00da 1C70     		strb	r4, [r3]
 704:VS4210/monitor.c **** 		comment = 0;
 1211              		.loc 1 704 0
 1212 00dc 694B     		ldr	r3, .L120+4
 1213 00de 1C70     		strb	r4, [r3]
 705:VS4210/monitor.c **** 		Prompt();
 1214              		.loc 1 705 0
 1215 00e0 FFF7FEFF 		bl	Prompt
 1216              	.LVL95:
 706:VS4210/monitor.c **** 		return 0;
 1217              		.loc 1 706 0
ARM GAS  /tmp/ccD8Q2iX.s 			page 34


 1218 00e4 C9E0     		b	.L86
 1219              	.L94:
 707:VS4210/monitor.c **** 
 708:VS4210/monitor.c **** 	//--- end of string
 709:VS4210/monitor.c **** 	case '\r':
 710:VS4210/monitor.c **** 
 711:VS4210/monitor.c **** 		if( incnt==0 ) {
 1220              		.loc 1 711 0
 1221 00e6 694B     		ldr	r3, .L120+12
 1222 00e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1223 00ea 1AB9     		cbnz	r2, .L101
 712:VS4210/monitor.c **** 			Prompt();
 1224              		.loc 1 712 0
 1225 00ec FFF7FEFF 		bl	Prompt
 1226              	.LVL96:
 672:VS4210/monitor.c **** 
 1227              		.loc 1 672 0
 1228 00f0 0024     		movs	r4, #0
 713:VS4210/monitor.c **** 			break;
 1229              		.loc 1 713 0
 1230 00f2 BAE0     		b	.L102
 1231              	.L101:
 714:VS4210/monitor.c **** 		}
 715:VS4210/monitor.c **** 
 716:VS4210/monitor.c **** 		monstr[incnt++] = '\0';
 1232              		.loc 1 716 0
 1233 00f4 551C     		adds	r5, r2, #1
 1234              	.LVL97:
 1235 00f6 EDB2     		uxtb	r5, r5
 1236 00f8 0023     		movs	r3, #0
 1237 00fa 6549     		ldr	r1, .L120+16
 1238 00fc 8B54     		strb	r3, [r1, r2]
 717:VS4210/monitor.c **** 		argc=0;
 1239              		.loc 1 717 0
 1240 00fe 624A     		ldr	r2, .L120+8
 1241 0100 1370     		strb	r3, [r2]
 1242              	.LVL98:
 718:VS4210/monitor.c **** 
 719:VS4210/monitor.c **** 		for(i=0; i<incnt; i++) if( monstr[i]!=' ' ) break;
 1243              		.loc 1 719 0
 1244 0102 05E0     		b	.L103
 1245              	.LVL99:
 1246              	.L105:
 1247              		.loc 1 719 0 is_stmt 0 discriminator 4
 1248 0104 624A     		ldr	r2, .L120+16
 1249 0106 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1250 0108 202A     		cmp	r2, #32
 1251 010a 03D1     		bne	.L104
 1252              		.loc 1 719 0 discriminator 2
 1253 010c 0133     		adds	r3, r3, #1
 1254              	.LVL100:
 1255 010e DBB2     		uxtb	r3, r3
 1256              	.LVL101:
 1257              	.L103:
 1258              		.loc 1 719 0 discriminator 3
 1259 0110 AB42     		cmp	r3, r5
 1260 0112 F7D3     		bcc	.L105
ARM GAS  /tmp/ccD8Q2iX.s 			page 35


 1261              	.L104:
 720:VS4210/monitor.c **** 
 721:VS4210/monitor.c **** 		if( !monstr[i] ) {
 1262              		.loc 1 721 0 is_stmt 1
 1263 0114 5E4A     		ldr	r2, .L120+16
 1264 0116 D45C     		ldrb	r4, [r2, r3]	@ zero_extendqisi2
 1265 0118 3CB9     		cbnz	r4, .L106
 722:VS4210/monitor.c **** 			incnt = 0;
 1266              		.loc 1 722 0
 1267 011a 0023     		movs	r3, #0
 1268              	.LVL102:
 1269 011c 5B4A     		ldr	r2, .L120+12
 1270 011e 1370     		strb	r3, [r2]
 723:VS4210/monitor.c **** 			comment = 0;
 1271              		.loc 1 723 0
 1272 0120 584A     		ldr	r2, .L120+4
 1273 0122 1370     		strb	r3, [r2]
 724:VS4210/monitor.c **** 			Prompt();
 1274              		.loc 1 724 0
 1275 0124 FFF7FEFF 		bl	Prompt
 1276              	.LVL103:
 725:VS4210/monitor.c **** 			return 0;
 1277              		.loc 1 725 0
 1278 0128 A7E0     		b	.L86
 1279              	.LVL104:
 1280              	.L106:
 726:VS4210/monitor.c **** 		}
 727:VS4210/monitor.c **** 		argv[0] = &monstr[i];
 1281              		.loc 1 727 0
 1282 012a 594A     		ldr	r2, .L120+16
 1283 012c 1A44     		add	r2, r2, r3
 1284 012e 5949     		ldr	r1, .L120+20
 1285 0130 0A60     		str	r2, [r1]
 728:VS4210/monitor.c **** 		for(; i<incnt; i++) {
 1286              		.loc 1 728 0
 1287 0132 1FE0     		b	.L107
 1288              	.L112:
 729:VS4210/monitor.c **** 			if( monstr[i]==' ' || monstr[i]=='\0' ) {
 1289              		.loc 1 729 0
 1290 0134 1946     		mov	r1, r3
 1291 0136 564A     		ldr	r2, .L120+16
 1292 0138 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1293 013a 202A     		cmp	r2, #32
 1294 013c 00D0     		beq	.L108
 1295              		.loc 1 729 0 is_stmt 0 discriminator 1
 1296 013e BAB9     		cbnz	r2, .L109
 1297              	.L108:
 730:VS4210/monitor.c **** 				monstr[i]='\0';
 1298              		.loc 1 730 0 is_stmt 1
 1299 0140 0020     		movs	r0, #0
 1300 0142 534A     		ldr	r2, .L120+16
 1301 0144 5054     		strb	r0, [r2, r1]
 731:VS4210/monitor.c ****      			 //Printf("(%s) ",  argv[argc]);
 732:VS4210/monitor.c **** 				i++;
 1302              		.loc 1 732 0
 1303 0146 0133     		adds	r3, r3, #1
 1304              	.LVL105:
ARM GAS  /tmp/ccD8Q2iX.s 			page 36


 1305 0148 DBB2     		uxtb	r3, r3
 1306              	.LVL106:
 733:VS4210/monitor.c **** 				while( monstr[i]==' ' ) i++;
 1307              		.loc 1 733 0
 1308 014a 01E0     		b	.L110
 1309              	.L111:
 1310              		.loc 1 733 0 is_stmt 0 discriminator 2
 1311 014c 0133     		adds	r3, r3, #1
 1312              	.LVL107:
 1313 014e DBB2     		uxtb	r3, r3
 1314              	.LVL108:
 1315              	.L110:
 1316              		.loc 1 733 0 discriminator 1
 1317 0150 1946     		mov	r1, r3
 1318 0152 4F4A     		ldr	r2, .L120+16
 1319 0154 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1320 0156 202A     		cmp	r2, #32
 1321 0158 F8D0     		beq	.L111
 734:VS4210/monitor.c **** 				argc++;
 1322              		.loc 1 734 0 is_stmt 1
 1323 015a 4B4C     		ldr	r4, .L120+8
 1324 015c 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1325 015e 0130     		adds	r0, r0, #1
 1326 0160 C0B2     		uxtb	r0, r0
 1327 0162 2070     		strb	r0, [r4]
 735:VS4210/monitor.c **** 				if( monstr[i] ){
 1328              		.loc 1 735 0
 1329 0164 22B1     		cbz	r2, .L109
 736:VS4210/monitor.c ****      			 argv[argc] = &monstr[i];
 1330              		.loc 1 736 0
 1331 0166 4A4A     		ldr	r2, .L120+16
 1332 0168 1144     		add	r1, r1, r2
 1333 016a 4A4A     		ldr	r2, .L120+20
 1334 016c 42F82010 		str	r1, [r2, r0, lsl #2]
 1335              	.L109:
 728:VS4210/monitor.c **** 			if( monstr[i]==' ' || monstr[i]=='\0' ) {
 1336              		.loc 1 728 0
 1337 0170 0133     		adds	r3, r3, #1
 1338              	.LVL109:
 1339 0172 DBB2     		uxtb	r3, r3
 1340              	.LVL110:
 1341              	.L107:
 728:VS4210/monitor.c **** 			if( monstr[i]==' ' || monstr[i]=='\0' ) {
 1342              		.loc 1 728 0 is_stmt 0 discriminator 1
 1343 0174 AB42     		cmp	r3, r5
 1344 0176 DDD3     		bcc	.L112
 1345              	.LVL111:
 737:VS4210/monitor.c **** 				}
 738:VS4210/monitor.c **** 			}
 739:VS4210/monitor.c **** 		}
 740:VS4210/monitor.c **** 
 741:VS4210/monitor.c **** 		ret = 1;
 742:VS4210/monitor.c **** 		last_argc = argc;
 1346              		.loc 1 742 0 is_stmt 1
 1347 0178 434B     		ldr	r3, .L120+8
 1348              	.LVL112:
 1349 017a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccD8Q2iX.s 			page 37


 1350 017c 464B     		ldr	r3, .L120+24
 1351 017e 1A70     		strb	r2, [r3]
 743:VS4210/monitor.c **** 		incnt = 0;
 1352              		.loc 1 743 0
 1353 0180 0022     		movs	r2, #0
 1354 0182 424B     		ldr	r3, .L120+12
 1355 0184 1A70     		strb	r2, [r3]
 741:VS4210/monitor.c **** 		last_argc = argc;
 1356              		.loc 1 741 0
 1357 0186 0124     		movs	r4, #1
 744:VS4210/monitor.c **** 		
 745:VS4210/monitor.c **** 		break;
 1358              		.loc 1 745 0
 1359 0188 6FE0     		b	.L102
 1360              	.LVL113:
 1361              	.L98:
 746:VS4210/monitor.c **** 
 747:VS4210/monitor.c **** 	//--- repeat command
 748:VS4210/monitor.c **** 	case '/':
 749:VS4210/monitor.c **** 		argc = last_argc;
 1362              		.loc 1 749 0
 1363 018a 434B     		ldr	r3, .L120+24
 1364 018c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1365 018e 3E4B     		ldr	r3, .L120+8
 1366 0190 1A70     		strb	r2, [r3]
 1367              	.LVL114:
 750:VS4210/monitor.c **** 		ret = 1;
 1368              		.loc 1 750 0
 1369 0192 0124     		movs	r4, #1
 751:VS4210/monitor.c **** 		break;
 1370              		.loc 1 751 0
 1371 0194 69E0     		b	.L102
 1372              	.LVL115:
 1373              	.L92:
 752:VS4210/monitor.c **** 
 753:VS4210/monitor.c **** 	//--- back space
 754:VS4210/monitor.c **** 	case 0x08:
 755:VS4210/monitor.c **** 		if( incnt ) {
 1374              		.loc 1 755 0
 1375 0196 3D4B     		ldr	r3, .L120+12
 1376 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1377 019a 002B     		cmp	r3, #0
 1378 019c 64D0     		beq	.L117
 756:VS4210/monitor.c **** 			incnt--;
 1379              		.loc 1 756 0
 1380 019e 013B     		subs	r3, r3, #1
 1381 01a0 3A4A     		ldr	r2, .L120+12
 1382 01a2 1370     		strb	r3, [r2]
 757:VS4210/monitor.c **** 			Mon_tx(ch);
 1383              		.loc 1 757 0
 1384 01a4 2846     		mov	r0, r5
 1385 01a6 FFF7FEFF 		bl	Mon_tx
 1386              	.LVL116:
 758:VS4210/monitor.c **** 			Mon_tx(' ');
 1387              		.loc 1 758 0
 1388 01aa 2020     		movs	r0, #32
 1389 01ac FFF7FEFF 		bl	Mon_tx
ARM GAS  /tmp/ccD8Q2iX.s 			page 38


 1390              	.LVL117:
 759:VS4210/monitor.c **** 			Mon_tx(ch);
 1391              		.loc 1 759 0
 1392 01b0 2846     		mov	r0, r5
 1393 01b2 FFF7FEFF 		bl	Mon_tx
 1394              	.LVL118:
 672:VS4210/monitor.c **** 
 1395              		.loc 1 672 0
 1396 01b6 0024     		movs	r4, #0
 1397 01b8 57E0     		b	.L102
 1398              	.L96:
 760:VS4210/monitor.c **** 		}
 761:VS4210/monitor.c **** 		break;
 762:VS4210/monitor.c **** 
 763:VS4210/monitor.c **** 	//--- decreamental write
 764:VS4210/monitor.c **** 	case ',':
 765:VS4210/monitor.c **** 		if( incnt ) {
 1399              		.loc 1 765 0
 1400 01ba 344B     		ldr	r3, .L120+12
 1401 01bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1402 01be 53B1     		cbz	r3, .L113
 766:VS4210/monitor.c **** 			Mon_tx(ch);
 1403              		.loc 1 766 0
 1404 01c0 2846     		mov	r0, r5
 1405 01c2 FFF7FEFF 		bl	Mon_tx
 1406              	.LVL119:
 767:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 1407              		.loc 1 767 0
 1408 01c6 314A     		ldr	r2, .L120+12
 1409 01c8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1410 01ca 591C     		adds	r1, r3, #1
 1411 01cc 1170     		strb	r1, [r2]
 1412 01ce 304A     		ldr	r2, .L120+16
 1413 01d0 D554     		strb	r5, [r2, r3]
 672:VS4210/monitor.c **** 
 1414              		.loc 1 672 0
 1415 01d2 0024     		movs	r4, #0
 1416 01d4 49E0     		b	.L102
 1417              	.L113:
 768:VS4210/monitor.c **** 		}
 769:VS4210/monitor.c **** 		else
 770:VS4210/monitor.c **** 			MonIncDecI2C(0);
 1418              		.loc 1 770 0
 1419 01d6 0020     		movs	r0, #0
 1420 01d8 FFF7FEFF 		bl	MonIncDecI2C
 1421              	.LVL120:
 672:VS4210/monitor.c **** 
 1422              		.loc 1 672 0
 1423 01dc 0024     		movs	r4, #0
 1424 01de 44E0     		b	.L102
 1425              	.L99:
 771:VS4210/monitor.c **** 		break;
 772:VS4210/monitor.c **** 
 773:VS4210/monitor.c **** 	case '<':
 774:VS4210/monitor.c **** 		if( incnt ) {
 1426              		.loc 1 774 0
 1427 01e0 2A4B     		ldr	r3, .L120+12
ARM GAS  /tmp/ccD8Q2iX.s 			page 39


 1428 01e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1429 01e4 53B1     		cbz	r3, .L114
 775:VS4210/monitor.c **** 			Mon_tx(ch);
 1430              		.loc 1 775 0
 1431 01e6 2846     		mov	r0, r5
 1432 01e8 FFF7FEFF 		bl	Mon_tx
 1433              	.LVL121:
 776:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 1434              		.loc 1 776 0
 1435 01ec 274A     		ldr	r2, .L120+12
 1436 01ee 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1437 01f0 591C     		adds	r1, r3, #1
 1438 01f2 1170     		strb	r1, [r2]
 1439 01f4 264A     		ldr	r2, .L120+16
 1440 01f6 D554     		strb	r5, [r2, r3]
 672:VS4210/monitor.c **** 
 1441              		.loc 1 672 0
 1442 01f8 0024     		movs	r4, #0
 1443 01fa 36E0     		b	.L102
 1444              	.L114:
 777:VS4210/monitor.c **** 		}
 778:VS4210/monitor.c **** 		else
 779:VS4210/monitor.c **** 			MonIncDecI2C(10);
 1445              		.loc 1 779 0
 1446 01fc 0A20     		movs	r0, #10
 1447 01fe FFF7FEFF 		bl	MonIncDecI2C
 1448              	.LVL122:
 672:VS4210/monitor.c **** 
 1449              		.loc 1 672 0
 1450 0202 0024     		movs	r4, #0
 1451 0204 31E0     		b	.L102
 1452              	.L97:
 780:VS4210/monitor.c **** 		break;
 781:VS4210/monitor.c **** 	//--- increamental write
 782:VS4210/monitor.c **** 	case '.':
 783:VS4210/monitor.c **** 		if( incnt ) {
 1453              		.loc 1 783 0
 1454 0206 214B     		ldr	r3, .L120+12
 1455 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1456 020a 53B1     		cbz	r3, .L115
 784:VS4210/monitor.c **** 			Mon_tx(ch);
 1457              		.loc 1 784 0
 1458 020c 2846     		mov	r0, r5
 1459 020e FFF7FEFF 		bl	Mon_tx
 1460              	.LVL123:
 785:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 1461              		.loc 1 785 0
 1462 0212 1E4A     		ldr	r2, .L120+12
 1463 0214 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1464 0216 591C     		adds	r1, r3, #1
 1465 0218 1170     		strb	r1, [r2]
 1466 021a 1D4A     		ldr	r2, .L120+16
 1467 021c D554     		strb	r5, [r2, r3]
 672:VS4210/monitor.c **** 
 1468              		.loc 1 672 0
 1469 021e 0024     		movs	r4, #0
 1470 0220 23E0     		b	.L102
ARM GAS  /tmp/ccD8Q2iX.s 			page 40


 1471              	.L115:
 786:VS4210/monitor.c **** 		}
 787:VS4210/monitor.c **** 		else
 788:VS4210/monitor.c **** 			MonIncDecI2C(1);
 1472              		.loc 1 788 0
 1473 0222 0120     		movs	r0, #1
 1474 0224 FFF7FEFF 		bl	MonIncDecI2C
 1475              	.LVL124:
 672:VS4210/monitor.c **** 
 1476              		.loc 1 672 0
 1477 0228 0024     		movs	r4, #0
 1478 022a 1EE0     		b	.L102
 1479              	.L100:
 789:VS4210/monitor.c **** 		break;
 790:VS4210/monitor.c **** 
 791:VS4210/monitor.c **** 	case '>':
 792:VS4210/monitor.c **** 		if( incnt ) {
 1480              		.loc 1 792 0
 1481 022c 174B     		ldr	r3, .L120+12
 1482 022e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1483 0230 53B1     		cbz	r3, .L116
 793:VS4210/monitor.c **** 			Mon_tx(ch);
 1484              		.loc 1 793 0
 1485 0232 2846     		mov	r0, r5
 1486 0234 FFF7FEFF 		bl	Mon_tx
 1487              	.LVL125:
 794:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 1488              		.loc 1 794 0
 1489 0238 144A     		ldr	r2, .L120+12
 1490 023a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1491 023c 591C     		adds	r1, r3, #1
 1492 023e 1170     		strb	r1, [r2]
 1493 0240 134A     		ldr	r2, .L120+16
 1494 0242 D554     		strb	r5, [r2, r3]
 672:VS4210/monitor.c **** 
 1495              		.loc 1 672 0
 1496 0244 0024     		movs	r4, #0
 1497 0246 10E0     		b	.L102
 1498              	.L116:
 795:VS4210/monitor.c **** 		}
 796:VS4210/monitor.c **** 		else
 797:VS4210/monitor.c **** 			MonIncDecI2C(11);
 1499              		.loc 1 797 0
 1500 0248 0B20     		movs	r0, #11
 1501 024a FFF7FEFF 		bl	MonIncDecI2C
 1502              	.LVL126:
 672:VS4210/monitor.c **** 
 1503              		.loc 1 672 0
 1504 024e 0024     		movs	r4, #0
 1505 0250 0BE0     		b	.L102
 1506              	.L91:
 798:VS4210/monitor.c **** 		break;
 799:VS4210/monitor.c **** 
 800:VS4210/monitor.c **** 	default:
 801:VS4210/monitor.c **** 		Mon_tx(ch);
 1507              		.loc 1 801 0
 1508 0252 2846     		mov	r0, r5
ARM GAS  /tmp/ccD8Q2iX.s 			page 41


 1509 0254 FFF7FEFF 		bl	Mon_tx
 1510              	.LVL127:
 802:VS4210/monitor.c **** 		monstr[incnt++] = ch;
 1511              		.loc 1 802 0
 1512 0258 0C4A     		ldr	r2, .L120+12
 1513 025a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1514 025c 591C     		adds	r1, r3, #1
 1515 025e 1170     		strb	r1, [r2]
 1516 0260 0B4A     		ldr	r2, .L120+16
 1517 0262 D554     		strb	r5, [r2, r3]
 672:VS4210/monitor.c **** 
 1518              		.loc 1 672 0
 1519 0264 0024     		movs	r4, #0
 803:VS4210/monitor.c **** 		break;
 1520              		.loc 1 803 0
 1521 0266 00E0     		b	.L102
 1522              	.L117:
 672:VS4210/monitor.c **** 
 1523              		.loc 1 672 0
 1524 0268 0024     		movs	r4, #0
 1525              	.LVL128:
 1526              	.L102:
 804:VS4210/monitor.c **** 	}
 805:VS4210/monitor.c **** 
 806:VS4210/monitor.c **** 	if( ret ) {
 1527              		.loc 1 806 0
 1528 026a 34B1     		cbz	r4, .L86
 807:VS4210/monitor.c **** 		comment = 0;
 1529              		.loc 1 807 0
 1530 026c 0022     		movs	r2, #0
 1531 026e 054B     		ldr	r3, .L120+4
 1532 0270 1A70     		strb	r2, [r3]
 808:VS4210/monitor.c **** 		last_argc = argc;
 1533              		.loc 1 808 0
 1534 0272 054B     		ldr	r3, .L120+8
 1535 0274 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1536 0276 084B     		ldr	r3, .L120+24
 1537 0278 1A70     		strb	r2, [r3]
 1538              	.LVL129:
 1539              	.L86:
 809:VS4210/monitor.c **** 		return ret;
 810:VS4210/monitor.c **** 	}
 811:VS4210/monitor.c **** 	else {
 812:VS4210/monitor.c **** 		return ret;
 813:VS4210/monitor.c **** 	}
 814:VS4210/monitor.c **** }
 1540              		.loc 1 814 0
 1541 027a 2046     		mov	r0, r4
 1542 027c 38BD     		pop	{r3, r4, r5, pc}
 1543              	.L121:
 1544 027e 00BF     		.align	2
 1545              	.L120:
 1546 0280 00000000 		.word	.LANCHOR5
 1547 0284 00000000 		.word	.LANCHOR6
 1548 0288 00000000 		.word	.LANCHOR7
 1549 028c 00000000 		.word	.LANCHOR8
 1550 0290 00000000 		.word	monstr
ARM GAS  /tmp/ccD8Q2iX.s 			page 42


 1551 0294 00000000 		.word	argv
 1552 0298 00000000 		.word	.LANCHOR9
 1553              		.cfi_endproc
 1554              	.LFE88:
 1556              		.section	.text.SET_AHD_SYNC_PARA,"ax",%progbits
 1557              		.align	2
 1558              		.global	SET_AHD_SYNC_PARA
 1559              		.thumb
 1560              		.thumb_func
 1562              	SET_AHD_SYNC_PARA:
 1563              	.LFB90:
 815:VS4210/monitor.c **** 
 816:VS4210/monitor.c **** //*****************************************************************************
 817:VS4210/monitor.c **** //				Monitoring Command
 818:VS4210/monitor.c **** //*****************************************************************************
 819:VS4210/monitor.c **** //#ifdef  HS_DEBUG
 820:VS4210/monitor.c **** #ifdef  HS_DEBUG
 821:VS4210/monitor.c **** void Monitor(void)
 822:VS4210/monitor.c **** {
 823:VS4210/monitor.c **** 
 824:VS4210/monitor.c **** 	 BYTE ret/*,temp*/;
 825:VS4210/monitor.c **** 	//WORD addr;		
 826:VS4210/monitor.c **** 	if( !MonGetCommand() ) return;
 827:VS4210/monitor.c **** 
 828:VS4210/monitor.c **** 	//--------------------------------------------------
 829:VS4210/monitor.c **** 	// Check Indirect command
 830:VS4210/monitor.c **** 	/*
 831:VS4210/monitor.c **** 	if( !stricmp( argv[0], "I" ) ) 			indirect=1;	
 832:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "O" ) ) 	indirect=1;	
 833:VS4210/monitor.c **** 
 834:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "," ) ) 	indirect=0;	
 835:VS4210/monitor.c **** 	else if( !stricmp( argv[0], ">" ) ) 	indirect=0;	
 836:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "<" ) ) 	indirect=0;	
 837:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "." ) ) 	indirect=0;	
 838:VS4210/monitor.c **** 	else  indirect=0;	
 839:VS4210/monitor.c **** 	*/
 840:VS4210/monitor.c **** 	indirect = 0;
 841:VS4210/monitor.c **** 
 842:VS4210/monitor.c **** 	//---------------- Write Register -------------------
 843:VS4210/monitor.c **** 	if( !stricmp( (BYTE *)argv[0],(BYTE *)"W" ) ) {
 844:VS4210/monitor.c **** 
 845:VS4210/monitor.c **** #if 0
 846:VS4210/monitor.c **** 
 847:VS4210/monitor.c **** VXISI2CWrite( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 848:VS4210/monitor.c **** 		 ret= VXISI2CRead(Asc2Bin(argv[1]));	
 849:VS4210/monitor.c **** 	   Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 850:VS4210/monitor.c **** 
 851:VS4210/monitor.c **** #else
 852:VS4210/monitor.c **** if(Monitor_I2C==0xA0)
 853:VS4210/monitor.c **** 	{
 854:VS4210/monitor.c **** 	WriteEEP( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 855:VS4210/monitor.c **** 	   //tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2])); 	
 856:VS4210/monitor.c **** 	 ret= ReadEEP(Asc2Bin(argv[1]));	
 857:VS4210/monitor.c **** 		MonIndex=Asc2Bin(argv[1]);
 858:VS4210/monitor.c **** 		MonWdata=Asc2Bin(argv[2]);
 859:VS4210/monitor.c **** 	  Printf("\r\nEEPROM Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 860:VS4210/monitor.c **** 	}
ARM GAS  /tmp/ccD8Q2iX.s 			page 43


 861:VS4210/monitor.c **** else if(Monitor_I2C==0x40)
 862:VS4210/monitor.c **** {
 863:VS4210/monitor.c **** 	VXISI2CWrite( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 864:VS4210/monitor.c **** 	 ret= VXISI2CRead(Asc2Bin(argv[1]));	
 865:VS4210/monitor.c **** 	 MonIndex=Asc2Bin(argv[1]);
 866:VS4210/monitor.c **** 	 MonWdata=Asc2Bin(argv[2]); 
 867:VS4210/monitor.c **** 	   Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 868:VS4210/monitor.c **** }
 869:VS4210/monitor.c **** else if(Monitor_I2C==0x12)
 870:VS4210/monitor.c **** {
 871:VS4210/monitor.c **** 	VS8812Write( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 872:VS4210/monitor.c **** 	 ret= VS8812Read(Asc2Bin(argv[1]));	
 873:VS4210/monitor.c **** 	 MonIndex=Asc2Bin(argv[1]);
 874:VS4210/monitor.c **** 	 MonWdata=Asc2Bin(argv[2]); 
 875:VS4210/monitor.c **** 	   Printf("\r\nVS8812 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 876:VS4210/monitor.c **** }
 877:VS4210/monitor.c **** /*
 878:VS4210/monitor.c **** else if(Monitor_I2C==0x28)
 879:VS4210/monitor.c **** {
 880:VS4210/monitor.c **** 	
 881:VS4210/monitor.c **** 	addr=Asc2Bin(argv[1]);
 882:VS4210/monitor.c **** 	addr<<=8;
 883:VS4210/monitor.c **** 	addr|=Asc2Bin(argv[2]);
 884:VS4210/monitor.c **** 
 885:VS4210/monitor.c **** 	temp=Asc2Bin(argv[3]);
 886:VS4210/monitor.c **** 	SET_nGT911( addr,&temp,1 );
 887:VS4210/monitor.c **** 
 888:VS4210/monitor.c **** Printf("\r\nGT911  Write addr=%02x%02x data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]),(WO
 889:VS4210/monitor.c **** 	
 890:VS4210/monitor.c **** 	GET_nGT911(addr,&ret,1); 
 891:VS4210/monitor.c **** 	
 892:VS4210/monitor.c **** Printf("\r\nGT911  Read addr=%02x%02x data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]),(WOR
 893:VS4210/monitor.c ****   
 894:VS4210/monitor.c **** }
 895:VS4210/monitor.c **** */
 896:VS4210/monitor.c **** else if( Monitor_I2C==0x88)
 897:VS4210/monitor.c **** 	{
 898:VS4210/monitor.c **** 	tp28xx_byte_write( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );	
 899:VS4210/monitor.c **** 	ret= tp28xx_byte_read(Asc2Bin(argv[1]));	
 900:VS4210/monitor.c **** 	MonIndex=Asc2Bin(argv[1]);
 901:VS4210/monitor.c **** 	MonWdata=Asc2Bin(argv[2]);
 902:VS4210/monitor.c **** 	 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 903:VS4210/monitor.c **** 	}
 904:VS4210/monitor.c **** 
 905:VS4210/monitor.c **** else if( Monitor_I2C==0x90)
 906:VS4210/monitor.c **** 	{
 907:VS4210/monitor.c **** 	gHDMI_Index=0;	
 908:VS4210/monitor.c **** 	HDMIRX_WriteI2C_Byte( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );	
 909:VS4210/monitor.c **** 	ret= HDMIRX_ReadI2C_Byte(Asc2Bin(argv[1]));		
 910:VS4210/monitor.c **** 	MonIndex=Asc2Bin(argv[1]);
 911:VS4210/monitor.c **** 	MonWdata=Asc2Bin(argv[2]);
 912:VS4210/monitor.c **** 	 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 913:VS4210/monitor.c **** 	}
 914:VS4210/monitor.c **** else
 915:VS4210/monitor.c **** {
 916:VS4210/monitor.c **** 	Printf("\r\nI2C addr. error");   
 917:VS4210/monitor.c **** 
ARM GAS  /tmp/ccD8Q2iX.s 			page 44


 918:VS4210/monitor.c **** }
 919:VS4210/monitor.c **** 
 920:VS4210/monitor.c **** #endif
 921:VS4210/monitor.c **** /*
 922:VS4210/monitor.c **** 		if(Monitor_I2C==EEPROM_24C02_addr)
 923:VS4210/monitor.c **** 		{
 924:VS4210/monitor.c **** 		 SW_I2C1Write( Monitor_I2C , Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 925:VS4210/monitor.c **** 		//tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2]));	 
 926:VS4210/monitor.c **** 		  ret= SW_I2C1Read(Monitor_I2C,Asc2Bin(argv[1]));	 
 927:VS4210/monitor.c **** 		Printf("\r\nEEPROM Write addr=%02x	data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 928:VS4210/monitor.c **** 		}
 929:VS4210/monitor.c **** 		else
 930:VS4210/monitor.c **** 			{
 931:VS4210/monitor.c **** 		    	tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2]));   
 932:VS4210/monitor.c **** 	        	//ret= tp28xx_byte_read(0x2a);   
 933:VS4210/monitor.c **** 			  ret= tp28xx_byte_read(Asc2Bin(argv[1]));   
 934:VS4210/monitor.c **** 			Printf("\r\nTP2824 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 935:VS4210/monitor.c **** 			}
 936:VS4210/monitor.c **** 		*/
 937:VS4210/monitor.c **** 		
 938:VS4210/monitor.c **** 	}
 939:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0],(BYTE *) ")" ) ) {
 940:VS4210/monitor.c **** 		indirect=0;
 941:VS4210/monitor.c **** 	//	MonNewWriteI2C();
 942:VS4210/monitor.c **** 	}
 943:VS4210/monitor.c **** 	/*
 944:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "O" ) ) {			// inderect addressing for 8806
 945:VS4210/monitor.c **** 		MonIndex = Asc2Bin( argv[1] );
 946:VS4210/monitor.c **** 		MonWdata = Asc2Bin( argv[2] );
 947:VS4210/monitor.c **** 		WriteI2C(MonAddress, 0xc5, MonIndex);
 948:VS4210/monitor.c **** 		WriteI2C(MonAddress, 0xc6, MonWdata);
 949:VS4210/monitor.c **** 		MonRdata = ReadI2C(MonAddress, 0xc6);
 950:VS4210/monitor.c **** 		Printf("\r\n==> Read %2xh:%2xh", (WORD)MonIndex, (WORD)MonRdata);
 951:VS4210/monitor.c **** 	}
 952:VS4210/monitor.c **** 	*/
 953:VS4210/monitor.c **** 	//---------------- Read Register --------------------
 954:VS4210/monitor.c **** 	else if ( !stricmp((BYTE*) argv[0],(BYTE*) "R" ) ) {
 955:VS4210/monitor.c **** 		//MonReadI2C();
 956:VS4210/monitor.c **** 	
 957:VS4210/monitor.c **** 		#if 0
 958:VS4210/monitor.c **** 			   ret= VXISI2CRead(Asc2Bin(argv[1]));			 
 959:VS4210/monitor.c **** 			Printf("\r\nVS4210	Read addr=%02x	data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 960:VS4210/monitor.c **** 
 961:VS4210/monitor.c **** 		#else
 962:VS4210/monitor.c **** 	if(Monitor_I2C==0xA0)
 963:VS4210/monitor.c **** 		{
 964:VS4210/monitor.c **** 		   ret= ReadEEP(Asc2Bin(argv[1])); 
 965:VS4210/monitor.c **** 		   MonIndex=Asc2Bin(argv[1]);
 966:VS4210/monitor.c **** 		   MonWdata=ret;
 967:VS4210/monitor.c **** 		Printf("\r\nEEPROM  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 968:VS4210/monitor.c **** 		}
 969:VS4210/monitor.c **** 	else if(Monitor_I2C==0x40)
 970:VS4210/monitor.c **** 		{
 971:VS4210/monitor.c **** 		ret= VXISI2CRead(Asc2Bin(argv[1])); 	
 972:VS4210/monitor.c **** 		 MonIndex=Asc2Bin(argv[1]);
 973:VS4210/monitor.c **** 		 MonWdata=ret;
 974:VS4210/monitor.c **** 		 Printf("\r\nVS4210  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
ARM GAS  /tmp/ccD8Q2iX.s 			page 45


 975:VS4210/monitor.c **** 		}
 976:VS4210/monitor.c **** 	else if(Monitor_I2C==0x12)
 977:VS4210/monitor.c **** 		{
 978:VS4210/monitor.c **** 		ret= VS8812Read(Asc2Bin(argv[1])); 	
 979:VS4210/monitor.c **** 		 MonIndex=Asc2Bin(argv[1]);
 980:VS4210/monitor.c **** 		 MonWdata=ret;
 981:VS4210/monitor.c **** 		 Printf("\r\nVS8812  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 982:VS4210/monitor.c **** 		}
 983:VS4210/monitor.c **** 	/*
 984:VS4210/monitor.c **** 	else if(Monitor_I2C==0x28)
 985:VS4210/monitor.c **** 		{
 986:VS4210/monitor.c **** 
 987:VS4210/monitor.c **** 		addr=Asc2Bin(argv[1]);
 988:VS4210/monitor.c **** 		addr<<=8;
 989:VS4210/monitor.c **** 		addr|=Asc2Bin(argv[2]);
 990:VS4210/monitor.c **** 		
 991:VS4210/monitor.c **** 		GET_nGT911(addr,&temp,1); 		  
 992:VS4210/monitor.c **** 		 Printf("\r\nGT911  Read addr=%02x%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]),
 993:VS4210/monitor.c **** 		}
 994:VS4210/monitor.c **** 	*/
 995:VS4210/monitor.c **** 	else if( Monitor_I2C==0x88)
 996:VS4210/monitor.c **** 		{	
 997:VS4210/monitor.c **** 		ret= tp28xx_byte_read(Asc2Bin(argv[1])); 	
 998:VS4210/monitor.c **** 		MonIndex=Asc2Bin(argv[1]);
 999:VS4210/monitor.c **** 		MonWdata=ret;
1000:VS4210/monitor.c **** 		 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
1001:VS4210/monitor.c **** 		}
1002:VS4210/monitor.c **** 	else if( Monitor_I2C==0x90)
1003:VS4210/monitor.c **** 			{
1004:VS4210/monitor.c **** 			gHDMI_Index=0;
1005:VS4210/monitor.c **** 			ret= HDMIRX_ReadI2C_Byte(Asc2Bin(argv[1]));	  
1006:VS4210/monitor.c **** 			 MonIndex=Asc2Bin(argv[1]);
1007:VS4210/monitor.c **** 			 MonWdata=ret;
1008:VS4210/monitor.c **** 			 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
1009:VS4210/monitor.c **** 			}
1010:VS4210/monitor.c **** 	else
1011:VS4210/monitor.c **** 		{
1012:VS4210/monitor.c **** 		Printf("\r\nI2C addr. error");
1013:VS4210/monitor.c **** 		}
1014:VS4210/monitor.c **** 		#endif
1015:VS4210/monitor.c **** 		/*
1016:VS4210/monitor.c **** 		if(Monitor_I2C==EEPROM_24C02_addr)
1017:VS4210/monitor.c **** 				{
1018:VS4210/monitor.c **** 			   ret= SW_I2C1Read(Monitor_I2C,Asc2Bin(argv[1]));              
1019:VS4210/monitor.c **** 			Printf("\r\nEEPROM Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);	
1020:VS4210/monitor.c **** 			}
1021:VS4210/monitor.c **** 		else
1022:VS4210/monitor.c **** 			{
1023:VS4210/monitor.c **** 			   ret= tp28xx_byte_read(Asc2Bin(argv[1]));              
1024:VS4210/monitor.c **** 			Printf("\r\nTP2824 Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);		
1025:VS4210/monitor.c **** 			}
1026:VS4210/monitor.c **** 		*/
1027:VS4210/monitor.c **** 	}  
1028:VS4210/monitor.c **** 	
1029:VS4210/monitor.c **** 	else if ( !stricmp( (BYTE *)argv[0],(BYTE *) "VR" ) ) {
1030:VS4210/monitor.c **** 			//MonReadI2C();
1031:VS4210/monitor.c **** 	//	 ret=VXISI2CRead(Asc2Bin(argv[1])); 
ARM GAS  /tmp/ccD8Q2iX.s 			page 46


1032:VS4210/monitor.c **** 	//	Printf("\r\nVS4210 Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);	
1033:VS4210/monitor.c **** 	
1034:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x02));
1035:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x03));
1036:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x04));
1037:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x05));
1038:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x06));
1039:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x07));
1040:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x08));
1041:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x09));
1042:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0A));
1043:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0B));
1044:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0C));
1045:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0D));
1046:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x10));
1047:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x11));
1048:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x15));
1049:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x16));
1050:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x17));
1051:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x18));
1052:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x19));
1053:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1A));
1054:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1C));
1055:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1D));
1056:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1E));
1057:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x28));
1058:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x29));
1059:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2A));
1060:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2B));
1061:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2C));
1062:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2D));
1063:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x74));
1064:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x7E));
1065:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x7F));
1066:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x80));
1067:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x81));
1068:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x82));
1069:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x83));
1070:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x84));
1071:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x85));
1072:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x86));
1073:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x87));
1074:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x88));
1075:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x89));
1076:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8A));
1077:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8B));
1078:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8C));
1079:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8D));
1080:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8E));
1081:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8F));
1082:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x90));
1083:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x91));
1084:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x92));
1085:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x93));
1086:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x94));
1087:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x95));
1088:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x97));
ARM GAS  /tmp/ccD8Q2iX.s 			page 47


1089:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x98));
1090:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x99));
1091:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9B));
1092:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9C));
1093:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9D));
1094:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9E));
1095:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9F));
1096:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA0));
1097:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA1));
1098:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA2));
1099:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA3));
1100:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA4));
1101:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA5));
1102:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA6));
1103:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA7));
1104:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA8));
1105:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA9));
1106:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAA));
1107:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAB));
1108:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAF));
1109:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xC0));
1110:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD6));
1111:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD7));
1112:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD8));
1113:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE6));
1114:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE7));
1115:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE8));
1116:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE9));
1117:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEA));
1118:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEB));
1119:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEC));
1120:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xED));
1121:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEE));
1122:VS4210/monitor.c **** 
1123:VS4210/monitor.c **** 		}
1124:VS4210/monitor.c **** 	else if ( !stricmp( (BYTE *)argv[0], (BYTE *)"VW" ) ) {
1125:VS4210/monitor.c **** 		    VXISI2CWrite(Asc2Bin(argv[1]), Asc2Bin(argv[2]));   
1126:VS4210/monitor.c **** 	  ret= VXISI2CRead(Asc2Bin(argv[1]));   
1127:VS4210/monitor.c **** 	Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);				
1128:VS4210/monitor.c **** 		}
1129:VS4210/monitor.c **** 	else if ( !stricmp( argv[0],(BYTE *)"(" ) ) {
1130:VS4210/monitor.c **** 		indirect=0;
1131:VS4210/monitor.c **** 		//MonNewReadI2C();
1132:VS4210/monitor.c **** 	}
1133:VS4210/monitor.c **** 	else if ( !stricmp( (BYTE *)argv[0],(BYTE *) "I2C" ) ) {
1134:VS4210/monitor.c **** 		 ret=Asc2Bin(argv[1]); 
1135:VS4210/monitor.c **** 		Printf("\r\nChange I2C addr. from %02x to %02x",(WORD)Monitor_I2C,(WORD)ret);		
1136:VS4210/monitor.c **** 		Monitor_I2C=ret;
1137:VS4210/monitor.c **** 		}
1138:VS4210/monitor.c **** 	else if ( !stricmp( (BYTE *)argv[0],(BYTE *) "Q" ) ) {
1139:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1140:VS4210/monitor.c **** 		}
1141:VS4210/monitor.c **** 	else if ( !stricmp( (BYTE *)argv[0],(BYTE *) "DUMP" ) ) {
1142:VS4210/monitor.c **** 		WORD s,e;	//20201211-03
1143:VS4210/monitor.c **** 		
1144:VS4210/monitor.c **** 		 s=Asc2Bin(argv[1]); 
1145:VS4210/monitor.c **** 		 e=Asc2Bin(argv[2]); 
ARM GAS  /tmp/ccD8Q2iX.s 			page 48


1146:VS4210/monitor.c **** 
1147:VS4210/monitor.c **** 
1148:VS4210/monitor.c **** 		 if(Monitor_I2C==0xA0)
1149:VS4210/monitor.c **** 			 {
1150:VS4210/monitor.c **** 			 Printf("\r\nDUMP EEPROM Reg..");
1151:VS4210/monitor.c **** 			 }
1152:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x40)
1153:VS4210/monitor.c **** 			 {
1154:VS4210/monitor.c **** 			 Printf("\r\nDUMP VS4210 Reg..");
1155:VS4210/monitor.c **** 			 }
1156:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x12)
1157:VS4210/monitor.c **** 			 {
1158:VS4210/monitor.c **** 			 Printf("\r\nDUMP VS8812 Reg..");
1159:VS4210/monitor.c **** 			 }
1160:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x90)
1161:VS4210/monitor.c **** 			 {
1162:VS4210/monitor.c **** 			 Printf("\r\nDUMP IT66021 Reg..");
1163:VS4210/monitor.c **** 			 }		 
1164:VS4210/monitor.c **** 
1165:VS4210/monitor.c **** for(;s<=e;s++)
1166:VS4210/monitor.c **** {
1167:VS4210/monitor.c **** 		 if(Monitor_I2C==0xA0)
1168:VS4210/monitor.c **** 			 {
1169:VS4210/monitor.c **** 				ret= ReadEEP(s); 		  
1170:VS4210/monitor.c **** 			 Printf("\r\nEEPROM  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
1171:VS4210/monitor.c **** 			 }
1172:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x40)
1173:VS4210/monitor.c **** 			 {
1174:VS4210/monitor.c **** 			 ret= VXISI2CRead(s);		   
1175:VS4210/monitor.c **** 			 // Printf("\r\nVXISI2CWrite(0x%02x,0x%02x);",(WORD)s,(WORD)ret);
1176:VS4210/monitor.c **** 			  Printf("\r\n40,%02x,%02x",(WORD)s,(WORD)ret);
1177:VS4210/monitor.c **** 			 }
1178:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x12)
1179:VS4210/monitor.c **** 			 {
1180:VS4210/monitor.c **** 			 ret= VS8812Read(s); 	   
1181:VS4210/monitor.c **** //			  Printf("\r\nVS8812  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
1182:VS4210/monitor.c **** 			  Printf("\r\nVS8812,%02x,%02x",(WORD)s,(WORD)ret);
1183:VS4210/monitor.c **** 			 }
1184:VS4210/monitor.c **** 		  else if(Monitor_I2C==0x88)
1185:VS4210/monitor.c **** 					  {
1186:VS4210/monitor.c **** 					  ret= tp28xx_byte_read(s);		
1187:VS4210/monitor.c **** 					   Printf("\r\ntp28xx,%02x,%02x",(WORD)s,(WORD)ret);
1188:VS4210/monitor.c **** 					  } 
1189:VS4210/monitor.c **** 		  else if(Monitor_I2C==0x90)
1190:VS4210/monitor.c **** 								{
1191:VS4210/monitor.c **** 								gHDMI_Index=0;
1192:VS4210/monitor.c **** 							ret= HDMIRX_ReadI2C_Byte(s);	  
1193:VS4210/monitor.c **** 								 Printf("\r\nIT66021,%02x,%02x",(WORD)s,(WORD)ret);
1194:VS4210/monitor.c **** 								} 
1195:VS4210/monitor.c **** 
1196:VS4210/monitor.c **** 		 /*
1197:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x28)
1198:VS4210/monitor.c **** 		 {
1199:VS4210/monitor.c **** 			 addr=Asc2Bin(argv[1]);
1200:VS4210/monitor.c **** 			 addr<<=8;
1201:VS4210/monitor.c **** 			 addr|=Asc2Bin(argv[2]);
1202:VS4210/monitor.c **** 			 
ARM GAS  /tmp/ccD8Q2iX.s 			page 49


1203:VS4210/monitor.c **** 			 GET_nGT911(addr,&temp,1);		   
1204:VS4210/monitor.c **** 			  Printf("\r\nGT911  Read addr=%02x%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]
1205:VS4210/monitor.c **** 		 
1206:VS4210/monitor.c **** 		 }	
1207:VS4210/monitor.c **** 		 */
1208:VS4210/monitor.c **** 		 else
1209:VS4210/monitor.c **** 			 {
1210:VS4210/monitor.c **** 			 Printf("\r\nI2C addr. error");
1211:VS4210/monitor.c **** 			 }
1212:VS4210/monitor.c **** }
1213:VS4210/monitor.c **** 		}
1214:VS4210/monitor.c **** 	#if 0
1215:VS4210/monitor.c **** 		else if ( !stricmp( (BYTE *)argv[0],(BYTE *) "DTP" ) ) {
1216:VS4210/monitor.c **** 			WORD /*s,e,*/n,i;
1217:VS4210/monitor.c **** 			
1218:VS4210/monitor.c **** 				 addr=Asc2Bin(argv[1]);
1219:VS4210/monitor.c **** 				 addr<<=8;
1220:VS4210/monitor.c **** 				 addr|=Asc2Bin(argv[2]);
1221:VS4210/monitor.c ****  					
1222:VS4210/monitor.c **** 				 n=Asc2Bin(argv[3]);
1223:VS4210/monitor.c **** 
1224:VS4210/monitor.c **** 			 Printf("\r\nDUMP GT911 Reg..");
1225:VS4210/monitor.c **** 
1226:VS4210/monitor.c **** 	
1227:VS4210/monitor.c **** 		for(i=0;i<n;i++)
1228:VS4210/monitor.c **** 		{	
1229:VS4210/monitor.c ****    		GET_nGT911(addr+i,&temp,1);		  	
1230:VS4210/monitor.c **** 		  Printf("\r\nAddr=%04x Data=%02x",(WORD)addr+i,(WORD)temp);
1231:VS4210/monitor.c **** 		}
1232:VS4210/monitor.c **** 	}
1233:VS4210/monitor.c **** 		#endif
1234:VS4210/monitor.c **** 	/*
1235:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "i" ) ) {
1236:VS4210/monitor.c **** 		MonIndex = Asc2Bin( argv[1] );
1237:VS4210/monitor.c **** 		WriteI2C(MonAddress, 0xc5, MonIndex);
1238:VS4210/monitor.c **** 		MonRdata = ReadI2C(MonAddress, 0xc6);
1239:VS4210/monitor.c **** 		Printf("\r\n==> Read %2xh:%2xh", (WORD)MonIndex, (WORD)MonRdata);
1240:VS4210/monitor.c **** 
1241:VS4210/monitor.c **** 	}
1242:VS4210/monitor.c **** 	*/
1243:VS4210/monitor.c **** 	/*
1244:VS4210/monitor.c **** 	//---------------- Dump Register --------------------
1245:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "D" ) ) {
1246:VS4210/monitor.c **** 		Puts("\r\ndump start");
1247:VS4210/monitor.c **** 		MonDumpI2C();
1248:VS4210/monitor.c **** 	}
1249:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "&" ) ) {
1250:VS4210/monitor.c **** 		indirect=0;
1251:VS4210/monitor.c **** 		MonNewDumpI2C();
1252:VS4210/monitor.c **** 	}
1253:VS4210/monitor.c **** 
1254:VS4210/monitor.c **** 	//---------------- Bit Operation --------------------
1255:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "B" ) ) {// Write bits - B AA II bb DD
1256:VS4210/monitor.c **** 		MonWriteBit();
1257:VS4210/monitor.c **** 	}
1258:VS4210/monitor.c **** 	//---------------- AD5110 CMD --------------------
1259:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PSW" ) ) {
ARM GAS  /tmp/ccD8Q2iX.s 			page 50


1260:VS4210/monitor.c **** 		PSW_Flag=1;
1261:VS4210/monitor.c **** 		Printf("\r\n(PSW_Flag =1)");
1262:VS4210/monitor.c **** 	}
1263:VS4210/monitor.c **** 	//---------------- AD5110 CMD --------------------
1264:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "ADW" ) ) {
1265:VS4210/monitor.c **** 		WriteAD5110(Asc2Bin(argv[1]),Asc2Bin(argv[2]));
1266:VS4210/monitor.c **** 		Printf("\r\nAD5110 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]));
1267:VS4210/monitor.c **** 	}
1268:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "ADR" ) ) {
1269:VS4210/monitor.c **** 		ReadAD5110(Asc2Bin(argv[1]));
1270:VS4210/monitor.c **** 		Printf("\r\nAD5110 Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ReadAD5110(Asc2Bin(arg
1271:VS4210/monitor.c **** 	}
1272:VS4210/monitor.c **** */
1273:VS4210/monitor.c **** 	/*	no indirect addressing in TW8816
1274:VS4210/monitor.c ****     //---------------------------------------------------
1275:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "@" ) ) { // Indirect address bit access
1276:VS4210/monitor.c **** 
1277:VS4210/monitor.c **** 					BYTE Slave, mask, FromBit, ToBit,  MonMask, val,i;
1278:VS4210/monitor.c **** 					// @ 8a iaddr idata index  startbit|endbit  data
1279:VS4210/monitor.c **** 					// 0  1   2    3     4     5                 6
1280:VS4210/monitor.c **** 
1281:VS4210/monitor.c **** 					if( argc<7 ) {
1282:VS4210/monitor.c **** 						Printf("   --> Missing parameter !!!");
1283:VS4210/monitor.c **** 						return;
1284:VS4210/monitor.c **** 					}
1285:VS4210/monitor.c **** 
1286:VS4210/monitor.c **** 					Slave = Asc2Bin(argv[1]);
1287:VS4210/monitor.c **** 					
1288:VS4210/monitor.c **** 					FromBit = Asc2Bin( argv[5] );
1289:VS4210/monitor.c **** 					FromBit  = ( FromBit >> 4) & 0x0f;
1290:VS4210/monitor.c **** 					ToBit = Asc2Bin( argv[5] );
1291:VS4210/monitor.c **** 					ToBit  =  ToBit & 0x0f;
1292:VS4210/monitor.c **** 					MonMask  = Asc2Bin( argv[6] );
1293:VS4210/monitor.c **** 
1294:VS4210/monitor.c **** 					if( FromBit<ToBit || FromBit>7 || ToBit>7) {
1295:VS4210/monitor.c **** 						Printf("\r\n   --> Wrong range of bit operation !!!");
1296:VS4210/monitor.c **** 						return;
1297:VS4210/monitor.c **** 					}
1298:VS4210/monitor.c **** 	
1299:VS4210/monitor.c **** 					mask = 0xff; 
1300:VS4210/monitor.c **** 					val=0x7f;
1301:VS4210/monitor.c **** 					for(i=7; i>FromBit; i--) {
1302:VS4210/monitor.c **** 						mask &= val;
1303:VS4210/monitor.c **** 						val = val>>1;
1304:VS4210/monitor.c **** 					}
1305:VS4210/monitor.c **** 
1306:VS4210/monitor.c **** 					val=0xfe;
1307:VS4210/monitor.c **** 					for(i=0; i<ToBit; i++) {
1308:VS4210/monitor.c **** 						mask &= val;
1309:VS4210/monitor.c **** 						val = val<<1;
1310:VS4210/monitor.c **** 					}
1311:VS4210/monitor.c **** 
1312:VS4210/monitor.c **** 					// @ 8a iaddr idata index  startbit|endbit  data
1313:VS4210/monitor.c **** 					// 0  1   2    3     4     5                 6
1314:VS4210/monitor.c **** 					MonIndex = Asc2Bin(argv[2]);
1315:VS4210/monitor.c **** 					MonWdata = Asc2Bin(argv[4]);
1316:VS4210/monitor.c **** 					WriteI2C( Slave, MonIndex, MonWdata);
ARM GAS  /tmp/ccD8Q2iX.s 			page 51


1317:VS4210/monitor.c **** 
1318:VS4210/monitor.c **** 					MonRdata = ReadI2C(Slave, Asc2Bin( argv[3]));
1319:VS4210/monitor.c **** 					MonWdata = (MonRdata & (~mask)) | (MonMask & mask);
1320:VS4210/monitor.c **** 					MonIndex = Asc2Bin(argv[3]);
1321:VS4210/monitor.c **** 					WriteI2C(Slave, MonIndex, MonWdata);
1322:VS4210/monitor.c **** 
1323:VS4210/monitor.c **** 					MonRdata = ReadI2C(Slave, MonIndex);
1324:VS4210/monitor.c **** 
1325:VS4210/monitor.c **** 					Printf("\r\n<R>%2x[%2x]=%2x", (WORD)Slave, (WORD)MonIndex, (WORD)MonRdata);
1326:VS4210/monitor.c **** 
1327:VS4210/monitor.c **** 	}
1328:VS4210/monitor.c **** 	//------------------------------------------------------------------				
1329:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "!" ) ) //  Indirect address write access
1330:VS4210/monitor.c **** 	{
1331:VS4210/monitor.c **** 					BYTE Slave;
1332:VS4210/monitor.c **** 					// @ 8a iaddr idata index data
1333:VS4210/monitor.c **** 					if( argc<6 ) {
1334:VS4210/monitor.c **** 						Printf("   --> Missing parameter !!!");
1335:VS4210/monitor.c **** 						return;
1336:VS4210/monitor.c **** 					}
1337:VS4210/monitor.c **** 
1338:VS4210/monitor.c **** 					Slave = Asc2Bin(argv[1]);
1339:VS4210/monitor.c **** 
1340:VS4210/monitor.c **** 					MonIndex = Asc2Bin(argv[2]);
1341:VS4210/monitor.c **** 					MonWdata = Asc2Bin(argv[4]);
1342:VS4210/monitor.c **** 					WriteI2C(Slave, MonIndex, MonWdata);
1343:VS4210/monitor.c **** 
1344:VS4210/monitor.c **** 					MonIndex = Asc2Bin(argv[3]);
1345:VS4210/monitor.c **** 					MonWdata = Asc2Bin(argv[5]);
1346:VS4210/monitor.c **** 					WriteI2C(Slave, MonIndex, MonWdata);
1347:VS4210/monitor.c **** 
1348:VS4210/monitor.c **** 					MonRdata = ReadI2C(Slave, MonIndex);
1349:VS4210/monitor.c **** 
1350:VS4210/monitor.c **** 					Printf("\r\n<R>%2x[%2x]=%2x", (WORD)Slave, (WORD)MonIndex, (WORD)MonRdata);
1351:VS4210/monitor.c **** 
1352:VS4210/monitor.c **** 	}
1353:VS4210/monitor.c **** 	*/    
1354:VS4210/monitor.c **** 
1355:VS4210/monitor.c **** 	//---------------- Change I2C -----------------------
1356:VS4210/monitor.c **** 	/*
1357:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0],(BYTE *) "C" ) ) {
1358:VS4210/monitor.c **** 		//Monitor_I2C = Asc2Bin( argv[1] );
1359:VS4210/monitor.c **** 		SetNowMode(); 
1360:VS4210/monitor.c **** 	}
1361:VS4210/monitor.c **** 	
1362:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0],(BYTE *) "PON" ) ) {
1363:VS4210/monitor.c **** 			//Monitor_I2C = Asc2Bin( argv[1] );
1364:VS4210/monitor.c **** 			SetNowMode(); 
1365:VS4210/monitor.c **** 				LCDPowerON();
1366:VS4210/monitor.c **** 		}
1367:VS4210/monitor.c **** 	*/
1368:VS4210/monitor.c **** 
1369:VS4210/monitor.c **** 	//---------------- Help -----------------------------
1370:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0],(BYTE *) "H" ) || !stricmp( (BYTE *)argv[0],(BYTE *) "HELP" ) |
1371:VS4210/monitor.c **** 		MonHelp();
1372:VS4210/monitor.c **** 	}
1373:VS4210/monitor.c **** 	else if( !stricmp( argv[0], (BYTE *)"PWM" ) ) {
ARM GAS  /tmp/ccD8Q2iX.s 			page 52


1374:VS4210/monitor.c **** 
1375:VS4210/monitor.c **** 		user_pwm_setvalue(Asc2Bin(argv[1])*15);
1376:VS4210/monitor.c **** 
1377:VS4210/monitor.c **** 			Printf("\r\nPWM=%d",(WORD)(Asc2Bin(argv[1])*15));
1378:VS4210/monitor.c **** 	}
1379:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "ALCR" ) ) {
1380:VS4210/monitor.c **** 
1381:VS4210/monitor.c **** 			Printf("\r\nALCR=%04x",(WORD)GET_ALC122(0x02));
1382:VS4210/monitor.c **** 
1383:VS4210/monitor.c **** 		}
1384:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "ALCW" ) ) {
1385:VS4210/monitor.c **** 		WORD val=0;
1386:VS4210/monitor.c **** 		val=Asc2Bin(argv[1]);
1387:VS4210/monitor.c **** 		val<<=8;
1388:VS4210/monitor.c **** 		val|=Asc2Bin(argv[1]);
1389:VS4210/monitor.c **** 	
1390:VS4210/monitor.c **** 		SET_ALC122(0x02,val);
1391:VS4210/monitor.c **** 
1392:VS4210/monitor.c **** 			Printf("\r\nALCR=%04x",(WORD)GET_ALC122(0x02));
1393:VS4210/monitor.c **** 	}
1394:VS4210/monitor.c **** 	/*
1395:VS4210/monitor.c **** 	else if( !stricmp( argv[0], (BYTE *)"tri" ) ) {
1396:VS4210/monitor.c **** 	TriggerFlag=Asc2Bin( argv[1]);
1397:VS4210/monitor.c **** 
1398:VS4210/monitor.c **** 			Printf("\r\nTrigger=%02x",(WORD)TriggerFlag);
1399:VS4210/monitor.c **** 	}
1400:VS4210/monitor.c **** 	*/
1401:VS4210/monitor.c **** else if( !stricmp( argv[0], (BYTE *) "ACCESS" ) ) {
1402:VS4210/monitor.c **** 		//if( argc==2 ) {
1403:VS4210/monitor.c **** 			AccessEnable = Asc2Bin(argv[1]);
1404:VS4210/monitor.c **** 		//}
1405:VS4210/monitor.c **** 		Printf("\r\nVS4210 AUTO ACCESS = %d", (WORD)AccessEnable);
1406:VS4210/monitor.c **** 	}
1407:VS4210/monitor.c **** else if( !stricmp( argv[0], (BYTE *) "Win" ) ) {	//20201214-02
1408:VS4210/monitor.c **** 
1409:VS4210/monitor.c **** 		BYTE ch;
1410:VS4210/monitor.c **** 		ch=Asc2Bin(argv[1]);
1411:VS4210/monitor.c **** 		
1412:VS4210/monitor.c **** 		HS_Select_Win(ch);
1413:VS4210/monitor.c **** 		
1414:VS4210/monitor.c **** 
1415:VS4210/monitor.c **** 		if(ch==1)
1416:VS4210/monitor.c **** 		{
1417:VS4210/monitor.c **** 		Printf("\r\nTP_InputMode = %d", (WORD)TP_InputMode);
1418:VS4210/monitor.c **** 		
1419:VS4210/monitor.c **** 			if(TP_InputMode==5)
1420:VS4210/monitor.c **** 			TP_bt1120_720P_1080P_mode0_w0();
1421:VS4210/monitor.c **** 			else if(TP_InputMode==6)
1422:VS4210/monitor.c **** 				TP_bt1120_1080P_1080P_mode0_w0();
1423:VS4210/monitor.c **** 			else if(TP_InputMode==0)
1424:VS4210/monitor.c **** 				TP_bt1120_NTSC_1080P_mode0_w0();
1425:VS4210/monitor.c **** 			else if(TP_InputMode==1)
1426:VS4210/monitor.c **** 				TP_bt1120_PAL_1080P_mode0_w0();
1427:VS4210/monitor.c **** 							
1428:VS4210/monitor.c **** 		}
1429:VS4210/monitor.c **** }	
1430:VS4210/monitor.c **** 	else if( !stricmp( argv[0], (BYTE *) "TP0" ) ) { //720P
ARM GAS  /tmp/ccD8Q2iX.s 			page 53


1431:VS4210/monitor.c **** 		TP_bt1120_720P_1080P_mode0_w0();
1432:VS4210/monitor.c **** 	}	
1433:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *)  "TP1" ) ) { //1080P
1434:VS4210/monitor.c **** 		TP_bt1120_1080P_1080P_mode0_w0();
1435:VS4210/monitor.c **** 	}	
1436:VS4210/monitor.c **** 	else if( !stricmp( argv[0], (BYTE *) "TP2" ) ) { //NTSC
1437:VS4210/monitor.c **** 		TP_bt1120_NTSC_1080P_mode0_w0();
1438:VS4210/monitor.c **** 	}	
1439:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "TP3" ) ) { //PAL
1440:VS4210/monitor.c **** 		TP_bt1120_PAL_1080P_mode0_w0();
1441:VS4210/monitor.c **** 	}	
1442:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "HDMI" ) ) { //HDMI
1443:VS4210/monitor.c **** 
1444:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1445:VS4210/monitor.c **** 		
1446:VS4210/monitor.c **** 		SelectInputMode=0;
1447:VS4210/monitor.c **** 		HS_Select_Win(0);
1448:VS4210/monitor.c **** 	}
1449:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "AHD" ) ) { //AHD
1450:VS4210/monitor.c **** 
1451:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1452:VS4210/monitor.c **** 	
1453:VS4210/monitor.c **** 		SelectInputMode=1;
1454:VS4210/monitor.c **** 		HS_Select_Win(1);
1455:VS4210/monitor.c **** 		Printf("\r\nTP_InputMode = %d", (WORD)TP_InputMode);
1456:VS4210/monitor.c **** 		
1457:VS4210/monitor.c **** 			if(TP_InputMode==5)
1458:VS4210/monitor.c **** 			TP_bt1120_720P_1080P_mode0_w0();
1459:VS4210/monitor.c **** 			else if(TP_InputMode==6)
1460:VS4210/monitor.c **** 				TP_bt1120_1080P_1080P_mode0_w0();
1461:VS4210/monitor.c **** 			else if(TP_InputMode==0)
1462:VS4210/monitor.c **** 				TP_bt1120_NTSC_1080P_mode0_w0();
1463:VS4210/monitor.c **** 			else if(TP_InputMode==1)
1464:VS4210/monitor.c **** 				TP_bt1120_PAL_1080P_mode0_w0();
1465:VS4210/monitor.c **** 			
1466:VS4210/monitor.c **** 							
1467:VS4210/monitor.c **** 	}	
1468:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "BS" ) ) { //HDMI input
1469:VS4210/monitor.c **** 		extern tByte bSignal[4] ;
1470:VS4210/monitor.c **** 		Printf("\r\nbSignal[0] = %d", (WORD) bSignal[0]);
1471:VS4210/monitor.c **** 		Printf("\r\nbSignal[1] = %d", (WORD) bSignal[1]);
1472:VS4210/monitor.c **** 		Printf("\r\nbSignal[2] = %d", (WORD) bSignal[2]);
1473:VS4210/monitor.c **** 		Printf("\r\nbSignal[3] = %d", (WORD) bSignal[3]);
1474:VS4210/monitor.c **** 
1475:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1476:VS4210/monitor.c **** 							
1477:VS4210/monitor.c **** 	}	
1478:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "SETHDMI" ) ) { //set HDMI embedded sync
1479:VS4210/monitor.c **** 
1480:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1481:VS4210/monitor.c **** 		SET_HDMI_SYNC_PARA();
1482:VS4210/monitor.c **** 
1483:VS4210/monitor.c **** 	}	
1484:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "SETAHD" ) ) { //set AHD embedded sync
1485:VS4210/monitor.c **** 
1486:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1487:VS4210/monitor.c **** 		SET_AHD_SYNC_PARA();
ARM GAS  /tmp/ccD8Q2iX.s 			page 54


1488:VS4210/monitor.c **** 
1489:VS4210/monitor.c **** 	}	  
1490:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "TPRST" ) ) { //reset TP2824
1491:VS4210/monitor.c **** 
1492:VS4210/monitor.c **** 		Init_TP280x_RegSet();
1493:VS4210/monitor.c **** 
1494:VS4210/monitor.c **** 	}	
1495:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "HDMI6" ) ) { 
1496:VS4210/monitor.c **** 
1497:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1498:VS4210/monitor.c **** 		SET_HDMI_640_480P_PARA();
1499:VS4210/monitor.c **** 
1500:VS4210/monitor.c **** 		}
1501:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "V720" ) ) { 
1502:VS4210/monitor.c **** 
1503:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1504:VS4210/monitor.c **** 		SET_VS4210_720_480_out();
1505:VS4210/monitor.c **** 		
1506:VS4210/monitor.c **** 	}	
1507:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "om" ) ) {    //COC menu
1508:VS4210/monitor.c **** 
1509:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1510:VS4210/monitor.c **** 		TVI_Command=0x0F;
1511:VS4210/monitor.c **** 		presetNum=0;
1512:VS4210/monitor.c **** 		TVI_speed=0;
1513:VS4210/monitor.c **** 		TVI_Chksum=0xC5;
1514:VS4210/monitor.c **** 		ptztxflag=1;
1515:VS4210/monitor.c **** 		
1516:VS4210/monitor.c **** 	}	
1517:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "ou" ) ) {    //COC up
1518:VS4210/monitor.c **** 
1519:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1520:VS4210/monitor.c **** 		TVI_Command=0x06;
1521:VS4210/monitor.c **** 		presetNum=0x1F;
1522:VS4210/monitor.c **** 		TVI_speed=0;
1523:VS4210/monitor.c **** 		TVI_Chksum=0xDB;
1524:VS4210/monitor.c **** 		ptztxflag=1;
1525:VS4210/monitor.c **** 		
1526:VS4210/monitor.c **** 	}	
1527:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "od" ) ) {    //COC down
1528:VS4210/monitor.c **** 
1529:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1530:VS4210/monitor.c **** 		TVI_Command=0x07;
1531:VS4210/monitor.c **** 		presetNum=0x1F;
1532:VS4210/monitor.c **** 		TVI_speed=0;
1533:VS4210/monitor.c **** 		TVI_Chksum=0xDC;
1534:VS4210/monitor.c **** 		ptztxflag=1;
1535:VS4210/monitor.c **** 
1536:VS4210/monitor.c **** 	}	else if( !stricmp( argv[0],(BYTE *) "ol" ) ) {    //COC left
1537:VS4210/monitor.c **** 
1538:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1539:VS4210/monitor.c **** 		TVI_Command=0x09;
1540:VS4210/monitor.c **** 		presetNum=0;
1541:VS4210/monitor.c **** 		TVI_speed=0x1F;
1542:VS4210/monitor.c **** 		TVI_Chksum=0xDE;
1543:VS4210/monitor.c **** 		ptztxflag=1;
1544:VS4210/monitor.c **** 
ARM GAS  /tmp/ccD8Q2iX.s 			page 55


1545:VS4210/monitor.c **** 	}	else if( !stricmp( argv[0],(BYTE *) "or" ) ) {    //COC right
1546:VS4210/monitor.c **** 
1547:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1548:VS4210/monitor.c **** 		TVI_Command=0x08;
1549:VS4210/monitor.c **** 		presetNum=0;
1550:VS4210/monitor.c **** 		TVI_speed=0x1F;
1551:VS4210/monitor.c **** 		TVI_Chksum=0xDD;
1552:VS4210/monitor.c **** 		ptztxflag=1;
1553:VS4210/monitor.c **** 		
1554:VS4210/monitor.c **** 	}
1555:VS4210/monitor.c **** 		else if( !stricmp( argv[0],(BYTE *) "op" ) ) {    //COC stop
1556:VS4210/monitor.c **** 			Monitor_flag=_FALSE;
1557:VS4210/monitor.c **** 		TVI_Command=0x14;
1558:VS4210/monitor.c **** 			presetNum=0;
1559:VS4210/monitor.c **** 			TVI_speed=0;
1560:VS4210/monitor.c **** 			TVI_Chksum=0;
1561:VS4210/monitor.c **** 				ptztxflag=1;	
1562:VS4210/monitor.c **** 			}
1563:VS4210/monitor.c **** 	#if 0
1564:VS4210/monitor.c **** 	else if( !stricmp( argv[0], (BYTE *)"sw" ) ) {
1565:VS4210/monitor.c **** 		BYTE ch,win;
1566:VS4210/monitor.c **** 	ch=Asc2Bin( argv[1]);
1567:VS4210/monitor.c **** 	win=Asc2Bin( (BYTE *)argv[2]);
1568:VS4210/monitor.c **** 	VS4210_SwitchChannel(ch,win);
1569:VS4210/monitor.c **** 
1570:VS4210/monitor.c **** 			Printf("\r\n(VS4210_SwitchChannel ch=%02x win=%02x)",(WORD)ch,(WORD)win);
1571:VS4210/monitor.c **** 	}
1572:VS4210/monitor.c **** 	#endif
1573:VS4210/monitor.c **** 	#if 0
1574:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0], (BYTE *)"dpreg" ) ) {	
1575:VS4210/monitor.c **** 		BYTE i;
1576:VS4210/monitor.c **** 		    for( i = 0; i < 4; i++)
1577:VS4210/monitor.c ****     {/*
1578:VS4210/monitor.c ****         count[i] = 0;
1579:VS4210/monitor.c ****         state[i] = VIDEO_UNPLUG;
1580:VS4210/monitor.c ****         std[i] = TVI;
1581:VS4210/monitor.c ****         mode[i] = NoDet;
1582:VS4210/monitor.c **** 		egain[4][4];        
1583:VS4210/monitor.c **** 		*/
1584:VS4210/monitor.c **** Printf("\r\n(ch=%02x count=%02x state=%02x std=%02x mode=%02x)",(WORD)i,(WORD)count[i],(WORD)state[
1585:VS4210/monitor.c **** Printf("(egain[%02x]  [0]=%02x [1]=%02x [2]=%02x [3]=%02x)",(WORD)i,(WORD)egain[i][0],(WORD)egain[i
1586:VS4210/monitor.c ****     }
1587:VS4210/monitor.c **** 	
1588:VS4210/monitor.c **** 		}
1589:VS4210/monitor.c **** #endif	
1590:VS4210/monitor.c **** 		/*
1591:VS4210/monitor.c **** 	//---------------------------------------------------
1592:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "*" ) ) {
1593:VS4210/monitor.c **** 			
1594:VS4210/monitor.c **** 				if( argc==1 ) {
1595:VS4210/monitor.c **** 					Printf("\r\n  * 0 : Program default Loader");
1596:VS4210/monitor.c **** 					Printf("\r\n  * 1 : Program external Loader");
1597:VS4210/monitor.c **** 					Printf("\r\n  * 2 : Execute Loader");
1598:VS4210/monitor.c **** 				}
1599:VS4210/monitor.c **** 				else { 
1600:VS4210/monitor.c **** 					BYTE mode;
1601:VS4210/monitor.c **** 					mode = Asc2Bin(argv[1]);
ARM GAS  /tmp/ccD8Q2iX.s 			page 56


1602:VS4210/monitor.c **** 					//Loader(mode);
1603:VS4210/monitor.c **** 				}
1604:VS4210/monitor.c **** 	}
1605:VS4210/monitor.c **** 
1606:VS4210/monitor.c **** 	//---------------------------------------------------
1607:VS4210/monitor.c **** #if defined( SUPPORT_PC ) || defined( SUPPORT_DTV )
1608:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PCLK" ) ) {
1609:VS4210/monitor.c **** 		PclkAccess();			
1610:VS4210/monitor.c **** 	}
1611:VS4210/monitor.c **** #endif	
1612:VS4210/monitor.c **** 
1613:VS4210/monitor.c **** 	//---------------------------------------------------
1614:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "POWER" ) ) {
1615:VS4210/monitor.c **** 		//LCDPower();
1616:VS4210/monitor.c **** 	}
1617:VS4210/monitor.c **** 
1618:VS4210/monitor.c **** 	//---------------------------------------------------
1619:VS4210/monitor.c **** #if defined( SUPPORT_PC ) || defined( SUPPORT_DTV )
1620:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "M" ) ) {
1621:VS4210/monitor.c **** 		if( argc==2 ) {
1622:VS4210/monitor.c **** 			if( !stricmp( argv[1], "?" ) ) {
1623:VS4210/monitor.c **** 				BYTE i;
1624:VS4210/monitor.c **** 				Printf("\r\nCurrent Input:%d \r\n", (WORD)InputSelection);
1625:VS4210/monitor.c **** 				for(i=1; struct_InputSelection[i].Id!=0 ; i++)
1626:VS4210/monitor.c **** 						Printf("%s:%d  ",struct_InputSelection[i].Name,(WORD)struct_InputSelection[i].Id );
1627:VS4210/monitor.c **** 				Printf("\r\n");
1628:VS4210/monitor.c **** 			}
1629:VS4210/monitor.c **** 			else
1630:VS4210/monitor.c **** 				ChangeInput(Asc2Bin( argv[1] ));
1631:VS4210/monitor.c **** 		}
1632:VS4210/monitor.c **** 		else
1633:VS4210/monitor.c **** 			ChangeInput(GetNextInputSelection());
1634:VS4210/monitor.c **** 	}	
1635:VS4210/monitor.c **** 	//---------------------------------------------------
1636:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "ACCESS" ) ) {
1637:VS4210/monitor.c **** 		if( argc==2 ) {
1638:VS4210/monitor.c **** 			AccessEnable = Asc2Bin(argv[1]);
1639:VS4210/monitor.c **** 		}
1640:VS4210/monitor.c **** 		Printf("\r\nTW88xx AUTO ACCESS = %d", (WORD)AccessEnable);
1641:VS4210/monitor.c **** 	}
1642:VS4210/monitor.c **** 	#if 0
1643:VS4210/monitor.c **** 	//---------------------------------------------------
1644:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "AUTODETECT" ) ) {
1645:VS4210/monitor.c **** 		if( argc==2 ) {
1646:VS4210/monitor.c **** 			AutoDetect = Asc2Bin(argv[1]);
1647:VS4210/monitor.c **** 		}
1648:VS4210/monitor.c **** 		Printf("\r\nPC Auto Detect = %d", (WORD)AutoDetect);
1649:VS4210/monitor.c **** 	}	
1650:VS4210/monitor.c **** 	#endif
1651:VS4210/monitor.c **** 	//---------------------------------------------------
1652:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PCAUTO" ) ) {
1653:VS4210/monitor.c **** 		Puts("\r\nPC Auto Measurement");
1654:VS4210/monitor.c **** 		AutoAdjust();
1655:VS4210/monitor.c **** 	}	
1656:VS4210/monitor.c **** 	//---------------------------------------------------
1657:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PCCOLOR" ) ) {
1658:VS4210/monitor.c **** 		Puts("\r\nPC Color Auto Measurement");
ARM GAS  /tmp/ccD8Q2iX.s 			page 57


1659:VS4210/monitor.c **** 		AutoColorAdjust();
1660:VS4210/monitor.c **** 	}	
1661:VS4210/monitor.c **** 	//---------------------------------------------------
1662:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "7" ) ) {
1663:VS4210/monitor.c **** 		Puts("\r\nGet HPN / VPN");
1664:VS4210/monitor.c **** 		GetHpnVpn(DebugLevel);
1665:VS4210/monitor.c **** 	}	
1666:VS4210/monitor.c **** #endif
1667:VS4210/monitor.c **** 	//---------------- Debug Level ---------------------
1668:VS4210/monitor.c **** 	else if ( !stricmp( argv[0], "DEBUG" ) ) {
1669:VS4210/monitor.c **** 		if( argc==2 ) {
1670:VS4210/monitor.c **** 			DebugLevel = Asc2Bin(argv[1]);
1671:VS4210/monitor.c **** 			SaveDebugLevelEE(DebugLevel);
1672:VS4210/monitor.c **** 		}
1673:VS4210/monitor.c **** 		Printf("\r\nDebug Level = %2x", (WORD)DebugLevel);
1674:VS4210/monitor.c **** 	}
1675:VS4210/monitor.c **** 	
1676:VS4210/monitor.c **** 	//---------------- Display on/off -------------------
1677:VS4210/monitor.c **** 	else if ( !stricmp( argv[0], "echo" ) ) {
1678:VS4210/monitor.c **** 		if( !stricmp( argv[1], "off" ) ) {
1679:VS4210/monitor.c **** 			echo = 0;
1680:VS4210/monitor.c **** 			Printf("\r\necho off");
1681:VS4210/monitor.c **** 		}
1682:VS4210/monitor.c **** 		else {
1683:VS4210/monitor.c **** 			echo = 1;
1684:VS4210/monitor.c **** 			Printf("\r\necho on");
1685:VS4210/monitor.c **** 		}
1686:VS4210/monitor.c **** 	}
1687:VS4210/monitor.c **** 	//---------------- RESET/ TEST / POWER_DOWN -------------------
1688:VS4210/monitor.c **** 	else if ( !stricmp( argv[0], "reset" ) ) {
1689:VS4210/monitor.c **** 		if( !stricmp( argv[1], "0" ) ) {
1690:VS4210/monitor.c **** //			P3_4 = 0;
1691:VS4210/monitor.c **** 			Printf("\r\nTW_reset_pin => 0");
1692:VS4210/monitor.c **** 		}
1693:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "1" ) ) {
1694:VS4210/monitor.c **** 	//		P3_4 = 1;
1695:VS4210/monitor.c **** 			Printf("\r\nTW_reset_pin => 1");
1696:VS4210/monitor.c **** 		}
1697:VS4210/monitor.c **** 		else {
1698:VS4210/monitor.c **** 			//Printf("\r\nTW_reset_pin = %d", (WORD)P3_4);
1699:VS4210/monitor.c **** 		}
1700:VS4210/monitor.c **** 	}
1701:VS4210/monitor.c **** 	else if ( !stricmp( argv[0], "test" ) ) {
1702:VS4210/monitor.c **** 		if( !stricmp( argv[1], "0" ) ) {
1703:VS4210/monitor.c **** 			//P0_7 = 0;
1704:VS4210/monitor.c **** 			Printf("\r\nTW_test_pin => 0");
1705:VS4210/monitor.c **** 		}
1706:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "1" ) ) {
1707:VS4210/monitor.c **** 			//P0_7 = 1;
1708:VS4210/monitor.c **** 			Printf("\r\nTW_test_pin => 1");
1709:VS4210/monitor.c **** 		}
1710:VS4210/monitor.c **** 		else {
1711:VS4210/monitor.c **** 		//	Printf("\r\nTW_test_pin = %d", (WORD)P0_7);
1712:VS4210/monitor.c **** 		}
1713:VS4210/monitor.c **** 	}
1714:VS4210/monitor.c **** 	else if ( !stricmp( argv[0], "pdn" ) ) {
1715:VS4210/monitor.c **** 		if( !stricmp( argv[1], "0" ) ) {
ARM GAS  /tmp/ccD8Q2iX.s 			page 58


1716:VS4210/monitor.c **** 		//	P3_7 = 0;
1717:VS4210/monitor.c **** 			Printf("\r\nTW_PowerDown_pin => 0");
1718:VS4210/monitor.c **** 		}
1719:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "1" ) ) {
1720:VS4210/monitor.c **** 			//P3_7 = 1;
1721:VS4210/monitor.c **** 			Printf("\r\nTW_PowerDown_pin => 1");
1722:VS4210/monitor.c **** 		}
1723:VS4210/monitor.c **** 		else {
1724:VS4210/monitor.c **** 			//Printf("\r\nTW_PowerDown_pin = %d", (WORD)P3_7);
1725:VS4210/monitor.c **** 		}
1726:VS4210/monitor.c **** 	}
1727:VS4210/monitor.c **** 	//---------------- OSD test for parallel -----------------------------------
1728:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "OSD" ) ) {
1729:VS4210/monitor.c **** 		if( !stricmp( argv[1], "logo" ) ) {
1730:VS4210/monitor.c **** //			DisplayLogo();
1731:VS4210/monitor.c **** 		}
1732:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "end" ) ) {
1733:VS4210/monitor.c **** 		  	Puts("\r\nIf you'd like to exit, press any Key....");
1734:VS4210/monitor.c **** 	 		while ( !RS_ready() ){
1735:VS4210/monitor.c **** 				P2 = ReadTW88( 0x95 );
1736:VS4210/monitor.c **** 			}
1737:VS4210/monitor.c **** 		}
1738:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "input" ) ) {
1739:VS4210/monitor.c **** //			DisplayInput();
1740:VS4210/monitor.c **** 		}
1741:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "off" ) ) {
1742:VS4210/monitor.c **** ////			ShowOSDWindowAll(OFF);
1743:VS4210/monitor.c **** 		}
1744:VS4210/monitor.c **** 		//else if( !stricmp( argv[1], "grid" ) ) {
1745:VS4210/monitor.c **** 		//	DisplayGrid();
1746:VS4210/monitor.c **** 		//}
1747:VS4210/monitor.c **** #if 0		
1748:VS4210/monitor.c **** #ifndef BANKING
1749:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "cone" ) ) {
1750:VS4210/monitor.c **** 			DisplayCone();
1751:VS4210/monitor.c **** 			DisplayJapanese();
1752:VS4210/monitor.c **** 		}
1753:VS4210/monitor.c **** #endif		
1754:VS4210/monitor.c **** #endif
1755:VS4210/monitor.c **** 		#ifdef BANKING
1756:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "agrid" ) ) {
1757:VS4210/monitor.c **** 		  	BYTE i, j, k;
1758:VS4210/monitor.c **** 		  	Puts("\r\nIf you'd like to exit, press any Key....");
1759:VS4210/monitor.c **** 			j = 0;
1760:VS4210/monitor.c **** 			k = 0;
1761:VS4210/monitor.c **** 			DisplayMessage();
1762:VS4210/monitor.c **** 			if ( argc == 3 )
1763:VS4210/monitor.c **** 				i = Asc2Bin(argv[2]);
1764:VS4210/monitor.c **** 			else i = 0;
1765:VS4210/monitor.c **** 	 		while ( !RS_ready() ){
1766:VS4210/monitor.c **** 				if ( j < 9 )
1767:VS4210/monitor.c **** 					DisplayGridBank0(j);
1768:VS4210/monitor.c **** 				else
1769:VS4210/monitor.c **** 					DisplayGridBank1(j);
1770:VS4210/monitor.c **** 				if ( i )
1771:VS4210/monitor.c **** 					delay(10*i);
1772:VS4210/monitor.c **** 				if (k==0) {
ARM GAS  /tmp/ccD8Q2iX.s 			page 59


1773:VS4210/monitor.c **** 					if (j==16) {
1774:VS4210/monitor.c **** 						k = 1;
1775:VS4210/monitor.c **** 						j--;
1776:VS4210/monitor.c **** 					}
1777:VS4210/monitor.c **** 					else j++;
1778:VS4210/monitor.c **** 				}
1779:VS4210/monitor.c **** 				else {
1780:VS4210/monitor.c **** 					if ( j==0 ) {
1781:VS4210/monitor.c **** 						k = 0;
1782:VS4210/monitor.c **** 						j++;
1783:VS4210/monitor.c **** 					}
1784:VS4210/monitor.c **** 					else j--;
1785:VS4210/monitor.c **** 				}
1786:VS4210/monitor.c **** 			}
1787:VS4210/monitor.c **** 		}
1788:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "cgrid" ) ) {
1789:VS4210/monitor.c **** 		  	BYTE i, j, k;
1790:VS4210/monitor.c **** 		  	Puts("\r\nIf you'd like to exit, press any Key....");
1791:VS4210/monitor.c **** 			j = 0;
1792:VS4210/monitor.c **** 			k = 0;
1793:VS4210/monitor.c **** 			DisplayChinese();
1794:VS4210/monitor.c **** 			if ( argc == 3 )
1795:VS4210/monitor.c **** 				i = Asc2Bin(argv[2]);
1796:VS4210/monitor.c **** 			else i = 0;
1797:VS4210/monitor.c **** 	 		while ( !RS_ready() ){
1798:VS4210/monitor.c **** 				if ( j < 9 )
1799:VS4210/monitor.c **** 					DisplayGridBank0(j);
1800:VS4210/monitor.c **** 				else
1801:VS4210/monitor.c **** 					DisplayGridBank1(j);
1802:VS4210/monitor.c **** 				if ( i )
1803:VS4210/monitor.c **** 					delay(10*i);
1804:VS4210/monitor.c **** 				if (k==0) {
1805:VS4210/monitor.c **** 					if (j==16) {
1806:VS4210/monitor.c **** 						k = 1;
1807:VS4210/monitor.c **** 						j--;
1808:VS4210/monitor.c **** 					}
1809:VS4210/monitor.c **** 					else j++;
1810:VS4210/monitor.c **** 				}
1811:VS4210/monitor.c **** 				else {
1812:VS4210/monitor.c **** 					if ( j==0 ) {
1813:VS4210/monitor.c **** 						k = 0;
1814:VS4210/monitor.c **** 						j++;
1815:VS4210/monitor.c **** 					}
1816:VS4210/monitor.c **** 					else j--;
1817:VS4210/monitor.c **** 				}
1818:VS4210/monitor.c **** 			}
1819:VS4210/monitor.c **** 		}
1820:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "jgrid" ) ) {
1821:VS4210/monitor.c **** 		  	BYTE i, j, k;
1822:VS4210/monitor.c **** 		  	Puts("\r\nIf you'd like to exit, press any Key....");
1823:VS4210/monitor.c **** 			j = 0;
1824:VS4210/monitor.c **** 			k = 0;
1825:VS4210/monitor.c **** 			DisplayJapanese();
1826:VS4210/monitor.c **** 			if ( argc == 3 )
1827:VS4210/monitor.c **** 				i = Asc2Bin(argv[2]);
1828:VS4210/monitor.c **** 			else i = 0;
1829:VS4210/monitor.c **** 	 		while ( !RS_ready() ){
ARM GAS  /tmp/ccD8Q2iX.s 			page 60


1830:VS4210/monitor.c **** 				if ( j < 9 )
1831:VS4210/monitor.c **** 					DisplayGridBank0(j);
1832:VS4210/monitor.c **** 				else
1833:VS4210/monitor.c **** 					DisplayGridBank1(j);
1834:VS4210/monitor.c **** 				if ( i )
1835:VS4210/monitor.c **** 					delay(10*i);
1836:VS4210/monitor.c **** 				if (k==0) {
1837:VS4210/monitor.c **** 					if (j==16) {
1838:VS4210/monitor.c **** 						k = 1;
1839:VS4210/monitor.c **** 						j--;
1840:VS4210/monitor.c **** 					}
1841:VS4210/monitor.c **** 					else j++;
1842:VS4210/monitor.c **** 				}
1843:VS4210/monitor.c **** 				else {
1844:VS4210/monitor.c **** 					if ( j==0 ) {
1845:VS4210/monitor.c **** 						k = 0;
1846:VS4210/monitor.c **** 						j++;
1847:VS4210/monitor.c **** 					}
1848:VS4210/monitor.c **** 					else j--;
1849:VS4210/monitor.c **** 				}
1850:VS4210/monitor.c **** 			}
1851:VS4210/monitor.c **** 		}
1852:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "kgrid" ) ) {
1853:VS4210/monitor.c **** 		  	BYTE i, j, k;
1854:VS4210/monitor.c **** 		  	Puts("\r\nIf you'd like to exit, press any Key....");
1855:VS4210/monitor.c **** 			j = 0;
1856:VS4210/monitor.c **** 			k = 0;
1857:VS4210/monitor.c **** 			DisplayKorean();
1858:VS4210/monitor.c **** 			if ( argc == 3 )
1859:VS4210/monitor.c **** 				i = Asc2Bin(argv[2]);
1860:VS4210/monitor.c **** 			else i = 0;
1861:VS4210/monitor.c **** 	 		while ( !RS_ready() ){
1862:VS4210/monitor.c **** 				if ( j < 9 )
1863:VS4210/monitor.c **** 					DisplayGridBank0(j);
1864:VS4210/monitor.c **** 				else
1865:VS4210/monitor.c **** 					DisplayGridBank1(j);
1866:VS4210/monitor.c **** 				if ( i )
1867:VS4210/monitor.c **** 					delay(10*i);
1868:VS4210/monitor.c **** 				if (k==0) {
1869:VS4210/monitor.c **** 					if (j==16) {
1870:VS4210/monitor.c **** 						k = 1;
1871:VS4210/monitor.c **** 						j--;
1872:VS4210/monitor.c **** 					}
1873:VS4210/monitor.c **** 					else j++;
1874:VS4210/monitor.c **** 				}
1875:VS4210/monitor.c **** 				else {
1876:VS4210/monitor.c **** 					if ( j==0 ) {
1877:VS4210/monitor.c **** 						k = 0;
1878:VS4210/monitor.c **** 						j++;
1879:VS4210/monitor.c **** 					}
1880:VS4210/monitor.c **** 					else j--;
1881:VS4210/monitor.c **** 				}
1882:VS4210/monitor.c **** 			}
1883:VS4210/monitor.c **** 		}
1884:VS4210/monitor.c **** 		#endif
1885:VS4210/monitor.c **** 	}
1886:VS4210/monitor.c **** 	//---------------- TELI ML070I Test function -----------------------------------
ARM GAS  /tmp/ccD8Q2iX.s 			page 61


1887:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PWM0" ) ) {
1888:VS4210/monitor.c **** 		SET_PWM(_BL_PWM, Asc2Bin(argv[1]));
1889:VS4210/monitor.c **** 		Puts("\r\nSET PWMP1.4");
1890:VS4210/monitor.c **** 	}
1891:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PWM1" ) ) {
1892:VS4210/monitor.c **** 		SET_PWM(_CHG_CURR, Asc2Bin(argv[1]));
1893:VS4210/monitor.c **** 		Puts("\r\nSET PWMP1.5");
1894:VS4210/monitor.c **** 	}
1895:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PWM" ) ) {
1896:VS4210/monitor.c **** 		if(Asc2Bin(argv[1]))
1897:VS4210/monitor.c **** 			{
1898:VS4210/monitor.c **** 			SET_PWM(_RUN_PWM, _RUN_PWM);
1899:VS4210/monitor.c **** 			Puts("\r\nPOEN PWM");
1900:VS4210/monitor.c **** 			}
1901:VS4210/monitor.c **** 		else
1902:VS4210/monitor.c **** 			{
1903:VS4210/monitor.c **** 			SET_PWM(_STOP_PWM, _STOP_PWM);
1904:VS4210/monitor.c **** 			Puts("\r\nSTOP PWM");
1905:VS4210/monitor.c **** 			}
1906:VS4210/monitor.c **** 	}
1907:VS4210/monitor.c **** 	//---------------- serial tx test with some number -----------------------------------
1908:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "TX" ) ) {
1909:VS4210/monitor.c **** 		MonTxDump();
1910:VS4210/monitor.c **** 	}
1911:VS4210/monitor.c **** 	//---------------- OSD FONTtest for parallel -----------------------------------
1912:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "FONT" ) ) {
1913:VS4210/monitor.c **** 		if ( !stricmp( argv[1], "RAM" ) ) {
1914:VS4210/monitor.c **** //			DisplayRAMFont( Asc2Bin(argv[2]) );
1915:VS4210/monitor.c **** 		}
1916:VS4210/monitor.c **** 		else if ( !stricmp( argv[1], "ROM" ) ) {
1917:VS4210/monitor.c **** 		//	DisplayROMFont(Asc2Bin(argv[2]));
1918:VS4210/monitor.c **** 		}
1919:VS4210/monitor.c **** 		else {
1920:VS4210/monitor.c **** 			Puts("\r\n Font ROM # or Font RAM # for testing");
1921:VS4210/monitor.c **** 		}
1922:VS4210/monitor.c **** 	}
1923:VS4210/monitor.c **** 	*/
1924:VS4210/monitor.c **** 	//---------------- Delta RGB Panel Test -------------------------
1925:VS4210/monitor.c **** 	#if 0//def SUPPORT_DELTA_RGB
1926:VS4210/monitor.c **** 
1927:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "delta" ) ) {
1928:VS4210/monitor.c **** 		if( argc==1 )	DeltaRGBPanelInit();
1929:VS4210/monitor.c **** 		else {
1930:VS4210/monitor.c **** 			
1931:VS4210/monitor.c **** 			if( !stricmp( argv[1], "w" ) ) {
1932:VS4210/monitor.c **** 
1933:VS4210/monitor.c **** 				WORD val;
1934:VS4210/monitor.c **** 				val= Asc2Bin(argv[3])<<8 | Asc2Bin(argv[4]);
1935:VS4210/monitor.c **** 				Printf("\r\n SPI Write: Addr:%2x  Data:%4x", (WORD)Asc2Bin(argv[2]), val);
1936:VS4210/monitor.c **** 				WriteSPI(Asc2Bin(argv[2]), val );
1937:VS4210/monitor.c **** 			}
1938:VS4210/monitor.c **** 			else if( !stricmp( argv[1], "r" ) ) {
1939:VS4210/monitor.c **** 				WORD val;
1940:VS4210/monitor.c **** 				val = ReadSPI(Asc2Bin(argv[2]));
1941:VS4210/monitor.c **** 				Printf("\r\n SPI Read: Addr:%2x  Data:%4x", (WORD)Asc2Bin(argv[2]), val);
1942:VS4210/monitor.c **** 			}
1943:VS4210/monitor.c **** 		}
ARM GAS  /tmp/ccD8Q2iX.s 			page 62


1944:VS4210/monitor.c **** 	}
1945:VS4210/monitor.c **** 	#endif
1946:VS4210/monitor.c **** 	//----------------------------------------------------
1947:VS4210/monitor.c **** 	else {
1948:VS4210/monitor.c **** 		Printf("\r\nInvalid command...");
1949:VS4210/monitor.c **** 	}
1950:VS4210/monitor.c **** 
1951:VS4210/monitor.c **** 
1952:VS4210/monitor.c **** 	Prompt();
1953:VS4210/monitor.c **** 
1954:VS4210/monitor.c **** 
1955:VS4210/monitor.c **** }
1956:VS4210/monitor.c **** #endif
1957:VS4210/monitor.c **** 
1958:VS4210/monitor.c **** 
1959:VS4210/monitor.c **** 
1960:VS4210/monitor.c **** void SET_AHD_SYNC_PARA(void)
1961:VS4210/monitor.c **** {
 1564              		.loc 1 1961 0
 1565              		.cfi_startproc
 1566              		@ args = 0, pretend = 0, frame = 0
 1567              		@ frame_needed = 0, uses_anonymous_args = 0
 1568 0000 08B5     		push	{r3, lr}
 1569              	.LCFI15:
 1570              		.cfi_def_cfa_offset 8
 1571              		.cfi_offset 3, -8
 1572              		.cfi_offset 14, -4
1962:VS4210/monitor.c **** 	Printf("\r\nLoading AHD Embedded Sync para.... ");
 1573              		.loc 1 1962 0
 1574 0002 5448     		ldr	r0, .L124
 1575 0004 FFF7FEFF 		bl	Printf
 1576              	.LVL130:
1963:VS4210/monitor.c **** 	//DUMP VS4210 Reg..
1964:VS4210/monitor.c **** #if 1
1965:VS4210/monitor.c **** 	VXISI2CWrite(0x08,0x40);
 1577              		.loc 1 1965 0
 1578 0008 0820     		movs	r0, #8
 1579 000a 4021     		movs	r1, #64
 1580 000c FFF7FEFF 		bl	VXISI2CWrite
 1581              	.LVL131:
1966:VS4210/monitor.c **** 	
1967:VS4210/monitor.c **** 	VXISI2CWrite(0x0A,0x40);
 1582              		.loc 1 1967 0
 1583 0010 0A20     		movs	r0, #10
 1584 0012 4021     		movs	r1, #64
 1585 0014 FFF7FEFF 		bl	VXISI2CWrite
 1586              	.LVL132:
1968:VS4210/monitor.c **** 	
1969:VS4210/monitor.c **** //	VXISI2CWrite(0x10,0x80);
1970:VS4210/monitor.c **** 	
1971:VS4210/monitor.c **** 	VXISI2CWrite(0x12,0x74);
 1587              		.loc 1 1971 0
 1588 0018 1220     		movs	r0, #18
 1589 001a 7421     		movs	r1, #116
 1590 001c FFF7FEFF 		bl	VXISI2CWrite
 1591              	.LVL133:
1972:VS4210/monitor.c **** 	VXISI2CWrite(0x13,0x80);
ARM GAS  /tmp/ccD8Q2iX.s 			page 63


 1592              		.loc 1 1972 0
 1593 0020 1320     		movs	r0, #19
 1594 0022 8021     		movs	r1, #128
 1595 0024 FFF7FEFF 		bl	VXISI2CWrite
 1596              	.LVL134:
1973:VS4210/monitor.c **** 	VXISI2CWrite(0x14,0x38);
 1597              		.loc 1 1973 0
 1598 0028 1420     		movs	r0, #20
 1599 002a 3821     		movs	r1, #56
 1600 002c FFF7FEFF 		bl	VXISI2CWrite
 1601              	.LVL135:
1974:VS4210/monitor.c **** 	
1975:VS4210/monitor.c **** 	VXISI2CWrite(0x19,0x00);
 1602              		.loc 1 1975 0
 1603 0030 1920     		movs	r0, #25
 1604 0032 0021     		movs	r1, #0
 1605 0034 FFF7FEFF 		bl	VXISI2CWrite
 1606              	.LVL136:
1976:VS4210/monitor.c **** 	VXISI2CWrite(0x1A,0x20);
 1607              		.loc 1 1976 0
 1608 0038 1A20     		movs	r0, #26
 1609 003a 2021     		movs	r1, #32
 1610 003c FFF7FEFF 		bl	VXISI2CWrite
 1611              	.LVL137:
1977:VS4210/monitor.c **** 	VXISI2CWrite(0x1B,0x30);
 1612              		.loc 1 1977 0
 1613 0040 1B20     		movs	r0, #27
 1614 0042 3021     		movs	r1, #48
 1615 0044 FFF7FEFF 		bl	VXISI2CWrite
 1616              	.LVL138:
1978:VS4210/monitor.c **** 	
1979:VS4210/monitor.c **** 	VXISI2CWrite(0x1F,0xA4);
 1617              		.loc 1 1979 0
 1618 0048 1F20     		movs	r0, #31
 1619 004a A421     		movs	r1, #164
 1620 004c FFF7FEFF 		bl	VXISI2CWrite
 1621              	.LVL139:
1980:VS4210/monitor.c **** 	VXISI2CWrite(0x20,0x50);
 1622              		.loc 1 1980 0
 1623 0050 2020     		movs	r0, #32
 1624 0052 5021     		movs	r1, #80
 1625 0054 FFF7FEFF 		bl	VXISI2CWrite
 1626              	.LVL140:
1981:VS4210/monitor.c **** 	VXISI2CWrite(0x21,0xE2);
 1627              		.loc 1 1981 0
 1628 0058 2120     		movs	r0, #33
 1629 005a E221     		movs	r1, #226
 1630 005c FFF7FEFF 		bl	VXISI2CWrite
 1631              	.LVL141:
1982:VS4210/monitor.c **** 	VXISI2CWrite(0x22,0x87);
 1632              		.loc 1 1982 0
 1633 0060 2220     		movs	r0, #34
 1634 0062 8721     		movs	r1, #135
 1635 0064 FFF7FEFF 		bl	VXISI2CWrite
 1636              	.LVL142:
1983:VS4210/monitor.c **** 	VXISI2CWrite(0x23,0x98);
 1637              		.loc 1 1983 0
ARM GAS  /tmp/ccD8Q2iX.s 			page 64


 1638 0068 2320     		movs	r0, #35
 1639 006a 9821     		movs	r1, #152
 1640 006c FFF7FEFF 		bl	VXISI2CWrite
 1641              	.LVL143:
1984:VS4210/monitor.c **** 	VXISI2CWrite(0x24,0x80);
 1642              		.loc 1 1984 0
 1643 0070 2420     		movs	r0, #36
 1644 0072 8021     		movs	r1, #128
 1645 0074 FFF7FEFF 		bl	VXISI2CWrite
 1646              	.LVL144:
1985:VS4210/monitor.c **** 	VXISI2CWrite(0x25,0x44);
 1647              		.loc 1 1985 0
 1648 0078 2520     		movs	r0, #37
 1649 007a 4421     		movs	r1, #68
 1650 007c FFF7FEFF 		bl	VXISI2CWrite
 1651              	.LVL145:
1986:VS4210/monitor.c **** 	
1987:VS4210/monitor.c **** 	VXISI2CWrite(0x27,0x38);
 1652              		.loc 1 1987 0
 1653 0080 2720     		movs	r0, #39
 1654 0082 3821     		movs	r1, #56
 1655 0084 FFF7FEFF 		bl	VXISI2CWrite
 1656              	.LVL146:
1988:VS4210/monitor.c **** 	
1989:VS4210/monitor.c **** 	VXISI2CWrite(0x2E,0x47);
 1657              		.loc 1 1989 0
 1658 0088 2E20     		movs	r0, #46
 1659 008a 4721     		movs	r1, #71
 1660 008c FFF7FEFF 		bl	VXISI2CWrite
 1661              	.LVL147:
1990:VS4210/monitor.c **** 	VXISI2CWrite(0x2F,0x80);
 1662              		.loc 1 1990 0
 1663 0090 2F20     		movs	r0, #47
 1664 0092 8021     		movs	r1, #128
 1665 0094 FFF7FEFF 		bl	VXISI2CWrite
 1666              	.LVL148:
1991:VS4210/monitor.c **** 	
1992:VS4210/monitor.c **** 	VXISI2CWrite(0x3A,0x1D);
 1667              		.loc 1 1992 0
 1668 0098 3A20     		movs	r0, #58
 1669 009a 1D21     		movs	r1, #29
 1670 009c FFF7FEFF 		bl	VXISI2CWrite
 1671              	.LVL149:
1993:VS4210/monitor.c **** 	
1994:VS4210/monitor.c **** 	VXISI2CWrite(0x45,0x00);
 1672              		.loc 1 1994 0
 1673 00a0 4520     		movs	r0, #69
 1674 00a2 0021     		movs	r1, #0
 1675 00a4 FFF7FEFF 		bl	VXISI2CWrite
 1676              	.LVL150:
1995:VS4210/monitor.c **** 	
1996:VS4210/monitor.c **** 	VXISI2CWrite(0x58,0x00);
 1677              		.loc 1 1996 0
 1678 00a8 5820     		movs	r0, #88
 1679 00aa 0021     		movs	r1, #0
 1680 00ac FFF7FEFF 		bl	VXISI2CWrite
 1681              	.LVL151:
ARM GAS  /tmp/ccD8Q2iX.s 			page 65


1997:VS4210/monitor.c **** 	
1998:VS4210/monitor.c **** 	VXISI2CWrite(0x69,0x88);
 1682              		.loc 1 1998 0
 1683 00b0 6920     		movs	r0, #105
 1684 00b2 8821     		movs	r1, #136
 1685 00b4 FFF7FEFF 		bl	VXISI2CWrite
 1686              	.LVL152:
1999:VS4210/monitor.c **** 	
2000:VS4210/monitor.c **** 	VXISI2CWrite(0x74,0x06);
 1687              		.loc 1 2000 0
 1688 00b8 7420     		movs	r0, #116
 1689 00ba 0621     		movs	r1, #6
 1690 00bc FFF7FEFF 		bl	VXISI2CWrite
 1691              	.LVL153:
2001:VS4210/monitor.c **** 
2002:VS4210/monitor.c **** 	VXISI2CWrite(0x80,0x01);
 1692              		.loc 1 2002 0
 1693 00c0 8020     		movs	r0, #128
 1694 00c2 0121     		movs	r1, #1
 1695 00c4 FFF7FEFF 		bl	VXISI2CWrite
 1696              	.LVL154:
2003:VS4210/monitor.c **** 	VXISI2CWrite(0x81,0x15);
 1697              		.loc 1 2003 0
 1698 00c8 8120     		movs	r0, #129
 1699 00ca 1521     		movs	r1, #21
 1700 00cc FFF7FEFF 		bl	VXISI2CWrite
 1701              	.LVL155:
2004:VS4210/monitor.c **** 	
2005:VS4210/monitor.c **** 	VXISI2CWrite(0x83,0x2D);
 1702              		.loc 1 2005 0
 1703 00d0 8320     		movs	r0, #131
 1704 00d2 2D21     		movs	r1, #45
 1705 00d4 FFF7FEFF 		bl	VXISI2CWrite
 1706              	.LVL156:
2006:VS4210/monitor.c **** 	
2007:VS4210/monitor.c **** 	VXISI2CWrite(0x86,0x00);
 1707              		.loc 1 2007 0
 1708 00d8 8620     		movs	r0, #134
 1709 00da 0021     		movs	r1, #0
 1710 00dc FFF7FEFF 		bl	VXISI2CWrite
 1711              	.LVL157:
2008:VS4210/monitor.c **** 	VXISI2CWrite(0x87,0x00);
 1712              		.loc 1 2008 0
 1713 00e0 8720     		movs	r0, #135
 1714 00e2 0021     		movs	r1, #0
 1715 00e4 FFF7FEFF 		bl	VXISI2CWrite
 1716              	.LVL158:
2009:VS4210/monitor.c **** 	VXISI2CWrite(0x88,0x00);
 1717              		.loc 1 2009 0
 1718 00e8 8820     		movs	r0, #136
 1719 00ea 0021     		movs	r1, #0
 1720 00ec FFF7FEFF 		bl	VXISI2CWrite
 1721              	.LVL159:
2010:VS4210/monitor.c **** 	VXISI2CWrite(0x89,0x00);
 1722              		.loc 1 2010 0
 1723 00f0 8920     		movs	r0, #137
 1724 00f2 0021     		movs	r1, #0
ARM GAS  /tmp/ccD8Q2iX.s 			page 66


 1725 00f4 FFF7FEFF 		bl	VXISI2CWrite
 1726              	.LVL160:
2011:VS4210/monitor.c **** 	
2012:VS4210/monitor.c **** 	VXISI2CWrite(0x8D,0x17);
 1727              		.loc 1 2012 0
 1728 00f8 8D20     		movs	r0, #141
 1729 00fa 1721     		movs	r1, #23
 1730 00fc FFF7FEFF 		bl	VXISI2CWrite
 1731              	.LVL161:
2013:VS4210/monitor.c **** 	
2014:VS4210/monitor.c **** 	VXISI2CWrite(0x9A,0x80);
 1732              		.loc 1 2014 0
 1733 0100 9A20     		movs	r0, #154
 1734 0102 8021     		movs	r1, #128
 1735 0104 FFF7FEFF 		bl	VXISI2CWrite
 1736              	.LVL162:
2015:VS4210/monitor.c **** 	
2016:VS4210/monitor.c **** 	
2017:VS4210/monitor.c **** 	VXISI2CWrite(0xB8,0x80);
 1737              		.loc 1 2017 0
 1738 0108 B820     		movs	r0, #184
 1739 010a 8021     		movs	r1, #128
 1740 010c FFF7FEFF 		bl	VXISI2CWrite
 1741              	.LVL163:
2018:VS4210/monitor.c **** 
2019:VS4210/monitor.c **** 	VXISI2CWrite(0xBA,0x01);
 1742              		.loc 1 2019 0
 1743 0110 BA20     		movs	r0, #186
 1744 0112 0121     		movs	r1, #1
 1745 0114 FFF7FEFF 		bl	VXISI2CWrite
 1746              	.LVL164:
2020:VS4210/monitor.c **** 	
2021:VS4210/monitor.c **** 	VXISI2CWrite(0xBE,0x2C);
 1747              		.loc 1 2021 0
 1748 0118 BE20     		movs	r0, #190
 1749 011a 2C21     		movs	r1, #44
 1750 011c FFF7FEFF 		bl	VXISI2CWrite
 1751              	.LVL165:
2022:VS4210/monitor.c **** 	
2023:VS4210/monitor.c **** 	VXISI2CWrite(0xD7,0x0F);
 1752              		.loc 1 2023 0
 1753 0120 D720     		movs	r0, #215
 1754 0122 0F21     		movs	r1, #15
 1755 0124 FFF7FEFF 		bl	VXISI2CWrite
 1756              	.LVL166:
2024:VS4210/monitor.c **** 	
2025:VS4210/monitor.c **** 	VXISI2CWrite(0xDE,0xB0);
 1757              		.loc 1 2025 0
 1758 0128 DE20     		movs	r0, #222
 1759 012a B021     		movs	r1, #176
 1760 012c FFF7FEFF 		bl	VXISI2CWrite
 1761              	.LVL167:
2026:VS4210/monitor.c **** 	
2027:VS4210/monitor.c **** 	VXISI2CWrite(0xF0,0x30);
 1762              		.loc 1 2027 0
 1763 0130 F020     		movs	r0, #240
 1764 0132 3021     		movs	r1, #48
ARM GAS  /tmp/ccD8Q2iX.s 			page 67


 1765 0134 FFF7FEFF 		bl	VXISI2CWrite
 1766              	.LVL168:
2028:VS4210/monitor.c **** 	
2029:VS4210/monitor.c **** 	VXISI2CWrite(0xFD,0x70);
 1767              		.loc 1 2029 0
 1768 0138 FD20     		movs	r0, #253
 1769 013a 7021     		movs	r1, #112
 1770 013c FFF7FEFF 		bl	VXISI2CWrite
 1771              	.LVL169:
2030:VS4210/monitor.c **** 	VXISI2CWrite(0xFE,0x18);
 1772              		.loc 1 2030 0
 1773 0140 FE20     		movs	r0, #254
 1774 0142 1821     		movs	r1, #24
 1775 0144 FFF7FEFF 		bl	VXISI2CWrite
 1776              	.LVL170:
2031:VS4210/monitor.c **** 	VXISI2CWrite(0xFF,0x07);
 1777              		.loc 1 2031 0
 1778 0148 FF20     		movs	r0, #255
 1779 014a 0721     		movs	r1, #7
 1780 014c FFF7FEFF 		bl	VXISI2CWrite
 1781              	.LVL171:
 1782 0150 08BD     		pop	{r3, pc}
 1783              	.L125:
 1784 0152 00BF     		.align	2
 1785              	.L124:
 1786 0154 D0020000 		.word	.LC19
 1787              		.cfi_endproc
 1788              	.LFE90:
 1790              		.section	.text.SET_HDMI_640_480P_PARA,"ax",%progbits
 1791              		.align	2
 1792              		.global	SET_HDMI_640_480P_PARA
 1793              		.thumb
 1794              		.thumb_func
 1796              	SET_HDMI_640_480P_PARA:
 1797              	.LFB91:
2032:VS4210/monitor.c **** #else
2033:VS4210/monitor.c **** 	VXISI2CWrite(0x08,0x40);
2034:VS4210/monitor.c **** 	
2035:VS4210/monitor.c **** 	VXISI2CWrite(0x0A,0x40);
2036:VS4210/monitor.c **** 	
2037:VS4210/monitor.c **** //	VXISI2CWrite(0x10,0x80);
2038:VS4210/monitor.c **** 	
2039:VS4210/monitor.c **** 	VXISI2CWrite(0x12,0x74);
2040:VS4210/monitor.c **** 	VXISI2CWrite(0x13,0x80);
2041:VS4210/monitor.c **** 	VXISI2CWrite(0x14,0x38);
2042:VS4210/monitor.c **** 	
2043:VS4210/monitor.c **** 	VXISI2CWrite(0x19,0x00);
2044:VS4210/monitor.c **** 	VXISI2CWrite(0x1A,0x20);
2045:VS4210/monitor.c **** 	VXISI2CWrite(0x1B,0x30);
2046:VS4210/monitor.c **** 	
2047:VS4210/monitor.c **** 	VXISI2CWrite(0x1F,0xA4);
2048:VS4210/monitor.c **** 	VXISI2CWrite(0x20,0x50);
2049:VS4210/monitor.c **** 	VXISI2CWrite(0x21,0xE2);
2050:VS4210/monitor.c **** 	VXISI2CWrite(0x22,0x87);
2051:VS4210/monitor.c **** 	VXISI2CWrite(0x23,0x98);
2052:VS4210/monitor.c **** 	VXISI2CWrite(0x24,0x80);
2053:VS4210/monitor.c **** 	VXISI2CWrite(0x25,0x44);
ARM GAS  /tmp/ccD8Q2iX.s 			page 68


2054:VS4210/monitor.c **** 	
2055:VS4210/monitor.c **** 	VXISI2CWrite(0x27,0x38);
2056:VS4210/monitor.c **** 	
2057:VS4210/monitor.c **** //	VXISI2CWrite(0x2E,0x47);
2058:VS4210/monitor.c **** //	VXISI2CWrite(0x2F,0x80);
2059:VS4210/monitor.c **** 	
2060:VS4210/monitor.c **** //	VXISI2CWrite(0x3A,0x1D);
2061:VS4210/monitor.c **** 	
2062:VS4210/monitor.c **** //	VXISI2CWrite(0x45,0x00);
2063:VS4210/monitor.c **** 	
2064:VS4210/monitor.c **** //	VXISI2CWrite(0x58,0x00);
2065:VS4210/monitor.c **** 	
2066:VS4210/monitor.c **** //	VXISI2CWrite(0x69,0x88);
2067:VS4210/monitor.c **** 	
2068:VS4210/monitor.c **** 	VXISI2CWrite(0x74,0x06);
2069:VS4210/monitor.c **** 
2070:VS4210/monitor.c **** 	VXISI2CWrite(0x80,0x01);
2071:VS4210/monitor.c **** 	VXISI2CWrite(0x81,0x15);
2072:VS4210/monitor.c **** 	
2073:VS4210/monitor.c **** 	VXISI2CWrite(0x83,0x2D);
2074:VS4210/monitor.c **** 	
2075:VS4210/monitor.c **** //	VXISI2CWrite(0x86,0x00);
2076:VS4210/monitor.c **** //	VXISI2CWrite(0x87,0x00);
2077:VS4210/monitor.c **** //	VXISI2CWrite(0x88,0x00);
2078:VS4210/monitor.c **** //	VXISI2CWrite(0x89,0x00);
2079:VS4210/monitor.c **** 	
2080:VS4210/monitor.c **** 	VXISI2CWrite(0x8D,0x17);
2081:VS4210/monitor.c **** 	
2082:VS4210/monitor.c **** //	VXISI2CWrite(0x9A,0x80);
2083:VS4210/monitor.c **** 	
2084:VS4210/monitor.c **** 	
2085:VS4210/monitor.c **** //	VXISI2CWrite(0xB8,0x80);
2086:VS4210/monitor.c **** 	/*
2087:VS4210/monitor.c **** 	VXISI2CWrite(0xBA,0x01);
2088:VS4210/monitor.c **** 	
2089:VS4210/monitor.c **** 	VXISI2CWrite(0xBE,0x2C);
2090:VS4210/monitor.c **** 	
2091:VS4210/monitor.c **** 	VXISI2CWrite(0xD7,0x0F);
2092:VS4210/monitor.c **** 	
2093:VS4210/monitor.c **** 	VXISI2CWrite(0xDE,0xB0);
2094:VS4210/monitor.c **** 	
2095:VS4210/monitor.c **** 	VXISI2CWrite(0xF0,0x30);
2096:VS4210/monitor.c **** 	
2097:VS4210/monitor.c **** 	VXISI2CWrite(0xFD,0x70);
2098:VS4210/monitor.c **** 	VXISI2CWrite(0xFE,0x18);
2099:VS4210/monitor.c **** 	VXISI2CWrite(0xFF,0x07);
2100:VS4210/monitor.c **** */
2101:VS4210/monitor.c **** 
2102:VS4210/monitor.c **** #endif
2103:VS4210/monitor.c **** }
2104:VS4210/monitor.c **** 
2105:VS4210/monitor.c **** void SET_HDMI_640_480P_PARA(void)
2106:VS4210/monitor.c **** {
 1798              		.loc 1 2106 0
 1799              		.cfi_startproc
 1800              		@ args = 0, pretend = 0, frame = 0
 1801              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccD8Q2iX.s 			page 69


 1802 0000 08B5     		push	{r3, lr}
 1803              	.LCFI16:
 1804              		.cfi_def_cfa_offset 8
 1805              		.cfi_offset 3, -8
 1806              		.cfi_offset 14, -4
2107:VS4210/monitor.c **** 	Printf("\r\nLoading HDMI 640X480P Embedded Sync para.... ");
 1807              		.loc 1 2107 0
 1808 0002 FE48     		ldr	r0, .L128
 1809 0004 FFF7FEFF 		bl	Printf
 1810              	.LVL172:
2108:VS4210/monitor.c **** 	VXISI2CWrite(0x01,0x00);
 1811              		.loc 1 2108 0
 1812 0008 0120     		movs	r0, #1
 1813 000a 0021     		movs	r1, #0
 1814 000c FFF7FEFF 		bl	VXISI2CWrite
 1815              	.LVL173:
2109:VS4210/monitor.c **** 	VXISI2CWrite(0x02,0x00);
 1816              		.loc 1 2109 0
 1817 0010 0220     		movs	r0, #2
 1818 0012 0021     		movs	r1, #0
 1819 0014 FFF7FEFF 		bl	VXISI2CWrite
 1820              	.LVL174:
2110:VS4210/monitor.c **** 	VXISI2CWrite(0x03,0x75);
 1821              		.loc 1 2110 0
 1822 0018 0320     		movs	r0, #3
 1823 001a 7521     		movs	r1, #117
 1824 001c FFF7FEFF 		bl	VXISI2CWrite
 1825              	.LVL175:
2111:VS4210/monitor.c **** 	VXISI2CWrite(0x04,0x18);
 1826              		.loc 1 2111 0
 1827 0020 0420     		movs	r0, #4
 1828 0022 1821     		movs	r1, #24
 1829 0024 FFF7FEFF 		bl	VXISI2CWrite
 1830              	.LVL176:
2112:VS4210/monitor.c **** 	VXISI2CWrite(0x05,0x80);
 1831              		.loc 1 2112 0
 1832 0028 0520     		movs	r0, #5
 1833 002a 8021     		movs	r1, #128
 1834 002c FFF7FEFF 		bl	VXISI2CWrite
 1835              	.LVL177:
2113:VS4210/monitor.c **** 	VXISI2CWrite(0x06,0x20);
 1836              		.loc 1 2113 0
 1837 0030 0620     		movs	r0, #6
 1838 0032 2021     		movs	r1, #32
 1839 0034 FFF7FEFF 		bl	VXISI2CWrite
 1840              	.LVL178:
2114:VS4210/monitor.c **** 	VXISI2CWrite(0x07,0x08);
 1841              		.loc 1 2114 0
 1842 0038 0720     		movs	r0, #7
 1843 003a 0821     		movs	r1, #8
 1844 003c FFF7FEFF 		bl	VXISI2CWrite
 1845              	.LVL179:
2115:VS4210/monitor.c **** 	VXISI2CWrite(0x08,0x40);
 1846              		.loc 1 2115 0
 1847 0040 0820     		movs	r0, #8
 1848 0042 4021     		movs	r1, #64
 1849 0044 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccD8Q2iX.s 			page 70


 1850              	.LVL180:
2116:VS4210/monitor.c **** 	VXISI2CWrite(0x09,0x0A);
 1851              		.loc 1 2116 0
 1852 0048 0920     		movs	r0, #9
 1853 004a 0A21     		movs	r1, #10
 1854 004c FFF7FEFF 		bl	VXISI2CWrite
 1855              	.LVL181:
2117:VS4210/monitor.c **** 	VXISI2CWrite(0x0A,0x40);
 1856              		.loc 1 2117 0
 1857 0050 0A20     		movs	r0, #10
 1858 0052 4021     		movs	r1, #64
 1859 0054 FFF7FEFF 		bl	VXISI2CWrite
 1860              	.LVL182:
2118:VS4210/monitor.c **** 	VXISI2CWrite(0x0B,0x03);
 1861              		.loc 1 2118 0
 1862 0058 0B20     		movs	r0, #11
 1863 005a 0321     		movs	r1, #3
 1864 005c FFF7FEFF 		bl	VXISI2CWrite
 1865              	.LVL183:
2119:VS4210/monitor.c **** 	VXISI2CWrite(0x0C,0x00);
 1866              		.loc 1 2119 0
 1867 0060 0C20     		movs	r0, #12
 1868 0062 0021     		movs	r1, #0
 1869 0064 FFF7FEFF 		bl	VXISI2CWrite
 1870              	.LVL184:
2120:VS4210/monitor.c **** 	VXISI2CWrite(0x0D,0x20);
 1871              		.loc 1 2120 0
 1872 0068 0D20     		movs	r0, #13
 1873 006a 2021     		movs	r1, #32
 1874 006c FFF7FEFF 		bl	VXISI2CWrite
 1875              	.LVL185:
2121:VS4210/monitor.c **** 	VXISI2CWrite(0x0E,0x10);
 1876              		.loc 1 2121 0
 1877 0070 0E20     		movs	r0, #14
 1878 0072 1021     		movs	r1, #16
 1879 0074 FFF7FEFF 		bl	VXISI2CWrite
 1880              	.LVL186:
2122:VS4210/monitor.c **** 	VXISI2CWrite(0x0F,0x00);
 1881              		.loc 1 2122 0
 1882 0078 0F20     		movs	r0, #15
 1883 007a 0021     		movs	r1, #0
 1884 007c FFF7FEFF 		bl	VXISI2CWrite
 1885              	.LVL187:
2123:VS4210/monitor.c **** 	VXISI2CWrite(0x10,0x80);
 1886              		.loc 1 2123 0
 1887 0080 1020     		movs	r0, #16
 1888 0082 8021     		movs	r1, #128
 1889 0084 FFF7FEFF 		bl	VXISI2CWrite
 1890              	.LVL188:
2124:VS4210/monitor.c **** 	VXISI2CWrite(0x11,0x82);
 1891              		.loc 1 2124 0
 1892 0088 1120     		movs	r0, #17
 1893 008a 8221     		movs	r1, #130
 1894 008c FFF7FEFF 		bl	VXISI2CWrite
 1895              	.LVL189:
2125:VS4210/monitor.c **** 	VXISI2CWrite(0x12,0x42);
 1896              		.loc 1 2125 0
ARM GAS  /tmp/ccD8Q2iX.s 			page 71


 1897 0090 1220     		movs	r0, #18
 1898 0092 4221     		movs	r1, #66
 1899 0094 FFF7FEFF 		bl	VXISI2CWrite
 1900              	.LVL190:
2126:VS4210/monitor.c **** 	VXISI2CWrite(0x13,0x81);
 1901              		.loc 1 2126 0
 1902 0098 1320     		movs	r0, #19
 1903 009a 8121     		movs	r1, #129
 1904 009c FFF7FEFF 		bl	VXISI2CWrite
 1905              	.LVL191:
2127:VS4210/monitor.c **** 	VXISI2CWrite(0x14,0xC6);
 1906              		.loc 1 2127 0
 1907 00a0 1420     		movs	r0, #20
 1908 00a2 C621     		movs	r1, #198
 1909 00a4 FFF7FEFF 		bl	VXISI2CWrite
 1910              	.LVL192:
2128:VS4210/monitor.c **** 	VXISI2CWrite(0x15,0x77);
 1911              		.loc 1 2128 0
 1912 00a8 1520     		movs	r0, #21
 1913 00aa 7721     		movs	r1, #119
 1914 00ac FFF7FEFF 		bl	VXISI2CWrite
 1915              	.LVL193:
2129:VS4210/monitor.c **** 	VXISI2CWrite(0x16,0xFE);
 1916              		.loc 1 2129 0
 1917 00b0 1620     		movs	r0, #22
 1918 00b2 FE21     		movs	r1, #254
 1919 00b4 FFF7FEFF 		bl	VXISI2CWrite
 1920              	.LVL194:
2130:VS4210/monitor.c **** 	VXISI2CWrite(0x17,0xFA);
 1921              		.loc 1 2130 0
 1922 00b8 1720     		movs	r0, #23
 1923 00ba FA21     		movs	r1, #250
 1924 00bc FFF7FEFF 		bl	VXISI2CWrite
 1925              	.LVL195:
2131:VS4210/monitor.c **** 	VXISI2CWrite(0x18,0xC0);
 1926              		.loc 1 2131 0
 1927 00c0 1820     		movs	r0, #24
 1928 00c2 C021     		movs	r1, #192
 1929 00c4 FFF7FEFF 		bl	VXISI2CWrite
 1930              	.LVL196:
2132:VS4210/monitor.c **** 	VXISI2CWrite(0x19,0x00);
 1931              		.loc 1 2132 0
 1932 00c8 1920     		movs	r0, #25
 1933 00ca 0021     		movs	r1, #0
 1934 00cc FFF7FEFF 		bl	VXISI2CWrite
 1935              	.LVL197:
2133:VS4210/monitor.c **** 	VXISI2CWrite(0x1A,0x20);
 1936              		.loc 1 2133 0
 1937 00d0 1A20     		movs	r0, #26
 1938 00d2 2021     		movs	r1, #32
 1939 00d4 FFF7FEFF 		bl	VXISI2CWrite
 1940              	.LVL198:
2134:VS4210/monitor.c **** 	VXISI2CWrite(0x1B,0x30);
 1941              		.loc 1 2134 0
 1942 00d8 1B20     		movs	r0, #27
 1943 00da 3021     		movs	r1, #48
 1944 00dc FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccD8Q2iX.s 			page 72


 1945              	.LVL199:
2135:VS4210/monitor.c **** 	VXISI2CWrite(0x1C,0x00);
 1946              		.loc 1 2135 0
 1947 00e0 1C20     		movs	r0, #28
 1948 00e2 0021     		movs	r1, #0
 1949 00e4 FFF7FEFF 		bl	VXISI2CWrite
 1950              	.LVL200:
2136:VS4210/monitor.c **** 	VXISI2CWrite(0x1D,0x00);
 1951              		.loc 1 2136 0
 1952 00e8 1D20     		movs	r0, #29
 1953 00ea 0021     		movs	r1, #0
 1954 00ec FFF7FEFF 		bl	VXISI2CWrite
 1955              	.LVL201:
2137:VS4210/monitor.c **** 	VXISI2CWrite(0x1E,0x20);
 1956              		.loc 1 2137 0
 1957 00f0 1E20     		movs	r0, #30
 1958 00f2 2021     		movs	r1, #32
 1959 00f4 FFF7FEFF 		bl	VXISI2CWrite
 1960              	.LVL202:
2138:VS4210/monitor.c **** 	VXISI2CWrite(0x1F,0x52);
 1961              		.loc 1 2138 0
 1962 00f8 1F20     		movs	r0, #31
 1963 00fa 5221     		movs	r1, #82
 1964 00fc FFF7FEFF 		bl	VXISI2CWrite
 1965              	.LVL203:
2139:VS4210/monitor.c **** 	VXISI2CWrite(0x20,0xA0);
 1966              		.loc 1 2139 0
 1967 0100 2020     		movs	r0, #32
 1968 0102 A021     		movs	r1, #160
 1969 0104 FFF7FEFF 		bl	VXISI2CWrite
 1970              	.LVL204:
2140:VS4210/monitor.c **** 	VXISI2CWrite(0x21,0xE5);
 1971              		.loc 1 2140 0
 1972 0108 2120     		movs	r0, #33
 1973 010a E521     		movs	r1, #229
 1974 010c FFF7FEFF 		bl	VXISI2CWrite
 1975              	.LVL205:
2141:VS4210/monitor.c **** 	VXISI2CWrite(0x22,0x32);
 1976              		.loc 1 2141 0
 1977 0110 2220     		movs	r0, #34
 1978 0112 3221     		movs	r1, #50
 1979 0114 FFF7FEFF 		bl	VXISI2CWrite
 1980              	.LVL206:
2142:VS4210/monitor.c **** 	VXISI2CWrite(0x23,0x20);
 1981              		.loc 1 2142 0
 1982 0118 2320     		movs	r0, #35
 1983 011a 2021     		movs	r1, #32
 1984 011c FFF7FEFF 		bl	VXISI2CWrite
 1985              	.LVL207:
2143:VS4210/monitor.c **** 	VXISI2CWrite(0x24,0x80);
 1986              		.loc 1 2143 0
 1987 0120 2420     		movs	r0, #36
 1988 0122 8021     		movs	r1, #128
 1989 0124 FFF7FEFF 		bl	VXISI2CWrite
 1990              	.LVL208:
2144:VS4210/monitor.c **** 	VXISI2CWrite(0x25,0x21);
 1991              		.loc 1 2144 0
ARM GAS  /tmp/ccD8Q2iX.s 			page 73


 1992 0128 2520     		movs	r0, #37
 1993 012a 2121     		movs	r1, #33
 1994 012c FFF7FEFF 		bl	VXISI2CWrite
 1995              	.LVL209:
2145:VS4210/monitor.c **** 	VXISI2CWrite(0x26,0x0D);
 1996              		.loc 1 2145 0
 1997 0130 2620     		movs	r0, #38
 1998 0132 0D21     		movs	r1, #13
 1999 0134 FFF7FEFF 		bl	VXISI2CWrite
 2000              	.LVL210:
2146:VS4210/monitor.c **** 	VXISI2CWrite(0x27,0xE0);
 2001              		.loc 1 2146 0
 2002 0138 2720     		movs	r0, #39
 2003 013a E021     		movs	r1, #224
 2004 013c FFF7FEFF 		bl	VXISI2CWrite
 2005              	.LVL211:
2147:VS4210/monitor.c **** 	VXISI2CWrite(0x28,0xF0);
 2006              		.loc 1 2147 0
 2007 0140 2820     		movs	r0, #40
 2008 0142 F021     		movs	r1, #240
 2009 0144 FFF7FEFF 		bl	VXISI2CWrite
 2010              	.LVL212:
2148:VS4210/monitor.c **** 	VXISI2CWrite(0x29,0x00);
 2011              		.loc 1 2148 0
 2012 0148 2920     		movs	r0, #41
 2013 014a 0021     		movs	r1, #0
 2014 014c FFF7FEFF 		bl	VXISI2CWrite
 2015              	.LVL213:
2149:VS4210/monitor.c **** 	VXISI2CWrite(0x2A,0x00);
 2016              		.loc 1 2149 0
 2017 0150 2A20     		movs	r0, #42
 2018 0152 0021     		movs	r1, #0
 2019 0154 FFF7FEFF 		bl	VXISI2CWrite
 2020              	.LVL214:
2150:VS4210/monitor.c **** 	VXISI2CWrite(0x2B,0x11);
 2021              		.loc 1 2150 0
 2022 0158 2B20     		movs	r0, #43
 2023 015a 1121     		movs	r1, #17
 2024 015c FFF7FEFF 		bl	VXISI2CWrite
 2025              	.LVL215:
2151:VS4210/monitor.c **** 	VXISI2CWrite(0x2C,0x00);
 2026              		.loc 1 2151 0
 2027 0160 2C20     		movs	r0, #44
 2028 0162 0021     		movs	r1, #0
 2029 0164 FFF7FEFF 		bl	VXISI2CWrite
 2030              	.LVL216:
2152:VS4210/monitor.c **** 	VXISI2CWrite(0x2D,0x00);
 2031              		.loc 1 2152 0
 2032 0168 2D20     		movs	r0, #45
 2033 016a 0021     		movs	r1, #0
 2034 016c FFF7FEFF 		bl	VXISI2CWrite
 2035              	.LVL217:
2153:VS4210/monitor.c **** 	VXISI2CWrite(0x2E,0x12);
 2036              		.loc 1 2153 0
 2037 0170 2E20     		movs	r0, #46
 2038 0172 1221     		movs	r1, #18
 2039 0174 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccD8Q2iX.s 			page 74


 2040              	.LVL218:
2154:VS4210/monitor.c **** 	VXISI2CWrite(0x2F,0x80);
 2041              		.loc 1 2154 0
 2042 0178 2F20     		movs	r0, #47
 2043 017a 8021     		movs	r1, #128
 2044 017c FFF7FEFF 		bl	VXISI2CWrite
 2045              	.LVL219:
2155:VS4210/monitor.c **** 	VXISI2CWrite(0x30,0xE0);
 2046              		.loc 1 2155 0
 2047 0180 3020     		movs	r0, #48
 2048 0182 E021     		movs	r1, #224
 2049 0184 FFF7FEFF 		bl	VXISI2CWrite
 2050              	.LVL220:
2156:VS4210/monitor.c **** 	VXISI2CWrite(0x31,0x80);
 2051              		.loc 1 2156 0
 2052 0188 3120     		movs	r0, #49
 2053 018a 8021     		movs	r1, #128
 2054 018c FFF7FEFF 		bl	VXISI2CWrite
 2055              	.LVL221:
2157:VS4210/monitor.c **** 	VXISI2CWrite(0x32,0x80);
 2056              		.loc 1 2157 0
 2057 0190 3220     		movs	r0, #50
 2058 0192 8021     		movs	r1, #128
 2059 0194 FFF7FEFF 		bl	VXISI2CWrite
 2060              	.LVL222:
2158:VS4210/monitor.c **** 	VXISI2CWrite(0x33,0x80);
 2061              		.loc 1 2158 0
 2062 0198 3320     		movs	r0, #51
 2063 019a 8021     		movs	r1, #128
 2064 019c FFF7FEFF 		bl	VXISI2CWrite
 2065              	.LVL223:
2159:VS4210/monitor.c **** 	VXISI2CWrite(0x34,0xA0);
 2066              		.loc 1 2159 0
 2067 01a0 3420     		movs	r0, #52
 2068 01a2 A021     		movs	r1, #160
 2069 01a4 FFF7FEFF 		bl	VXISI2CWrite
 2070              	.LVL224:
2160:VS4210/monitor.c **** 	VXISI2CWrite(0x35,0x18);
 2071              		.loc 1 2160 0
 2072 01a8 3520     		movs	r0, #53
 2073 01aa 1821     		movs	r1, #24
 2074 01ac FFF7FEFF 		bl	VXISI2CWrite
 2075              	.LVL225:
2161:VS4210/monitor.c **** 	VXISI2CWrite(0x36,0x46);
 2076              		.loc 1 2161 0
 2077 01b0 3620     		movs	r0, #54
 2078 01b2 4621     		movs	r1, #70
 2079 01b4 FFF7FEFF 		bl	VXISI2CWrite
 2080              	.LVL226:
2162:VS4210/monitor.c **** 	VXISI2CWrite(0x37,0x64);
 2081              		.loc 1 2162 0
 2082 01b8 3720     		movs	r0, #55
 2083 01ba 6421     		movs	r1, #100
 2084 01bc FFF7FEFF 		bl	VXISI2CWrite
 2085              	.LVL227:
2163:VS4210/monitor.c **** 	VXISI2CWrite(0x38,0x00);
 2086              		.loc 1 2163 0
ARM GAS  /tmp/ccD8Q2iX.s 			page 75


 2087 01c0 3820     		movs	r0, #56
 2088 01c2 0021     		movs	r1, #0
 2089 01c4 FFF7FEFF 		bl	VXISI2CWrite
 2090              	.LVL228:
2164:VS4210/monitor.c **** 	VXISI2CWrite(0x39,0xFF);
 2091              		.loc 1 2164 0
 2092 01c8 3920     		movs	r0, #57
 2093 01ca FF21     		movs	r1, #255
 2094 01cc FFF7FEFF 		bl	VXISI2CWrite
 2095              	.LVL229:
2165:VS4210/monitor.c **** 	VXISI2CWrite(0x3A,0x2C);
 2096              		.loc 1 2165 0
 2097 01d0 3A20     		movs	r0, #58
 2098 01d2 2C21     		movs	r1, #44
 2099 01d4 FFF7FEFF 		bl	VXISI2CWrite
 2100              	.LVL230:
2166:VS4210/monitor.c **** 	VXISI2CWrite(0x3B,0x80);
 2101              		.loc 1 2166 0
 2102 01d8 3B20     		movs	r0, #59
 2103 01da 8021     		movs	r1, #128
 2104 01dc FFF7FEFF 		bl	VXISI2CWrite
 2105              	.LVL231:
2167:VS4210/monitor.c **** 	VXISI2CWrite(0x3C,0x80);
 2106              		.loc 1 2167 0
 2107 01e0 3C20     		movs	r0, #60
 2108 01e2 8021     		movs	r1, #128
 2109 01e4 FFF7FEFF 		bl	VXISI2CWrite
 2110              	.LVL232:
2168:VS4210/monitor.c **** 	VXISI2CWrite(0x3D,0x80);
 2111              		.loc 1 2168 0
 2112 01e8 3D20     		movs	r0, #61
 2113 01ea 8021     		movs	r1, #128
 2114 01ec FFF7FEFF 		bl	VXISI2CWrite
 2115              	.LVL233:
2169:VS4210/monitor.c **** 	VXISI2CWrite(0x3E,0x80);
 2116              		.loc 1 2169 0
 2117 01f0 3E20     		movs	r0, #62
 2118 01f2 8021     		movs	r1, #128
 2119 01f4 FFF7FEFF 		bl	VXISI2CWrite
 2120              	.LVL234:
2170:VS4210/monitor.c **** 	VXISI2CWrite(0x3F,0x80);
 2121              		.loc 1 2170 0
 2122 01f8 3F20     		movs	r0, #63
 2123 01fa 8021     		movs	r1, #128
 2124 01fc FFF7FEFF 		bl	VXISI2CWrite
 2125              	.LVL235:
2171:VS4210/monitor.c **** 	//VXISI2CWrite(0xVXISI2CWrite(0x80
2172:VS4210/monitor.c **** 	VXISI2CWrite(0x41,0x60);
 2126              		.loc 1 2172 0
 2127 0200 4120     		movs	r0, #65
 2128 0202 6021     		movs	r1, #96
 2129 0204 FFF7FEFF 		bl	VXISI2CWrite
 2130              	.LVL236:
2173:VS4210/monitor.c **** 	VXISI2CWrite(0x42,0x5F);
 2131              		.loc 1 2173 0
 2132 0208 4220     		movs	r0, #66
 2133 020a 5F21     		movs	r1, #95
ARM GAS  /tmp/ccD8Q2iX.s 			page 76


 2134 020c FFF7FEFF 		bl	VXISI2CWrite
 2135              	.LVL237:
2174:VS4210/monitor.c **** 	VXISI2CWrite(0x43,0x37);
 2136              		.loc 1 2174 0
 2137 0210 4320     		movs	r0, #67
 2138 0212 3721     		movs	r1, #55
 2139 0214 FFF7FEFF 		bl	VXISI2CWrite
 2140              	.LVL238:
2175:VS4210/monitor.c **** 	VXISI2CWrite(0x44,0x14);
 2141              		.loc 1 2175 0
 2142 0218 4420     		movs	r0, #68
 2143 021a 1421     		movs	r1, #20
 2144 021c FFF7FEFF 		bl	VXISI2CWrite
 2145              	.LVL239:
2176:VS4210/monitor.c **** 	VXISI2CWrite(0x45,0x05);
 2146              		.loc 1 2176 0
 2147 0220 4520     		movs	r0, #69
 2148 0222 0521     		movs	r1, #5
 2149 0224 FFF7FEFF 		bl	VXISI2CWrite
 2150              	.LVL240:
2177:VS4210/monitor.c **** 	VXISI2CWrite(0x46,0x00);
 2151              		.loc 1 2177 0
 2152 0228 4620     		movs	r0, #70
 2153 022a 0021     		movs	r1, #0
 2154 022c FFF7FEFF 		bl	VXISI2CWrite
 2155              	.LVL241:
2178:VS4210/monitor.c **** 	VXISI2CWrite(0x47,0x00);
 2156              		.loc 1 2178 0
 2157 0230 4720     		movs	r0, #71
 2158 0232 0021     		movs	r1, #0
 2159 0234 FFF7FEFF 		bl	VXISI2CWrite
 2160              	.LVL242:
2179:VS4210/monitor.c **** 	VXISI2CWrite(0x48,0x00);
 2161              		.loc 1 2179 0
 2162 0238 4820     		movs	r0, #72
 2163 023a 0021     		movs	r1, #0
 2164 023c FFF7FEFF 		bl	VXISI2CWrite
 2165              	.LVL243:
2180:VS4210/monitor.c **** 	VXISI2CWrite(0x49,0x00);
 2166              		.loc 1 2180 0
 2167 0240 4920     		movs	r0, #73
 2168 0242 0021     		movs	r1, #0
 2169 0244 FFF7FEFF 		bl	VXISI2CWrite
 2170              	.LVL244:
2181:VS4210/monitor.c **** 	VXISI2CWrite(0x4B,0x20); 
 2171              		.loc 1 2181 0
 2172 0248 4B20     		movs	r0, #75
 2173 024a 2021     		movs	r1, #32
 2174 024c FFF7FEFF 		bl	VXISI2CWrite
 2175              	.LVL245:
2182:VS4210/monitor.c **** 	VXISI2CWrite(0x4C,0x00); 
 2176              		.loc 1 2182 0
 2177 0250 4C20     		movs	r0, #76
 2178 0252 0021     		movs	r1, #0
 2179 0254 FFF7FEFF 		bl	VXISI2CWrite
 2180              	.LVL246:
2183:VS4210/monitor.c **** 	VXISI2CWrite(0x4D,0x00); 
ARM GAS  /tmp/ccD8Q2iX.s 			page 77


 2181              		.loc 1 2183 0
 2182 0258 4D20     		movs	r0, #77
 2183 025a 0021     		movs	r1, #0
 2184 025c FFF7FEFF 		bl	VXISI2CWrite
 2185              	.LVL247:
2184:VS4210/monitor.c **** 	VXISI2CWrite(0x4E,0x00); 
 2186              		.loc 1 2184 0
 2187 0260 4E20     		movs	r0, #78
 2188 0262 0021     		movs	r1, #0
 2189 0264 FFF7FEFF 		bl	VXISI2CWrite
 2190              	.LVL248:
2185:VS4210/monitor.c **** 	VXISI2CWrite(0x4F,0x7F); 
 2191              		.loc 1 2185 0
 2192 0268 4F20     		movs	r0, #79
 2193 026a 7F21     		movs	r1, #127
 2194 026c FFF7FEFF 		bl	VXISI2CWrite
 2195              	.LVL249:
2186:VS4210/monitor.c **** 	VXISI2CWrite(0x50,0x20); 
 2196              		.loc 1 2186 0
 2197 0270 5020     		movs	r0, #80
 2198 0272 2021     		movs	r1, #32
 2199 0274 FFF7FEFF 		bl	VXISI2CWrite
 2200              	.LVL250:
2187:VS4210/monitor.c **** 	VXISI2CWrite(0x51,0x00); 
 2201              		.loc 1 2187 0
 2202 0278 5120     		movs	r0, #81
 2203 027a 0021     		movs	r1, #0
 2204 027c FFF7FEFF 		bl	VXISI2CWrite
 2205              	.LVL251:
2188:VS4210/monitor.c **** 	VXISI2CWrite(0x52,0x00); 
 2206              		.loc 1 2188 0
 2207 0280 5220     		movs	r0, #82
 2208 0282 0021     		movs	r1, #0
 2209 0284 FFF7FEFF 		bl	VXISI2CWrite
 2210              	.LVL252:
2189:VS4210/monitor.c **** 	VXISI2CWrite(0x53,0x06); 
 2211              		.loc 1 2189 0
 2212 0288 5320     		movs	r0, #83
 2213 028a 0621     		movs	r1, #6
 2214 028c FFF7FEFF 		bl	VXISI2CWrite
 2215              	.LVL253:
2190:VS4210/monitor.c **** 	VXISI2CWrite(0x54,0x00);
 2216              		.loc 1 2190 0
 2217 0290 5420     		movs	r0, #84
 2218 0292 0021     		movs	r1, #0
 2219 0294 FFF7FEFF 		bl	VXISI2CWrite
 2220              	.LVL254:
2191:VS4210/monitor.c **** 	VXISI2CWrite(0x55,0xB4);
 2221              		.loc 1 2191 0
 2222 0298 5520     		movs	r0, #85
 2223 029a B421     		movs	r1, #180
 2224 029c FFF7FEFF 		bl	VXISI2CWrite
 2225              	.LVL255:
2192:VS4210/monitor.c **** 	VXISI2CWrite(0x56,0x3D);
 2226              		.loc 1 2192 0
 2227 02a0 5620     		movs	r0, #86
 2228 02a2 3D21     		movs	r1, #61
ARM GAS  /tmp/ccD8Q2iX.s 			page 78


 2229 02a4 FFF7FEFF 		bl	VXISI2CWrite
 2230              	.LVL256:
2193:VS4210/monitor.c **** 	VXISI2CWrite(0x57,0x04);
 2231              		.loc 1 2193 0
 2232 02a8 5720     		movs	r0, #87
 2233 02aa 0421     		movs	r1, #4
 2234 02ac FFF7FEFF 		bl	VXISI2CWrite
 2235              	.LVL257:
2194:VS4210/monitor.c **** 	VXISI2CWrite(0x58,0x00);
 2236              		.loc 1 2194 0
 2237 02b0 5820     		movs	r0, #88
 2238 02b2 0021     		movs	r1, #0
 2239 02b4 FFF7FEFF 		bl	VXISI2CWrite
 2240              	.LVL258:
2195:VS4210/monitor.c **** 	VXISI2CWrite(0x59,0x08);
 2241              		.loc 1 2195 0
 2242 02b8 5920     		movs	r0, #89
 2243 02ba 0821     		movs	r1, #8
 2244 02bc FFF7FEFF 		bl	VXISI2CWrite
 2245              	.LVL259:
2196:VS4210/monitor.c **** 	VXISI2CWrite(0x5A,0x10);
 2246              		.loc 1 2196 0
 2247 02c0 5A20     		movs	r0, #90
 2248 02c2 1021     		movs	r1, #16
 2249 02c4 FFF7FEFF 		bl	VXISI2CWrite
 2250              	.LVL260:
2197:VS4210/monitor.c **** 	VXISI2CWrite(0x5B,0x00);
 2251              		.loc 1 2197 0
 2252 02c8 5B20     		movs	r0, #91
 2253 02ca 0021     		movs	r1, #0
 2254 02cc FFF7FEFF 		bl	VXISI2CWrite
 2255              	.LVL261:
2198:VS4210/monitor.c **** 	VXISI2CWrite(0x5C,0x68);
 2256              		.loc 1 2198 0
 2257 02d0 5C20     		movs	r0, #92
 2258 02d2 6821     		movs	r1, #104
 2259 02d4 FFF7FEFF 		bl	VXISI2CWrite
 2260              	.LVL262:
2199:VS4210/monitor.c **** 	VXISI2CWrite(0x5D,0x40);
 2261              		.loc 1 2199 0
 2262 02d8 5D20     		movs	r0, #93
 2263 02da 4021     		movs	r1, #64
 2264 02dc FFF7FEFF 		bl	VXISI2CWrite
 2265              	.LVL263:
2200:VS4210/monitor.c **** 	VXISI2CWrite(0x5E,0x0A);
 2266              		.loc 1 2200 0
 2267 02e0 5E20     		movs	r0, #94
 2268 02e2 0A21     		movs	r1, #10
 2269 02e4 FFF7FEFF 		bl	VXISI2CWrite
 2270              	.LVL264:
2201:VS4210/monitor.c **** 	VXISI2CWrite(0x5F,0x00);
 2271              		.loc 1 2201 0
 2272 02e8 5F20     		movs	r0, #95
 2273 02ea 0021     		movs	r1, #0
 2274 02ec FFF7FEFF 		bl	VXISI2CWrite
 2275              	.LVL265:
2202:VS4210/monitor.c **** 	VXISI2CWrite(0x60,0xB4);
ARM GAS  /tmp/ccD8Q2iX.s 			page 79


 2276              		.loc 1 2202 0
 2277 02f0 6020     		movs	r0, #96
 2278 02f2 B421     		movs	r1, #180
 2279 02f4 FFF7FEFF 		bl	VXISI2CWrite
 2280              	.LVL266:
2203:VS4210/monitor.c **** 	VXISI2CWrite(0x61,0x51);
 2281              		.loc 1 2203 0
 2282 02f8 6120     		movs	r0, #97
 2283 02fa 5121     		movs	r1, #81
 2284 02fc FFF7FEFF 		bl	VXISI2CWrite
 2285              	.LVL267:
2204:VS4210/monitor.c **** 	VXISI2CWrite(0x62,0x33);
 2286              		.loc 1 2204 0
 2287 0300 6220     		movs	r0, #98
 2288 0302 3321     		movs	r1, #51
 2289 0304 FFF7FEFF 		bl	VXISI2CWrite
 2290              	.LVL268:
2205:VS4210/monitor.c **** 	VXISI2CWrite(0x63,0x01);
 2291              		.loc 1 2205 0
 2292 0308 6320     		movs	r0, #99
 2293 030a 0121     		movs	r1, #1
 2294 030c FFF7FEFF 		bl	VXISI2CWrite
 2295              	.LVL269:
2206:VS4210/monitor.c **** 	VXISI2CWrite(0x64,0xFF);
 2296              		.loc 1 2206 0
 2297 0310 6420     		movs	r0, #100
 2298 0312 FF21     		movs	r1, #255
 2299 0314 FFF7FEFF 		bl	VXISI2CWrite
 2300              	.LVL270:
2207:VS4210/monitor.c **** 	VXISI2CWrite(0x65,0x01);
 2301              		.loc 1 2207 0
 2302 0318 6520     		movs	r0, #101
 2303 031a 0121     		movs	r1, #1
 2304 031c FFF7FEFF 		bl	VXISI2CWrite
 2305              	.LVL271:
2208:VS4210/monitor.c **** 	VXISI2CWrite(0x66,0xFF);
 2306              		.loc 1 2208 0
 2307 0320 6620     		movs	r0, #102
 2308 0322 FF21     		movs	r1, #255
 2309 0324 FFF7FEFF 		bl	VXISI2CWrite
 2310              	.LVL272:
2209:VS4210/monitor.c **** 	VXISI2CWrite(0x67,0x89);
 2311              		.loc 1 2209 0
 2312 0328 6720     		movs	r0, #103
 2313 032a 8921     		movs	r1, #137
 2314 032c FFF7FEFF 		bl	VXISI2CWrite
 2315              	.LVL273:
2210:VS4210/monitor.c **** 	VXISI2CWrite(0x68,0xAB);
 2316              		.loc 1 2210 0
 2317 0330 6820     		movs	r0, #104
 2318 0332 AB21     		movs	r1, #171
 2319 0334 FFF7FEFF 		bl	VXISI2CWrite
 2320              	.LVL274:
2211:VS4210/monitor.c **** 	VXISI2CWrite(0x69,0x88);
 2321              		.loc 1 2211 0
 2322 0338 6920     		movs	r0, #105
 2323 033a 8821     		movs	r1, #136
ARM GAS  /tmp/ccD8Q2iX.s 			page 80


 2324 033c FFF7FEFF 		bl	VXISI2CWrite
 2325              	.LVL275:
2212:VS4210/monitor.c **** 	VXISI2CWrite(0x6A,0x6E);
 2326              		.loc 1 2212 0
 2327 0340 6A20     		movs	r0, #106
 2328 0342 6E21     		movs	r1, #110
 2329 0344 FFF7FEFF 		bl	VXISI2CWrite
 2330              	.LVL276:
2213:VS4210/monitor.c **** 	VXISI2CWrite(0x6B,0x6E);
 2331              		.loc 1 2213 0
 2332 0348 6B20     		movs	r0, #107
 2333 034a 6E21     		movs	r1, #110
 2334 034c FFF7FEFF 		bl	VXISI2CWrite
 2335              	.LVL277:
2214:VS4210/monitor.c **** 	VXISI2CWrite(0x6C,0x6E);
 2336              		.loc 1 2214 0
 2337 0350 6C20     		movs	r0, #108
 2338 0352 6E21     		movs	r1, #110
 2339 0354 FFF7FEFF 		bl	VXISI2CWrite
 2340              	.LVL278:
2215:VS4210/monitor.c **** 	VXISI2CWrite(0x6D,0x00);
 2341              		.loc 1 2215 0
 2342 0358 6D20     		movs	r0, #109
 2343 035a 0021     		movs	r1, #0
 2344 035c FFF7FEFF 		bl	VXISI2CWrite
 2345              	.LVL279:
2216:VS4210/monitor.c **** 	VXISI2CWrite(0x6E,0x00);
 2346              		.loc 1 2216 0
 2347 0360 6E20     		movs	r0, #110
 2348 0362 0021     		movs	r1, #0
 2349 0364 FFF7FEFF 		bl	VXISI2CWrite
 2350              	.LVL280:
2217:VS4210/monitor.c **** 	VXISI2CWrite(0x6F,0x00);
 2351              		.loc 1 2217 0
 2352 0368 6F20     		movs	r0, #111
 2353 036a 0021     		movs	r1, #0
 2354 036c FFF7FEFF 		bl	VXISI2CWrite
 2355              	.LVL281:
2218:VS4210/monitor.c **** 	VXISI2CWrite(0x70,0x00);
 2356              		.loc 1 2218 0
 2357 0370 7020     		movs	r0, #112
 2358 0372 0021     		movs	r1, #0
 2359 0374 FFF7FEFF 		bl	VXISI2CWrite
 2360              	.LVL282:
2219:VS4210/monitor.c **** 	VXISI2CWrite(0x71,0x00);
 2361              		.loc 1 2219 0
 2362 0378 7120     		movs	r0, #113
 2363 037a 0021     		movs	r1, #0
 2364 037c FFF7FEFF 		bl	VXISI2CWrite
 2365              	.LVL283:
2220:VS4210/monitor.c **** 	VXISI2CWrite(0x72,0x00);
 2366              		.loc 1 2220 0
 2367 0380 7220     		movs	r0, #114
 2368 0382 0021     		movs	r1, #0
 2369 0384 FFF7FEFF 		bl	VXISI2CWrite
 2370              	.LVL284:
2221:VS4210/monitor.c **** 	VXISI2CWrite(0x73,0x00);
ARM GAS  /tmp/ccD8Q2iX.s 			page 81


 2371              		.loc 1 2221 0
 2372 0388 7320     		movs	r0, #115
 2373 038a 0021     		movs	r1, #0
 2374 038c FFF7FEFF 		bl	VXISI2CWrite
 2375              	.LVL285:
2222:VS4210/monitor.c **** 	VXISI2CWrite(0x74,0x04);
 2376              		.loc 1 2222 0
 2377 0390 7420     		movs	r0, #116
 2378 0392 0421     		movs	r1, #4
 2379 0394 FFF7FEFF 		bl	VXISI2CWrite
 2380              	.LVL286:
2223:VS4210/monitor.c **** 	VXISI2CWrite(0x75,0xFF);
 2381              		.loc 1 2223 0
 2382 0398 7520     		movs	r0, #117
 2383 039a FF21     		movs	r1, #255
 2384 039c FFF7FEFF 		bl	VXISI2CWrite
 2385              	.LVL287:
2224:VS4210/monitor.c **** 	VXISI2CWrite(0x76,0xFF);
 2386              		.loc 1 2224 0
 2387 03a0 7620     		movs	r0, #118
 2388 03a2 FF21     		movs	r1, #255
 2389 03a4 FFF7FEFF 		bl	VXISI2CWrite
 2390              	.LVL288:
2225:VS4210/monitor.c **** 	VXISI2CWrite(0x77,0xFF);
 2391              		.loc 1 2225 0
 2392 03a8 7720     		movs	r0, #119
 2393 03aa FF21     		movs	r1, #255
 2394 03ac FFF7FEFF 		bl	VXISI2CWrite
 2395              	.LVL289:
2226:VS4210/monitor.c **** 	VXISI2CWrite(0x78,0xFF);
 2396              		.loc 1 2226 0
 2397 03b0 7820     		movs	r0, #120
 2398 03b2 FF21     		movs	r1, #255
 2399 03b4 FFF7FEFF 		bl	VXISI2CWrite
 2400              	.LVL290:
2227:VS4210/monitor.c **** 	VXISI2CWrite(0x79,0xFF);
 2401              		.loc 1 2227 0
 2402 03b8 7920     		movs	r0, #121
 2403 03ba FF21     		movs	r1, #255
 2404 03bc FFF7FEFF 		bl	VXISI2CWrite
 2405              	.LVL291:
2228:VS4210/monitor.c **** 	VXISI2CWrite(0x7A,0xFF);
 2406              		.loc 1 2228 0
 2407 03c0 7A20     		movs	r0, #122
 2408 03c2 FF21     		movs	r1, #255
 2409 03c4 FFF7FEFF 		bl	VXISI2CWrite
 2410              	.LVL292:
2229:VS4210/monitor.c **** 	VXISI2CWrite(0x7B,0xFF);
 2411              		.loc 1 2229 0
 2412 03c8 7B20     		movs	r0, #123
 2413 03ca FF21     		movs	r1, #255
 2414 03cc FFF7FEFF 		bl	VXISI2CWrite
 2415              	.LVL293:
2230:VS4210/monitor.c **** 	VXISI2CWrite(0x7C,0xFF);
 2416              		.loc 1 2230 0
 2417 03d0 7C20     		movs	r0, #124
 2418 03d2 FF21     		movs	r1, #255
ARM GAS  /tmp/ccD8Q2iX.s 			page 82


 2419 03d4 FFF7FEFF 		bl	VXISI2CWrite
 2420              	.LVL294:
2231:VS4210/monitor.c **** 	VXISI2CWrite(0x7D,0xF0);
 2421              		.loc 1 2231 0
 2422 03d8 7D20     		movs	r0, #125
 2423 03da F021     		movs	r1, #240
 2424 03dc FFF7FEFF 		bl	VXISI2CWrite
 2425              	.LVL295:
2232:VS4210/monitor.c **** 	VXISI2CWrite(0x7E,0x80);
 2426              		.loc 1 2232 0
 2427 03e0 7E20     		movs	r0, #126
 2428 03e2 8021     		movs	r1, #128
 2429 03e4 FFF7FEFF 		bl	VXISI2CWrite
 2430              	.LVL296:
2233:VS4210/monitor.c **** 	VXISI2CWrite(0x7F,0x00);
 2431              		.loc 1 2233 0
 2432 03e8 7F20     		movs	r0, #127
 2433 03ea 0021     		movs	r1, #0
 2434 03ec FFF7FEFF 		bl	VXISI2CWrite
 2435              	.LVL297:
2234:VS4210/monitor.c **** 	VXISI2CWrite(0x80,0x01);
 2436              		.loc 1 2234 0
 2437 03f0 8020     		movs	r0, #128
 2438 03f2 0121     		movs	r1, #1
 2439 03f4 FFF7FEFF 		bl	VXISI2CWrite
 2440              	.LVL298:
 2441 03f8 02E0     		b	.L129
 2442              	.L130:
 2443 03fa 00BF     		.align	2
 2444              	.L128:
 2445 03fc F8020000 		.word	.LC20
 2446              	.L129:
2235:VS4210/monitor.c **** 	VXISI2CWrite(0x81,0x34);
 2447              		.loc 1 2235 0
 2448 0400 8120     		movs	r0, #129
 2449 0402 3421     		movs	r1, #52
 2450 0404 FFF7FEFF 		bl	VXISI2CWrite
 2451              	.LVL299:
2236:VS4210/monitor.c **** 	VXISI2CWrite(0x82,0x40);
 2452              		.loc 1 2236 0
 2453 0408 8220     		movs	r0, #130
 2454 040a 4021     		movs	r1, #64
 2455 040c FFF7FEFF 		bl	VXISI2CWrite
 2456              	.LVL300:
2237:VS4210/monitor.c **** 	VXISI2CWrite(0x83,0x2D);
 2457              		.loc 1 2237 0
 2458 0410 8320     		movs	r0, #131
 2459 0412 2D21     		movs	r1, #45
 2460 0414 FFF7FEFF 		bl	VXISI2CWrite
 2461              	.LVL301:
2238:VS4210/monitor.c **** 	VXISI2CWrite(0x84,0x59);
 2462              		.loc 1 2238 0
 2463 0418 8420     		movs	r0, #132
 2464 041a 5921     		movs	r1, #89
 2465 041c FFF7FEFF 		bl	VXISI2CWrite
 2466              	.LVL302:
2239:VS4210/monitor.c **** 	VXISI2CWrite(0x85,0xFD);
ARM GAS  /tmp/ccD8Q2iX.s 			page 83


 2467              		.loc 1 2239 0
 2468 0420 8520     		movs	r0, #133
 2469 0422 FD21     		movs	r1, #253
 2470 0424 FFF7FEFF 		bl	VXISI2CWrite
 2471              	.LVL303:
2240:VS4210/monitor.c **** 	VXISI2CWrite(0x86,0x00);
 2472              		.loc 1 2240 0
 2473 0428 8620     		movs	r0, #134
 2474 042a 0021     		movs	r1, #0
 2475 042c FFF7FEFF 		bl	VXISI2CWrite
 2476              	.LVL304:
2241:VS4210/monitor.c **** 	VXISI2CWrite(0x87,0x00);
 2477              		.loc 1 2241 0
 2478 0430 8720     		movs	r0, #135
 2479 0432 0021     		movs	r1, #0
 2480 0434 FFF7FEFF 		bl	VXISI2CWrite
 2481              	.LVL305:
2242:VS4210/monitor.c **** 	VXISI2CWrite(0x88,0x00);
 2482              		.loc 1 2242 0
 2483 0438 8820     		movs	r0, #136
 2484 043a 0021     		movs	r1, #0
 2485 043c FFF7FEFF 		bl	VXISI2CWrite
 2486              	.LVL306:
2243:VS4210/monitor.c **** 	VXISI2CWrite(0x89,0x00);
 2487              		.loc 1 2243 0
 2488 0440 8920     		movs	r0, #137
 2489 0442 0021     		movs	r1, #0
 2490 0444 FFF7FEFF 		bl	VXISI2CWrite
 2491              	.LVL307:
2244:VS4210/monitor.c **** 	VXISI2CWrite(0x8A,0x00);
 2492              		.loc 1 2244 0
 2493 0448 8A20     		movs	r0, #138
 2494 044a 0021     		movs	r1, #0
 2495 044c FFF7FEFF 		bl	VXISI2CWrite
 2496              	.LVL308:
2245:VS4210/monitor.c **** 	VXISI2CWrite(0x8B,0x7E);
 2497              		.loc 1 2245 0
 2498 0450 8B20     		movs	r0, #139
 2499 0452 7E21     		movs	r1, #126
 2500 0454 FFF7FEFF 		bl	VXISI2CWrite
 2501              	.LVL309:
2246:VS4210/monitor.c **** 	VXISI2CWrite(0x8C,0x03);
 2502              		.loc 1 2246 0
 2503 0458 8C20     		movs	r0, #140
 2504 045a 0321     		movs	r1, #3
 2505 045c FFF7FEFF 		bl	VXISI2CWrite
 2506              	.LVL310:
2247:VS4210/monitor.c **** 	VXISI2CWrite(0x8D,0x17);
 2507              		.loc 1 2247 0
 2508 0460 8D20     		movs	r0, #141
 2509 0462 1721     		movs	r1, #23
 2510 0464 FFF7FEFF 		bl	VXISI2CWrite
 2511              	.LVL311:
2248:VS4210/monitor.c **** 	VXISI2CWrite(0x8E,0x8C);
 2512              		.loc 1 2248 0
 2513 0468 8E20     		movs	r0, #142
 2514 046a 8C21     		movs	r1, #140
ARM GAS  /tmp/ccD8Q2iX.s 			page 84


 2515 046c FFF7FEFF 		bl	VXISI2CWrite
 2516              	.LVL312:
2249:VS4210/monitor.c **** 	VXISI2CWrite(0x8F,0x00);
 2517              		.loc 1 2249 0
 2518 0470 8F20     		movs	r0, #143
 2519 0472 0021     		movs	r1, #0
 2520 0474 FFF7FEFF 		bl	VXISI2CWrite
 2521              	.LVL313:
2250:VS4210/monitor.c **** 	VXISI2CWrite(0x90,0xCC);
 2522              		.loc 1 2250 0
 2523 0478 9020     		movs	r0, #144
 2524 047a CC21     		movs	r1, #204
 2525 047c FFF7FEFF 		bl	VXISI2CWrite
 2526              	.LVL314:
2251:VS4210/monitor.c **** 	VXISI2CWrite(0x91,0x41);
 2527              		.loc 1 2251 0
 2528 0480 9120     		movs	r0, #145
 2529 0482 4121     		movs	r1, #65
 2530 0484 FFF7FEFF 		bl	VXISI2CWrite
 2531              	.LVL315:
2252:VS4210/monitor.c **** 	VXISI2CWrite(0x92,0xC4);
 2532              		.loc 1 2252 0
 2533 0488 9220     		movs	r0, #146
 2534 048a C421     		movs	r1, #196
 2535 048c FFF7FEFF 		bl	VXISI2CWrite
 2536              	.LVL316:
2253:VS4210/monitor.c **** 	VXISI2CWrite(0x93,0x31);
 2537              		.loc 1 2253 0
 2538 0490 9320     		movs	r0, #147
 2539 0492 3121     		movs	r1, #49
 2540 0494 FFF7FEFF 		bl	VXISI2CWrite
 2541              	.LVL317:
2254:VS4210/monitor.c **** 	VXISI2CWrite(0x94,0x88);
 2542              		.loc 1 2254 0
 2543 0498 9420     		movs	r0, #148
 2544 049a 8821     		movs	r1, #136
 2545 049c FFF7FEFF 		bl	VXISI2CWrite
 2546              	.LVL318:
2255:VS4210/monitor.c **** 	VXISI2CWrite(0x95,0x80);
 2547              		.loc 1 2255 0
 2548 04a0 9520     		movs	r0, #149
 2549 04a2 8021     		movs	r1, #128
 2550 04a4 FFF7FEFF 		bl	VXISI2CWrite
 2551              	.LVL319:
2256:VS4210/monitor.c **** 	VXISI2CWrite(0x96,0xF2);
 2552              		.loc 1 2256 0
 2553 04a8 9620     		movs	r0, #150
 2554 04aa F221     		movs	r1, #242
 2555 04ac FFF7FEFF 		bl	VXISI2CWrite
 2556              	.LVL320:
2257:VS4210/monitor.c **** 	VXISI2CWrite(0x97,0x20);
 2557              		.loc 1 2257 0
 2558 04b0 9720     		movs	r0, #151
 2559 04b2 2021     		movs	r1, #32
 2560 04b4 FFF7FEFF 		bl	VXISI2CWrite
 2561              	.LVL321:
2258:VS4210/monitor.c **** 	VXISI2CWrite(0x98,0x10);
ARM GAS  /tmp/ccD8Q2iX.s 			page 85


 2562              		.loc 1 2258 0
 2563 04b8 9820     		movs	r0, #152
 2564 04ba 1021     		movs	r1, #16
 2565 04bc FFF7FEFF 		bl	VXISI2CWrite
 2566              	.LVL322:
2259:VS4210/monitor.c **** 	VXISI2CWrite(0x99,0x90);
 2567              		.loc 1 2259 0
 2568 04c0 9920     		movs	r0, #153
 2569 04c2 9021     		movs	r1, #144
 2570 04c4 FFF7FEFF 		bl	VXISI2CWrite
 2571              	.LVL323:
2260:VS4210/monitor.c **** 	VXISI2CWrite(0x9A,0x80);
 2572              		.loc 1 2260 0
 2573 04c8 9A20     		movs	r0, #154
 2574 04ca 8021     		movs	r1, #128
 2575 04cc FFF7FEFF 		bl	VXISI2CWrite
 2576              	.LVL324:
2261:VS4210/monitor.c **** 	VXISI2CWrite(0x9B,0x04);
 2577              		.loc 1 2261 0
 2578 04d0 9B20     		movs	r0, #155
 2579 04d2 0421     		movs	r1, #4
 2580 04d4 FFF7FEFF 		bl	VXISI2CWrite
 2581              	.LVL325:
2262:VS4210/monitor.c **** 	VXISI2CWrite(0x9C,0x0A);
 2582              		.loc 1 2262 0
 2583 04d8 9C20     		movs	r0, #156
 2584 04da 0A21     		movs	r1, #10
 2585 04dc FFF7FEFF 		bl	VXISI2CWrite
 2586              	.LVL326:
2263:VS4210/monitor.c **** 	VXISI2CWrite(0x9D,0x00);
 2587              		.loc 1 2263 0
 2588 04e0 9D20     		movs	r0, #157
 2589 04e2 0021     		movs	r1, #0
 2590 04e4 FFF7FEFF 		bl	VXISI2CWrite
 2591              	.LVL327:
2264:VS4210/monitor.c **** 	VXISI2CWrite(0x9E,0x04);
 2592              		.loc 1 2264 0
 2593 04e8 9E20     		movs	r0, #158
 2594 04ea 0421     		movs	r1, #4
 2595 04ec FFF7FEFF 		bl	VXISI2CWrite
 2596              	.LVL328:
2265:VS4210/monitor.c **** 	VXISI2CWrite(0x9F,0x65);
 2597              		.loc 1 2265 0
 2598 04f0 9F20     		movs	r0, #159
 2599 04f2 6521     		movs	r1, #101
 2600 04f4 FFF7FEFF 		bl	VXISI2CWrite
 2601              	.LVL329:
2266:VS4210/monitor.c **** 	VXISI2CWrite(0xA0,0x2A);
 2602              		.loc 1 2266 0
 2603 04f8 A020     		movs	r0, #160
 2604 04fa 2A21     		movs	r1, #42
 2605 04fc FFF7FEFF 		bl	VXISI2CWrite
 2606              	.LVL330:
2267:VS4210/monitor.c **** 	VXISI2CWrite(0xA1,0xD8);
 2607              		.loc 1 2267 0
 2608 0500 A120     		movs	r0, #161
 2609 0502 D821     		movs	r1, #216
ARM GAS  /tmp/ccD8Q2iX.s 			page 86


 2610 0504 FFF7FEFF 		bl	VXISI2CWrite
 2611              	.LVL331:
2268:VS4210/monitor.c **** 	VXISI2CWrite(0xA2,0x98);
 2612              		.loc 1 2268 0
 2613 0508 A220     		movs	r0, #162
 2614 050a 9821     		movs	r1, #152
 2615 050c FFF7FEFF 		bl	VXISI2CWrite
 2616              	.LVL332:
2269:VS4210/monitor.c **** 	VXISI2CWrite(0xA3,0x87);
 2617              		.loc 1 2269 0
 2618 0510 A320     		movs	r0, #163
 2619 0512 8721     		movs	r1, #135
 2620 0514 FFF7FEFF 		bl	VXISI2CWrite
 2621              	.LVL333:
2270:VS4210/monitor.c **** 	VXISI2CWrite(0xA4,0xD9);
 2622              		.loc 1 2270 0
 2623 0518 A420     		movs	r0, #164
 2624 051a D921     		movs	r1, #217
 2625 051c FFF7FEFF 		bl	VXISI2CWrite
 2626              	.LVL334:
2271:VS4210/monitor.c **** 	VXISI2CWrite(0xA5,0x38);
 2627              		.loc 1 2271 0
 2628 0520 A520     		movs	r0, #165
 2629 0522 3821     		movs	r1, #56
 2630 0524 FFF7FEFF 		bl	VXISI2CWrite
 2631              	.LVL335:
2272:VS4210/monitor.c **** 	VXISI2CWrite(0xA6,0xBA);
 2632              		.loc 1 2272 0
 2633 0528 A620     		movs	r0, #166
 2634 052a BA21     		movs	r1, #186
 2635 052c FFF7FEFF 		bl	VXISI2CWrite
 2636              	.LVL336:
2273:VS4210/monitor.c **** 	VXISI2CWrite(0xA7,0x70);
 2637              		.loc 1 2273 0
 2638 0530 A720     		movs	r0, #167
 2639 0532 7021     		movs	r1, #112
 2640 0534 FFF7FEFF 		bl	VXISI2CWrite
 2641              	.LVL337:
2274:VS4210/monitor.c **** 	VXISI2CWrite(0xA8,0x40);
 2642              		.loc 1 2274 0
 2643 0538 A820     		movs	r0, #168
 2644 053a 4021     		movs	r1, #64
 2645 053c FFF7FEFF 		bl	VXISI2CWrite
 2646              	.LVL338:
2275:VS4210/monitor.c **** 	VXISI2CWrite(0xA9,0x1E);
 2647              		.loc 1 2275 0
 2648 0540 A920     		movs	r0, #169
 2649 0542 1E21     		movs	r1, #30
 2650 0544 FFF7FEFF 		bl	VXISI2CWrite
 2651              	.LVL339:
2276:VS4210/monitor.c **** 	VXISI2CWrite(0xAA,0x2E);
 2652              		.loc 1 2276 0
 2653 0548 AA20     		movs	r0, #170
 2654 054a 2E21     		movs	r1, #46
 2655 054c FFF7FEFF 		bl	VXISI2CWrite
 2656              	.LVL340:
2277:VS4210/monitor.c **** 	VXISI2CWrite(0xAB,0x00);
ARM GAS  /tmp/ccD8Q2iX.s 			page 87


 2657              		.loc 1 2277 0
 2658 0550 AB20     		movs	r0, #171
 2659 0552 0021     		movs	r1, #0
 2660 0554 FFF7FEFF 		bl	VXISI2CWrite
 2661              	.LVL341:
2278:VS4210/monitor.c **** 	VXISI2CWrite(0xAC,0x84);
 2662              		.loc 1 2278 0
 2663 0558 AC20     		movs	r0, #172
 2664 055a 8421     		movs	r1, #132
 2665 055c FFF7FEFF 		bl	VXISI2CWrite
 2666              	.LVL342:
2279:VS4210/monitor.c **** 	VXISI2CWrite(0xAD,0xF2);
 2667              		.loc 1 2279 0
 2668 0560 AD20     		movs	r0, #173
 2669 0562 F221     		movs	r1, #242
 2670 0564 FFF7FEFF 		bl	VXISI2CWrite
 2671              	.LVL343:
2280:VS4210/monitor.c **** 	VXISI2CWrite(0xAE,0x65);
 2672              		.loc 1 2280 0
 2673 0568 AE20     		movs	r0, #174
 2674 056a 6521     		movs	r1, #101
 2675 056c FFF7FEFF 		bl	VXISI2CWrite
 2676              	.LVL344:
2281:VS4210/monitor.c **** 	VXISI2CWrite(0xAF,0x99);
 2677              		.loc 1 2281 0
 2678 0570 AF20     		movs	r0, #175
 2679 0572 9921     		movs	r1, #153
 2680 0574 FFF7FEFF 		bl	VXISI2CWrite
 2681              	.LVL345:
2282:VS4210/monitor.c **** 	VXISI2CWrite(0xB0,0x00);
 2682              		.loc 1 2282 0
 2683 0578 B020     		movs	r0, #176
 2684 057a 0021     		movs	r1, #0
 2685 057c FFF7FEFF 		bl	VXISI2CWrite
 2686              	.LVL346:
2283:VS4210/monitor.c **** 	VXISI2CWrite(0xB1,0x00);
 2687              		.loc 1 2283 0
 2688 0580 B120     		movs	r0, #177
 2689 0582 0021     		movs	r1, #0
 2690 0584 FFF7FEFF 		bl	VXISI2CWrite
 2691              	.LVL347:
2284:VS4210/monitor.c **** 	VXISI2CWrite(0xB2,0x00);
 2692              		.loc 1 2284 0
 2693 0588 B220     		movs	r0, #178
 2694 058a 0021     		movs	r1, #0
 2695 058c FFF7FEFF 		bl	VXISI2CWrite
 2696              	.LVL348:
2285:VS4210/monitor.c **** 	VXISI2CWrite(0xB3,0x00);
 2697              		.loc 1 2285 0
 2698 0590 B320     		movs	r0, #179
 2699 0592 0021     		movs	r1, #0
 2700 0594 FFF7FEFF 		bl	VXISI2CWrite
 2701              	.LVL349:
2286:VS4210/monitor.c **** 	VXISI2CWrite(0xB4,0x00);
 2702              		.loc 1 2286 0
 2703 0598 B420     		movs	r0, #180
 2704 059a 0021     		movs	r1, #0
ARM GAS  /tmp/ccD8Q2iX.s 			page 88


 2705 059c FFF7FEFF 		bl	VXISI2CWrite
 2706              	.LVL350:
2287:VS4210/monitor.c **** 	VXISI2CWrite(0xB5,0x00);
 2707              		.loc 1 2287 0
 2708 05a0 B520     		movs	r0, #181
 2709 05a2 0021     		movs	r1, #0
 2710 05a4 FFF7FEFF 		bl	VXISI2CWrite
 2711              	.LVL351:
2288:VS4210/monitor.c **** 	VXISI2CWrite(0xB6,0x00);
 2712              		.loc 1 2288 0
 2713 05a8 B620     		movs	r0, #182
 2714 05aa 0021     		movs	r1, #0
 2715 05ac FFF7FEFF 		bl	VXISI2CWrite
 2716              	.LVL352:
2289:VS4210/monitor.c **** 	VXISI2CWrite(0xB8,0x80);
 2717              		.loc 1 2289 0
 2718 05b0 B820     		movs	r0, #184
 2719 05b2 8021     		movs	r1, #128
 2720 05b4 FFF7FEFF 		bl	VXISI2CWrite
 2721              	.LVL353:
2290:VS4210/monitor.c **** 	VXISI2CWrite(0xB9,0x00);
 2722              		.loc 1 2290 0
 2723 05b8 B920     		movs	r0, #185
 2724 05ba 0021     		movs	r1, #0
 2725 05bc FFF7FEFF 		bl	VXISI2CWrite
 2726              	.LVL354:
2291:VS4210/monitor.c **** 	VXISI2CWrite(0xBA,0x01);
 2727              		.loc 1 2291 0
 2728 05c0 BA20     		movs	r0, #186
 2729 05c2 0121     		movs	r1, #1
 2730 05c4 FFF7FEFF 		bl	VXISI2CWrite
 2731              	.LVL355:
2292:VS4210/monitor.c **** 	VXISI2CWrite(0xBB,0x00);
 2732              		.loc 1 2292 0
 2733 05c8 BB20     		movs	r0, #187
 2734 05ca 0021     		movs	r1, #0
 2735 05cc FFF7FEFF 		bl	VXISI2CWrite
 2736              	.LVL356:
2293:VS4210/monitor.c **** 	VXISI2CWrite(0xBC,0x90);
 2737              		.loc 1 2293 0
 2738 05d0 BC20     		movs	r0, #188
 2739 05d2 9021     		movs	r1, #144
 2740 05d4 FFF7FEFF 		bl	VXISI2CWrite
 2741              	.LVL357:
2294:VS4210/monitor.c **** 	VXISI2CWrite(0xBD,0x01);
 2742              		.loc 1 2294 0
 2743 05d8 BD20     		movs	r0, #189
 2744 05da 0121     		movs	r1, #1
 2745 05dc FFF7FEFF 		bl	VXISI2CWrite
 2746              	.LVL358:
2295:VS4210/monitor.c **** 	VXISI2CWrite(0xBE,0x2C);
 2747              		.loc 1 2295 0
 2748 05e0 BE20     		movs	r0, #190
 2749 05e2 2C21     		movs	r1, #44
 2750 05e4 FFF7FEFF 		bl	VXISI2CWrite
 2751              	.LVL359:
2296:VS4210/monitor.c **** 	VXISI2CWrite(0xC0,0x00);
ARM GAS  /tmp/ccD8Q2iX.s 			page 89


 2752              		.loc 1 2296 0
 2753 05e8 C020     		movs	r0, #192
 2754 05ea 0021     		movs	r1, #0
 2755 05ec FFF7FEFF 		bl	VXISI2CWrite
 2756              	.LVL360:
2297:VS4210/monitor.c **** 	VXISI2CWrite(0xC1,0x20);
 2757              		.loc 1 2297 0
 2758 05f0 C120     		movs	r0, #193
 2759 05f2 2021     		movs	r1, #32
 2760 05f4 FFF7FEFF 		bl	VXISI2CWrite
 2761              	.LVL361:
2298:VS4210/monitor.c **** 	VXISI2CWrite(0xC2,0x20);
 2762              		.loc 1 2298 0
 2763 05f8 C220     		movs	r0, #194
 2764 05fa 2021     		movs	r1, #32
 2765 05fc FFF7FEFF 		bl	VXISI2CWrite
 2766              	.LVL362:
2299:VS4210/monitor.c **** 	VXISI2CWrite(0xC3,0x20);
 2767              		.loc 1 2299 0
 2768 0600 C320     		movs	r0, #195
 2769 0602 2021     		movs	r1, #32
 2770 0604 FFF7FEFF 		bl	VXISI2CWrite
 2771              	.LVL363:
2300:VS4210/monitor.c **** 	VXISI2CWrite(0xC4,0x20);
 2772              		.loc 1 2300 0
 2773 0608 C420     		movs	r0, #196
 2774 060a 2021     		movs	r1, #32
 2775 060c FFF7FEFF 		bl	VXISI2CWrite
 2776              	.LVL364:
2301:VS4210/monitor.c **** 	VXISI2CWrite(0xC5,0x20);
 2777              		.loc 1 2301 0
 2778 0610 C520     		movs	r0, #197
 2779 0612 2021     		movs	r1, #32
 2780 0614 FFF7FEFF 		bl	VXISI2CWrite
 2781              	.LVL365:
2302:VS4210/monitor.c **** 	VXISI2CWrite(0xD0,0xFF);
 2782              		.loc 1 2302 0
 2783 0618 D020     		movs	r0, #208
 2784 061a FF21     		movs	r1, #255
 2785 061c FFF7FEFF 		bl	VXISI2CWrite
 2786              	.LVL366:
2303:VS4210/monitor.c **** 	VXISI2CWrite(0xD1,0x3F);
 2787              		.loc 1 2303 0
 2788 0620 D120     		movs	r0, #209
 2789 0622 3F21     		movs	r1, #63
 2790 0624 FFF7FEFF 		bl	VXISI2CWrite
 2791              	.LVL367:
2304:VS4210/monitor.c **** 	VXISI2CWrite(0xD2,0xC2);
 2792              		.loc 1 2304 0
 2793 0628 D220     		movs	r0, #210
 2794 062a C221     		movs	r1, #194
 2795 062c FFF7FEFF 		bl	VXISI2CWrite
 2796              	.LVL368:
2305:VS4210/monitor.c **** 	VXISI2CWrite(0xD3,0x3F);
 2797              		.loc 1 2305 0
 2798 0630 D320     		movs	r0, #211
 2799 0632 3F21     		movs	r1, #63
ARM GAS  /tmp/ccD8Q2iX.s 			page 90


 2800 0634 FFF7FEFF 		bl	VXISI2CWrite
 2801              	.LVL369:
2306:VS4210/monitor.c **** 	VXISI2CWrite(0xD4,0x00);
 2802              		.loc 1 2306 0
 2803 0638 D420     		movs	r0, #212
 2804 063a 0021     		movs	r1, #0
 2805 063c FFF7FEFF 		bl	VXISI2CWrite
 2806              	.LVL370:
2307:VS4210/monitor.c **** 	VXISI2CWrite(0xD5,0x00);
 2807              		.loc 1 2307 0
 2808 0640 D520     		movs	r0, #213
 2809 0642 0021     		movs	r1, #0
 2810 0644 FFF7FEFF 		bl	VXISI2CWrite
 2811              	.LVL371:
2308:VS4210/monitor.c **** 	VXISI2CWrite(0xD6,0x00);
 2812              		.loc 1 2308 0
 2813 0648 D620     		movs	r0, #214
 2814 064a 0021     		movs	r1, #0
 2815 064c FFF7FEFF 		bl	VXISI2CWrite
 2816              	.LVL372:
2309:VS4210/monitor.c **** 	VXISI2CWrite(0xD7,0x10);
 2817              		.loc 1 2309 0
 2818 0650 D720     		movs	r0, #215
 2819 0652 1021     		movs	r1, #16
 2820 0654 FFF7FEFF 		bl	VXISI2CWrite
 2821              	.LVL373:
2310:VS4210/monitor.c **** 	VXISI2CWrite(0xD8,0x00);
 2822              		.loc 1 2310 0
 2823 0658 D820     		movs	r0, #216
 2824 065a 0021     		movs	r1, #0
 2825 065c FFF7FEFF 		bl	VXISI2CWrite
 2826              	.LVL374:
2311:VS4210/monitor.c **** 	VXISI2CWrite(0xDC,0x77);
 2827              		.loc 1 2311 0
 2828 0660 DC20     		movs	r0, #220
 2829 0662 7721     		movs	r1, #119
 2830 0664 FFF7FEFF 		bl	VXISI2CWrite
 2831              	.LVL375:
2312:VS4210/monitor.c **** 	VXISI2CWrite(0xDD,0x00);
 2832              		.loc 1 2312 0
 2833 0668 DD20     		movs	r0, #221
 2834 066a 0021     		movs	r1, #0
 2835 066c FFF7FEFF 		bl	VXISI2CWrite
 2836              	.LVL376:
2313:VS4210/monitor.c **** 	VXISI2CWrite(0xDE,0xAF);
 2837              		.loc 1 2313 0
 2838 0670 DE20     		movs	r0, #222
 2839 0672 AF21     		movs	r1, #175
 2840 0674 FFF7FEFF 		bl	VXISI2CWrite
 2841              	.LVL377:
2314:VS4210/monitor.c **** 	VXISI2CWrite(0xDF,0xEC);
 2842              		.loc 1 2314 0
 2843 0678 DF20     		movs	r0, #223
 2844 067a EC21     		movs	r1, #236
 2845 067c FFF7FEFF 		bl	VXISI2CWrite
 2846              	.LVL378:
2315:VS4210/monitor.c **** 	VXISI2CWrite(0xE0,0x00);
ARM GAS  /tmp/ccD8Q2iX.s 			page 91


 2847              		.loc 1 2315 0
 2848 0680 E020     		movs	r0, #224
 2849 0682 0021     		movs	r1, #0
 2850 0684 FFF7FEFF 		bl	VXISI2CWrite
 2851              	.LVL379:
2316:VS4210/monitor.c **** 	VXISI2CWrite(0xE1,0x00);
 2852              		.loc 1 2316 0
 2853 0688 E120     		movs	r0, #225
 2854 068a 0021     		movs	r1, #0
 2855 068c FFF7FEFF 		bl	VXISI2CWrite
 2856              	.LVL380:
2317:VS4210/monitor.c **** 	VXISI2CWrite(0xE2,0x00);
 2857              		.loc 1 2317 0
 2858 0690 E220     		movs	r0, #226
 2859 0692 0021     		movs	r1, #0
 2860 0694 FFF7FEFF 		bl	VXISI2CWrite
 2861              	.LVL381:
2318:VS4210/monitor.c **** 	VXISI2CWrite(0xE3,0x12);
 2862              		.loc 1 2318 0
 2863 0698 E320     		movs	r0, #227
 2864 069a 1221     		movs	r1, #18
 2865 069c FFF7FEFF 		bl	VXISI2CWrite
 2866              	.LVL382:
2319:VS4210/monitor.c **** 	VXISI2CWrite(0xE4,0xE2);
 2867              		.loc 1 2319 0
 2868 06a0 E420     		movs	r0, #228
 2869 06a2 E221     		movs	r1, #226
 2870 06a4 FFF7FEFF 		bl	VXISI2CWrite
 2871              	.LVL383:
2320:VS4210/monitor.c **** 	VXISI2CWrite(0xE5,0x80);
 2872              		.loc 1 2320 0
 2873 06a8 E520     		movs	r0, #229
 2874 06aa 8021     		movs	r1, #128
 2875 06ac FFF7FEFF 		bl	VXISI2CWrite
 2876              	.LVL384:
2321:VS4210/monitor.c **** 	VXISI2CWrite(0xE6,0x00);
 2877              		.loc 1 2321 0
 2878 06b0 E620     		movs	r0, #230
 2879 06b2 0021     		movs	r1, #0
 2880 06b4 FFF7FEFF 		bl	VXISI2CWrite
 2881              	.LVL385:
2322:VS4210/monitor.c **** 	VXISI2CWrite(0xE7,0x00);
 2882              		.loc 1 2322 0
 2883 06b8 E720     		movs	r0, #231
 2884 06ba 0021     		movs	r1, #0
 2885 06bc FFF7FEFF 		bl	VXISI2CWrite
 2886              	.LVL386:
2323:VS4210/monitor.c **** 	VXISI2CWrite(0xE8,0x00);
 2887              		.loc 1 2323 0
 2888 06c0 E820     		movs	r0, #232
 2889 06c2 0021     		movs	r1, #0
 2890 06c4 FFF7FEFF 		bl	VXISI2CWrite
 2891              	.LVL387:
2324:VS4210/monitor.c **** 	VXISI2CWrite(0xE9,0x00);
 2892              		.loc 1 2324 0
 2893 06c8 E920     		movs	r0, #233
 2894 06ca 0021     		movs	r1, #0
ARM GAS  /tmp/ccD8Q2iX.s 			page 92


 2895 06cc FFF7FEFF 		bl	VXISI2CWrite
 2896              	.LVL388:
2325:VS4210/monitor.c **** 	VXISI2CWrite(0xEA,0x00);
 2897              		.loc 1 2325 0
 2898 06d0 EA20     		movs	r0, #234
 2899 06d2 0021     		movs	r1, #0
 2900 06d4 FFF7FEFF 		bl	VXISI2CWrite
 2901              	.LVL389:
2326:VS4210/monitor.c **** 	VXISI2CWrite(0xEB,0x00);
 2902              		.loc 1 2326 0
 2903 06d8 EB20     		movs	r0, #235
 2904 06da 0021     		movs	r1, #0
 2905 06dc FFF7FEFF 		bl	VXISI2CWrite
 2906              	.LVL390:
2327:VS4210/monitor.c **** 	VXISI2CWrite(0xEC,0x88);
 2907              		.loc 1 2327 0
 2908 06e0 EC20     		movs	r0, #236
 2909 06e2 8821     		movs	r1, #136
 2910 06e4 FFF7FEFF 		bl	VXISI2CWrite
 2911              	.LVL391:
2328:VS4210/monitor.c **** 	VXISI2CWrite(0xED,0x00);
 2912              		.loc 1 2328 0
 2913 06e8 ED20     		movs	r0, #237
 2914 06ea 0021     		movs	r1, #0
 2915 06ec FFF7FEFF 		bl	VXISI2CWrite
 2916              	.LVL392:
2329:VS4210/monitor.c **** 	VXISI2CWrite(0xEE,0x00);
 2917              		.loc 1 2329 0
 2918 06f0 EE20     		movs	r0, #238
 2919 06f2 0021     		movs	r1, #0
 2920 06f4 FFF7FEFF 		bl	VXISI2CWrite
 2921              	.LVL393:
2330:VS4210/monitor.c **** 	VXISI2CWrite(0xEF,0x00);
 2922              		.loc 1 2330 0
 2923 06f8 EF20     		movs	r0, #239
 2924 06fa 0021     		movs	r1, #0
 2925 06fc FFF7FEFF 		bl	VXISI2CWrite
 2926              	.LVL394:
2331:VS4210/monitor.c **** 	VXISI2CWrite(0xF0,0x30);
 2927              		.loc 1 2331 0
 2928 0700 F020     		movs	r0, #240
 2929 0702 3021     		movs	r1, #48
 2930 0704 FFF7FEFF 		bl	VXISI2CWrite
 2931              	.LVL395:
2332:VS4210/monitor.c **** 	VXISI2CWrite(0xF1,0x43);
 2932              		.loc 1 2332 0
 2933 0708 F120     		movs	r0, #241
 2934 070a 4321     		movs	r1, #67
 2935 070c FFF7FEFF 		bl	VXISI2CWrite
 2936              	.LVL396:
2333:VS4210/monitor.c **** 	VXISI2CWrite(0xF2,0x1F);
 2937              		.loc 1 2333 0
 2938 0710 F220     		movs	r0, #242
 2939 0712 1F21     		movs	r1, #31
 2940 0714 FFF7FEFF 		bl	VXISI2CWrite
 2941              	.LVL397:
2334:VS4210/monitor.c **** 	VXISI2CWrite(0xF3,0x1F);
ARM GAS  /tmp/ccD8Q2iX.s 			page 93


 2942              		.loc 1 2334 0
 2943 0718 F320     		movs	r0, #243
 2944 071a 1F21     		movs	r1, #31
 2945 071c FFF7FEFF 		bl	VXISI2CWrite
 2946              	.LVL398:
2335:VS4210/monitor.c **** 	VXISI2CWrite(0xF4,0x22);
 2947              		.loc 1 2335 0
 2948 0720 F420     		movs	r0, #244
 2949 0722 2221     		movs	r1, #34
 2950 0724 FFF7FEFF 		bl	VXISI2CWrite
 2951              	.LVL399:
2336:VS4210/monitor.c **** 	VXISI2CWrite(0xF5,0x73);
 2952              		.loc 1 2336 0
 2953 0728 F520     		movs	r0, #245
 2954 072a 7321     		movs	r1, #115
 2955 072c FFF7FEFF 		bl	VXISI2CWrite
 2956              	.LVL400:
2337:VS4210/monitor.c **** 	VXISI2CWrite(0xF6,0x53);
 2957              		.loc 1 2337 0
 2958 0730 F620     		movs	r0, #246
 2959 0732 5321     		movs	r1, #83
 2960 0734 FFF7FEFF 		bl	VXISI2CWrite
 2961              	.LVL401:
2338:VS4210/monitor.c **** 	VXISI2CWrite(0xF7,0x80);
 2962              		.loc 1 2338 0
 2963 0738 F720     		movs	r0, #247
 2964 073a 8021     		movs	r1, #128
 2965 073c FFF7FEFF 		bl	VXISI2CWrite
 2966              	.LVL402:
2339:VS4210/monitor.c **** 	VXISI2CWrite(0xF8,0x01);
 2967              		.loc 1 2339 0
 2968 0740 F820     		movs	r0, #248
 2969 0742 0121     		movs	r1, #1
 2970 0744 FFF7FEFF 		bl	VXISI2CWrite
 2971              	.LVL403:
2340:VS4210/monitor.c **** 	VXISI2CWrite(0xF9,0x01);
 2972              		.loc 1 2340 0
 2973 0748 F920     		movs	r0, #249
 2974 074a 0121     		movs	r1, #1
 2975 074c FFF7FEFF 		bl	VXISI2CWrite
 2976              	.LVL404:
2341:VS4210/monitor.c **** 	VXISI2CWrite(0xFA,0x00);
 2977              		.loc 1 2341 0
 2978 0750 FA20     		movs	r0, #250
 2979 0752 0021     		movs	r1, #0
 2980 0754 FFF7FEFF 		bl	VXISI2CWrite
 2981              	.LVL405:
2342:VS4210/monitor.c **** 	VXISI2CWrite(0xFB,0x00);
 2982              		.loc 1 2342 0
 2983 0758 FB20     		movs	r0, #251
 2984 075a 0021     		movs	r1, #0
 2985 075c FFF7FEFF 		bl	VXISI2CWrite
 2986              	.LVL406:
2343:VS4210/monitor.c **** 	VXISI2CWrite(0xFC,0x00);
 2987              		.loc 1 2343 0
 2988 0760 FC20     		movs	r0, #252
 2989 0762 0021     		movs	r1, #0
ARM GAS  /tmp/ccD8Q2iX.s 			page 94


 2990 0764 FFF7FEFF 		bl	VXISI2CWrite
 2991              	.LVL407:
2344:VS4210/monitor.c **** 	VXISI2CWrite(0xFD,0x70);
 2992              		.loc 1 2344 0
 2993 0768 FD20     		movs	r0, #253
 2994 076a 7021     		movs	r1, #112
 2995 076c FFF7FEFF 		bl	VXISI2CWrite
 2996              	.LVL408:
2345:VS4210/monitor.c **** 	VXISI2CWrite(0xFE,0x40);
 2997              		.loc 1 2345 0
 2998 0770 FE20     		movs	r0, #254
 2999 0772 4021     		movs	r1, #64
 3000 0774 FFF7FEFF 		bl	VXISI2CWrite
 3001              	.LVL409:
2346:VS4210/monitor.c **** 	VXISI2CWrite(0xFF,0x07);
 3002              		.loc 1 2346 0
 3003 0778 FF20     		movs	r0, #255
 3004 077a 0721     		movs	r1, #7
 3005 077c FFF7FEFF 		bl	VXISI2CWrite
 3006              	.LVL410:
 3007 0780 08BD     		pop	{r3, pc}
 3008              		.cfi_endproc
 3009              	.LFE91:
 3011 0782 00BF     		.section	.text.SET_HDMI_SYNC_PARA,"ax",%progbits
 3012              		.align	2
 3013              		.global	SET_HDMI_SYNC_PARA
 3014              		.thumb
 3015              		.thumb_func
 3017              	SET_HDMI_SYNC_PARA:
 3018              	.LFB92:
2347:VS4210/monitor.c **** 					   
2348:VS4210/monitor.c **** 
2349:VS4210/monitor.c **** }
2350:VS4210/monitor.c **** 
2351:VS4210/monitor.c **** void SET_HDMI_SYNC_PARA(void)
2352:VS4210/monitor.c **** {
 3019              		.loc 1 2352 0
 3020              		.cfi_startproc
 3021              		@ args = 0, pretend = 0, frame = 0
 3022              		@ frame_needed = 0, uses_anonymous_args = 0
 3023 0000 08B5     		push	{r3, lr}
 3024              	.LCFI17:
 3025              		.cfi_def_cfa_offset 8
 3026              		.cfi_offset 3, -8
 3027              		.cfi_offset 14, -4
2353:VS4210/monitor.c **** 	Printf("\r\nLoading HDMI Embedded Sync para.... ");
 3028              		.loc 1 2353 0
 3029 0002 0248     		ldr	r0, .L133
 3030 0004 FFF7FEFF 		bl	Printf
 3031              	.LVL411:
 3032 0008 08BD     		pop	{r3, pc}
 3033              	.L134:
 3034 000a 00BF     		.align	2
 3035              	.L133:
 3036 000c 28030000 		.word	.LC21
 3037              		.cfi_endproc
 3038              	.LFE92:
ARM GAS  /tmp/ccD8Q2iX.s 			page 95


 3040              		.section	.text.Monitor,"ax",%progbits
 3041              		.align	2
 3042              		.global	Monitor
 3043              		.thumb
 3044              		.thumb_func
 3046              	Monitor:
 3047              	.LFB89:
 822:VS4210/monitor.c **** 
 3048              		.loc 1 822 0
 3049              		.cfi_startproc
 3050              		@ args = 0, pretend = 0, frame = 0
 3051              		@ frame_needed = 0, uses_anonymous_args = 0
 3052 0000 70B5     		push	{r4, r5, r6, lr}
 3053              	.LCFI18:
 3054              		.cfi_def_cfa_offset 16
 3055              		.cfi_offset 4, -16
 3056              		.cfi_offset 5, -12
 3057              		.cfi_offset 6, -8
 3058              		.cfi_offset 14, -4
 826:VS4210/monitor.c **** 
 3059              		.loc 1 826 0
 3060 0002 FFF7FEFF 		bl	MonGetCommand
 3061              	.LVL412:
 3062 0006 0028     		cmp	r0, #0
 3063 0008 00F0CD86 		beq	.L135
 840:VS4210/monitor.c **** 
 3064              		.loc 1 840 0
 3065 000c 0022     		movs	r2, #0
 3066 000e C04B     		ldr	r3, .L199
 3067 0010 1A60     		str	r2, [r3]
 843:VS4210/monitor.c **** 
 3068              		.loc 1 843 0
 3069 0012 C04B     		ldr	r3, .L199+4
 3070 0014 1C68     		ldr	r4, [r3]
 3071 0016 2046     		mov	r0, r4
 3072 0018 BF49     		ldr	r1, .L199+8
 3073 001a FFF7FEFF 		bl	stricmp
 3074              	.LVL413:
 3075 001e 0028     		cmp	r0, #0
 3076 0020 40F0D780 		bne	.L137
 852:VS4210/monitor.c **** 	{
 3077              		.loc 1 852 0
 3078 0024 BD4B     		ldr	r3, .L199+12
 3079 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3080 0028 A02B     		cmp	r3, #160
 3081 002a 26D1     		bne	.L138
 854:VS4210/monitor.c **** 	   //tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2])); 	
 3082              		.loc 1 854 0
 3083 002c B94C     		ldr	r4, .L199+4
 3084 002e 6068     		ldr	r0, [r4, #4]
 3085 0030 FFF7FEFF 		bl	Asc2Bin
 3086              	.LVL414:
 3087 0034 0546     		mov	r5, r0
 3088 0036 A068     		ldr	r0, [r4, #8]
 3089 0038 FFF7FEFF 		bl	Asc2Bin
 3090              	.LVL415:
 3091 003c 0146     		mov	r1, r0
ARM GAS  /tmp/ccD8Q2iX.s 			page 96


 3092 003e 2846     		mov	r0, r5
 3093 0040 FFF7FEFF 		bl	WriteEEP
 3094              	.LVL416:
 856:VS4210/monitor.c **** 		MonIndex=Asc2Bin(argv[1]);
 3095              		.loc 1 856 0
 3096 0044 6068     		ldr	r0, [r4, #4]
 3097 0046 FFF7FEFF 		bl	Asc2Bin
 3098              	.LVL417:
 3099 004a FFF7FEFF 		bl	ReadEEP
 3100              	.LVL418:
 3101 004e 0646     		mov	r6, r0
 3102              	.LVL419:
 857:VS4210/monitor.c **** 		MonWdata=Asc2Bin(argv[2]);
 3103              		.loc 1 857 0
 3104 0050 6568     		ldr	r5, [r4, #4]
 3105 0052 2846     		mov	r0, r5
 3106 0054 FFF7FEFF 		bl	Asc2Bin
 3107              	.LVL420:
 3108 0058 B14B     		ldr	r3, .L199+16
 3109 005a 1870     		strb	r0, [r3]
 858:VS4210/monitor.c **** 	  Printf("\r\nEEPROM Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3110              		.loc 1 858 0
 3111 005c A068     		ldr	r0, [r4, #8]
 3112 005e FFF7FEFF 		bl	Asc2Bin
 3113              	.LVL421:
 3114 0062 B04B     		ldr	r3, .L199+20
 3115 0064 1870     		strb	r0, [r3]
 859:VS4210/monitor.c **** 	}
 3116              		.loc 1 859 0
 3117 0066 2846     		mov	r0, r5
 3118 0068 FFF7FEFF 		bl	Asc2Bin
 3119              	.LVL422:
 3120 006c 0146     		mov	r1, r0
 3121 006e AE48     		ldr	r0, .L199+24
 3122 0070 3246     		mov	r2, r6
 3123 0072 FFF7FEFF 		bl	Printf
 3124              	.LVL423:
 3125 0076 00F094BE 		b	.L139
 3126              	.LVL424:
 3127              	.L138:
 861:VS4210/monitor.c **** {
 3128              		.loc 1 861 0
 3129 007a 402B     		cmp	r3, #64
 3130 007c 26D1     		bne	.L140
 863:VS4210/monitor.c **** 	 ret= VXISI2CRead(Asc2Bin(argv[1]));	
 3131              		.loc 1 863 0
 3132 007e A54C     		ldr	r4, .L199+4
 3133 0080 6068     		ldr	r0, [r4, #4]
 3134 0082 FFF7FEFF 		bl	Asc2Bin
 3135              	.LVL425:
 3136 0086 0546     		mov	r5, r0
 3137 0088 A068     		ldr	r0, [r4, #8]
 3138 008a FFF7FEFF 		bl	Asc2Bin
 3139              	.LVL426:
 3140 008e 0146     		mov	r1, r0
 3141 0090 2846     		mov	r0, r5
 3142 0092 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccD8Q2iX.s 			page 97


 3143              	.LVL427:
 864:VS4210/monitor.c **** 	 MonIndex=Asc2Bin(argv[1]);
 3144              		.loc 1 864 0
 3145 0096 6068     		ldr	r0, [r4, #4]
 3146 0098 FFF7FEFF 		bl	Asc2Bin
 3147              	.LVL428:
 3148 009c FFF7FEFF 		bl	VXISI2CRead
 3149              	.LVL429:
 3150 00a0 0646     		mov	r6, r0
 3151              	.LVL430:
 865:VS4210/monitor.c **** 	 MonWdata=Asc2Bin(argv[2]); 
 3152              		.loc 1 865 0
 3153 00a2 6568     		ldr	r5, [r4, #4]
 3154 00a4 2846     		mov	r0, r5
 3155 00a6 FFF7FEFF 		bl	Asc2Bin
 3156              	.LVL431:
 3157 00aa 9D4B     		ldr	r3, .L199+16
 3158 00ac 1870     		strb	r0, [r3]
 866:VS4210/monitor.c **** 	   Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3159              		.loc 1 866 0
 3160 00ae A068     		ldr	r0, [r4, #8]
 3161 00b0 FFF7FEFF 		bl	Asc2Bin
 3162              	.LVL432:
 3163 00b4 9B4B     		ldr	r3, .L199+20
 3164 00b6 1870     		strb	r0, [r3]
 867:VS4210/monitor.c **** }
 3165              		.loc 1 867 0
 3166 00b8 2846     		mov	r0, r5
 3167 00ba FFF7FEFF 		bl	Asc2Bin
 3168              	.LVL433:
 3169 00be 0146     		mov	r1, r0
 3170 00c0 9A48     		ldr	r0, .L199+28
 3171 00c2 3246     		mov	r2, r6
 3172 00c4 FFF7FEFF 		bl	Printf
 3173              	.LVL434:
 3174 00c8 00F06BBE 		b	.L139
 3175              	.LVL435:
 3176              	.L140:
 869:VS4210/monitor.c **** {
 3177              		.loc 1 869 0
 3178 00cc 122B     		cmp	r3, #18
 3179 00ce 26D1     		bne	.L141
 871:VS4210/monitor.c **** 	 ret= VS8812Read(Asc2Bin(argv[1]));	
 3180              		.loc 1 871 0
 3181 00d0 904C     		ldr	r4, .L199+4
 3182 00d2 6068     		ldr	r0, [r4, #4]
 3183 00d4 FFF7FEFF 		bl	Asc2Bin
 3184              	.LVL436:
 3185 00d8 0546     		mov	r5, r0
 3186 00da A068     		ldr	r0, [r4, #8]
 3187 00dc FFF7FEFF 		bl	Asc2Bin
 3188              	.LVL437:
 3189 00e0 0146     		mov	r1, r0
 3190 00e2 2846     		mov	r0, r5
 3191 00e4 FFF7FEFF 		bl	VS8812Write
 3192              	.LVL438:
 872:VS4210/monitor.c **** 	 MonIndex=Asc2Bin(argv[1]);
ARM GAS  /tmp/ccD8Q2iX.s 			page 98


 3193              		.loc 1 872 0
 3194 00e8 6068     		ldr	r0, [r4, #4]
 3195 00ea FFF7FEFF 		bl	Asc2Bin
 3196              	.LVL439:
 3197 00ee FFF7FEFF 		bl	VS8812Read
 3198              	.LVL440:
 3199 00f2 0646     		mov	r6, r0
 3200              	.LVL441:
 873:VS4210/monitor.c **** 	 MonWdata=Asc2Bin(argv[2]); 
 3201              		.loc 1 873 0
 3202 00f4 6568     		ldr	r5, [r4, #4]
 3203 00f6 2846     		mov	r0, r5
 3204 00f8 FFF7FEFF 		bl	Asc2Bin
 3205              	.LVL442:
 3206 00fc 884B     		ldr	r3, .L199+16
 3207 00fe 1870     		strb	r0, [r3]
 874:VS4210/monitor.c **** 	   Printf("\r\nVS8812 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3208              		.loc 1 874 0
 3209 0100 A068     		ldr	r0, [r4, #8]
 3210 0102 FFF7FEFF 		bl	Asc2Bin
 3211              	.LVL443:
 3212 0106 874B     		ldr	r3, .L199+20
 3213 0108 1870     		strb	r0, [r3]
 875:VS4210/monitor.c **** }
 3214              		.loc 1 875 0
 3215 010a 2846     		mov	r0, r5
 3216 010c FFF7FEFF 		bl	Asc2Bin
 3217              	.LVL444:
 3218 0110 0146     		mov	r1, r0
 3219 0112 8748     		ldr	r0, .L199+32
 3220 0114 3246     		mov	r2, r6
 3221 0116 FFF7FEFF 		bl	Printf
 3222              	.LVL445:
 3223 011a 00F042BE 		b	.L139
 3224              	.LVL446:
 3225              	.L141:
 896:VS4210/monitor.c **** 	{
 3226              		.loc 1 896 0
 3227 011e 882B     		cmp	r3, #136
 3228 0120 26D1     		bne	.L142
 898:VS4210/monitor.c **** 	ret= tp28xx_byte_read(Asc2Bin(argv[1]));	
 3229              		.loc 1 898 0
 3230 0122 7C4C     		ldr	r4, .L199+4
 3231 0124 6068     		ldr	r0, [r4, #4]
 3232 0126 FFF7FEFF 		bl	Asc2Bin
 3233              	.LVL447:
 3234 012a 0546     		mov	r5, r0
 3235 012c A068     		ldr	r0, [r4, #8]
 3236 012e FFF7FEFF 		bl	Asc2Bin
 3237              	.LVL448:
 3238 0132 0146     		mov	r1, r0
 3239 0134 2846     		mov	r0, r5
 3240 0136 FFF7FEFF 		bl	tp28xx_byte_write
 3241              	.LVL449:
 899:VS4210/monitor.c **** 	MonIndex=Asc2Bin(argv[1]);
 3242              		.loc 1 899 0
 3243 013a 6068     		ldr	r0, [r4, #4]
ARM GAS  /tmp/ccD8Q2iX.s 			page 99


 3244 013c FFF7FEFF 		bl	Asc2Bin
 3245              	.LVL450:
 3246 0140 FFF7FEFF 		bl	tp28xx_byte_read
 3247              	.LVL451:
 3248 0144 0646     		mov	r6, r0
 3249              	.LVL452:
 900:VS4210/monitor.c **** 	MonWdata=Asc2Bin(argv[2]);
 3250              		.loc 1 900 0
 3251 0146 6568     		ldr	r5, [r4, #4]
 3252 0148 2846     		mov	r0, r5
 3253 014a FFF7FEFF 		bl	Asc2Bin
 3254              	.LVL453:
 3255 014e 744B     		ldr	r3, .L199+16
 3256 0150 1870     		strb	r0, [r3]
 901:VS4210/monitor.c **** 	 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3257              		.loc 1 901 0
 3258 0152 A068     		ldr	r0, [r4, #8]
 3259 0154 FFF7FEFF 		bl	Asc2Bin
 3260              	.LVL454:
 3261 0158 724B     		ldr	r3, .L199+20
 3262 015a 1870     		strb	r0, [r3]
 902:VS4210/monitor.c **** 	}
 3263              		.loc 1 902 0
 3264 015c 2846     		mov	r0, r5
 3265 015e FFF7FEFF 		bl	Asc2Bin
 3266              	.LVL455:
 3267 0162 0146     		mov	r1, r0
 3268 0164 7348     		ldr	r0, .L199+36
 3269 0166 3246     		mov	r2, r6
 3270 0168 FFF7FEFF 		bl	Printf
 3271              	.LVL456:
 3272 016c 00F019BE 		b	.L139
 3273              	.LVL457:
 3274              	.L142:
 905:VS4210/monitor.c **** 	{
 3275              		.loc 1 905 0
 3276 0170 902B     		cmp	r3, #144
 3277 0172 29D1     		bne	.L143
 907:VS4210/monitor.c **** 	HDMIRX_WriteI2C_Byte( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );	
 3278              		.loc 1 907 0
 3279 0174 0022     		movs	r2, #0
 3280 0176 704B     		ldr	r3, .L199+40
 3281 0178 1A70     		strb	r2, [r3]
 908:VS4210/monitor.c **** 	ret= HDMIRX_ReadI2C_Byte(Asc2Bin(argv[1]));		
 3282              		.loc 1 908 0
 3283 017a 664C     		ldr	r4, .L199+4
 3284 017c 6068     		ldr	r0, [r4, #4]
 3285 017e FFF7FEFF 		bl	Asc2Bin
 3286              	.LVL458:
 3287 0182 0546     		mov	r5, r0
 3288 0184 A068     		ldr	r0, [r4, #8]
 3289 0186 FFF7FEFF 		bl	Asc2Bin
 3290              	.LVL459:
 3291 018a 0146     		mov	r1, r0
 3292 018c 2846     		mov	r0, r5
 3293 018e FFF7FEFF 		bl	HDMIRX_WriteI2C_Byte
 3294              	.LVL460:
ARM GAS  /tmp/ccD8Q2iX.s 			page 100


 909:VS4210/monitor.c **** 	MonIndex=Asc2Bin(argv[1]);
 3295              		.loc 1 909 0
 3296 0192 6068     		ldr	r0, [r4, #4]
 3297 0194 FFF7FEFF 		bl	Asc2Bin
 3298              	.LVL461:
 3299 0198 FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 3300              	.LVL462:
 3301 019c 0646     		mov	r6, r0
 3302              	.LVL463:
 910:VS4210/monitor.c **** 	MonWdata=Asc2Bin(argv[2]);
 3303              		.loc 1 910 0
 3304 019e 6568     		ldr	r5, [r4, #4]
 3305 01a0 2846     		mov	r0, r5
 3306 01a2 FFF7FEFF 		bl	Asc2Bin
 3307              	.LVL464:
 3308 01a6 5E4B     		ldr	r3, .L199+16
 3309 01a8 1870     		strb	r0, [r3]
 911:VS4210/monitor.c **** 	 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3310              		.loc 1 911 0
 3311 01aa A068     		ldr	r0, [r4, #8]
 3312 01ac FFF7FEFF 		bl	Asc2Bin
 3313              	.LVL465:
 3314 01b0 5C4B     		ldr	r3, .L199+20
 3315 01b2 1870     		strb	r0, [r3]
 912:VS4210/monitor.c **** 	}
 3316              		.loc 1 912 0
 3317 01b4 2846     		mov	r0, r5
 3318 01b6 FFF7FEFF 		bl	Asc2Bin
 3319              	.LVL466:
 3320 01ba 0146     		mov	r1, r0
 3321 01bc 5F48     		ldr	r0, .L199+44
 3322 01be 3246     		mov	r2, r6
 3323 01c0 FFF7FEFF 		bl	Printf
 3324              	.LVL467:
 3325 01c4 00F0EDBD 		b	.L139
 3326              	.LVL468:
 3327              	.L143:
 916:VS4210/monitor.c **** 
 3328              		.loc 1 916 0
 3329 01c8 5D48     		ldr	r0, .L199+48
 3330 01ca FFF7FEFF 		bl	Printf
 3331              	.LVL469:
 3332 01ce 00F0E8BD 		b	.L139
 3333              	.L137:
 939:VS4210/monitor.c **** 		indirect=0;
 3334              		.loc 1 939 0
 3335 01d2 2046     		mov	r0, r4
 3336 01d4 5B49     		ldr	r1, .L199+52
 3337 01d6 FFF7FEFF 		bl	stricmp
 3338              	.LVL470:
 3339 01da 0028     		cmp	r0, #0
 3340 01dc 00F0E185 		beq	.L139
 954:VS4210/monitor.c **** 		//MonReadI2C();
 3341              		.loc 1 954 0
 3342 01e0 2046     		mov	r0, r4
 3343 01e2 5949     		ldr	r1, .L199+56
 3344 01e4 FFF7FEFF 		bl	stricmp
ARM GAS  /tmp/ccD8Q2iX.s 			page 101


 3345              	.LVL471:
 3346 01e8 0028     		cmp	r0, #0
 3347 01ea 40F0B580 		bne	.L144
 962:VS4210/monitor.c **** 		{
 3348              		.loc 1 962 0
 3349 01ee 4B4B     		ldr	r3, .L199+12
 3350 01f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3351 01f2 A02B     		cmp	r3, #160
 3352 01f4 18D1     		bne	.L145
 964:VS4210/monitor.c **** 		   MonIndex=Asc2Bin(argv[1]);
 3353              		.loc 1 964 0
 3354 01f6 474D     		ldr	r5, .L199+4
 3355 01f8 6868     		ldr	r0, [r5, #4]
 3356 01fa FFF7FEFF 		bl	Asc2Bin
 3357              	.LVL472:
 3358 01fe FFF7FEFF 		bl	ReadEEP
 3359              	.LVL473:
 3360 0202 0446     		mov	r4, r0
 3361              	.LVL474:
 965:VS4210/monitor.c **** 		   MonWdata=ret;
 3362              		.loc 1 965 0
 3363 0204 6D68     		ldr	r5, [r5, #4]
 3364 0206 2846     		mov	r0, r5
 3365 0208 FFF7FEFF 		bl	Asc2Bin
 3366              	.LVL475:
 3367 020c 444B     		ldr	r3, .L199+16
 3368 020e 1870     		strb	r0, [r3]
 966:VS4210/monitor.c **** 		Printf("\r\nEEPROM  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3369              		.loc 1 966 0
 3370 0210 444B     		ldr	r3, .L199+20
 3371 0212 1C70     		strb	r4, [r3]
 967:VS4210/monitor.c **** 		}
 3372              		.loc 1 967 0
 3373 0214 2846     		mov	r0, r5
 3374 0216 FFF7FEFF 		bl	Asc2Bin
 3375              	.LVL476:
 3376 021a 0146     		mov	r1, r0
 3377 021c 4B48     		ldr	r0, .L199+60
 3378 021e 2246     		mov	r2, r4
 3379 0220 FFF7FEFF 		bl	Printf
 3380              	.LVL477:
 3381 0224 00F0BDBD 		b	.L139
 3382              	.LVL478:
 3383              	.L145:
 969:VS4210/monitor.c **** 		{
 3384              		.loc 1 969 0
 3385 0228 402B     		cmp	r3, #64
 3386 022a 18D1     		bne	.L146
 971:VS4210/monitor.c **** 		 MonIndex=Asc2Bin(argv[1]);
 3387              		.loc 1 971 0
 3388 022c 394D     		ldr	r5, .L199+4
 3389 022e 6868     		ldr	r0, [r5, #4]
 3390 0230 FFF7FEFF 		bl	Asc2Bin
 3391              	.LVL479:
 3392 0234 FFF7FEFF 		bl	VXISI2CRead
 3393              	.LVL480:
 3394 0238 0446     		mov	r4, r0
ARM GAS  /tmp/ccD8Q2iX.s 			page 102


 3395              	.LVL481:
 972:VS4210/monitor.c **** 		 MonWdata=ret;
 3396              		.loc 1 972 0
 3397 023a 6D68     		ldr	r5, [r5, #4]
 3398 023c 2846     		mov	r0, r5
 3399 023e FFF7FEFF 		bl	Asc2Bin
 3400              	.LVL482:
 3401 0242 374B     		ldr	r3, .L199+16
 3402 0244 1870     		strb	r0, [r3]
 973:VS4210/monitor.c **** 		 Printf("\r\nVS4210  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3403              		.loc 1 973 0
 3404 0246 374B     		ldr	r3, .L199+20
 3405 0248 1C70     		strb	r4, [r3]
 974:VS4210/monitor.c **** 		}
 3406              		.loc 1 974 0
 3407 024a 2846     		mov	r0, r5
 3408 024c FFF7FEFF 		bl	Asc2Bin
 3409              	.LVL483:
 3410 0250 0146     		mov	r1, r0
 3411 0252 3F48     		ldr	r0, .L199+64
 3412 0254 2246     		mov	r2, r4
 3413 0256 FFF7FEFF 		bl	Printf
 3414              	.LVL484:
 3415 025a 00F0A2BD 		b	.L139
 3416              	.LVL485:
 3417              	.L146:
 976:VS4210/monitor.c **** 		{
 3418              		.loc 1 976 0
 3419 025e 122B     		cmp	r3, #18
 3420 0260 18D1     		bne	.L147
 978:VS4210/monitor.c **** 		 MonIndex=Asc2Bin(argv[1]);
 3421              		.loc 1 978 0
 3422 0262 2C4D     		ldr	r5, .L199+4
 3423 0264 6868     		ldr	r0, [r5, #4]
 3424 0266 FFF7FEFF 		bl	Asc2Bin
 3425              	.LVL486:
 3426 026a FFF7FEFF 		bl	VS8812Read
 3427              	.LVL487:
 3428 026e 0446     		mov	r4, r0
 3429              	.LVL488:
 979:VS4210/monitor.c **** 		 MonWdata=ret;
 3430              		.loc 1 979 0
 3431 0270 6D68     		ldr	r5, [r5, #4]
 3432 0272 2846     		mov	r0, r5
 3433 0274 FFF7FEFF 		bl	Asc2Bin
 3434              	.LVL489:
 3435 0278 294B     		ldr	r3, .L199+16
 3436 027a 1870     		strb	r0, [r3]
 980:VS4210/monitor.c **** 		 Printf("\r\nVS8812  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3437              		.loc 1 980 0
 3438 027c 294B     		ldr	r3, .L199+20
 3439 027e 1C70     		strb	r4, [r3]
 981:VS4210/monitor.c **** 		}
 3440              		.loc 1 981 0
 3441 0280 2846     		mov	r0, r5
 3442 0282 FFF7FEFF 		bl	Asc2Bin
 3443              	.LVL490:
ARM GAS  /tmp/ccD8Q2iX.s 			page 103


 3444 0286 0146     		mov	r1, r0
 3445 0288 3248     		ldr	r0, .L199+68
 3446 028a 2246     		mov	r2, r4
 3447 028c FFF7FEFF 		bl	Printf
 3448              	.LVL491:
 3449 0290 00F087BD 		b	.L139
 3450              	.LVL492:
 3451              	.L147:
 995:VS4210/monitor.c **** 		{	
 3452              		.loc 1 995 0
 3453 0294 882B     		cmp	r3, #136
 3454 0296 18D1     		bne	.L148
 997:VS4210/monitor.c **** 		MonIndex=Asc2Bin(argv[1]);
 3455              		.loc 1 997 0
 3456 0298 1E4D     		ldr	r5, .L199+4
 3457 029a 6868     		ldr	r0, [r5, #4]
 3458 029c FFF7FEFF 		bl	Asc2Bin
 3459              	.LVL493:
 3460 02a0 FFF7FEFF 		bl	tp28xx_byte_read
 3461              	.LVL494:
 3462 02a4 0446     		mov	r4, r0
 3463              	.LVL495:
 998:VS4210/monitor.c **** 		MonWdata=ret;
 3464              		.loc 1 998 0
 3465 02a6 6D68     		ldr	r5, [r5, #4]
 3466 02a8 2846     		mov	r0, r5
 3467 02aa FFF7FEFF 		bl	Asc2Bin
 3468              	.LVL496:
 3469 02ae 1C4B     		ldr	r3, .L199+16
 3470 02b0 1870     		strb	r0, [r3]
 999:VS4210/monitor.c **** 		 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3471              		.loc 1 999 0
 3472 02b2 1C4B     		ldr	r3, .L199+20
 3473 02b4 1C70     		strb	r4, [r3]
1000:VS4210/monitor.c **** 		}
 3474              		.loc 1 1000 0
 3475 02b6 2846     		mov	r0, r5
 3476 02b8 FFF7FEFF 		bl	Asc2Bin
 3477              	.LVL497:
 3478 02bc 0146     		mov	r1, r0
 3479 02be 1D48     		ldr	r0, .L199+36
 3480 02c0 2246     		mov	r2, r4
 3481 02c2 FFF7FEFF 		bl	Printf
 3482              	.LVL498:
 3483 02c6 00F06CBD 		b	.L139
 3484              	.LVL499:
 3485              	.L148:
1002:VS4210/monitor.c **** 			{
 3486              		.loc 1 1002 0
 3487 02ca 902B     		cmp	r3, #144
 3488 02cc 1BD1     		bne	.L149
1004:VS4210/monitor.c **** 			ret= HDMIRX_ReadI2C_Byte(Asc2Bin(argv[1]));	  
 3489              		.loc 1 1004 0
 3490 02ce 0022     		movs	r2, #0
 3491 02d0 194B     		ldr	r3, .L199+40
 3492 02d2 1A70     		strb	r2, [r3]
1005:VS4210/monitor.c **** 			 MonIndex=Asc2Bin(argv[1]);
ARM GAS  /tmp/ccD8Q2iX.s 			page 104


 3493              		.loc 1 1005 0
 3494 02d4 0F4D     		ldr	r5, .L199+4
 3495 02d6 6868     		ldr	r0, [r5, #4]
 3496 02d8 FFF7FEFF 		bl	Asc2Bin
 3497              	.LVL500:
 3498 02dc FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 3499              	.LVL501:
 3500 02e0 0446     		mov	r4, r0
 3501              	.LVL502:
1006:VS4210/monitor.c **** 			 MonWdata=ret;
 3502              		.loc 1 1006 0
 3503 02e2 6D68     		ldr	r5, [r5, #4]
 3504 02e4 2846     		mov	r0, r5
 3505 02e6 FFF7FEFF 		bl	Asc2Bin
 3506              	.LVL503:
 3507 02ea 0D4B     		ldr	r3, .L199+16
 3508 02ec 1870     		strb	r0, [r3]
1007:VS4210/monitor.c **** 			 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3509              		.loc 1 1007 0
 3510 02ee 0D4B     		ldr	r3, .L199+20
 3511 02f0 1C70     		strb	r4, [r3]
1008:VS4210/monitor.c **** 			}
 3512              		.loc 1 1008 0
 3513 02f2 2846     		mov	r0, r5
 3514 02f4 FFF7FEFF 		bl	Asc2Bin
 3515              	.LVL504:
 3516 02f8 0146     		mov	r1, r0
 3517 02fa 1048     		ldr	r0, .L199+44
 3518 02fc 2246     		mov	r2, r4
 3519 02fe FFF7FEFF 		bl	Printf
 3520              	.LVL505:
 3521 0302 00F04EBD 		b	.L139
 3522              	.LVL506:
 3523              	.L149:
1012:VS4210/monitor.c **** 		}
 3524              		.loc 1 1012 0
 3525 0306 0E48     		ldr	r0, .L199+48
 3526 0308 FFF7FEFF 		bl	Printf
 3527              	.LVL507:
 3528 030c 00F049BD 		b	.L139
 3529              	.L200:
 3530              		.align	2
 3531              	.L199:
 3532 0310 00000000 		.word	.LANCHOR10
 3533 0314 00000000 		.word	argv
 3534 0318 50030000 		.word	.LC22
 3535 031c 00000000 		.word	.LANCHOR4
 3536 0320 00000000 		.word	MonIndex
 3537 0324 00000000 		.word	MonWdata
 3538 0328 6C000000 		.word	.LC4
 3539 032c 90000000 		.word	.LC5
 3540 0330 B4000000 		.word	.LC6
 3541 0334 D8000000 		.word	.LC7
 3542 0338 00000000 		.word	gHDMI_Index
 3543 033c FC000000 		.word	.LC8
 3544 0340 54030000 		.word	.LC23
 3545 0344 68030000 		.word	.LC24
ARM GAS  /tmp/ccD8Q2iX.s 			page 105


 3546 0348 6C030000 		.word	.LC25
 3547 034c 70030000 		.word	.LC26
 3548 0350 94030000 		.word	.LC27
 3549 0354 B8030000 		.word	.LC28
 3550              	.L144:
1029:VS4210/monitor.c **** 			//MonReadI2C();
 3551              		.loc 1 1029 0
 3552 0358 2046     		mov	r0, r4
 3553 035a FD49     		ldr	r1, .L201
 3554 035c FFF7FEFF 		bl	stricmp
 3555              	.LVL508:
 3556 0360 0028     		cmp	r0, #0
 3557 0362 40F07082 		bne	.L150
1034:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x03));
 3558              		.loc 1 1034 0
 3559 0366 0220     		movs	r0, #2
 3560 0368 FFF7FEFF 		bl	VXISI2CRead
 3561              	.LVL509:
 3562 036c 0146     		mov	r1, r0
 3563 036e F94C     		ldr	r4, .L201+4
 3564 0370 2046     		mov	r0, r4
 3565 0372 FFF7FEFF 		bl	Printf
 3566              	.LVL510:
1035:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x04));
 3567              		.loc 1 1035 0
 3568 0376 0320     		movs	r0, #3
 3569 0378 FFF7FEFF 		bl	VXISI2CRead
 3570              	.LVL511:
 3571 037c 0146     		mov	r1, r0
 3572 037e 2046     		mov	r0, r4
 3573 0380 FFF7FEFF 		bl	Printf
 3574              	.LVL512:
1036:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x05));
 3575              		.loc 1 1036 0
 3576 0384 0420     		movs	r0, #4
 3577 0386 FFF7FEFF 		bl	VXISI2CRead
 3578              	.LVL513:
 3579 038a 0146     		mov	r1, r0
 3580 038c 2046     		mov	r0, r4
 3581 038e FFF7FEFF 		bl	Printf
 3582              	.LVL514:
1037:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x06));
 3583              		.loc 1 1037 0
 3584 0392 0520     		movs	r0, #5
 3585 0394 FFF7FEFF 		bl	VXISI2CRead
 3586              	.LVL515:
 3587 0398 0146     		mov	r1, r0
 3588 039a 2046     		mov	r0, r4
 3589 039c FFF7FEFF 		bl	Printf
 3590              	.LVL516:
1038:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x07));
 3591              		.loc 1 1038 0
 3592 03a0 0620     		movs	r0, #6
 3593 03a2 FFF7FEFF 		bl	VXISI2CRead
 3594              	.LVL517:
 3595 03a6 0146     		mov	r1, r0
 3596 03a8 2046     		mov	r0, r4
ARM GAS  /tmp/ccD8Q2iX.s 			page 106


 3597 03aa FFF7FEFF 		bl	Printf
 3598              	.LVL518:
1039:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x08));
 3599              		.loc 1 1039 0
 3600 03ae 0720     		movs	r0, #7
 3601 03b0 FFF7FEFF 		bl	VXISI2CRead
 3602              	.LVL519:
 3603 03b4 0146     		mov	r1, r0
 3604 03b6 2046     		mov	r0, r4
 3605 03b8 FFF7FEFF 		bl	Printf
 3606              	.LVL520:
1040:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x09));
 3607              		.loc 1 1040 0
 3608 03bc 0820     		movs	r0, #8
 3609 03be FFF7FEFF 		bl	VXISI2CRead
 3610              	.LVL521:
 3611 03c2 0146     		mov	r1, r0
 3612 03c4 2046     		mov	r0, r4
 3613 03c6 FFF7FEFF 		bl	Printf
 3614              	.LVL522:
1041:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0A));
 3615              		.loc 1 1041 0
 3616 03ca 0920     		movs	r0, #9
 3617 03cc FFF7FEFF 		bl	VXISI2CRead
 3618              	.LVL523:
 3619 03d0 0146     		mov	r1, r0
 3620 03d2 2046     		mov	r0, r4
 3621 03d4 FFF7FEFF 		bl	Printf
 3622              	.LVL524:
1042:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0B));
 3623              		.loc 1 1042 0
 3624 03d8 0A20     		movs	r0, #10
 3625 03da FFF7FEFF 		bl	VXISI2CRead
 3626              	.LVL525:
 3627 03de 0146     		mov	r1, r0
 3628 03e0 2046     		mov	r0, r4
 3629 03e2 FFF7FEFF 		bl	Printf
 3630              	.LVL526:
1043:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0C));
 3631              		.loc 1 1043 0
 3632 03e6 0B20     		movs	r0, #11
 3633 03e8 FFF7FEFF 		bl	VXISI2CRead
 3634              	.LVL527:
 3635 03ec 0146     		mov	r1, r0
 3636 03ee 2046     		mov	r0, r4
 3637 03f0 FFF7FEFF 		bl	Printf
 3638              	.LVL528:
1044:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0D));
 3639              		.loc 1 1044 0
 3640 03f4 0C20     		movs	r0, #12
 3641 03f6 FFF7FEFF 		bl	VXISI2CRead
 3642              	.LVL529:
 3643 03fa 0146     		mov	r1, r0
 3644 03fc 2046     		mov	r0, r4
 3645 03fe FFF7FEFF 		bl	Printf
 3646              	.LVL530:
1045:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x10));
ARM GAS  /tmp/ccD8Q2iX.s 			page 107


 3647              		.loc 1 1045 0
 3648 0402 0D20     		movs	r0, #13
 3649 0404 FFF7FEFF 		bl	VXISI2CRead
 3650              	.LVL531:
 3651 0408 0146     		mov	r1, r0
 3652 040a 2046     		mov	r0, r4
 3653 040c FFF7FEFF 		bl	Printf
 3654              	.LVL532:
1046:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x11));
 3655              		.loc 1 1046 0
 3656 0410 1020     		movs	r0, #16
 3657 0412 FFF7FEFF 		bl	VXISI2CRead
 3658              	.LVL533:
 3659 0416 0146     		mov	r1, r0
 3660 0418 2046     		mov	r0, r4
 3661 041a FFF7FEFF 		bl	Printf
 3662              	.LVL534:
1047:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x15));
 3663              		.loc 1 1047 0
 3664 041e 1120     		movs	r0, #17
 3665 0420 FFF7FEFF 		bl	VXISI2CRead
 3666              	.LVL535:
 3667 0424 0146     		mov	r1, r0
 3668 0426 2046     		mov	r0, r4
 3669 0428 FFF7FEFF 		bl	Printf
 3670              	.LVL536:
1048:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x16));
 3671              		.loc 1 1048 0
 3672 042c 1520     		movs	r0, #21
 3673 042e FFF7FEFF 		bl	VXISI2CRead
 3674              	.LVL537:
 3675 0432 0146     		mov	r1, r0
 3676 0434 2046     		mov	r0, r4
 3677 0436 FFF7FEFF 		bl	Printf
 3678              	.LVL538:
1049:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x17));
 3679              		.loc 1 1049 0
 3680 043a 1620     		movs	r0, #22
 3681 043c FFF7FEFF 		bl	VXISI2CRead
 3682              	.LVL539:
 3683 0440 0146     		mov	r1, r0
 3684 0442 2046     		mov	r0, r4
 3685 0444 FFF7FEFF 		bl	Printf
 3686              	.LVL540:
1050:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x18));
 3687              		.loc 1 1050 0
 3688 0448 1720     		movs	r0, #23
 3689 044a FFF7FEFF 		bl	VXISI2CRead
 3690              	.LVL541:
 3691 044e 0146     		mov	r1, r0
 3692 0450 2046     		mov	r0, r4
 3693 0452 FFF7FEFF 		bl	Printf
 3694              	.LVL542:
1051:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x19));
 3695              		.loc 1 1051 0
 3696 0456 1820     		movs	r0, #24
 3697 0458 FFF7FEFF 		bl	VXISI2CRead
ARM GAS  /tmp/ccD8Q2iX.s 			page 108


 3698              	.LVL543:
 3699 045c 0146     		mov	r1, r0
 3700 045e 2046     		mov	r0, r4
 3701 0460 FFF7FEFF 		bl	Printf
 3702              	.LVL544:
1052:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1A));
 3703              		.loc 1 1052 0
 3704 0464 1920     		movs	r0, #25
 3705 0466 FFF7FEFF 		bl	VXISI2CRead
 3706              	.LVL545:
 3707 046a 0146     		mov	r1, r0
 3708 046c 2046     		mov	r0, r4
 3709 046e FFF7FEFF 		bl	Printf
 3710              	.LVL546:
1053:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1C));
 3711              		.loc 1 1053 0
 3712 0472 1A20     		movs	r0, #26
 3713 0474 FFF7FEFF 		bl	VXISI2CRead
 3714              	.LVL547:
 3715 0478 0146     		mov	r1, r0
 3716 047a 2046     		mov	r0, r4
 3717 047c FFF7FEFF 		bl	Printf
 3718              	.LVL548:
1054:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1D));
 3719              		.loc 1 1054 0
 3720 0480 1C20     		movs	r0, #28
 3721 0482 FFF7FEFF 		bl	VXISI2CRead
 3722              	.LVL549:
 3723 0486 0146     		mov	r1, r0
 3724 0488 2046     		mov	r0, r4
 3725 048a FFF7FEFF 		bl	Printf
 3726              	.LVL550:
1055:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1E));
 3727              		.loc 1 1055 0
 3728 048e 1D20     		movs	r0, #29
 3729 0490 FFF7FEFF 		bl	VXISI2CRead
 3730              	.LVL551:
 3731 0494 0146     		mov	r1, r0
 3732 0496 2046     		mov	r0, r4
 3733 0498 FFF7FEFF 		bl	Printf
 3734              	.LVL552:
1056:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x28));
 3735              		.loc 1 1056 0
 3736 049c 1E20     		movs	r0, #30
 3737 049e FFF7FEFF 		bl	VXISI2CRead
 3738              	.LVL553:
 3739 04a2 0146     		mov	r1, r0
 3740 04a4 2046     		mov	r0, r4
 3741 04a6 FFF7FEFF 		bl	Printf
 3742              	.LVL554:
1057:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x29));
 3743              		.loc 1 1057 0
 3744 04aa 2820     		movs	r0, #40
 3745 04ac FFF7FEFF 		bl	VXISI2CRead
 3746              	.LVL555:
 3747 04b0 0146     		mov	r1, r0
 3748 04b2 2046     		mov	r0, r4
ARM GAS  /tmp/ccD8Q2iX.s 			page 109


 3749 04b4 FFF7FEFF 		bl	Printf
 3750              	.LVL556:
1058:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2A));
 3751              		.loc 1 1058 0
 3752 04b8 2920     		movs	r0, #41
 3753 04ba FFF7FEFF 		bl	VXISI2CRead
 3754              	.LVL557:
 3755 04be 0146     		mov	r1, r0
 3756 04c0 2046     		mov	r0, r4
 3757 04c2 FFF7FEFF 		bl	Printf
 3758              	.LVL558:
1059:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2B));
 3759              		.loc 1 1059 0
 3760 04c6 2A20     		movs	r0, #42
 3761 04c8 FFF7FEFF 		bl	VXISI2CRead
 3762              	.LVL559:
 3763 04cc 0146     		mov	r1, r0
 3764 04ce 2046     		mov	r0, r4
 3765 04d0 FFF7FEFF 		bl	Printf
 3766              	.LVL560:
1060:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2C));
 3767              		.loc 1 1060 0
 3768 04d4 2B20     		movs	r0, #43
 3769 04d6 FFF7FEFF 		bl	VXISI2CRead
 3770              	.LVL561:
 3771 04da 0146     		mov	r1, r0
 3772 04dc 2046     		mov	r0, r4
 3773 04de FFF7FEFF 		bl	Printf
 3774              	.LVL562:
1061:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2D));
 3775              		.loc 1 1061 0
 3776 04e2 2C20     		movs	r0, #44
 3777 04e4 FFF7FEFF 		bl	VXISI2CRead
 3778              	.LVL563:
 3779 04e8 0146     		mov	r1, r0
 3780 04ea 2046     		mov	r0, r4
 3781 04ec FFF7FEFF 		bl	Printf
 3782              	.LVL564:
1062:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x74));
 3783              		.loc 1 1062 0
 3784 04f0 2D20     		movs	r0, #45
 3785 04f2 FFF7FEFF 		bl	VXISI2CRead
 3786              	.LVL565:
 3787 04f6 0146     		mov	r1, r0
 3788 04f8 2046     		mov	r0, r4
 3789 04fa FFF7FEFF 		bl	Printf
 3790              	.LVL566:
1063:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x7E));
 3791              		.loc 1 1063 0
 3792 04fe 7420     		movs	r0, #116
 3793 0500 FFF7FEFF 		bl	VXISI2CRead
 3794              	.LVL567:
 3795 0504 0146     		mov	r1, r0
 3796 0506 2046     		mov	r0, r4
 3797 0508 FFF7FEFF 		bl	Printf
 3798              	.LVL568:
1064:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x7F));
ARM GAS  /tmp/ccD8Q2iX.s 			page 110


 3799              		.loc 1 1064 0
 3800 050c 7E20     		movs	r0, #126
 3801 050e FFF7FEFF 		bl	VXISI2CRead
 3802              	.LVL569:
 3803 0512 0146     		mov	r1, r0
 3804 0514 2046     		mov	r0, r4
 3805 0516 FFF7FEFF 		bl	Printf
 3806              	.LVL570:
1065:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x80));
 3807              		.loc 1 1065 0
 3808 051a 7F20     		movs	r0, #127
 3809 051c FFF7FEFF 		bl	VXISI2CRead
 3810              	.LVL571:
 3811 0520 0146     		mov	r1, r0
 3812 0522 2046     		mov	r0, r4
 3813 0524 FFF7FEFF 		bl	Printf
 3814              	.LVL572:
1066:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x81));
 3815              		.loc 1 1066 0
 3816 0528 8020     		movs	r0, #128
 3817 052a FFF7FEFF 		bl	VXISI2CRead
 3818              	.LVL573:
 3819 052e 0146     		mov	r1, r0
 3820 0530 2046     		mov	r0, r4
 3821 0532 FFF7FEFF 		bl	Printf
 3822              	.LVL574:
1067:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x82));
 3823              		.loc 1 1067 0
 3824 0536 8120     		movs	r0, #129
 3825 0538 FFF7FEFF 		bl	VXISI2CRead
 3826              	.LVL575:
 3827 053c 0146     		mov	r1, r0
 3828 053e 2046     		mov	r0, r4
 3829 0540 FFF7FEFF 		bl	Printf
 3830              	.LVL576:
1068:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x83));
 3831              		.loc 1 1068 0
 3832 0544 8220     		movs	r0, #130
 3833 0546 FFF7FEFF 		bl	VXISI2CRead
 3834              	.LVL577:
 3835 054a 0146     		mov	r1, r0
 3836 054c 2046     		mov	r0, r4
 3837 054e FFF7FEFF 		bl	Printf
 3838              	.LVL578:
1069:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x84));
 3839              		.loc 1 1069 0
 3840 0552 8320     		movs	r0, #131
 3841 0554 FFF7FEFF 		bl	VXISI2CRead
 3842              	.LVL579:
 3843 0558 0146     		mov	r1, r0
 3844 055a 2046     		mov	r0, r4
 3845 055c FFF7FEFF 		bl	Printf
 3846              	.LVL580:
1070:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x85));
 3847              		.loc 1 1070 0
 3848 0560 8420     		movs	r0, #132
 3849 0562 FFF7FEFF 		bl	VXISI2CRead
ARM GAS  /tmp/ccD8Q2iX.s 			page 111


 3850              	.LVL581:
 3851 0566 0146     		mov	r1, r0
 3852 0568 2046     		mov	r0, r4
 3853 056a FFF7FEFF 		bl	Printf
 3854              	.LVL582:
1071:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x86));
 3855              		.loc 1 1071 0
 3856 056e 8520     		movs	r0, #133
 3857 0570 FFF7FEFF 		bl	VXISI2CRead
 3858              	.LVL583:
 3859 0574 0146     		mov	r1, r0
 3860 0576 2046     		mov	r0, r4
 3861 0578 FFF7FEFF 		bl	Printf
 3862              	.LVL584:
1072:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x87));
 3863              		.loc 1 1072 0
 3864 057c 8620     		movs	r0, #134
 3865 057e FFF7FEFF 		bl	VXISI2CRead
 3866              	.LVL585:
 3867 0582 0146     		mov	r1, r0
 3868 0584 2046     		mov	r0, r4
 3869 0586 FFF7FEFF 		bl	Printf
 3870              	.LVL586:
1073:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x88));
 3871              		.loc 1 1073 0
 3872 058a 8720     		movs	r0, #135
 3873 058c FFF7FEFF 		bl	VXISI2CRead
 3874              	.LVL587:
 3875 0590 0146     		mov	r1, r0
 3876 0592 2046     		mov	r0, r4
 3877 0594 FFF7FEFF 		bl	Printf
 3878              	.LVL588:
1074:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x89));
 3879              		.loc 1 1074 0
 3880 0598 8820     		movs	r0, #136
 3881 059a FFF7FEFF 		bl	VXISI2CRead
 3882              	.LVL589:
 3883 059e 0146     		mov	r1, r0
 3884 05a0 2046     		mov	r0, r4
 3885 05a2 FFF7FEFF 		bl	Printf
 3886              	.LVL590:
1075:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8A));
 3887              		.loc 1 1075 0
 3888 05a6 8920     		movs	r0, #137
 3889 05a8 FFF7FEFF 		bl	VXISI2CRead
 3890              	.LVL591:
 3891 05ac 0146     		mov	r1, r0
 3892 05ae 2046     		mov	r0, r4
 3893 05b0 FFF7FEFF 		bl	Printf
 3894              	.LVL592:
1076:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8B));
 3895              		.loc 1 1076 0
 3896 05b4 8A20     		movs	r0, #138
 3897 05b6 FFF7FEFF 		bl	VXISI2CRead
 3898              	.LVL593:
 3899 05ba 0146     		mov	r1, r0
 3900 05bc 2046     		mov	r0, r4
ARM GAS  /tmp/ccD8Q2iX.s 			page 112


 3901 05be FFF7FEFF 		bl	Printf
 3902              	.LVL594:
1077:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8C));
 3903              		.loc 1 1077 0
 3904 05c2 8B20     		movs	r0, #139
 3905 05c4 FFF7FEFF 		bl	VXISI2CRead
 3906              	.LVL595:
 3907 05c8 0146     		mov	r1, r0
 3908 05ca 2046     		mov	r0, r4
 3909 05cc FFF7FEFF 		bl	Printf
 3910              	.LVL596:
1078:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8D));
 3911              		.loc 1 1078 0
 3912 05d0 8C20     		movs	r0, #140
 3913 05d2 FFF7FEFF 		bl	VXISI2CRead
 3914              	.LVL597:
 3915 05d6 0146     		mov	r1, r0
 3916 05d8 2046     		mov	r0, r4
 3917 05da FFF7FEFF 		bl	Printf
 3918              	.LVL598:
1079:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8E));
 3919              		.loc 1 1079 0
 3920 05de 8D20     		movs	r0, #141
 3921 05e0 FFF7FEFF 		bl	VXISI2CRead
 3922              	.LVL599:
 3923 05e4 0146     		mov	r1, r0
 3924 05e6 2046     		mov	r0, r4
 3925 05e8 FFF7FEFF 		bl	Printf
 3926              	.LVL600:
1080:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8F));
 3927              		.loc 1 1080 0
 3928 05ec 8E20     		movs	r0, #142
 3929 05ee FFF7FEFF 		bl	VXISI2CRead
 3930              	.LVL601:
 3931 05f2 0146     		mov	r1, r0
 3932 05f4 2046     		mov	r0, r4
 3933 05f6 FFF7FEFF 		bl	Printf
 3934              	.LVL602:
1081:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x90));
 3935              		.loc 1 1081 0
 3936 05fa 8F20     		movs	r0, #143
 3937 05fc FFF7FEFF 		bl	VXISI2CRead
 3938              	.LVL603:
 3939 0600 0146     		mov	r1, r0
 3940 0602 2046     		mov	r0, r4
 3941 0604 FFF7FEFF 		bl	Printf
 3942              	.LVL604:
1082:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x91));
 3943              		.loc 1 1082 0
 3944 0608 9020     		movs	r0, #144
 3945 060a FFF7FEFF 		bl	VXISI2CRead
 3946              	.LVL605:
 3947 060e 0146     		mov	r1, r0
 3948 0610 2046     		mov	r0, r4
 3949 0612 FFF7FEFF 		bl	Printf
 3950              	.LVL606:
1083:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x92));
ARM GAS  /tmp/ccD8Q2iX.s 			page 113


 3951              		.loc 1 1083 0
 3952 0616 9120     		movs	r0, #145
 3953 0618 FFF7FEFF 		bl	VXISI2CRead
 3954              	.LVL607:
 3955 061c 0146     		mov	r1, r0
 3956 061e 2046     		mov	r0, r4
 3957 0620 FFF7FEFF 		bl	Printf
 3958              	.LVL608:
1084:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x93));
 3959              		.loc 1 1084 0
 3960 0624 9220     		movs	r0, #146
 3961 0626 FFF7FEFF 		bl	VXISI2CRead
 3962              	.LVL609:
 3963 062a 0146     		mov	r1, r0
 3964 062c 2046     		mov	r0, r4
 3965 062e FFF7FEFF 		bl	Printf
 3966              	.LVL610:
1085:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x94));
 3967              		.loc 1 1085 0
 3968 0632 9320     		movs	r0, #147
 3969 0634 FFF7FEFF 		bl	VXISI2CRead
 3970              	.LVL611:
 3971 0638 0146     		mov	r1, r0
 3972 063a 2046     		mov	r0, r4
 3973 063c FFF7FEFF 		bl	Printf
 3974              	.LVL612:
1086:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x95));
 3975              		.loc 1 1086 0
 3976 0640 9420     		movs	r0, #148
 3977 0642 FFF7FEFF 		bl	VXISI2CRead
 3978              	.LVL613:
 3979 0646 0146     		mov	r1, r0
 3980 0648 2046     		mov	r0, r4
 3981 064a FFF7FEFF 		bl	Printf
 3982              	.LVL614:
1087:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x97));
 3983              		.loc 1 1087 0
 3984 064e 9520     		movs	r0, #149
 3985 0650 FFF7FEFF 		bl	VXISI2CRead
 3986              	.LVL615:
 3987 0654 0146     		mov	r1, r0
 3988 0656 2046     		mov	r0, r4
 3989 0658 FFF7FEFF 		bl	Printf
 3990              	.LVL616:
1088:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x98));
 3991              		.loc 1 1088 0
 3992 065c 9720     		movs	r0, #151
 3993 065e FFF7FEFF 		bl	VXISI2CRead
 3994              	.LVL617:
 3995 0662 0146     		mov	r1, r0
 3996 0664 2046     		mov	r0, r4
 3997 0666 FFF7FEFF 		bl	Printf
 3998              	.LVL618:
1089:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x99));
 3999              		.loc 1 1089 0
 4000 066a 9820     		movs	r0, #152
 4001 066c FFF7FEFF 		bl	VXISI2CRead
ARM GAS  /tmp/ccD8Q2iX.s 			page 114


 4002              	.LVL619:
 4003 0670 0146     		mov	r1, r0
 4004 0672 2046     		mov	r0, r4
 4005 0674 FFF7FEFF 		bl	Printf
 4006              	.LVL620:
1090:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9B));
 4007              		.loc 1 1090 0
 4008 0678 9920     		movs	r0, #153
 4009 067a FFF7FEFF 		bl	VXISI2CRead
 4010              	.LVL621:
 4011 067e 0146     		mov	r1, r0
 4012 0680 2046     		mov	r0, r4
 4013 0682 FFF7FEFF 		bl	Printf
 4014              	.LVL622:
1091:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9C));
 4015              		.loc 1 1091 0
 4016 0686 9B20     		movs	r0, #155
 4017 0688 FFF7FEFF 		bl	VXISI2CRead
 4018              	.LVL623:
 4019 068c 0146     		mov	r1, r0
 4020 068e 2046     		mov	r0, r4
 4021 0690 FFF7FEFF 		bl	Printf
 4022              	.LVL624:
1092:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9D));
 4023              		.loc 1 1092 0
 4024 0694 9C20     		movs	r0, #156
 4025 0696 FFF7FEFF 		bl	VXISI2CRead
 4026              	.LVL625:
 4027 069a 0146     		mov	r1, r0
 4028 069c 2046     		mov	r0, r4
 4029 069e FFF7FEFF 		bl	Printf
 4030              	.LVL626:
1093:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9E));
 4031              		.loc 1 1093 0
 4032 06a2 9D20     		movs	r0, #157
 4033 06a4 FFF7FEFF 		bl	VXISI2CRead
 4034              	.LVL627:
 4035 06a8 0146     		mov	r1, r0
 4036 06aa 2046     		mov	r0, r4
 4037 06ac FFF7FEFF 		bl	Printf
 4038              	.LVL628:
1094:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9F));
 4039              		.loc 1 1094 0
 4040 06b0 9E20     		movs	r0, #158
 4041 06b2 FFF7FEFF 		bl	VXISI2CRead
 4042              	.LVL629:
 4043 06b6 0146     		mov	r1, r0
 4044 06b8 2046     		mov	r0, r4
 4045 06ba FFF7FEFF 		bl	Printf
 4046              	.LVL630:
1095:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA0));
 4047              		.loc 1 1095 0
 4048 06be 9F20     		movs	r0, #159
 4049 06c0 FFF7FEFF 		bl	VXISI2CRead
 4050              	.LVL631:
 4051 06c4 0146     		mov	r1, r0
 4052 06c6 2046     		mov	r0, r4
ARM GAS  /tmp/ccD8Q2iX.s 			page 115


 4053 06c8 FFF7FEFF 		bl	Printf
 4054              	.LVL632:
1096:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA1));
 4055              		.loc 1 1096 0
 4056 06cc A020     		movs	r0, #160
 4057 06ce FFF7FEFF 		bl	VXISI2CRead
 4058              	.LVL633:
 4059 06d2 0146     		mov	r1, r0
 4060 06d4 2046     		mov	r0, r4
 4061 06d6 FFF7FEFF 		bl	Printf
 4062              	.LVL634:
1097:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA2));
 4063              		.loc 1 1097 0
 4064 06da A120     		movs	r0, #161
 4065 06dc FFF7FEFF 		bl	VXISI2CRead
 4066              	.LVL635:
 4067 06e0 0146     		mov	r1, r0
 4068 06e2 2046     		mov	r0, r4
 4069 06e4 FFF7FEFF 		bl	Printf
 4070              	.LVL636:
1098:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA3));
 4071              		.loc 1 1098 0
 4072 06e8 A220     		movs	r0, #162
 4073 06ea FFF7FEFF 		bl	VXISI2CRead
 4074              	.LVL637:
 4075 06ee 0146     		mov	r1, r0
 4076 06f0 2046     		mov	r0, r4
 4077 06f2 FFF7FEFF 		bl	Printf
 4078              	.LVL638:
1099:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA4));
 4079              		.loc 1 1099 0
 4080 06f6 A320     		movs	r0, #163
 4081 06f8 FFF7FEFF 		bl	VXISI2CRead
 4082              	.LVL639:
 4083 06fc 0146     		mov	r1, r0
 4084 06fe 2046     		mov	r0, r4
 4085 0700 FFF7FEFF 		bl	Printf
 4086              	.LVL640:
1100:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA5));
 4087              		.loc 1 1100 0
 4088 0704 A420     		movs	r0, #164
 4089 0706 FFF7FEFF 		bl	VXISI2CRead
 4090              	.LVL641:
 4091 070a 0146     		mov	r1, r0
 4092 070c 2046     		mov	r0, r4
 4093 070e FFF7FEFF 		bl	Printf
 4094              	.LVL642:
1101:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA6));
 4095              		.loc 1 1101 0
 4096 0712 A520     		movs	r0, #165
 4097 0714 FFF7FEFF 		bl	VXISI2CRead
 4098              	.LVL643:
 4099 0718 0146     		mov	r1, r0
 4100 071a 2046     		mov	r0, r4
 4101 071c FFF7FEFF 		bl	Printf
 4102              	.LVL644:
1102:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA7));
ARM GAS  /tmp/ccD8Q2iX.s 			page 116


 4103              		.loc 1 1102 0
 4104 0720 A620     		movs	r0, #166
 4105 0722 FFF7FEFF 		bl	VXISI2CRead
 4106              	.LVL645:
 4107 0726 0146     		mov	r1, r0
 4108 0728 2046     		mov	r0, r4
 4109 072a FFF7FEFF 		bl	Printf
 4110              	.LVL646:
1103:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA8));
 4111              		.loc 1 1103 0
 4112 072e A720     		movs	r0, #167
 4113 0730 FFF7FEFF 		bl	VXISI2CRead
 4114              	.LVL647:
 4115 0734 0146     		mov	r1, r0
 4116 0736 2046     		mov	r0, r4
 4117 0738 FFF7FEFF 		bl	Printf
 4118              	.LVL648:
1104:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA9));
 4119              		.loc 1 1104 0
 4120 073c A820     		movs	r0, #168
 4121 073e FFF7FEFF 		bl	VXISI2CRead
 4122              	.LVL649:
 4123 0742 0146     		mov	r1, r0
 4124 0744 2046     		mov	r0, r4
 4125 0746 FFF7FEFF 		bl	Printf
 4126              	.LVL650:
1105:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAA));
 4127              		.loc 1 1105 0
 4128 074a A920     		movs	r0, #169
 4129 074c 04E0     		b	.L202
 4130              	.L203:
 4131 074e 00BF     		.align	2
 4132              	.L201:
 4133 0750 DC030000 		.word	.LC29
 4134 0754 E0030000 		.word	.LC30
 4135              	.L202:
 4136 0758 FFF7FEFF 		bl	VXISI2CRead
 4137              	.LVL651:
 4138 075c 0146     		mov	r1, r0
 4139 075e 2046     		mov	r0, r4
 4140 0760 FFF7FEFF 		bl	Printf
 4141              	.LVL652:
1106:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAB));
 4142              		.loc 1 1106 0
 4143 0764 AA20     		movs	r0, #170
 4144 0766 FFF7FEFF 		bl	VXISI2CRead
 4145              	.LVL653:
 4146 076a 0146     		mov	r1, r0
 4147 076c 2046     		mov	r0, r4
 4148 076e FFF7FEFF 		bl	Printf
 4149              	.LVL654:
1107:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAF));
 4150              		.loc 1 1107 0
 4151 0772 AB20     		movs	r0, #171
 4152 0774 FFF7FEFF 		bl	VXISI2CRead
 4153              	.LVL655:
 4154 0778 0146     		mov	r1, r0
ARM GAS  /tmp/ccD8Q2iX.s 			page 117


 4155 077a 2046     		mov	r0, r4
 4156 077c FFF7FEFF 		bl	Printf
 4157              	.LVL656:
1108:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xC0));
 4158              		.loc 1 1108 0
 4159 0780 AF20     		movs	r0, #175
 4160 0782 FFF7FEFF 		bl	VXISI2CRead
 4161              	.LVL657:
 4162 0786 0146     		mov	r1, r0
 4163 0788 2046     		mov	r0, r4
 4164 078a FFF7FEFF 		bl	Printf
 4165              	.LVL658:
1109:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD6));
 4166              		.loc 1 1109 0
 4167 078e C020     		movs	r0, #192
 4168 0790 FFF7FEFF 		bl	VXISI2CRead
 4169              	.LVL659:
 4170 0794 0146     		mov	r1, r0
 4171 0796 2046     		mov	r0, r4
 4172 0798 FFF7FEFF 		bl	Printf
 4173              	.LVL660:
1110:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD7));
 4174              		.loc 1 1110 0
 4175 079c D620     		movs	r0, #214
 4176 079e FFF7FEFF 		bl	VXISI2CRead
 4177              	.LVL661:
 4178 07a2 0146     		mov	r1, r0
 4179 07a4 2046     		mov	r0, r4
 4180 07a6 FFF7FEFF 		bl	Printf
 4181              	.LVL662:
1111:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD8));
 4182              		.loc 1 1111 0
 4183 07aa D720     		movs	r0, #215
 4184 07ac FFF7FEFF 		bl	VXISI2CRead
 4185              	.LVL663:
 4186 07b0 0146     		mov	r1, r0
 4187 07b2 2046     		mov	r0, r4
 4188 07b4 FFF7FEFF 		bl	Printf
 4189              	.LVL664:
1112:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE6));
 4190              		.loc 1 1112 0
 4191 07b8 D820     		movs	r0, #216
 4192 07ba FFF7FEFF 		bl	VXISI2CRead
 4193              	.LVL665:
 4194 07be 0146     		mov	r1, r0
 4195 07c0 2046     		mov	r0, r4
 4196 07c2 FFF7FEFF 		bl	Printf
 4197              	.LVL666:
1113:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE7));
 4198              		.loc 1 1113 0
 4199 07c6 E620     		movs	r0, #230
 4200 07c8 FFF7FEFF 		bl	VXISI2CRead
 4201              	.LVL667:
 4202 07cc 0146     		mov	r1, r0
 4203 07ce 2046     		mov	r0, r4
 4204 07d0 FFF7FEFF 		bl	Printf
 4205              	.LVL668:
ARM GAS  /tmp/ccD8Q2iX.s 			page 118


1114:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE8));
 4206              		.loc 1 1114 0
 4207 07d4 E720     		movs	r0, #231
 4208 07d6 FFF7FEFF 		bl	VXISI2CRead
 4209              	.LVL669:
 4210 07da 0146     		mov	r1, r0
 4211 07dc 2046     		mov	r0, r4
 4212 07de FFF7FEFF 		bl	Printf
 4213              	.LVL670:
1115:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE9));
 4214              		.loc 1 1115 0
 4215 07e2 E820     		movs	r0, #232
 4216 07e4 FFF7FEFF 		bl	VXISI2CRead
 4217              	.LVL671:
 4218 07e8 0146     		mov	r1, r0
 4219 07ea 2046     		mov	r0, r4
 4220 07ec FFF7FEFF 		bl	Printf
 4221              	.LVL672:
1116:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEA));
 4222              		.loc 1 1116 0
 4223 07f0 E920     		movs	r0, #233
 4224 07f2 FFF7FEFF 		bl	VXISI2CRead
 4225              	.LVL673:
 4226 07f6 0146     		mov	r1, r0
 4227 07f8 2046     		mov	r0, r4
 4228 07fa FFF7FEFF 		bl	Printf
 4229              	.LVL674:
1117:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEB));
 4230              		.loc 1 1117 0
 4231 07fe EA20     		movs	r0, #234
 4232 0800 FFF7FEFF 		bl	VXISI2CRead
 4233              	.LVL675:
 4234 0804 0146     		mov	r1, r0
 4235 0806 2046     		mov	r0, r4
 4236 0808 FFF7FEFF 		bl	Printf
 4237              	.LVL676:
1118:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEC));
 4238              		.loc 1 1118 0
 4239 080c EB20     		movs	r0, #235
 4240 080e FFF7FEFF 		bl	VXISI2CRead
 4241              	.LVL677:
 4242 0812 0146     		mov	r1, r0
 4243 0814 2046     		mov	r0, r4
 4244 0816 FFF7FEFF 		bl	Printf
 4245              	.LVL678:
1119:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xED));
 4246              		.loc 1 1119 0
 4247 081a EC20     		movs	r0, #236
 4248 081c FFF7FEFF 		bl	VXISI2CRead
 4249              	.LVL679:
 4250 0820 0146     		mov	r1, r0
 4251 0822 2046     		mov	r0, r4
 4252 0824 FFF7FEFF 		bl	Printf
 4253              	.LVL680:
1120:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEE));
 4254              		.loc 1 1120 0
 4255 0828 ED20     		movs	r0, #237
ARM GAS  /tmp/ccD8Q2iX.s 			page 119


 4256 082a FFF7FEFF 		bl	VXISI2CRead
 4257              	.LVL681:
 4258 082e 0146     		mov	r1, r0
 4259 0830 2046     		mov	r0, r4
 4260 0832 FFF7FEFF 		bl	Printf
 4261              	.LVL682:
1121:VS4210/monitor.c **** 
 4262              		.loc 1 1121 0
 4263 0836 EE20     		movs	r0, #238
 4264 0838 FFF7FEFF 		bl	VXISI2CRead
 4265              	.LVL683:
 4266 083c 0146     		mov	r1, r0
 4267 083e 2046     		mov	r0, r4
 4268 0840 FFF7FEFF 		bl	Printf
 4269              	.LVL684:
 4270 0844 ADE2     		b	.L139
 4271              	.L150:
1124:VS4210/monitor.c **** 		    VXISI2CWrite(Asc2Bin(argv[1]), Asc2Bin(argv[2]));   
 4272              		.loc 1 1124 0
 4273 0846 2046     		mov	r0, r4
 4274 0848 A949     		ldr	r1, .L204
 4275 084a FFF7FEFF 		bl	stricmp
 4276              	.LVL685:
 4277 084e D0B9     		cbnz	r0, .L151
1125:VS4210/monitor.c **** 	  ret= VXISI2CRead(Asc2Bin(argv[1]));   
 4278              		.loc 1 1125 0
 4279 0850 A84C     		ldr	r4, .L204+4
 4280 0852 6068     		ldr	r0, [r4, #4]
 4281 0854 FFF7FEFF 		bl	Asc2Bin
 4282              	.LVL686:
 4283 0858 0546     		mov	r5, r0
 4284 085a A068     		ldr	r0, [r4, #8]
 4285 085c FFF7FEFF 		bl	Asc2Bin
 4286              	.LVL687:
 4287 0860 0146     		mov	r1, r0
 4288 0862 2846     		mov	r0, r5
 4289 0864 FFF7FEFF 		bl	VXISI2CWrite
 4290              	.LVL688:
1126:VS4210/monitor.c **** 	Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);				
 4291              		.loc 1 1126 0
 4292 0868 6068     		ldr	r0, [r4, #4]
 4293 086a FFF7FEFF 		bl	Asc2Bin
 4294              	.LVL689:
 4295 086e FFF7FEFF 		bl	VXISI2CRead
 4296              	.LVL690:
 4297 0872 0546     		mov	r5, r0
 4298              	.LVL691:
1127:VS4210/monitor.c **** 		}
 4299              		.loc 1 1127 0
 4300 0874 6068     		ldr	r0, [r4, #4]
 4301 0876 FFF7FEFF 		bl	Asc2Bin
 4302              	.LVL692:
 4303 087a 0146     		mov	r1, r0
 4304 087c 9E48     		ldr	r0, .L204+8
 4305 087e 2A46     		mov	r2, r5
 4306 0880 FFF7FEFF 		bl	Printf
 4307              	.LVL693:
ARM GAS  /tmp/ccD8Q2iX.s 			page 120


 4308 0884 8DE2     		b	.L139
 4309              	.LVL694:
 4310              	.L151:
1129:VS4210/monitor.c **** 		indirect=0;
 4311              		.loc 1 1129 0
 4312 0886 2046     		mov	r0, r4
 4313 0888 9C49     		ldr	r1, .L204+12
 4314 088a FFF7FEFF 		bl	stricmp
 4315              	.LVL695:
 4316 088e 0028     		cmp	r0, #0
 4317 0890 00F08782 		beq	.L139
1133:VS4210/monitor.c **** 		 ret=Asc2Bin(argv[1]); 
 4318              		.loc 1 1133 0
 4319 0894 2046     		mov	r0, r4
 4320 0896 9A49     		ldr	r1, .L204+16
 4321 0898 FFF7FEFF 		bl	stricmp
 4322              	.LVL696:
 4323 089c 60B9     		cbnz	r0, .L152
1134:VS4210/monitor.c **** 		Printf("\r\nChange I2C addr. from %02x to %02x",(WORD)Monitor_I2C,(WORD)ret);		
 4324              		.loc 1 1134 0
 4325 089e 954B     		ldr	r3, .L204+4
 4326 08a0 5868     		ldr	r0, [r3, #4]
 4327 08a2 FFF7FEFF 		bl	Asc2Bin
 4328              	.LVL697:
 4329 08a6 0546     		mov	r5, r0
 4330              	.LVL698:
1135:VS4210/monitor.c **** 		Monitor_I2C=ret;
 4331              		.loc 1 1135 0
 4332 08a8 964C     		ldr	r4, .L204+20
 4333 08aa 9748     		ldr	r0, .L204+24
 4334 08ac 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4335 08ae 2A46     		mov	r2, r5
 4336 08b0 FFF7FEFF 		bl	Printf
 4337              	.LVL699:
1136:VS4210/monitor.c **** 		}
 4338              		.loc 1 1136 0
 4339 08b4 2570     		strb	r5, [r4]
 4340 08b6 74E2     		b	.L139
 4341              	.LVL700:
 4342              	.L152:
1138:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
 4343              		.loc 1 1138 0
 4344 08b8 2046     		mov	r0, r4
 4345 08ba 9449     		ldr	r1, .L204+28
 4346 08bc FFF7FEFF 		bl	stricmp
 4347              	.LVL701:
 4348 08c0 18B9     		cbnz	r0, .L153
1139:VS4210/monitor.c **** 		}
 4349              		.loc 1 1139 0
 4350 08c2 0022     		movs	r2, #0
 4351 08c4 924B     		ldr	r3, .L204+32
 4352 08c6 1A70     		strb	r2, [r3]
 4353 08c8 6BE2     		b	.L139
 4354              	.L153:
1141:VS4210/monitor.c **** 		WORD s,e;	//20201211-03
 4355              		.loc 1 1141 0
 4356 08ca 2046     		mov	r0, r4
ARM GAS  /tmp/ccD8Q2iX.s 			page 121


 4357 08cc 9149     		ldr	r1, .L204+36
 4358 08ce FFF7FEFF 		bl	stricmp
 4359              	.LVL702:
 4360 08d2 0028     		cmp	r0, #0
 4361 08d4 65D1     		bne	.L154
 4362              	.LBB2:
1144:VS4210/monitor.c **** 		 e=Asc2Bin(argv[2]); 
 4363              		.loc 1 1144 0
 4364 08d6 874D     		ldr	r5, .L204+4
 4365 08d8 6868     		ldr	r0, [r5, #4]
 4366 08da FFF7FEFF 		bl	Asc2Bin
 4367              	.LVL703:
 4368 08de 0446     		mov	r4, r0
 4369              	.LVL704:
1145:VS4210/monitor.c **** 
 4370              		.loc 1 1145 0
 4371 08e0 A868     		ldr	r0, [r5, #8]
 4372              	.LVL705:
 4373 08e2 FFF7FEFF 		bl	Asc2Bin
 4374              	.LVL706:
 4375 08e6 0546     		mov	r5, r0
 4376              	.LVL707:
1148:VS4210/monitor.c **** 			 {
 4377              		.loc 1 1148 0
 4378 08e8 864B     		ldr	r3, .L204+20
 4379 08ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4380 08ec A02B     		cmp	r3, #160
 4381 08ee 03D1     		bne	.L155
1150:VS4210/monitor.c **** 			 }
 4382              		.loc 1 1150 0
 4383 08f0 8948     		ldr	r0, .L204+40
 4384              	.LVL708:
 4385 08f2 FFF7FEFF 		bl	Printf
 4386              	.LVL709:
 4387 08f6 51E0     		b	.L159
 4388              	.LVL710:
 4389              	.L155:
1152:VS4210/monitor.c **** 			 {
 4390              		.loc 1 1152 0
 4391 08f8 402B     		cmp	r3, #64
 4392 08fa 03D1     		bne	.L157
1154:VS4210/monitor.c **** 			 }
 4393              		.loc 1 1154 0
 4394 08fc 8748     		ldr	r0, .L204+44
 4395              	.LVL711:
 4396 08fe FFF7FEFF 		bl	Printf
 4397              	.LVL712:
 4398 0902 4BE0     		b	.L159
 4399              	.LVL713:
 4400              	.L157:
1156:VS4210/monitor.c **** 			 {
 4401              		.loc 1 1156 0
 4402 0904 122B     		cmp	r3, #18
 4403 0906 03D1     		bne	.L158
1158:VS4210/monitor.c **** 			 }
 4404              		.loc 1 1158 0
 4405 0908 8548     		ldr	r0, .L204+48
ARM GAS  /tmp/ccD8Q2iX.s 			page 122


 4406              	.LVL714:
 4407 090a FFF7FEFF 		bl	Printf
 4408              	.LVL715:
 4409 090e 45E0     		b	.L159
 4410              	.LVL716:
 4411              	.L158:
1160:VS4210/monitor.c **** 			 {
 4412              		.loc 1 1160 0
 4413 0910 902B     		cmp	r3, #144
 4414 0912 43D1     		bne	.L159
1162:VS4210/monitor.c **** 			 }		 
 4415              		.loc 1 1162 0
 4416 0914 8348     		ldr	r0, .L204+52
 4417              	.LVL717:
 4418 0916 FFF7FEFF 		bl	Printf
 4419              	.LVL718:
 4420 091a 3FE0     		b	.L159
 4421              	.L166:
1167:VS4210/monitor.c **** 			 {
 4422              		.loc 1 1167 0
 4423 091c 794B     		ldr	r3, .L204+20
 4424 091e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4425 0920 A02B     		cmp	r3, #160
 4426 0922 08D1     		bne	.L160
1169:VS4210/monitor.c **** 			 Printf("\r\nEEPROM  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
 4427              		.loc 1 1169 0
 4428 0924 2046     		mov	r0, r4
 4429 0926 FFF7FEFF 		bl	ReadEEP
 4430              	.LVL719:
 4431 092a 0246     		mov	r2, r0
 4432              	.LVL720:
1170:VS4210/monitor.c **** 			 }
 4433              		.loc 1 1170 0
 4434 092c 7E48     		ldr	r0, .L204+56
 4435 092e 2146     		mov	r1, r4
 4436 0930 FFF7FEFF 		bl	Printf
 4437              	.LVL721:
 4438 0934 31E0     		b	.L161
 4439              	.L160:
1172:VS4210/monitor.c **** 			 {
 4440              		.loc 1 1172 0
 4441 0936 402B     		cmp	r3, #64
 4442 0938 08D1     		bne	.L162
1174:VS4210/monitor.c **** 			 // Printf("\r\nVXISI2CWrite(0x%02x,0x%02x);",(WORD)s,(WORD)ret);
 4443              		.loc 1 1174 0
 4444 093a E0B2     		uxtb	r0, r4
 4445 093c FFF7FEFF 		bl	VXISI2CRead
 4446              	.LVL722:
 4447 0940 0246     		mov	r2, r0
 4448              	.LVL723:
1176:VS4210/monitor.c **** 			 }
 4449              		.loc 1 1176 0
 4450 0942 7A48     		ldr	r0, .L204+60
 4451 0944 2146     		mov	r1, r4
 4452 0946 FFF7FEFF 		bl	Printf
 4453              	.LVL724:
 4454 094a 26E0     		b	.L161
ARM GAS  /tmp/ccD8Q2iX.s 			page 123


 4455              	.L162:
1178:VS4210/monitor.c **** 			 {
 4456              		.loc 1 1178 0
 4457 094c 122B     		cmp	r3, #18
 4458 094e 08D1     		bne	.L163
1180:VS4210/monitor.c **** //			  Printf("\r\nVS8812  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
 4459              		.loc 1 1180 0
 4460 0950 E0B2     		uxtb	r0, r4
 4461 0952 FFF7FEFF 		bl	VS8812Read
 4462              	.LVL725:
 4463 0956 0246     		mov	r2, r0
 4464              	.LVL726:
1182:VS4210/monitor.c **** 			 }
 4465              		.loc 1 1182 0
 4466 0958 7548     		ldr	r0, .L204+64
 4467 095a 2146     		mov	r1, r4
 4468 095c FFF7FEFF 		bl	Printf
 4469              	.LVL727:
 4470 0960 1BE0     		b	.L161
 4471              	.L163:
1184:VS4210/monitor.c **** 					  {
 4472              		.loc 1 1184 0
 4473 0962 882B     		cmp	r3, #136
 4474 0964 08D1     		bne	.L164
1186:VS4210/monitor.c **** 					   Printf("\r\ntp28xx,%02x,%02x",(WORD)s,(WORD)ret);
 4475              		.loc 1 1186 0
 4476 0966 E0B2     		uxtb	r0, r4
 4477 0968 FFF7FEFF 		bl	tp28xx_byte_read
 4478              	.LVL728:
 4479 096c 0246     		mov	r2, r0
 4480              	.LVL729:
1187:VS4210/monitor.c **** 					  } 
 4481              		.loc 1 1187 0
 4482 096e 7148     		ldr	r0, .L204+68
 4483 0970 2146     		mov	r1, r4
 4484 0972 FFF7FEFF 		bl	Printf
 4485              	.LVL730:
 4486 0976 10E0     		b	.L161
 4487              	.L164:
1189:VS4210/monitor.c **** 								{
 4488              		.loc 1 1189 0
 4489 0978 902B     		cmp	r3, #144
 4490 097a 0BD1     		bne	.L165
1191:VS4210/monitor.c **** 							ret= HDMIRX_ReadI2C_Byte(s);	  
 4491              		.loc 1 1191 0
 4492 097c 0022     		movs	r2, #0
 4493 097e 6E4B     		ldr	r3, .L204+72
 4494 0980 1A70     		strb	r2, [r3]
1192:VS4210/monitor.c **** 								 Printf("\r\nIT66021,%02x,%02x",(WORD)s,(WORD)ret);
 4495              		.loc 1 1192 0
 4496 0982 E0B2     		uxtb	r0, r4
 4497 0984 FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 4498              	.LVL731:
 4499 0988 0246     		mov	r2, r0
 4500              	.LVL732:
1193:VS4210/monitor.c **** 								} 
 4501              		.loc 1 1193 0
ARM GAS  /tmp/ccD8Q2iX.s 			page 124


 4502 098a 6C48     		ldr	r0, .L204+76
 4503 098c 2146     		mov	r1, r4
 4504 098e FFF7FEFF 		bl	Printf
 4505              	.LVL733:
 4506 0992 02E0     		b	.L161
 4507              	.L165:
1210:VS4210/monitor.c **** 			 }
 4508              		.loc 1 1210 0
 4509 0994 6A48     		ldr	r0, .L204+80
 4510 0996 FFF7FEFF 		bl	Printf
 4511              	.LVL734:
 4512              	.L161:
1165:VS4210/monitor.c **** {
 4513              		.loc 1 1165 0
 4514 099a 0134     		adds	r4, r4, #1
 4515              	.LVL735:
 4516              	.L159:
1165:VS4210/monitor.c **** {
 4517              		.loc 1 1165 0 is_stmt 0 discriminator 1
 4518 099c AC42     		cmp	r4, r5
 4519 099e BDD9     		bls	.L166
 4520 09a0 FFE1     		b	.L139
 4521              	.LVL736:
 4522              	.L154:
 4523              	.LBE2:
1370:VS4210/monitor.c **** 		MonHelp();
 4524              		.loc 1 1370 0 is_stmt 1
 4525 09a2 2046     		mov	r0, r4
 4526 09a4 6749     		ldr	r1, .L204+84
 4527 09a6 FFF7FEFF 		bl	stricmp
 4528              	.LVL737:
 4529 09aa 48B1     		cbz	r0, .L167
1370:VS4210/monitor.c **** 		MonHelp();
 4530              		.loc 1 1370 0 is_stmt 0 discriminator 1
 4531 09ac 2046     		mov	r0, r4
 4532 09ae 6649     		ldr	r1, .L204+88
 4533 09b0 FFF7FEFF 		bl	stricmp
 4534              	.LVL738:
 4535 09b4 20B1     		cbz	r0, .L167
1370:VS4210/monitor.c **** 		MonHelp();
 4536              		.loc 1 1370 0 discriminator 2
 4537 09b6 2046     		mov	r0, r4
 4538 09b8 6449     		ldr	r1, .L204+92
 4539 09ba FFF7FEFF 		bl	stricmp
 4540              	.LVL739:
 4541 09be 10B9     		cbnz	r0, .L168
 4542              	.L167:
1371:VS4210/monitor.c **** 	}
 4543              		.loc 1 1371 0 is_stmt 1
 4544 09c0 FFF7FEFF 		bl	MonHelp
 4545              	.LVL740:
 4546 09c4 EDE1     		b	.L139
 4547              	.L168:
1373:VS4210/monitor.c **** 
 4548              		.loc 1 1373 0
 4549 09c6 2046     		mov	r0, r4
 4550 09c8 6149     		ldr	r1, .L204+96
ARM GAS  /tmp/ccD8Q2iX.s 			page 125


 4551 09ca FFF7FEFF 		bl	stricmp
 4552              	.LVL741:
 4553 09ce 88B9     		cbnz	r0, .L169
1375:VS4210/monitor.c **** 
 4554              		.loc 1 1375 0
 4555 09d0 484C     		ldr	r4, .L204+4
 4556 09d2 6068     		ldr	r0, [r4, #4]
 4557 09d4 FFF7FEFF 		bl	Asc2Bin
 4558              	.LVL742:
 4559 09d8 C0EB0010 		rsb	r0, r0, r0, lsl #4
 4560 09dc 80B2     		uxth	r0, r0
 4561 09de FFF7FEFF 		bl	user_pwm_setvalue
 4562              	.LVL743:
1377:VS4210/monitor.c **** 	}
 4563              		.loc 1 1377 0
 4564 09e2 6068     		ldr	r0, [r4, #4]
 4565 09e4 FFF7FEFF 		bl	Asc2Bin
 4566              	.LVL744:
 4567 09e8 C0EB0011 		rsb	r1, r0, r0, lsl #4
 4568 09ec 5948     		ldr	r0, .L204+100
 4569 09ee FFF7FEFF 		bl	Printf
 4570              	.LVL745:
 4571 09f2 D6E1     		b	.L139
 4572              	.L169:
1379:VS4210/monitor.c **** 
 4573              		.loc 1 1379 0
 4574 09f4 2046     		mov	r0, r4
 4575 09f6 5849     		ldr	r1, .L204+104
 4576 09f8 FFF7FEFF 		bl	stricmp
 4577              	.LVL746:
 4578 09fc 38B9     		cbnz	r0, .L170
1381:VS4210/monitor.c **** 
 4579              		.loc 1 1381 0
 4580 09fe 0220     		movs	r0, #2
 4581 0a00 FFF7FEFF 		bl	GET_ALC122
 4582              	.LVL747:
 4583 0a04 0146     		mov	r1, r0
 4584 0a06 5548     		ldr	r0, .L204+108
 4585 0a08 FFF7FEFF 		bl	Printf
 4586              	.LVL748:
 4587 0a0c C9E1     		b	.L139
 4588              	.L170:
1384:VS4210/monitor.c **** 		WORD val=0;
 4589              		.loc 1 1384 0
 4590 0a0e 2046     		mov	r0, r4
 4591 0a10 5349     		ldr	r1, .L204+112
 4592 0a12 FFF7FEFF 		bl	stricmp
 4593              	.LVL749:
 4594 0a16 80B9     		cbnz	r0, .L171
 4595              	.LVL750:
 4596              	.LBB3:
1386:VS4210/monitor.c **** 		val<<=8;
 4597              		.loc 1 1386 0
 4598 0a18 364B     		ldr	r3, .L204+4
 4599 0a1a 5868     		ldr	r0, [r3, #4]
 4600 0a1c FFF7FEFF 		bl	Asc2Bin
 4601              	.LVL751:
ARM GAS  /tmp/ccD8Q2iX.s 			page 126


1388:VS4210/monitor.c **** 	
 4602              		.loc 1 1388 0
 4603 0a20 40EA0021 		orr	r1, r0, r0, lsl #8
 4604              	.LVL752:
1390:VS4210/monitor.c **** 
 4605              		.loc 1 1390 0
 4606 0a24 0220     		movs	r0, #2
 4607 0a26 FFF7FEFF 		bl	SET_ALC122
 4608              	.LVL753:
1392:VS4210/monitor.c **** 	}
 4609              		.loc 1 1392 0
 4610 0a2a 0220     		movs	r0, #2
 4611 0a2c FFF7FEFF 		bl	GET_ALC122
 4612              	.LVL754:
 4613 0a30 0146     		mov	r1, r0
 4614 0a32 4A48     		ldr	r0, .L204+108
 4615 0a34 FFF7FEFF 		bl	Printf
 4616              	.LVL755:
 4617              	.LBE3:
 4618 0a38 B3E1     		b	.L139
 4619              	.L171:
1401:VS4210/monitor.c **** 		//if( argc==2 ) {
 4620              		.loc 1 1401 0
 4621 0a3a 2046     		mov	r0, r4
 4622 0a3c 4949     		ldr	r1, .L204+116
 4623 0a3e FFF7FEFF 		bl	stricmp
 4624              	.LVL756:
 4625 0a42 50B9     		cbnz	r0, .L172
1403:VS4210/monitor.c **** 		//}
 4626              		.loc 1 1403 0
 4627 0a44 2B4B     		ldr	r3, .L204+4
 4628 0a46 5868     		ldr	r0, [r3, #4]
 4629 0a48 FFF7FEFF 		bl	Asc2Bin
 4630              	.LVL757:
 4631 0a4c 0146     		mov	r1, r0
 4632 0a4e 464B     		ldr	r3, .L204+120
 4633 0a50 1860     		str	r0, [r3]
1405:VS4210/monitor.c **** 	}
 4634              		.loc 1 1405 0
 4635 0a52 4648     		ldr	r0, .L204+124
 4636 0a54 FFF7FEFF 		bl	Printf
 4637              	.LVL758:
 4638 0a58 A3E1     		b	.L139
 4639              	.L172:
1407:VS4210/monitor.c **** 
 4640              		.loc 1 1407 0
 4641 0a5a 2046     		mov	r0, r4
 4642 0a5c 4449     		ldr	r1, .L204+128
 4643 0a5e FFF7FEFF 		bl	stricmp
 4644              	.LVL759:
 4645 0a62 18BB     		cbnz	r0, .L173
 4646              	.LBB4:
1410:VS4210/monitor.c **** 		
 4647              		.loc 1 1410 0
 4648 0a64 234B     		ldr	r3, .L204+4
 4649 0a66 5868     		ldr	r0, [r3, #4]
 4650 0a68 FFF7FEFF 		bl	Asc2Bin
ARM GAS  /tmp/ccD8Q2iX.s 			page 127


 4651              	.LVL760:
 4652 0a6c 0446     		mov	r4, r0
 4653              	.LVL761:
1412:VS4210/monitor.c **** 		
 4654              		.loc 1 1412 0
 4655 0a6e FFF7FEFF 		bl	HS_Select_Win
 4656              	.LVL762:
1415:VS4210/monitor.c **** 		{
 4657              		.loc 1 1415 0
 4658 0a72 012C     		cmp	r4, #1
 4659 0a74 40F09581 		bne	.L139
1417:VS4210/monitor.c **** 		
 4660              		.loc 1 1417 0
 4661 0a78 3E4C     		ldr	r4, .L204+132
 4662              	.LVL763:
 4663 0a7a 3F48     		ldr	r0, .L204+136
 4664 0a7c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4665 0a7e FFF7FEFF 		bl	Printf
 4666              	.LVL764:
1419:VS4210/monitor.c **** 			TP_bt1120_720P_1080P_mode0_w0();
 4667              		.loc 1 1419 0
 4668 0a82 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4669 0a84 052B     		cmp	r3, #5
 4670 0a86 02D1     		bne	.L174
1420:VS4210/monitor.c **** 			else if(TP_InputMode==6)
 4671              		.loc 1 1420 0
 4672 0a88 FFF7FEFF 		bl	TP_bt1120_720P_1080P_mode0_w0
 4673              	.LVL765:
 4674 0a8c 89E1     		b	.L139
 4675              	.L174:
1421:VS4210/monitor.c **** 				TP_bt1120_1080P_1080P_mode0_w0();
 4676              		.loc 1 1421 0
 4677 0a8e 062B     		cmp	r3, #6
 4678 0a90 02D1     		bne	.L175
1422:VS4210/monitor.c **** 			else if(TP_InputMode==0)
 4679              		.loc 1 1422 0
 4680 0a92 FFF7FEFF 		bl	TP_bt1120_1080P_1080P_mode0_w0
 4681              	.LVL766:
 4682 0a96 84E1     		b	.L139
 4683              	.L175:
1423:VS4210/monitor.c **** 				TP_bt1120_NTSC_1080P_mode0_w0();
 4684              		.loc 1 1423 0
 4685 0a98 13B9     		cbnz	r3, .L176
1424:VS4210/monitor.c **** 			else if(TP_InputMode==1)
 4686              		.loc 1 1424 0
 4687 0a9a FFF7FEFF 		bl	TP_bt1120_NTSC_1080P_mode0_w0
 4688              	.LVL767:
 4689 0a9e 80E1     		b	.L139
 4690              	.L176:
1425:VS4210/monitor.c **** 				TP_bt1120_PAL_1080P_mode0_w0();
 4691              		.loc 1 1425 0
 4692 0aa0 012B     		cmp	r3, #1
 4693 0aa2 40F07E81 		bne	.L139
1426:VS4210/monitor.c **** 							
 4694              		.loc 1 1426 0
 4695 0aa6 FFF7FEFF 		bl	TP_bt1120_PAL_1080P_mode0_w0
 4696              	.LVL768:
ARM GAS  /tmp/ccD8Q2iX.s 			page 128


 4697 0aaa 7AE1     		b	.L139
 4698              	.L173:
 4699              	.LBE4:
1430:VS4210/monitor.c **** 		TP_bt1120_720P_1080P_mode0_w0();
 4700              		.loc 1 1430 0
 4701 0aac 2046     		mov	r0, r4
 4702 0aae 3349     		ldr	r1, .L204+140
 4703 0ab0 FFF7FEFF 		bl	stricmp
 4704              	.LVL769:
 4705 0ab4 10B9     		cbnz	r0, .L177
1431:VS4210/monitor.c **** 	}	
 4706              		.loc 1 1431 0
 4707 0ab6 FFF7FEFF 		bl	TP_bt1120_720P_1080P_mode0_w0
 4708              	.LVL770:
 4709 0aba 72E1     		b	.L139
 4710              	.L177:
1433:VS4210/monitor.c **** 		TP_bt1120_1080P_1080P_mode0_w0();
 4711              		.loc 1 1433 0
 4712 0abc 2046     		mov	r0, r4
 4713 0abe 3049     		ldr	r1, .L204+144
 4714 0ac0 FFF7FEFF 		bl	stricmp
 4715              	.LVL771:
 4716 0ac4 10B9     		cbnz	r0, .L178
1434:VS4210/monitor.c **** 	}	
 4717              		.loc 1 1434 0
 4718 0ac6 FFF7FEFF 		bl	TP_bt1120_1080P_1080P_mode0_w0
 4719              	.LVL772:
 4720 0aca 6AE1     		b	.L139
 4721              	.L178:
1436:VS4210/monitor.c **** 		TP_bt1120_NTSC_1080P_mode0_w0();
 4722              		.loc 1 1436 0
 4723 0acc 2046     		mov	r0, r4
 4724 0ace 2D49     		ldr	r1, .L204+148
 4725 0ad0 FFF7FEFF 		bl	stricmp
 4726              	.LVL773:
 4727 0ad4 10B9     		cbnz	r0, .L179
1437:VS4210/monitor.c **** 	}	
 4728              		.loc 1 1437 0
 4729 0ad6 FFF7FEFF 		bl	TP_bt1120_NTSC_1080P_mode0_w0
 4730              	.LVL774:
 4731 0ada 62E1     		b	.L139
 4732              	.L179:
1439:VS4210/monitor.c **** 		TP_bt1120_PAL_1080P_mode0_w0();
 4733              		.loc 1 1439 0
 4734 0adc 2046     		mov	r0, r4
 4735 0ade 2A49     		ldr	r1, .L204+152
 4736 0ae0 FFF7FEFF 		bl	stricmp
 4737              	.LVL775:
 4738 0ae4 0028     		cmp	r0, #0
 4739 0ae6 51D1     		bne	.L180
1440:VS4210/monitor.c **** 	}	
 4740              		.loc 1 1440 0
 4741 0ae8 FFF7FEFF 		bl	TP_bt1120_PAL_1080P_mode0_w0
 4742              	.LVL776:
 4743 0aec 59E1     		b	.L139
 4744              	.L205:
 4745 0aee 00BF     		.align	2
ARM GAS  /tmp/ccD8Q2iX.s 			page 129


 4746              	.L204:
 4747 0af0 F0030000 		.word	.LC31
 4748 0af4 00000000 		.word	argv
 4749 0af8 90000000 		.word	.LC5
 4750 0afc F4030000 		.word	.LC32
 4751 0b00 F8030000 		.word	.LC33
 4752 0b04 00000000 		.word	.LANCHOR4
 4753 0b08 FC030000 		.word	.LC34
 4754 0b0c 24040000 		.word	.LC35
 4755 0b10 00000000 		.word	.LANCHOR5
 4756 0b14 28040000 		.word	.LC36
 4757 0b18 30040000 		.word	.LC37
 4758 0b1c 44040000 		.word	.LC38
 4759 0b20 58040000 		.word	.LC39
 4760 0b24 6C040000 		.word	.LC40
 4761 0b28 70030000 		.word	.LC26
 4762 0b2c E0030000 		.word	.LC30
 4763 0b30 84040000 		.word	.LC41
 4764 0b34 98040000 		.word	.LC42
 4765 0b38 00000000 		.word	gHDMI_Index
 4766 0b3c AC040000 		.word	.LC43
 4767 0b40 54030000 		.word	.LC23
 4768 0b44 C0040000 		.word	.LC44
 4769 0b48 C4040000 		.word	.LC45
 4770 0b4c CC040000 		.word	.LC46
 4771 0b50 D0040000 		.word	.LC47
 4772 0b54 D4040000 		.word	.LC48
 4773 0b58 E0040000 		.word	.LC49
 4774 0b5c E8040000 		.word	.LC50
 4775 0b60 F4040000 		.word	.LC51
 4776 0b64 FC040000 		.word	.LC52
 4777 0b68 00000000 		.word	.LANCHOR11
 4778 0b6c 04050000 		.word	.LC53
 4779 0b70 20050000 		.word	.LC54
 4780 0b74 00000000 		.word	TP_InputMode
 4781 0b78 24050000 		.word	.LC55
 4782 0b7c 38050000 		.word	.LC56
 4783 0b80 3C050000 		.word	.LC57
 4784 0b84 40050000 		.word	.LC58
 4785 0b88 44050000 		.word	.LC59
 4786              	.L180:
1442:VS4210/monitor.c **** 
 4787              		.loc 1 1442 0
 4788 0b8c 2046     		mov	r0, r4
 4789 0b8e 8649     		ldr	r1, .L206
 4790 0b90 FFF7FEFF 		bl	stricmp
 4791              	.LVL777:
 4792 0b94 30B9     		cbnz	r0, .L181
1444:VS4210/monitor.c **** 		
 4793              		.loc 1 1444 0
 4794 0b96 854B     		ldr	r3, .L206+4
 4795 0b98 1870     		strb	r0, [r3]
1446:VS4210/monitor.c **** 		HS_Select_Win(0);
 4796              		.loc 1 1446 0
 4797 0b9a 854B     		ldr	r3, .L206+8
 4798 0b9c 1870     		strb	r0, [r3]
1447:VS4210/monitor.c **** 	}
ARM GAS  /tmp/ccD8Q2iX.s 			page 130


 4799              		.loc 1 1447 0
 4800 0b9e FFF7FEFF 		bl	HS_Select_Win
 4801              	.LVL778:
 4802 0ba2 FEE0     		b	.L139
 4803              	.L181:
1449:VS4210/monitor.c **** 
 4804              		.loc 1 1449 0
 4805 0ba4 2046     		mov	r0, r4
 4806 0ba6 8349     		ldr	r1, .L206+12
 4807 0ba8 FFF7FEFF 		bl	stricmp
 4808              	.LVL779:
 4809 0bac 08BB     		cbnz	r0, .L182
1451:VS4210/monitor.c **** 	
 4810              		.loc 1 1451 0
 4811 0bae 0022     		movs	r2, #0
 4812 0bb0 7E4B     		ldr	r3, .L206+4
 4813 0bb2 1A70     		strb	r2, [r3]
1453:VS4210/monitor.c **** 		HS_Select_Win(1);
 4814              		.loc 1 1453 0
 4815 0bb4 0120     		movs	r0, #1
 4816 0bb6 7E4B     		ldr	r3, .L206+8
 4817 0bb8 1870     		strb	r0, [r3]
1454:VS4210/monitor.c **** 		Printf("\r\nTP_InputMode = %d", (WORD)TP_InputMode);
 4818              		.loc 1 1454 0
 4819 0bba FFF7FEFF 		bl	HS_Select_Win
 4820              	.LVL780:
1455:VS4210/monitor.c **** 		
 4821              		.loc 1 1455 0
 4822 0bbe 7E4C     		ldr	r4, .L206+16
 4823 0bc0 7E48     		ldr	r0, .L206+20
 4824 0bc2 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4825 0bc4 FFF7FEFF 		bl	Printf
 4826              	.LVL781:
1457:VS4210/monitor.c **** 			TP_bt1120_720P_1080P_mode0_w0();
 4827              		.loc 1 1457 0
 4828 0bc8 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4829 0bca 052B     		cmp	r3, #5
 4830 0bcc 02D1     		bne	.L183
1458:VS4210/monitor.c **** 			else if(TP_InputMode==6)
 4831              		.loc 1 1458 0
 4832 0bce FFF7FEFF 		bl	TP_bt1120_720P_1080P_mode0_w0
 4833              	.LVL782:
 4834 0bd2 E6E0     		b	.L139
 4835              	.L183:
1459:VS4210/monitor.c **** 				TP_bt1120_1080P_1080P_mode0_w0();
 4836              		.loc 1 1459 0
 4837 0bd4 062B     		cmp	r3, #6
 4838 0bd6 02D1     		bne	.L184
1460:VS4210/monitor.c **** 			else if(TP_InputMode==0)
 4839              		.loc 1 1460 0
 4840 0bd8 FFF7FEFF 		bl	TP_bt1120_1080P_1080P_mode0_w0
 4841              	.LVL783:
 4842 0bdc E1E0     		b	.L139
 4843              	.L184:
1461:VS4210/monitor.c **** 				TP_bt1120_NTSC_1080P_mode0_w0();
 4844              		.loc 1 1461 0
 4845 0bde 13B9     		cbnz	r3, .L185
ARM GAS  /tmp/ccD8Q2iX.s 			page 131


1462:VS4210/monitor.c **** 			else if(TP_InputMode==1)
 4846              		.loc 1 1462 0
 4847 0be0 FFF7FEFF 		bl	TP_bt1120_NTSC_1080P_mode0_w0
 4848              	.LVL784:
 4849 0be4 DDE0     		b	.L139
 4850              	.L185:
1463:VS4210/monitor.c **** 				TP_bt1120_PAL_1080P_mode0_w0();
 4851              		.loc 1 1463 0
 4852 0be6 012B     		cmp	r3, #1
 4853 0be8 40F0DB80 		bne	.L139
1464:VS4210/monitor.c **** 			
 4854              		.loc 1 1464 0
 4855 0bec FFF7FEFF 		bl	TP_bt1120_PAL_1080P_mode0_w0
 4856              	.LVL785:
 4857 0bf0 D7E0     		b	.L139
 4858              	.L182:
1468:VS4210/monitor.c **** 		extern tByte bSignal[4] ;
 4859              		.loc 1 1468 0
 4860 0bf2 2046     		mov	r0, r4
 4861 0bf4 7249     		ldr	r1, .L206+24
 4862 0bf6 FFF7FEFF 		bl	stricmp
 4863              	.LVL786:
 4864 0bfa A0B9     		cbnz	r0, .L186
 4865              	.LBB5:
1470:VS4210/monitor.c **** 		Printf("\r\nbSignal[1] = %d", (WORD) bSignal[1]);
 4866              		.loc 1 1470 0
 4867 0bfc 714C     		ldr	r4, .L206+28
 4868 0bfe 7248     		ldr	r0, .L206+32
 4869 0c00 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4870 0c02 FFF7FEFF 		bl	Printf
 4871              	.LVL787:
1471:VS4210/monitor.c **** 		Printf("\r\nbSignal[2] = %d", (WORD) bSignal[2]);
 4872              		.loc 1 1471 0
 4873 0c06 7148     		ldr	r0, .L206+36
 4874 0c08 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 4875 0c0a FFF7FEFF 		bl	Printf
 4876              	.LVL788:
1472:VS4210/monitor.c **** 		Printf("\r\nbSignal[3] = %d", (WORD) bSignal[3]);
 4877              		.loc 1 1472 0
 4878 0c0e 7048     		ldr	r0, .L206+40
 4879 0c10 A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 4880 0c12 FFF7FEFF 		bl	Printf
 4881              	.LVL789:
1473:VS4210/monitor.c **** 
 4882              		.loc 1 1473 0
 4883 0c16 6F48     		ldr	r0, .L206+44
 4884 0c18 E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 4885 0c1a FFF7FEFF 		bl	Printf
 4886              	.LVL790:
1475:VS4210/monitor.c **** 							
 4887              		.loc 1 1475 0
 4888 0c1e 0022     		movs	r2, #0
 4889 0c20 624B     		ldr	r3, .L206+4
 4890 0c22 1A70     		strb	r2, [r3]
 4891              	.LBE5:
 4892 0c24 BDE0     		b	.L139
 4893              	.L186:
ARM GAS  /tmp/ccD8Q2iX.s 			page 132


1478:VS4210/monitor.c **** 
 4894              		.loc 1 1478 0
 4895 0c26 2046     		mov	r0, r4
 4896 0c28 6B49     		ldr	r1, .L206+48
 4897 0c2a FFF7FEFF 		bl	stricmp
 4898              	.LVL791:
 4899 0c2e 28B9     		cbnz	r0, .L187
1480:VS4210/monitor.c **** 		SET_HDMI_SYNC_PARA();
 4900              		.loc 1 1480 0
 4901 0c30 0022     		movs	r2, #0
 4902 0c32 5E4B     		ldr	r3, .L206+4
 4903 0c34 1A70     		strb	r2, [r3]
1481:VS4210/monitor.c **** 
 4904              		.loc 1 1481 0
 4905 0c36 FFF7FEFF 		bl	SET_HDMI_SYNC_PARA
 4906              	.LVL792:
 4907 0c3a B2E0     		b	.L139
 4908              	.L187:
1484:VS4210/monitor.c **** 
 4909              		.loc 1 1484 0
 4910 0c3c 2046     		mov	r0, r4
 4911 0c3e 6749     		ldr	r1, .L206+52
 4912 0c40 FFF7FEFF 		bl	stricmp
 4913              	.LVL793:
 4914 0c44 28B9     		cbnz	r0, .L188
1486:VS4210/monitor.c **** 		SET_AHD_SYNC_PARA();
 4915              		.loc 1 1486 0
 4916 0c46 0022     		movs	r2, #0
 4917 0c48 584B     		ldr	r3, .L206+4
 4918 0c4a 1A70     		strb	r2, [r3]
1487:VS4210/monitor.c **** 
 4919              		.loc 1 1487 0
 4920 0c4c FFF7FEFF 		bl	SET_AHD_SYNC_PARA
 4921              	.LVL794:
 4922 0c50 A7E0     		b	.L139
 4923              	.L188:
1490:VS4210/monitor.c **** 
 4924              		.loc 1 1490 0
 4925 0c52 2046     		mov	r0, r4
 4926 0c54 6249     		ldr	r1, .L206+56
 4927 0c56 FFF7FEFF 		bl	stricmp
 4928              	.LVL795:
 4929 0c5a 10B9     		cbnz	r0, .L189
1492:VS4210/monitor.c **** 
 4930              		.loc 1 1492 0
 4931 0c5c FFF7FEFF 		bl	Init_TP280x_RegSet
 4932              	.LVL796:
 4933 0c60 9FE0     		b	.L139
 4934              	.L189:
1495:VS4210/monitor.c **** 
 4935              		.loc 1 1495 0
 4936 0c62 2046     		mov	r0, r4
 4937 0c64 5F49     		ldr	r1, .L206+60
 4938 0c66 FFF7FEFF 		bl	stricmp
 4939              	.LVL797:
 4940 0c6a 28B9     		cbnz	r0, .L190
1497:VS4210/monitor.c **** 		SET_HDMI_640_480P_PARA();
ARM GAS  /tmp/ccD8Q2iX.s 			page 133


 4941              		.loc 1 1497 0
 4942 0c6c 0022     		movs	r2, #0
 4943 0c6e 4F4B     		ldr	r3, .L206+4
 4944 0c70 1A70     		strb	r2, [r3]
1498:VS4210/monitor.c **** 
 4945              		.loc 1 1498 0
 4946 0c72 FFF7FEFF 		bl	SET_HDMI_640_480P_PARA
 4947              	.LVL798:
 4948 0c76 94E0     		b	.L139
 4949              	.L190:
1501:VS4210/monitor.c **** 
 4950              		.loc 1 1501 0
 4951 0c78 2046     		mov	r0, r4
 4952 0c7a 5B49     		ldr	r1, .L206+64
 4953 0c7c FFF7FEFF 		bl	stricmp
 4954              	.LVL799:
 4955 0c80 28B9     		cbnz	r0, .L191
1503:VS4210/monitor.c **** 		SET_VS4210_720_480_out();
 4956              		.loc 1 1503 0
 4957 0c82 0022     		movs	r2, #0
 4958 0c84 494B     		ldr	r3, .L206+4
 4959 0c86 1A70     		strb	r2, [r3]
1504:VS4210/monitor.c **** 		
 4960              		.loc 1 1504 0
 4961 0c88 FFF7FEFF 		bl	SET_VS4210_720_480_out
 4962              	.LVL800:
 4963 0c8c 89E0     		b	.L139
 4964              	.L191:
1507:VS4210/monitor.c **** 
 4965              		.loc 1 1507 0
 4966 0c8e 2046     		mov	r0, r4
 4967 0c90 5649     		ldr	r1, .L206+68
 4968 0c92 FFF7FEFF 		bl	stricmp
 4969              	.LVL801:
 4970 0c96 80B9     		cbnz	r0, .L192
1509:VS4210/monitor.c **** 		TVI_Command=0x0F;
 4971              		.loc 1 1509 0
 4972 0c98 0023     		movs	r3, #0
 4973 0c9a 444A     		ldr	r2, .L206+4
 4974 0c9c 1370     		strb	r3, [r2]
1510:VS4210/monitor.c **** 		presetNum=0;
 4975              		.loc 1 1510 0
 4976 0c9e 0F21     		movs	r1, #15
 4977 0ca0 534A     		ldr	r2, .L206+72
 4978 0ca2 1170     		strb	r1, [r2]
1511:VS4210/monitor.c **** 		TVI_speed=0;
 4979              		.loc 1 1511 0
 4980 0ca4 534A     		ldr	r2, .L206+76
 4981 0ca6 1370     		strb	r3, [r2]
1512:VS4210/monitor.c **** 		TVI_Chksum=0xC5;
 4982              		.loc 1 1512 0
 4983 0ca8 534A     		ldr	r2, .L206+80
 4984 0caa 1370     		strb	r3, [r2]
1513:VS4210/monitor.c **** 		ptztxflag=1;
 4985              		.loc 1 1513 0
 4986 0cac C522     		movs	r2, #197
 4987 0cae 534B     		ldr	r3, .L206+84
ARM GAS  /tmp/ccD8Q2iX.s 			page 134


 4988 0cb0 1A70     		strb	r2, [r3]
1514:VS4210/monitor.c **** 		
 4989              		.loc 1 1514 0
 4990 0cb2 0122     		movs	r2, #1
 4991 0cb4 524B     		ldr	r3, .L206+88
 4992 0cb6 1A60     		str	r2, [r3]
 4993 0cb8 73E0     		b	.L139
 4994              	.L192:
1517:VS4210/monitor.c **** 
 4995              		.loc 1 1517 0
 4996 0cba 2046     		mov	r0, r4
 4997 0cbc 5149     		ldr	r1, .L206+92
 4998 0cbe FFF7FEFF 		bl	stricmp
 4999              	.LVL802:
 5000 0cc2 88B9     		cbnz	r0, .L193
1519:VS4210/monitor.c **** 		TVI_Command=0x06;
 5001              		.loc 1 1519 0
 5002 0cc4 0023     		movs	r3, #0
 5003 0cc6 394A     		ldr	r2, .L206+4
 5004 0cc8 1370     		strb	r3, [r2]
1520:VS4210/monitor.c **** 		presetNum=0x1F;
 5005              		.loc 1 1520 0
 5006 0cca 0621     		movs	r1, #6
 5007 0ccc 484A     		ldr	r2, .L206+72
 5008 0cce 1170     		strb	r1, [r2]
1521:VS4210/monitor.c **** 		TVI_speed=0;
 5009              		.loc 1 1521 0
 5010 0cd0 1F21     		movs	r1, #31
 5011 0cd2 484A     		ldr	r2, .L206+76
 5012 0cd4 1170     		strb	r1, [r2]
1522:VS4210/monitor.c **** 		TVI_Chksum=0xDB;
 5013              		.loc 1 1522 0
 5014 0cd6 484A     		ldr	r2, .L206+80
 5015 0cd8 1370     		strb	r3, [r2]
1523:VS4210/monitor.c **** 		ptztxflag=1;
 5016              		.loc 1 1523 0
 5017 0cda DB22     		movs	r2, #219
 5018 0cdc 474B     		ldr	r3, .L206+84
 5019 0cde 1A70     		strb	r2, [r3]
1524:VS4210/monitor.c **** 		
 5020              		.loc 1 1524 0
 5021 0ce0 0122     		movs	r2, #1
 5022 0ce2 474B     		ldr	r3, .L206+88
 5023 0ce4 1A60     		str	r2, [r3]
 5024 0ce6 5CE0     		b	.L139
 5025              	.L193:
1527:VS4210/monitor.c **** 
 5026              		.loc 1 1527 0
 5027 0ce8 2046     		mov	r0, r4
 5028 0cea 4749     		ldr	r1, .L206+96
 5029 0cec FFF7FEFF 		bl	stricmp
 5030              	.LVL803:
 5031 0cf0 88B9     		cbnz	r0, .L194
1529:VS4210/monitor.c **** 		TVI_Command=0x07;
 5032              		.loc 1 1529 0
 5033 0cf2 0023     		movs	r3, #0
 5034 0cf4 2D4A     		ldr	r2, .L206+4
ARM GAS  /tmp/ccD8Q2iX.s 			page 135


 5035 0cf6 1370     		strb	r3, [r2]
1530:VS4210/monitor.c **** 		presetNum=0x1F;
 5036              		.loc 1 1530 0
 5037 0cf8 0721     		movs	r1, #7
 5038 0cfa 3D4A     		ldr	r2, .L206+72
 5039 0cfc 1170     		strb	r1, [r2]
1531:VS4210/monitor.c **** 		TVI_speed=0;
 5040              		.loc 1 1531 0
 5041 0cfe 1F21     		movs	r1, #31
 5042 0d00 3C4A     		ldr	r2, .L206+76
 5043 0d02 1170     		strb	r1, [r2]
1532:VS4210/monitor.c **** 		TVI_Chksum=0xDC;
 5044              		.loc 1 1532 0
 5045 0d04 3C4A     		ldr	r2, .L206+80
 5046 0d06 1370     		strb	r3, [r2]
1533:VS4210/monitor.c **** 		ptztxflag=1;
 5047              		.loc 1 1533 0
 5048 0d08 DC22     		movs	r2, #220
 5049 0d0a 3C4B     		ldr	r3, .L206+84
 5050 0d0c 1A70     		strb	r2, [r3]
1534:VS4210/monitor.c **** 
 5051              		.loc 1 1534 0
 5052 0d0e 0122     		movs	r2, #1
 5053 0d10 3B4B     		ldr	r3, .L206+88
 5054 0d12 1A60     		str	r2, [r3]
 5055 0d14 45E0     		b	.L139
 5056              	.L194:
1536:VS4210/monitor.c **** 
 5057              		.loc 1 1536 0
 5058 0d16 2046     		mov	r0, r4
 5059 0d18 3C49     		ldr	r1, .L206+100
 5060 0d1a FFF7FEFF 		bl	stricmp
 5061              	.LVL804:
 5062 0d1e 88B9     		cbnz	r0, .L195
1538:VS4210/monitor.c **** 		TVI_Command=0x09;
 5063              		.loc 1 1538 0
 5064 0d20 0023     		movs	r3, #0
 5065 0d22 224A     		ldr	r2, .L206+4
 5066 0d24 1370     		strb	r3, [r2]
1539:VS4210/monitor.c **** 		presetNum=0;
 5067              		.loc 1 1539 0
 5068 0d26 0921     		movs	r1, #9
 5069 0d28 314A     		ldr	r2, .L206+72
 5070 0d2a 1170     		strb	r1, [r2]
1540:VS4210/monitor.c **** 		TVI_speed=0x1F;
 5071              		.loc 1 1540 0
 5072 0d2c 314A     		ldr	r2, .L206+76
 5073 0d2e 1370     		strb	r3, [r2]
1541:VS4210/monitor.c **** 		TVI_Chksum=0xDE;
 5074              		.loc 1 1541 0
 5075 0d30 1F22     		movs	r2, #31
 5076 0d32 314B     		ldr	r3, .L206+80
 5077 0d34 1A70     		strb	r2, [r3]
1542:VS4210/monitor.c **** 		ptztxflag=1;
 5078              		.loc 1 1542 0
 5079 0d36 DE22     		movs	r2, #222
 5080 0d38 304B     		ldr	r3, .L206+84
ARM GAS  /tmp/ccD8Q2iX.s 			page 136


 5081 0d3a 1A70     		strb	r2, [r3]
1543:VS4210/monitor.c **** 
 5082              		.loc 1 1543 0
 5083 0d3c 0122     		movs	r2, #1
 5084 0d3e 304B     		ldr	r3, .L206+88
 5085 0d40 1A60     		str	r2, [r3]
 5086 0d42 2EE0     		b	.L139
 5087              	.L195:
1545:VS4210/monitor.c **** 
 5088              		.loc 1 1545 0
 5089 0d44 2046     		mov	r0, r4
 5090 0d46 3249     		ldr	r1, .L206+104
 5091 0d48 FFF7FEFF 		bl	stricmp
 5092              	.LVL805:
 5093 0d4c 88B9     		cbnz	r0, .L196
1547:VS4210/monitor.c **** 		TVI_Command=0x08;
 5094              		.loc 1 1547 0
 5095 0d4e 0023     		movs	r3, #0
 5096 0d50 164A     		ldr	r2, .L206+4
 5097 0d52 1370     		strb	r3, [r2]
1548:VS4210/monitor.c **** 		presetNum=0;
 5098              		.loc 1 1548 0
 5099 0d54 0821     		movs	r1, #8
 5100 0d56 264A     		ldr	r2, .L206+72
 5101 0d58 1170     		strb	r1, [r2]
1549:VS4210/monitor.c **** 		TVI_speed=0x1F;
 5102              		.loc 1 1549 0
 5103 0d5a 264A     		ldr	r2, .L206+76
 5104 0d5c 1370     		strb	r3, [r2]
1550:VS4210/monitor.c **** 		TVI_Chksum=0xDD;
 5105              		.loc 1 1550 0
 5106 0d5e 1F22     		movs	r2, #31
 5107 0d60 254B     		ldr	r3, .L206+80
 5108 0d62 1A70     		strb	r2, [r3]
1551:VS4210/monitor.c **** 		ptztxflag=1;
 5109              		.loc 1 1551 0
 5110 0d64 DD22     		movs	r2, #221
 5111 0d66 254B     		ldr	r3, .L206+84
 5112 0d68 1A70     		strb	r2, [r3]
1552:VS4210/monitor.c **** 		
 5113              		.loc 1 1552 0
 5114 0d6a 0122     		movs	r2, #1
 5115 0d6c 244B     		ldr	r3, .L206+88
 5116 0d6e 1A60     		str	r2, [r3]
 5117 0d70 17E0     		b	.L139
 5118              	.L196:
1555:VS4210/monitor.c **** 			Monitor_flag=_FALSE;
 5119              		.loc 1 1555 0
 5120 0d72 2046     		mov	r0, r4
 5121 0d74 2749     		ldr	r1, .L206+108
 5122 0d76 FFF7FEFF 		bl	stricmp
 5123              	.LVL806:
 5124 0d7a 78B9     		cbnz	r0, .L197
1556:VS4210/monitor.c **** 		TVI_Command=0x14;
 5125              		.loc 1 1556 0
 5126 0d7c 0023     		movs	r3, #0
 5127 0d7e 0B4A     		ldr	r2, .L206+4
ARM GAS  /tmp/ccD8Q2iX.s 			page 137


 5128 0d80 1370     		strb	r3, [r2]
1557:VS4210/monitor.c **** 			presetNum=0;
 5129              		.loc 1 1557 0
 5130 0d82 1421     		movs	r1, #20
 5131 0d84 1A4A     		ldr	r2, .L206+72
 5132 0d86 1170     		strb	r1, [r2]
1558:VS4210/monitor.c **** 			TVI_speed=0;
 5133              		.loc 1 1558 0
 5134 0d88 1A4A     		ldr	r2, .L206+76
 5135 0d8a 1370     		strb	r3, [r2]
1559:VS4210/monitor.c **** 			TVI_Chksum=0;
 5136              		.loc 1 1559 0
 5137 0d8c 1A4A     		ldr	r2, .L206+80
 5138 0d8e 1370     		strb	r3, [r2]
1560:VS4210/monitor.c **** 				ptztxflag=1;	
 5139              		.loc 1 1560 0
 5140 0d90 1A4A     		ldr	r2, .L206+84
 5141 0d92 1370     		strb	r3, [r2]
1561:VS4210/monitor.c **** 			}
 5142              		.loc 1 1561 0
 5143 0d94 0122     		movs	r2, #1
 5144 0d96 1A4B     		ldr	r3, .L206+88
 5145 0d98 1A60     		str	r2, [r3]
 5146 0d9a 02E0     		b	.L139
 5147              	.L197:
1948:VS4210/monitor.c **** 	}
 5148              		.loc 1 1948 0
 5149 0d9c 1E48     		ldr	r0, .L206+112
 5150 0d9e FFF7FEFF 		bl	Printf
 5151              	.LVL807:
 5152              	.L139:
1952:VS4210/monitor.c **** 
 5153              		.loc 1 1952 0
 5154 0da2 FFF7FEFF 		bl	Prompt
 5155              	.LVL808:
 5156              	.L135:
 5157 0da6 70BD     		pop	{r4, r5, r6, pc}
 5158              	.L207:
 5159              		.align	2
 5160              	.L206:
 5161 0da8 48050000 		.word	.LC60
 5162 0dac 00000000 		.word	.LANCHOR5
 5163 0db0 00000000 		.word	SelectInputMode
 5164 0db4 50050000 		.word	.LC61
 5165 0db8 00000000 		.word	TP_InputMode
 5166 0dbc 24050000 		.word	.LC55
 5167 0dc0 54050000 		.word	.LC62
 5168 0dc4 00000000 		.word	bSignal
 5169 0dc8 58050000 		.word	.LC63
 5170 0dcc 6C050000 		.word	.LC64
 5171 0dd0 80050000 		.word	.LC65
 5172 0dd4 94050000 		.word	.LC66
 5173 0dd8 A8050000 		.word	.LC67
 5174 0ddc B0050000 		.word	.LC68
 5175 0de0 B8050000 		.word	.LC69
 5176 0de4 C0050000 		.word	.LC70
 5177 0de8 C8050000 		.word	.LC71
ARM GAS  /tmp/ccD8Q2iX.s 			page 138


 5178 0dec D0050000 		.word	.LC72
 5179 0df0 00000000 		.word	TVI_Command
 5180 0df4 00000000 		.word	presetNum
 5181 0df8 00000000 		.word	TVI_speed
 5182 0dfc 00000000 		.word	TVI_Chksum
 5183 0e00 00000000 		.word	ptztxflag
 5184 0e04 D4050000 		.word	.LC73
 5185 0e08 D8050000 		.word	.LC74
 5186 0e0c DC050000 		.word	.LC75
 5187 0e10 E0050000 		.word	.LC76
 5188 0e14 E4050000 		.word	.LC77
 5189 0e18 E8050000 		.word	.LC78
 5190              		.cfi_endproc
 5191              	.LFE89:
 5193              		.global	AccessEnable
 5194              		.global	RS2_Xbusy
 5195              		.global	RS_Xbusy
 5196              		.global	RS2_out
 5197              		.global	RS2_in
 5198              		.global	RS_out
 5199              		.global	RS_in
 5200              		.comm	DVR_buf,30,4
 5201              		.comm	RS2_buf,200,4
 5202              		.comm	RS_buf,30,4
 5203              		.global	Monitor_I2C
 5204              		.global	Monitor_flag
 5205              		.global	echo
 5206              		.global	argc
 5207              		.comm	argv,28,4
 5208              		.comm	monstr,30,4
 5209              		.comm	MonWdata,1,1
 5210              		.comm	MonRdata,1,1
 5211              		.comm	MonIndex,1,1
 5212              		.global	MonAddress
 5213              		.comm	newInRes,4,4
 5214              		.section	.data.AccessEnable,"aw",%progbits
 5215              		.align	2
 5216              		.set	.LANCHOR11,. + 0
 5219              	AccessEnable:
 5220 0000 01000000 		.word	1
 5221              		.section	.bss.incnt.8433,"aw",%nobits
 5222              		.set	.LANCHOR8,. + 0
 5225              	incnt.8433:
 5226 0000 00       		.space	1
 5227              		.section	.data.Monitor_I2C,"aw",%progbits
 5228              		.set	.LANCHOR4,. + 0
 5231              	Monitor_I2C:
 5232 0000 40       		.byte	64
 5233              		.section	.bss.argc,"aw",%nobits
 5234              		.set	.LANCHOR7,. + 0
 5237              	argc:
 5238 0000 00       		.space	1
 5239              		.section	.data.MonAddress,"aw",%progbits
 5242              	MonAddress:
 5243 0000 8A       		.byte	-118
 5244              		.section	.bss.RS_out,"aw",%nobits
 5245              		.set	.LANCHOR1,. + 0
ARM GAS  /tmp/ccD8Q2iX.s 			page 139


 5248              	RS_out:
 5249 0000 00       		.space	1
 5250              		.section	.bss.RS2_out,"aw",%nobits
 5251              		.set	.LANCHOR3,. + 0
 5254              	RS2_out:
 5255 0000 00       		.space	1
 5256              		.section	.rodata.str1.4,"aMS",%progbits,1
 5257              		.align	2
 5258              	.LC0:
 5259 0000 0D0A4D43 		.ascii	"\015\012MCU_I2C[%02x][%d:%d:%d:%d]>\000"
 5259      555F4932 
 5259      435B2530 
 5259      32785D5B 
 5259      25643A25 
 5260 001e 0000     		.space	2
 5261              	.LC1:
 5262 0020 0D0A4D43 		.ascii	"\015\012MCU_I2C[%02x][%d:%d:%d]>\000"
 5262      555F4932 
 5262      435B2530 
 5262      32785D5B 
 5262      25643A25 
 5263 003b 00       		.space	1
 5264              	.LC2:
 5265 003c 0D0A4D43 		.ascii	"\015\012MCU_I2C[%02x][%d:%d]>\000"
 5265      555F4932 
 5265      435B2530 
 5265      32785D5B 
 5265      25643A25 
 5266              	.LC3:
 5267 0054 0D0A4D43 		.ascii	"\015\012MCU_I2C[%02x][%d]>\000"
 5267      555F4932 
 5267      435B2530 
 5267      32785D5B 
 5267      25645D3E 
 5268 0069 000000   		.space	3
 5269              	.LC4:
 5270 006c 0D0A4545 		.ascii	"\015\012EEPROM Write addr=%02x  data=%02x\000"
 5270      50524F4D 
 5270      20577269 
 5270      74652061 
 5270      6464723D 
 5271              	.LC5:
 5272 0090 0D0A5653 		.ascii	"\015\012VS4210 Write addr=%02x  data=%02x\000"
 5272      34323130 
 5272      20577269 
 5272      74652061 
 5272      6464723D 
 5273              	.LC6:
 5274 00b4 0D0A5653 		.ascii	"\015\012VS8812 Write addr=%02x  data=%02x\000"
 5274      38383132 
 5274      20577269 
 5274      74652061 
 5274      6464723D 
 5275              	.LC7:
 5276 00d8 0D0A5450 		.ascii	"\015\012TP2824  Read addr=%02x  data=%02x\000"
 5276      32383234 
 5276      20205265 
ARM GAS  /tmp/ccD8Q2iX.s 			page 140


 5276      61642061 
 5276      6464723D 
 5277              	.LC8:
 5278 00fc 0D0A4954 		.ascii	"\015\012IT66021  Read addr=%02x  data=%02x\000"
 5278      36363032 
 5278      31202052 
 5278      65616420 
 5278      61646472 
 5279 0121 000000   		.space	3
 5280              	.LC9:
 5281 0124 0D0A3D3D 		.ascii	"\015\012==========================================="
 5281      3D3D3D3D 
 5281      3D3D3D3D 
 5281      3D3D3D3D 
 5281      3D3D3D3D 
 5282 0151 3D3D3D3D 		.ascii	"============\000"
 5282      3D3D3D3D 
 5282      3D3D3D3D 
 5282      00
 5283 015e 0000     		.space	2
 5284              	.LC10:
 5285 0160 0D0A3E3E 		.ascii	"\015\012>>>   Welcome to TOA TAAH02 console\011 Rev"
 5285      3E202020 
 5285      57656C63 
 5285      6F6D6520 
 5285      746F2054 
 5286 018a 20312E30 		.ascii	" 1.00   <<<\000"
 5286      30202020 
 5286      3C3C3C00 
 5287 0196 0000     		.space	2
 5288              	.LC11:
 5289 0198 0D0A2052 		.ascii	"\015\012 R [ii] \011\011   ; Read Register data\000"
 5289      205B6969 
 5289      5D200909 
 5289      2020203B 
 5289      20526561 
 5290              	.LC12:
 5291 01bc 0D0A2057 		.ascii	"\015\012 W [ii] [dd]\011\011   ; Write Register dat"
 5291      205B6969 
 5291      5D205B64 
 5291      645D0909 
 5291      2020203B 
 5292 01e3 6100     		.ascii	"a\000"
 5293 01e5 000000   		.space	3
 5294              	.LC13:
 5295 01e8 0D0A2044 		.ascii	"\015\012 Dump [ii] [cc] \011   ; Dump [first][end] "
 5295      756D7020 
 5295      5B69695D 
 5295      205B6363 
 5295      5D200920 
 5296 0212 5265672E 		.ascii	"Reg.\000"
 5296      00
 5297 0217 00       		.space	1
 5298              	.LC14:
 5299 0218 0D0A2049 		.ascii	"\015\012 I2C [aa]\011\011   ; Change I2C address\000"
 5299      3243205B 
 5299      61615D09 
ARM GAS  /tmp/ccD8Q2iX.s 			page 141


 5299      09202020 
 5299      3B204368 
 5300 023d 000000   		.space	3
 5301              	.LC15:
 5302 0240 0D0A203C 		.ascii	"\015\012 < VS4210:40 TP2824:88 EEPROM:0xA0 HDMI:90 "
 5302      20565334 
 5302      3231303A 
 5302      34302054 
 5302      50323832 
 5303 026d 3E00     		.ascii	">\000"
 5304 026f 00       		.space	1
 5305              	.LC16:
 5306 0270 0D0A2057 		.ascii	"\015\012 WIN [ii] \011           ; Change Input Sou"
 5306      494E205B 
 5306      69695D20 
 5306      09202020 
 5306      20202020 
 5307 029a 72636500 		.ascii	"rce\000"
 5308 029e 0000     		.space	2
 5309              	.LC17:
 5310 02a0 0D0A2041 		.ascii	"\015\012 Access [0,1]\011\011   ; TP2824 Access OFF"
 5310      63636573 
 5310      73205B30 
 5310      2C315D09 
 5310      09202020 
 5311 02c7 2F4F4E00 		.ascii	"/ON\000"
 5312 02cb 00       		.space	1
 5313              	.LC18:
 5314 02cc 0D0A00   		.ascii	"\015\012\000"
 5315 02cf 00       		.space	1
 5316              	.LC19:
 5317 02d0 0D0A4C6F 		.ascii	"\015\012Loading AHD Embedded Sync para.... \000"
 5317      6164696E 
 5317      67204148 
 5317      4420456D 
 5317      62656464 
 5318 02f6 0000     		.space	2
 5319              	.LC20:
 5320 02f8 0D0A4C6F 		.ascii	"\015\012Loading HDMI 640X480P Embedded Sync para..."
 5320      6164696E 
 5320      67204844 
 5320      4D492036 
 5320      34305834 
 5321 0325 2E2000   		.ascii	". \000"
 5322              	.LC21:
 5323 0328 0D0A4C6F 		.ascii	"\015\012Loading HDMI Embedded Sync para.... \000"
 5323      6164696E 
 5323      67204844 
 5323      4D492045 
 5323      6D626564 
 5324 034f 00       		.space	1
 5325              	.LC22:
 5326 0350 5700     		.ascii	"W\000"
 5327 0352 0000     		.space	2
 5328              	.LC23:
 5329 0354 0D0A4932 		.ascii	"\015\012I2C addr. error\000"
 5329      43206164 
ARM GAS  /tmp/ccD8Q2iX.s 			page 142


 5329      64722E20 
 5329      6572726F 
 5329      7200
 5330 0366 0000     		.space	2
 5331              	.LC24:
 5332 0368 2900     		.ascii	")\000"
 5333 036a 0000     		.space	2
 5334              	.LC25:
 5335 036c 5200     		.ascii	"R\000"
 5336 036e 0000     		.space	2
 5337              	.LC26:
 5338 0370 0D0A4545 		.ascii	"\015\012EEPROM  Read addr=%02x  data=%02x\000"
 5338      50524F4D 
 5338      20205265 
 5338      61642061 
 5338      6464723D 
 5339              	.LC27:
 5340 0394 0D0A5653 		.ascii	"\015\012VS4210  Read addr=%02x  data=%02x\000"
 5340      34323130 
 5340      20205265 
 5340      61642061 
 5340      6464723D 
 5341              	.LC28:
 5342 03b8 0D0A5653 		.ascii	"\015\012VS8812  Read addr=%02x  data=%02x\000"
 5342      38383132 
 5342      20205265 
 5342      61642061 
 5342      6464723D 
 5343              	.LC29:
 5344 03dc 565200   		.ascii	"VR\000"
 5345 03df 00       		.space	1
 5346              	.LC30:
 5347 03e0 0D0A3430 		.ascii	"\015\01240,%02x,%02x\000"
 5347      2C253032 
 5347      782C2530 
 5347      327800
 5348 03ef 00       		.space	1
 5349              	.LC31:
 5350 03f0 565700   		.ascii	"VW\000"
 5351 03f3 00       		.space	1
 5352              	.LC32:
 5353 03f4 2800     		.ascii	"(\000"
 5354 03f6 0000     		.space	2
 5355              	.LC33:
 5356 03f8 49324300 		.ascii	"I2C\000"
 5357              	.LC34:
 5358 03fc 0D0A4368 		.ascii	"\015\012Change I2C addr. from %02x to %02x\000"
 5358      616E6765 
 5358      20493243 
 5358      20616464 
 5358      722E2066 
 5359 0421 000000   		.space	3
 5360              	.LC35:
 5361 0424 5100     		.ascii	"Q\000"
 5362 0426 0000     		.space	2
 5363              	.LC36:
 5364 0428 44554D50 		.ascii	"DUMP\000"
ARM GAS  /tmp/ccD8Q2iX.s 			page 143


 5364      00
 5365 042d 000000   		.space	3
 5366              	.LC37:
 5367 0430 0D0A4455 		.ascii	"\015\012DUMP EEPROM Reg..\000"
 5367      4D502045 
 5367      4550524F 
 5367      4D205265 
 5367      672E2E00 
 5368              	.LC38:
 5369 0444 0D0A4455 		.ascii	"\015\012DUMP VS4210 Reg..\000"
 5369      4D502056 
 5369      53343231 
 5369      30205265 
 5369      672E2E00 
 5370              	.LC39:
 5371 0458 0D0A4455 		.ascii	"\015\012DUMP VS8812 Reg..\000"
 5371      4D502056 
 5371      53383831 
 5371      32205265 
 5371      672E2E00 
 5372              	.LC40:
 5373 046c 0D0A4455 		.ascii	"\015\012DUMP IT66021 Reg..\000"
 5373      4D502049 
 5373      54363630 
 5373      32312052 
 5373      65672E2E 
 5374 0481 000000   		.space	3
 5375              	.LC41:
 5376 0484 0D0A5653 		.ascii	"\015\012VS8812,%02x,%02x\000"
 5376      38383132 
 5376      2C253032 
 5376      782C2530 
 5376      327800
 5377 0497 00       		.space	1
 5378              	.LC42:
 5379 0498 0D0A7470 		.ascii	"\015\012tp28xx,%02x,%02x\000"
 5379      32387878 
 5379      2C253032 
 5379      782C2530 
 5379      327800
 5380 04ab 00       		.space	1
 5381              	.LC43:
 5382 04ac 0D0A4954 		.ascii	"\015\012IT66021,%02x,%02x\000"
 5382      36363032 
 5382      312C2530 
 5382      32782C25 
 5382      30327800 
 5383              	.LC44:
 5384 04c0 4800     		.ascii	"H\000"
 5385 04c2 0000     		.space	2
 5386              	.LC45:
 5387 04c4 48454C50 		.ascii	"HELP\000"
 5387      00
 5388 04c9 000000   		.space	3
 5389              	.LC46:
 5390 04cc 3F00     		.ascii	"?\000"
 5391 04ce 0000     		.space	2
ARM GAS  /tmp/ccD8Q2iX.s 			page 144


 5392              	.LC47:
 5393 04d0 50574D00 		.ascii	"PWM\000"
 5394              	.LC48:
 5395 04d4 0D0A5057 		.ascii	"\015\012PWM=%d\000"
 5395      4D3D2564 
 5395      00
 5396 04dd 000000   		.space	3
 5397              	.LC49:
 5398 04e0 414C4352 		.ascii	"ALCR\000"
 5398      00
 5399 04e5 000000   		.space	3
 5400              	.LC50:
 5401 04e8 0D0A414C 		.ascii	"\015\012ALCR=%04x\000"
 5401      43523D25 
 5401      30347800 
 5402              	.LC51:
 5403 04f4 414C4357 		.ascii	"ALCW\000"
 5403      00
 5404 04f9 000000   		.space	3
 5405              	.LC52:
 5406 04fc 41434345 		.ascii	"ACCESS\000"
 5406      535300
 5407 0503 00       		.space	1
 5408              	.LC53:
 5409 0504 0D0A5653 		.ascii	"\015\012VS4210 AUTO ACCESS = %d\000"
 5409      34323130 
 5409      20415554 
 5409      4F204143 
 5409      43455353 
 5410 051e 0000     		.space	2
 5411              	.LC54:
 5412 0520 57696E00 		.ascii	"Win\000"
 5413              	.LC55:
 5414 0524 0D0A5450 		.ascii	"\015\012TP_InputMode = %d\000"
 5414      5F496E70 
 5414      75744D6F 
 5414      6465203D 
 5414      20256400 
 5415              	.LC56:
 5416 0538 54503000 		.ascii	"TP0\000"
 5417              	.LC57:
 5418 053c 54503100 		.ascii	"TP1\000"
 5419              	.LC58:
 5420 0540 54503200 		.ascii	"TP2\000"
 5421              	.LC59:
 5422 0544 54503300 		.ascii	"TP3\000"
 5423              	.LC60:
 5424 0548 48444D49 		.ascii	"HDMI\000"
 5424      00
 5425 054d 000000   		.space	3
 5426              	.LC61:
 5427 0550 41484400 		.ascii	"AHD\000"
 5428              	.LC62:
 5429 0554 425300   		.ascii	"BS\000"
 5430 0557 00       		.space	1
 5431              	.LC63:
 5432 0558 0D0A6253 		.ascii	"\015\012bSignal[0] = %d\000"
ARM GAS  /tmp/ccD8Q2iX.s 			page 145


 5432      69676E61 
 5432      6C5B305D 
 5432      203D2025 
 5432      6400
 5433 056a 0000     		.space	2
 5434              	.LC64:
 5435 056c 0D0A6253 		.ascii	"\015\012bSignal[1] = %d\000"
 5435      69676E61 
 5435      6C5B315D 
 5435      203D2025 
 5435      6400
 5436 057e 0000     		.space	2
 5437              	.LC65:
 5438 0580 0D0A6253 		.ascii	"\015\012bSignal[2] = %d\000"
 5438      69676E61 
 5438      6C5B325D 
 5438      203D2025 
 5438      6400
 5439 0592 0000     		.space	2
 5440              	.LC66:
 5441 0594 0D0A6253 		.ascii	"\015\012bSignal[3] = %d\000"
 5441      69676E61 
 5441      6C5B335D 
 5441      203D2025 
 5441      6400
 5442 05a6 0000     		.space	2
 5443              	.LC67:
 5444 05a8 53455448 		.ascii	"SETHDMI\000"
 5444      444D4900 
 5445              	.LC68:
 5446 05b0 53455441 		.ascii	"SETAHD\000"
 5446      484400
 5447 05b7 00       		.space	1
 5448              	.LC69:
 5449 05b8 54505253 		.ascii	"TPRST\000"
 5449      5400
 5450 05be 0000     		.space	2
 5451              	.LC70:
 5452 05c0 48444D49 		.ascii	"HDMI6\000"
 5452      3600
 5453 05c6 0000     		.space	2
 5454              	.LC71:
 5455 05c8 56373230 		.ascii	"V720\000"
 5455      00
 5456 05cd 000000   		.space	3
 5457              	.LC72:
 5458 05d0 6F6D00   		.ascii	"om\000"
 5459 05d3 00       		.space	1
 5460              	.LC73:
 5461 05d4 6F7500   		.ascii	"ou\000"
 5462 05d7 00       		.space	1
 5463              	.LC74:
 5464 05d8 6F6400   		.ascii	"od\000"
 5465 05db 00       		.space	1
 5466              	.LC75:
 5467 05dc 6F6C00   		.ascii	"ol\000"
 5468 05df 00       		.space	1
ARM GAS  /tmp/ccD8Q2iX.s 			page 146


 5469              	.LC76:
 5470 05e0 6F7200   		.ascii	"or\000"
 5471 05e3 00       		.space	1
 5472              	.LC77:
 5473 05e4 6F7000   		.ascii	"op\000"
 5474 05e7 00       		.space	1
 5475              	.LC78:
 5476 05e8 0D0A496E 		.ascii	"\015\012Invalid command...\000"
 5476      76616C69 
 5476      6420636F 
 5476      6D6D616E 
 5476      642E2E2E 
 5477              		.section	.bss.RS_Xbusy,"aw",%nobits
 5478              		.align	2
 5481              	RS_Xbusy:
 5482 0000 00000000 		.space	4
 5483              		.section	.data.echo,"aw",%progbits
 5484              		.align	2
 5487              	echo:
 5488 0000 01000000 		.word	1
 5489              		.section	.bss.RS2_Xbusy,"aw",%nobits
 5490              		.align	2
 5493              	RS2_Xbusy:
 5494 0000 00000000 		.space	4
 5495              		.section	.bss.comment.8432,"aw",%nobits
 5496              		.set	.LANCHOR6,. + 0
 5499              	comment.8432:
 5500 0000 00       		.space	1
 5501              		.section	.bss.Monitor_flag,"aw",%nobits
 5502              		.set	.LANCHOR5,. + 0
 5505              	Monitor_flag:
 5506 0000 00       		.space	1
 5507              		.section	.bss.indirect,"aw",%nobits
 5508              		.align	2
 5509              		.set	.LANCHOR10,. + 0
 5512              	indirect:
 5513 0000 00000000 		.space	4
 5514              		.section	.bss.RS2_in,"aw",%nobits
 5515              		.set	.LANCHOR2,. + 0
 5518              	RS2_in:
 5519 0000 00       		.space	1
 5520              		.section	.bss.RS_in,"aw",%nobits
 5521              		.set	.LANCHOR0,. + 0
 5524              	RS_in:
 5525 0000 00       		.space	1
 5526              		.section	.bss.last_argc.8434,"aw",%nobits
 5527              		.set	.LANCHOR9,. + 0
 5530              	last_argc.8434:
 5531 0000 00       		.space	1
 5532              		.text
 5533              	.Letext0:
 5534              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 5535              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 5536              		.file 4 "VS4210/VXIS_Extern_Define.h"
 5537              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 5538              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 5539              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
ARM GAS  /tmp/ccD8Q2iX.s 			page 147


 5540              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 5541              		.file 9 "TP2824/tpinc/TP2802.h"
 5542              		.file 10 "VS4210/VS4210.h"
 5543              		.file 11 "Drivers/CMSIS/Include/core_cm3.h"
 5544              		.file 12 "VS4210/printf.h"
 5545              		.file 13 "sw_i2c/VX_swi2c.h"
 5546              		.file 14 "VS4210/monitor.h"
 5547              		.file 15 "Inc/main.h"
ARM GAS  /tmp/ccD8Q2iX.s 			page 148


DEFINED SYMBOLS
                            *ABS*:0000000000000000 monitor.c
     /tmp/ccD8Q2iX.s:19     .text.RS_ready:0000000000000000 $t
     /tmp/ccD8Q2iX.s:24     .text.RS_ready:0000000000000000 RS_ready
     /tmp/ccD8Q2iX.s:49     .text.RS_ready:0000000000000014 $d
     /tmp/ccD8Q2iX.s:55     .text.RS2_ready:0000000000000000 $t
     /tmp/ccD8Q2iX.s:60     .text.RS2_ready:0000000000000000 RS2_ready
     /tmp/ccD8Q2iX.s:84     .text.RS2_ready:0000000000000014 $d
     /tmp/ccD8Q2iX.s:90     .text.RS_rx:0000000000000000 $t
     /tmp/ccD8Q2iX.s:95     .text.RS_rx:0000000000000000 RS_rx
     /tmp/ccD8Q2iX.s:125    .text.RS_rx:000000000000001c $d
                            *COM*:000000000000001e RS_buf
     /tmp/ccD8Q2iX.s:131    .text.RS2_rx:0000000000000000 $t
     /tmp/ccD8Q2iX.s:136    .text.RS2_rx:0000000000000000 RS2_rx
     /tmp/ccD8Q2iX.s:166    .text.RS2_rx:000000000000001c $d
                            *COM*:00000000000000c8 RS2_buf
     /tmp/ccD8Q2iX.s:172    .text.RS_tx:0000000000000000 $t
     /tmp/ccD8Q2iX.s:177    .text.RS_tx:0000000000000000 RS_tx
     /tmp/ccD8Q2iX.s:210    .text.RS_tx:000000000000001c $d
     /tmp/ccD8Q2iX.s:215    .text.RS2_tx:0000000000000000 $t
     /tmp/ccD8Q2iX.s:220    .text.RS2_tx:0000000000000000 RS2_tx
     /tmp/ccD8Q2iX.s:253    .text.RS2_tx:000000000000001c $d
     /tmp/ccD8Q2iX.s:258    .text.Prompt:0000000000000000 $t
     /tmp/ccD8Q2iX.s:263    .text.Prompt:0000000000000000 Prompt
     /tmp/ccD8Q2iX.s:345    .text.Prompt:000000000000006c $d
     /tmp/ccD8Q2iX.s:358    .text.Mon_tx:0000000000000000 $t
     /tmp/ccD8Q2iX.s:363    .text.Mon_tx:0000000000000000 Mon_tx
     /tmp/ccD8Q2iX.s:383    .text.a2i:0000000000000000 $t
     /tmp/ccD8Q2iX.s:388    .text.a2i:0000000000000000 a2i
     /tmp/ccD8Q2iX.s:427    .text.Asc1Bin:0000000000000000 $t
     /tmp/ccD8Q2iX.s:432    .text.Asc1Bin:0000000000000000 Asc1Bin
     /tmp/ccD8Q2iX.s:476    .text.Asc2Bin:0000000000000000 $t
     /tmp/ccD8Q2iX.s:481    .text.Asc2Bin:0000000000000000 Asc2Bin
     /tmp/ccD8Q2iX.s:529    .text.hs_toupper:0000000000000000 $t
     /tmp/ccD8Q2iX.s:534    .text.hs_toupper:0000000000000000 hs_toupper
     /tmp/ccD8Q2iX.s:558    .text.stricmp:0000000000000000 $t
     /tmp/ccD8Q2iX.s:563    .text.stricmp:0000000000000000 stricmp
     /tmp/ccD8Q2iX.s:617    .text.MonReadI2C:0000000000000000 $t
     /tmp/ccD8Q2iX.s:622    .text.MonReadI2C:0000000000000000 MonReadI2C
     /tmp/ccD8Q2iX.s:634    .text.MonWriteI2C:0000000000000000 $t
     /tmp/ccD8Q2iX.s:639    .text.MonWriteI2C:0000000000000000 MonWriteI2C
     /tmp/ccD8Q2iX.s:651    .text.MonIncDecI2C:0000000000000000 $t
     /tmp/ccD8Q2iX.s:656    .text.MonIncDecI2C:0000000000000000 MonIncDecI2C
     /tmp/ccD8Q2iX.s:674    .text.MonIncDecI2C:000000000000000a $d
     /tmp/ccD8Q2iX.s:686    .text.MonIncDecI2C:0000000000000016 $t
     /tmp/ccD8Q2iX.s:856    .text.MonIncDecI2C:0000000000000100 $d
                            *COM*:0000000000000001 MonWdata
                            *COM*:0000000000000001 MonIndex
                            *COM*:000000000000001c argv
     /tmp/ccD8Q2iX.s:870    .text.MonDumpI2C:0000000000000000 $t
     /tmp/ccD8Q2iX.s:875    .text.MonDumpI2C:0000000000000000 MonDumpI2C
     /tmp/ccD8Q2iX.s:887    .text.MonNewReadI2C:0000000000000000 $t
     /tmp/ccD8Q2iX.s:892    .text.MonNewReadI2C:0000000000000000 MonNewReadI2C
     /tmp/ccD8Q2iX.s:904    .text.MonNewWriteI2C:0000000000000000 $t
     /tmp/ccD8Q2iX.s:909    .text.MonNewWriteI2C:0000000000000000 MonNewWriteI2C
     /tmp/ccD8Q2iX.s:921    .text.MonNewDumpI2C:0000000000000000 $t
     /tmp/ccD8Q2iX.s:926    .text.MonNewDumpI2C:0000000000000000 MonNewDumpI2C
ARM GAS  /tmp/ccD8Q2iX.s 			page 149


     /tmp/ccD8Q2iX.s:938    .text.MonWriteBit:0000000000000000 $t
     /tmp/ccD8Q2iX.s:943    .text.MonWriteBit:0000000000000000 MonWriteBit
     /tmp/ccD8Q2iX.s:955    .text.MonTxDump:0000000000000000 $t
     /tmp/ccD8Q2iX.s:960    .text.MonTxDump:0000000000000000 MonTxDump
     /tmp/ccD8Q2iX.s:972    .text.MonHelp:0000000000000000 $t
     /tmp/ccD8Q2iX.s:977    .text.MonHelp:0000000000000000 MonHelp
     /tmp/ccD8Q2iX.s:1049   .text.MonHelp:0000000000000058 $d
     /tmp/ccD8Q2iX.s:1063   .text.MonGetCommand:0000000000000000 $t
     /tmp/ccD8Q2iX.s:1068   .text.MonGetCommand:0000000000000000 MonGetCommand
     /tmp/ccD8Q2iX.s:1147   .text.MonGetCommand:0000000000000064 $d
     /tmp/ccD8Q2iX.s:1202   .text.MonGetCommand:00000000000000d2 $t
     /tmp/ccD8Q2iX.s:1546   .text.MonGetCommand:0000000000000280 $d
                            *COM*:000000000000001e monstr
     /tmp/ccD8Q2iX.s:1557   .text.SET_AHD_SYNC_PARA:0000000000000000 $t
     /tmp/ccD8Q2iX.s:1562   .text.SET_AHD_SYNC_PARA:0000000000000000 SET_AHD_SYNC_PARA
     /tmp/ccD8Q2iX.s:1786   .text.SET_AHD_SYNC_PARA:0000000000000154 $d
     /tmp/ccD8Q2iX.s:1791   .text.SET_HDMI_640_480P_PARA:0000000000000000 $t
     /tmp/ccD8Q2iX.s:1796   .text.SET_HDMI_640_480P_PARA:0000000000000000 SET_HDMI_640_480P_PARA
     /tmp/ccD8Q2iX.s:2445   .text.SET_HDMI_640_480P_PARA:00000000000003fc $d
     /tmp/ccD8Q2iX.s:2448   .text.SET_HDMI_640_480P_PARA:0000000000000400 $t
     /tmp/ccD8Q2iX.s:3012   .text.SET_HDMI_SYNC_PARA:0000000000000000 $t
     /tmp/ccD8Q2iX.s:3017   .text.SET_HDMI_SYNC_PARA:0000000000000000 SET_HDMI_SYNC_PARA
     /tmp/ccD8Q2iX.s:3036   .text.SET_HDMI_SYNC_PARA:000000000000000c $d
     /tmp/ccD8Q2iX.s:3041   .text.Monitor:0000000000000000 $t
     /tmp/ccD8Q2iX.s:3046   .text.Monitor:0000000000000000 Monitor
     /tmp/ccD8Q2iX.s:3532   .text.Monitor:0000000000000310 $d
     /tmp/ccD8Q2iX.s:3552   .text.Monitor:0000000000000358 $t
     /tmp/ccD8Q2iX.s:4133   .text.Monitor:0000000000000750 $d
     /tmp/ccD8Q2iX.s:4136   .text.Monitor:0000000000000758 $t
     /tmp/ccD8Q2iX.s:4747   .text.Monitor:0000000000000af0 $d
     /tmp/ccD8Q2iX.s:4788   .text.Monitor:0000000000000b8c $t
     /tmp/ccD8Q2iX.s:5161   .text.Monitor:0000000000000da8 $d
     /tmp/ccD8Q2iX.s:5219   .data.AccessEnable:0000000000000000 AccessEnable
     /tmp/ccD8Q2iX.s:5493   .bss.RS2_Xbusy:0000000000000000 RS2_Xbusy
     /tmp/ccD8Q2iX.s:5481   .bss.RS_Xbusy:0000000000000000 RS_Xbusy
     /tmp/ccD8Q2iX.s:5254   .bss.RS2_out:0000000000000000 RS2_out
     /tmp/ccD8Q2iX.s:5518   .bss.RS2_in:0000000000000000 RS2_in
     /tmp/ccD8Q2iX.s:5248   .bss.RS_out:0000000000000000 RS_out
     /tmp/ccD8Q2iX.s:5524   .bss.RS_in:0000000000000000 RS_in
                            *COM*:000000000000001e DVR_buf
     /tmp/ccD8Q2iX.s:5231   .data.Monitor_I2C:0000000000000000 Monitor_I2C
     /tmp/ccD8Q2iX.s:5505   .bss.Monitor_flag:0000000000000000 Monitor_flag
     /tmp/ccD8Q2iX.s:5487   .data.echo:0000000000000000 echo
     /tmp/ccD8Q2iX.s:5237   .bss.argc:0000000000000000 argc
                            *COM*:0000000000000001 MonRdata
     /tmp/ccD8Q2iX.s:5242   .data.MonAddress:0000000000000000 MonAddress
                            *COM*:0000000000000004 newInRes
     /tmp/ccD8Q2iX.s:5215   .data.AccessEnable:0000000000000000 $d
     /tmp/ccD8Q2iX.s:5225   .bss.incnt.8433:0000000000000000 incnt.8433
     /tmp/ccD8Q2iX.s:5226   .bss.incnt.8433:0000000000000000 $d
     /tmp/ccD8Q2iX.s:5238   .bss.argc:0000000000000000 $d
     /tmp/ccD8Q2iX.s:5249   .bss.RS_out:0000000000000000 $d
     /tmp/ccD8Q2iX.s:5255   .bss.RS2_out:0000000000000000 $d
     /tmp/ccD8Q2iX.s:5257   .rodata.str1.4:0000000000000000 $d
     /tmp/ccD8Q2iX.s:5478   .bss.RS_Xbusy:0000000000000000 $d
     /tmp/ccD8Q2iX.s:5484   .data.echo:0000000000000000 $d
     /tmp/ccD8Q2iX.s:5490   .bss.RS2_Xbusy:0000000000000000 $d
ARM GAS  /tmp/ccD8Q2iX.s 			page 150


     /tmp/ccD8Q2iX.s:5499   .bss.comment.8432:0000000000000000 comment.8432
     /tmp/ccD8Q2iX.s:5500   .bss.comment.8432:0000000000000000 $d
     /tmp/ccD8Q2iX.s:5506   .bss.Monitor_flag:0000000000000000 $d
     /tmp/ccD8Q2iX.s:5508   .bss.indirect:0000000000000000 $d
     /tmp/ccD8Q2iX.s:5512   .bss.indirect:0000000000000000 indirect
     /tmp/ccD8Q2iX.s:5519   .bss.RS2_in:0000000000000000 $d
     /tmp/ccD8Q2iX.s:5525   .bss.RS_in:0000000000000000 $d
     /tmp/ccD8Q2iX.s:5530   .bss.last_argc.8434:0000000000000000 last_argc.8434
     /tmp/ccD8Q2iX.s:5531   .bss.last_argc.8434:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
huart2
Printf
day
hour
minute
second
WriteEEP
ReadEEP
VXISI2CWrite
VXISI2CRead
VS8812Write
VS8812Read
tp28xx_byte_write
tp28xx_byte_read
HDMIRX_WriteI2C_Byte
HDMIRX_ReadI2C_Byte
gHDMI_Index
MCUTimerReactiveTimerEvent
user_pwm_setvalue
GET_ALC122
SET_ALC122
HS_Select_Win
TP_bt1120_720P_1080P_mode0_w0
TP_bt1120_1080P_1080P_mode0_w0
TP_bt1120_NTSC_1080P_mode0_w0
TP_bt1120_PAL_1080P_mode0_w0
TP_InputMode
Init_TP280x_RegSet
SET_VS4210_720_480_out
SelectInputMode
bSignal
TVI_Command
presetNum
TVI_speed
TVI_Chksum
ptztxflag
