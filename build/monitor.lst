ARM GAS  /tmp/ccZa3c9M.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"monitor.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.RS_ready,"ax",%progbits
  16              		.align	1
  17              		.global	RS_ready
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	RS_ready:
  24              	.LFB68:
  25              		.file 1 "VS4210/monitor.c"
   1:VS4210/monitor.c **** /*****************************************************************************/
   2:VS4210/monitor.c **** /*                                                                           										*/
   3:VS4210/monitor.c **** /*  TELI ML070I   MCU                    													*/
   4:VS4210/monitor.c **** /*                                                                           										*/
   5:VS4210/monitor.c **** /*  Monitor.c		                                            										*/
   6:VS4210/monitor.c **** /*                                                                           										*/
   7:VS4210/monitor.c **** /*****************************************************************************/
   8:VS4210/monitor.c **** #include "VXIS_Extern_Define.h"
   9:VS4210/monitor.c **** 
  10:VS4210/monitor.c **** #include "tpinc/Device_Rx.h"
  11:VS4210/monitor.c **** #include "tpinc/TP2802.h"
  12:VS4210/monitor.c **** #include "stdlib.h"
  13:VS4210/monitor.c **** #include "VX_swi2c.h"
  14:VS4210/monitor.c **** #include "VS4210.h"
  15:VS4210/monitor.c **** 
  16:VS4210/monitor.c **** //#include "config.h"
  17:VS4210/monitor.c **** 
  18:VS4210/monitor.c **** //#ifdef SERIAL
  19:VS4210/monitor.c **** 
  20:VS4210/monitor.c **** //#include "typedefs.h"
  21:VS4210/monitor.c **** #include "main.h"
  22:VS4210/monitor.c **** //#include "i2c.h"
  23:VS4210/monitor.c **** //#include "reg.h"
  24:VS4210/monitor.c **** #include "printf.h"
  25:VS4210/monitor.c **** //#include "etc_eep.h"
  26:VS4210/monitor.c **** #include "monitor.h"
  27:VS4210/monitor.c **** //#include "cpu.h"
  28:VS4210/monitor.c **** //#include "Adc.h"
  29:VS4210/monitor.c **** 
  30:VS4210/monitor.c **** IDATA BYTE MonAddress = 0x8a;		// initialize value should be placed to IDATA area
  31:VS4210/monitor.c **** BYTE MonIndex;
  32:VS4210/monitor.c **** BYTE MonRdata, MonWdata;
  33:VS4210/monitor.c **** BYTE monstr[30];		// buffer for input string
ARM GAS  /tmp/ccZa3c9M.s 			page 2


  34:VS4210/monitor.c **** #if 1
  35:VS4210/monitor.c **** BYTE *argv[7];
  36:VS4210/monitor.c **** //char *argv[7];
  37:VS4210/monitor.c **** #else
  38:VS4210/monitor.c **** volatile  BYTE *argv[7];
  39:VS4210/monitor.c **** //char *argv[7];
  40:VS4210/monitor.c **** #endif
  41:VS4210/monitor.c **** BYTE argc=0;
  42:VS4210/monitor.c **** bit	echo=1;
  43:VS4210/monitor.c **** 
  44:VS4210/monitor.c **** BYTE Monitor_flag=OFF;
  45:VS4210/monitor.c **** BYTE Monitor_I2C=0x40;//0x88;//0x40;///0x90;//0x40;//0x28;//0x12;//EEPROM_24C02_addr;
  46:VS4210/monitor.c **** 
  47:VS4210/monitor.c **** 		DATA BYTE	RS_buf[BUF_MAX];
  48:VS4210/monitor.c ****         	DATA BYTE   	RS2_buf[TOA_BUF_MAX];
  49:VS4210/monitor.c **** 		DATA BYTE	DVR_buf[DVR_BUF_MAX];
  50:VS4210/monitor.c **** 
  51:VS4210/monitor.c **** 		
  52:VS4210/monitor.c **** 		DATA BYTE   RS_in=0, RS_out=0;
  53:VS4210/monitor.c **** 		DATA BYTE   RS2_in=0, RS2_out=0;
  54:VS4210/monitor.c **** 		bit	        RS_Xbusy=0;			// bit RS_Xbusy=0;
  55:VS4210/monitor.c **** 		bit 		RS2_Xbusy=0; 		// bit RS_Xbusy=0;
  56:VS4210/monitor.c **** 
  57:VS4210/monitor.c **** static bit indirect=0;
  58:VS4210/monitor.c **** extern BYTE TriggerFlag;
  59:VS4210/monitor.c **** 
  60:VS4210/monitor.c **** //extern		  bit	AutoDetect;
  61:VS4210/monitor.c **** extern   BYTE InputSelection;
  62:VS4210/monitor.c **** extern	      BYTE	DebugLevel;
  63:VS4210/monitor.c **** //extern  CODE  struct struct_IdName struct_InputSelection[];
  64:VS4210/monitor.c **** extern 		  bit	NoInitAccess;
  65:VS4210/monitor.c ****  		  bit	AccessEnable=1;
  66:VS4210/monitor.c **** extern  BYTE PSW_Flag;
  67:VS4210/monitor.c **** extern BYTE year1,year2,month,day,hour,minute,second;
  68:VS4210/monitor.c **** 
  69:VS4210/monitor.c **** extern UART_HandleTypeDef huart1;
  70:VS4210/monitor.c **** extern UART_HandleTypeDef huart2;
  71:VS4210/monitor.c **** extern tByte	count[4];
  72:VS4210/monitor.c **** extern tByte	state[4];
  73:VS4210/monitor.c **** extern tByte	count[4];
  74:VS4210/monitor.c **** extern tByte	mode[4];
  75:VS4210/monitor.c **** extern tByte	std[4];
  76:VS4210/monitor.c **** extern tByte	egain[4][4];
  77:VS4210/monitor.c **** extern  tByte TP_InputMode;
  78:VS4210/monitor.c **** extern BYTE SelectInputMode;///0=HDMI , 1=AHD
  79:VS4210/monitor.c **** extern tByte bSignal[4] ;
  80:VS4210/monitor.c **** extern BYTE TVI_Command;
  81:VS4210/monitor.c **** extern BYTE presetNum;
  82:VS4210/monitor.c **** extern BYTE TVI_Chksum;
  83:VS4210/monitor.c **** extern BYTE TVI_speed;
  84:VS4210/monitor.c **** extern bit ptztxflag;
  85:VS4210/monitor.c **** 
  86:VS4210/monitor.c **** //char * asctime(const struct tm * timeptr);
  87:VS4210/monitor.c **** //char *ctime(const time_t *timep);
  88:VS4210/monitor.c **** 
  89:VS4210/monitor.c **** //=============================================================================
  90:VS4210/monitor.c **** //		Serial RX Check 												   
ARM GAS  /tmp/ccZa3c9M.s 			page 3


  91:VS4210/monitor.c **** //=============================================================================
  92:VS4210/monitor.c **** BYTE RS_ready(void)
  93:VS4210/monitor.c **** {
  26              		.loc 1 93 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  94:VS4210/monitor.c **** 	if( RS_in == RS_out ) return 0;
  31              		.loc 1 94 0
  32 0000 044B     		ldr	r3, .L5
  33 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  34 0004 044B     		ldr	r3, .L5+4
  35 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  36 0008 9A42     		cmp	r2, r3
  37 000a 01D0     		beq	.L4
  95:VS4210/monitor.c **** 	else return 1;
  38              		.loc 1 95 0
  39 000c 0120     		movs	r0, #1
  96:VS4210/monitor.c **** }
  40              		.loc 1 96 0
  41 000e 7047     		bx	lr
  42              	.L4:
  94:VS4210/monitor.c **** 	if( RS_in == RS_out ) return 0;
  43              		.loc 1 94 0
  44 0010 0020     		movs	r0, #0
  45 0012 7047     		bx	lr
  46              	.L6:
  47              		.align	2
  48              	.L5:
  49 0014 00000000 		.word	.LANCHOR0
  50 0018 00000000 		.word	.LANCHOR1
  51              		.cfi_endproc
  52              	.LFE68:
  54              		.section	.text.RS2_ready,"ax",%progbits
  55              		.align	1
  56              		.global	RS2_ready
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu softvfp
  62              	RS2_ready:
  63              	.LFB69:
  97:VS4210/monitor.c **** 
  98:VS4210/monitor.c **** BYTE RS2_ready(void)
  99:VS4210/monitor.c **** {
  64              		.loc 1 99 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
 100:VS4210/monitor.c **** 	if( RS2_in == RS2_out ) return 0;
  69              		.loc 1 100 0
  70 0000 044B     		ldr	r3, .L11
  71 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  72 0004 044B     		ldr	r3, .L11+4
  73 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccZa3c9M.s 			page 4


  74 0008 9A42     		cmp	r2, r3
  75 000a 01D0     		beq	.L10
 101:VS4210/monitor.c **** 	else return 1;
  76              		.loc 1 101 0
  77 000c 0120     		movs	r0, #1
 102:VS4210/monitor.c **** }
  78              		.loc 1 102 0
  79 000e 7047     		bx	lr
  80              	.L10:
 100:VS4210/monitor.c **** 	if( RS2_in == RS2_out ) return 0;
  81              		.loc 1 100 0
  82 0010 0020     		movs	r0, #0
  83 0012 7047     		bx	lr
  84              	.L12:
  85              		.align	2
  86              	.L11:
  87 0014 00000000 		.word	.LANCHOR2
  88 0018 00000000 		.word	.LANCHOR3
  89              		.cfi_endproc
  90              	.LFE69:
  92              		.section	.text.RS_rx,"ax",%progbits
  93              		.align	1
  94              		.global	RS_rx
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu softvfp
 100              	RS_rx:
 101              	.LFB70:
 103:VS4210/monitor.c **** 
 104:VS4210/monitor.c **** //#ifdef Hs_debug
 105:VS4210/monitor.c **** //=============================================================================
 106:VS4210/monitor.c **** //		Serial RX														   
 107:VS4210/monitor.c **** //=============================================================================
 108:VS4210/monitor.c **** BYTE RS_rx(void)
 109:VS4210/monitor.c **** {
 102              		.loc 1 109 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 110:VS4210/monitor.c **** 	BYTE ret;
 111:VS4210/monitor.c **** 		
 112:VS4210/monitor.c **** //	ES = 0;
 113:VS4210/monitor.c **** 	ret = RS_buf[RS_out];
 107              		.loc 1 113 0
 108 0000 064A     		ldr	r2, .L15
 109 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 110 0004 0649     		ldr	r1, .L15+4
 111 0006 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 112              	.LVL0:
 114:VS4210/monitor.c **** //	ret = DVR_buf[RS_out];
 115:VS4210/monitor.c **** 	RS_out++;
 113              		.loc 1 115 0
 114 0008 0133     		adds	r3, r3, #1
 115 000a DBB2     		uxtb	r3, r3
 116 000c 1370     		strb	r3, [r2]
ARM GAS  /tmp/ccZa3c9M.s 			page 5


 116:VS4210/monitor.c **** 	if(RS_out >= BUF_MAX) 
 117              		.loc 1 116 0
 118 000e 1D2B     		cmp	r3, #29
 119 0010 02D9     		bls	.L14
 117:VS4210/monitor.c **** 		RS_out = 0;
 120              		.loc 1 117 0
 121 0012 1346     		mov	r3, r2
 122 0014 0022     		movs	r2, #0
 123 0016 1A70     		strb	r2, [r3]
 124              	.L14:
 118:VS4210/monitor.c **** //	ES = 1;
 119:VS4210/monitor.c **** 
 120:VS4210/monitor.c **** 	return ret;
 121:VS4210/monitor.c **** }
 125              		.loc 1 121 0
 126 0018 7047     		bx	lr
 127              	.L16:
 128 001a 00BF     		.align	2
 129              	.L15:
 130 001c 00000000 		.word	.LANCHOR1
 131 0020 00000000 		.word	RS_buf
 132              		.cfi_endproc
 133              	.LFE70:
 135              		.section	.text.RS2_rx,"ax",%progbits
 136              		.align	1
 137              		.global	RS2_rx
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu softvfp
 143              	RS2_rx:
 144              	.LFB71:
 122:VS4210/monitor.c **** 
 123:VS4210/monitor.c **** BYTE RS2_rx(void)
 124:VS4210/monitor.c **** {
 145              		.loc 1 124 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 125:VS4210/monitor.c **** 	BYTE ret;
 126:VS4210/monitor.c **** 		
 127:VS4210/monitor.c **** //	ES = 0;
 128:VS4210/monitor.c **** 	ret = RS2_buf[RS2_out];
 150              		.loc 1 128 0
 151 0000 064A     		ldr	r2, .L19
 152 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 153 0004 0649     		ldr	r1, .L19+4
 154 0006 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 155              	.LVL1:
 129:VS4210/monitor.c **** //	ret = DVR_buf[RS_out];
 130:VS4210/monitor.c **** 	RS2_out++;
 156              		.loc 1 130 0
 157 0008 0133     		adds	r3, r3, #1
 158 000a DBB2     		uxtb	r3, r3
 159 000c 1370     		strb	r3, [r2]
 131:VS4210/monitor.c **** 	if(RS2_out >= TOA_BUF_MAX) 
ARM GAS  /tmp/ccZa3c9M.s 			page 6


 160              		.loc 1 131 0
 161 000e C72B     		cmp	r3, #199
 162 0010 02D9     		bls	.L18
 132:VS4210/monitor.c **** 		RS2_out = 0;
 163              		.loc 1 132 0
 164 0012 1346     		mov	r3, r2
 165 0014 0022     		movs	r2, #0
 166 0016 1A70     		strb	r2, [r3]
 167              	.L18:
 133:VS4210/monitor.c **** //	ES = 1;
 134:VS4210/monitor.c **** 
 135:VS4210/monitor.c **** 	return ret;
 136:VS4210/monitor.c **** }
 168              		.loc 1 136 0
 169 0018 7047     		bx	lr
 170              	.L20:
 171 001a 00BF     		.align	2
 172              	.L19:
 173 001c 00000000 		.word	.LANCHOR3
 174 0020 00000000 		.word	RS2_buf
 175              		.cfi_endproc
 176              	.LFE71:
 178              		.section	.text.RS_tx,"ax",%progbits
 179              		.align	1
 180              		.global	RS_tx
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu softvfp
 186              	RS_tx:
 187              	.LFB72:
 137:VS4210/monitor.c **** 
 138:VS4210/monitor.c **** 
 139:VS4210/monitor.c **** //=============================================================================
 140:VS4210/monitor.c **** //		Serial TX														   
 141:VS4210/monitor.c **** //=============================================================================
 142:VS4210/monitor.c **** void RS_tx(BYTE tx_buf)
 143:VS4210/monitor.c **** {
 188              		.loc 1 143 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 8
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              	.LVL2:
 193 0000 00B5     		push	{lr}
 194              	.LCFI0:
 195              		.cfi_def_cfa_offset 4
 196              		.cfi_offset 14, -4
 197 0002 83B0     		sub	sp, sp, #12
 198              	.LCFI1:
 199              		.cfi_def_cfa_offset 16
 200 0004 02A9     		add	r1, sp, #8
 201 0006 01F8010D 		strb	r0, [r1, #-1]!
 144:VS4210/monitor.c **** 
 145:VS4210/monitor.c **** 
 146:VS4210/monitor.c **** HAL_UART_Transmit(&huart1,&tx_buf,1,0xffff);
 202              		.loc 1 146 0
 203 000a 4FF6FF73 		movw	r3, #65535
ARM GAS  /tmp/ccZa3c9M.s 			page 7


 204 000e 0122     		movs	r2, #1
 205 0010 0248     		ldr	r0, .L23
 206              	.LVL3:
 207 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 208              	.LVL4:
 147:VS4210/monitor.c **** //USART1->DR = tx_buf;
 148:VS4210/monitor.c **** //while(0 == (USART1->SR&(1<<6)));
 149:VS4210/monitor.c **** 
 150:VS4210/monitor.c **** }
 209              		.loc 1 150 0
 210 0016 03B0     		add	sp, sp, #12
 211              	.LCFI2:
 212              		.cfi_def_cfa_offset 4
 213              		@ sp needed
 214 0018 5DF804FB 		ldr	pc, [sp], #4
 215              	.L24:
 216              		.align	2
 217              	.L23:
 218 001c 00000000 		.word	huart1
 219              		.cfi_endproc
 220              	.LFE72:
 222              		.section	.text.RS2_tx,"ax",%progbits
 223              		.align	1
 224              		.global	RS2_tx
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu softvfp
 230              	RS2_tx:
 231              	.LFB73:
 151:VS4210/monitor.c **** 
 152:VS4210/monitor.c **** void RS2_tx(BYTE tx_buf)
 153:VS4210/monitor.c **** {
 232              		.loc 1 153 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 8
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              	.LVL5:
 237 0000 00B5     		push	{lr}
 238              	.LCFI3:
 239              		.cfi_def_cfa_offset 4
 240              		.cfi_offset 14, -4
 241 0002 83B0     		sub	sp, sp, #12
 242              	.LCFI4:
 243              		.cfi_def_cfa_offset 16
 244 0004 02A9     		add	r1, sp, #8
 245 0006 01F8010D 		strb	r0, [r1, #-1]!
 154:VS4210/monitor.c **** 
 155:VS4210/monitor.c **** 
 156:VS4210/monitor.c **** HAL_UART_Transmit(&huart2,&tx_buf,1,0xffff);
 246              		.loc 1 156 0
 247 000a 4FF6FF73 		movw	r3, #65535
 248 000e 0122     		movs	r2, #1
 249 0010 0248     		ldr	r0, .L27
 250              	.LVL6:
 251 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 252              	.LVL7:
ARM GAS  /tmp/ccZa3c9M.s 			page 8


 157:VS4210/monitor.c **** //USART2->DR = tx_buf;
 158:VS4210/monitor.c **** //while(0 == (USART2->SR&(1<<6)));
 159:VS4210/monitor.c **** 
 160:VS4210/monitor.c **** }
 253              		.loc 1 160 0
 254 0016 03B0     		add	sp, sp, #12
 255              	.LCFI5:
 256              		.cfi_def_cfa_offset 4
 257              		@ sp needed
 258 0018 5DF804FB 		ldr	pc, [sp], #4
 259              	.L28:
 260              		.align	2
 261              	.L27:
 262 001c 00000000 		.word	huart2
 263              		.cfi_endproc
 264              	.LFE73:
 266              		.section	.text.Prompt,"ax",%progbits
 267              		.align	1
 268              		.global	Prompt
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 272              		.fpu softvfp
 274              	Prompt:
 275              	.LFB74:
 161:VS4210/monitor.c **** 
 162:VS4210/monitor.c **** //void Loader(BYTE);
 163:VS4210/monitor.c **** 
 164:VS4210/monitor.c **** //=============================================================================
 165:VS4210/monitor.c **** //
 166:VS4210/monitor.c **** //=============================================================================
 167:VS4210/monitor.c **** void Prompt(void)
 168:VS4210/monitor.c **** {
 276              		.loc 1 168 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280 0000 00B5     		push	{lr}
 281              	.LCFI6:
 282              		.cfi_def_cfa_offset 4
 283              		.cfi_offset 14, -4
 284 0002 83B0     		sub	sp, sp, #12
 285              	.LCFI7:
 286              		.cfi_def_cfa_offset 16
 169:VS4210/monitor.c **** 	if(day)
 287              		.loc 1 169 0
 288 0004 194B     		ldr	r3, .L38
 289 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 290 0008 6AB9     		cbnz	r2, .L35
 170:VS4210/monitor.c **** 	{
 171:VS4210/monitor.c **** 	Printf("\r\nMCU_I2C[%02x][%d:%d:%d:%d]>",(WORD)Monitor_I2C,(WORD)day,(WORD)hour,(WORD)minute,(WORD
 172:VS4210/monitor.c **** 	}
 173:VS4210/monitor.c **** 	else if(hour)
 291              		.loc 1 173 0
 292 000a 194B     		ldr	r3, .L38+4
 293 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 294 000e D2B9     		cbnz	r2, .L36
ARM GAS  /tmp/ccZa3c9M.s 			page 9


 174:VS4210/monitor.c **** 	{
 175:VS4210/monitor.c **** 	Printf("\r\nMCU_I2C[%02x][%d:%d:%d]>",(WORD)Monitor_I2C,(WORD)hour,(WORD)minute,(WORD)second);
 176:VS4210/monitor.c **** 	}
 177:VS4210/monitor.c **** 	else if(minute)
 295              		.loc 1 177 0
 296 0010 184B     		ldr	r3, .L38+8
 297 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 298 0014 12BB     		cbnz	r2, .L37
 178:VS4210/monitor.c **** 		{
 179:VS4210/monitor.c **** 		Printf("\r\nMCU_I2C[%02x][%d:%d]>",(WORD)Monitor_I2C,(WORD)minute,(WORD)second);
 180:VS4210/monitor.c **** 		}
 181:VS4210/monitor.c **** 	else
 182:VS4210/monitor.c **** 		{
 183:VS4210/monitor.c **** 		Printf("\r\nMCU_I2C[%02x][%d]>",(WORD)Monitor_I2C,(WORD)second);
 299              		.loc 1 183 0
 300 0016 184B     		ldr	r3, .L38+12
 301 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 302 001a 184B     		ldr	r3, .L38+16
 303 001c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 304 001e 1848     		ldr	r0, .L38+20
 305 0020 FFF7FEFF 		bl	Printf
 306              	.LVL8:
 184:VS4210/monitor.c **** 		}
 185:VS4210/monitor.c **** 
 186:VS4210/monitor.c **** }
 307              		.loc 1 186 0
 308 0024 0CE0     		b	.L29
 309              	.L35:
 171:VS4210/monitor.c **** 	}
 310              		.loc 1 171 0
 311 0026 124B     		ldr	r3, .L38+4
 312 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 313 002a 1449     		ldr	r1, .L38+16
 314 002c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 315 002e 1248     		ldr	r0, .L38+12
 316 0030 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 317 0032 0190     		str	r0, [sp, #4]
 318 0034 0F48     		ldr	r0, .L38+8
 319 0036 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 320 0038 0090     		str	r0, [sp]
 321 003a 1248     		ldr	r0, .L38+24
 322 003c FFF7FEFF 		bl	Printf
 323              	.LVL9:
 324              	.L29:
 325              		.loc 1 186 0
 326 0040 03B0     		add	sp, sp, #12
 327              	.LCFI8:
 328              		.cfi_remember_state
 329              		.cfi_def_cfa_offset 4
 330              		@ sp needed
 331 0042 5DF804FB 		ldr	pc, [sp], #4
 332              	.L36:
 333              	.LCFI9:
 334              		.cfi_restore_state
 175:VS4210/monitor.c **** 	}
 335              		.loc 1 175 0
 336 0046 0B4B     		ldr	r3, .L38+8
ARM GAS  /tmp/ccZa3c9M.s 			page 10


 337 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 338 004a 0C49     		ldr	r1, .L38+16
 339 004c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 340 004e 0A48     		ldr	r0, .L38+12
 341 0050 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 342 0052 0090     		str	r0, [sp]
 343 0054 0C48     		ldr	r0, .L38+28
 344 0056 FFF7FEFF 		bl	Printf
 345              	.LVL10:
 346 005a F1E7     		b	.L29
 347              	.L37:
 179:VS4210/monitor.c **** 		}
 348              		.loc 1 179 0
 349 005c 064B     		ldr	r3, .L38+12
 350 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 351 0060 0649     		ldr	r1, .L38+16
 352 0062 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 353 0064 0948     		ldr	r0, .L38+32
 354 0066 FFF7FEFF 		bl	Printf
 355              	.LVL11:
 356 006a E9E7     		b	.L29
 357              	.L39:
 358              		.align	2
 359              	.L38:
 360 006c 00000000 		.word	day
 361 0070 00000000 		.word	hour
 362 0074 00000000 		.word	minute
 363 0078 00000000 		.word	second
 364 007c 00000000 		.word	.LANCHOR4
 365 0080 54000000 		.word	.LC3
 366 0084 00000000 		.word	.LC0
 367 0088 20000000 		.word	.LC1
 368 008c 3C000000 		.word	.LC2
 369              		.cfi_endproc
 370              	.LFE74:
 372              		.section	.text.Mon_tx,"ax",%progbits
 373              		.align	1
 374              		.global	Mon_tx
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu softvfp
 380              	Mon_tx:
 381              	.LFB75:
 187:VS4210/monitor.c **** 
 188:VS4210/monitor.c **** void Mon_tx(BYTE ch)
 189:VS4210/monitor.c **** {
 382              		.loc 1 189 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              	.LVL12:
 387 0000 08B5     		push	{r3, lr}
 388              	.LCFI10:
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 3, -8
 391              		.cfi_offset 14, -4
ARM GAS  /tmp/ccZa3c9M.s 			page 11


 190:VS4210/monitor.c **** 	RS_tx(ch);
 392              		.loc 1 190 0
 393 0002 FFF7FEFF 		bl	RS_tx
 394              	.LVL13:
 191:VS4210/monitor.c **** }
 395              		.loc 1 191 0
 396 0006 08BD     		pop	{r3, pc}
 397              		.cfi_endproc
 398              	.LFE75:
 400              		.section	.text.a2i,"ax",%progbits
 401              		.align	1
 402              		.global	a2i
 403              		.syntax unified
 404              		.thumb
 405              		.thumb_func
 406              		.fpu softvfp
 408              	a2i:
 409              	.LFB76:
 192:VS4210/monitor.c **** 
 193:VS4210/monitor.c **** 
 194:VS4210/monitor.c **** //=============================================================================
 195:VS4210/monitor.c **** //		Convert ASCII to Binery                                             
 196:VS4210/monitor.c **** //=============================================================================
 197:VS4210/monitor.c ****  DWORD a2i(BYTE *str)
 198:VS4210/monitor.c **** {
 410              		.loc 1 198 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              		@ link register save eliminated.
 415              	.LVL14:
 199:VS4210/monitor.c **** 	 DWORD num=0;
 416              		.loc 1 199 0
 417 0000 0023     		movs	r3, #0
 418              	.LVL15:
 419              	.L44:
 200:VS4210/monitor.c **** 	BYTE i;
 201:VS4210/monitor.c **** 
 202:VS4210/monitor.c **** 	for(i=0; ; i++, str++) {
 203:VS4210/monitor.c **** 		if( *str=='\0' || *str==' ' ) break;
 420              		.loc 1 203 0
 421 0002 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 422 0004 41B1     		cbz	r1, .L42
 423              		.loc 1 203 0 is_stmt 0 discriminator 1
 424 0006 2029     		cmp	r1, #32
 425 0008 06D0     		beq	.L42
 204:VS4210/monitor.c **** 		num = num*10 + *str - '0';
 426              		.loc 1 204 0 is_stmt 1
 427 000a 03EB8303 		add	r3, r3, r3, lsl #2
 428              	.LVL16:
 429 000e 5A00     		lsls	r2, r3, #1
 430 0010 5318     		adds	r3, r2, r1
 431 0012 303B     		subs	r3, r3, #48
 432              	.LVL17:
 202:VS4210/monitor.c **** 		if( *str=='\0' || *str==' ' ) break;
 433              		.loc 1 202 0
 434 0014 0130     		adds	r0, r0, #1
ARM GAS  /tmp/ccZa3c9M.s 			page 12


 435              	.LVL18:
 203:VS4210/monitor.c **** 		num = num*10 + *str - '0';
 436              		.loc 1 203 0
 437 0016 F4E7     		b	.L44
 438              	.L42:
 205:VS4210/monitor.c **** 	}
 206:VS4210/monitor.c **** 	return num;
 207:VS4210/monitor.c **** }
 439              		.loc 1 207 0
 440 0018 1846     		mov	r0, r3
 441              	.LVL19:
 442 001a 7047     		bx	lr
 443              		.cfi_endproc
 444              	.LFE76:
 446              		.section	.text.Asc1Bin,"ax",%progbits
 447              		.align	1
 448              		.global	Asc1Bin
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 452              		.fpu softvfp
 454              	Asc1Bin:
 455              	.LFB77:
 208:VS4210/monitor.c **** 
 209:VS4210/monitor.c **** BYTE Asc1Bin(BYTE asc)
 210:VS4210/monitor.c **** {
 456              		.loc 1 210 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 461              	.LVL20:
 462 0000 0246     		mov	r2, r0
 211:VS4210/monitor.c **** 	if(asc>='0' && asc <='9') return (asc - '0');
 463              		.loc 1 211 0
 464 0002 A0F13003 		sub	r3, r0, #48
 465 0006 D8B2     		uxtb	r0, r3
 466              	.LVL21:
 467 0008 0928     		cmp	r0, #9
 468 000a 12D9     		bls	.L46
 212:VS4210/monitor.c **** 	if(asc>='a' && asc <='f') return (asc - 'a' + 0x0a);
 469              		.loc 1 212 0
 470 000c A2F16103 		sub	r3, r2, #97
 471 0010 DBB2     		uxtb	r3, r3
 472 0012 052B     		cmp	r3, #5
 473 0014 08D9     		bls	.L49
 213:VS4210/monitor.c **** 	if(asc>='A' && asc <='F') return (asc - 'A' + 0x0a);
 474              		.loc 1 213 0
 475 0016 A2F14103 		sub	r3, r2, #65
 476 001a DBB2     		uxtb	r3, r3
 477 001c 052B     		cmp	r3, #5
 478 001e 07D8     		bhi	.L48
 479              		.loc 1 213 0 is_stmt 0 discriminator 1
 480 0020 A2F13700 		sub	r0, r2, #55
 481 0024 C0B2     		uxtb	r0, r0
 482 0026 7047     		bx	lr
 483              	.L49:
ARM GAS  /tmp/ccZa3c9M.s 			page 13


 212:VS4210/monitor.c **** 	if(asc>='a' && asc <='f') return (asc - 'a' + 0x0a);
 484              		.loc 1 212 0 is_stmt 1 discriminator 1
 485 0028 A2F15700 		sub	r0, r2, #87
 486 002c C0B2     		uxtb	r0, r0
 487 002e 7047     		bx	lr
 488              	.L48:
 214:VS4210/monitor.c **** 	
 215:VS4210/monitor.c **** 	return 0;
 489              		.loc 1 215 0
 490 0030 0020     		movs	r0, #0
 491              	.L46:
 216:VS4210/monitor.c **** }
 492              		.loc 1 216 0
 493 0032 7047     		bx	lr
 494              		.cfi_endproc
 495              	.LFE77:
 497              		.section	.text.Asc2Bin,"ax",%progbits
 498              		.align	1
 499              		.global	Asc2Bin
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 503              		.fpu softvfp
 505              	Asc2Bin:
 506              	.LFB78:
 217:VS4210/monitor.c **** 
 218:VS4210/monitor.c **** BYTE Asc2Bin(PDATA_P BYTE *s)
 219:VS4210/monitor.c **** {
 507              		.loc 1 219 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              	.LVL22:
 512 0000 38B5     		push	{r3, r4, r5, lr}
 513              	.LCFI11:
 514              		.cfi_def_cfa_offset 16
 515              		.cfi_offset 3, -16
 516              		.cfi_offset 4, -12
 517              		.cfi_offset 5, -8
 518              		.cfi_offset 14, -4
 519 0002 0546     		mov	r5, r0
 520              	.LVL23:
 220:VS4210/monitor.c **** 	WORD bin;
 221:VS4210/monitor.c **** 
 222:VS4210/monitor.c **** 	bin = 0;
 521              		.loc 1 222 0
 522 0004 0024     		movs	r4, #0
 223:VS4210/monitor.c **** 	while(*s != '\0' && *s !=' ') {
 523              		.loc 1 223 0
 524 0006 04E0     		b	.L51
 525              	.LVL24:
 526              	.L53:
 224:VS4210/monitor.c **** 		bin = bin<<4;
 527              		.loc 1 224 0
 528 0008 2401     		lsls	r4, r4, #4
 529              	.LVL25:
 225:VS4210/monitor.c **** 		bin = bin + Asc1Bin(*s);
ARM GAS  /tmp/ccZa3c9M.s 			page 14


 530              		.loc 1 225 0
 531 000a FFF7FEFF 		bl	Asc1Bin
 532              	.LVL26:
 533 000e 0444     		add	r4, r4, r0
 534              	.LVL27:
 226:VS4210/monitor.c **** 		s++;
 535              		.loc 1 226 0
 536 0010 0135     		adds	r5, r5, #1
 537              	.LVL28:
 538              	.L51:
 223:VS4210/monitor.c **** 		bin = bin<<4;
 539              		.loc 1 223 0
 540 0012 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 541 0014 08B1     		cbz	r0, .L52
 223:VS4210/monitor.c **** 		bin = bin<<4;
 542              		.loc 1 223 0 is_stmt 0 discriminator 1
 543 0016 2028     		cmp	r0, #32
 544 0018 F6D1     		bne	.L53
 545              	.L52:
 227:VS4210/monitor.c **** 	}
 228:VS4210/monitor.c **** 	return (bin);
 229:VS4210/monitor.c **** }
 546              		.loc 1 229 0 is_stmt 1
 547 001a E0B2     		uxtb	r0, r4
 548 001c 38BD     		pop	{r3, r4, r5, pc}
 549              		.cfi_endproc
 550              	.LFE78:
 552              		.section	.text.hs_toupper,"ax",%progbits
 553              		.align	1
 554              		.global	hs_toupper
 555              		.syntax unified
 556              		.thumb
 557              		.thumb_func
 558              		.fpu softvfp
 560              	hs_toupper:
 561              	.LFB79:
 230:VS4210/monitor.c **** 
 231:VS4210/monitor.c **** 
 232:VS4210/monitor.c **** //=============================================================================
 233:VS4210/monitor.c **** BYTE hs_toupper(BYTE ch)
 234:VS4210/monitor.c **** {
 562              		.loc 1 234 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566              		@ link register save eliminated.
 567              	.LVL29:
 235:VS4210/monitor.c **** 	if( ch>='a' && ch<='z' )
 568              		.loc 1 235 0
 569 0000 A0F16103 		sub	r3, r0, #97
 570 0004 DBB2     		uxtb	r3, r3
 571 0006 192B     		cmp	r3, #25
 572 0008 01D8     		bhi	.L56
 236:VS4210/monitor.c **** 		return (ch - 'a' + 'A');
 573              		.loc 1 236 0
 574 000a 2038     		subs	r0, r0, #32
 575              	.LVL30:
ARM GAS  /tmp/ccZa3c9M.s 			page 15


 576 000c C0B2     		uxtb	r0, r0
 577              	.L56:
 237:VS4210/monitor.c **** 	
 238:VS4210/monitor.c **** 	return ch;
 239:VS4210/monitor.c **** }
 578              		.loc 1 239 0
 579 000e 7047     		bx	lr
 580              		.cfi_endproc
 581              	.LFE79:
 583              		.section	.text.stricmp,"ax",%progbits
 584              		.align	1
 585              		.global	stricmp
 586              		.syntax unified
 587              		.thumb
 588              		.thumb_func
 589              		.fpu softvfp
 591              	stricmp:
 592              	.LFB80:
 240:VS4210/monitor.c **** 
 241:VS4210/monitor.c **** int stricmp(BYTE *ptr1, BYTE *ptr2)
 242:VS4210/monitor.c **** {
 593              		.loc 1 242 0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597              	.LVL31:
 598 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 599              	.LCFI12:
 600              		.cfi_def_cfa_offset 24
 601              		.cfi_offset 3, -24
 602              		.cfi_offset 4, -20
 603              		.cfi_offset 5, -16
 604              		.cfi_offset 6, -12
 605              		.cfi_offset 7, -8
 606              		.cfi_offset 14, -4
 607 0002 0546     		mov	r5, r0
 608 0004 0E46     		mov	r6, r1
 609              	.LVL32:
 610              	.L59:
 243:VS4210/monitor.c **** 	int		i;
 244:VS4210/monitor.c **** 	int		ret;
 245:VS4210/monitor.c **** 	
 246:VS4210/monitor.c **** 	for(i=0; *ptr1; i++) {
 611              		.loc 1 246 0 discriminator 1
 612 0006 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 613 0008 58B1     		cbz	r0, .L58
 247:VS4210/monitor.c **** 	  ret = hs_toupper(*ptr1++) - hs_toupper(*ptr2++);
 614              		.loc 1 247 0
 615 000a 0135     		adds	r5, r5, #1
 616              	.LVL33:
 617 000c FFF7FEFF 		bl	hs_toupper
 618              	.LVL34:
 619 0010 0446     		mov	r4, r0
 620 0012 771C     		adds	r7, r6, #1
 621              	.LVL35:
 622 0014 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 623 0016 FFF7FEFF 		bl	hs_toupper
ARM GAS  /tmp/ccZa3c9M.s 			page 16


 624              	.LVL36:
 248:VS4210/monitor.c **** 		if( ret ) return ret;
 625              		.loc 1 248 0
 626 001a 201A     		subs	r0, r4, r0
 627              	.LVL37:
 628 001c 01D1     		bne	.L58
 247:VS4210/monitor.c **** 	  ret = hs_toupper(*ptr1++) - hs_toupper(*ptr2++);
 629              		.loc 1 247 0
 630 001e 3E46     		mov	r6, r7
 631 0020 F1E7     		b	.L59
 632              	.LVL38:
 633              	.L58:
 249:VS4210/monitor.c **** 	}
 250:VS4210/monitor.c **** 	return 0;
 251:VS4210/monitor.c **** }
 634              		.loc 1 251 0
 635 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 636              		.cfi_endproc
 637              	.LFE80:
 639              		.section	.text.MonReadI2C,"ax",%progbits
 640              		.align	1
 641              		.global	MonReadI2C
 642              		.syntax unified
 643              		.thumb
 644              		.thumb_func
 645              		.fpu softvfp
 647              	MonReadI2C:
 648              	.LFB81:
 252:VS4210/monitor.c **** 
 253:VS4210/monitor.c **** //=============================================================================
 254:VS4210/monitor.c **** //
 255:VS4210/monitor.c **** //=============================================================================
 256:VS4210/monitor.c **** /*
 257:VS4210/monitor.c **** void SetMonAddress(BYTE addr)
 258:VS4210/monitor.c **** {
 259:VS4210/monitor.c **** 	MonAddress = addr;
 260:VS4210/monitor.c **** }
 261:VS4210/monitor.c **** */
 262:VS4210/monitor.c **** void MonReadI2C(void)
 263:VS4210/monitor.c **** {
 649              		.loc 1 263 0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              		@ link register save eliminated.
 264:VS4210/monitor.c **** /*
 265:VS4210/monitor.c **** 	if( argc>=2 ) MonIndex = Asc2Bin( argv[1] );
 266:VS4210/monitor.c **** 	else	{
 267:VS4210/monitor.c **** 		Printf("   --> Missing parameter !!!");
 268:VS4210/monitor.c **** 		return;
 269:VS4210/monitor.c **** 	}
 270:VS4210/monitor.c **** 
 271:VS4210/monitor.c **** 	if ( MonAddress == TW88I2CAddress )
 272:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 273:VS4210/monitor.c **** 	else
 274:VS4210/monitor.c **** 		MonRdata = ReadI2C(MonAddress, MonIndex);
 275:VS4210/monitor.c **** 
ARM GAS  /tmp/ccZa3c9M.s 			page 17


 276:VS4210/monitor.c **** 	if( echo )
 277:VS4210/monitor.c **** 		Printf("\r\nRead %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);	
 278:VS4210/monitor.c **** 	
 279:VS4210/monitor.c **** 	MonWdata = MonRdata;
 280:VS4210/monitor.c **** 	*/
 281:VS4210/monitor.c **** }
 654              		.loc 1 281 0
 655 0000 7047     		bx	lr
 656              		.cfi_endproc
 657              	.LFE81:
 659              		.section	.text.MonWriteI2C,"ax",%progbits
 660              		.align	1
 661              		.global	MonWriteI2C
 662              		.syntax unified
 663              		.thumb
 664              		.thumb_func
 665              		.fpu softvfp
 667              	MonWriteI2C:
 668              	.LFB82:
 282:VS4210/monitor.c **** 
 283:VS4210/monitor.c **** 
 284:VS4210/monitor.c **** void MonWriteI2C(void)
 285:VS4210/monitor.c **** {
 669              		.loc 1 285 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 0
 672              		@ frame_needed = 0, uses_anonymous_args = 0
 673              		@ link register save eliminated.
 286:VS4210/monitor.c **** /*
 287:VS4210/monitor.c **** 	if( argc<3 ) {
 288:VS4210/monitor.c **** 		Printf("   --> Missing parameter !!!");
 289:VS4210/monitor.c **** 		return;
 290:VS4210/monitor.c **** 	}
 291:VS4210/monitor.c **** 	
 292:VS4210/monitor.c **** 	MonIndex = Asc2Bin( argv[1] );
 293:VS4210/monitor.c **** 	MonWdata = Asc2Bin( argv[2] );
 294:VS4210/monitor.c **** 	
 295:VS4210/monitor.c **** 	if( echo ) {
 296:VS4210/monitor.c **** 		Printf("\r\nWrite %2xh:%2xh ", (tWord)MonIndex, (tWord)MonWdata);
 297:VS4210/monitor.c **** 		if ( MonAddress == TW88I2CAddress ) {
 298:VS4210/monitor.c **** 			WriteTW88(MonIndex, MonWdata);
 299:VS4210/monitor.c **** 			MonRdata = ReadTW88(MonIndex);
 300:VS4210/monitor.c **** 		}
 301:VS4210/monitor.c **** 		else {
 302:VS4210/monitor.c **** 			WriteI2C(MonAddress, MonIndex, MonWdata);
 303:VS4210/monitor.c **** 			MonRdata = ReadI2C(MonAddress, MonIndex);
 304:VS4210/monitor.c **** 		}
 305:VS4210/monitor.c ****    		Printf("==> Read %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 306:VS4210/monitor.c **** 	}
 307:VS4210/monitor.c **** 	else {
 308:VS4210/monitor.c **** 		if ( MonAddress == TW88I2CAddress ) {
 309:VS4210/monitor.c **** 			WriteTW88(MonIndex, MonWdata);
 310:VS4210/monitor.c **** 		}
 311:VS4210/monitor.c **** 		else {
 312:VS4210/monitor.c **** 			WriteI2C(MonAddress, MonIndex, MonWdata);
 313:VS4210/monitor.c **** 		}
 314:VS4210/monitor.c **** 	}
ARM GAS  /tmp/ccZa3c9M.s 			page 18


 315:VS4210/monitor.c **** 	*/
 316:VS4210/monitor.c **** }
 674              		.loc 1 316 0
 675 0000 7047     		bx	lr
 676              		.cfi_endproc
 677              	.LFE82:
 679              		.section	.text.MonIncDecI2C,"ax",%progbits
 680              		.align	1
 681              		.global	MonIncDecI2C
 682              		.syntax unified
 683              		.thumb
 684              		.thumb_func
 685              		.fpu softvfp
 687              	MonIncDecI2C:
 688              	.LFB83:
 317:VS4210/monitor.c **** 
 318:VS4210/monitor.c **** 
 319:VS4210/monitor.c **** void MonIncDecI2C(BYTE inc)
 320:VS4210/monitor.c **** {
 689              		.loc 1 320 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 0
 692              		@ frame_needed = 0, uses_anonymous_args = 0
 693              	.LVL39:
 694 0000 08B5     		push	{r3, lr}
 695              	.LCFI13:
 696              		.cfi_def_cfa_offset 8
 697              		.cfi_offset 3, -8
 698              		.cfi_offset 14, -4
 321:VS4210/monitor.c **** 
 322:VS4210/monitor.c **** /*
 323:VS4210/monitor.c **** 	switch(inc){
 324:VS4210/monitor.c **** 	case 0:  MonWdata--;	break;
 325:VS4210/monitor.c **** 	case 1:  MonWdata++;	break;
 326:VS4210/monitor.c **** 	case 10: MonWdata-=0x10;	break;
 327:VS4210/monitor.c **** 	case 11: MonWdata+=0x10;	break;
 328:VS4210/monitor.c **** 	}
 329:VS4210/monitor.c **** 
 330:VS4210/monitor.c **** 
 331:VS4210/monitor.c **** 	if ( MonAddress == TW88I2CAddress ) {
 332:VS4210/monitor.c **** 		WriteTW88(MonIndex, MonWdata);
 333:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 334:VS4210/monitor.c **** 	}
 335:VS4210/monitor.c **** 	else {
 336:VS4210/monitor.c **** 		WriteI2C(MonAddress, MonIndex, MonWdata);
 337:VS4210/monitor.c **** 		MonRdata = ReadI2C(MonAddress, MonIndex);
 338:VS4210/monitor.c **** 	}
 339:VS4210/monitor.c **** 
 340:VS4210/monitor.c **** 	if( echo ) {
 341:VS4210/monitor.c **** 		Printf("Write %2xh:%2xh ", (tWord)MonIndex, (tWord)MonWdata);
 342:VS4210/monitor.c **** 		Printf("==> Read %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 343:VS4210/monitor.c **** 	}
 344:VS4210/monitor.c **** 
 345:VS4210/monitor.c **** */
 346:VS4210/monitor.c **** 	Prompt();
 699              		.loc 1 346 0
 700 0002 FFF7FEFF 		bl	Prompt
ARM GAS  /tmp/ccZa3c9M.s 			page 19


 701              	.LVL40:
 347:VS4210/monitor.c **** 
 348:VS4210/monitor.c **** }
 702              		.loc 1 348 0
 703 0006 08BD     		pop	{r3, pc}
 704              		.cfi_endproc
 705              	.LFE83:
 707              		.section	.text.MonDumpI2C,"ax",%progbits
 708              		.align	1
 709              		.global	MonDumpI2C
 710              		.syntax unified
 711              		.thumb
 712              		.thumb_func
 713              		.fpu softvfp
 715              	MonDumpI2C:
 716              	.LFB84:
 349:VS4210/monitor.c **** 
 350:VS4210/monitor.c **** void MonDumpI2C(void)
 351:VS4210/monitor.c **** {
 717              		.loc 1 351 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721              		@ link register save eliminated.
 352:VS4210/monitor.c **** /*
 353:VS4210/monitor.c **** 	BYTE ToMonIndex;
 354:VS4210/monitor.c **** 	int  cnt=8;
 355:VS4210/monitor.c **** 
 356:VS4210/monitor.c **** 	if( argc>=2 ) MonIndex = Asc2Bin(argv[1]);
 357:VS4210/monitor.c **** 	if( argc>=3 ) ToMonIndex = Asc2Bin(argv[2]);
 358:VS4210/monitor.c **** 	else ToMonIndex = MonIndex+cnt;
 359:VS4210/monitor.c **** 	if ( ToMonIndex < MonIndex ) ToMonIndex = 0xFF;
 360:VS4210/monitor.c **** 	cnt = ToMonIndex - MonIndex + 1;
 361:VS4210/monitor.c **** 
 362:VS4210/monitor.c **** 	if( echo ) {
 363:VS4210/monitor.c **** 		if ( MonAddress == TW88I2CAddress ) {
 364:VS4210/monitor.c **** 			for ( ; cnt > 0; cnt-- ) {
 365:VS4210/monitor.c **** 				MonRdata = ReadTW88(MonIndex);
 366:VS4210/monitor.c **** 				Printf("\r\n==> Read %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 367:VS4210/monitor.c **** 				MonIndex++;
 368:VS4210/monitor.c **** 			}
 369:VS4210/monitor.c **** 		}
 370:VS4210/monitor.c **** 		else {
 371:VS4210/monitor.c **** 			for ( ; cnt > 0; cnt-- ) {
 372:VS4210/monitor.c **** 				MonRdata = ReadI2C(MonAddress, MonIndex);
 373:VS4210/monitor.c **** 				Printf("\r\n==> Read %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 374:VS4210/monitor.c **** 				MonIndex++;
 375:VS4210/monitor.c **** 			}
 376:VS4210/monitor.c **** 		}
 377:VS4210/monitor.c **** 	}
 378:VS4210/monitor.c **** 	else {
 379:VS4210/monitor.c **** 		if ( MonAddress == TW88I2CAddress ) {
 380:VS4210/monitor.c **** 			for ( ; cnt > 0; cnt-- ) {
 381:VS4210/monitor.c **** 				MonRdata = ReadTW88(MonIndex);
 382:VS4210/monitor.c **** 				MonIndex++;
 383:VS4210/monitor.c **** 			}
 384:VS4210/monitor.c **** 		}
ARM GAS  /tmp/ccZa3c9M.s 			page 20


 385:VS4210/monitor.c **** 		else {
 386:VS4210/monitor.c **** 			for ( ; cnt > 0; cnt-- ) {
 387:VS4210/monitor.c **** 				MonRdata = ReadI2C(MonAddress, MonIndex);
 388:VS4210/monitor.c **** 				MonIndex++;
 389:VS4210/monitor.c **** 			}
 390:VS4210/monitor.c **** 		}
 391:VS4210/monitor.c **** 	}
 392:VS4210/monitor.c **** 	*/
 393:VS4210/monitor.c **** }
 722              		.loc 1 393 0
 723 0000 7047     		bx	lr
 724              		.cfi_endproc
 725              	.LFE84:
 727              		.section	.text.MonNewReadI2C,"ax",%progbits
 728              		.align	1
 729              		.global	MonNewReadI2C
 730              		.syntax unified
 731              		.thumb
 732              		.thumb_func
 733              		.fpu softvfp
 735              	MonNewReadI2C:
 736              	.LFB85:
 394:VS4210/monitor.c **** 
 395:VS4210/monitor.c **** //-----------------------------------------------------------------------------
 396:VS4210/monitor.c **** 
 397:VS4210/monitor.c **** void MonNewReadI2C(void)
 398:VS4210/monitor.c **** {
 737              		.loc 1 398 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
 740              		@ frame_needed = 0, uses_anonymous_args = 0
 741              		@ link register save eliminated.
 399:VS4210/monitor.c **** /*
 400:VS4210/monitor.c **** 	BYTE Slave;
 401:VS4210/monitor.c **** 
 402:VS4210/monitor.c **** 	if( argc>=3 ) MonIndex = Asc2Bin( argv[2] );
 403:VS4210/monitor.c **** 	else	{
 404:VS4210/monitor.c **** 		Printf("   --> Missing parameter !!!");
 405:VS4210/monitor.c **** 		return;
 406:VS4210/monitor.c **** 	}
 407:VS4210/monitor.c **** 	Slave = Asc2Bin(argv[1]);
 408:VS4210/monitor.c **** 
 409:VS4210/monitor.c **** 	if ( Slave == TW88I2CAddress )
 410:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 411:VS4210/monitor.c **** 	else
 412:VS4210/monitor.c **** 		MonRdata = ReadI2C(Slave, MonIndex);
 413:VS4210/monitor.c **** 
 414:VS4210/monitor.c **** 	if( echo )
 415:VS4210/monitor.c **** 		Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)MonIndex, (tWord)MonRdata);
 416:VS4210/monitor.c **** 	
 417:VS4210/monitor.c **** 	MonWdata = MonRdata;
 418:VS4210/monitor.c **** 	*/
 419:VS4210/monitor.c **** }
 742              		.loc 1 419 0
 743 0000 7047     		bx	lr
 744              		.cfi_endproc
 745              	.LFE85:
ARM GAS  /tmp/ccZa3c9M.s 			page 21


 747              		.section	.text.MonNewWriteI2C,"ax",%progbits
 748              		.align	1
 749              		.global	MonNewWriteI2C
 750              		.syntax unified
 751              		.thumb
 752              		.thumb_func
 753              		.fpu softvfp
 755              	MonNewWriteI2C:
 756              	.LFB86:
 420:VS4210/monitor.c **** 
 421:VS4210/monitor.c **** void MonNewWriteI2C(void)
 422:VS4210/monitor.c **** {
 757              		.loc 1 422 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              		@ link register save eliminated.
 423:VS4210/monitor.c **** /*
 424:VS4210/monitor.c **** 	BYTE Slave;
 425:VS4210/monitor.c **** 
 426:VS4210/monitor.c **** 	if( argc<4 ) {
 427:VS4210/monitor.c **** 		Printf("   --> Missing parameter !!!");
 428:VS4210/monitor.c **** 		return;
 429:VS4210/monitor.c **** 	}
 430:VS4210/monitor.c **** 	
 431:VS4210/monitor.c **** 	MonIndex = Asc2Bin( argv[2] );
 432:VS4210/monitor.c **** 	MonWdata = Asc2Bin( argv[3] );
 433:VS4210/monitor.c **** 	Slave = Asc2Bin(argv[1]);
 434:VS4210/monitor.c **** 	
 435:VS4210/monitor.c **** 	if ( Slave == TW88I2CAddress ) {
 436:VS4210/monitor.c **** 		WriteTW88(MonIndex, MonWdata);
 437:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 438:VS4210/monitor.c **** 	}
 439:VS4210/monitor.c **** 	else {
 440:VS4210/monitor.c **** 		WriteI2C(Slave, MonIndex, MonWdata);
 441:VS4210/monitor.c **** 		MonRdata = ReadI2C(Slave, MonIndex);
 442:VS4210/monitor.c ****    	}
 443:VS4210/monitor.c **** 
 444:VS4210/monitor.c **** 	if( echo )
 445:VS4210/monitor.c **** 		Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)MonIndex, (tWord)MonRdata);
 446:VS4210/monitor.c **** */
 447:VS4210/monitor.c **** }
 762              		.loc 1 447 0
 763 0000 7047     		bx	lr
 764              		.cfi_endproc
 765              	.LFE86:
 767              		.section	.text.MonNewDumpI2C,"ax",%progbits
 768              		.align	1
 769              		.global	MonNewDumpI2C
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 773              		.fpu softvfp
 775              	MonNewDumpI2C:
 776              	.LFB87:
 448:VS4210/monitor.c **** 
 449:VS4210/monitor.c **** void MonNewDumpI2C(void)
ARM GAS  /tmp/ccZa3c9M.s 			page 22


 450:VS4210/monitor.c **** {
 777              		.loc 1 450 0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 0
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781              		@ link register save eliminated.
 451:VS4210/monitor.c **** /*
 452:VS4210/monitor.c **** 	BYTE 	ToMonIndex, Slave;
 453:VS4210/monitor.c **** 	tWord	i;
 454:VS4210/monitor.c **** 	
 455:VS4210/monitor.c **** 	if( argc>=2 ) MonIndex = Asc2Bin(argv[2]);
 456:VS4210/monitor.c **** 	if( argc>=3 ) ToMonIndex = Asc2Bin(argv[3]);
 457:VS4210/monitor.c **** 	Slave = Asc2Bin(argv[1]);
 458:VS4210/monitor.c **** 
 459:VS4210/monitor.c **** 	if( echo ) {
 460:VS4210/monitor.c **** 		if ( Slave == TW88I2CAddress ) {
 461:VS4210/monitor.c **** 			for(i=MonIndex; i<=ToMonIndex; i++) {
 462:VS4210/monitor.c **** 				MonRdata = ReadTW88(i);
 463:VS4210/monitor.c ****         		Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)i, (tWord)MonRdata);
 464:VS4210/monitor.c **** 			}
 465:VS4210/monitor.c **** 		}
 466:VS4210/monitor.c **** 		else {
 467:VS4210/monitor.c **** 			for(i=MonIndex; i<=ToMonIndex; i++) {
 468:VS4210/monitor.c **** 				MonRdata = ReadI2C(Slave, i);
 469:VS4210/monitor.c ****         		Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)i, (tWord)MonRdata);
 470:VS4210/monitor.c **** 			}
 471:VS4210/monitor.c **** 		}
 472:VS4210/monitor.c **** 	}
 473:VS4210/monitor.c **** 	else {
 474:VS4210/monitor.c **** 		if ( Slave == TW88I2CAddress ) {
 475:VS4210/monitor.c **** 			for(i=MonIndex; i<=ToMonIndex; i++) {
 476:VS4210/monitor.c **** 				MonRdata = ReadTW88(i);
 477:VS4210/monitor.c **** 			}
 478:VS4210/monitor.c **** 		}
 479:VS4210/monitor.c **** 		else {
 480:VS4210/monitor.c **** 			for(i=MonIndex; i<=ToMonIndex; i++) {
 481:VS4210/monitor.c **** 				MonRdata = ReadI2C(Slave, i);
 482:VS4210/monitor.c **** 			}
 483:VS4210/monitor.c **** 		}
 484:VS4210/monitor.c **** 	}
 485:VS4210/monitor.c **** 	*/
 486:VS4210/monitor.c **** }
 782              		.loc 1 486 0
 783 0000 7047     		bx	lr
 784              		.cfi_endproc
 785              	.LFE87:
 787              		.section	.text.MonWriteBit,"ax",%progbits
 788              		.align	1
 789              		.global	MonWriteBit
 790              		.syntax unified
 791              		.thumb
 792              		.thumb_func
 793              		.fpu softvfp
 795              	MonWriteBit:
 796              	.LFB88:
 487:VS4210/monitor.c **** 
 488:VS4210/monitor.c **** 
ARM GAS  /tmp/ccZa3c9M.s 			page 23


 489:VS4210/monitor.c **** void MonWriteBit(void)
 490:VS4210/monitor.c **** {
 797              		.loc 1 490 0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 491:VS4210/monitor.c **** /*
 492:VS4210/monitor.c **** 	BYTE mask, i, FromBit, ToBit,  MonMask, val;
 493:VS4210/monitor.c **** 	BYTE Slave;
 494:VS4210/monitor.c **** 	// b 88 index startbit|endbit data
 495:VS4210/monitor.c **** 
 496:VS4210/monitor.c **** 	if( argc<5 ) {
 497:VS4210/monitor.c **** 		Printf("   --> Missing parameter !!!");
 498:VS4210/monitor.c **** 		return;
 499:VS4210/monitor.c **** 	}
 500:VS4210/monitor.c **** 	Slave = Asc2Bin(argv[1]);
 501:VS4210/monitor.c **** 
 502:VS4210/monitor.c **** 	MonIndex = Asc2Bin( argv[2] );
 503:VS4210/monitor.c **** 	FromBit  = (Asc2Bin( argv[3] ) >> 4) & 0x0f;
 504:VS4210/monitor.c **** 	ToBit  = Asc2Bin( argv[3] )  & 0x0f;
 505:VS4210/monitor.c **** 	MonMask  = Asc2Bin( argv[4] );
 506:VS4210/monitor.c **** 
 507:VS4210/monitor.c **** 	if( FromBit<ToBit || FromBit>7 || ToBit>7) {
 508:VS4210/monitor.c **** 		Printf("\r\n   --> Wrong range of bit operation !!!");
 509:VS4210/monitor.c **** 		return;
 510:VS4210/monitor.c **** 	}
 511:VS4210/monitor.c **** 	
 512:VS4210/monitor.c **** 	mask = 0xff; 
 513:VS4210/monitor.c **** 	val=0x7f;
 514:VS4210/monitor.c **** 	for(i=7; i>FromBit; i--) {
 515:VS4210/monitor.c **** 		mask &= val;
 516:VS4210/monitor.c **** 		val = val>>1;
 517:VS4210/monitor.c **** 	}
 518:VS4210/monitor.c **** 
 519:VS4210/monitor.c **** 	val=0xfe;
 520:VS4210/monitor.c **** 	for(i=0; i<ToBit; i++) {
 521:VS4210/monitor.c **** 		mask &= val;
 522:VS4210/monitor.c **** 		val = val<<1;
 523:VS4210/monitor.c **** 	}
 524:VS4210/monitor.c **** 
 525:VS4210/monitor.c **** 	if ( Slave == TW88I2CAddress ) {
 526:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 527:VS4210/monitor.c **** 		MonWdata = (MonRdata & (~mask)) | (MonMask & mask);
 528:VS4210/monitor.c **** 				
 529:VS4210/monitor.c **** 		WriteTW88(MonIndex, MonWdata);
 530:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 531:VS4210/monitor.c **** 	}
 532:VS4210/monitor.c **** 	else {
 533:VS4210/monitor.c **** 		MonRdata = ReadI2C(Slave, MonIndex);
 534:VS4210/monitor.c **** 		MonWdata = (MonRdata & (~mask)) | (MonMask & mask);
 535:VS4210/monitor.c **** 				
 536:VS4210/monitor.c **** 		WriteI2C(Slave, MonIndex, MonWdata);
 537:VS4210/monitor.c **** 		MonRdata = ReadI2C(Slave, MonIndex);
 538:VS4210/monitor.c **** 	}
 539:VS4210/monitor.c **** 
 540:VS4210/monitor.c **** 	if( echo )
ARM GAS  /tmp/ccZa3c9M.s 			page 24


 541:VS4210/monitor.c **** 		Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)MonIndex, (tWord)MonRdata);
 542:VS4210/monitor.c **** */
 543:VS4210/monitor.c **** }
 802              		.loc 1 543 0
 803 0000 7047     		bx	lr
 804              		.cfi_endproc
 805              	.LFE88:
 807              		.section	.text.MonTxDump,"ax",%progbits
 808              		.align	1
 809              		.global	MonTxDump
 810              		.syntax unified
 811              		.thumb
 812              		.thumb_func
 813              		.fpu softvfp
 815              	MonTxDump:
 816              	.LFB89:
 544:VS4210/monitor.c **** 
 545:VS4210/monitor.c **** #if  0// defined( SUPPORT_PC ) || defined( SUPPORT_DTV )
 546:VS4210/monitor.c **** void PclkAccess(void)
 547:VS4210/monitor.c **** {
 548:VS4210/monitor.c **** 	DtWord pclk;
 549:VS4210/monitor.c **** 
 550:VS4210/monitor.c **** 	if( argc > 2 ) {
 551:VS4210/monitor.c **** 		Printf("   --> Too many parameter !!!");
 552:VS4210/monitor.c **** 		return;
 553:VS4210/monitor.c **** 	}
 554:VS4210/monitor.c **** 
 555:VS4210/monitor.c **** 	if( argc==2 ) {
 556:VS4210/monitor.c **** 		pclk = (DtWord)a2i(argv[1]) * 1000000;
 557:VS4210/monitor.c **** 		Printf("\r\n --> Set Pclk:  %ld Hz ", pclk);
 558:VS4210/monitor.c **** //		Printf("\r\n Not Suuport ");
 559:VS4210/monitor.c **** 		ChangeInternPLL(pclk);
 560:VS4210/monitor.c **** 	}
 561:VS4210/monitor.c **** 	
 562:VS4210/monitor.c **** 	if( argc==1)   GetPPF();
 563:VS4210/monitor.c **** 	
 564:VS4210/monitor.c **** }
 565:VS4210/monitor.c **** #endif
 566:VS4210/monitor.c **** 
 567:VS4210/monitor.c **** void MonTxDump(void)
 568:VS4210/monitor.c **** {
 817              		.loc 1 568 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              		@ link register save eliminated.
 569:VS4210/monitor.c **** /*
 570:VS4210/monitor.c **** 	tWord	count;
 571:VS4210/monitor.c **** 
 572:VS4210/monitor.c **** 	if ( argc < 2 ) {
 573:VS4210/monitor.c **** 		Puts("\r\nInsufficient parameters...");
 574:VS4210/monitor.c **** 		return;
 575:VS4210/monitor.c **** 	}
 576:VS4210/monitor.c **** 	count = (tWord)a2i(argv[1]);
 577:VS4210/monitor.c **** 	do {
 578:VS4210/monitor.c **** 		RS_tx((count&0x1F)+0x20);
 579:VS4210/monitor.c **** 		count--;
ARM GAS  /tmp/ccZa3c9M.s 			page 25


 580:VS4210/monitor.c **** 	} while ( count != 0 );
 581:VS4210/monitor.c **** 	*/
 582:VS4210/monitor.c **** }
 822              		.loc 1 582 0
 823 0000 7047     		bx	lr
 824              		.cfi_endproc
 825              	.LFE89:
 827              		.section	.text.MonHelp,"ax",%progbits
 828              		.align	1
 829              		.global	MonHelp
 830              		.syntax unified
 831              		.thumb
 832              		.thumb_func
 833              		.fpu softvfp
 835              	MonHelp:
 836              	.LFB90:
 583:VS4210/monitor.c **** 
 584:VS4210/monitor.c **** //=============================================================================
 585:VS4210/monitor.c **** //			Help Message
 586:VS4210/monitor.c **** //=============================================================================
 587:VS4210/monitor.c **** void MonHelp(void)
 588:VS4210/monitor.c **** {
 837              		.loc 1 588 0
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 0
 840              		@ frame_needed = 0, uses_anonymous_args = 0
 841 0000 38B5     		push	{r3, r4, r5, lr}
 842              	.LCFI14:
 843              		.cfi_def_cfa_offset 16
 844              		.cfi_offset 3, -16
 845              		.cfi_offset 4, -12
 846              		.cfi_offset 5, -8
 847              		.cfi_offset 14, -4
 589:VS4210/monitor.c **** 	Printf("\r\n=======================================================");
 848              		.loc 1 589 0
 849 0002 214C     		ldr	r4, .L75
 850 0004 2046     		mov	r0, r4
 851 0006 FFF7FEFF 		bl	Printf
 852              	.LVL41:
 590:VS4210/monitor.c **** 	Printf("\r\n>>>     Welcome to ML076HQ     Rev 1.00     <<<");
 853              		.loc 1 590 0
 854 000a 2048     		ldr	r0, .L75+4
 855 000c FFF7FEFF 		bl	Printf
 856              	.LVL42:
 591:VS4210/monitor.c **** 	Printf("\r\n=======================================================");
 857              		.loc 1 591 0
 858 0010 2046     		mov	r0, r4
 859 0012 FFF7FEFF 		bl	Printf
 860              	.LVL43:
 592:VS4210/monitor.c **** 	Printf("\r\n   R ii             ; Read TP2824 data");
 861              		.loc 1 592 0
 862 0016 1E48     		ldr	r0, .L75+8
 863 0018 FFF7FEFF 		bl	Printf
 864              	.LVL44:
 593:VS4210/monitor.c **** 	Printf("\r\n   W ii dd          ; Write TP2824 data");
 865              		.loc 1 593 0
 866 001c 1D48     		ldr	r0, .L75+12
ARM GAS  /tmp/ccZa3c9M.s 			page 26


 867 001e FFF7FEFF 		bl	Printf
 868              	.LVL45:
 594:VS4210/monitor.c **** 	Printf("\r\n   VR ii             ; Read VS4210 data");
 869              		.loc 1 594 0
 870 0022 1D48     		ldr	r0, .L75+16
 871 0024 FFF7FEFF 		bl	Printf
 872              	.LVL46:
 595:VS4210/monitor.c **** 	Printf("\r\n   VW ii dd          ; Write VS4210 data");
 873              		.loc 1 595 0
 874 0028 1C48     		ldr	r0, .L75+20
 875 002a FFF7FEFF 		bl	Printf
 876              	.LVL47:
 596:VS4210/monitor.c **** 	Printf("\r\n   D [ii] [cc]      ; Dump");
 877              		.loc 1 596 0
 878 002e 1C48     		ldr	r0, .L75+24
 879 0030 FFF7FEFF 		bl	Printf
 880              	.LVL48:
 597:VS4210/monitor.c **** 	Printf("\r\n   C aa             ; Change I2C address");
 881              		.loc 1 597 0
 882 0034 1B48     		ldr	r0, .L75+28
 883 0036 FFF7FEFF 		bl	Printf
 884              	.LVL49:
 598:VS4210/monitor.c **** 	Printf("\r\n   M ?              ; Current Input");
 885              		.loc 1 598 0
 886 003a 1B48     		ldr	r0, .L75+32
 887 003c FFF7FEFF 		bl	Printf
 888              	.LVL50:
 599:VS4210/monitor.c **** 	Printf("\r\n   M dd             ; Change Input");
 889              		.loc 1 599 0
 890 0040 1A48     		ldr	r0, .L75+36
 891 0042 FFF7FEFF 		bl	Printf
 892              	.LVL51:
 600:VS4210/monitor.c **** 	Printf("\r\n   Access [0,1]     ; Program TW88xx Access OFF/ON");
 893              		.loc 1 600 0
 894 0046 1A48     		ldr	r0, .L75+40
 895 0048 FFF7FEFF 		bl	Printf
 896              	.LVL52:
 601:VS4210/monitor.c **** 	Printf("\r\n   AutoDetect [0,1] ; PC Automode OFF/ON");
 897              		.loc 1 601 0
 898 004c 1948     		ldr	r0, .L75+44
 899 004e FFF7FEFF 		bl	Printf
 900              	.LVL53:
 602:VS4210/monitor.c **** 	Printf("\r\n   PCAuto		    ; RUN PC Auto Adjust");
 901              		.loc 1 602 0
 902 0052 1948     		ldr	r0, .L75+48
 903 0054 FFF7FEFF 		bl	Printf
 904              	.LVL54:
 603:VS4210/monitor.c **** 	Printf("\r\n   Debug [0..255]   ; Debuging display level");
 905              		.loc 1 603 0
 906 0058 1848     		ldr	r0, .L75+52
 907 005a FFF7FEFF 		bl	Printf
 908              	.LVL55:
 604:VS4210/monitor.c **** 	Printf("\r\n   Echo On/Off      ; Terminal Echoing On/Off");
 909              		.loc 1 604 0
 910 005e 1848     		ldr	r0, .L75+56
 911 0060 FFF7FEFF 		bl	Printf
 912              	.LVL56:
ARM GAS  /tmp/ccZa3c9M.s 			page 27


 605:VS4210/monitor.c **** 	Printf("\r\n   Delta            ; Init DeltaRGB Panel");
 913              		.loc 1 605 0
 914 0064 1748     		ldr	r0, .L75+60
 915 0066 FFF7FEFF 		bl	Printf
 916              	.LVL57:
 606:VS4210/monitor.c **** 	Printf("\r\n   Delta w ii dh dl; SPI Write to DeltaRGB Panel");
 917              		.loc 1 606 0
 918 006a 1748     		ldr	r0, .L75+64
 919 006c FFF7FEFF 		bl	Printf
 920              	.LVL58:
 607:VS4210/monitor.c **** 	Printf("\r\n");
 921              		.loc 1 607 0
 922 0070 164D     		ldr	r5, .L75+68
 923 0072 2846     		mov	r0, r5
 924 0074 FFF7FEFF 		bl	Printf
 925              	.LVL59:
 608:VS4210/monitor.c **** 	Printf("\r\n=======================================================");
 926              		.loc 1 608 0
 927 0078 2046     		mov	r0, r4
 928 007a FFF7FEFF 		bl	Printf
 929              	.LVL60:
 609:VS4210/monitor.c **** 	Printf("\r\n");
 930              		.loc 1 609 0
 931 007e 2846     		mov	r0, r5
 932 0080 FFF7FEFF 		bl	Printf
 933              	.LVL61:
 610:VS4210/monitor.c **** }
 934              		.loc 1 610 0
 935 0084 38BD     		pop	{r3, r4, r5, pc}
 936              	.L76:
 937 0086 00BF     		.align	2
 938              	.L75:
 939 0088 00000000 		.word	.LC4
 940 008c 3C000000 		.word	.LC5
 941 0090 70000000 		.word	.LC6
 942 0094 9C000000 		.word	.LC7
 943 0098 C8000000 		.word	.LC8
 944 009c F4000000 		.word	.LC9
 945 00a0 20010000 		.word	.LC10
 946 00a4 40010000 		.word	.LC11
 947 00a8 6C010000 		.word	.LC12
 948 00ac 94010000 		.word	.LC13
 949 00b0 BC010000 		.word	.LC14
 950 00b4 F4010000 		.word	.LC15
 951 00b8 20020000 		.word	.LC16
 952 00bc 48020000 		.word	.LC17
 953 00c0 78020000 		.word	.LC18
 954 00c4 A8020000 		.word	.LC19
 955 00c8 D4020000 		.word	.LC20
 956 00cc 08030000 		.word	.LC21
 957              		.cfi_endproc
 958              	.LFE90:
 960              		.section	.text.MonGetCommand,"ax",%progbits
 961              		.align	1
 962              		.global	MonGetCommand
 963              		.syntax unified
 964              		.thumb
ARM GAS  /tmp/ccZa3c9M.s 			page 28


 965              		.thumb_func
 966              		.fpu softvfp
 968              	MonGetCommand:
 969              	.LFB91:
 611:VS4210/monitor.c **** 
 612:VS4210/monitor.c **** //=============================================================================
 613:VS4210/monitor.c **** //
 614:VS4210/monitor.c **** //=============================================================================
 615:VS4210/monitor.c **** BYTE MonGetCommand(void)
 616:VS4210/monitor.c **** {
 970              		.loc 1 616 0
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 0
 973              		@ frame_needed = 0, uses_anonymous_args = 0
 974 0000 38B5     		push	{r3, r4, r5, lr}
 975              	.LCFI15:
 976              		.cfi_def_cfa_offset 16
 977              		.cfi_offset 3, -16
 978              		.cfi_offset 4, -12
 979              		.cfi_offset 5, -8
 980              		.cfi_offset 14, -4
 981              	.LVL62:
 617:VS4210/monitor.c **** 	static BYTE comment=0;
 618:VS4210/monitor.c **** 	static BYTE incnt=0, last_argc=0;
 619:VS4210/monitor.c **** 	BYTE i, ch;
 620:VS4210/monitor.c **** 	BYTE ret=0;
 621:VS4210/monitor.c **** 
 622:VS4210/monitor.c **** 	if( !RS_ready() ) return 0;
 982              		.loc 1 622 0
 983 0002 FFF7FEFF 		bl	RS_ready
 984              	.LVL63:
 985 0006 0446     		mov	r4, r0
 986 0008 08B9     		cbnz	r0, .L110
 987              	.LVL64:
 988              	.L78:
 623:VS4210/monitor.c **** 	//#ifdef HS_DEBUG
 624:VS4210/monitor.c **** 	ch = RS_rx();
 625:VS4210/monitor.c **** 	//#endif
 626:VS4210/monitor.c **** 
 627:VS4210/monitor.c **** 	#if (_DEBUG_MESSAGE_Monitor==ON)
 628:VS4210/monitor.c **** 	 Monitor_flag=_TRUE;
 629:VS4210/monitor.c **** 	#endif
 630:VS4210/monitor.c **** 	  MCUTimerReactiveTimerEvent(SEC(30), _USER_TIMER_EVENT_Monitor_ON);  
 631:VS4210/monitor.c **** 
 632:VS4210/monitor.c **** 	//----- if comment, echo back and ignore -----
 633:VS4210/monitor.c **** 	if( comment ) {
 634:VS4210/monitor.c **** 		if( ch=='\r' || ch==0x1b ) comment = 0;
 635:VS4210/monitor.c **** 		else { 
 636:VS4210/monitor.c **** 			Mon_tx(ch);
 637:VS4210/monitor.c **** 			return 0;
 638:VS4210/monitor.c **** 		}
 639:VS4210/monitor.c **** 	}
 640:VS4210/monitor.c **** 	else if( ch==';' ) {
 641:VS4210/monitor.c **** 		comment = 1;
 642:VS4210/monitor.c **** 		Mon_tx(ch);
 643:VS4210/monitor.c **** 		return 0;
 644:VS4210/monitor.c **** 	}
ARM GAS  /tmp/ccZa3c9M.s 			page 29


 645:VS4210/monitor.c **** 
 646:VS4210/monitor.c **** 	//=====================================
 647:VS4210/monitor.c **** 	switch( ch ) {
 648:VS4210/monitor.c **** 
 649:VS4210/monitor.c **** 	case 0x1b:
 650:VS4210/monitor.c **** 		argc = 0;
 651:VS4210/monitor.c **** 		incnt = 0;
 652:VS4210/monitor.c **** 		comment = 0;
 653:VS4210/monitor.c **** 		Prompt();
 654:VS4210/monitor.c **** 		return 0;
 655:VS4210/monitor.c **** 
 656:VS4210/monitor.c **** 	//--- end of string
 657:VS4210/monitor.c **** 	case '\r':
 658:VS4210/monitor.c **** 
 659:VS4210/monitor.c **** 		if( incnt==0 ) {
 660:VS4210/monitor.c **** 			Prompt();
 661:VS4210/monitor.c **** 			break;
 662:VS4210/monitor.c **** 		}
 663:VS4210/monitor.c **** 
 664:VS4210/monitor.c **** 		monstr[incnt++] = '\0';
 665:VS4210/monitor.c **** 		argc=0;
 666:VS4210/monitor.c **** 
 667:VS4210/monitor.c **** 		for(i=0; i<incnt; i++) if( monstr[i]!=' ' ) break;
 668:VS4210/monitor.c **** 
 669:VS4210/monitor.c **** 		if( !monstr[i] ) {
 670:VS4210/monitor.c **** 			incnt = 0;
 671:VS4210/monitor.c **** 			comment = 0;
 672:VS4210/monitor.c **** 			Prompt();
 673:VS4210/monitor.c **** 			return 0;
 674:VS4210/monitor.c **** 		}
 675:VS4210/monitor.c **** 		argv[0] = &monstr[i];
 676:VS4210/monitor.c **** 		for(; i<incnt; i++) {
 677:VS4210/monitor.c **** 			if( monstr[i]==' ' || monstr[i]=='\0' ) {
 678:VS4210/monitor.c **** 				monstr[i]='\0';
 679:VS4210/monitor.c ****      			 //Printf("(%s) ",  argv[argc]);
 680:VS4210/monitor.c **** 				i++;
 681:VS4210/monitor.c **** 				while( monstr[i]==' ' ) i++;
 682:VS4210/monitor.c **** 				argc++;
 683:VS4210/monitor.c **** 				if( monstr[i] ){
 684:VS4210/monitor.c ****      			 argv[argc] = &monstr[i];
 685:VS4210/monitor.c **** 				}
 686:VS4210/monitor.c **** 			}
 687:VS4210/monitor.c **** 		}
 688:VS4210/monitor.c **** 
 689:VS4210/monitor.c **** 		ret = 1;
 690:VS4210/monitor.c **** 		last_argc = argc;
 691:VS4210/monitor.c **** 		incnt = 0;
 692:VS4210/monitor.c **** 		
 693:VS4210/monitor.c **** 		break;
 694:VS4210/monitor.c **** 
 695:VS4210/monitor.c **** 	//--- repeat command
 696:VS4210/monitor.c **** 	case '/':
 697:VS4210/monitor.c **** 		argc = last_argc;
 698:VS4210/monitor.c **** 		ret = 1;
 699:VS4210/monitor.c **** 		break;
 700:VS4210/monitor.c **** 
 701:VS4210/monitor.c **** 	//--- back space
ARM GAS  /tmp/ccZa3c9M.s 			page 30


 702:VS4210/monitor.c **** 	case 0x08:
 703:VS4210/monitor.c **** 		if( incnt ) {
 704:VS4210/monitor.c **** 			incnt--;
 705:VS4210/monitor.c **** 			Mon_tx(ch);
 706:VS4210/monitor.c **** 			Mon_tx(' ');
 707:VS4210/monitor.c **** 			Mon_tx(ch);
 708:VS4210/monitor.c **** 		}
 709:VS4210/monitor.c **** 		break;
 710:VS4210/monitor.c **** 
 711:VS4210/monitor.c **** 	//--- decreamental write
 712:VS4210/monitor.c **** 	case ',':
 713:VS4210/monitor.c **** 		if( incnt ) {
 714:VS4210/monitor.c **** 			Mon_tx(ch);
 715:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 716:VS4210/monitor.c **** 		}
 717:VS4210/monitor.c **** 		else
 718:VS4210/monitor.c **** 			MonIncDecI2C(0);
 719:VS4210/monitor.c **** 		break;
 720:VS4210/monitor.c **** 
 721:VS4210/monitor.c **** 	case '<':
 722:VS4210/monitor.c **** 		if( incnt ) {
 723:VS4210/monitor.c **** 			Mon_tx(ch);
 724:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 725:VS4210/monitor.c **** 		}
 726:VS4210/monitor.c **** 		else
 727:VS4210/monitor.c **** 			MonIncDecI2C(10);
 728:VS4210/monitor.c **** 		break;
 729:VS4210/monitor.c **** 	//--- increamental write
 730:VS4210/monitor.c **** 	case '.':
 731:VS4210/monitor.c **** 		if( incnt ) {
 732:VS4210/monitor.c **** 			Mon_tx(ch);
 733:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 734:VS4210/monitor.c **** 		}
 735:VS4210/monitor.c **** 		else
 736:VS4210/monitor.c **** 			MonIncDecI2C(1);
 737:VS4210/monitor.c **** 		break;
 738:VS4210/monitor.c **** 
 739:VS4210/monitor.c **** 	case '>':
 740:VS4210/monitor.c **** 		if( incnt ) {
 741:VS4210/monitor.c **** 			Mon_tx(ch);
 742:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 743:VS4210/monitor.c **** 		}
 744:VS4210/monitor.c **** 		else
 745:VS4210/monitor.c **** 			MonIncDecI2C(11);
 746:VS4210/monitor.c **** 		break;
 747:VS4210/monitor.c **** 
 748:VS4210/monitor.c **** 	default:
 749:VS4210/monitor.c **** 		Mon_tx(ch);
 750:VS4210/monitor.c **** 		monstr[incnt++] = ch;
 751:VS4210/monitor.c **** 		break;
 752:VS4210/monitor.c **** 	}
 753:VS4210/monitor.c **** 
 754:VS4210/monitor.c **** 	if( ret ) {
 755:VS4210/monitor.c **** 		comment = 0;
 756:VS4210/monitor.c **** 		last_argc = argc;
 757:VS4210/monitor.c **** 		return ret;
 758:VS4210/monitor.c **** 	}
ARM GAS  /tmp/ccZa3c9M.s 			page 31


 759:VS4210/monitor.c **** 	else {
 760:VS4210/monitor.c **** 		return ret;
 761:VS4210/monitor.c **** 	}
 762:VS4210/monitor.c **** }
 989              		.loc 1 762 0
 990 000a 2046     		mov	r0, r4
 991 000c 38BD     		pop	{r3, r4, r5, pc}
 992              	.LVL65:
 993              	.L110:
 624:VS4210/monitor.c **** 	//#endif
 994              		.loc 1 624 0
 995 000e FFF7FEFF 		bl	RS_rx
 996              	.LVL66:
 997 0012 0546     		mov	r5, r0
 998              	.LVL67:
 628:VS4210/monitor.c **** 	#endif
 999              		.loc 1 628 0
 1000 0014 944B     		ldr	r3, .L115
 1001 0016 0122     		movs	r2, #1
 1002 0018 1A70     		strb	r2, [r3]
 630:VS4210/monitor.c **** 
 1003              		.loc 1 630 0
 1004 001a 1F21     		movs	r1, #31
 1005 001c 47F23050 		movw	r0, #30000
 1006 0020 FFF7FEFF 		bl	MCUTimerReactiveTimerEvent
 1007              	.LVL68:
 633:VS4210/monitor.c **** 		if( ch=='\r' || ch==0x1b ) comment = 0;
 1008              		.loc 1 633 0
 1009 0024 914B     		ldr	r3, .L115+4
 1010 0026 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1011 0028 64B1     		cbz	r4, .L79
 634:VS4210/monitor.c **** 		else { 
 1012              		.loc 1 634 0
 1013 002a 0D2D     		cmp	r5, #13
 1014 002c 01D0     		beq	.L80
 634:VS4210/monitor.c **** 		else { 
 1015              		.loc 1 634 0 is_stmt 0 discriminator 2
 1016 002e 1B2D     		cmp	r5, #27
 1017 0030 03D1     		bne	.L81
 1018              	.L80:
 634:VS4210/monitor.c **** 		else { 
 1019              		.loc 1 634 0 discriminator 3
 1020 0032 8E4B     		ldr	r3, .L115+4
 1021 0034 0022     		movs	r2, #0
 1022 0036 1A70     		strb	r2, [r3]
 1023 0038 06E0     		b	.L82
 1024              	.L81:
 636:VS4210/monitor.c **** 			return 0;
 1025              		.loc 1 636 0 is_stmt 1
 1026 003a 2846     		mov	r0, r5
 1027 003c FFF7FEFF 		bl	Mon_tx
 1028              	.LVL69:
 637:VS4210/monitor.c **** 		}
 1029              		.loc 1 637 0
 1030 0040 0024     		movs	r4, #0
 1031 0042 E2E7     		b	.L78
 1032              	.L79:
ARM GAS  /tmp/ccZa3c9M.s 			page 32


 640:VS4210/monitor.c **** 		comment = 1;
 1033              		.loc 1 640 0
 1034 0044 3B2D     		cmp	r5, #59
 1035 0046 3DD0     		beq	.L111
 1036              	.L82:
 647:VS4210/monitor.c **** 
 1037              		.loc 1 647 0
 1038 0048 A5F10803 		sub	r3, r5, #8
 1039 004c 362B     		cmp	r3, #54
 1040 004e 00F2FF80 		bhi	.L83
 1041 0052 DFE813F0 		tbh	[pc, r3, lsl #1]
 1042              	.L85:
 1043 0056 A300     		.2byte	(.L84-.L85)/2
 1044 0058 FD00     		.2byte	(.L83-.L85)/2
 1045 005a FD00     		.2byte	(.L83-.L85)/2
 1046 005c FD00     		.2byte	(.L83-.L85)/2
 1047 005e FD00     		.2byte	(.L83-.L85)/2
 1048 0060 4800     		.2byte	(.L86-.L85)/2
 1049 0062 FD00     		.2byte	(.L83-.L85)/2
 1050 0064 FD00     		.2byte	(.L83-.L85)/2
 1051 0066 FD00     		.2byte	(.L83-.L85)/2
 1052 0068 FD00     		.2byte	(.L83-.L85)/2
 1053 006a FD00     		.2byte	(.L83-.L85)/2
 1054 006c FD00     		.2byte	(.L83-.L85)/2
 1055 006e FD00     		.2byte	(.L83-.L85)/2
 1056 0070 FD00     		.2byte	(.L83-.L85)/2
 1057 0072 FD00     		.2byte	(.L83-.L85)/2
 1058 0074 FD00     		.2byte	(.L83-.L85)/2
 1059 0076 FD00     		.2byte	(.L83-.L85)/2
 1060 0078 FD00     		.2byte	(.L83-.L85)/2
 1061 007a FD00     		.2byte	(.L83-.L85)/2
 1062 007c 3E00     		.2byte	(.L87-.L85)/2
 1063 007e FD00     		.2byte	(.L83-.L85)/2
 1064 0080 FD00     		.2byte	(.L83-.L85)/2
 1065 0082 FD00     		.2byte	(.L83-.L85)/2
 1066 0084 FD00     		.2byte	(.L83-.L85)/2
 1067 0086 FD00     		.2byte	(.L83-.L85)/2
 1068 0088 FD00     		.2byte	(.L83-.L85)/2
 1069 008a FD00     		.2byte	(.L83-.L85)/2
 1070 008c FD00     		.2byte	(.L83-.L85)/2
 1071 008e FD00     		.2byte	(.L83-.L85)/2
 1072 0090 FD00     		.2byte	(.L83-.L85)/2
 1073 0092 FD00     		.2byte	(.L83-.L85)/2
 1074 0094 FD00     		.2byte	(.L83-.L85)/2
 1075 0096 FD00     		.2byte	(.L83-.L85)/2
 1076 0098 FD00     		.2byte	(.L83-.L85)/2
 1077 009a FD00     		.2byte	(.L83-.L85)/2
 1078 009c FD00     		.2byte	(.L83-.L85)/2
 1079 009e B500     		.2byte	(.L88-.L85)/2
 1080 00a0 FD00     		.2byte	(.L83-.L85)/2
 1081 00a2 D900     		.2byte	(.L89-.L85)/2
 1082 00a4 9600     		.2byte	(.L90-.L85)/2
 1083 00a6 FD00     		.2byte	(.L83-.L85)/2
 1084 00a8 FD00     		.2byte	(.L83-.L85)/2
 1085 00aa FD00     		.2byte	(.L83-.L85)/2
 1086 00ac FD00     		.2byte	(.L83-.L85)/2
 1087 00ae FD00     		.2byte	(.L83-.L85)/2
ARM GAS  /tmp/ccZa3c9M.s 			page 33


 1088 00b0 FD00     		.2byte	(.L83-.L85)/2
 1089 00b2 FD00     		.2byte	(.L83-.L85)/2
 1090 00b4 FD00     		.2byte	(.L83-.L85)/2
 1091 00b6 FD00     		.2byte	(.L83-.L85)/2
 1092 00b8 FD00     		.2byte	(.L83-.L85)/2
 1093 00ba FD00     		.2byte	(.L83-.L85)/2
 1094 00bc FD00     		.2byte	(.L83-.L85)/2
 1095 00be C700     		.2byte	(.L91-.L85)/2
 1096 00c0 FD00     		.2byte	(.L83-.L85)/2
 1097 00c2 EB00     		.2byte	(.L92-.L85)/2
 1098              		.p2align 1
 1099              	.L111:
 641:VS4210/monitor.c **** 		Mon_tx(ch);
 1100              		.loc 1 641 0
 1101 00c4 694B     		ldr	r3, .L115+4
 1102 00c6 0122     		movs	r2, #1
 1103 00c8 1A70     		strb	r2, [r3]
 642:VS4210/monitor.c **** 		return 0;
 1104              		.loc 1 642 0
 1105 00ca 2846     		mov	r0, r5
 1106 00cc FFF7FEFF 		bl	Mon_tx
 1107              	.LVL70:
 643:VS4210/monitor.c **** 	}
 1108              		.loc 1 643 0
 1109 00d0 9BE7     		b	.L78
 1110              	.L87:
 650:VS4210/monitor.c **** 		incnt = 0;
 1111              		.loc 1 650 0
 1112 00d2 0024     		movs	r4, #0
 1113 00d4 664B     		ldr	r3, .L115+8
 1114 00d6 1C70     		strb	r4, [r3]
 651:VS4210/monitor.c **** 		comment = 0;
 1115              		.loc 1 651 0
 1116 00d8 664B     		ldr	r3, .L115+12
 1117 00da 1C70     		strb	r4, [r3]
 652:VS4210/monitor.c **** 		Prompt();
 1118              		.loc 1 652 0
 1119 00dc 634B     		ldr	r3, .L115+4
 1120 00de 1C70     		strb	r4, [r3]
 653:VS4210/monitor.c **** 		return 0;
 1121              		.loc 1 653 0
 1122 00e0 FFF7FEFF 		bl	Prompt
 1123              	.LVL71:
 654:VS4210/monitor.c **** 
 1124              		.loc 1 654 0
 1125 00e4 91E7     		b	.L78
 1126              	.L86:
 659:VS4210/monitor.c **** 			Prompt();
 1127              		.loc 1 659 0
 1128 00e6 634B     		ldr	r3, .L115+12
 1129 00e8 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1130 00ea 84B1     		cbz	r4, .L112
 664:VS4210/monitor.c **** 		argc=0;
 1131              		.loc 1 664 0
 1132 00ec 601C     		adds	r0, r4, #1
 1133 00ee C0B2     		uxtb	r0, r0
 1134 00f0 0023     		movs	r3, #0
ARM GAS  /tmp/ccZa3c9M.s 			page 34


 1135 00f2 614A     		ldr	r2, .L115+16
 1136 00f4 1355     		strb	r3, [r2, r4]
 665:VS4210/monitor.c **** 
 1137              		.loc 1 665 0
 1138 00f6 5E4A     		ldr	r2, .L115+8
 1139 00f8 1370     		strb	r3, [r2]
 1140              	.LVL72:
 667:VS4210/monitor.c **** 
 1141              		.loc 1 667 0
 1142 00fa 1D46     		mov	r5, r3
 1143              	.LVL73:
 1144              	.L94:
 667:VS4210/monitor.c **** 
 1145              		.loc 1 667 0 is_stmt 0 discriminator 3
 1146 00fc A842     		cmp	r0, r5
 1147 00fe 09D9     		bls	.L95
 667:VS4210/monitor.c **** 
 1148              		.loc 1 667 0 discriminator 4
 1149 0100 5D4A     		ldr	r2, .L115+16
 1150 0102 525D     		ldrb	r2, [r2, r5]	@ zero_extendqisi2
 1151 0104 202A     		cmp	r2, #32
 1152 0106 05D1     		bne	.L95
 667:VS4210/monitor.c **** 
 1153              		.loc 1 667 0 discriminator 2
 1154 0108 6B1C     		adds	r3, r5, #1
 1155 010a DDB2     		uxtb	r5, r3
 1156              	.LVL74:
 1157 010c F6E7     		b	.L94
 1158              	.LVL75:
 1159              	.L112:
 660:VS4210/monitor.c **** 			break;
 1160              		.loc 1 660 0 is_stmt 1
 1161 010e FFF7FEFF 		bl	Prompt
 1162              	.LVL76:
 1163 0112 7AE7     		b	.L78
 1164              	.LVL77:
 1165              	.L95:
 669:VS4210/monitor.c **** 			incnt = 0;
 1166              		.loc 1 669 0
 1167 0114 584B     		ldr	r3, .L115+16
 1168 0116 5C5D     		ldrb	r4, [r3, r5]	@ zero_extendqisi2
 1169 0118 24B1     		cbz	r4, .L113
 675:VS4210/monitor.c **** 		for(; i<incnt; i++) {
 1170              		.loc 1 675 0
 1171 011a 574B     		ldr	r3, .L115+16
 1172 011c 2B44     		add	r3, r3, r5
 1173 011e 574A     		ldr	r2, .L115+20
 1174 0120 1360     		str	r3, [r2]
 676:VS4210/monitor.c **** 			if( monstr[i]==' ' || monstr[i]=='\0' ) {
 1175              		.loc 1 676 0
 1176 0122 1BE0     		b	.L98
 1177              	.L113:
 670:VS4210/monitor.c **** 			comment = 0;
 1178              		.loc 1 670 0
 1179 0124 0023     		movs	r3, #0
 1180 0126 534A     		ldr	r2, .L115+12
 1181 0128 1370     		strb	r3, [r2]
ARM GAS  /tmp/ccZa3c9M.s 			page 35


 671:VS4210/monitor.c **** 			Prompt();
 1182              		.loc 1 671 0
 1183 012a 504A     		ldr	r2, .L115+4
 1184 012c 1370     		strb	r3, [r2]
 672:VS4210/monitor.c **** 			return 0;
 1185              		.loc 1 672 0
 1186 012e FFF7FEFF 		bl	Prompt
 1187              	.LVL78:
 673:VS4210/monitor.c **** 		}
 1188              		.loc 1 673 0
 1189 0132 6AE7     		b	.L78
 1190              	.L102:
 681:VS4210/monitor.c **** 				argc++;
 1191              		.loc 1 681 0 discriminator 2
 1192 0134 6B1C     		adds	r3, r5, #1
 1193 0136 DDB2     		uxtb	r5, r3
 1194              	.LVL79:
 1195              	.L101:
 681:VS4210/monitor.c **** 				argc++;
 1196              		.loc 1 681 0 is_stmt 0 discriminator 1
 1197 0138 2A46     		mov	r2, r5
 1198 013a 4F4B     		ldr	r3, .L115+16
 1199 013c 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 1200 013e 202B     		cmp	r3, #32
 1201 0140 F8D0     		beq	.L102
 682:VS4210/monitor.c **** 				if( monstr[i] ){
 1202              		.loc 1 682 0 is_stmt 1
 1203 0142 4B4C     		ldr	r4, .L115+8
 1204 0144 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 1205 0146 0131     		adds	r1, r1, #1
 1206 0148 C9B2     		uxtb	r1, r1
 1207 014a 2170     		strb	r1, [r4]
 683:VS4210/monitor.c ****      			 argv[argc] = &monstr[i];
 1208              		.loc 1 683 0
 1209 014c 23B1     		cbz	r3, .L100
 684:VS4210/monitor.c **** 				}
 1210              		.loc 1 684 0
 1211 014e 4A4B     		ldr	r3, .L115+16
 1212 0150 1A44     		add	r2, r2, r3
 1213 0152 4A4B     		ldr	r3, .L115+20
 1214 0154 43F82120 		str	r2, [r3, r1, lsl #2]
 1215              	.L100:
 676:VS4210/monitor.c **** 			if( monstr[i]==' ' || monstr[i]=='\0' ) {
 1216              		.loc 1 676 0
 1217 0158 6B1C     		adds	r3, r5, #1
 1218 015a DDB2     		uxtb	r5, r3
 1219              	.LVL80:
 1220              	.L98:
 676:VS4210/monitor.c **** 			if( monstr[i]==' ' || monstr[i]=='\0' ) {
 1221              		.loc 1 676 0 is_stmt 0 discriminator 1
 1222 015c A842     		cmp	r0, r5
 1223 015e 0CD9     		bls	.L114
 677:VS4210/monitor.c **** 				monstr[i]='\0';
 1224              		.loc 1 677 0 is_stmt 1
 1225 0160 2B46     		mov	r3, r5
 1226 0162 454A     		ldr	r2, .L115+16
 1227 0164 525D     		ldrb	r2, [r2, r5]	@ zero_extendqisi2
ARM GAS  /tmp/ccZa3c9M.s 			page 36


 1228 0166 202A     		cmp	r2, #32
 1229 0168 01D0     		beq	.L99
 677:VS4210/monitor.c **** 				monstr[i]='\0';
 1230              		.loc 1 677 0 is_stmt 0 discriminator 1
 1231 016a 002A     		cmp	r2, #0
 1232 016c F4D1     		bne	.L100
 1233              	.L99:
 678:VS4210/monitor.c ****      			 //Printf("(%s) ",  argv[argc]);
 1234              		.loc 1 678 0 is_stmt 1
 1235 016e 424A     		ldr	r2, .L115+16
 1236 0170 0021     		movs	r1, #0
 1237 0172 D154     		strb	r1, [r2, r3]
 680:VS4210/monitor.c **** 				while( monstr[i]==' ' ) i++;
 1238              		.loc 1 680 0
 1239 0174 6B1C     		adds	r3, r5, #1
 1240 0176 DDB2     		uxtb	r5, r3
 1241              	.LVL81:
 681:VS4210/monitor.c **** 				argc++;
 1242              		.loc 1 681 0
 1243 0178 DEE7     		b	.L101
 1244              	.L114:
 1245              	.LVL82:
 691:VS4210/monitor.c **** 		
 1246              		.loc 1 691 0
 1247 017a 3E4B     		ldr	r3, .L115+12
 1248 017c 0022     		movs	r2, #0
 1249 017e 1A70     		strb	r2, [r3]
 1250 0180 03E0     		b	.L104
 1251              	.LVL83:
 1252              	.L90:
 697:VS4210/monitor.c **** 		ret = 1;
 1253              		.loc 1 697 0
 1254 0182 3F4B     		ldr	r3, .L115+24
 1255 0184 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1256 0186 3A4B     		ldr	r3, .L115+8
 1257 0188 1A70     		strb	r2, [r3]
 1258              	.LVL84:
 1259              	.L104:
 755:VS4210/monitor.c **** 		last_argc = argc;
 1260              		.loc 1 755 0
 1261 018a 384B     		ldr	r3, .L115+4
 1262 018c 0022     		movs	r2, #0
 1263 018e 1A70     		strb	r2, [r3]
 756:VS4210/monitor.c **** 		return ret;
 1264              		.loc 1 756 0
 1265 0190 374B     		ldr	r3, .L115+8
 1266 0192 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1267 0194 3A4B     		ldr	r3, .L115+24
 1268 0196 1A70     		strb	r2, [r3]
 757:VS4210/monitor.c **** 	}
 1269              		.loc 1 757 0
 1270 0198 0124     		movs	r4, #1
 1271 019a 36E7     		b	.L78
 1272              	.LVL85:
 1273              	.L84:
 703:VS4210/monitor.c **** 			incnt--;
 1274              		.loc 1 703 0
ARM GAS  /tmp/ccZa3c9M.s 			page 37


 1275 019c 354B     		ldr	r3, .L115+12
 1276 019e 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1277 01a0 002C     		cmp	r4, #0
 1278 01a2 3FF432AF 		beq	.L78
 704:VS4210/monitor.c **** 			Mon_tx(ch);
 1279              		.loc 1 704 0
 1280 01a6 013C     		subs	r4, r4, #1
 1281 01a8 1C70     		strb	r4, [r3]
 705:VS4210/monitor.c **** 			Mon_tx(' ');
 1282              		.loc 1 705 0
 1283 01aa 2846     		mov	r0, r5
 1284 01ac FFF7FEFF 		bl	Mon_tx
 1285              	.LVL86:
 706:VS4210/monitor.c **** 			Mon_tx(ch);
 1286              		.loc 1 706 0
 1287 01b0 2020     		movs	r0, #32
 1288 01b2 FFF7FEFF 		bl	Mon_tx
 1289              	.LVL87:
 707:VS4210/monitor.c **** 		}
 1290              		.loc 1 707 0
 1291 01b6 2846     		mov	r0, r5
 1292 01b8 FFF7FEFF 		bl	Mon_tx
 1293              	.LVL88:
 1294 01bc 0024     		movs	r4, #0
 1295 01be 24E7     		b	.L78
 1296              	.L88:
 713:VS4210/monitor.c **** 			Mon_tx(ch);
 1297              		.loc 1 713 0
 1298 01c0 2C4B     		ldr	r3, .L115+12
 1299 01c2 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1300 01c4 54B1     		cbz	r4, .L105
 714:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 1301              		.loc 1 714 0
 1302 01c6 2846     		mov	r0, r5
 1303 01c8 FFF7FEFF 		bl	Mon_tx
 1304              	.LVL89:
 715:VS4210/monitor.c **** 		}
 1305              		.loc 1 715 0
 1306 01cc 294A     		ldr	r2, .L115+12
 1307 01ce 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1308 01d0 591C     		adds	r1, r3, #1
 1309 01d2 1170     		strb	r1, [r2]
 1310 01d4 284A     		ldr	r2, .L115+16
 1311 01d6 D554     		strb	r5, [r2, r3]
 1312 01d8 0024     		movs	r4, #0
 1313 01da 16E7     		b	.L78
 1314              	.L105:
 718:VS4210/monitor.c **** 		break;
 1315              		.loc 1 718 0
 1316 01dc 0020     		movs	r0, #0
 1317 01de FFF7FEFF 		bl	MonIncDecI2C
 1318              	.LVL90:
 1319 01e2 12E7     		b	.L78
 1320              	.L91:
 722:VS4210/monitor.c **** 			Mon_tx(ch);
 1321              		.loc 1 722 0
 1322 01e4 234B     		ldr	r3, .L115+12
ARM GAS  /tmp/ccZa3c9M.s 			page 38


 1323 01e6 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1324 01e8 54B1     		cbz	r4, .L106
 723:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 1325              		.loc 1 723 0
 1326 01ea 2846     		mov	r0, r5
 1327 01ec FFF7FEFF 		bl	Mon_tx
 1328              	.LVL91:
 724:VS4210/monitor.c **** 		}
 1329              		.loc 1 724 0
 1330 01f0 204A     		ldr	r2, .L115+12
 1331 01f2 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1332 01f4 591C     		adds	r1, r3, #1
 1333 01f6 1170     		strb	r1, [r2]
 1334 01f8 1F4A     		ldr	r2, .L115+16
 1335 01fa D554     		strb	r5, [r2, r3]
 1336 01fc 0024     		movs	r4, #0
 1337 01fe 04E7     		b	.L78
 1338              	.L106:
 727:VS4210/monitor.c **** 		break;
 1339              		.loc 1 727 0
 1340 0200 0A20     		movs	r0, #10
 1341 0202 FFF7FEFF 		bl	MonIncDecI2C
 1342              	.LVL92:
 1343 0206 00E7     		b	.L78
 1344              	.L89:
 731:VS4210/monitor.c **** 			Mon_tx(ch);
 1345              		.loc 1 731 0
 1346 0208 1A4B     		ldr	r3, .L115+12
 1347 020a 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1348 020c 54B1     		cbz	r4, .L107
 732:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 1349              		.loc 1 732 0
 1350 020e 2846     		mov	r0, r5
 1351 0210 FFF7FEFF 		bl	Mon_tx
 1352              	.LVL93:
 733:VS4210/monitor.c **** 		}
 1353              		.loc 1 733 0
 1354 0214 174A     		ldr	r2, .L115+12
 1355 0216 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1356 0218 591C     		adds	r1, r3, #1
 1357 021a 1170     		strb	r1, [r2]
 1358 021c 164A     		ldr	r2, .L115+16
 1359 021e D554     		strb	r5, [r2, r3]
 1360 0220 0024     		movs	r4, #0
 1361 0222 F2E6     		b	.L78
 1362              	.L107:
 736:VS4210/monitor.c **** 		break;
 1363              		.loc 1 736 0
 1364 0224 0120     		movs	r0, #1
 1365 0226 FFF7FEFF 		bl	MonIncDecI2C
 1366              	.LVL94:
 1367 022a EEE6     		b	.L78
 1368              	.L92:
 740:VS4210/monitor.c **** 			Mon_tx(ch);
 1369              		.loc 1 740 0
 1370 022c 114B     		ldr	r3, .L115+12
 1371 022e 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccZa3c9M.s 			page 39


 1372 0230 54B1     		cbz	r4, .L108
 741:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 1373              		.loc 1 741 0
 1374 0232 2846     		mov	r0, r5
 1375 0234 FFF7FEFF 		bl	Mon_tx
 1376              	.LVL95:
 742:VS4210/monitor.c **** 		}
 1377              		.loc 1 742 0
 1378 0238 0E4A     		ldr	r2, .L115+12
 1379 023a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1380 023c 591C     		adds	r1, r3, #1
 1381 023e 1170     		strb	r1, [r2]
 1382 0240 0D4A     		ldr	r2, .L115+16
 1383 0242 D554     		strb	r5, [r2, r3]
 1384 0244 0024     		movs	r4, #0
 1385 0246 E0E6     		b	.L78
 1386              	.L108:
 745:VS4210/monitor.c **** 		break;
 1387              		.loc 1 745 0
 1388 0248 0B20     		movs	r0, #11
 1389 024a FFF7FEFF 		bl	MonIncDecI2C
 1390              	.LVL96:
 1391 024e DCE6     		b	.L78
 1392              	.L83:
 749:VS4210/monitor.c **** 		monstr[incnt++] = ch;
 1393              		.loc 1 749 0
 1394 0250 2846     		mov	r0, r5
 1395 0252 FFF7FEFF 		bl	Mon_tx
 1396              	.LVL97:
 750:VS4210/monitor.c **** 		break;
 1397              		.loc 1 750 0
 1398 0256 074A     		ldr	r2, .L115+12
 1399 0258 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1400 025a 591C     		adds	r1, r3, #1
 1401 025c 1170     		strb	r1, [r2]
 1402 025e 064A     		ldr	r2, .L115+16
 1403 0260 D554     		strb	r5, [r2, r3]
 1404 0262 0024     		movs	r4, #0
 1405 0264 D1E6     		b	.L78
 1406              	.L116:
 1407 0266 00BF     		.align	2
 1408              	.L115:
 1409 0268 00000000 		.word	.LANCHOR5
 1410 026c 00000000 		.word	.LANCHOR6
 1411 0270 00000000 		.word	.LANCHOR7
 1412 0274 00000000 		.word	.LANCHOR8
 1413 0278 00000000 		.word	monstr
 1414 027c 00000000 		.word	argv
 1415 0280 00000000 		.word	.LANCHOR9
 1416              		.cfi_endproc
 1417              	.LFE91:
 1419              		.section	.text.SET_AHD_SYNC_PARA,"ax",%progbits
 1420              		.align	1
 1421              		.global	SET_AHD_SYNC_PARA
 1422              		.syntax unified
 1423              		.thumb
 1424              		.thumb_func
ARM GAS  /tmp/ccZa3c9M.s 			page 40


 1425              		.fpu softvfp
 1427              	SET_AHD_SYNC_PARA:
 1428              	.LFB93:
 763:VS4210/monitor.c **** 
 764:VS4210/monitor.c **** //*****************************************************************************
 765:VS4210/monitor.c **** //				Monitoring Command
 766:VS4210/monitor.c **** //*****************************************************************************
 767:VS4210/monitor.c **** //#ifdef  HS_DEBUG
 768:VS4210/monitor.c **** #ifdef  HS_DEBUG
 769:VS4210/monitor.c **** void Monitor(void)
 770:VS4210/monitor.c **** {
 771:VS4210/monitor.c **** 
 772:VS4210/monitor.c **** 	 BYTE ret/*,temp*/;
 773:VS4210/monitor.c **** 	//WORD addr;		
 774:VS4210/monitor.c **** 	if( !MonGetCommand() ) return;
 775:VS4210/monitor.c **** 
 776:VS4210/monitor.c **** 	//--------------------------------------------------
 777:VS4210/monitor.c **** 	// Check Indirect command
 778:VS4210/monitor.c **** 	/*
 779:VS4210/monitor.c **** 	if( !stricmp( argv[0], "I" ) ) 			indirect=1;	
 780:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "O" ) ) 	indirect=1;	
 781:VS4210/monitor.c **** 
 782:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "," ) ) 	indirect=0;	
 783:VS4210/monitor.c **** 	else if( !stricmp( argv[0], ">" ) ) 	indirect=0;	
 784:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "<" ) ) 	indirect=0;	
 785:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "." ) ) 	indirect=0;	
 786:VS4210/monitor.c **** 	else  indirect=0;	
 787:VS4210/monitor.c **** 	*/
 788:VS4210/monitor.c **** 	indirect = 0;
 789:VS4210/monitor.c **** 
 790:VS4210/monitor.c **** 	//---------------- Write Register -------------------
 791:VS4210/monitor.c **** 	if( !stricmp( (BYTE *)argv[0],(BYTE *)"W" ) ) {
 792:VS4210/monitor.c **** 
 793:VS4210/monitor.c **** #if 0
 794:VS4210/monitor.c **** 
 795:VS4210/monitor.c **** VXISI2CWrite( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 796:VS4210/monitor.c **** 		 ret= VXISI2CRead(Asc2Bin(argv[1]));	
 797:VS4210/monitor.c **** 	   Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 798:VS4210/monitor.c **** 
 799:VS4210/monitor.c **** #else
 800:VS4210/monitor.c **** if(Monitor_I2C==0xA0)
 801:VS4210/monitor.c **** 	{
 802:VS4210/monitor.c **** 	WriteEEP( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 803:VS4210/monitor.c **** 	   //tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2])); 	
 804:VS4210/monitor.c **** 	 ret= ReadEEP(Asc2Bin(argv[1]));	
 805:VS4210/monitor.c **** 	  Printf("\r\nEEPROM Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 806:VS4210/monitor.c **** 	}
 807:VS4210/monitor.c **** else if(Monitor_I2C==0x40)
 808:VS4210/monitor.c **** {
 809:VS4210/monitor.c **** 	VXISI2CWrite( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 810:VS4210/monitor.c **** 	 ret= VXISI2CRead(Asc2Bin(argv[1]));	
 811:VS4210/monitor.c **** 	   Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 812:VS4210/monitor.c **** }
 813:VS4210/monitor.c **** else if(Monitor_I2C==0x12)
 814:VS4210/monitor.c **** {
 815:VS4210/monitor.c **** 	VS8812Write( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 816:VS4210/monitor.c **** 	 ret= VS8812Read(Asc2Bin(argv[1]));	
ARM GAS  /tmp/ccZa3c9M.s 			page 41


 817:VS4210/monitor.c **** 	   Printf("\r\nVS8812 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 818:VS4210/monitor.c **** }
 819:VS4210/monitor.c **** /*
 820:VS4210/monitor.c **** else if(Monitor_I2C==0x28)
 821:VS4210/monitor.c **** {
 822:VS4210/monitor.c **** 	
 823:VS4210/monitor.c **** 	addr=Asc2Bin(argv[1]);
 824:VS4210/monitor.c **** 	addr<<=8;
 825:VS4210/monitor.c **** 	addr|=Asc2Bin(argv[2]);
 826:VS4210/monitor.c **** 
 827:VS4210/monitor.c **** 	temp=Asc2Bin(argv[3]);
 828:VS4210/monitor.c **** 	SET_nGT911( addr,&temp,1 );
 829:VS4210/monitor.c **** 
 830:VS4210/monitor.c **** Printf("\r\nGT911  Write addr=%02x%02x data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]),(WO
 831:VS4210/monitor.c **** 	
 832:VS4210/monitor.c **** 	GET_nGT911(addr,&ret,1); 
 833:VS4210/monitor.c **** 	
 834:VS4210/monitor.c **** Printf("\r\nGT911  Read addr=%02x%02x data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]),(WOR
 835:VS4210/monitor.c ****   
 836:VS4210/monitor.c **** }
 837:VS4210/monitor.c **** */
 838:VS4210/monitor.c **** else if( Monitor_I2C==0x88)
 839:VS4210/monitor.c **** 	{
 840:VS4210/monitor.c **** 	tp28xx_byte_write( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );	
 841:VS4210/monitor.c **** 	ret= tp28xx_byte_read(Asc2Bin(argv[1]));		  
 842:VS4210/monitor.c **** 	 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 843:VS4210/monitor.c **** 	}
 844:VS4210/monitor.c **** 
 845:VS4210/monitor.c **** else if( Monitor_I2C==0x90)
 846:VS4210/monitor.c **** 	{
 847:VS4210/monitor.c **** 	gHDMI_Index=0;	
 848:VS4210/monitor.c **** 	HDMIRX_WriteI2C_Byte( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );	
 849:VS4210/monitor.c **** 	ret= HDMIRX_ReadI2C_Byte(Asc2Bin(argv[1]));		  
 850:VS4210/monitor.c **** 	 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 851:VS4210/monitor.c **** 	}
 852:VS4210/monitor.c **** else
 853:VS4210/monitor.c **** {
 854:VS4210/monitor.c **** 	Printf("\r\nI2C addr. error");   
 855:VS4210/monitor.c **** 
 856:VS4210/monitor.c **** }
 857:VS4210/monitor.c **** 
 858:VS4210/monitor.c **** #endif
 859:VS4210/monitor.c **** /*
 860:VS4210/monitor.c **** 		if(Monitor_I2C==EEPROM_24C02_addr)
 861:VS4210/monitor.c **** 		{
 862:VS4210/monitor.c **** 		 SW_I2C1Write( Monitor_I2C , Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 863:VS4210/monitor.c **** 		//tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2]));	 
 864:VS4210/monitor.c **** 		  ret= SW_I2C1Read(Monitor_I2C,Asc2Bin(argv[1]));	 
 865:VS4210/monitor.c **** 		Printf("\r\nEEPROM Write addr=%02x	data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 866:VS4210/monitor.c **** 		}
 867:VS4210/monitor.c **** 		else
 868:VS4210/monitor.c **** 			{
 869:VS4210/monitor.c **** 		    	tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2]));   
 870:VS4210/monitor.c **** 	        	//ret= tp28xx_byte_read(0x2a);   
 871:VS4210/monitor.c **** 			  ret= tp28xx_byte_read(Asc2Bin(argv[1]));   
 872:VS4210/monitor.c **** 			Printf("\r\nTP2824 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 873:VS4210/monitor.c **** 			}
ARM GAS  /tmp/ccZa3c9M.s 			page 42


 874:VS4210/monitor.c **** 		*/
 875:VS4210/monitor.c **** 		
 876:VS4210/monitor.c **** 	}
 877:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0],(BYTE *) ")" ) ) {
 878:VS4210/monitor.c **** 		indirect=0;
 879:VS4210/monitor.c **** 	//	MonNewWriteI2C();
 880:VS4210/monitor.c **** 	}
 881:VS4210/monitor.c **** 	/*
 882:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "O" ) ) {			// inderect addressing for 8806
 883:VS4210/monitor.c **** 		MonIndex = Asc2Bin( argv[1] );
 884:VS4210/monitor.c **** 		MonWdata = Asc2Bin( argv[2] );
 885:VS4210/monitor.c **** 		WriteI2C(MonAddress, 0xc5, MonIndex);
 886:VS4210/monitor.c **** 		WriteI2C(MonAddress, 0xc6, MonWdata);
 887:VS4210/monitor.c **** 		MonRdata = ReadI2C(MonAddress, 0xc6);
 888:VS4210/monitor.c **** 		Printf("\r\n==> Read %2xh:%2xh", (WORD)MonIndex, (WORD)MonRdata);
 889:VS4210/monitor.c **** 	}
 890:VS4210/monitor.c **** 	*/
 891:VS4210/monitor.c **** 	//---------------- Read Register --------------------
 892:VS4210/monitor.c **** 	else if ( !stricmp((BYTE*) argv[0],(BYTE*) "R" ) ) {
 893:VS4210/monitor.c **** 		//MonReadI2C();
 894:VS4210/monitor.c **** 	
 895:VS4210/monitor.c **** 		#if 0
 896:VS4210/monitor.c **** 			   ret= VXISI2CRead(Asc2Bin(argv[1]));			 
 897:VS4210/monitor.c **** 			Printf("\r\nVS4210	Read addr=%02x	data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 898:VS4210/monitor.c **** 
 899:VS4210/monitor.c **** 		#else
 900:VS4210/monitor.c **** 	if(Monitor_I2C==0xA0)
 901:VS4210/monitor.c **** 		{
 902:VS4210/monitor.c **** 		   ret= ReadEEP(Asc2Bin(argv[1])); 			 
 903:VS4210/monitor.c **** 		Printf("\r\nEEPROM  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 904:VS4210/monitor.c **** 		}
 905:VS4210/monitor.c **** 	else if(Monitor_I2C==0x40)
 906:VS4210/monitor.c **** 		{
 907:VS4210/monitor.c **** 		ret= VXISI2CRead(Asc2Bin(argv[1])); 		  
 908:VS4210/monitor.c **** 		 Printf("\r\nVS4210  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 909:VS4210/monitor.c **** 		}
 910:VS4210/monitor.c **** 	else if(Monitor_I2C==0x12)
 911:VS4210/monitor.c **** 		{
 912:VS4210/monitor.c **** 		ret= VS8812Read(Asc2Bin(argv[1])); 		  
 913:VS4210/monitor.c **** 		 Printf("\r\nVS8812  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 914:VS4210/monitor.c **** 		}
 915:VS4210/monitor.c **** 	/*
 916:VS4210/monitor.c **** 	else if(Monitor_I2C==0x28)
 917:VS4210/monitor.c **** 		{
 918:VS4210/monitor.c **** 
 919:VS4210/monitor.c **** 		addr=Asc2Bin(argv[1]);
 920:VS4210/monitor.c **** 		addr<<=8;
 921:VS4210/monitor.c **** 		addr|=Asc2Bin(argv[2]);
 922:VS4210/monitor.c **** 		
 923:VS4210/monitor.c **** 		GET_nGT911(addr,&temp,1); 		  
 924:VS4210/monitor.c **** 		 Printf("\r\nGT911  Read addr=%02x%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]),
 925:VS4210/monitor.c **** 		}
 926:VS4210/monitor.c **** 	*/
 927:VS4210/monitor.c **** 	else if( Monitor_I2C==0x88)
 928:VS4210/monitor.c **** 		{	
 929:VS4210/monitor.c **** 		ret= tp28xx_byte_read(Asc2Bin(argv[1])); 		  
 930:VS4210/monitor.c **** 		 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
ARM GAS  /tmp/ccZa3c9M.s 			page 43


 931:VS4210/monitor.c **** 		}
 932:VS4210/monitor.c **** 	else if( Monitor_I2C==0x90)
 933:VS4210/monitor.c **** 			{
 934:VS4210/monitor.c **** 			gHDMI_Index=0;
 935:VS4210/monitor.c **** 			ret= HDMIRX_ReadI2C_Byte(Asc2Bin(argv[1]));	  
 936:VS4210/monitor.c **** 			 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 937:VS4210/monitor.c **** 			}
 938:VS4210/monitor.c **** 	else
 939:VS4210/monitor.c **** 		{
 940:VS4210/monitor.c **** 		Printf("\r\nI2C addr. error");
 941:VS4210/monitor.c **** 		}
 942:VS4210/monitor.c **** 		#endif
 943:VS4210/monitor.c **** 		/*
 944:VS4210/monitor.c **** 		if(Monitor_I2C==EEPROM_24C02_addr)
 945:VS4210/monitor.c **** 				{
 946:VS4210/monitor.c **** 			   ret= SW_I2C1Read(Monitor_I2C,Asc2Bin(argv[1]));              
 947:VS4210/monitor.c **** 			Printf("\r\nEEPROM Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);	
 948:VS4210/monitor.c **** 			}
 949:VS4210/monitor.c **** 		else
 950:VS4210/monitor.c **** 			{
 951:VS4210/monitor.c **** 			   ret= tp28xx_byte_read(Asc2Bin(argv[1]));              
 952:VS4210/monitor.c **** 			Printf("\r\nTP2824 Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);		
 953:VS4210/monitor.c **** 			}
 954:VS4210/monitor.c **** 		*/
 955:VS4210/monitor.c **** 	}  
 956:VS4210/monitor.c **** 	
 957:VS4210/monitor.c **** 	else if ( !stricmp( (BYTE *)argv[0],(BYTE *) "VR" ) ) {
 958:VS4210/monitor.c **** 			//MonReadI2C();
 959:VS4210/monitor.c **** 	//	 ret=VXISI2CRead(Asc2Bin(argv[1])); 
 960:VS4210/monitor.c **** 	//	Printf("\r\nVS4210 Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);	
 961:VS4210/monitor.c **** 	
 962:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x02));
 963:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x03));
 964:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x04));
 965:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x05));
 966:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x06));
 967:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x07));
 968:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x08));
 969:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x09));
 970:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0A));
 971:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0B));
 972:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0C));
 973:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0D));
 974:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x10));
 975:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x11));
 976:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x15));
 977:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x16));
 978:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x17));
 979:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x18));
 980:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x19));
 981:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1A));
 982:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1C));
 983:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1D));
 984:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1E));
 985:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x28));
 986:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x29));
 987:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2A));
ARM GAS  /tmp/ccZa3c9M.s 			page 44


 988:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2B));
 989:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2C));
 990:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2D));
 991:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x74));
 992:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x7E));
 993:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x7F));
 994:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x80));
 995:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x81));
 996:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x82));
 997:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x83));
 998:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x84));
 999:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x85));
1000:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x86));
1001:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x87));
1002:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x88));
1003:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x89));
1004:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8A));
1005:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8B));
1006:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8C));
1007:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8D));
1008:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8E));
1009:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8F));
1010:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x90));
1011:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x91));
1012:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x92));
1013:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x93));
1014:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x94));
1015:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x95));
1016:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x97));
1017:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x98));
1018:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x99));
1019:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9B));
1020:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9C));
1021:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9D));
1022:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9E));
1023:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9F));
1024:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA0));
1025:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA1));
1026:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA2));
1027:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA3));
1028:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA4));
1029:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA5));
1030:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA6));
1031:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA7));
1032:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA8));
1033:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA9));
1034:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAA));
1035:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAB));
1036:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAF));
1037:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xC0));
1038:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD6));
1039:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD7));
1040:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD8));
1041:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE6));
1042:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE7));
1043:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE8));
1044:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE9));
ARM GAS  /tmp/ccZa3c9M.s 			page 45


1045:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEA));
1046:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEB));
1047:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEC));
1048:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xED));
1049:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEE));
1050:VS4210/monitor.c **** 
1051:VS4210/monitor.c **** 		}
1052:VS4210/monitor.c **** 	else if ( !stricmp( (BYTE *)argv[0], (BYTE *)"VW" ) ) {
1053:VS4210/monitor.c **** 		    VXISI2CWrite(Asc2Bin(argv[1]), Asc2Bin(argv[2]));   
1054:VS4210/monitor.c **** 	  ret= VXISI2CRead(Asc2Bin(argv[1]));   
1055:VS4210/monitor.c **** 	Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);				
1056:VS4210/monitor.c **** 		}
1057:VS4210/monitor.c **** 	else if ( !stricmp( argv[0],(BYTE *)"(" ) ) {
1058:VS4210/monitor.c **** 		indirect=0;
1059:VS4210/monitor.c **** 		//MonNewReadI2C();
1060:VS4210/monitor.c **** 	}
1061:VS4210/monitor.c **** 	else if ( !stricmp( (BYTE *)argv[0],(BYTE *) "I2C" ) ) {
1062:VS4210/monitor.c **** 		 ret=Asc2Bin(argv[1]); 
1063:VS4210/monitor.c **** 		Printf("\r\nChange I2C addr. from %02x to %02x",(WORD)Monitor_I2C,(WORD)ret);		
1064:VS4210/monitor.c **** 		Monitor_I2C=ret;
1065:VS4210/monitor.c **** 		}
1066:VS4210/monitor.c **** 	else if ( !stricmp( (BYTE *)argv[0],(BYTE *) "Q" ) ) {
1067:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1068:VS4210/monitor.c **** 		}
1069:VS4210/monitor.c **** 	else if ( !stricmp( (BYTE *)argv[0],(BYTE *) "DUMP" ) ) {
1070:VS4210/monitor.c **** 		WORD s,e;	//20201211-03
1071:VS4210/monitor.c **** 		
1072:VS4210/monitor.c **** 		 s=Asc2Bin(argv[1]); 
1073:VS4210/monitor.c **** 		 e=Asc2Bin(argv[2]); 
1074:VS4210/monitor.c **** 
1075:VS4210/monitor.c **** 
1076:VS4210/monitor.c **** 		 if(Monitor_I2C==0xA0)
1077:VS4210/monitor.c **** 			 {
1078:VS4210/monitor.c **** 			 Printf("\r\nDUMP EEPROM Reg..");
1079:VS4210/monitor.c **** 			 }
1080:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x40)
1081:VS4210/monitor.c **** 			 {
1082:VS4210/monitor.c **** 			 Printf("\r\nDUMP VS4210 Reg..");
1083:VS4210/monitor.c **** 			 }
1084:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x12)
1085:VS4210/monitor.c **** 			 {
1086:VS4210/monitor.c **** 			 Printf("\r\nDUMP VS8812 Reg..");
1087:VS4210/monitor.c **** 			 }
1088:VS4210/monitor.c **** 
1089:VS4210/monitor.c **** for(;s<=e;s++)
1090:VS4210/monitor.c **** {
1091:VS4210/monitor.c **** 		 if(Monitor_I2C==0xA0)
1092:VS4210/monitor.c **** 			 {
1093:VS4210/monitor.c **** 				ret= ReadEEP(s); 		  
1094:VS4210/monitor.c **** 			 Printf("\r\nEEPROM  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
1095:VS4210/monitor.c **** 			 }
1096:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x40)
1097:VS4210/monitor.c **** 			 {
1098:VS4210/monitor.c **** 			 ret= VXISI2CRead(s);		   
1099:VS4210/monitor.c **** 			 // Printf("\r\nVXISI2CWrite(0x%02x,0x%02x);",(WORD)s,(WORD)ret);
1100:VS4210/monitor.c **** 			  Printf("\r\n40,%02x,%02x",(WORD)s,(WORD)ret);
1101:VS4210/monitor.c **** 			 }
ARM GAS  /tmp/ccZa3c9M.s 			page 46


1102:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x12)
1103:VS4210/monitor.c **** 			 {
1104:VS4210/monitor.c **** 			 ret= VS8812Read(s); 	   
1105:VS4210/monitor.c **** //			  Printf("\r\nVS8812  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
1106:VS4210/monitor.c **** 			  Printf("\r\nVS8812,%02x,%02x",(WORD)s,(WORD)ret);
1107:VS4210/monitor.c **** 			 }
1108:VS4210/monitor.c **** 		  else if(Monitor_I2C==0x88)
1109:VS4210/monitor.c **** 					  {
1110:VS4210/monitor.c **** 					  ret= tp28xx_byte_read(s);		
1111:VS4210/monitor.c **** 					   Printf("\r\ntp28xx,%02x,%02x",(WORD)s,(WORD)ret);
1112:VS4210/monitor.c **** 					  } 
1113:VS4210/monitor.c **** 		 /*
1114:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x28)
1115:VS4210/monitor.c **** 		 {
1116:VS4210/monitor.c **** 			 addr=Asc2Bin(argv[1]);
1117:VS4210/monitor.c **** 			 addr<<=8;
1118:VS4210/monitor.c **** 			 addr|=Asc2Bin(argv[2]);
1119:VS4210/monitor.c **** 			 
1120:VS4210/monitor.c **** 			 GET_nGT911(addr,&temp,1);		   
1121:VS4210/monitor.c **** 			  Printf("\r\nGT911  Read addr=%02x%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]
1122:VS4210/monitor.c **** 		 
1123:VS4210/monitor.c **** 		 }	
1124:VS4210/monitor.c **** 		 */
1125:VS4210/monitor.c **** 		 else
1126:VS4210/monitor.c **** 			 {
1127:VS4210/monitor.c **** 			 Printf("\r\nI2C addr. error");
1128:VS4210/monitor.c **** 			 }
1129:VS4210/monitor.c **** }
1130:VS4210/monitor.c **** 		}
1131:VS4210/monitor.c **** 	#if 0
1132:VS4210/monitor.c **** 		else if ( !stricmp( (BYTE *)argv[0],(BYTE *) "DTP" ) ) {
1133:VS4210/monitor.c **** 			WORD /*s,e,*/n,i;
1134:VS4210/monitor.c **** 			
1135:VS4210/monitor.c **** 				 addr=Asc2Bin(argv[1]);
1136:VS4210/monitor.c **** 				 addr<<=8;
1137:VS4210/monitor.c **** 				 addr|=Asc2Bin(argv[2]);
1138:VS4210/monitor.c ****  					
1139:VS4210/monitor.c **** 				 n=Asc2Bin(argv[3]);
1140:VS4210/monitor.c **** 
1141:VS4210/monitor.c **** 			 Printf("\r\nDUMP GT911 Reg..");
1142:VS4210/monitor.c **** 
1143:VS4210/monitor.c **** 	
1144:VS4210/monitor.c **** 		for(i=0;i<n;i++)
1145:VS4210/monitor.c **** 		{	
1146:VS4210/monitor.c ****    		GET_nGT911(addr+i,&temp,1);		  	
1147:VS4210/monitor.c **** 		  Printf("\r\nAddr=%04x Data=%02x",(WORD)addr+i,(WORD)temp);
1148:VS4210/monitor.c **** 		}
1149:VS4210/monitor.c **** 	}
1150:VS4210/monitor.c **** 		#endif
1151:VS4210/monitor.c **** 	/*
1152:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "i" ) ) {
1153:VS4210/monitor.c **** 		MonIndex = Asc2Bin( argv[1] );
1154:VS4210/monitor.c **** 		WriteI2C(MonAddress, 0xc5, MonIndex);
1155:VS4210/monitor.c **** 		MonRdata = ReadI2C(MonAddress, 0xc6);
1156:VS4210/monitor.c **** 		Printf("\r\n==> Read %2xh:%2xh", (WORD)MonIndex, (WORD)MonRdata);
1157:VS4210/monitor.c **** 
1158:VS4210/monitor.c **** 	}
ARM GAS  /tmp/ccZa3c9M.s 			page 47


1159:VS4210/monitor.c **** 	*/
1160:VS4210/monitor.c **** 	/*
1161:VS4210/monitor.c **** 	//---------------- Dump Register --------------------
1162:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "D" ) ) {
1163:VS4210/monitor.c **** 		Puts("\r\ndump start");
1164:VS4210/monitor.c **** 		MonDumpI2C();
1165:VS4210/monitor.c **** 	}
1166:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "&" ) ) {
1167:VS4210/monitor.c **** 		indirect=0;
1168:VS4210/monitor.c **** 		MonNewDumpI2C();
1169:VS4210/monitor.c **** 	}
1170:VS4210/monitor.c **** 
1171:VS4210/monitor.c **** 	//---------------- Bit Operation --------------------
1172:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "B" ) ) {// Write bits - B AA II bb DD
1173:VS4210/monitor.c **** 		MonWriteBit();
1174:VS4210/monitor.c **** 	}
1175:VS4210/monitor.c **** 	//---------------- AD5110 CMD --------------------
1176:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PSW" ) ) {
1177:VS4210/monitor.c **** 		PSW_Flag=1;
1178:VS4210/monitor.c **** 		Printf("\r\n(PSW_Flag =1)");
1179:VS4210/monitor.c **** 	}
1180:VS4210/monitor.c **** 	//---------------- AD5110 CMD --------------------
1181:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "ADW" ) ) {
1182:VS4210/monitor.c **** 		WriteAD5110(Asc2Bin(argv[1]),Asc2Bin(argv[2]));
1183:VS4210/monitor.c **** 		Printf("\r\nAD5110 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]));
1184:VS4210/monitor.c **** 	}
1185:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "ADR" ) ) {
1186:VS4210/monitor.c **** 		ReadAD5110(Asc2Bin(argv[1]));
1187:VS4210/monitor.c **** 		Printf("\r\nAD5110 Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ReadAD5110(Asc2Bin(arg
1188:VS4210/monitor.c **** 	}
1189:VS4210/monitor.c **** */
1190:VS4210/monitor.c **** 	/*	no indirect addressing in TW8816
1191:VS4210/monitor.c ****     //---------------------------------------------------
1192:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "@" ) ) { // Indirect address bit access
1193:VS4210/monitor.c **** 
1194:VS4210/monitor.c **** 					BYTE Slave, mask, FromBit, ToBit,  MonMask, val,i;
1195:VS4210/monitor.c **** 					// @ 8a iaddr idata index  startbit|endbit  data
1196:VS4210/monitor.c **** 					// 0  1   2    3     4     5                 6
1197:VS4210/monitor.c **** 
1198:VS4210/monitor.c **** 					if( argc<7 ) {
1199:VS4210/monitor.c **** 						Printf("   --> Missing parameter !!!");
1200:VS4210/monitor.c **** 						return;
1201:VS4210/monitor.c **** 					}
1202:VS4210/monitor.c **** 
1203:VS4210/monitor.c **** 					Slave = Asc2Bin(argv[1]);
1204:VS4210/monitor.c **** 					
1205:VS4210/monitor.c **** 					FromBit = Asc2Bin( argv[5] );
1206:VS4210/monitor.c **** 					FromBit  = ( FromBit >> 4) & 0x0f;
1207:VS4210/monitor.c **** 					ToBit = Asc2Bin( argv[5] );
1208:VS4210/monitor.c **** 					ToBit  =  ToBit & 0x0f;
1209:VS4210/monitor.c **** 					MonMask  = Asc2Bin( argv[6] );
1210:VS4210/monitor.c **** 
1211:VS4210/monitor.c **** 					if( FromBit<ToBit || FromBit>7 || ToBit>7) {
1212:VS4210/monitor.c **** 						Printf("\r\n   --> Wrong range of bit operation !!!");
1213:VS4210/monitor.c **** 						return;
1214:VS4210/monitor.c **** 					}
1215:VS4210/monitor.c **** 	
ARM GAS  /tmp/ccZa3c9M.s 			page 48


1216:VS4210/monitor.c **** 					mask = 0xff; 
1217:VS4210/monitor.c **** 					val=0x7f;
1218:VS4210/monitor.c **** 					for(i=7; i>FromBit; i--) {
1219:VS4210/monitor.c **** 						mask &= val;
1220:VS4210/monitor.c **** 						val = val>>1;
1221:VS4210/monitor.c **** 					}
1222:VS4210/monitor.c **** 
1223:VS4210/monitor.c **** 					val=0xfe;
1224:VS4210/monitor.c **** 					for(i=0; i<ToBit; i++) {
1225:VS4210/monitor.c **** 						mask &= val;
1226:VS4210/monitor.c **** 						val = val<<1;
1227:VS4210/monitor.c **** 					}
1228:VS4210/monitor.c **** 
1229:VS4210/monitor.c **** 					// @ 8a iaddr idata index  startbit|endbit  data
1230:VS4210/monitor.c **** 					// 0  1   2    3     4     5                 6
1231:VS4210/monitor.c **** 					MonIndex = Asc2Bin(argv[2]);
1232:VS4210/monitor.c **** 					MonWdata = Asc2Bin(argv[4]);
1233:VS4210/monitor.c **** 					WriteI2C( Slave, MonIndex, MonWdata);
1234:VS4210/monitor.c **** 
1235:VS4210/monitor.c **** 					MonRdata = ReadI2C(Slave, Asc2Bin( argv[3]));
1236:VS4210/monitor.c **** 					MonWdata = (MonRdata & (~mask)) | (MonMask & mask);
1237:VS4210/monitor.c **** 					MonIndex = Asc2Bin(argv[3]);
1238:VS4210/monitor.c **** 					WriteI2C(Slave, MonIndex, MonWdata);
1239:VS4210/monitor.c **** 
1240:VS4210/monitor.c **** 					MonRdata = ReadI2C(Slave, MonIndex);
1241:VS4210/monitor.c **** 
1242:VS4210/monitor.c **** 					Printf("\r\n<R>%2x[%2x]=%2x", (WORD)Slave, (WORD)MonIndex, (WORD)MonRdata);
1243:VS4210/monitor.c **** 
1244:VS4210/monitor.c **** 	}
1245:VS4210/monitor.c **** 	//------------------------------------------------------------------				
1246:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "!" ) ) //  Indirect address write access
1247:VS4210/monitor.c **** 	{
1248:VS4210/monitor.c **** 					BYTE Slave;
1249:VS4210/monitor.c **** 					// @ 8a iaddr idata index data
1250:VS4210/monitor.c **** 					if( argc<6 ) {
1251:VS4210/monitor.c **** 						Printf("   --> Missing parameter !!!");
1252:VS4210/monitor.c **** 						return;
1253:VS4210/monitor.c **** 					}
1254:VS4210/monitor.c **** 
1255:VS4210/monitor.c **** 					Slave = Asc2Bin(argv[1]);
1256:VS4210/monitor.c **** 
1257:VS4210/monitor.c **** 					MonIndex = Asc2Bin(argv[2]);
1258:VS4210/monitor.c **** 					MonWdata = Asc2Bin(argv[4]);
1259:VS4210/monitor.c **** 					WriteI2C(Slave, MonIndex, MonWdata);
1260:VS4210/monitor.c **** 
1261:VS4210/monitor.c **** 					MonIndex = Asc2Bin(argv[3]);
1262:VS4210/monitor.c **** 					MonWdata = Asc2Bin(argv[5]);
1263:VS4210/monitor.c **** 					WriteI2C(Slave, MonIndex, MonWdata);
1264:VS4210/monitor.c **** 
1265:VS4210/monitor.c **** 					MonRdata = ReadI2C(Slave, MonIndex);
1266:VS4210/monitor.c **** 
1267:VS4210/monitor.c **** 					Printf("\r\n<R>%2x[%2x]=%2x", (WORD)Slave, (WORD)MonIndex, (WORD)MonRdata);
1268:VS4210/monitor.c **** 
1269:VS4210/monitor.c **** 	}
1270:VS4210/monitor.c **** 	*/    
1271:VS4210/monitor.c **** 
1272:VS4210/monitor.c **** 	//---------------- Change I2C -----------------------
ARM GAS  /tmp/ccZa3c9M.s 			page 49


1273:VS4210/monitor.c **** 	/*
1274:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0],(BYTE *) "C" ) ) {
1275:VS4210/monitor.c **** 		//Monitor_I2C = Asc2Bin( argv[1] );
1276:VS4210/monitor.c **** 		SetNowMode(); 
1277:VS4210/monitor.c **** 	}
1278:VS4210/monitor.c **** 	
1279:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0],(BYTE *) "PON" ) ) {
1280:VS4210/monitor.c **** 			//Monitor_I2C = Asc2Bin( argv[1] );
1281:VS4210/monitor.c **** 			SetNowMode(); 
1282:VS4210/monitor.c **** 				LCDPowerON();
1283:VS4210/monitor.c **** 		}
1284:VS4210/monitor.c **** 	*/
1285:VS4210/monitor.c **** 
1286:VS4210/monitor.c **** 	//---------------- Help -----------------------------
1287:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0],(BYTE *) "H" ) || !stricmp( (BYTE *)argv[0],(BYTE *) "HELP" ) |
1288:VS4210/monitor.c **** 		MonHelp();
1289:VS4210/monitor.c **** 	}
1290:VS4210/monitor.c **** 	else if( !stricmp( argv[0], (BYTE *)"PWM" ) ) {
1291:VS4210/monitor.c **** 
1292:VS4210/monitor.c **** 		user_pwm_setvalue(Asc2Bin(argv[1])*15);
1293:VS4210/monitor.c **** 
1294:VS4210/monitor.c **** 			Printf("\r\nPWM=%d",(WORD)(Asc2Bin(argv[1])*15));
1295:VS4210/monitor.c **** 	}
1296:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "ALCR" ) ) {
1297:VS4210/monitor.c **** 
1298:VS4210/monitor.c **** 			Printf("\r\nALCR=%04x",(WORD)GET_ALC122(0x02));
1299:VS4210/monitor.c **** 
1300:VS4210/monitor.c **** 		}
1301:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "ALCW" ) ) {
1302:VS4210/monitor.c **** 		WORD val=0;
1303:VS4210/monitor.c **** 		val=Asc2Bin(argv[1]);
1304:VS4210/monitor.c **** 		val<<=8;
1305:VS4210/monitor.c **** 		val|=Asc2Bin(argv[1]);
1306:VS4210/monitor.c **** 	
1307:VS4210/monitor.c **** 		SET_ALC122(0x02,val);
1308:VS4210/monitor.c **** 
1309:VS4210/monitor.c **** 			Printf("\r\nALCR=%04x",(WORD)GET_ALC122(0x02));
1310:VS4210/monitor.c **** 	}
1311:VS4210/monitor.c **** 	/*
1312:VS4210/monitor.c **** 	else if( !stricmp( argv[0], (BYTE *)"tri" ) ) {
1313:VS4210/monitor.c **** 	TriggerFlag=Asc2Bin( argv[1]);
1314:VS4210/monitor.c **** 
1315:VS4210/monitor.c **** 			Printf("\r\nTrigger=%02x",(WORD)TriggerFlag);
1316:VS4210/monitor.c **** 	}
1317:VS4210/monitor.c **** 	*/
1318:VS4210/monitor.c **** else if( !stricmp( argv[0], (BYTE *) "ACCESS" ) ) {
1319:VS4210/monitor.c **** 		//if( argc==2 ) {
1320:VS4210/monitor.c **** 			AccessEnable = Asc2Bin(argv[1]);
1321:VS4210/monitor.c **** 		//}
1322:VS4210/monitor.c **** 		Printf("\r\nVS4210 AUTO ACCESS = %d", (WORD)AccessEnable);
1323:VS4210/monitor.c **** 	}
1324:VS4210/monitor.c **** else if( !stricmp( argv[0], (BYTE *) "Win" ) ) {	//20201214-02
1325:VS4210/monitor.c **** 
1326:VS4210/monitor.c **** 		BYTE ch;
1327:VS4210/monitor.c **** 		ch=Asc2Bin(argv[1]);
1328:VS4210/monitor.c **** 		
1329:VS4210/monitor.c **** 		HS_Select_Win(ch);
ARM GAS  /tmp/ccZa3c9M.s 			page 50


1330:VS4210/monitor.c **** 		
1331:VS4210/monitor.c **** 
1332:VS4210/monitor.c **** 		if(ch==1)
1333:VS4210/monitor.c **** 		{
1334:VS4210/monitor.c **** 		Printf("\r\nTP_InputMode = %d", (WORD)TP_InputMode);
1335:VS4210/monitor.c **** 		
1336:VS4210/monitor.c **** 			if(TP_InputMode==5)
1337:VS4210/monitor.c **** 			TP_bt1120_720P_1080P_mode0_w0();
1338:VS4210/monitor.c **** 			else if(TP_InputMode==6)
1339:VS4210/monitor.c **** 				TP_bt1120_1080P_1080P_mode0_w0();
1340:VS4210/monitor.c **** 			else if(TP_InputMode==0)
1341:VS4210/monitor.c **** 				TP_bt1120_NTSC_1080P_mode0_w0();
1342:VS4210/monitor.c **** 			else if(TP_InputMode==1)
1343:VS4210/monitor.c **** 				TP_bt1120_PAL_1080P_mode0_w0();
1344:VS4210/monitor.c **** 							
1345:VS4210/monitor.c **** 		}
1346:VS4210/monitor.c **** }	
1347:VS4210/monitor.c **** 	else if( !stricmp( argv[0], (BYTE *) "TP0" ) ) { //720P
1348:VS4210/monitor.c **** 		TP_bt1120_720P_1080P_mode0_w0();
1349:VS4210/monitor.c **** 	}	
1350:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *)  "TP1" ) ) { //1080P
1351:VS4210/monitor.c **** 		TP_bt1120_1080P_1080P_mode0_w0();
1352:VS4210/monitor.c **** 	}	
1353:VS4210/monitor.c **** 	else if( !stricmp( argv[0], (BYTE *) "TP2" ) ) { //NTSC
1354:VS4210/monitor.c **** 		TP_bt1120_NTSC_1080P_mode0_w0();
1355:VS4210/monitor.c **** 	}	
1356:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "TP3" ) ) { //PAL
1357:VS4210/monitor.c **** 		TP_bt1120_PAL_1080P_mode0_w0();
1358:VS4210/monitor.c **** 	}	
1359:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "HDMI" ) ) { //HDMI
1360:VS4210/monitor.c **** 
1361:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1362:VS4210/monitor.c **** 		
1363:VS4210/monitor.c **** 		SelectInputMode=0;
1364:VS4210/monitor.c **** 		HS_Select_Win(0);
1365:VS4210/monitor.c **** 	}
1366:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "AHD" ) ) { //AHD
1367:VS4210/monitor.c **** 
1368:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1369:VS4210/monitor.c **** 	
1370:VS4210/monitor.c **** 		SelectInputMode=1;
1371:VS4210/monitor.c **** 		HS_Select_Win(1);
1372:VS4210/monitor.c **** 		Printf("\r\nTP_InputMode = %d", (WORD)TP_InputMode);
1373:VS4210/monitor.c **** 		
1374:VS4210/monitor.c **** 			if(TP_InputMode==5)
1375:VS4210/monitor.c **** 			TP_bt1120_720P_1080P_mode0_w0();
1376:VS4210/monitor.c **** 			else if(TP_InputMode==6)
1377:VS4210/monitor.c **** 				TP_bt1120_1080P_1080P_mode0_w0();
1378:VS4210/monitor.c **** 			else if(TP_InputMode==0)
1379:VS4210/monitor.c **** 				TP_bt1120_NTSC_1080P_mode0_w0();
1380:VS4210/monitor.c **** 			else if(TP_InputMode==1)
1381:VS4210/monitor.c **** 				TP_bt1120_PAL_1080P_mode0_w0();
1382:VS4210/monitor.c **** 			
1383:VS4210/monitor.c **** 							
1384:VS4210/monitor.c **** 	}	
1385:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "BS" ) ) { //HDMI input
1386:VS4210/monitor.c **** 		extern tByte bSignal[4] ;
ARM GAS  /tmp/ccZa3c9M.s 			page 51


1387:VS4210/monitor.c **** 		Printf("\r\nbSignal[0] = %d", (WORD) bSignal[0]);
1388:VS4210/monitor.c **** 		Printf("\r\nbSignal[1] = %d", (WORD) bSignal[1]);
1389:VS4210/monitor.c **** 		Printf("\r\nbSignal[2] = %d", (WORD) bSignal[2]);
1390:VS4210/monitor.c **** 		Printf("\r\nbSignal[3] = %d", (WORD) bSignal[3]);
1391:VS4210/monitor.c **** 
1392:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1393:VS4210/monitor.c **** 							
1394:VS4210/monitor.c **** 	}	
1395:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "SETHDMI" ) ) { //set HDMI embedded sync
1396:VS4210/monitor.c **** 
1397:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1398:VS4210/monitor.c **** 		SET_HDMI_SYNC_PARA();
1399:VS4210/monitor.c **** 
1400:VS4210/monitor.c **** 	}	
1401:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "SETAHD" ) ) { //set AHD embedded sync
1402:VS4210/monitor.c **** 
1403:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1404:VS4210/monitor.c **** 		SET_AHD_SYNC_PARA();
1405:VS4210/monitor.c **** 
1406:VS4210/monitor.c **** 	}	  
1407:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "TPRST" ) ) { //reset TP2824
1408:VS4210/monitor.c **** 
1409:VS4210/monitor.c **** 		Init_TP280x_RegSet();
1410:VS4210/monitor.c **** 
1411:VS4210/monitor.c **** 	}	
1412:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "HDMI6" ) ) { 
1413:VS4210/monitor.c **** 
1414:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1415:VS4210/monitor.c **** 		SET_HDMI_640_480P_PARA();
1416:VS4210/monitor.c **** 
1417:VS4210/monitor.c **** 		}
1418:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "V720" ) ) { 
1419:VS4210/monitor.c **** 
1420:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1421:VS4210/monitor.c **** 		SET_VS4210_720_480_out();
1422:VS4210/monitor.c **** 		
1423:VS4210/monitor.c **** 	}	
1424:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "om" ) ) {    //COC menu
1425:VS4210/monitor.c **** 
1426:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1427:VS4210/monitor.c **** 		TVI_Command=0x0F;
1428:VS4210/monitor.c **** 		presetNum=0;
1429:VS4210/monitor.c **** 		TVI_speed=0;
1430:VS4210/monitor.c **** 		TVI_Chksum=0xC5;
1431:VS4210/monitor.c **** 		ptztxflag=1;
1432:VS4210/monitor.c **** 		
1433:VS4210/monitor.c **** 	}	
1434:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "ou" ) ) {    //COC up
1435:VS4210/monitor.c **** 
1436:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1437:VS4210/monitor.c **** 		TVI_Command=0x06;
1438:VS4210/monitor.c **** 		presetNum=0x1F;
1439:VS4210/monitor.c **** 		TVI_speed=0;
1440:VS4210/monitor.c **** 		TVI_Chksum=0xDB;
1441:VS4210/monitor.c **** 		ptztxflag=1;
1442:VS4210/monitor.c **** 		
1443:VS4210/monitor.c **** 	}	
ARM GAS  /tmp/ccZa3c9M.s 			page 52


1444:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "od" ) ) {    //COC down
1445:VS4210/monitor.c **** 
1446:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1447:VS4210/monitor.c **** 		TVI_Command=0x07;
1448:VS4210/monitor.c **** 		presetNum=0x1F;
1449:VS4210/monitor.c **** 		TVI_speed=0;
1450:VS4210/monitor.c **** 		TVI_Chksum=0xDC;
1451:VS4210/monitor.c **** 		ptztxflag=1;
1452:VS4210/monitor.c **** 
1453:VS4210/monitor.c **** 	}	else if( !stricmp( argv[0],(BYTE *) "ol" ) ) {    //COC left
1454:VS4210/monitor.c **** 
1455:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1456:VS4210/monitor.c **** 		TVI_Command=0x09;
1457:VS4210/monitor.c **** 		presetNum=0;
1458:VS4210/monitor.c **** 		TVI_speed=0x1F;
1459:VS4210/monitor.c **** 		TVI_Chksum=0xDE;
1460:VS4210/monitor.c **** 		ptztxflag=1;
1461:VS4210/monitor.c **** 
1462:VS4210/monitor.c **** 	}	else if( !stricmp( argv[0],(BYTE *) "or" ) ) {    //COC right
1463:VS4210/monitor.c **** 
1464:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1465:VS4210/monitor.c **** 		TVI_Command=0x08;
1466:VS4210/monitor.c **** 		presetNum=0;
1467:VS4210/monitor.c **** 		TVI_speed=0x1F;
1468:VS4210/monitor.c **** 		TVI_Chksum=0xDD;
1469:VS4210/monitor.c **** 		ptztxflag=1;
1470:VS4210/monitor.c **** 		
1471:VS4210/monitor.c **** 	}
1472:VS4210/monitor.c **** 		else if( !stricmp( argv[0],(BYTE *) "op" ) ) {    //COC stop
1473:VS4210/monitor.c **** 			Monitor_flag=_FALSE;
1474:VS4210/monitor.c **** 		TVI_Command=0x14;
1475:VS4210/monitor.c **** 			presetNum=0;
1476:VS4210/monitor.c **** 			TVI_speed=0;
1477:VS4210/monitor.c **** 			TVI_Chksum=0;
1478:VS4210/monitor.c **** 				ptztxflag=1;	
1479:VS4210/monitor.c **** 			}
1480:VS4210/monitor.c **** 	#if 0
1481:VS4210/monitor.c **** 	else if( !stricmp( argv[0], (BYTE *)"sw" ) ) {
1482:VS4210/monitor.c **** 		BYTE ch,win;
1483:VS4210/monitor.c **** 	ch=Asc2Bin( argv[1]);
1484:VS4210/monitor.c **** 	win=Asc2Bin( (BYTE *)argv[2]);
1485:VS4210/monitor.c **** 	VS4210_SwitchChannel(ch,win);
1486:VS4210/monitor.c **** 
1487:VS4210/monitor.c **** 			Printf("\r\n(VS4210_SwitchChannel ch=%02x win=%02x)",(WORD)ch,(WORD)win);
1488:VS4210/monitor.c **** 	}
1489:VS4210/monitor.c **** 	#endif
1490:VS4210/monitor.c **** 	#if 0
1491:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0], (BYTE *)"dpreg" ) ) {	
1492:VS4210/monitor.c **** 		BYTE i;
1493:VS4210/monitor.c **** 		    for( i = 0; i < 4; i++)
1494:VS4210/monitor.c ****     {/*
1495:VS4210/monitor.c ****         count[i] = 0;
1496:VS4210/monitor.c ****         state[i] = VIDEO_UNPLUG;
1497:VS4210/monitor.c ****         std[i] = TVI;
1498:VS4210/monitor.c ****         mode[i] = NoDet;
1499:VS4210/monitor.c **** 		egain[4][4];        
1500:VS4210/monitor.c **** 		*/
ARM GAS  /tmp/ccZa3c9M.s 			page 53


1501:VS4210/monitor.c **** Printf("\r\n(ch=%02x count=%02x state=%02x std=%02x mode=%02x)",(WORD)i,(WORD)count[i],(WORD)state[
1502:VS4210/monitor.c **** Printf("(egain[%02x]  [0]=%02x [1]=%02x [2]=%02x [3]=%02x)",(WORD)i,(WORD)egain[i][0],(WORD)egain[i
1503:VS4210/monitor.c ****     }
1504:VS4210/monitor.c **** 	
1505:VS4210/monitor.c **** 		}
1506:VS4210/monitor.c **** #endif	
1507:VS4210/monitor.c **** 		/*
1508:VS4210/monitor.c **** 	//---------------------------------------------------
1509:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "*" ) ) {
1510:VS4210/monitor.c **** 			
1511:VS4210/monitor.c **** 				if( argc==1 ) {
1512:VS4210/monitor.c **** 					Printf("\r\n  * 0 : Program default Loader");
1513:VS4210/monitor.c **** 					Printf("\r\n  * 1 : Program external Loader");
1514:VS4210/monitor.c **** 					Printf("\r\n  * 2 : Execute Loader");
1515:VS4210/monitor.c **** 				}
1516:VS4210/monitor.c **** 				else { 
1517:VS4210/monitor.c **** 					BYTE mode;
1518:VS4210/monitor.c **** 					mode = Asc2Bin(argv[1]);
1519:VS4210/monitor.c **** 					//Loader(mode);
1520:VS4210/monitor.c **** 				}
1521:VS4210/monitor.c **** 	}
1522:VS4210/monitor.c **** 
1523:VS4210/monitor.c **** 	//---------------------------------------------------
1524:VS4210/monitor.c **** #if defined( SUPPORT_PC ) || defined( SUPPORT_DTV )
1525:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PCLK" ) ) {
1526:VS4210/monitor.c **** 		PclkAccess();			
1527:VS4210/monitor.c **** 	}
1528:VS4210/monitor.c **** #endif	
1529:VS4210/monitor.c **** 
1530:VS4210/monitor.c **** 	//---------------------------------------------------
1531:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "POWER" ) ) {
1532:VS4210/monitor.c **** 		//LCDPower();
1533:VS4210/monitor.c **** 	}
1534:VS4210/monitor.c **** 
1535:VS4210/monitor.c **** 	//---------------------------------------------------
1536:VS4210/monitor.c **** #if defined( SUPPORT_PC ) || defined( SUPPORT_DTV )
1537:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "M" ) ) {
1538:VS4210/monitor.c **** 		if( argc==2 ) {
1539:VS4210/monitor.c **** 			if( !stricmp( argv[1], "?" ) ) {
1540:VS4210/monitor.c **** 				BYTE i;
1541:VS4210/monitor.c **** 				Printf("\r\nCurrent Input:%d \r\n", (WORD)InputSelection);
1542:VS4210/monitor.c **** 				for(i=1; struct_InputSelection[i].Id!=0 ; i++)
1543:VS4210/monitor.c **** 						Printf("%s:%d  ",struct_InputSelection[i].Name,(WORD)struct_InputSelection[i].Id );
1544:VS4210/monitor.c **** 				Printf("\r\n");
1545:VS4210/monitor.c **** 			}
1546:VS4210/monitor.c **** 			else
1547:VS4210/monitor.c **** 				ChangeInput(Asc2Bin( argv[1] ));
1548:VS4210/monitor.c **** 		}
1549:VS4210/monitor.c **** 		else
1550:VS4210/monitor.c **** 			ChangeInput(GetNextInputSelection());
1551:VS4210/monitor.c **** 	}	
1552:VS4210/monitor.c **** 	//---------------------------------------------------
1553:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "ACCESS" ) ) {
1554:VS4210/monitor.c **** 		if( argc==2 ) {
1555:VS4210/monitor.c **** 			AccessEnable = Asc2Bin(argv[1]);
1556:VS4210/monitor.c **** 		}
1557:VS4210/monitor.c **** 		Printf("\r\nTW88xx AUTO ACCESS = %d", (WORD)AccessEnable);
ARM GAS  /tmp/ccZa3c9M.s 			page 54


1558:VS4210/monitor.c **** 	}
1559:VS4210/monitor.c **** 	#if 0
1560:VS4210/monitor.c **** 	//---------------------------------------------------
1561:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "AUTODETECT" ) ) {
1562:VS4210/monitor.c **** 		if( argc==2 ) {
1563:VS4210/monitor.c **** 			AutoDetect = Asc2Bin(argv[1]);
1564:VS4210/monitor.c **** 		}
1565:VS4210/monitor.c **** 		Printf("\r\nPC Auto Detect = %d", (WORD)AutoDetect);
1566:VS4210/monitor.c **** 	}	
1567:VS4210/monitor.c **** 	#endif
1568:VS4210/monitor.c **** 	//---------------------------------------------------
1569:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PCAUTO" ) ) {
1570:VS4210/monitor.c **** 		Puts("\r\nPC Auto Measurement");
1571:VS4210/monitor.c **** 		AutoAdjust();
1572:VS4210/monitor.c **** 	}	
1573:VS4210/monitor.c **** 	//---------------------------------------------------
1574:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PCCOLOR" ) ) {
1575:VS4210/monitor.c **** 		Puts("\r\nPC Color Auto Measurement");
1576:VS4210/monitor.c **** 		AutoColorAdjust();
1577:VS4210/monitor.c **** 	}	
1578:VS4210/monitor.c **** 	//---------------------------------------------------
1579:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "7" ) ) {
1580:VS4210/monitor.c **** 		Puts("\r\nGet HPN / VPN");
1581:VS4210/monitor.c **** 		GetHpnVpn(DebugLevel);
1582:VS4210/monitor.c **** 	}	
1583:VS4210/monitor.c **** #endif
1584:VS4210/monitor.c **** 	//---------------- Debug Level ---------------------
1585:VS4210/monitor.c **** 	else if ( !stricmp( argv[0], "DEBUG" ) ) {
1586:VS4210/monitor.c **** 		if( argc==2 ) {
1587:VS4210/monitor.c **** 			DebugLevel = Asc2Bin(argv[1]);
1588:VS4210/monitor.c **** 			SaveDebugLevelEE(DebugLevel);
1589:VS4210/monitor.c **** 		}
1590:VS4210/monitor.c **** 		Printf("\r\nDebug Level = %2x", (WORD)DebugLevel);
1591:VS4210/monitor.c **** 	}
1592:VS4210/monitor.c **** 	
1593:VS4210/monitor.c **** 	//---------------- Display on/off -------------------
1594:VS4210/monitor.c **** 	else if ( !stricmp( argv[0], "echo" ) ) {
1595:VS4210/monitor.c **** 		if( !stricmp( argv[1], "off" ) ) {
1596:VS4210/monitor.c **** 			echo = 0;
1597:VS4210/monitor.c **** 			Printf("\r\necho off");
1598:VS4210/monitor.c **** 		}
1599:VS4210/monitor.c **** 		else {
1600:VS4210/monitor.c **** 			echo = 1;
1601:VS4210/monitor.c **** 			Printf("\r\necho on");
1602:VS4210/monitor.c **** 		}
1603:VS4210/monitor.c **** 	}
1604:VS4210/monitor.c **** 	//---------------- RESET/ TEST / POWER_DOWN -------------------
1605:VS4210/monitor.c **** 	else if ( !stricmp( argv[0], "reset" ) ) {
1606:VS4210/monitor.c **** 		if( !stricmp( argv[1], "0" ) ) {
1607:VS4210/monitor.c **** //			P3_4 = 0;
1608:VS4210/monitor.c **** 			Printf("\r\nTW_reset_pin => 0");
1609:VS4210/monitor.c **** 		}
1610:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "1" ) ) {
1611:VS4210/monitor.c **** 	//		P3_4 = 1;
1612:VS4210/monitor.c **** 			Printf("\r\nTW_reset_pin => 1");
1613:VS4210/monitor.c **** 		}
1614:VS4210/monitor.c **** 		else {
ARM GAS  /tmp/ccZa3c9M.s 			page 55


1615:VS4210/monitor.c **** 			//Printf("\r\nTW_reset_pin = %d", (WORD)P3_4);
1616:VS4210/monitor.c **** 		}
1617:VS4210/monitor.c **** 	}
1618:VS4210/monitor.c **** 	else if ( !stricmp( argv[0], "test" ) ) {
1619:VS4210/monitor.c **** 		if( !stricmp( argv[1], "0" ) ) {
1620:VS4210/monitor.c **** 			//P0_7 = 0;
1621:VS4210/monitor.c **** 			Printf("\r\nTW_test_pin => 0");
1622:VS4210/monitor.c **** 		}
1623:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "1" ) ) {
1624:VS4210/monitor.c **** 			//P0_7 = 1;
1625:VS4210/monitor.c **** 			Printf("\r\nTW_test_pin => 1");
1626:VS4210/monitor.c **** 		}
1627:VS4210/monitor.c **** 		else {
1628:VS4210/monitor.c **** 		//	Printf("\r\nTW_test_pin = %d", (WORD)P0_7);
1629:VS4210/monitor.c **** 		}
1630:VS4210/monitor.c **** 	}
1631:VS4210/monitor.c **** 	else if ( !stricmp( argv[0], "pdn" ) ) {
1632:VS4210/monitor.c **** 		if( !stricmp( argv[1], "0" ) ) {
1633:VS4210/monitor.c **** 		//	P3_7 = 0;
1634:VS4210/monitor.c **** 			Printf("\r\nTW_PowerDown_pin => 0");
1635:VS4210/monitor.c **** 		}
1636:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "1" ) ) {
1637:VS4210/monitor.c **** 			//P3_7 = 1;
1638:VS4210/monitor.c **** 			Printf("\r\nTW_PowerDown_pin => 1");
1639:VS4210/monitor.c **** 		}
1640:VS4210/monitor.c **** 		else {
1641:VS4210/monitor.c **** 			//Printf("\r\nTW_PowerDown_pin = %d", (WORD)P3_7);
1642:VS4210/monitor.c **** 		}
1643:VS4210/monitor.c **** 	}
1644:VS4210/monitor.c **** 	//---------------- OSD test for parallel -----------------------------------
1645:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "OSD" ) ) {
1646:VS4210/monitor.c **** 		if( !stricmp( argv[1], "logo" ) ) {
1647:VS4210/monitor.c **** //			DisplayLogo();
1648:VS4210/monitor.c **** 		}
1649:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "end" ) ) {
1650:VS4210/monitor.c **** 		  	Puts("\r\nIf you'd like to exit, press any Key....");
1651:VS4210/monitor.c **** 	 		while ( !RS_ready() ){
1652:VS4210/monitor.c **** 				P2 = ReadTW88( 0x95 );
1653:VS4210/monitor.c **** 			}
1654:VS4210/monitor.c **** 		}
1655:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "input" ) ) {
1656:VS4210/monitor.c **** //			DisplayInput();
1657:VS4210/monitor.c **** 		}
1658:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "off" ) ) {
1659:VS4210/monitor.c **** ////			ShowOSDWindowAll(OFF);
1660:VS4210/monitor.c **** 		}
1661:VS4210/monitor.c **** 		//else if( !stricmp( argv[1], "grid" ) ) {
1662:VS4210/monitor.c **** 		//	DisplayGrid();
1663:VS4210/monitor.c **** 		//}
1664:VS4210/monitor.c **** #if 0		
1665:VS4210/monitor.c **** #ifndef BANKING
1666:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "cone" ) ) {
1667:VS4210/monitor.c **** 			DisplayCone();
1668:VS4210/monitor.c **** 			DisplayJapanese();
1669:VS4210/monitor.c **** 		}
1670:VS4210/monitor.c **** #endif		
1671:VS4210/monitor.c **** #endif
ARM GAS  /tmp/ccZa3c9M.s 			page 56


1672:VS4210/monitor.c **** 		#ifdef BANKING
1673:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "agrid" ) ) {
1674:VS4210/monitor.c **** 		  	BYTE i, j, k;
1675:VS4210/monitor.c **** 		  	Puts("\r\nIf you'd like to exit, press any Key....");
1676:VS4210/monitor.c **** 			j = 0;
1677:VS4210/monitor.c **** 			k = 0;
1678:VS4210/monitor.c **** 			DisplayMessage();
1679:VS4210/monitor.c **** 			if ( argc == 3 )
1680:VS4210/monitor.c **** 				i = Asc2Bin(argv[2]);
1681:VS4210/monitor.c **** 			else i = 0;
1682:VS4210/monitor.c **** 	 		while ( !RS_ready() ){
1683:VS4210/monitor.c **** 				if ( j < 9 )
1684:VS4210/monitor.c **** 					DisplayGridBank0(j);
1685:VS4210/monitor.c **** 				else
1686:VS4210/monitor.c **** 					DisplayGridBank1(j);
1687:VS4210/monitor.c **** 				if ( i )
1688:VS4210/monitor.c **** 					delay(10*i);
1689:VS4210/monitor.c **** 				if (k==0) {
1690:VS4210/monitor.c **** 					if (j==16) {
1691:VS4210/monitor.c **** 						k = 1;
1692:VS4210/monitor.c **** 						j--;
1693:VS4210/monitor.c **** 					}
1694:VS4210/monitor.c **** 					else j++;
1695:VS4210/monitor.c **** 				}
1696:VS4210/monitor.c **** 				else {
1697:VS4210/monitor.c **** 					if ( j==0 ) {
1698:VS4210/monitor.c **** 						k = 0;
1699:VS4210/monitor.c **** 						j++;
1700:VS4210/monitor.c **** 					}
1701:VS4210/monitor.c **** 					else j--;
1702:VS4210/monitor.c **** 				}
1703:VS4210/monitor.c **** 			}
1704:VS4210/monitor.c **** 		}
1705:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "cgrid" ) ) {
1706:VS4210/monitor.c **** 		  	BYTE i, j, k;
1707:VS4210/monitor.c **** 		  	Puts("\r\nIf you'd like to exit, press any Key....");
1708:VS4210/monitor.c **** 			j = 0;
1709:VS4210/monitor.c **** 			k = 0;
1710:VS4210/monitor.c **** 			DisplayChinese();
1711:VS4210/monitor.c **** 			if ( argc == 3 )
1712:VS4210/monitor.c **** 				i = Asc2Bin(argv[2]);
1713:VS4210/monitor.c **** 			else i = 0;
1714:VS4210/monitor.c **** 	 		while ( !RS_ready() ){
1715:VS4210/monitor.c **** 				if ( j < 9 )
1716:VS4210/monitor.c **** 					DisplayGridBank0(j);
1717:VS4210/monitor.c **** 				else
1718:VS4210/monitor.c **** 					DisplayGridBank1(j);
1719:VS4210/monitor.c **** 				if ( i )
1720:VS4210/monitor.c **** 					delay(10*i);
1721:VS4210/monitor.c **** 				if (k==0) {
1722:VS4210/monitor.c **** 					if (j==16) {
1723:VS4210/monitor.c **** 						k = 1;
1724:VS4210/monitor.c **** 						j--;
1725:VS4210/monitor.c **** 					}
1726:VS4210/monitor.c **** 					else j++;
1727:VS4210/monitor.c **** 				}
1728:VS4210/monitor.c **** 				else {
ARM GAS  /tmp/ccZa3c9M.s 			page 57


1729:VS4210/monitor.c **** 					if ( j==0 ) {
1730:VS4210/monitor.c **** 						k = 0;
1731:VS4210/monitor.c **** 						j++;
1732:VS4210/monitor.c **** 					}
1733:VS4210/monitor.c **** 					else j--;
1734:VS4210/monitor.c **** 				}
1735:VS4210/monitor.c **** 			}
1736:VS4210/monitor.c **** 		}
1737:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "jgrid" ) ) {
1738:VS4210/monitor.c **** 		  	BYTE i, j, k;
1739:VS4210/monitor.c **** 		  	Puts("\r\nIf you'd like to exit, press any Key....");
1740:VS4210/monitor.c **** 			j = 0;
1741:VS4210/monitor.c **** 			k = 0;
1742:VS4210/monitor.c **** 			DisplayJapanese();
1743:VS4210/monitor.c **** 			if ( argc == 3 )
1744:VS4210/monitor.c **** 				i = Asc2Bin(argv[2]);
1745:VS4210/monitor.c **** 			else i = 0;
1746:VS4210/monitor.c **** 	 		while ( !RS_ready() ){
1747:VS4210/monitor.c **** 				if ( j < 9 )
1748:VS4210/monitor.c **** 					DisplayGridBank0(j);
1749:VS4210/monitor.c **** 				else
1750:VS4210/monitor.c **** 					DisplayGridBank1(j);
1751:VS4210/monitor.c **** 				if ( i )
1752:VS4210/monitor.c **** 					delay(10*i);
1753:VS4210/monitor.c **** 				if (k==0) {
1754:VS4210/monitor.c **** 					if (j==16) {
1755:VS4210/monitor.c **** 						k = 1;
1756:VS4210/monitor.c **** 						j--;
1757:VS4210/monitor.c **** 					}
1758:VS4210/monitor.c **** 					else j++;
1759:VS4210/monitor.c **** 				}
1760:VS4210/monitor.c **** 				else {
1761:VS4210/monitor.c **** 					if ( j==0 ) {
1762:VS4210/monitor.c **** 						k = 0;
1763:VS4210/monitor.c **** 						j++;
1764:VS4210/monitor.c **** 					}
1765:VS4210/monitor.c **** 					else j--;
1766:VS4210/monitor.c **** 				}
1767:VS4210/monitor.c **** 			}
1768:VS4210/monitor.c **** 		}
1769:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "kgrid" ) ) {
1770:VS4210/monitor.c **** 		  	BYTE i, j, k;
1771:VS4210/monitor.c **** 		  	Puts("\r\nIf you'd like to exit, press any Key....");
1772:VS4210/monitor.c **** 			j = 0;
1773:VS4210/monitor.c **** 			k = 0;
1774:VS4210/monitor.c **** 			DisplayKorean();
1775:VS4210/monitor.c **** 			if ( argc == 3 )
1776:VS4210/monitor.c **** 				i = Asc2Bin(argv[2]);
1777:VS4210/monitor.c **** 			else i = 0;
1778:VS4210/monitor.c **** 	 		while ( !RS_ready() ){
1779:VS4210/monitor.c **** 				if ( j < 9 )
1780:VS4210/monitor.c **** 					DisplayGridBank0(j);
1781:VS4210/monitor.c **** 				else
1782:VS4210/monitor.c **** 					DisplayGridBank1(j);
1783:VS4210/monitor.c **** 				if ( i )
1784:VS4210/monitor.c **** 					delay(10*i);
1785:VS4210/monitor.c **** 				if (k==0) {
ARM GAS  /tmp/ccZa3c9M.s 			page 58


1786:VS4210/monitor.c **** 					if (j==16) {
1787:VS4210/monitor.c **** 						k = 1;
1788:VS4210/monitor.c **** 						j--;
1789:VS4210/monitor.c **** 					}
1790:VS4210/monitor.c **** 					else j++;
1791:VS4210/monitor.c **** 				}
1792:VS4210/monitor.c **** 				else {
1793:VS4210/monitor.c **** 					if ( j==0 ) {
1794:VS4210/monitor.c **** 						k = 0;
1795:VS4210/monitor.c **** 						j++;
1796:VS4210/monitor.c **** 					}
1797:VS4210/monitor.c **** 					else j--;
1798:VS4210/monitor.c **** 				}
1799:VS4210/monitor.c **** 			}
1800:VS4210/monitor.c **** 		}
1801:VS4210/monitor.c **** 		#endif
1802:VS4210/monitor.c **** 	}
1803:VS4210/monitor.c **** 	//---------------- TELI ML070I Test function -----------------------------------
1804:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PWM0" ) ) {
1805:VS4210/monitor.c **** 		SET_PWM(_BL_PWM, Asc2Bin(argv[1]));
1806:VS4210/monitor.c **** 		Puts("\r\nSET PWMP1.4");
1807:VS4210/monitor.c **** 	}
1808:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PWM1" ) ) {
1809:VS4210/monitor.c **** 		SET_PWM(_CHG_CURR, Asc2Bin(argv[1]));
1810:VS4210/monitor.c **** 		Puts("\r\nSET PWMP1.5");
1811:VS4210/monitor.c **** 	}
1812:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PWM" ) ) {
1813:VS4210/monitor.c **** 		if(Asc2Bin(argv[1]))
1814:VS4210/monitor.c **** 			{
1815:VS4210/monitor.c **** 			SET_PWM(_RUN_PWM, _RUN_PWM);
1816:VS4210/monitor.c **** 			Puts("\r\nPOEN PWM");
1817:VS4210/monitor.c **** 			}
1818:VS4210/monitor.c **** 		else
1819:VS4210/monitor.c **** 			{
1820:VS4210/monitor.c **** 			SET_PWM(_STOP_PWM, _STOP_PWM);
1821:VS4210/monitor.c **** 			Puts("\r\nSTOP PWM");
1822:VS4210/monitor.c **** 			}
1823:VS4210/monitor.c **** 	}
1824:VS4210/monitor.c **** 	//---------------- serial tx test with some number -----------------------------------
1825:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "TX" ) ) {
1826:VS4210/monitor.c **** 		MonTxDump();
1827:VS4210/monitor.c **** 	}
1828:VS4210/monitor.c **** 	//---------------- OSD FONTtest for parallel -----------------------------------
1829:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "FONT" ) ) {
1830:VS4210/monitor.c **** 		if ( !stricmp( argv[1], "RAM" ) ) {
1831:VS4210/monitor.c **** //			DisplayRAMFont( Asc2Bin(argv[2]) );
1832:VS4210/monitor.c **** 		}
1833:VS4210/monitor.c **** 		else if ( !stricmp( argv[1], "ROM" ) ) {
1834:VS4210/monitor.c **** 		//	DisplayROMFont(Asc2Bin(argv[2]));
1835:VS4210/monitor.c **** 		}
1836:VS4210/monitor.c **** 		else {
1837:VS4210/monitor.c **** 			Puts("\r\n Font ROM # or Font RAM # for testing");
1838:VS4210/monitor.c **** 		}
1839:VS4210/monitor.c **** 	}
1840:VS4210/monitor.c **** 	*/
1841:VS4210/monitor.c **** 	//---------------- Delta RGB Panel Test -------------------------
1842:VS4210/monitor.c **** 	#if 0//def SUPPORT_DELTA_RGB
ARM GAS  /tmp/ccZa3c9M.s 			page 59


1843:VS4210/monitor.c **** 
1844:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "delta" ) ) {
1845:VS4210/monitor.c **** 		if( argc==1 )	DeltaRGBPanelInit();
1846:VS4210/monitor.c **** 		else {
1847:VS4210/monitor.c **** 			
1848:VS4210/monitor.c **** 			if( !stricmp( argv[1], "w" ) ) {
1849:VS4210/monitor.c **** 
1850:VS4210/monitor.c **** 				WORD val;
1851:VS4210/monitor.c **** 				val= Asc2Bin(argv[3])<<8 | Asc2Bin(argv[4]);
1852:VS4210/monitor.c **** 				Printf("\r\n SPI Write: Addr:%2x  Data:%4x", (WORD)Asc2Bin(argv[2]), val);
1853:VS4210/monitor.c **** 				WriteSPI(Asc2Bin(argv[2]), val );
1854:VS4210/monitor.c **** 			}
1855:VS4210/monitor.c **** 			else if( !stricmp( argv[1], "r" ) ) {
1856:VS4210/monitor.c **** 				WORD val;
1857:VS4210/monitor.c **** 				val = ReadSPI(Asc2Bin(argv[2]));
1858:VS4210/monitor.c **** 				Printf("\r\n SPI Read: Addr:%2x  Data:%4x", (WORD)Asc2Bin(argv[2]), val);
1859:VS4210/monitor.c **** 			}
1860:VS4210/monitor.c **** 		}
1861:VS4210/monitor.c **** 	}
1862:VS4210/monitor.c **** 	#endif
1863:VS4210/monitor.c **** 	//----------------------------------------------------
1864:VS4210/monitor.c **** 	else {
1865:VS4210/monitor.c **** 		Printf("\r\nInvalid command...");
1866:VS4210/monitor.c **** 	}
1867:VS4210/monitor.c **** 
1868:VS4210/monitor.c **** 
1869:VS4210/monitor.c **** 	Prompt();
1870:VS4210/monitor.c **** 
1871:VS4210/monitor.c **** 
1872:VS4210/monitor.c **** }
1873:VS4210/monitor.c **** #endif
1874:VS4210/monitor.c **** 
1875:VS4210/monitor.c **** 
1876:VS4210/monitor.c **** 
1877:VS4210/monitor.c **** void SET_AHD_SYNC_PARA(void)
1878:VS4210/monitor.c **** {
 1429              		.loc 1 1878 0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 0
 1432              		@ frame_needed = 0, uses_anonymous_args = 0
 1433 0000 08B5     		push	{r3, lr}
 1434              	.LCFI16:
 1435              		.cfi_def_cfa_offset 8
 1436              		.cfi_offset 3, -8
 1437              		.cfi_offset 14, -4
1879:VS4210/monitor.c **** 	Printf("\r\nLoading AHD Embedded Sync para.... ");
 1438              		.loc 1 1879 0
 1439 0002 5448     		ldr	r0, .L119
 1440 0004 FFF7FEFF 		bl	Printf
 1441              	.LVL98:
1880:VS4210/monitor.c **** 	//DUMP VS4210 Reg..
1881:VS4210/monitor.c **** #if 1
1882:VS4210/monitor.c **** 	VXISI2CWrite(0x08,0x40);
 1442              		.loc 1 1882 0
 1443 0008 4021     		movs	r1, #64
 1444 000a 0820     		movs	r0, #8
 1445 000c FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccZa3c9M.s 			page 60


 1446              	.LVL99:
1883:VS4210/monitor.c **** 	
1884:VS4210/monitor.c **** 	VXISI2CWrite(0x0A,0x40);
 1447              		.loc 1 1884 0
 1448 0010 4021     		movs	r1, #64
 1449 0012 0A20     		movs	r0, #10
 1450 0014 FFF7FEFF 		bl	VXISI2CWrite
 1451              	.LVL100:
1885:VS4210/monitor.c **** 	
1886:VS4210/monitor.c **** //	VXISI2CWrite(0x10,0x80);
1887:VS4210/monitor.c **** 	
1888:VS4210/monitor.c **** 	VXISI2CWrite(0x12,0x74);
 1452              		.loc 1 1888 0
 1453 0018 7421     		movs	r1, #116
 1454 001a 1220     		movs	r0, #18
 1455 001c FFF7FEFF 		bl	VXISI2CWrite
 1456              	.LVL101:
1889:VS4210/monitor.c **** 	VXISI2CWrite(0x13,0x80);
 1457              		.loc 1 1889 0
 1458 0020 8021     		movs	r1, #128
 1459 0022 1320     		movs	r0, #19
 1460 0024 FFF7FEFF 		bl	VXISI2CWrite
 1461              	.LVL102:
1890:VS4210/monitor.c **** 	VXISI2CWrite(0x14,0x38);
 1462              		.loc 1 1890 0
 1463 0028 3821     		movs	r1, #56
 1464 002a 1420     		movs	r0, #20
 1465 002c FFF7FEFF 		bl	VXISI2CWrite
 1466              	.LVL103:
1891:VS4210/monitor.c **** 	
1892:VS4210/monitor.c **** 	VXISI2CWrite(0x19,0x00);
 1467              		.loc 1 1892 0
 1468 0030 0021     		movs	r1, #0
 1469 0032 1920     		movs	r0, #25
 1470 0034 FFF7FEFF 		bl	VXISI2CWrite
 1471              	.LVL104:
1893:VS4210/monitor.c **** 	VXISI2CWrite(0x1A,0x20);
 1472              		.loc 1 1893 0
 1473 0038 2021     		movs	r1, #32
 1474 003a 1A20     		movs	r0, #26
 1475 003c FFF7FEFF 		bl	VXISI2CWrite
 1476              	.LVL105:
1894:VS4210/monitor.c **** 	VXISI2CWrite(0x1B,0x30);
 1477              		.loc 1 1894 0
 1478 0040 3021     		movs	r1, #48
 1479 0042 1B20     		movs	r0, #27
 1480 0044 FFF7FEFF 		bl	VXISI2CWrite
 1481              	.LVL106:
1895:VS4210/monitor.c **** 	
1896:VS4210/monitor.c **** 	VXISI2CWrite(0x1F,0xA4);
 1482              		.loc 1 1896 0
 1483 0048 A421     		movs	r1, #164
 1484 004a 1F20     		movs	r0, #31
 1485 004c FFF7FEFF 		bl	VXISI2CWrite
 1486              	.LVL107:
1897:VS4210/monitor.c **** 	VXISI2CWrite(0x20,0x50);
 1487              		.loc 1 1897 0
ARM GAS  /tmp/ccZa3c9M.s 			page 61


 1488 0050 5021     		movs	r1, #80
 1489 0052 2020     		movs	r0, #32
 1490 0054 FFF7FEFF 		bl	VXISI2CWrite
 1491              	.LVL108:
1898:VS4210/monitor.c **** 	VXISI2CWrite(0x21,0xE2);
 1492              		.loc 1 1898 0
 1493 0058 E221     		movs	r1, #226
 1494 005a 2120     		movs	r0, #33
 1495 005c FFF7FEFF 		bl	VXISI2CWrite
 1496              	.LVL109:
1899:VS4210/monitor.c **** 	VXISI2CWrite(0x22,0x87);
 1497              		.loc 1 1899 0
 1498 0060 8721     		movs	r1, #135
 1499 0062 2220     		movs	r0, #34
 1500 0064 FFF7FEFF 		bl	VXISI2CWrite
 1501              	.LVL110:
1900:VS4210/monitor.c **** 	VXISI2CWrite(0x23,0x98);
 1502              		.loc 1 1900 0
 1503 0068 9821     		movs	r1, #152
 1504 006a 2320     		movs	r0, #35
 1505 006c FFF7FEFF 		bl	VXISI2CWrite
 1506              	.LVL111:
1901:VS4210/monitor.c **** 	VXISI2CWrite(0x24,0x80);
 1507              		.loc 1 1901 0
 1508 0070 8021     		movs	r1, #128
 1509 0072 2420     		movs	r0, #36
 1510 0074 FFF7FEFF 		bl	VXISI2CWrite
 1511              	.LVL112:
1902:VS4210/monitor.c **** 	VXISI2CWrite(0x25,0x44);
 1512              		.loc 1 1902 0
 1513 0078 4421     		movs	r1, #68
 1514 007a 2520     		movs	r0, #37
 1515 007c FFF7FEFF 		bl	VXISI2CWrite
 1516              	.LVL113:
1903:VS4210/monitor.c **** 	
1904:VS4210/monitor.c **** 	VXISI2CWrite(0x27,0x38);
 1517              		.loc 1 1904 0
 1518 0080 3821     		movs	r1, #56
 1519 0082 2720     		movs	r0, #39
 1520 0084 FFF7FEFF 		bl	VXISI2CWrite
 1521              	.LVL114:
1905:VS4210/monitor.c **** 	
1906:VS4210/monitor.c **** 	VXISI2CWrite(0x2E,0x47);
 1522              		.loc 1 1906 0
 1523 0088 4721     		movs	r1, #71
 1524 008a 2E20     		movs	r0, #46
 1525 008c FFF7FEFF 		bl	VXISI2CWrite
 1526              	.LVL115:
1907:VS4210/monitor.c **** 	VXISI2CWrite(0x2F,0x80);
 1527              		.loc 1 1907 0
 1528 0090 8021     		movs	r1, #128
 1529 0092 2F20     		movs	r0, #47
 1530 0094 FFF7FEFF 		bl	VXISI2CWrite
 1531              	.LVL116:
1908:VS4210/monitor.c **** 	
1909:VS4210/monitor.c **** 	VXISI2CWrite(0x3A,0x1D);
 1532              		.loc 1 1909 0
ARM GAS  /tmp/ccZa3c9M.s 			page 62


 1533 0098 1D21     		movs	r1, #29
 1534 009a 3A20     		movs	r0, #58
 1535 009c FFF7FEFF 		bl	VXISI2CWrite
 1536              	.LVL117:
1910:VS4210/monitor.c **** 	
1911:VS4210/monitor.c **** 	VXISI2CWrite(0x45,0x00);
 1537              		.loc 1 1911 0
 1538 00a0 0021     		movs	r1, #0
 1539 00a2 4520     		movs	r0, #69
 1540 00a4 FFF7FEFF 		bl	VXISI2CWrite
 1541              	.LVL118:
1912:VS4210/monitor.c **** 	
1913:VS4210/monitor.c **** 	VXISI2CWrite(0x58,0x00);
 1542              		.loc 1 1913 0
 1543 00a8 0021     		movs	r1, #0
 1544 00aa 5820     		movs	r0, #88
 1545 00ac FFF7FEFF 		bl	VXISI2CWrite
 1546              	.LVL119:
1914:VS4210/monitor.c **** 	
1915:VS4210/monitor.c **** 	VXISI2CWrite(0x69,0x88);
 1547              		.loc 1 1915 0
 1548 00b0 8821     		movs	r1, #136
 1549 00b2 6920     		movs	r0, #105
 1550 00b4 FFF7FEFF 		bl	VXISI2CWrite
 1551              	.LVL120:
1916:VS4210/monitor.c **** 	
1917:VS4210/monitor.c **** 	VXISI2CWrite(0x74,0x06);
 1552              		.loc 1 1917 0
 1553 00b8 0621     		movs	r1, #6
 1554 00ba 7420     		movs	r0, #116
 1555 00bc FFF7FEFF 		bl	VXISI2CWrite
 1556              	.LVL121:
1918:VS4210/monitor.c **** 
1919:VS4210/monitor.c **** 	VXISI2CWrite(0x80,0x01);
 1557              		.loc 1 1919 0
 1558 00c0 0121     		movs	r1, #1
 1559 00c2 8020     		movs	r0, #128
 1560 00c4 FFF7FEFF 		bl	VXISI2CWrite
 1561              	.LVL122:
1920:VS4210/monitor.c **** 	VXISI2CWrite(0x81,0x15);
 1562              		.loc 1 1920 0
 1563 00c8 1521     		movs	r1, #21
 1564 00ca 8120     		movs	r0, #129
 1565 00cc FFF7FEFF 		bl	VXISI2CWrite
 1566              	.LVL123:
1921:VS4210/monitor.c **** 	
1922:VS4210/monitor.c **** 	VXISI2CWrite(0x83,0x2D);
 1567              		.loc 1 1922 0
 1568 00d0 2D21     		movs	r1, #45
 1569 00d2 8320     		movs	r0, #131
 1570 00d4 FFF7FEFF 		bl	VXISI2CWrite
 1571              	.LVL124:
1923:VS4210/monitor.c **** 	
1924:VS4210/monitor.c **** 	VXISI2CWrite(0x86,0x00);
 1572              		.loc 1 1924 0
 1573 00d8 0021     		movs	r1, #0
 1574 00da 8620     		movs	r0, #134
ARM GAS  /tmp/ccZa3c9M.s 			page 63


 1575 00dc FFF7FEFF 		bl	VXISI2CWrite
 1576              	.LVL125:
1925:VS4210/monitor.c **** 	VXISI2CWrite(0x87,0x00);
 1577              		.loc 1 1925 0
 1578 00e0 0021     		movs	r1, #0
 1579 00e2 8720     		movs	r0, #135
 1580 00e4 FFF7FEFF 		bl	VXISI2CWrite
 1581              	.LVL126:
1926:VS4210/monitor.c **** 	VXISI2CWrite(0x88,0x00);
 1582              		.loc 1 1926 0
 1583 00e8 0021     		movs	r1, #0
 1584 00ea 8820     		movs	r0, #136
 1585 00ec FFF7FEFF 		bl	VXISI2CWrite
 1586              	.LVL127:
1927:VS4210/monitor.c **** 	VXISI2CWrite(0x89,0x00);
 1587              		.loc 1 1927 0
 1588 00f0 0021     		movs	r1, #0
 1589 00f2 8920     		movs	r0, #137
 1590 00f4 FFF7FEFF 		bl	VXISI2CWrite
 1591              	.LVL128:
1928:VS4210/monitor.c **** 	
1929:VS4210/monitor.c **** 	VXISI2CWrite(0x8D,0x17);
 1592              		.loc 1 1929 0
 1593 00f8 1721     		movs	r1, #23
 1594 00fa 8D20     		movs	r0, #141
 1595 00fc FFF7FEFF 		bl	VXISI2CWrite
 1596              	.LVL129:
1930:VS4210/monitor.c **** 	
1931:VS4210/monitor.c **** 	VXISI2CWrite(0x9A,0x80);
 1597              		.loc 1 1931 0
 1598 0100 8021     		movs	r1, #128
 1599 0102 9A20     		movs	r0, #154
 1600 0104 FFF7FEFF 		bl	VXISI2CWrite
 1601              	.LVL130:
1932:VS4210/monitor.c **** 	
1933:VS4210/monitor.c **** 	
1934:VS4210/monitor.c **** 	VXISI2CWrite(0xB8,0x80);
 1602              		.loc 1 1934 0
 1603 0108 8021     		movs	r1, #128
 1604 010a B820     		movs	r0, #184
 1605 010c FFF7FEFF 		bl	VXISI2CWrite
 1606              	.LVL131:
1935:VS4210/monitor.c **** 
1936:VS4210/monitor.c **** 	VXISI2CWrite(0xBA,0x01);
 1607              		.loc 1 1936 0
 1608 0110 0121     		movs	r1, #1
 1609 0112 BA20     		movs	r0, #186
 1610 0114 FFF7FEFF 		bl	VXISI2CWrite
 1611              	.LVL132:
1937:VS4210/monitor.c **** 	
1938:VS4210/monitor.c **** 	VXISI2CWrite(0xBE,0x2C);
 1612              		.loc 1 1938 0
 1613 0118 2C21     		movs	r1, #44
 1614 011a BE20     		movs	r0, #190
 1615 011c FFF7FEFF 		bl	VXISI2CWrite
 1616              	.LVL133:
1939:VS4210/monitor.c **** 	
ARM GAS  /tmp/ccZa3c9M.s 			page 64


1940:VS4210/monitor.c **** 	VXISI2CWrite(0xD7,0x0F);
 1617              		.loc 1 1940 0
 1618 0120 0F21     		movs	r1, #15
 1619 0122 D720     		movs	r0, #215
 1620 0124 FFF7FEFF 		bl	VXISI2CWrite
 1621              	.LVL134:
1941:VS4210/monitor.c **** 	
1942:VS4210/monitor.c **** 	VXISI2CWrite(0xDE,0xB0);
 1622              		.loc 1 1942 0
 1623 0128 B021     		movs	r1, #176
 1624 012a DE20     		movs	r0, #222
 1625 012c FFF7FEFF 		bl	VXISI2CWrite
 1626              	.LVL135:
1943:VS4210/monitor.c **** 	
1944:VS4210/monitor.c **** 	VXISI2CWrite(0xF0,0x30);
 1627              		.loc 1 1944 0
 1628 0130 3021     		movs	r1, #48
 1629 0132 F020     		movs	r0, #240
 1630 0134 FFF7FEFF 		bl	VXISI2CWrite
 1631              	.LVL136:
1945:VS4210/monitor.c **** 	
1946:VS4210/monitor.c **** 	VXISI2CWrite(0xFD,0x70);
 1632              		.loc 1 1946 0
 1633 0138 7021     		movs	r1, #112
 1634 013a FD20     		movs	r0, #253
 1635 013c FFF7FEFF 		bl	VXISI2CWrite
 1636              	.LVL137:
1947:VS4210/monitor.c **** 	VXISI2CWrite(0xFE,0x18);
 1637              		.loc 1 1947 0
 1638 0140 1821     		movs	r1, #24
 1639 0142 FE20     		movs	r0, #254
 1640 0144 FFF7FEFF 		bl	VXISI2CWrite
 1641              	.LVL138:
1948:VS4210/monitor.c **** 	VXISI2CWrite(0xFF,0x07);
 1642              		.loc 1 1948 0
 1643 0148 0721     		movs	r1, #7
 1644 014a FF20     		movs	r0, #255
 1645 014c FFF7FEFF 		bl	VXISI2CWrite
 1646              	.LVL139:
1949:VS4210/monitor.c **** #else
1950:VS4210/monitor.c **** 	VXISI2CWrite(0x08,0x40);
1951:VS4210/monitor.c **** 	
1952:VS4210/monitor.c **** 	VXISI2CWrite(0x0A,0x40);
1953:VS4210/monitor.c **** 	
1954:VS4210/monitor.c **** //	VXISI2CWrite(0x10,0x80);
1955:VS4210/monitor.c **** 	
1956:VS4210/monitor.c **** 	VXISI2CWrite(0x12,0x74);
1957:VS4210/monitor.c **** 	VXISI2CWrite(0x13,0x80);
1958:VS4210/monitor.c **** 	VXISI2CWrite(0x14,0x38);
1959:VS4210/monitor.c **** 	
1960:VS4210/monitor.c **** 	VXISI2CWrite(0x19,0x00);
1961:VS4210/monitor.c **** 	VXISI2CWrite(0x1A,0x20);
1962:VS4210/monitor.c **** 	VXISI2CWrite(0x1B,0x30);
1963:VS4210/monitor.c **** 	
1964:VS4210/monitor.c **** 	VXISI2CWrite(0x1F,0xA4);
1965:VS4210/monitor.c **** 	VXISI2CWrite(0x20,0x50);
1966:VS4210/monitor.c **** 	VXISI2CWrite(0x21,0xE2);
ARM GAS  /tmp/ccZa3c9M.s 			page 65


1967:VS4210/monitor.c **** 	VXISI2CWrite(0x22,0x87);
1968:VS4210/monitor.c **** 	VXISI2CWrite(0x23,0x98);
1969:VS4210/monitor.c **** 	VXISI2CWrite(0x24,0x80);
1970:VS4210/monitor.c **** 	VXISI2CWrite(0x25,0x44);
1971:VS4210/monitor.c **** 	
1972:VS4210/monitor.c **** 	VXISI2CWrite(0x27,0x38);
1973:VS4210/monitor.c **** 	
1974:VS4210/monitor.c **** //	VXISI2CWrite(0x2E,0x47);
1975:VS4210/monitor.c **** //	VXISI2CWrite(0x2F,0x80);
1976:VS4210/monitor.c **** 	
1977:VS4210/monitor.c **** //	VXISI2CWrite(0x3A,0x1D);
1978:VS4210/monitor.c **** 	
1979:VS4210/monitor.c **** //	VXISI2CWrite(0x45,0x00);
1980:VS4210/monitor.c **** 	
1981:VS4210/monitor.c **** //	VXISI2CWrite(0x58,0x00);
1982:VS4210/monitor.c **** 	
1983:VS4210/monitor.c **** //	VXISI2CWrite(0x69,0x88);
1984:VS4210/monitor.c **** 	
1985:VS4210/monitor.c **** 	VXISI2CWrite(0x74,0x06);
1986:VS4210/monitor.c **** 
1987:VS4210/monitor.c **** 	VXISI2CWrite(0x80,0x01);
1988:VS4210/monitor.c **** 	VXISI2CWrite(0x81,0x15);
1989:VS4210/monitor.c **** 	
1990:VS4210/monitor.c **** 	VXISI2CWrite(0x83,0x2D);
1991:VS4210/monitor.c **** 	
1992:VS4210/monitor.c **** //	VXISI2CWrite(0x86,0x00);
1993:VS4210/monitor.c **** //	VXISI2CWrite(0x87,0x00);
1994:VS4210/monitor.c **** //	VXISI2CWrite(0x88,0x00);
1995:VS4210/monitor.c **** //	VXISI2CWrite(0x89,0x00);
1996:VS4210/monitor.c **** 	
1997:VS4210/monitor.c **** 	VXISI2CWrite(0x8D,0x17);
1998:VS4210/monitor.c **** 	
1999:VS4210/monitor.c **** //	VXISI2CWrite(0x9A,0x80);
2000:VS4210/monitor.c **** 	
2001:VS4210/monitor.c **** 	
2002:VS4210/monitor.c **** //	VXISI2CWrite(0xB8,0x80);
2003:VS4210/monitor.c **** 	/*
2004:VS4210/monitor.c **** 	VXISI2CWrite(0xBA,0x01);
2005:VS4210/monitor.c **** 	
2006:VS4210/monitor.c **** 	VXISI2CWrite(0xBE,0x2C);
2007:VS4210/monitor.c **** 	
2008:VS4210/monitor.c **** 	VXISI2CWrite(0xD7,0x0F);
2009:VS4210/monitor.c **** 	
2010:VS4210/monitor.c **** 	VXISI2CWrite(0xDE,0xB0);
2011:VS4210/monitor.c **** 	
2012:VS4210/monitor.c **** 	VXISI2CWrite(0xF0,0x30);
2013:VS4210/monitor.c **** 	
2014:VS4210/monitor.c **** 	VXISI2CWrite(0xFD,0x70);
2015:VS4210/monitor.c **** 	VXISI2CWrite(0xFE,0x18);
2016:VS4210/monitor.c **** 	VXISI2CWrite(0xFF,0x07);
2017:VS4210/monitor.c **** */
2018:VS4210/monitor.c **** 
2019:VS4210/monitor.c **** #endif
2020:VS4210/monitor.c **** }
 1647              		.loc 1 2020 0
 1648 0150 08BD     		pop	{r3, pc}
 1649              	.L120:
ARM GAS  /tmp/ccZa3c9M.s 			page 66


 1650 0152 00BF     		.align	2
 1651              	.L119:
 1652 0154 00000000 		.word	.LC22
 1653              		.cfi_endproc
 1654              	.LFE93:
 1656              		.section	.text.SET_HDMI_640_480P_PARA,"ax",%progbits
 1657              		.align	1
 1658              		.global	SET_HDMI_640_480P_PARA
 1659              		.syntax unified
 1660              		.thumb
 1661              		.thumb_func
 1662              		.fpu softvfp
 1664              	SET_HDMI_640_480P_PARA:
 1665              	.LFB94:
2021:VS4210/monitor.c **** 
2022:VS4210/monitor.c **** void SET_HDMI_640_480P_PARA(void)
2023:VS4210/monitor.c **** {
 1666              		.loc 1 2023 0
 1667              		.cfi_startproc
 1668              		@ args = 0, pretend = 0, frame = 0
 1669              		@ frame_needed = 0, uses_anonymous_args = 0
 1670 0000 08B5     		push	{r3, lr}
 1671              	.LCFI17:
 1672              		.cfi_def_cfa_offset 8
 1673              		.cfi_offset 3, -8
 1674              		.cfi_offset 14, -4
2024:VS4210/monitor.c **** 	Printf("\r\nLoading HDMI 640X480P Embedded Sync para.... ");
 1675              		.loc 1 2024 0
 1676 0002 FE48     		ldr	r0, .L123
 1677 0004 FFF7FEFF 		bl	Printf
 1678              	.LVL140:
2025:VS4210/monitor.c **** 	VXISI2CWrite(0x01,0x00);
 1679              		.loc 1 2025 0
 1680 0008 0021     		movs	r1, #0
 1681 000a 0120     		movs	r0, #1
 1682 000c FFF7FEFF 		bl	VXISI2CWrite
 1683              	.LVL141:
2026:VS4210/monitor.c **** 	VXISI2CWrite(0x02,0x00);
 1684              		.loc 1 2026 0
 1685 0010 0021     		movs	r1, #0
 1686 0012 0220     		movs	r0, #2
 1687 0014 FFF7FEFF 		bl	VXISI2CWrite
 1688              	.LVL142:
2027:VS4210/monitor.c **** 	VXISI2CWrite(0x03,0x75);
 1689              		.loc 1 2027 0
 1690 0018 7521     		movs	r1, #117
 1691 001a 0320     		movs	r0, #3
 1692 001c FFF7FEFF 		bl	VXISI2CWrite
 1693              	.LVL143:
2028:VS4210/monitor.c **** 	VXISI2CWrite(0x04,0x18);
 1694              		.loc 1 2028 0
 1695 0020 1821     		movs	r1, #24
 1696 0022 0420     		movs	r0, #4
 1697 0024 FFF7FEFF 		bl	VXISI2CWrite
 1698              	.LVL144:
2029:VS4210/monitor.c **** 	VXISI2CWrite(0x05,0x80);
 1699              		.loc 1 2029 0
ARM GAS  /tmp/ccZa3c9M.s 			page 67


 1700 0028 8021     		movs	r1, #128
 1701 002a 0520     		movs	r0, #5
 1702 002c FFF7FEFF 		bl	VXISI2CWrite
 1703              	.LVL145:
2030:VS4210/monitor.c **** 	VXISI2CWrite(0x06,0x20);
 1704              		.loc 1 2030 0
 1705 0030 2021     		movs	r1, #32
 1706 0032 0620     		movs	r0, #6
 1707 0034 FFF7FEFF 		bl	VXISI2CWrite
 1708              	.LVL146:
2031:VS4210/monitor.c **** 	VXISI2CWrite(0x07,0x08);
 1709              		.loc 1 2031 0
 1710 0038 0821     		movs	r1, #8
 1711 003a 0720     		movs	r0, #7
 1712 003c FFF7FEFF 		bl	VXISI2CWrite
 1713              	.LVL147:
2032:VS4210/monitor.c **** 	VXISI2CWrite(0x08,0x40);
 1714              		.loc 1 2032 0
 1715 0040 4021     		movs	r1, #64
 1716 0042 0820     		movs	r0, #8
 1717 0044 FFF7FEFF 		bl	VXISI2CWrite
 1718              	.LVL148:
2033:VS4210/monitor.c **** 	VXISI2CWrite(0x09,0x0A);
 1719              		.loc 1 2033 0
 1720 0048 0A21     		movs	r1, #10
 1721 004a 0920     		movs	r0, #9
 1722 004c FFF7FEFF 		bl	VXISI2CWrite
 1723              	.LVL149:
2034:VS4210/monitor.c **** 	VXISI2CWrite(0x0A,0x40);
 1724              		.loc 1 2034 0
 1725 0050 4021     		movs	r1, #64
 1726 0052 0A20     		movs	r0, #10
 1727 0054 FFF7FEFF 		bl	VXISI2CWrite
 1728              	.LVL150:
2035:VS4210/monitor.c **** 	VXISI2CWrite(0x0B,0x03);
 1729              		.loc 1 2035 0
 1730 0058 0321     		movs	r1, #3
 1731 005a 0B20     		movs	r0, #11
 1732 005c FFF7FEFF 		bl	VXISI2CWrite
 1733              	.LVL151:
2036:VS4210/monitor.c **** 	VXISI2CWrite(0x0C,0x00);
 1734              		.loc 1 2036 0
 1735 0060 0021     		movs	r1, #0
 1736 0062 0C20     		movs	r0, #12
 1737 0064 FFF7FEFF 		bl	VXISI2CWrite
 1738              	.LVL152:
2037:VS4210/monitor.c **** 	VXISI2CWrite(0x0D,0x20);
 1739              		.loc 1 2037 0
 1740 0068 2021     		movs	r1, #32
 1741 006a 0D20     		movs	r0, #13
 1742 006c FFF7FEFF 		bl	VXISI2CWrite
 1743              	.LVL153:
2038:VS4210/monitor.c **** 	VXISI2CWrite(0x0E,0x10);
 1744              		.loc 1 2038 0
 1745 0070 1021     		movs	r1, #16
 1746 0072 0E20     		movs	r0, #14
 1747 0074 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccZa3c9M.s 			page 68


 1748              	.LVL154:
2039:VS4210/monitor.c **** 	VXISI2CWrite(0x0F,0x00);
 1749              		.loc 1 2039 0
 1750 0078 0021     		movs	r1, #0
 1751 007a 0F20     		movs	r0, #15
 1752 007c FFF7FEFF 		bl	VXISI2CWrite
 1753              	.LVL155:
2040:VS4210/monitor.c **** 	VXISI2CWrite(0x10,0x80);
 1754              		.loc 1 2040 0
 1755 0080 8021     		movs	r1, #128
 1756 0082 1020     		movs	r0, #16
 1757 0084 FFF7FEFF 		bl	VXISI2CWrite
 1758              	.LVL156:
2041:VS4210/monitor.c **** 	VXISI2CWrite(0x11,0x82);
 1759              		.loc 1 2041 0
 1760 0088 8221     		movs	r1, #130
 1761 008a 1120     		movs	r0, #17
 1762 008c FFF7FEFF 		bl	VXISI2CWrite
 1763              	.LVL157:
2042:VS4210/monitor.c **** 	VXISI2CWrite(0x12,0x42);
 1764              		.loc 1 2042 0
 1765 0090 4221     		movs	r1, #66
 1766 0092 1220     		movs	r0, #18
 1767 0094 FFF7FEFF 		bl	VXISI2CWrite
 1768              	.LVL158:
2043:VS4210/monitor.c **** 	VXISI2CWrite(0x13,0x81);
 1769              		.loc 1 2043 0
 1770 0098 8121     		movs	r1, #129
 1771 009a 1320     		movs	r0, #19
 1772 009c FFF7FEFF 		bl	VXISI2CWrite
 1773              	.LVL159:
2044:VS4210/monitor.c **** 	VXISI2CWrite(0x14,0xC6);
 1774              		.loc 1 2044 0
 1775 00a0 C621     		movs	r1, #198
 1776 00a2 1420     		movs	r0, #20
 1777 00a4 FFF7FEFF 		bl	VXISI2CWrite
 1778              	.LVL160:
2045:VS4210/monitor.c **** 	VXISI2CWrite(0x15,0x77);
 1779              		.loc 1 2045 0
 1780 00a8 7721     		movs	r1, #119
 1781 00aa 1520     		movs	r0, #21
 1782 00ac FFF7FEFF 		bl	VXISI2CWrite
 1783              	.LVL161:
2046:VS4210/monitor.c **** 	VXISI2CWrite(0x16,0xFE);
 1784              		.loc 1 2046 0
 1785 00b0 FE21     		movs	r1, #254
 1786 00b2 1620     		movs	r0, #22
 1787 00b4 FFF7FEFF 		bl	VXISI2CWrite
 1788              	.LVL162:
2047:VS4210/monitor.c **** 	VXISI2CWrite(0x17,0xFA);
 1789              		.loc 1 2047 0
 1790 00b8 FA21     		movs	r1, #250
 1791 00ba 1720     		movs	r0, #23
 1792 00bc FFF7FEFF 		bl	VXISI2CWrite
 1793              	.LVL163:
2048:VS4210/monitor.c **** 	VXISI2CWrite(0x18,0xC0);
 1794              		.loc 1 2048 0
ARM GAS  /tmp/ccZa3c9M.s 			page 69


 1795 00c0 C021     		movs	r1, #192
 1796 00c2 1820     		movs	r0, #24
 1797 00c4 FFF7FEFF 		bl	VXISI2CWrite
 1798              	.LVL164:
2049:VS4210/monitor.c **** 	VXISI2CWrite(0x19,0x00);
 1799              		.loc 1 2049 0
 1800 00c8 0021     		movs	r1, #0
 1801 00ca 1920     		movs	r0, #25
 1802 00cc FFF7FEFF 		bl	VXISI2CWrite
 1803              	.LVL165:
2050:VS4210/monitor.c **** 	VXISI2CWrite(0x1A,0x20);
 1804              		.loc 1 2050 0
 1805 00d0 2021     		movs	r1, #32
 1806 00d2 1A20     		movs	r0, #26
 1807 00d4 FFF7FEFF 		bl	VXISI2CWrite
 1808              	.LVL166:
2051:VS4210/monitor.c **** 	VXISI2CWrite(0x1B,0x30);
 1809              		.loc 1 2051 0
 1810 00d8 3021     		movs	r1, #48
 1811 00da 1B20     		movs	r0, #27
 1812 00dc FFF7FEFF 		bl	VXISI2CWrite
 1813              	.LVL167:
2052:VS4210/monitor.c **** 	VXISI2CWrite(0x1C,0x00);
 1814              		.loc 1 2052 0
 1815 00e0 0021     		movs	r1, #0
 1816 00e2 1C20     		movs	r0, #28
 1817 00e4 FFF7FEFF 		bl	VXISI2CWrite
 1818              	.LVL168:
2053:VS4210/monitor.c **** 	VXISI2CWrite(0x1D,0x00);
 1819              		.loc 1 2053 0
 1820 00e8 0021     		movs	r1, #0
 1821 00ea 1D20     		movs	r0, #29
 1822 00ec FFF7FEFF 		bl	VXISI2CWrite
 1823              	.LVL169:
2054:VS4210/monitor.c **** 	VXISI2CWrite(0x1E,0x20);
 1824              		.loc 1 2054 0
 1825 00f0 2021     		movs	r1, #32
 1826 00f2 1E20     		movs	r0, #30
 1827 00f4 FFF7FEFF 		bl	VXISI2CWrite
 1828              	.LVL170:
2055:VS4210/monitor.c **** 	VXISI2CWrite(0x1F,0x52);
 1829              		.loc 1 2055 0
 1830 00f8 5221     		movs	r1, #82
 1831 00fa 1F20     		movs	r0, #31
 1832 00fc FFF7FEFF 		bl	VXISI2CWrite
 1833              	.LVL171:
2056:VS4210/monitor.c **** 	VXISI2CWrite(0x20,0xA0);
 1834              		.loc 1 2056 0
 1835 0100 A021     		movs	r1, #160
 1836 0102 2020     		movs	r0, #32
 1837 0104 FFF7FEFF 		bl	VXISI2CWrite
 1838              	.LVL172:
2057:VS4210/monitor.c **** 	VXISI2CWrite(0x21,0xE5);
 1839              		.loc 1 2057 0
 1840 0108 E521     		movs	r1, #229
 1841 010a 2120     		movs	r0, #33
 1842 010c FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccZa3c9M.s 			page 70


 1843              	.LVL173:
2058:VS4210/monitor.c **** 	VXISI2CWrite(0x22,0x32);
 1844              		.loc 1 2058 0
 1845 0110 3221     		movs	r1, #50
 1846 0112 2220     		movs	r0, #34
 1847 0114 FFF7FEFF 		bl	VXISI2CWrite
 1848              	.LVL174:
2059:VS4210/monitor.c **** 	VXISI2CWrite(0x23,0x20);
 1849              		.loc 1 2059 0
 1850 0118 2021     		movs	r1, #32
 1851 011a 2320     		movs	r0, #35
 1852 011c FFF7FEFF 		bl	VXISI2CWrite
 1853              	.LVL175:
2060:VS4210/monitor.c **** 	VXISI2CWrite(0x24,0x80);
 1854              		.loc 1 2060 0
 1855 0120 8021     		movs	r1, #128
 1856 0122 2420     		movs	r0, #36
 1857 0124 FFF7FEFF 		bl	VXISI2CWrite
 1858              	.LVL176:
2061:VS4210/monitor.c **** 	VXISI2CWrite(0x25,0x21);
 1859              		.loc 1 2061 0
 1860 0128 2121     		movs	r1, #33
 1861 012a 2520     		movs	r0, #37
 1862 012c FFF7FEFF 		bl	VXISI2CWrite
 1863              	.LVL177:
2062:VS4210/monitor.c **** 	VXISI2CWrite(0x26,0x0D);
 1864              		.loc 1 2062 0
 1865 0130 0D21     		movs	r1, #13
 1866 0132 2620     		movs	r0, #38
 1867 0134 FFF7FEFF 		bl	VXISI2CWrite
 1868              	.LVL178:
2063:VS4210/monitor.c **** 	VXISI2CWrite(0x27,0xE0);
 1869              		.loc 1 2063 0
 1870 0138 E021     		movs	r1, #224
 1871 013a 2720     		movs	r0, #39
 1872 013c FFF7FEFF 		bl	VXISI2CWrite
 1873              	.LVL179:
2064:VS4210/monitor.c **** 	VXISI2CWrite(0x28,0xF0);
 1874              		.loc 1 2064 0
 1875 0140 F021     		movs	r1, #240
 1876 0142 2820     		movs	r0, #40
 1877 0144 FFF7FEFF 		bl	VXISI2CWrite
 1878              	.LVL180:
2065:VS4210/monitor.c **** 	VXISI2CWrite(0x29,0x00);
 1879              		.loc 1 2065 0
 1880 0148 0021     		movs	r1, #0
 1881 014a 2920     		movs	r0, #41
 1882 014c FFF7FEFF 		bl	VXISI2CWrite
 1883              	.LVL181:
2066:VS4210/monitor.c **** 	VXISI2CWrite(0x2A,0x00);
 1884              		.loc 1 2066 0
 1885 0150 0021     		movs	r1, #0
 1886 0152 2A20     		movs	r0, #42
 1887 0154 FFF7FEFF 		bl	VXISI2CWrite
 1888              	.LVL182:
2067:VS4210/monitor.c **** 	VXISI2CWrite(0x2B,0x11);
 1889              		.loc 1 2067 0
ARM GAS  /tmp/ccZa3c9M.s 			page 71


 1890 0158 1121     		movs	r1, #17
 1891 015a 2B20     		movs	r0, #43
 1892 015c FFF7FEFF 		bl	VXISI2CWrite
 1893              	.LVL183:
2068:VS4210/monitor.c **** 	VXISI2CWrite(0x2C,0x00);
 1894              		.loc 1 2068 0
 1895 0160 0021     		movs	r1, #0
 1896 0162 2C20     		movs	r0, #44
 1897 0164 FFF7FEFF 		bl	VXISI2CWrite
 1898              	.LVL184:
2069:VS4210/monitor.c **** 	VXISI2CWrite(0x2D,0x00);
 1899              		.loc 1 2069 0
 1900 0168 0021     		movs	r1, #0
 1901 016a 2D20     		movs	r0, #45
 1902 016c FFF7FEFF 		bl	VXISI2CWrite
 1903              	.LVL185:
2070:VS4210/monitor.c **** 	VXISI2CWrite(0x2E,0x12);
 1904              		.loc 1 2070 0
 1905 0170 1221     		movs	r1, #18
 1906 0172 2E20     		movs	r0, #46
 1907 0174 FFF7FEFF 		bl	VXISI2CWrite
 1908              	.LVL186:
2071:VS4210/monitor.c **** 	VXISI2CWrite(0x2F,0x80);
 1909              		.loc 1 2071 0
 1910 0178 8021     		movs	r1, #128
 1911 017a 2F20     		movs	r0, #47
 1912 017c FFF7FEFF 		bl	VXISI2CWrite
 1913              	.LVL187:
2072:VS4210/monitor.c **** 	VXISI2CWrite(0x30,0xE0);
 1914              		.loc 1 2072 0
 1915 0180 E021     		movs	r1, #224
 1916 0182 3020     		movs	r0, #48
 1917 0184 FFF7FEFF 		bl	VXISI2CWrite
 1918              	.LVL188:
2073:VS4210/monitor.c **** 	VXISI2CWrite(0x31,0x80);
 1919              		.loc 1 2073 0
 1920 0188 8021     		movs	r1, #128
 1921 018a 3120     		movs	r0, #49
 1922 018c FFF7FEFF 		bl	VXISI2CWrite
 1923              	.LVL189:
2074:VS4210/monitor.c **** 	VXISI2CWrite(0x32,0x80);
 1924              		.loc 1 2074 0
 1925 0190 8021     		movs	r1, #128
 1926 0192 3220     		movs	r0, #50
 1927 0194 FFF7FEFF 		bl	VXISI2CWrite
 1928              	.LVL190:
2075:VS4210/monitor.c **** 	VXISI2CWrite(0x33,0x80);
 1929              		.loc 1 2075 0
 1930 0198 8021     		movs	r1, #128
 1931 019a 3320     		movs	r0, #51
 1932 019c FFF7FEFF 		bl	VXISI2CWrite
 1933              	.LVL191:
2076:VS4210/monitor.c **** 	VXISI2CWrite(0x34,0xA0);
 1934              		.loc 1 2076 0
 1935 01a0 A021     		movs	r1, #160
 1936 01a2 3420     		movs	r0, #52
 1937 01a4 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccZa3c9M.s 			page 72


 1938              	.LVL192:
2077:VS4210/monitor.c **** 	VXISI2CWrite(0x35,0x18);
 1939              		.loc 1 2077 0
 1940 01a8 1821     		movs	r1, #24
 1941 01aa 3520     		movs	r0, #53
 1942 01ac FFF7FEFF 		bl	VXISI2CWrite
 1943              	.LVL193:
2078:VS4210/monitor.c **** 	VXISI2CWrite(0x36,0x46);
 1944              		.loc 1 2078 0
 1945 01b0 4621     		movs	r1, #70
 1946 01b2 3620     		movs	r0, #54
 1947 01b4 FFF7FEFF 		bl	VXISI2CWrite
 1948              	.LVL194:
2079:VS4210/monitor.c **** 	VXISI2CWrite(0x37,0x64);
 1949              		.loc 1 2079 0
 1950 01b8 6421     		movs	r1, #100
 1951 01ba 3720     		movs	r0, #55
 1952 01bc FFF7FEFF 		bl	VXISI2CWrite
 1953              	.LVL195:
2080:VS4210/monitor.c **** 	VXISI2CWrite(0x38,0x00);
 1954              		.loc 1 2080 0
 1955 01c0 0021     		movs	r1, #0
 1956 01c2 3820     		movs	r0, #56
 1957 01c4 FFF7FEFF 		bl	VXISI2CWrite
 1958              	.LVL196:
2081:VS4210/monitor.c **** 	VXISI2CWrite(0x39,0xFF);
 1959              		.loc 1 2081 0
 1960 01c8 FF21     		movs	r1, #255
 1961 01ca 3920     		movs	r0, #57
 1962 01cc FFF7FEFF 		bl	VXISI2CWrite
 1963              	.LVL197:
2082:VS4210/monitor.c **** 	VXISI2CWrite(0x3A,0x2C);
 1964              		.loc 1 2082 0
 1965 01d0 2C21     		movs	r1, #44
 1966 01d2 3A20     		movs	r0, #58
 1967 01d4 FFF7FEFF 		bl	VXISI2CWrite
 1968              	.LVL198:
2083:VS4210/monitor.c **** 	VXISI2CWrite(0x3B,0x80);
 1969              		.loc 1 2083 0
 1970 01d8 8021     		movs	r1, #128
 1971 01da 3B20     		movs	r0, #59
 1972 01dc FFF7FEFF 		bl	VXISI2CWrite
 1973              	.LVL199:
2084:VS4210/monitor.c **** 	VXISI2CWrite(0x3C,0x80);
 1974              		.loc 1 2084 0
 1975 01e0 8021     		movs	r1, #128
 1976 01e2 3C20     		movs	r0, #60
 1977 01e4 FFF7FEFF 		bl	VXISI2CWrite
 1978              	.LVL200:
2085:VS4210/monitor.c **** 	VXISI2CWrite(0x3D,0x80);
 1979              		.loc 1 2085 0
 1980 01e8 8021     		movs	r1, #128
 1981 01ea 3D20     		movs	r0, #61
 1982 01ec FFF7FEFF 		bl	VXISI2CWrite
 1983              	.LVL201:
2086:VS4210/monitor.c **** 	VXISI2CWrite(0x3E,0x80);
 1984              		.loc 1 2086 0
ARM GAS  /tmp/ccZa3c9M.s 			page 73


 1985 01f0 8021     		movs	r1, #128
 1986 01f2 3E20     		movs	r0, #62
 1987 01f4 FFF7FEFF 		bl	VXISI2CWrite
 1988              	.LVL202:
2087:VS4210/monitor.c **** 	VXISI2CWrite(0x3F,0x80);
 1989              		.loc 1 2087 0
 1990 01f8 8021     		movs	r1, #128
 1991 01fa 3F20     		movs	r0, #63
 1992 01fc FFF7FEFF 		bl	VXISI2CWrite
 1993              	.LVL203:
2088:VS4210/monitor.c **** 	//VXISI2CWrite(0xVXISI2CWrite(0x80
2089:VS4210/monitor.c **** 	VXISI2CWrite(0x41,0x60);
 1994              		.loc 1 2089 0
 1995 0200 6021     		movs	r1, #96
 1996 0202 4120     		movs	r0, #65
 1997 0204 FFF7FEFF 		bl	VXISI2CWrite
 1998              	.LVL204:
2090:VS4210/monitor.c **** 	VXISI2CWrite(0x42,0x5F);
 1999              		.loc 1 2090 0
 2000 0208 5F21     		movs	r1, #95
 2001 020a 4220     		movs	r0, #66
 2002 020c FFF7FEFF 		bl	VXISI2CWrite
 2003              	.LVL205:
2091:VS4210/monitor.c **** 	VXISI2CWrite(0x43,0x37);
 2004              		.loc 1 2091 0
 2005 0210 3721     		movs	r1, #55
 2006 0212 4320     		movs	r0, #67
 2007 0214 FFF7FEFF 		bl	VXISI2CWrite
 2008              	.LVL206:
2092:VS4210/monitor.c **** 	VXISI2CWrite(0x44,0x14);
 2009              		.loc 1 2092 0
 2010 0218 1421     		movs	r1, #20
 2011 021a 4420     		movs	r0, #68
 2012 021c FFF7FEFF 		bl	VXISI2CWrite
 2013              	.LVL207:
2093:VS4210/monitor.c **** 	VXISI2CWrite(0x45,0x05);
 2014              		.loc 1 2093 0
 2015 0220 0521     		movs	r1, #5
 2016 0222 4520     		movs	r0, #69
 2017 0224 FFF7FEFF 		bl	VXISI2CWrite
 2018              	.LVL208:
2094:VS4210/monitor.c **** 	VXISI2CWrite(0x46,0x00);
 2019              		.loc 1 2094 0
 2020 0228 0021     		movs	r1, #0
 2021 022a 4620     		movs	r0, #70
 2022 022c FFF7FEFF 		bl	VXISI2CWrite
 2023              	.LVL209:
2095:VS4210/monitor.c **** 	VXISI2CWrite(0x47,0x00);
 2024              		.loc 1 2095 0
 2025 0230 0021     		movs	r1, #0
 2026 0232 4720     		movs	r0, #71
 2027 0234 FFF7FEFF 		bl	VXISI2CWrite
 2028              	.LVL210:
2096:VS4210/monitor.c **** 	VXISI2CWrite(0x48,0x00);
 2029              		.loc 1 2096 0
 2030 0238 0021     		movs	r1, #0
 2031 023a 4820     		movs	r0, #72
ARM GAS  /tmp/ccZa3c9M.s 			page 74


 2032 023c FFF7FEFF 		bl	VXISI2CWrite
 2033              	.LVL211:
2097:VS4210/monitor.c **** 	VXISI2CWrite(0x49,0x00);
 2034              		.loc 1 2097 0
 2035 0240 0021     		movs	r1, #0
 2036 0242 4920     		movs	r0, #73
 2037 0244 FFF7FEFF 		bl	VXISI2CWrite
 2038              	.LVL212:
2098:VS4210/monitor.c **** 	VXISI2CWrite(0x4B,0x20); 
 2039              		.loc 1 2098 0
 2040 0248 2021     		movs	r1, #32
 2041 024a 4B20     		movs	r0, #75
 2042 024c FFF7FEFF 		bl	VXISI2CWrite
 2043              	.LVL213:
2099:VS4210/monitor.c **** 	VXISI2CWrite(0x4C,0x00); 
 2044              		.loc 1 2099 0
 2045 0250 0021     		movs	r1, #0
 2046 0252 4C20     		movs	r0, #76
 2047 0254 FFF7FEFF 		bl	VXISI2CWrite
 2048              	.LVL214:
2100:VS4210/monitor.c **** 	VXISI2CWrite(0x4D,0x00); 
 2049              		.loc 1 2100 0
 2050 0258 0021     		movs	r1, #0
 2051 025a 4D20     		movs	r0, #77
 2052 025c FFF7FEFF 		bl	VXISI2CWrite
 2053              	.LVL215:
2101:VS4210/monitor.c **** 	VXISI2CWrite(0x4E,0x00); 
 2054              		.loc 1 2101 0
 2055 0260 0021     		movs	r1, #0
 2056 0262 4E20     		movs	r0, #78
 2057 0264 FFF7FEFF 		bl	VXISI2CWrite
 2058              	.LVL216:
2102:VS4210/monitor.c **** 	VXISI2CWrite(0x4F,0x7F); 
 2059              		.loc 1 2102 0
 2060 0268 7F21     		movs	r1, #127
 2061 026a 4F20     		movs	r0, #79
 2062 026c FFF7FEFF 		bl	VXISI2CWrite
 2063              	.LVL217:
2103:VS4210/monitor.c **** 	VXISI2CWrite(0x50,0x20); 
 2064              		.loc 1 2103 0
 2065 0270 2021     		movs	r1, #32
 2066 0272 5020     		movs	r0, #80
 2067 0274 FFF7FEFF 		bl	VXISI2CWrite
 2068              	.LVL218:
2104:VS4210/monitor.c **** 	VXISI2CWrite(0x51,0x00); 
 2069              		.loc 1 2104 0
 2070 0278 0021     		movs	r1, #0
 2071 027a 5120     		movs	r0, #81
 2072 027c FFF7FEFF 		bl	VXISI2CWrite
 2073              	.LVL219:
2105:VS4210/monitor.c **** 	VXISI2CWrite(0x52,0x00); 
 2074              		.loc 1 2105 0
 2075 0280 0021     		movs	r1, #0
 2076 0282 5220     		movs	r0, #82
 2077 0284 FFF7FEFF 		bl	VXISI2CWrite
 2078              	.LVL220:
2106:VS4210/monitor.c **** 	VXISI2CWrite(0x53,0x06); 
ARM GAS  /tmp/ccZa3c9M.s 			page 75


 2079              		.loc 1 2106 0
 2080 0288 0621     		movs	r1, #6
 2081 028a 5320     		movs	r0, #83
 2082 028c FFF7FEFF 		bl	VXISI2CWrite
 2083              	.LVL221:
2107:VS4210/monitor.c **** 	VXISI2CWrite(0x54,0x00);
 2084              		.loc 1 2107 0
 2085 0290 0021     		movs	r1, #0
 2086 0292 5420     		movs	r0, #84
 2087 0294 FFF7FEFF 		bl	VXISI2CWrite
 2088              	.LVL222:
2108:VS4210/monitor.c **** 	VXISI2CWrite(0x55,0xB4);
 2089              		.loc 1 2108 0
 2090 0298 B421     		movs	r1, #180
 2091 029a 5520     		movs	r0, #85
 2092 029c FFF7FEFF 		bl	VXISI2CWrite
 2093              	.LVL223:
2109:VS4210/monitor.c **** 	VXISI2CWrite(0x56,0x3D);
 2094              		.loc 1 2109 0
 2095 02a0 3D21     		movs	r1, #61
 2096 02a2 5620     		movs	r0, #86
 2097 02a4 FFF7FEFF 		bl	VXISI2CWrite
 2098              	.LVL224:
2110:VS4210/monitor.c **** 	VXISI2CWrite(0x57,0x04);
 2099              		.loc 1 2110 0
 2100 02a8 0421     		movs	r1, #4
 2101 02aa 5720     		movs	r0, #87
 2102 02ac FFF7FEFF 		bl	VXISI2CWrite
 2103              	.LVL225:
2111:VS4210/monitor.c **** 	VXISI2CWrite(0x58,0x00);
 2104              		.loc 1 2111 0
 2105 02b0 0021     		movs	r1, #0
 2106 02b2 5820     		movs	r0, #88
 2107 02b4 FFF7FEFF 		bl	VXISI2CWrite
 2108              	.LVL226:
2112:VS4210/monitor.c **** 	VXISI2CWrite(0x59,0x08);
 2109              		.loc 1 2112 0
 2110 02b8 0821     		movs	r1, #8
 2111 02ba 5920     		movs	r0, #89
 2112 02bc FFF7FEFF 		bl	VXISI2CWrite
 2113              	.LVL227:
2113:VS4210/monitor.c **** 	VXISI2CWrite(0x5A,0x10);
 2114              		.loc 1 2113 0
 2115 02c0 1021     		movs	r1, #16
 2116 02c2 5A20     		movs	r0, #90
 2117 02c4 FFF7FEFF 		bl	VXISI2CWrite
 2118              	.LVL228:
2114:VS4210/monitor.c **** 	VXISI2CWrite(0x5B,0x00);
 2119              		.loc 1 2114 0
 2120 02c8 0021     		movs	r1, #0
 2121 02ca 5B20     		movs	r0, #91
 2122 02cc FFF7FEFF 		bl	VXISI2CWrite
 2123              	.LVL229:
2115:VS4210/monitor.c **** 	VXISI2CWrite(0x5C,0x68);
 2124              		.loc 1 2115 0
 2125 02d0 6821     		movs	r1, #104
 2126 02d2 5C20     		movs	r0, #92
ARM GAS  /tmp/ccZa3c9M.s 			page 76


 2127 02d4 FFF7FEFF 		bl	VXISI2CWrite
 2128              	.LVL230:
2116:VS4210/monitor.c **** 	VXISI2CWrite(0x5D,0x40);
 2129              		.loc 1 2116 0
 2130 02d8 4021     		movs	r1, #64
 2131 02da 5D20     		movs	r0, #93
 2132 02dc FFF7FEFF 		bl	VXISI2CWrite
 2133              	.LVL231:
2117:VS4210/monitor.c **** 	VXISI2CWrite(0x5E,0x0A);
 2134              		.loc 1 2117 0
 2135 02e0 0A21     		movs	r1, #10
 2136 02e2 5E20     		movs	r0, #94
 2137 02e4 FFF7FEFF 		bl	VXISI2CWrite
 2138              	.LVL232:
2118:VS4210/monitor.c **** 	VXISI2CWrite(0x5F,0x00);
 2139              		.loc 1 2118 0
 2140 02e8 0021     		movs	r1, #0
 2141 02ea 5F20     		movs	r0, #95
 2142 02ec FFF7FEFF 		bl	VXISI2CWrite
 2143              	.LVL233:
2119:VS4210/monitor.c **** 	VXISI2CWrite(0x60,0xB4);
 2144              		.loc 1 2119 0
 2145 02f0 B421     		movs	r1, #180
 2146 02f2 6020     		movs	r0, #96
 2147 02f4 FFF7FEFF 		bl	VXISI2CWrite
 2148              	.LVL234:
2120:VS4210/monitor.c **** 	VXISI2CWrite(0x61,0x51);
 2149              		.loc 1 2120 0
 2150 02f8 5121     		movs	r1, #81
 2151 02fa 6120     		movs	r0, #97
 2152 02fc FFF7FEFF 		bl	VXISI2CWrite
 2153              	.LVL235:
2121:VS4210/monitor.c **** 	VXISI2CWrite(0x62,0x33);
 2154              		.loc 1 2121 0
 2155 0300 3321     		movs	r1, #51
 2156 0302 6220     		movs	r0, #98
 2157 0304 FFF7FEFF 		bl	VXISI2CWrite
 2158              	.LVL236:
2122:VS4210/monitor.c **** 	VXISI2CWrite(0x63,0x01);
 2159              		.loc 1 2122 0
 2160 0308 0121     		movs	r1, #1
 2161 030a 6320     		movs	r0, #99
 2162 030c FFF7FEFF 		bl	VXISI2CWrite
 2163              	.LVL237:
2123:VS4210/monitor.c **** 	VXISI2CWrite(0x64,0xFF);
 2164              		.loc 1 2123 0
 2165 0310 FF21     		movs	r1, #255
 2166 0312 6420     		movs	r0, #100
 2167 0314 FFF7FEFF 		bl	VXISI2CWrite
 2168              	.LVL238:
2124:VS4210/monitor.c **** 	VXISI2CWrite(0x65,0x01);
 2169              		.loc 1 2124 0
 2170 0318 0121     		movs	r1, #1
 2171 031a 6520     		movs	r0, #101
 2172 031c FFF7FEFF 		bl	VXISI2CWrite
 2173              	.LVL239:
2125:VS4210/monitor.c **** 	VXISI2CWrite(0x66,0xFF);
ARM GAS  /tmp/ccZa3c9M.s 			page 77


 2174              		.loc 1 2125 0
 2175 0320 FF21     		movs	r1, #255
 2176 0322 6620     		movs	r0, #102
 2177 0324 FFF7FEFF 		bl	VXISI2CWrite
 2178              	.LVL240:
2126:VS4210/monitor.c **** 	VXISI2CWrite(0x67,0x89);
 2179              		.loc 1 2126 0
 2180 0328 8921     		movs	r1, #137
 2181 032a 6720     		movs	r0, #103
 2182 032c FFF7FEFF 		bl	VXISI2CWrite
 2183              	.LVL241:
2127:VS4210/monitor.c **** 	VXISI2CWrite(0x68,0xAB);
 2184              		.loc 1 2127 0
 2185 0330 AB21     		movs	r1, #171
 2186 0332 6820     		movs	r0, #104
 2187 0334 FFF7FEFF 		bl	VXISI2CWrite
 2188              	.LVL242:
2128:VS4210/monitor.c **** 	VXISI2CWrite(0x69,0x88);
 2189              		.loc 1 2128 0
 2190 0338 8821     		movs	r1, #136
 2191 033a 6920     		movs	r0, #105
 2192 033c FFF7FEFF 		bl	VXISI2CWrite
 2193              	.LVL243:
2129:VS4210/monitor.c **** 	VXISI2CWrite(0x6A,0x6E);
 2194              		.loc 1 2129 0
 2195 0340 6E21     		movs	r1, #110
 2196 0342 6A20     		movs	r0, #106
 2197 0344 FFF7FEFF 		bl	VXISI2CWrite
 2198              	.LVL244:
2130:VS4210/monitor.c **** 	VXISI2CWrite(0x6B,0x6E);
 2199              		.loc 1 2130 0
 2200 0348 6E21     		movs	r1, #110
 2201 034a 6B20     		movs	r0, #107
 2202 034c FFF7FEFF 		bl	VXISI2CWrite
 2203              	.LVL245:
2131:VS4210/monitor.c **** 	VXISI2CWrite(0x6C,0x6E);
 2204              		.loc 1 2131 0
 2205 0350 6E21     		movs	r1, #110
 2206 0352 6C20     		movs	r0, #108
 2207 0354 FFF7FEFF 		bl	VXISI2CWrite
 2208              	.LVL246:
2132:VS4210/monitor.c **** 	VXISI2CWrite(0x6D,0x00);
 2209              		.loc 1 2132 0
 2210 0358 0021     		movs	r1, #0
 2211 035a 6D20     		movs	r0, #109
 2212 035c FFF7FEFF 		bl	VXISI2CWrite
 2213              	.LVL247:
2133:VS4210/monitor.c **** 	VXISI2CWrite(0x6E,0x00);
 2214              		.loc 1 2133 0
 2215 0360 0021     		movs	r1, #0
 2216 0362 6E20     		movs	r0, #110
 2217 0364 FFF7FEFF 		bl	VXISI2CWrite
 2218              	.LVL248:
2134:VS4210/monitor.c **** 	VXISI2CWrite(0x6F,0x00);
 2219              		.loc 1 2134 0
 2220 0368 0021     		movs	r1, #0
 2221 036a 6F20     		movs	r0, #111
ARM GAS  /tmp/ccZa3c9M.s 			page 78


 2222 036c FFF7FEFF 		bl	VXISI2CWrite
 2223              	.LVL249:
2135:VS4210/monitor.c **** 	VXISI2CWrite(0x70,0x00);
 2224              		.loc 1 2135 0
 2225 0370 0021     		movs	r1, #0
 2226 0372 7020     		movs	r0, #112
 2227 0374 FFF7FEFF 		bl	VXISI2CWrite
 2228              	.LVL250:
2136:VS4210/monitor.c **** 	VXISI2CWrite(0x71,0x00);
 2229              		.loc 1 2136 0
 2230 0378 0021     		movs	r1, #0
 2231 037a 7120     		movs	r0, #113
 2232 037c FFF7FEFF 		bl	VXISI2CWrite
 2233              	.LVL251:
2137:VS4210/monitor.c **** 	VXISI2CWrite(0x72,0x00);
 2234              		.loc 1 2137 0
 2235 0380 0021     		movs	r1, #0
 2236 0382 7220     		movs	r0, #114
 2237 0384 FFF7FEFF 		bl	VXISI2CWrite
 2238              	.LVL252:
2138:VS4210/monitor.c **** 	VXISI2CWrite(0x73,0x00);
 2239              		.loc 1 2138 0
 2240 0388 0021     		movs	r1, #0
 2241 038a 7320     		movs	r0, #115
 2242 038c FFF7FEFF 		bl	VXISI2CWrite
 2243              	.LVL253:
2139:VS4210/monitor.c **** 	VXISI2CWrite(0x74,0x04);
 2244              		.loc 1 2139 0
 2245 0390 0421     		movs	r1, #4
 2246 0392 7420     		movs	r0, #116
 2247 0394 FFF7FEFF 		bl	VXISI2CWrite
 2248              	.LVL254:
2140:VS4210/monitor.c **** 	VXISI2CWrite(0x75,0xFF);
 2249              		.loc 1 2140 0
 2250 0398 FF21     		movs	r1, #255
 2251 039a 7520     		movs	r0, #117
 2252 039c FFF7FEFF 		bl	VXISI2CWrite
 2253              	.LVL255:
2141:VS4210/monitor.c **** 	VXISI2CWrite(0x76,0xFF);
 2254              		.loc 1 2141 0
 2255 03a0 FF21     		movs	r1, #255
 2256 03a2 7620     		movs	r0, #118
 2257 03a4 FFF7FEFF 		bl	VXISI2CWrite
 2258              	.LVL256:
2142:VS4210/monitor.c **** 	VXISI2CWrite(0x77,0xFF);
 2259              		.loc 1 2142 0
 2260 03a8 FF21     		movs	r1, #255
 2261 03aa 7720     		movs	r0, #119
 2262 03ac FFF7FEFF 		bl	VXISI2CWrite
 2263              	.LVL257:
2143:VS4210/monitor.c **** 	VXISI2CWrite(0x78,0xFF);
 2264              		.loc 1 2143 0
 2265 03b0 FF21     		movs	r1, #255
 2266 03b2 7820     		movs	r0, #120
 2267 03b4 FFF7FEFF 		bl	VXISI2CWrite
 2268              	.LVL258:
2144:VS4210/monitor.c **** 	VXISI2CWrite(0x79,0xFF);
ARM GAS  /tmp/ccZa3c9M.s 			page 79


 2269              		.loc 1 2144 0
 2270 03b8 FF21     		movs	r1, #255
 2271 03ba 7920     		movs	r0, #121
 2272 03bc FFF7FEFF 		bl	VXISI2CWrite
 2273              	.LVL259:
2145:VS4210/monitor.c **** 	VXISI2CWrite(0x7A,0xFF);
 2274              		.loc 1 2145 0
 2275 03c0 FF21     		movs	r1, #255
 2276 03c2 7A20     		movs	r0, #122
 2277 03c4 FFF7FEFF 		bl	VXISI2CWrite
 2278              	.LVL260:
2146:VS4210/monitor.c **** 	VXISI2CWrite(0x7B,0xFF);
 2279              		.loc 1 2146 0
 2280 03c8 FF21     		movs	r1, #255
 2281 03ca 7B20     		movs	r0, #123
 2282 03cc FFF7FEFF 		bl	VXISI2CWrite
 2283              	.LVL261:
2147:VS4210/monitor.c **** 	VXISI2CWrite(0x7C,0xFF);
 2284              		.loc 1 2147 0
 2285 03d0 FF21     		movs	r1, #255
 2286 03d2 7C20     		movs	r0, #124
 2287 03d4 FFF7FEFF 		bl	VXISI2CWrite
 2288              	.LVL262:
2148:VS4210/monitor.c **** 	VXISI2CWrite(0x7D,0xF0);
 2289              		.loc 1 2148 0
 2290 03d8 F021     		movs	r1, #240
 2291 03da 7D20     		movs	r0, #125
 2292 03dc FFF7FEFF 		bl	VXISI2CWrite
 2293              	.LVL263:
2149:VS4210/monitor.c **** 	VXISI2CWrite(0x7E,0x80);
 2294              		.loc 1 2149 0
 2295 03e0 8021     		movs	r1, #128
 2296 03e2 7E20     		movs	r0, #126
 2297 03e4 FFF7FEFF 		bl	VXISI2CWrite
 2298              	.LVL264:
2150:VS4210/monitor.c **** 	VXISI2CWrite(0x7F,0x00);
 2299              		.loc 1 2150 0
 2300 03e8 0021     		movs	r1, #0
 2301 03ea 7F20     		movs	r0, #127
 2302 03ec FFF7FEFF 		bl	VXISI2CWrite
 2303              	.LVL265:
2151:VS4210/monitor.c **** 	VXISI2CWrite(0x80,0x01);
 2304              		.loc 1 2151 0
 2305 03f0 0121     		movs	r1, #1
 2306 03f2 8020     		movs	r0, #128
 2307 03f4 FFF7FEFF 		bl	VXISI2CWrite
 2308              	.LVL266:
 2309 03f8 02E0     		b	.L124
 2310              	.L125:
 2311 03fa 00BF     		.align	2
 2312              	.L123:
 2313 03fc 00000000 		.word	.LC23
 2314              	.L124:
2152:VS4210/monitor.c **** 	VXISI2CWrite(0x81,0x34);
 2315              		.loc 1 2152 0
 2316 0400 3421     		movs	r1, #52
 2317 0402 8120     		movs	r0, #129
ARM GAS  /tmp/ccZa3c9M.s 			page 80


 2318 0404 FFF7FEFF 		bl	VXISI2CWrite
 2319              	.LVL267:
2153:VS4210/monitor.c **** 	VXISI2CWrite(0x82,0x40);
 2320              		.loc 1 2153 0
 2321 0408 4021     		movs	r1, #64
 2322 040a 8220     		movs	r0, #130
 2323 040c FFF7FEFF 		bl	VXISI2CWrite
 2324              	.LVL268:
2154:VS4210/monitor.c **** 	VXISI2CWrite(0x83,0x2D);
 2325              		.loc 1 2154 0
 2326 0410 2D21     		movs	r1, #45
 2327 0412 8320     		movs	r0, #131
 2328 0414 FFF7FEFF 		bl	VXISI2CWrite
 2329              	.LVL269:
2155:VS4210/monitor.c **** 	VXISI2CWrite(0x84,0x59);
 2330              		.loc 1 2155 0
 2331 0418 5921     		movs	r1, #89
 2332 041a 8420     		movs	r0, #132
 2333 041c FFF7FEFF 		bl	VXISI2CWrite
 2334              	.LVL270:
2156:VS4210/monitor.c **** 	VXISI2CWrite(0x85,0xFD);
 2335              		.loc 1 2156 0
 2336 0420 FD21     		movs	r1, #253
 2337 0422 8520     		movs	r0, #133
 2338 0424 FFF7FEFF 		bl	VXISI2CWrite
 2339              	.LVL271:
2157:VS4210/monitor.c **** 	VXISI2CWrite(0x86,0x00);
 2340              		.loc 1 2157 0
 2341 0428 0021     		movs	r1, #0
 2342 042a 8620     		movs	r0, #134
 2343 042c FFF7FEFF 		bl	VXISI2CWrite
 2344              	.LVL272:
2158:VS4210/monitor.c **** 	VXISI2CWrite(0x87,0x00);
 2345              		.loc 1 2158 0
 2346 0430 0021     		movs	r1, #0
 2347 0432 8720     		movs	r0, #135
 2348 0434 FFF7FEFF 		bl	VXISI2CWrite
 2349              	.LVL273:
2159:VS4210/monitor.c **** 	VXISI2CWrite(0x88,0x00);
 2350              		.loc 1 2159 0
 2351 0438 0021     		movs	r1, #0
 2352 043a 8820     		movs	r0, #136
 2353 043c FFF7FEFF 		bl	VXISI2CWrite
 2354              	.LVL274:
2160:VS4210/monitor.c **** 	VXISI2CWrite(0x89,0x00);
 2355              		.loc 1 2160 0
 2356 0440 0021     		movs	r1, #0
 2357 0442 8920     		movs	r0, #137
 2358 0444 FFF7FEFF 		bl	VXISI2CWrite
 2359              	.LVL275:
2161:VS4210/monitor.c **** 	VXISI2CWrite(0x8A,0x00);
 2360              		.loc 1 2161 0
 2361 0448 0021     		movs	r1, #0
 2362 044a 8A20     		movs	r0, #138
 2363 044c FFF7FEFF 		bl	VXISI2CWrite
 2364              	.LVL276:
2162:VS4210/monitor.c **** 	VXISI2CWrite(0x8B,0x7E);
ARM GAS  /tmp/ccZa3c9M.s 			page 81


 2365              		.loc 1 2162 0
 2366 0450 7E21     		movs	r1, #126
 2367 0452 8B20     		movs	r0, #139
 2368 0454 FFF7FEFF 		bl	VXISI2CWrite
 2369              	.LVL277:
2163:VS4210/monitor.c **** 	VXISI2CWrite(0x8C,0x03);
 2370              		.loc 1 2163 0
 2371 0458 0321     		movs	r1, #3
 2372 045a 8C20     		movs	r0, #140
 2373 045c FFF7FEFF 		bl	VXISI2CWrite
 2374              	.LVL278:
2164:VS4210/monitor.c **** 	VXISI2CWrite(0x8D,0x17);
 2375              		.loc 1 2164 0
 2376 0460 1721     		movs	r1, #23
 2377 0462 8D20     		movs	r0, #141
 2378 0464 FFF7FEFF 		bl	VXISI2CWrite
 2379              	.LVL279:
2165:VS4210/monitor.c **** 	VXISI2CWrite(0x8E,0x8C);
 2380              		.loc 1 2165 0
 2381 0468 8C21     		movs	r1, #140
 2382 046a 8E20     		movs	r0, #142
 2383 046c FFF7FEFF 		bl	VXISI2CWrite
 2384              	.LVL280:
2166:VS4210/monitor.c **** 	VXISI2CWrite(0x8F,0x00);
 2385              		.loc 1 2166 0
 2386 0470 0021     		movs	r1, #0
 2387 0472 8F20     		movs	r0, #143
 2388 0474 FFF7FEFF 		bl	VXISI2CWrite
 2389              	.LVL281:
2167:VS4210/monitor.c **** 	VXISI2CWrite(0x90,0xCC);
 2390              		.loc 1 2167 0
 2391 0478 CC21     		movs	r1, #204
 2392 047a 9020     		movs	r0, #144
 2393 047c FFF7FEFF 		bl	VXISI2CWrite
 2394              	.LVL282:
2168:VS4210/monitor.c **** 	VXISI2CWrite(0x91,0x41);
 2395              		.loc 1 2168 0
 2396 0480 4121     		movs	r1, #65
 2397 0482 9120     		movs	r0, #145
 2398 0484 FFF7FEFF 		bl	VXISI2CWrite
 2399              	.LVL283:
2169:VS4210/monitor.c **** 	VXISI2CWrite(0x92,0xC4);
 2400              		.loc 1 2169 0
 2401 0488 C421     		movs	r1, #196
 2402 048a 9220     		movs	r0, #146
 2403 048c FFF7FEFF 		bl	VXISI2CWrite
 2404              	.LVL284:
2170:VS4210/monitor.c **** 	VXISI2CWrite(0x93,0x31);
 2405              		.loc 1 2170 0
 2406 0490 3121     		movs	r1, #49
 2407 0492 9320     		movs	r0, #147
 2408 0494 FFF7FEFF 		bl	VXISI2CWrite
 2409              	.LVL285:
2171:VS4210/monitor.c **** 	VXISI2CWrite(0x94,0x88);
 2410              		.loc 1 2171 0
 2411 0498 8821     		movs	r1, #136
 2412 049a 9420     		movs	r0, #148
ARM GAS  /tmp/ccZa3c9M.s 			page 82


 2413 049c FFF7FEFF 		bl	VXISI2CWrite
 2414              	.LVL286:
2172:VS4210/monitor.c **** 	VXISI2CWrite(0x95,0x80);
 2415              		.loc 1 2172 0
 2416 04a0 8021     		movs	r1, #128
 2417 04a2 9520     		movs	r0, #149
 2418 04a4 FFF7FEFF 		bl	VXISI2CWrite
 2419              	.LVL287:
2173:VS4210/monitor.c **** 	VXISI2CWrite(0x96,0xF2);
 2420              		.loc 1 2173 0
 2421 04a8 F221     		movs	r1, #242
 2422 04aa 9620     		movs	r0, #150
 2423 04ac FFF7FEFF 		bl	VXISI2CWrite
 2424              	.LVL288:
2174:VS4210/monitor.c **** 	VXISI2CWrite(0x97,0x20);
 2425              		.loc 1 2174 0
 2426 04b0 2021     		movs	r1, #32
 2427 04b2 9720     		movs	r0, #151
 2428 04b4 FFF7FEFF 		bl	VXISI2CWrite
 2429              	.LVL289:
2175:VS4210/monitor.c **** 	VXISI2CWrite(0x98,0x10);
 2430              		.loc 1 2175 0
 2431 04b8 1021     		movs	r1, #16
 2432 04ba 9820     		movs	r0, #152
 2433 04bc FFF7FEFF 		bl	VXISI2CWrite
 2434              	.LVL290:
2176:VS4210/monitor.c **** 	VXISI2CWrite(0x99,0x90);
 2435              		.loc 1 2176 0
 2436 04c0 9021     		movs	r1, #144
 2437 04c2 9920     		movs	r0, #153
 2438 04c4 FFF7FEFF 		bl	VXISI2CWrite
 2439              	.LVL291:
2177:VS4210/monitor.c **** 	VXISI2CWrite(0x9A,0x80);
 2440              		.loc 1 2177 0
 2441 04c8 8021     		movs	r1, #128
 2442 04ca 9A20     		movs	r0, #154
 2443 04cc FFF7FEFF 		bl	VXISI2CWrite
 2444              	.LVL292:
2178:VS4210/monitor.c **** 	VXISI2CWrite(0x9B,0x04);
 2445              		.loc 1 2178 0
 2446 04d0 0421     		movs	r1, #4
 2447 04d2 9B20     		movs	r0, #155
 2448 04d4 FFF7FEFF 		bl	VXISI2CWrite
 2449              	.LVL293:
2179:VS4210/monitor.c **** 	VXISI2CWrite(0x9C,0x0A);
 2450              		.loc 1 2179 0
 2451 04d8 0A21     		movs	r1, #10
 2452 04da 9C20     		movs	r0, #156
 2453 04dc FFF7FEFF 		bl	VXISI2CWrite
 2454              	.LVL294:
2180:VS4210/monitor.c **** 	VXISI2CWrite(0x9D,0x00);
 2455              		.loc 1 2180 0
 2456 04e0 0021     		movs	r1, #0
 2457 04e2 9D20     		movs	r0, #157
 2458 04e4 FFF7FEFF 		bl	VXISI2CWrite
 2459              	.LVL295:
2181:VS4210/monitor.c **** 	VXISI2CWrite(0x9E,0x04);
ARM GAS  /tmp/ccZa3c9M.s 			page 83


 2460              		.loc 1 2181 0
 2461 04e8 0421     		movs	r1, #4
 2462 04ea 9E20     		movs	r0, #158
 2463 04ec FFF7FEFF 		bl	VXISI2CWrite
 2464              	.LVL296:
2182:VS4210/monitor.c **** 	VXISI2CWrite(0x9F,0x65);
 2465              		.loc 1 2182 0
 2466 04f0 6521     		movs	r1, #101
 2467 04f2 9F20     		movs	r0, #159
 2468 04f4 FFF7FEFF 		bl	VXISI2CWrite
 2469              	.LVL297:
2183:VS4210/monitor.c **** 	VXISI2CWrite(0xA0,0x2A);
 2470              		.loc 1 2183 0
 2471 04f8 2A21     		movs	r1, #42
 2472 04fa A020     		movs	r0, #160
 2473 04fc FFF7FEFF 		bl	VXISI2CWrite
 2474              	.LVL298:
2184:VS4210/monitor.c **** 	VXISI2CWrite(0xA1,0xD8);
 2475              		.loc 1 2184 0
 2476 0500 D821     		movs	r1, #216
 2477 0502 A120     		movs	r0, #161
 2478 0504 FFF7FEFF 		bl	VXISI2CWrite
 2479              	.LVL299:
2185:VS4210/monitor.c **** 	VXISI2CWrite(0xA2,0x98);
 2480              		.loc 1 2185 0
 2481 0508 9821     		movs	r1, #152
 2482 050a A220     		movs	r0, #162
 2483 050c FFF7FEFF 		bl	VXISI2CWrite
 2484              	.LVL300:
2186:VS4210/monitor.c **** 	VXISI2CWrite(0xA3,0x87);
 2485              		.loc 1 2186 0
 2486 0510 8721     		movs	r1, #135
 2487 0512 A320     		movs	r0, #163
 2488 0514 FFF7FEFF 		bl	VXISI2CWrite
 2489              	.LVL301:
2187:VS4210/monitor.c **** 	VXISI2CWrite(0xA4,0xD9);
 2490              		.loc 1 2187 0
 2491 0518 D921     		movs	r1, #217
 2492 051a A420     		movs	r0, #164
 2493 051c FFF7FEFF 		bl	VXISI2CWrite
 2494              	.LVL302:
2188:VS4210/monitor.c **** 	VXISI2CWrite(0xA5,0x38);
 2495              		.loc 1 2188 0
 2496 0520 3821     		movs	r1, #56
 2497 0522 A520     		movs	r0, #165
 2498 0524 FFF7FEFF 		bl	VXISI2CWrite
 2499              	.LVL303:
2189:VS4210/monitor.c **** 	VXISI2CWrite(0xA6,0xBA);
 2500              		.loc 1 2189 0
 2501 0528 BA21     		movs	r1, #186
 2502 052a A620     		movs	r0, #166
 2503 052c FFF7FEFF 		bl	VXISI2CWrite
 2504              	.LVL304:
2190:VS4210/monitor.c **** 	VXISI2CWrite(0xA7,0x70);
 2505              		.loc 1 2190 0
 2506 0530 7021     		movs	r1, #112
 2507 0532 A720     		movs	r0, #167
ARM GAS  /tmp/ccZa3c9M.s 			page 84


 2508 0534 FFF7FEFF 		bl	VXISI2CWrite
 2509              	.LVL305:
2191:VS4210/monitor.c **** 	VXISI2CWrite(0xA8,0x40);
 2510              		.loc 1 2191 0
 2511 0538 4021     		movs	r1, #64
 2512 053a A820     		movs	r0, #168
 2513 053c FFF7FEFF 		bl	VXISI2CWrite
 2514              	.LVL306:
2192:VS4210/monitor.c **** 	VXISI2CWrite(0xA9,0x1E);
 2515              		.loc 1 2192 0
 2516 0540 1E21     		movs	r1, #30
 2517 0542 A920     		movs	r0, #169
 2518 0544 FFF7FEFF 		bl	VXISI2CWrite
 2519              	.LVL307:
2193:VS4210/monitor.c **** 	VXISI2CWrite(0xAA,0x2E);
 2520              		.loc 1 2193 0
 2521 0548 2E21     		movs	r1, #46
 2522 054a AA20     		movs	r0, #170
 2523 054c FFF7FEFF 		bl	VXISI2CWrite
 2524              	.LVL308:
2194:VS4210/monitor.c **** 	VXISI2CWrite(0xAB,0x00);
 2525              		.loc 1 2194 0
 2526 0550 0021     		movs	r1, #0
 2527 0552 AB20     		movs	r0, #171
 2528 0554 FFF7FEFF 		bl	VXISI2CWrite
 2529              	.LVL309:
2195:VS4210/monitor.c **** 	VXISI2CWrite(0xAC,0x84);
 2530              		.loc 1 2195 0
 2531 0558 8421     		movs	r1, #132
 2532 055a AC20     		movs	r0, #172
 2533 055c FFF7FEFF 		bl	VXISI2CWrite
 2534              	.LVL310:
2196:VS4210/monitor.c **** 	VXISI2CWrite(0xAD,0xF2);
 2535              		.loc 1 2196 0
 2536 0560 F221     		movs	r1, #242
 2537 0562 AD20     		movs	r0, #173
 2538 0564 FFF7FEFF 		bl	VXISI2CWrite
 2539              	.LVL311:
2197:VS4210/monitor.c **** 	VXISI2CWrite(0xAE,0x65);
 2540              		.loc 1 2197 0
 2541 0568 6521     		movs	r1, #101
 2542 056a AE20     		movs	r0, #174
 2543 056c FFF7FEFF 		bl	VXISI2CWrite
 2544              	.LVL312:
2198:VS4210/monitor.c **** 	VXISI2CWrite(0xAF,0x99);
 2545              		.loc 1 2198 0
 2546 0570 9921     		movs	r1, #153
 2547 0572 AF20     		movs	r0, #175
 2548 0574 FFF7FEFF 		bl	VXISI2CWrite
 2549              	.LVL313:
2199:VS4210/monitor.c **** 	VXISI2CWrite(0xB0,0x00);
 2550              		.loc 1 2199 0
 2551 0578 0021     		movs	r1, #0
 2552 057a B020     		movs	r0, #176
 2553 057c FFF7FEFF 		bl	VXISI2CWrite
 2554              	.LVL314:
2200:VS4210/monitor.c **** 	VXISI2CWrite(0xB1,0x00);
ARM GAS  /tmp/ccZa3c9M.s 			page 85


 2555              		.loc 1 2200 0
 2556 0580 0021     		movs	r1, #0
 2557 0582 B120     		movs	r0, #177
 2558 0584 FFF7FEFF 		bl	VXISI2CWrite
 2559              	.LVL315:
2201:VS4210/monitor.c **** 	VXISI2CWrite(0xB2,0x00);
 2560              		.loc 1 2201 0
 2561 0588 0021     		movs	r1, #0
 2562 058a B220     		movs	r0, #178
 2563 058c FFF7FEFF 		bl	VXISI2CWrite
 2564              	.LVL316:
2202:VS4210/monitor.c **** 	VXISI2CWrite(0xB3,0x00);
 2565              		.loc 1 2202 0
 2566 0590 0021     		movs	r1, #0
 2567 0592 B320     		movs	r0, #179
 2568 0594 FFF7FEFF 		bl	VXISI2CWrite
 2569              	.LVL317:
2203:VS4210/monitor.c **** 	VXISI2CWrite(0xB4,0x00);
 2570              		.loc 1 2203 0
 2571 0598 0021     		movs	r1, #0
 2572 059a B420     		movs	r0, #180
 2573 059c FFF7FEFF 		bl	VXISI2CWrite
 2574              	.LVL318:
2204:VS4210/monitor.c **** 	VXISI2CWrite(0xB5,0x00);
 2575              		.loc 1 2204 0
 2576 05a0 0021     		movs	r1, #0
 2577 05a2 B520     		movs	r0, #181
 2578 05a4 FFF7FEFF 		bl	VXISI2CWrite
 2579              	.LVL319:
2205:VS4210/monitor.c **** 	VXISI2CWrite(0xB6,0x00);
 2580              		.loc 1 2205 0
 2581 05a8 0021     		movs	r1, #0
 2582 05aa B620     		movs	r0, #182
 2583 05ac FFF7FEFF 		bl	VXISI2CWrite
 2584              	.LVL320:
2206:VS4210/monitor.c **** 	VXISI2CWrite(0xB8,0x80);
 2585              		.loc 1 2206 0
 2586 05b0 8021     		movs	r1, #128
 2587 05b2 B820     		movs	r0, #184
 2588 05b4 FFF7FEFF 		bl	VXISI2CWrite
 2589              	.LVL321:
2207:VS4210/monitor.c **** 	VXISI2CWrite(0xB9,0x00);
 2590              		.loc 1 2207 0
 2591 05b8 0021     		movs	r1, #0
 2592 05ba B920     		movs	r0, #185
 2593 05bc FFF7FEFF 		bl	VXISI2CWrite
 2594              	.LVL322:
2208:VS4210/monitor.c **** 	VXISI2CWrite(0xBA,0x01);
 2595              		.loc 1 2208 0
 2596 05c0 0121     		movs	r1, #1
 2597 05c2 BA20     		movs	r0, #186
 2598 05c4 FFF7FEFF 		bl	VXISI2CWrite
 2599              	.LVL323:
2209:VS4210/monitor.c **** 	VXISI2CWrite(0xBB,0x00);
 2600              		.loc 1 2209 0
 2601 05c8 0021     		movs	r1, #0
 2602 05ca BB20     		movs	r0, #187
ARM GAS  /tmp/ccZa3c9M.s 			page 86


 2603 05cc FFF7FEFF 		bl	VXISI2CWrite
 2604              	.LVL324:
2210:VS4210/monitor.c **** 	VXISI2CWrite(0xBC,0x90);
 2605              		.loc 1 2210 0
 2606 05d0 9021     		movs	r1, #144
 2607 05d2 BC20     		movs	r0, #188
 2608 05d4 FFF7FEFF 		bl	VXISI2CWrite
 2609              	.LVL325:
2211:VS4210/monitor.c **** 	VXISI2CWrite(0xBD,0x01);
 2610              		.loc 1 2211 0
 2611 05d8 0121     		movs	r1, #1
 2612 05da BD20     		movs	r0, #189
 2613 05dc FFF7FEFF 		bl	VXISI2CWrite
 2614              	.LVL326:
2212:VS4210/monitor.c **** 	VXISI2CWrite(0xBE,0x2C);
 2615              		.loc 1 2212 0
 2616 05e0 2C21     		movs	r1, #44
 2617 05e2 BE20     		movs	r0, #190
 2618 05e4 FFF7FEFF 		bl	VXISI2CWrite
 2619              	.LVL327:
2213:VS4210/monitor.c **** 	VXISI2CWrite(0xC0,0x00);
 2620              		.loc 1 2213 0
 2621 05e8 0021     		movs	r1, #0
 2622 05ea C020     		movs	r0, #192
 2623 05ec FFF7FEFF 		bl	VXISI2CWrite
 2624              	.LVL328:
2214:VS4210/monitor.c **** 	VXISI2CWrite(0xC1,0x20);
 2625              		.loc 1 2214 0
 2626 05f0 2021     		movs	r1, #32
 2627 05f2 C120     		movs	r0, #193
 2628 05f4 FFF7FEFF 		bl	VXISI2CWrite
 2629              	.LVL329:
2215:VS4210/monitor.c **** 	VXISI2CWrite(0xC2,0x20);
 2630              		.loc 1 2215 0
 2631 05f8 2021     		movs	r1, #32
 2632 05fa C220     		movs	r0, #194
 2633 05fc FFF7FEFF 		bl	VXISI2CWrite
 2634              	.LVL330:
2216:VS4210/monitor.c **** 	VXISI2CWrite(0xC3,0x20);
 2635              		.loc 1 2216 0
 2636 0600 2021     		movs	r1, #32
 2637 0602 C320     		movs	r0, #195
 2638 0604 FFF7FEFF 		bl	VXISI2CWrite
 2639              	.LVL331:
2217:VS4210/monitor.c **** 	VXISI2CWrite(0xC4,0x20);
 2640              		.loc 1 2217 0
 2641 0608 2021     		movs	r1, #32
 2642 060a C420     		movs	r0, #196
 2643 060c FFF7FEFF 		bl	VXISI2CWrite
 2644              	.LVL332:
2218:VS4210/monitor.c **** 	VXISI2CWrite(0xC5,0x20);
 2645              		.loc 1 2218 0
 2646 0610 2021     		movs	r1, #32
 2647 0612 C520     		movs	r0, #197
 2648 0614 FFF7FEFF 		bl	VXISI2CWrite
 2649              	.LVL333:
2219:VS4210/monitor.c **** 	VXISI2CWrite(0xD0,0xFF);
ARM GAS  /tmp/ccZa3c9M.s 			page 87


 2650              		.loc 1 2219 0
 2651 0618 FF21     		movs	r1, #255
 2652 061a D020     		movs	r0, #208
 2653 061c FFF7FEFF 		bl	VXISI2CWrite
 2654              	.LVL334:
2220:VS4210/monitor.c **** 	VXISI2CWrite(0xD1,0x3F);
 2655              		.loc 1 2220 0
 2656 0620 3F21     		movs	r1, #63
 2657 0622 D120     		movs	r0, #209
 2658 0624 FFF7FEFF 		bl	VXISI2CWrite
 2659              	.LVL335:
2221:VS4210/monitor.c **** 	VXISI2CWrite(0xD2,0xC2);
 2660              		.loc 1 2221 0
 2661 0628 C221     		movs	r1, #194
 2662 062a D220     		movs	r0, #210
 2663 062c FFF7FEFF 		bl	VXISI2CWrite
 2664              	.LVL336:
2222:VS4210/monitor.c **** 	VXISI2CWrite(0xD3,0x3F);
 2665              		.loc 1 2222 0
 2666 0630 3F21     		movs	r1, #63
 2667 0632 D320     		movs	r0, #211
 2668 0634 FFF7FEFF 		bl	VXISI2CWrite
 2669              	.LVL337:
2223:VS4210/monitor.c **** 	VXISI2CWrite(0xD4,0x00);
 2670              		.loc 1 2223 0
 2671 0638 0021     		movs	r1, #0
 2672 063a D420     		movs	r0, #212
 2673 063c FFF7FEFF 		bl	VXISI2CWrite
 2674              	.LVL338:
2224:VS4210/monitor.c **** 	VXISI2CWrite(0xD5,0x00);
 2675              		.loc 1 2224 0
 2676 0640 0021     		movs	r1, #0
 2677 0642 D520     		movs	r0, #213
 2678 0644 FFF7FEFF 		bl	VXISI2CWrite
 2679              	.LVL339:
2225:VS4210/monitor.c **** 	VXISI2CWrite(0xD6,0x00);
 2680              		.loc 1 2225 0
 2681 0648 0021     		movs	r1, #0
 2682 064a D620     		movs	r0, #214
 2683 064c FFF7FEFF 		bl	VXISI2CWrite
 2684              	.LVL340:
2226:VS4210/monitor.c **** 	VXISI2CWrite(0xD7,0x10);
 2685              		.loc 1 2226 0
 2686 0650 1021     		movs	r1, #16
 2687 0652 D720     		movs	r0, #215
 2688 0654 FFF7FEFF 		bl	VXISI2CWrite
 2689              	.LVL341:
2227:VS4210/monitor.c **** 	VXISI2CWrite(0xD8,0x00);
 2690              		.loc 1 2227 0
 2691 0658 0021     		movs	r1, #0
 2692 065a D820     		movs	r0, #216
 2693 065c FFF7FEFF 		bl	VXISI2CWrite
 2694              	.LVL342:
2228:VS4210/monitor.c **** 	VXISI2CWrite(0xDC,0x77);
 2695              		.loc 1 2228 0
 2696 0660 7721     		movs	r1, #119
 2697 0662 DC20     		movs	r0, #220
ARM GAS  /tmp/ccZa3c9M.s 			page 88


 2698 0664 FFF7FEFF 		bl	VXISI2CWrite
 2699              	.LVL343:
2229:VS4210/monitor.c **** 	VXISI2CWrite(0xDD,0x00);
 2700              		.loc 1 2229 0
 2701 0668 0021     		movs	r1, #0
 2702 066a DD20     		movs	r0, #221
 2703 066c FFF7FEFF 		bl	VXISI2CWrite
 2704              	.LVL344:
2230:VS4210/monitor.c **** 	VXISI2CWrite(0xDE,0xAF);
 2705              		.loc 1 2230 0
 2706 0670 AF21     		movs	r1, #175
 2707 0672 DE20     		movs	r0, #222
 2708 0674 FFF7FEFF 		bl	VXISI2CWrite
 2709              	.LVL345:
2231:VS4210/monitor.c **** 	VXISI2CWrite(0xDF,0xEC);
 2710              		.loc 1 2231 0
 2711 0678 EC21     		movs	r1, #236
 2712 067a DF20     		movs	r0, #223
 2713 067c FFF7FEFF 		bl	VXISI2CWrite
 2714              	.LVL346:
2232:VS4210/monitor.c **** 	VXISI2CWrite(0xE0,0x00);
 2715              		.loc 1 2232 0
 2716 0680 0021     		movs	r1, #0
 2717 0682 E020     		movs	r0, #224
 2718 0684 FFF7FEFF 		bl	VXISI2CWrite
 2719              	.LVL347:
2233:VS4210/monitor.c **** 	VXISI2CWrite(0xE1,0x00);
 2720              		.loc 1 2233 0
 2721 0688 0021     		movs	r1, #0
 2722 068a E120     		movs	r0, #225
 2723 068c FFF7FEFF 		bl	VXISI2CWrite
 2724              	.LVL348:
2234:VS4210/monitor.c **** 	VXISI2CWrite(0xE2,0x00);
 2725              		.loc 1 2234 0
 2726 0690 0021     		movs	r1, #0
 2727 0692 E220     		movs	r0, #226
 2728 0694 FFF7FEFF 		bl	VXISI2CWrite
 2729              	.LVL349:
2235:VS4210/monitor.c **** 	VXISI2CWrite(0xE3,0x12);
 2730              		.loc 1 2235 0
 2731 0698 1221     		movs	r1, #18
 2732 069a E320     		movs	r0, #227
 2733 069c FFF7FEFF 		bl	VXISI2CWrite
 2734              	.LVL350:
2236:VS4210/monitor.c **** 	VXISI2CWrite(0xE4,0xE2);
 2735              		.loc 1 2236 0
 2736 06a0 E221     		movs	r1, #226
 2737 06a2 E420     		movs	r0, #228
 2738 06a4 FFF7FEFF 		bl	VXISI2CWrite
 2739              	.LVL351:
2237:VS4210/monitor.c **** 	VXISI2CWrite(0xE5,0x80);
 2740              		.loc 1 2237 0
 2741 06a8 8021     		movs	r1, #128
 2742 06aa E520     		movs	r0, #229
 2743 06ac FFF7FEFF 		bl	VXISI2CWrite
 2744              	.LVL352:
2238:VS4210/monitor.c **** 	VXISI2CWrite(0xE6,0x00);
ARM GAS  /tmp/ccZa3c9M.s 			page 89


 2745              		.loc 1 2238 0
 2746 06b0 0021     		movs	r1, #0
 2747 06b2 E620     		movs	r0, #230
 2748 06b4 FFF7FEFF 		bl	VXISI2CWrite
 2749              	.LVL353:
2239:VS4210/monitor.c **** 	VXISI2CWrite(0xE7,0x00);
 2750              		.loc 1 2239 0
 2751 06b8 0021     		movs	r1, #0
 2752 06ba E720     		movs	r0, #231
 2753 06bc FFF7FEFF 		bl	VXISI2CWrite
 2754              	.LVL354:
2240:VS4210/monitor.c **** 	VXISI2CWrite(0xE8,0x00);
 2755              		.loc 1 2240 0
 2756 06c0 0021     		movs	r1, #0
 2757 06c2 E820     		movs	r0, #232
 2758 06c4 FFF7FEFF 		bl	VXISI2CWrite
 2759              	.LVL355:
2241:VS4210/monitor.c **** 	VXISI2CWrite(0xE9,0x00);
 2760              		.loc 1 2241 0
 2761 06c8 0021     		movs	r1, #0
 2762 06ca E920     		movs	r0, #233
 2763 06cc FFF7FEFF 		bl	VXISI2CWrite
 2764              	.LVL356:
2242:VS4210/monitor.c **** 	VXISI2CWrite(0xEA,0x00);
 2765              		.loc 1 2242 0
 2766 06d0 0021     		movs	r1, #0
 2767 06d2 EA20     		movs	r0, #234
 2768 06d4 FFF7FEFF 		bl	VXISI2CWrite
 2769              	.LVL357:
2243:VS4210/monitor.c **** 	VXISI2CWrite(0xEB,0x00);
 2770              		.loc 1 2243 0
 2771 06d8 0021     		movs	r1, #0
 2772 06da EB20     		movs	r0, #235
 2773 06dc FFF7FEFF 		bl	VXISI2CWrite
 2774              	.LVL358:
2244:VS4210/monitor.c **** 	VXISI2CWrite(0xEC,0x88);
 2775              		.loc 1 2244 0
 2776 06e0 8821     		movs	r1, #136
 2777 06e2 EC20     		movs	r0, #236
 2778 06e4 FFF7FEFF 		bl	VXISI2CWrite
 2779              	.LVL359:
2245:VS4210/monitor.c **** 	VXISI2CWrite(0xED,0x00);
 2780              		.loc 1 2245 0
 2781 06e8 0021     		movs	r1, #0
 2782 06ea ED20     		movs	r0, #237
 2783 06ec FFF7FEFF 		bl	VXISI2CWrite
 2784              	.LVL360:
2246:VS4210/monitor.c **** 	VXISI2CWrite(0xEE,0x00);
 2785              		.loc 1 2246 0
 2786 06f0 0021     		movs	r1, #0
 2787 06f2 EE20     		movs	r0, #238
 2788 06f4 FFF7FEFF 		bl	VXISI2CWrite
 2789              	.LVL361:
2247:VS4210/monitor.c **** 	VXISI2CWrite(0xEF,0x00);
 2790              		.loc 1 2247 0
 2791 06f8 0021     		movs	r1, #0
 2792 06fa EF20     		movs	r0, #239
ARM GAS  /tmp/ccZa3c9M.s 			page 90


 2793 06fc FFF7FEFF 		bl	VXISI2CWrite
 2794              	.LVL362:
2248:VS4210/monitor.c **** 	VXISI2CWrite(0xF0,0x30);
 2795              		.loc 1 2248 0
 2796 0700 3021     		movs	r1, #48
 2797 0702 F020     		movs	r0, #240
 2798 0704 FFF7FEFF 		bl	VXISI2CWrite
 2799              	.LVL363:
2249:VS4210/monitor.c **** 	VXISI2CWrite(0xF1,0x43);
 2800              		.loc 1 2249 0
 2801 0708 4321     		movs	r1, #67
 2802 070a F120     		movs	r0, #241
 2803 070c FFF7FEFF 		bl	VXISI2CWrite
 2804              	.LVL364:
2250:VS4210/monitor.c **** 	VXISI2CWrite(0xF2,0x1F);
 2805              		.loc 1 2250 0
 2806 0710 1F21     		movs	r1, #31
 2807 0712 F220     		movs	r0, #242
 2808 0714 FFF7FEFF 		bl	VXISI2CWrite
 2809              	.LVL365:
2251:VS4210/monitor.c **** 	VXISI2CWrite(0xF3,0x1F);
 2810              		.loc 1 2251 0
 2811 0718 1F21     		movs	r1, #31
 2812 071a F320     		movs	r0, #243
 2813 071c FFF7FEFF 		bl	VXISI2CWrite
 2814              	.LVL366:
2252:VS4210/monitor.c **** 	VXISI2CWrite(0xF4,0x22);
 2815              		.loc 1 2252 0
 2816 0720 2221     		movs	r1, #34
 2817 0722 F420     		movs	r0, #244
 2818 0724 FFF7FEFF 		bl	VXISI2CWrite
 2819              	.LVL367:
2253:VS4210/monitor.c **** 	VXISI2CWrite(0xF5,0x73);
 2820              		.loc 1 2253 0
 2821 0728 7321     		movs	r1, #115
 2822 072a F520     		movs	r0, #245
 2823 072c FFF7FEFF 		bl	VXISI2CWrite
 2824              	.LVL368:
2254:VS4210/monitor.c **** 	VXISI2CWrite(0xF6,0x53);
 2825              		.loc 1 2254 0
 2826 0730 5321     		movs	r1, #83
 2827 0732 F620     		movs	r0, #246
 2828 0734 FFF7FEFF 		bl	VXISI2CWrite
 2829              	.LVL369:
2255:VS4210/monitor.c **** 	VXISI2CWrite(0xF7,0x80);
 2830              		.loc 1 2255 0
 2831 0738 8021     		movs	r1, #128
 2832 073a F720     		movs	r0, #247
 2833 073c FFF7FEFF 		bl	VXISI2CWrite
 2834              	.LVL370:
2256:VS4210/monitor.c **** 	VXISI2CWrite(0xF8,0x01);
 2835              		.loc 1 2256 0
 2836 0740 0121     		movs	r1, #1
 2837 0742 F820     		movs	r0, #248
 2838 0744 FFF7FEFF 		bl	VXISI2CWrite
 2839              	.LVL371:
2257:VS4210/monitor.c **** 	VXISI2CWrite(0xF9,0x01);
ARM GAS  /tmp/ccZa3c9M.s 			page 91


 2840              		.loc 1 2257 0
 2841 0748 0121     		movs	r1, #1
 2842 074a F920     		movs	r0, #249
 2843 074c FFF7FEFF 		bl	VXISI2CWrite
 2844              	.LVL372:
2258:VS4210/monitor.c **** 	VXISI2CWrite(0xFA,0x00);
 2845              		.loc 1 2258 0
 2846 0750 0021     		movs	r1, #0
 2847 0752 FA20     		movs	r0, #250
 2848 0754 FFF7FEFF 		bl	VXISI2CWrite
 2849              	.LVL373:
2259:VS4210/monitor.c **** 	VXISI2CWrite(0xFB,0x00);
 2850              		.loc 1 2259 0
 2851 0758 0021     		movs	r1, #0
 2852 075a FB20     		movs	r0, #251
 2853 075c FFF7FEFF 		bl	VXISI2CWrite
 2854              	.LVL374:
2260:VS4210/monitor.c **** 	VXISI2CWrite(0xFC,0x00);
 2855              		.loc 1 2260 0
 2856 0760 0021     		movs	r1, #0
 2857 0762 FC20     		movs	r0, #252
 2858 0764 FFF7FEFF 		bl	VXISI2CWrite
 2859              	.LVL375:
2261:VS4210/monitor.c **** 	VXISI2CWrite(0xFD,0x70);
 2860              		.loc 1 2261 0
 2861 0768 7021     		movs	r1, #112
 2862 076a FD20     		movs	r0, #253
 2863 076c FFF7FEFF 		bl	VXISI2CWrite
 2864              	.LVL376:
2262:VS4210/monitor.c **** 	VXISI2CWrite(0xFE,0x40);
 2865              		.loc 1 2262 0
 2866 0770 4021     		movs	r1, #64
 2867 0772 FE20     		movs	r0, #254
 2868 0774 FFF7FEFF 		bl	VXISI2CWrite
 2869              	.LVL377:
2263:VS4210/monitor.c **** 	VXISI2CWrite(0xFF,0x07);
 2870              		.loc 1 2263 0
 2871 0778 0721     		movs	r1, #7
 2872 077a FF20     		movs	r0, #255
 2873 077c FFF7FEFF 		bl	VXISI2CWrite
 2874              	.LVL378:
2264:VS4210/monitor.c **** 					   
2265:VS4210/monitor.c **** 
2266:VS4210/monitor.c **** }
 2875              		.loc 1 2266 0
 2876 0780 08BD     		pop	{r3, pc}
 2877              		.cfi_endproc
 2878              	.LFE94:
 2880 0782 00BF     		.section	.text.SET_HDMI_SYNC_PARA,"ax",%progbits
 2881              		.align	1
 2882              		.global	SET_HDMI_SYNC_PARA
 2883              		.syntax unified
 2884              		.thumb
 2885              		.thumb_func
 2886              		.fpu softvfp
 2888              	SET_HDMI_SYNC_PARA:
 2889              	.LFB95:
ARM GAS  /tmp/ccZa3c9M.s 			page 92


2267:VS4210/monitor.c **** 
2268:VS4210/monitor.c **** void SET_HDMI_SYNC_PARA(void)
2269:VS4210/monitor.c **** {
 2890              		.loc 1 2269 0
 2891              		.cfi_startproc
 2892              		@ args = 0, pretend = 0, frame = 0
 2893              		@ frame_needed = 0, uses_anonymous_args = 0
 2894 0000 08B5     		push	{r3, lr}
 2895              	.LCFI18:
 2896              		.cfi_def_cfa_offset 8
 2897              		.cfi_offset 3, -8
 2898              		.cfi_offset 14, -4
2270:VS4210/monitor.c **** 	Printf("\r\nLoading HDMI Embedded Sync para.... ");
 2899              		.loc 1 2270 0
 2900 0002 0248     		ldr	r0, .L128
 2901 0004 FFF7FEFF 		bl	Printf
 2902              	.LVL379:
2271:VS4210/monitor.c **** 
2272:VS4210/monitor.c **** 	return;
2273:VS4210/monitor.c **** 	//DUMP VS4210 Reg..
2274:VS4210/monitor.c **** #if 0
2275:VS4210/monitor.c **** VXISI2CWrite(0x00,0x42);
2276:VS4210/monitor.c **** VXISI2CWrite(0x01,0x00);
2277:VS4210/monitor.c **** VXISI2CWrite(0x02,0x00);
2278:VS4210/monitor.c **** VXISI2CWrite(0x03,0x75);
2279:VS4210/monitor.c **** VXISI2CWrite(0x04,0x18);
2280:VS4210/monitor.c **** VXISI2CWrite(0x05,0x80);
2281:VS4210/monitor.c **** VXISI2CWrite(0x06,0x20);
2282:VS4210/monitor.c **** VXISI2CWrite(0x07,0x0C);
2283:VS4210/monitor.c **** VXISI2CWrite(0x08,0x40);
2284:VS4210/monitor.c **** VXISI2CWrite(0x09,0x0A);
2285:VS4210/monitor.c **** VXISI2CWrite(0x0A,0x40);
2286:VS4210/monitor.c **** VXISI2CWrite(0x0B,0x0A);
2287:VS4210/monitor.c **** VXISI2CWrite(0x0C,0x00);
2288:VS4210/monitor.c **** VXISI2CWrite(0x0D,0x20);
2289:VS4210/monitor.c **** VXISI2CWrite(0x0E,0x10);
2290:VS4210/monitor.c **** VXISI2CWrite(0x0F,0x00);
2291:VS4210/monitor.c **** VXISI2CWrite(0x10,0x80);
2292:VS4210/monitor.c **** VXISI2CWrite(0x11,0x82);
2293:VS4210/monitor.c **** VXISI2CWrite(0x12,0x74);
2294:VS4210/monitor.c **** VXISI2CWrite(0x13,0x80);
2295:VS4210/monitor.c **** VXISI2CWrite(0x14,0x38);
2296:VS4210/monitor.c **** VXISI2CWrite(0x15,0x78);
2297:VS4210/monitor.c **** VXISI2CWrite(0x16,0xFE);
2298:VS4210/monitor.c **** VXISI2CWrite(0x17,0x00);
2299:VS4210/monitor.c **** VXISI2CWrite(0x18,0xC0);
2300:VS4210/monitor.c **** VXISI2CWrite(0x19,0x00);
2301:VS4210/monitor.c **** VXISI2CWrite(0x1A,0x20);
2302:VS4210/monitor.c **** VXISI2CWrite(0x1B,0x30);
2303:VS4210/monitor.c **** VXISI2CWrite(0x1C,0x00);
2304:VS4210/monitor.c **** VXISI2CWrite(0x1D,0x00);
2305:VS4210/monitor.c **** VXISI2CWrite(0x1E,0x20);
2306:VS4210/monitor.c **** VXISI2CWrite(0x1F,0xA4);
2307:VS4210/monitor.c **** VXISI2CWrite(0x20,0x50);
2308:VS4210/monitor.c **** VXISI2CWrite(0x21,0xE2);
2309:VS4210/monitor.c **** VXISI2CWrite(0x22,0x87);
2310:VS4210/monitor.c **** VXISI2CWrite(0x23,0x98);
ARM GAS  /tmp/ccZa3c9M.s 			page 93


2311:VS4210/monitor.c **** VXISI2CWrite(0x24,0x80);
2312:VS4210/monitor.c **** VXISI2CWrite(0x25,0x44);
2313:VS4210/monitor.c **** VXISI2CWrite(0x26,0x65);
2314:VS4210/monitor.c **** VXISI2CWrite(0x27,0x38);
2315:VS4210/monitor.c **** VXISI2CWrite(0x28,0xF0);
2316:VS4210/monitor.c **** VXISI2CWrite(0x29,0x00);
2317:VS4210/monitor.c **** VXISI2CWrite(0x2A,0x00);
2318:VS4210/monitor.c **** VXISI2CWrite(0x2B,0x11);
2319:VS4210/monitor.c **** VXISI2CWrite(0x2C,0x00);
2320:VS4210/monitor.c **** VXISI2CWrite(0x2D,0x00);
2321:VS4210/monitor.c **** VXISI2CWrite(0x2E,0x47);
2322:VS4210/monitor.c **** VXISI2CWrite(0x2F,0x80);
2323:VS4210/monitor.c **** VXISI2CWrite(0x30,0x38);
2324:VS4210/monitor.c **** VXISI2CWrite(0x31,0x80);
2325:VS4210/monitor.c **** VXISI2CWrite(0x32,0x80);
2326:VS4210/monitor.c **** VXISI2CWrite(0x33,0x80);
2327:VS4210/monitor.c **** VXISI2CWrite(0x34,0xA0);
2328:VS4210/monitor.c **** VXISI2CWrite(0x35,0x18);
2329:VS4210/monitor.c **** VXISI2CWrite(0x36,0x46);
2330:VS4210/monitor.c **** VXISI2CWrite(0x37,0x64);
2331:VS4210/monitor.c **** VXISI2CWrite(0x38,0x00);
2332:VS4210/monitor.c **** VXISI2CWrite(0x39,0xFF);
2333:VS4210/monitor.c **** VXISI2CWrite(0x3A,0x1D);
2334:VS4210/monitor.c **** VXISI2CWrite(0x3B,0x80);
2335:VS4210/monitor.c **** VXISI2CWrite(0x3C,0x80);
2336:VS4210/monitor.c **** VXISI2CWrite(0x3D,0x80);
2337:VS4210/monitor.c **** VXISI2CWrite(0x3E,0x80);
2338:VS4210/monitor.c **** VXISI2CWrite(0x3F,0x80);
2339:VS4210/monitor.c **** VXISI2CWrite(0x40,0x80);
2340:VS4210/monitor.c **** VXISI2CWrite(0x41,0x60);
2341:VS4210/monitor.c **** VXISI2CWrite(0x42,0x5F);
2342:VS4210/monitor.c **** VXISI2CWrite(0x43,0x37);
2343:VS4210/monitor.c **** VXISI2CWrite(0x44,0x14);
2344:VS4210/monitor.c **** VXISI2CWrite(0x45,0x00);
2345:VS4210/monitor.c **** VXISI2CWrite(0x46,0x00);
2346:VS4210/monitor.c **** VXISI2CWrite(0x47,0x00);
2347:VS4210/monitor.c **** VXISI2CWrite(0x48,0x00);
2348:VS4210/monitor.c **** VXISI2CWrite(0x49,0x00);
2349:VS4210/monitor.c **** VXISI2CWrite(0x4A,0x00);
2350:VS4210/monitor.c **** VXISI2CWrite(0x4B,0x20);
2351:VS4210/monitor.c **** VXISI2CWrite(0x4C,0x00);
2352:VS4210/monitor.c **** VXISI2CWrite(0x4D,0x00);
2353:VS4210/monitor.c **** VXISI2CWrite(0x4E,0x00);
2354:VS4210/monitor.c **** VXISI2CWrite(0x4F,0x7F);
2355:VS4210/monitor.c **** VXISI2CWrite(0x50,0x20);
2356:VS4210/monitor.c **** VXISI2CWrite(0x51,0x00);
2357:VS4210/monitor.c **** VXISI2CWrite(0x52,0xA4);
2358:VS4210/monitor.c **** VXISI2CWrite(0x53,0xC0);
2359:VS4210/monitor.c **** VXISI2CWrite(0x54,0x42);
2360:VS4210/monitor.c **** VXISI2CWrite(0x55,0x60);
2361:VS4210/monitor.c **** VXISI2CWrite(0x56,0x5C);
2362:VS4210/monitor.c **** VXISI2CWrite(0x57,0x04);
2363:VS4210/monitor.c **** VXISI2CWrite(0x58,0x00);
2364:VS4210/monitor.c **** VXISI2CWrite(0x59,0x08);
2365:VS4210/monitor.c **** VXISI2CWrite(0x5A,0x10);
2366:VS4210/monitor.c **** VXISI2CWrite(0x5B,0x00);
2367:VS4210/monitor.c **** VXISI2CWrite(0x5C,0x68);
ARM GAS  /tmp/ccZa3c9M.s 			page 94


2368:VS4210/monitor.c **** VXISI2CWrite(0x5D,0xA8);
2369:VS4210/monitor.c **** VXISI2CWrite(0x5E,0xC0);
2370:VS4210/monitor.c **** VXISI2CWrite(0x5F,0x53);
2371:VS4210/monitor.c **** VXISI2CWrite(0x60,0xE0);
2372:VS4210/monitor.c **** VXISI2CWrite(0x61,0xCC);
2373:VS4210/monitor.c **** VXISI2CWrite(0x62,0x33);
2374:VS4210/monitor.c **** VXISI2CWrite(0x63,0x01);
2375:VS4210/monitor.c **** VXISI2CWrite(0x64,0xFF);
2376:VS4210/monitor.c **** VXISI2CWrite(0x65,0x01);
2377:VS4210/monitor.c **** VXISI2CWrite(0x66,0xFF);
2378:VS4210/monitor.c **** VXISI2CWrite(0x67,0x89);
2379:VS4210/monitor.c **** VXISI2CWrite(0x68,0xAB);
2380:VS4210/monitor.c **** VXISI2CWrite(0x69,0x88);
2381:VS4210/monitor.c **** VXISI2CWrite(0x6A,0x6E);
2382:VS4210/monitor.c **** VXISI2CWrite(0x6B,0x6E);
2383:VS4210/monitor.c **** VXISI2CWrite(0x6C,0x6E);
2384:VS4210/monitor.c **** VXISI2CWrite(0x6D,0x00);
2385:VS4210/monitor.c **** VXISI2CWrite(0x6E,0x00);
2386:VS4210/monitor.c **** VXISI2CWrite(0x6F,0x00);
2387:VS4210/monitor.c **** VXISI2CWrite(0x70,0x00);
2388:VS4210/monitor.c **** VXISI2CWrite(0x71,0x00);
2389:VS4210/monitor.c **** VXISI2CWrite(0x72,0x00);
2390:VS4210/monitor.c **** VXISI2CWrite(0x73,0x00);
2391:VS4210/monitor.c **** VXISI2CWrite(0x74,0x06);
2392:VS4210/monitor.c **** VXISI2CWrite(0x75,0xFF);
2393:VS4210/monitor.c **** VXISI2CWrite(0x76,0xFF);
2394:VS4210/monitor.c **** VXISI2CWrite(0x77,0xFF);
2395:VS4210/monitor.c **** VXISI2CWrite(0x78,0xFF);
2396:VS4210/monitor.c **** VXISI2CWrite(0x79,0xFF);
2397:VS4210/monitor.c **** VXISI2CWrite(0x7A,0xFF);
2398:VS4210/monitor.c **** VXISI2CWrite(0x7B,0xFF);
2399:VS4210/monitor.c **** VXISI2CWrite(0x7C,0xFF);
2400:VS4210/monitor.c **** VXISI2CWrite(0x7D,0xF0);
2401:VS4210/monitor.c **** VXISI2CWrite(0x7E,0x80);
2402:VS4210/monitor.c **** VXISI2CWrite(0x7F,0x00);
2403:VS4210/monitor.c **** VXISI2CWrite(0x80,0x01);
2404:VS4210/monitor.c **** VXISI2CWrite(0x81,0x15);
2405:VS4210/monitor.c **** VXISI2CWrite(0x82,0x40);
2406:VS4210/monitor.c **** VXISI2CWrite(0x83,0x2D);
2407:VS4210/monitor.c **** VXISI2CWrite(0x84,0x57);
2408:VS4210/monitor.c **** VXISI2CWrite(0x85,0xFD);
2409:VS4210/monitor.c **** VXISI2CWrite(0x86,0x00);
2410:VS4210/monitor.c **** VXISI2CWrite(0x87,0x00);
2411:VS4210/monitor.c **** VXISI2CWrite(0x88,0x00);
2412:VS4210/monitor.c **** VXISI2CWrite(0x89,0x00);
2413:VS4210/monitor.c **** VXISI2CWrite(0x8A,0x00);
2414:VS4210/monitor.c **** VXISI2CWrite(0x8B,0x7E);
2415:VS4210/monitor.c **** VXISI2CWrite(0x8C,0x03);
2416:VS4210/monitor.c **** VXISI2CWrite(0x8D,0x17);
2417:VS4210/monitor.c **** VXISI2CWrite(0x8E,0x8C);
2418:VS4210/monitor.c **** VXISI2CWrite(0x8F,0x00);
2419:VS4210/monitor.c **** VXISI2CWrite(0x90,0xCC);
2420:VS4210/monitor.c **** VXISI2CWrite(0x91,0x41);
2421:VS4210/monitor.c **** VXISI2CWrite(0x92,0xC4);
2422:VS4210/monitor.c **** VXISI2CWrite(0x93,0x84);
2423:VS4210/monitor.c **** VXISI2CWrite(0x94,0x98);
2424:VS4210/monitor.c **** VXISI2CWrite(0x95,0x80);
ARM GAS  /tmp/ccZa3c9M.s 			page 95


2425:VS4210/monitor.c **** VXISI2CWrite(0x96,0x65);
2426:VS4210/monitor.c **** VXISI2CWrite(0x97,0x70);
2427:VS4210/monitor.c **** VXISI2CWrite(0x98,0x29);
2428:VS4210/monitor.c **** VXISI2CWrite(0x99,0x90);
2429:VS4210/monitor.c **** VXISI2CWrite(0x9A,0x80);
2430:VS4210/monitor.c **** VXISI2CWrite(0x9B,0x04);
2431:VS4210/monitor.c **** VXISI2CWrite(0x9C,0x0A);
2432:VS4210/monitor.c **** VXISI2CWrite(0x9D,0x00);
2433:VS4210/monitor.c **** VXISI2CWrite(0x9E,0x04);
2434:VS4210/monitor.c **** VXISI2CWrite(0x9F,0x65);
2435:VS4210/monitor.c **** VXISI2CWrite(0xA0,0x80);
2436:VS4210/monitor.c **** VXISI2CWrite(0xA1,0xD8);
2437:VS4210/monitor.c **** VXISI2CWrite(0xA2,0x98);
2438:VS4210/monitor.c **** VXISI2CWrite(0xA3,0x87);
2439:VS4210/monitor.c **** VXISI2CWrite(0xA4,0x00);
2440:VS4210/monitor.c **** VXISI2CWrite(0xA5,0x80);
2441:VS4210/monitor.c **** VXISI2CWrite(0xA6,0x00);
2442:VS4210/monitor.c **** VXISI2CWrite(0xA7,0x70);
2443:VS4210/monitor.c **** VXISI2CWrite(0xA8,0x40);
2444:VS4210/monitor.c **** VXISI2CWrite(0xA9,0x1E);
2445:VS4210/monitor.c **** VXISI2CWrite(0xAA,0x2C);
2446:VS4210/monitor.c **** VXISI2CWrite(0xAB,0x00);
2447:VS4210/monitor.c **** VXISI2CWrite(0xAC,0x90);
2448:VS4210/monitor.c **** VXISI2CWrite(0xAD,0x65);
2449:VS4210/monitor.c **** VXISI2CWrite(0xAE,0x65);
2450:VS4210/monitor.c **** VXISI2CWrite(0xAF,0x99);
2451:VS4210/monitor.c **** VXISI2CWrite(0xB0,0x00);
2452:VS4210/monitor.c **** VXISI2CWrite(0xB1,0x00);
2453:VS4210/monitor.c **** VXISI2CWrite(0xB2,0x00);
2454:VS4210/monitor.c **** VXISI2CWrite(0xB3,0x00);
2455:VS4210/monitor.c **** VXISI2CWrite(0xB4,0x00);
2456:VS4210/monitor.c **** VXISI2CWrite(0xB5,0x00);
2457:VS4210/monitor.c **** VXISI2CWrite(0xB6,0x00);
2458:VS4210/monitor.c **** VXISI2CWrite(0xB7,0x00);
2459:VS4210/monitor.c **** VXISI2CWrite(0xB8,0x80);
2460:VS4210/monitor.c **** VXISI2CWrite(0xB9,0x00);
2461:VS4210/monitor.c **** VXISI2CWrite(0xBA,0x01);
2462:VS4210/monitor.c **** VXISI2CWrite(0xBB,0x00);
2463:VS4210/monitor.c **** VXISI2CWrite(0xBC,0x90);
2464:VS4210/monitor.c **** VXISI2CWrite(0xBD,0x01);
2465:VS4210/monitor.c **** VXISI2CWrite(0xBE,0x2C);
2466:VS4210/monitor.c **** VXISI2CWrite(0xBF,0x00);
2467:VS4210/monitor.c **** VXISI2CWrite(0xC0,0x00);
2468:VS4210/monitor.c **** VXISI2CWrite(0xC1,0x20);
2469:VS4210/monitor.c **** VXISI2CWrite(0xC2,0x20);
2470:VS4210/monitor.c **** VXISI2CWrite(0xC3,0x20);
2471:VS4210/monitor.c **** VXISI2CWrite(0xC4,0x20);
2472:VS4210/monitor.c **** VXISI2CWrite(0xC5,0x20);
2473:VS4210/monitor.c **** VXISI2CWrite(0xC6,0x00);
2474:VS4210/monitor.c **** VXISI2CWrite(0xC7,0x00);
2475:VS4210/monitor.c **** VXISI2CWrite(0xC8,0x00);
2476:VS4210/monitor.c **** VXISI2CWrite(0xC9,0x00);
2477:VS4210/monitor.c **** VXISI2CWrite(0xCA,0x00);
2478:VS4210/monitor.c **** VXISI2CWrite(0xCB,0x00);
2479:VS4210/monitor.c **** VXISI2CWrite(0xCC,0x00);
2480:VS4210/monitor.c **** VXISI2CWrite(0xCD,0x00);
2481:VS4210/monitor.c **** VXISI2CWrite(0xCE,0x00);
ARM GAS  /tmp/ccZa3c9M.s 			page 96


2482:VS4210/monitor.c **** VXISI2CWrite(0xCF,0x00);
2483:VS4210/monitor.c **** VXISI2CWrite(0xD0,0xFF);
2484:VS4210/monitor.c **** VXISI2CWrite(0xD1,0x3F);
2485:VS4210/monitor.c **** VXISI2CWrite(0xD2,0xC2);
2486:VS4210/monitor.c **** VXISI2CWrite(0xD3,0x3F);
2487:VS4210/monitor.c **** VXISI2CWrite(0xD4,0x00);
2488:VS4210/monitor.c **** VXISI2CWrite(0xD5,0x00);
2489:VS4210/monitor.c **** VXISI2CWrite(0xD6,0x00);
2490:VS4210/monitor.c **** VXISI2CWrite(0xD7,0x0F);
2491:VS4210/monitor.c **** VXISI2CWrite(0xD8,0x00);
2492:VS4210/monitor.c **** VXISI2CWrite(0xD9,0x00);
2493:VS4210/monitor.c **** VXISI2CWrite(0xDA,0x00);
2494:VS4210/monitor.c **** VXISI2CWrite(0xDB,0x00);
2495:VS4210/monitor.c **** VXISI2CWrite(0xDC,0x77);
2496:VS4210/monitor.c **** VXISI2CWrite(0xDD,0x00);
2497:VS4210/monitor.c **** VXISI2CWrite(0xDE,0xB0);
2498:VS4210/monitor.c **** VXISI2CWrite(0xDF,0x00);
2499:VS4210/monitor.c **** VXISI2CWrite(0xE0,0x00);
2500:VS4210/monitor.c **** VXISI2CWrite(0xE1,0x00);
2501:VS4210/monitor.c **** VXISI2CWrite(0xE2,0x00);
2502:VS4210/monitor.c **** VXISI2CWrite(0xE3,0x47);
2503:VS4210/monitor.c **** VXISI2CWrite(0xE4,0x3C);
2504:VS4210/monitor.c **** VXISI2CWrite(0xE5,0x80);
2505:VS4210/monitor.c **** VXISI2CWrite(0xE6,0x00);
2506:VS4210/monitor.c **** VXISI2CWrite(0xE7,0x00);
2507:VS4210/monitor.c **** VXISI2CWrite(0xE8,0x00);
2508:VS4210/monitor.c **** VXISI2CWrite(0xE9,0x00);
2509:VS4210/monitor.c **** VXISI2CWrite(0xEA,0x00);
2510:VS4210/monitor.c **** VXISI2CWrite(0xEB,0x00);
2511:VS4210/monitor.c **** VXISI2CWrite(0xEC,0x88);
2512:VS4210/monitor.c **** VXISI2CWrite(0xED,0x00);
2513:VS4210/monitor.c **** VXISI2CWrite(0xEE,0x00);
2514:VS4210/monitor.c **** VXISI2CWrite(0xEF,0x00);
2515:VS4210/monitor.c **** VXISI2CWrite(0xF0,0x30);
2516:VS4210/monitor.c **** VXISI2CWrite(0xF1,0x43);
2517:VS4210/monitor.c **** VXISI2CWrite(0xF2,0x1F);
2518:VS4210/monitor.c **** VXISI2CWrite(0xF3,0x1F);
2519:VS4210/monitor.c **** VXISI2CWrite(0xF4,0x22);
2520:VS4210/monitor.c **** VXISI2CWrite(0xF5,0x73);
2521:VS4210/monitor.c **** VXISI2CWrite(0xF6,0x53);
2522:VS4210/monitor.c **** VXISI2CWrite(0xF7,0x80);
2523:VS4210/monitor.c **** VXISI2CWrite(0xF8,0x01);
2524:VS4210/monitor.c **** VXISI2CWrite(0xF9,0x01);
2525:VS4210/monitor.c **** VXISI2CWrite(0xFA,0x00);
2526:VS4210/monitor.c **** VXISI2CWrite(0xFB,0x00);
2527:VS4210/monitor.c **** VXISI2CWrite(0xFC,0x00);
2528:VS4210/monitor.c **** VXISI2CWrite(0xFD,0x70);
2529:VS4210/monitor.c **** VXISI2CWrite(0xFE,0x18);
2530:VS4210/monitor.c **** VXISI2CWrite(0xFF,0x07);
2531:VS4210/monitor.c **** 
2532:VS4210/monitor.c **** #else
2533:VS4210/monitor.c **** #if 1
2534:VS4210/monitor.c **** /*
2535:VS4210/monitor.c **** 	VXISI2CWrite(0x08,0x40);
2536:VS4210/monitor.c **** 	
2537:VS4210/monitor.c **** 	VXISI2CWrite(0x0A,0x40);
2538:VS4210/monitor.c **** 	
ARM GAS  /tmp/ccZa3c9M.s 			page 97


2539:VS4210/monitor.c **** 	VXISI2CWrite(0x10,0x80);
2540:VS4210/monitor.c **** 	
2541:VS4210/monitor.c **** 	VXISI2CWrite(0x12,0x74);
2542:VS4210/monitor.c **** 	VXISI2CWrite(0x13,0x80);
2543:VS4210/monitor.c **** 	VXISI2CWrite(0x14,0x38);
2544:VS4210/monitor.c **** 	
2545:VS4210/monitor.c **** 	VXISI2CWrite(0x19,0x00);
2546:VS4210/monitor.c **** */
2547:VS4210/monitor.c **** 
2548:VS4210/monitor.c **** 	VXISI2CWrite(0x1A,0x20);
2549:VS4210/monitor.c **** /*
2550:VS4210/monitor.c **** 	VXISI2CWrite(0x1B,0x30);
2551:VS4210/monitor.c **** 	
2552:VS4210/monitor.c **** 	VXISI2CWrite(0x1F,0xA4);
2553:VS4210/monitor.c **** 	VXISI2CWrite(0x20,0x50);
2554:VS4210/monitor.c **** 	VXISI2CWrite(0x21,0xE2);
2555:VS4210/monitor.c **** 	VXISI2CWrite(0x22,0x87);
2556:VS4210/monitor.c **** 	VXISI2CWrite(0x23,0x98);
2557:VS4210/monitor.c **** 	VXISI2CWrite(0x24,0x80);
2558:VS4210/monitor.c **** 	VXISI2CWrite(0x25,0x44);
2559:VS4210/monitor.c **** 	
2560:VS4210/monitor.c **** 	VXISI2CWrite(0x27,0x38);
2561:VS4210/monitor.c **** 	
2562:VS4210/monitor.c **** 	VXISI2CWrite(0x2E,0x47);
2563:VS4210/monitor.c **** 	VXISI2CWrite(0x2F,0x80);
2564:VS4210/monitor.c **** 	
2565:VS4210/monitor.c **** 	VXISI2CWrite(0x3A,0x1D);
2566:VS4210/monitor.c **** 	
2567:VS4210/monitor.c **** 	VXISI2CWrite(0x45,0x00);
2568:VS4210/monitor.c **** 
2569:VS4210/monitor.c **** 	VXISI2CWrite(0x58,0x00);
2570:VS4210/monitor.c **** 	
2571:VS4210/monitor.c **** 	VXISI2CWrite(0x69,0x88);
2572:VS4210/monitor.c **** */	
2573:VS4210/monitor.c **** 	VXISI2CWrite(0x74,0x06);
2574:VS4210/monitor.c **** 
2575:VS4210/monitor.c **** 	VXISI2CWrite(0x80,0x01);
2576:VS4210/monitor.c **** 	VXISI2CWrite(0x81,0x15);
2577:VS4210/monitor.c **** 	
2578:VS4210/monitor.c **** 	VXISI2CWrite(0x83,0x2D);
2579:VS4210/monitor.c **** 	
2580:VS4210/monitor.c **** 	VXISI2CWrite(0x86,0x00);
2581:VS4210/monitor.c **** 	VXISI2CWrite(0x87,0x00);
2582:VS4210/monitor.c **** 	VXISI2CWrite(0x88,0x00);
2583:VS4210/monitor.c **** 	VXISI2CWrite(0x89,0x00);
2584:VS4210/monitor.c **** 	
2585:VS4210/monitor.c **** 	VXISI2CWrite(0x8D,0x17);
2586:VS4210/monitor.c **** /*
2587:VS4210/monitor.c **** 	VXISI2CWrite(0x9A,0x80);
2588:VS4210/monitor.c **** 	
2589:VS4210/monitor.c **** 	
2590:VS4210/monitor.c **** 	VXISI2CWrite(0xB8,0x80);
2591:VS4210/monitor.c **** 
2592:VS4210/monitor.c **** 	VXISI2CWrite(0xBA,0x01);
2593:VS4210/monitor.c **** 	
2594:VS4210/monitor.c **** 	VXISI2CWrite(0xBE,0x2C);
2595:VS4210/monitor.c **** 	
ARM GAS  /tmp/ccZa3c9M.s 			page 98


2596:VS4210/monitor.c **** 	VXISI2CWrite(0xD7,0x0F);
2597:VS4210/monitor.c **** 	
2598:VS4210/monitor.c **** 	VXISI2CWrite(0xDE,0xB0);
2599:VS4210/monitor.c **** 	
2600:VS4210/monitor.c **** 	VXISI2CWrite(0xF0,0x30);
2601:VS4210/monitor.c **** 	
2602:VS4210/monitor.c **** 	VXISI2CWrite(0xFD,0x70);
2603:VS4210/monitor.c **** 	VXISI2CWrite(0xFE,0x18);
2604:VS4210/monitor.c **** 	VXISI2CWrite(0xFF,0x07);
2605:VS4210/monitor.c **** */
2606:VS4210/monitor.c **** 
2607:VS4210/monitor.c **** 
2608:VS4210/monitor.c **** #else
2609:VS4210/monitor.c **** 	VXISI2CWrite(0x08,0x40);
2610:VS4210/monitor.c **** 	
2611:VS4210/monitor.c **** 	VXISI2CWrite(0x0A,0x40);
2612:VS4210/monitor.c **** 	
2613:VS4210/monitor.c **** 	VXISI2CWrite(0x10,0x80);
2614:VS4210/monitor.c **** 	
2615:VS4210/monitor.c **** 	VXISI2CWrite(0x12,0x74);
2616:VS4210/monitor.c **** 	VXISI2CWrite(0x13,0x80);
2617:VS4210/monitor.c **** 	VXISI2CWrite(0x14,0x38);
2618:VS4210/monitor.c **** 	
2619:VS4210/monitor.c **** 	VXISI2CWrite(0x19,0x00);
2620:VS4210/monitor.c **** 	VXISI2CWrite(0x1A,0x20);
2621:VS4210/monitor.c **** 	VXISI2CWrite(0x1B,0x30);
2622:VS4210/monitor.c **** 	
2623:VS4210/monitor.c **** 	VXISI2CWrite(0x1F,0xA4);
2624:VS4210/monitor.c **** 	VXISI2CWrite(0x20,0x50);
2625:VS4210/monitor.c **** 	VXISI2CWrite(0x21,0xE2);
2626:VS4210/monitor.c **** 	VXISI2CWrite(0x22,0x87);
2627:VS4210/monitor.c **** 	VXISI2CWrite(0x23,0x98);
2628:VS4210/monitor.c **** 	VXISI2CWrite(0x24,0x80);
2629:VS4210/monitor.c **** 	VXISI2CWrite(0x25,0x44);
2630:VS4210/monitor.c **** 	
2631:VS4210/monitor.c **** 	VXISI2CWrite(0x27,0x38);
2632:VS4210/monitor.c **** 	
2633:VS4210/monitor.c **** //	VXISI2CWrite(0x2E,0x47);
2634:VS4210/monitor.c **** //	VXISI2CWrite(0x2F,0x80);
2635:VS4210/monitor.c **** 	
2636:VS4210/monitor.c **** //	VXISI2CWrite(0x3A,0x1D);
2637:VS4210/monitor.c **** 	
2638:VS4210/monitor.c **** //	VXISI2CWrite(0x45,0x00);
2639:VS4210/monitor.c **** 	
2640:VS4210/monitor.c **** //	VXISI2CWrite(0x58,0x00);
2641:VS4210/monitor.c **** 	
2642:VS4210/monitor.c **** //	VXISI2CWrite(0x69,0x88);
2643:VS4210/monitor.c **** 	
2644:VS4210/monitor.c **** 	VXISI2CWrite(0x74,0x06);
2645:VS4210/monitor.c **** 
2646:VS4210/monitor.c **** 	VXISI2CWrite(0x80,0x01);
2647:VS4210/monitor.c **** 	VXISI2CWrite(0x81,0x15);
2648:VS4210/monitor.c **** 	
2649:VS4210/monitor.c **** 	VXISI2CWrite(0x83,0x2D);
2650:VS4210/monitor.c **** 	
2651:VS4210/monitor.c **** //	VXISI2CWrite(0x86,0x00);
2652:VS4210/monitor.c **** //	VXISI2CWrite(0x87,0x00);
ARM GAS  /tmp/ccZa3c9M.s 			page 99


2653:VS4210/monitor.c **** //	VXISI2CWrite(0x88,0x00);
2654:VS4210/monitor.c **** //	VXISI2CWrite(0x89,0x00);
2655:VS4210/monitor.c **** 	
2656:VS4210/monitor.c **** 	VXISI2CWrite(0x8D,0x17);
2657:VS4210/monitor.c **** 
2658:VS4210/monitor.c **** //	VXISI2CWrite(0x9A,0x80);
2659:VS4210/monitor.c **** 	
2660:VS4210/monitor.c **** 	
2661:VS4210/monitor.c **** //	VXISI2CWrite(0xB8,0x80);
2662:VS4210/monitor.c **** 	/*
2663:VS4210/monitor.c **** 	VXISI2CWrite(0xBA,0x01);
2664:VS4210/monitor.c **** 	
2665:VS4210/monitor.c **** 	VXISI2CWrite(0xBE,0x2C);
2666:VS4210/monitor.c **** 	
2667:VS4210/monitor.c **** 	VXISI2CWrite(0xD7,0x0F);
2668:VS4210/monitor.c **** 	
2669:VS4210/monitor.c **** 	VXISI2CWrite(0xDE,0xB0);
2670:VS4210/monitor.c **** 	
2671:VS4210/monitor.c **** 	VXISI2CWrite(0xF0,0x30);
2672:VS4210/monitor.c **** 	
2673:VS4210/monitor.c **** 	VXISI2CWrite(0xFD,0x70);
2674:VS4210/monitor.c **** 	VXISI2CWrite(0xFE,0x18);
2675:VS4210/monitor.c **** 	VXISI2CWrite(0xFF,0x07);
2676:VS4210/monitor.c **** */
2677:VS4210/monitor.c ****  #endif
2678:VS4210/monitor.c **** #endif	
2679:VS4210/monitor.c **** 
2680:VS4210/monitor.c **** 
2681:VS4210/monitor.c **** }
 2903              		.loc 1 2681 0
 2904 0008 08BD     		pop	{r3, pc}
 2905              	.L129:
 2906 000a 00BF     		.align	2
 2907              	.L128:
 2908 000c 00000000 		.word	.LC24
 2909              		.cfi_endproc
 2910              	.LFE95:
 2912              		.section	.text.Monitor,"ax",%progbits
 2913              		.align	1
 2914              		.global	Monitor
 2915              		.syntax unified
 2916              		.thumb
 2917              		.thumb_func
 2918              		.fpu softvfp
 2920              	Monitor:
 2921              	.LFB92:
 770:VS4210/monitor.c **** 
 2922              		.loc 1 770 0
 2923              		.cfi_startproc
 2924              		@ args = 0, pretend = 0, frame = 0
 2925              		@ frame_needed = 0, uses_anonymous_args = 0
 2926 0000 38B5     		push	{r3, r4, r5, lr}
 2927              	.LCFI19:
 2928              		.cfi_def_cfa_offset 16
 2929              		.cfi_offset 3, -16
 2930              		.cfi_offset 4, -12
 2931              		.cfi_offset 5, -8
ARM GAS  /tmp/ccZa3c9M.s 			page 100


 2932              		.cfi_offset 14, -4
 774:VS4210/monitor.c **** 
 2933              		.loc 1 774 0
 2934 0002 FFF7FEFF 		bl	MonGetCommand
 2935              	.LVL380:
 2936 0006 00B9     		cbnz	r0, .L192
 2937              	.L130:
1872:VS4210/monitor.c **** #endif
 2938              		.loc 1 1872 0
 2939 0008 38BD     		pop	{r3, r4, r5, pc}
 2940              	.L192:
 791:VS4210/monitor.c **** 
 2941              		.loc 1 791 0
 2942 000a 8A4B     		ldr	r3, .L210
 2943 000c 1C68     		ldr	r4, [r3]
 2944 000e 8A49     		ldr	r1, .L210+4
 2945 0010 2046     		mov	r0, r4
 2946 0012 FFF7FEFF 		bl	stricmp
 2947              	.LVL381:
 2948 0016 0028     		cmp	r0, #0
 2949 0018 40F09A80 		bne	.L132
 800:VS4210/monitor.c **** 	{
 2950              		.loc 1 800 0
 2951 001c 874B     		ldr	r3, .L210+8
 2952 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2953 0020 A02B     		cmp	r3, #160
 2954 0022 0BD0     		beq	.L193
 807:VS4210/monitor.c **** {
 2955              		.loc 1 807 0
 2956 0024 402B     		cmp	r3, #64
 2957 0026 24D0     		beq	.L194
 813:VS4210/monitor.c **** {
 2958              		.loc 1 813 0
 2959 0028 122B     		cmp	r3, #18
 2960 002a 3DD0     		beq	.L195
 838:VS4210/monitor.c **** 	{
 2961              		.loc 1 838 0
 2962 002c 882B     		cmp	r3, #136
 2963 002e 56D0     		beq	.L196
 845:VS4210/monitor.c **** 	{
 2964              		.loc 1 845 0
 2965 0030 902B     		cmp	r3, #144
 2966 0032 6FD0     		beq	.L197
 854:VS4210/monitor.c **** 
 2967              		.loc 1 854 0
 2968 0034 8248     		ldr	r0, .L210+12
 2969 0036 FFF7FEFF 		bl	Printf
 2970              	.LVL382:
 2971 003a 8EE0     		b	.L134
 2972              	.L193:
 802:VS4210/monitor.c **** 	   //tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2])); 	
 2973              		.loc 1 802 0
 2974 003c 7D4C     		ldr	r4, .L210
 2975 003e 6068     		ldr	r0, [r4, #4]
 2976 0040 FFF7FEFF 		bl	Asc2Bin
 2977              	.LVL383:
 2978 0044 0546     		mov	r5, r0
ARM GAS  /tmp/ccZa3c9M.s 			page 101


 2979 0046 A068     		ldr	r0, [r4, #8]
 2980 0048 FFF7FEFF 		bl	Asc2Bin
 2981              	.LVL384:
 2982 004c 0146     		mov	r1, r0
 2983 004e 2846     		mov	r0, r5
 2984 0050 FFF7FEFF 		bl	WriteEEP
 2985              	.LVL385:
 804:VS4210/monitor.c **** 	  Printf("\r\nEEPROM Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 2986              		.loc 1 804 0
 2987 0054 6068     		ldr	r0, [r4, #4]
 2988 0056 FFF7FEFF 		bl	Asc2Bin
 2989              	.LVL386:
 2990 005a FFF7FEFF 		bl	ReadEEP
 2991              	.LVL387:
 2992 005e 0546     		mov	r5, r0
 2993              	.LVL388:
 805:VS4210/monitor.c **** 	}
 2994              		.loc 1 805 0
 2995 0060 6068     		ldr	r0, [r4, #4]
 2996 0062 FFF7FEFF 		bl	Asc2Bin
 2997              	.LVL389:
 2998 0066 2A46     		mov	r2, r5
 2999 0068 0146     		mov	r1, r0
 3000 006a 7648     		ldr	r0, .L210+16
 3001 006c FFF7FEFF 		bl	Printf
 3002              	.LVL390:
 3003 0070 73E0     		b	.L134
 3004              	.LVL391:
 3005              	.L194:
 809:VS4210/monitor.c **** 	 ret= VXISI2CRead(Asc2Bin(argv[1]));	
 3006              		.loc 1 809 0
 3007 0072 704C     		ldr	r4, .L210
 3008 0074 6068     		ldr	r0, [r4, #4]
 3009 0076 FFF7FEFF 		bl	Asc2Bin
 3010              	.LVL392:
 3011 007a 0546     		mov	r5, r0
 3012 007c A068     		ldr	r0, [r4, #8]
 3013 007e FFF7FEFF 		bl	Asc2Bin
 3014              	.LVL393:
 3015 0082 0146     		mov	r1, r0
 3016 0084 2846     		mov	r0, r5
 3017 0086 FFF7FEFF 		bl	VXISI2CWrite
 3018              	.LVL394:
 810:VS4210/monitor.c **** 	   Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3019              		.loc 1 810 0
 3020 008a 6068     		ldr	r0, [r4, #4]
 3021 008c FFF7FEFF 		bl	Asc2Bin
 3022              	.LVL395:
 3023 0090 FFF7FEFF 		bl	VXISI2CRead
 3024              	.LVL396:
 3025 0094 0546     		mov	r5, r0
 3026              	.LVL397:
 811:VS4210/monitor.c **** }
 3027              		.loc 1 811 0
 3028 0096 6068     		ldr	r0, [r4, #4]
 3029 0098 FFF7FEFF 		bl	Asc2Bin
 3030              	.LVL398:
ARM GAS  /tmp/ccZa3c9M.s 			page 102


 3031 009c 2A46     		mov	r2, r5
 3032 009e 0146     		mov	r1, r0
 3033 00a0 6948     		ldr	r0, .L210+20
 3034 00a2 FFF7FEFF 		bl	Printf
 3035              	.LVL399:
 3036 00a6 58E0     		b	.L134
 3037              	.LVL400:
 3038              	.L195:
 815:VS4210/monitor.c **** 	 ret= VS8812Read(Asc2Bin(argv[1]));	
 3039              		.loc 1 815 0
 3040 00a8 624C     		ldr	r4, .L210
 3041 00aa 6068     		ldr	r0, [r4, #4]
 3042 00ac FFF7FEFF 		bl	Asc2Bin
 3043              	.LVL401:
 3044 00b0 0546     		mov	r5, r0
 3045 00b2 A068     		ldr	r0, [r4, #8]
 3046 00b4 FFF7FEFF 		bl	Asc2Bin
 3047              	.LVL402:
 3048 00b8 0146     		mov	r1, r0
 3049 00ba 2846     		mov	r0, r5
 3050 00bc FFF7FEFF 		bl	VS8812Write
 3051              	.LVL403:
 816:VS4210/monitor.c **** 	   Printf("\r\nVS8812 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3052              		.loc 1 816 0
 3053 00c0 6068     		ldr	r0, [r4, #4]
 3054 00c2 FFF7FEFF 		bl	Asc2Bin
 3055              	.LVL404:
 3056 00c6 FFF7FEFF 		bl	VS8812Read
 3057              	.LVL405:
 3058 00ca 0546     		mov	r5, r0
 3059              	.LVL406:
 817:VS4210/monitor.c **** }
 3060              		.loc 1 817 0
 3061 00cc 6068     		ldr	r0, [r4, #4]
 3062 00ce FFF7FEFF 		bl	Asc2Bin
 3063              	.LVL407:
 3064 00d2 2A46     		mov	r2, r5
 3065 00d4 0146     		mov	r1, r0
 3066 00d6 5D48     		ldr	r0, .L210+24
 3067 00d8 FFF7FEFF 		bl	Printf
 3068              	.LVL408:
 3069 00dc 3DE0     		b	.L134
 3070              	.LVL409:
 3071              	.L196:
 840:VS4210/monitor.c **** 	ret= tp28xx_byte_read(Asc2Bin(argv[1]));		  
 3072              		.loc 1 840 0
 3073 00de 554C     		ldr	r4, .L210
 3074 00e0 6068     		ldr	r0, [r4, #4]
 3075 00e2 FFF7FEFF 		bl	Asc2Bin
 3076              	.LVL410:
 3077 00e6 0546     		mov	r5, r0
 3078 00e8 A068     		ldr	r0, [r4, #8]
 3079 00ea FFF7FEFF 		bl	Asc2Bin
 3080              	.LVL411:
 3081 00ee 0146     		mov	r1, r0
 3082 00f0 2846     		mov	r0, r5
 3083 00f2 FFF7FEFF 		bl	tp28xx_byte_write
ARM GAS  /tmp/ccZa3c9M.s 			page 103


 3084              	.LVL412:
 841:VS4210/monitor.c **** 	 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3085              		.loc 1 841 0
 3086 00f6 6068     		ldr	r0, [r4, #4]
 3087 00f8 FFF7FEFF 		bl	Asc2Bin
 3088              	.LVL413:
 3089 00fc FFF7FEFF 		bl	tp28xx_byte_read
 3090              	.LVL414:
 3091 0100 0546     		mov	r5, r0
 3092              	.LVL415:
 842:VS4210/monitor.c **** 	}
 3093              		.loc 1 842 0
 3094 0102 6068     		ldr	r0, [r4, #4]
 3095 0104 FFF7FEFF 		bl	Asc2Bin
 3096              	.LVL416:
 3097 0108 2A46     		mov	r2, r5
 3098 010a 0146     		mov	r1, r0
 3099 010c 5048     		ldr	r0, .L210+28
 3100 010e FFF7FEFF 		bl	Printf
 3101              	.LVL417:
 3102 0112 22E0     		b	.L134
 3103              	.LVL418:
 3104              	.L197:
 847:VS4210/monitor.c **** 	HDMIRX_WriteI2C_Byte( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );	
 3105              		.loc 1 847 0
 3106 0114 4F4B     		ldr	r3, .L210+32
 3107 0116 0022     		movs	r2, #0
 3108 0118 1A70     		strb	r2, [r3]
 848:VS4210/monitor.c **** 	ret= HDMIRX_ReadI2C_Byte(Asc2Bin(argv[1]));		  
 3109              		.loc 1 848 0
 3110 011a 464C     		ldr	r4, .L210
 3111 011c 6068     		ldr	r0, [r4, #4]
 3112 011e FFF7FEFF 		bl	Asc2Bin
 3113              	.LVL419:
 3114 0122 0546     		mov	r5, r0
 3115 0124 A068     		ldr	r0, [r4, #8]
 3116 0126 FFF7FEFF 		bl	Asc2Bin
 3117              	.LVL420:
 3118 012a 0146     		mov	r1, r0
 3119 012c 2846     		mov	r0, r5
 3120 012e FFF7FEFF 		bl	HDMIRX_WriteI2C_Byte
 3121              	.LVL421:
 849:VS4210/monitor.c **** 	 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3122              		.loc 1 849 0
 3123 0132 6068     		ldr	r0, [r4, #4]
 3124 0134 FFF7FEFF 		bl	Asc2Bin
 3125              	.LVL422:
 3126 0138 FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 3127              	.LVL423:
 3128 013c 0546     		mov	r5, r0
 3129              	.LVL424:
 850:VS4210/monitor.c **** 	}
 3130              		.loc 1 850 0
 3131 013e 6068     		ldr	r0, [r4, #4]
 3132 0140 FFF7FEFF 		bl	Asc2Bin
 3133              	.LVL425:
 3134 0144 2A46     		mov	r2, r5
ARM GAS  /tmp/ccZa3c9M.s 			page 104


 3135 0146 0146     		mov	r1, r0
 3136 0148 4348     		ldr	r0, .L210+36
 3137 014a FFF7FEFF 		bl	Printf
 3138              	.LVL426:
 3139 014e 04E0     		b	.L134
 3140              	.LVL427:
 3141              	.L132:
 877:VS4210/monitor.c **** 		indirect=0;
 3142              		.loc 1 877 0
 3143 0150 4249     		ldr	r1, .L210+40
 3144 0152 2046     		mov	r0, r4
 3145 0154 FFF7FEFF 		bl	stricmp
 3146              	.LVL428:
 3147 0158 10B9     		cbnz	r0, .L198
 3148              	.L134:
1869:VS4210/monitor.c **** 
 3149              		.loc 1 1869 0
 3150 015a FFF7FEFF 		bl	Prompt
 3151              	.LVL429:
 3152 015e 53E7     		b	.L130
 3153              	.L198:
 892:VS4210/monitor.c **** 		//MonReadI2C();
 3154              		.loc 1 892 0
 3155 0160 3F49     		ldr	r1, .L210+44
 3156 0162 2046     		mov	r0, r4
 3157 0164 FFF7FEFF 		bl	stricmp
 3158              	.LVL430:
 3159 0168 0028     		cmp	r0, #0
 3160 016a 40F08180 		bne	.L139
 900:VS4210/monitor.c **** 		{
 3161              		.loc 1 900 0
 3162 016e 334B     		ldr	r3, .L210+8
 3163 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3164 0172 A02B     		cmp	r3, #160
 3165 0174 0BD0     		beq	.L199
 905:VS4210/monitor.c **** 		{
 3166              		.loc 1 905 0
 3167 0176 402B     		cmp	r3, #64
 3168 0178 19D0     		beq	.L200
 910:VS4210/monitor.c **** 		{
 3169              		.loc 1 910 0
 3170 017a 122B     		cmp	r3, #18
 3171 017c 27D0     		beq	.L201
 927:VS4210/monitor.c **** 		{	
 3172              		.loc 1 927 0
 3173 017e 882B     		cmp	r3, #136
 3174 0180 35D0     		beq	.L202
 932:VS4210/monitor.c **** 			{
 3175              		.loc 1 932 0
 3176 0182 902B     		cmp	r3, #144
 3177 0184 43D0     		beq	.L203
 940:VS4210/monitor.c **** 		}
 3178              		.loc 1 940 0
 3179 0186 2E48     		ldr	r0, .L210+12
 3180 0188 FFF7FEFF 		bl	Printf
 3181              	.LVL431:
 3182 018c E5E7     		b	.L134
ARM GAS  /tmp/ccZa3c9M.s 			page 105


 3183              	.L199:
 902:VS4210/monitor.c **** 		Printf("\r\nEEPROM  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3184              		.loc 1 902 0
 3185 018e 294C     		ldr	r4, .L210
 3186 0190 6068     		ldr	r0, [r4, #4]
 3187 0192 FFF7FEFF 		bl	Asc2Bin
 3188              	.LVL432:
 3189 0196 FFF7FEFF 		bl	ReadEEP
 3190              	.LVL433:
 3191 019a 0546     		mov	r5, r0
 3192              	.LVL434:
 903:VS4210/monitor.c **** 		}
 3193              		.loc 1 903 0
 3194 019c 6068     		ldr	r0, [r4, #4]
 3195 019e FFF7FEFF 		bl	Asc2Bin
 3196              	.LVL435:
 3197 01a2 2A46     		mov	r2, r5
 3198 01a4 0146     		mov	r1, r0
 3199 01a6 2F48     		ldr	r0, .L210+48
 3200 01a8 FFF7FEFF 		bl	Printf
 3201              	.LVL436:
 3202 01ac D5E7     		b	.L134
 3203              	.LVL437:
 3204              	.L200:
 907:VS4210/monitor.c **** 		 Printf("\r\nVS4210  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3205              		.loc 1 907 0
 3206 01ae 214C     		ldr	r4, .L210
 3207 01b0 6068     		ldr	r0, [r4, #4]
 3208 01b2 FFF7FEFF 		bl	Asc2Bin
 3209              	.LVL438:
 3210 01b6 FFF7FEFF 		bl	VXISI2CRead
 3211              	.LVL439:
 3212 01ba 0546     		mov	r5, r0
 3213              	.LVL440:
 908:VS4210/monitor.c **** 		}
 3214              		.loc 1 908 0
 3215 01bc 6068     		ldr	r0, [r4, #4]
 3216 01be FFF7FEFF 		bl	Asc2Bin
 3217              	.LVL441:
 3218 01c2 2A46     		mov	r2, r5
 3219 01c4 0146     		mov	r1, r0
 3220 01c6 2848     		ldr	r0, .L210+52
 3221 01c8 FFF7FEFF 		bl	Printf
 3222              	.LVL442:
 3223 01cc C5E7     		b	.L134
 3224              	.LVL443:
 3225              	.L201:
 912:VS4210/monitor.c **** 		 Printf("\r\nVS8812  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3226              		.loc 1 912 0
 3227 01ce 194C     		ldr	r4, .L210
 3228 01d0 6068     		ldr	r0, [r4, #4]
 3229 01d2 FFF7FEFF 		bl	Asc2Bin
 3230              	.LVL444:
 3231 01d6 FFF7FEFF 		bl	VS8812Read
 3232              	.LVL445:
 3233 01da 0546     		mov	r5, r0
 3234              	.LVL446:
ARM GAS  /tmp/ccZa3c9M.s 			page 106


 913:VS4210/monitor.c **** 		}
 3235              		.loc 1 913 0
 3236 01dc 6068     		ldr	r0, [r4, #4]
 3237 01de FFF7FEFF 		bl	Asc2Bin
 3238              	.LVL447:
 3239 01e2 2A46     		mov	r2, r5
 3240 01e4 0146     		mov	r1, r0
 3241 01e6 2148     		ldr	r0, .L210+56
 3242 01e8 FFF7FEFF 		bl	Printf
 3243              	.LVL448:
 3244 01ec B5E7     		b	.L134
 3245              	.LVL449:
 3246              	.L202:
 929:VS4210/monitor.c **** 		 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3247              		.loc 1 929 0
 3248 01ee 114C     		ldr	r4, .L210
 3249 01f0 6068     		ldr	r0, [r4, #4]
 3250 01f2 FFF7FEFF 		bl	Asc2Bin
 3251              	.LVL450:
 3252 01f6 FFF7FEFF 		bl	tp28xx_byte_read
 3253              	.LVL451:
 3254 01fa 0546     		mov	r5, r0
 3255              	.LVL452:
 930:VS4210/monitor.c **** 		}
 3256              		.loc 1 930 0
 3257 01fc 6068     		ldr	r0, [r4, #4]
 3258 01fe FFF7FEFF 		bl	Asc2Bin
 3259              	.LVL453:
 3260 0202 2A46     		mov	r2, r5
 3261 0204 0146     		mov	r1, r0
 3262 0206 1248     		ldr	r0, .L210+28
 3263 0208 FFF7FEFF 		bl	Printf
 3264              	.LVL454:
 3265 020c A5E7     		b	.L134
 3266              	.LVL455:
 3267              	.L203:
 934:VS4210/monitor.c **** 			ret= HDMIRX_ReadI2C_Byte(Asc2Bin(argv[1]));	  
 3268              		.loc 1 934 0
 3269 020e 114B     		ldr	r3, .L210+32
 3270 0210 0022     		movs	r2, #0
 3271 0212 1A70     		strb	r2, [r3]
 935:VS4210/monitor.c **** 			 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3272              		.loc 1 935 0
 3273 0214 074C     		ldr	r4, .L210
 3274 0216 6068     		ldr	r0, [r4, #4]
 3275 0218 FFF7FEFF 		bl	Asc2Bin
 3276              	.LVL456:
 3277 021c FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 3278              	.LVL457:
 3279 0220 0546     		mov	r5, r0
 3280              	.LVL458:
 936:VS4210/monitor.c **** 			}
 3281              		.loc 1 936 0
 3282 0222 6068     		ldr	r0, [r4, #4]
 3283 0224 FFF7FEFF 		bl	Asc2Bin
 3284              	.LVL459:
 3285 0228 2A46     		mov	r2, r5
ARM GAS  /tmp/ccZa3c9M.s 			page 107


 3286 022a 0146     		mov	r1, r0
 3287 022c 0A48     		ldr	r0, .L210+36
 3288 022e FFF7FEFF 		bl	Printf
 3289              	.LVL460:
 3290 0232 92E7     		b	.L134
 3291              	.L211:
 3292              		.align	2
 3293              	.L210:
 3294 0234 00000000 		.word	argv
 3295 0238 00000000 		.word	.LC25
 3296 023c 00000000 		.word	.LANCHOR4
 3297 0240 BC000000 		.word	.LC31
 3298 0244 04000000 		.word	.LC26
 3299 0248 28000000 		.word	.LC27
 3300 024c 4C000000 		.word	.LC28
 3301 0250 70000000 		.word	.LC29
 3302 0254 00000000 		.word	gHDMI_Index
 3303 0258 94000000 		.word	.LC30
 3304 025c D0000000 		.word	.LC32
 3305 0260 D4000000 		.word	.LC33
 3306 0264 D8000000 		.word	.LC34
 3307 0268 FC000000 		.word	.LC35
 3308 026c 20010000 		.word	.LC36
 3309              	.LVL461:
 3310              	.L139:
 957:VS4210/monitor.c **** 			//MonReadI2C();
 3311              		.loc 1 957 0
 3312 0270 FC49     		ldr	r1, .L212
 3313 0272 2046     		mov	r0, r4
 3314 0274 FFF7FEFF 		bl	stricmp
 3315              	.LVL462:
 3316 0278 0028     		cmp	r0, #0
 3317 027a 40F06F82 		bne	.L145
 962:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x03));
 3318              		.loc 1 962 0
 3319 027e 0220     		movs	r0, #2
 3320 0280 FFF7FEFF 		bl	VXISI2CRead
 3321              	.LVL463:
 3322 0284 F84C     		ldr	r4, .L212+4
 3323 0286 0146     		mov	r1, r0
 3324 0288 2046     		mov	r0, r4
 3325 028a FFF7FEFF 		bl	Printf
 3326              	.LVL464:
 963:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x04));
 3327              		.loc 1 963 0
 3328 028e 0320     		movs	r0, #3
 3329 0290 FFF7FEFF 		bl	VXISI2CRead
 3330              	.LVL465:
 3331 0294 0146     		mov	r1, r0
 3332 0296 2046     		mov	r0, r4
 3333 0298 FFF7FEFF 		bl	Printf
 3334              	.LVL466:
 964:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x05));
 3335              		.loc 1 964 0
 3336 029c 0420     		movs	r0, #4
 3337 029e FFF7FEFF 		bl	VXISI2CRead
 3338              	.LVL467:
ARM GAS  /tmp/ccZa3c9M.s 			page 108


 3339 02a2 0146     		mov	r1, r0
 3340 02a4 2046     		mov	r0, r4
 3341 02a6 FFF7FEFF 		bl	Printf
 3342              	.LVL468:
 965:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x06));
 3343              		.loc 1 965 0
 3344 02aa 0520     		movs	r0, #5
 3345 02ac FFF7FEFF 		bl	VXISI2CRead
 3346              	.LVL469:
 3347 02b0 0146     		mov	r1, r0
 3348 02b2 2046     		mov	r0, r4
 3349 02b4 FFF7FEFF 		bl	Printf
 3350              	.LVL470:
 966:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x07));
 3351              		.loc 1 966 0
 3352 02b8 0620     		movs	r0, #6
 3353 02ba FFF7FEFF 		bl	VXISI2CRead
 3354              	.LVL471:
 3355 02be 0146     		mov	r1, r0
 3356 02c0 2046     		mov	r0, r4
 3357 02c2 FFF7FEFF 		bl	Printf
 3358              	.LVL472:
 967:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x08));
 3359              		.loc 1 967 0
 3360 02c6 0720     		movs	r0, #7
 3361 02c8 FFF7FEFF 		bl	VXISI2CRead
 3362              	.LVL473:
 3363 02cc 0146     		mov	r1, r0
 3364 02ce 2046     		mov	r0, r4
 3365 02d0 FFF7FEFF 		bl	Printf
 3366              	.LVL474:
 968:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x09));
 3367              		.loc 1 968 0
 3368 02d4 0820     		movs	r0, #8
 3369 02d6 FFF7FEFF 		bl	VXISI2CRead
 3370              	.LVL475:
 3371 02da 0146     		mov	r1, r0
 3372 02dc 2046     		mov	r0, r4
 3373 02de FFF7FEFF 		bl	Printf
 3374              	.LVL476:
 969:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0A));
 3375              		.loc 1 969 0
 3376 02e2 0920     		movs	r0, #9
 3377 02e4 FFF7FEFF 		bl	VXISI2CRead
 3378              	.LVL477:
 3379 02e8 0146     		mov	r1, r0
 3380 02ea 2046     		mov	r0, r4
 3381 02ec FFF7FEFF 		bl	Printf
 3382              	.LVL478:
 970:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0B));
 3383              		.loc 1 970 0
 3384 02f0 0A20     		movs	r0, #10
 3385 02f2 FFF7FEFF 		bl	VXISI2CRead
 3386              	.LVL479:
 3387 02f6 0146     		mov	r1, r0
 3388 02f8 2046     		mov	r0, r4
 3389 02fa FFF7FEFF 		bl	Printf
ARM GAS  /tmp/ccZa3c9M.s 			page 109


 3390              	.LVL480:
 971:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0C));
 3391              		.loc 1 971 0
 3392 02fe 0B20     		movs	r0, #11
 3393 0300 FFF7FEFF 		bl	VXISI2CRead
 3394              	.LVL481:
 3395 0304 0146     		mov	r1, r0
 3396 0306 2046     		mov	r0, r4
 3397 0308 FFF7FEFF 		bl	Printf
 3398              	.LVL482:
 972:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0D));
 3399              		.loc 1 972 0
 3400 030c 0C20     		movs	r0, #12
 3401 030e FFF7FEFF 		bl	VXISI2CRead
 3402              	.LVL483:
 3403 0312 0146     		mov	r1, r0
 3404 0314 2046     		mov	r0, r4
 3405 0316 FFF7FEFF 		bl	Printf
 3406              	.LVL484:
 973:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x10));
 3407              		.loc 1 973 0
 3408 031a 0D20     		movs	r0, #13
 3409 031c FFF7FEFF 		bl	VXISI2CRead
 3410              	.LVL485:
 3411 0320 0146     		mov	r1, r0
 3412 0322 2046     		mov	r0, r4
 3413 0324 FFF7FEFF 		bl	Printf
 3414              	.LVL486:
 974:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x11));
 3415              		.loc 1 974 0
 3416 0328 1020     		movs	r0, #16
 3417 032a FFF7FEFF 		bl	VXISI2CRead
 3418              	.LVL487:
 3419 032e 0146     		mov	r1, r0
 3420 0330 2046     		mov	r0, r4
 3421 0332 FFF7FEFF 		bl	Printf
 3422              	.LVL488:
 975:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x15));
 3423              		.loc 1 975 0
 3424 0336 1120     		movs	r0, #17
 3425 0338 FFF7FEFF 		bl	VXISI2CRead
 3426              	.LVL489:
 3427 033c 0146     		mov	r1, r0
 3428 033e 2046     		mov	r0, r4
 3429 0340 FFF7FEFF 		bl	Printf
 3430              	.LVL490:
 976:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x16));
 3431              		.loc 1 976 0
 3432 0344 1520     		movs	r0, #21
 3433 0346 FFF7FEFF 		bl	VXISI2CRead
 3434              	.LVL491:
 3435 034a 0146     		mov	r1, r0
 3436 034c 2046     		mov	r0, r4
 3437 034e FFF7FEFF 		bl	Printf
 3438              	.LVL492:
 977:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x17));
 3439              		.loc 1 977 0
ARM GAS  /tmp/ccZa3c9M.s 			page 110


 3440 0352 1620     		movs	r0, #22
 3441 0354 FFF7FEFF 		bl	VXISI2CRead
 3442              	.LVL493:
 3443 0358 0146     		mov	r1, r0
 3444 035a 2046     		mov	r0, r4
 3445 035c FFF7FEFF 		bl	Printf
 3446              	.LVL494:
 978:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x18));
 3447              		.loc 1 978 0
 3448 0360 1720     		movs	r0, #23
 3449 0362 FFF7FEFF 		bl	VXISI2CRead
 3450              	.LVL495:
 3451 0366 0146     		mov	r1, r0
 3452 0368 2046     		mov	r0, r4
 3453 036a FFF7FEFF 		bl	Printf
 3454              	.LVL496:
 979:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x19));
 3455              		.loc 1 979 0
 3456 036e 1820     		movs	r0, #24
 3457 0370 FFF7FEFF 		bl	VXISI2CRead
 3458              	.LVL497:
 3459 0374 0146     		mov	r1, r0
 3460 0376 2046     		mov	r0, r4
 3461 0378 FFF7FEFF 		bl	Printf
 3462              	.LVL498:
 980:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1A));
 3463              		.loc 1 980 0
 3464 037c 1920     		movs	r0, #25
 3465 037e FFF7FEFF 		bl	VXISI2CRead
 3466              	.LVL499:
 3467 0382 0146     		mov	r1, r0
 3468 0384 2046     		mov	r0, r4
 3469 0386 FFF7FEFF 		bl	Printf
 3470              	.LVL500:
 981:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1C));
 3471              		.loc 1 981 0
 3472 038a 1A20     		movs	r0, #26
 3473 038c FFF7FEFF 		bl	VXISI2CRead
 3474              	.LVL501:
 3475 0390 0146     		mov	r1, r0
 3476 0392 2046     		mov	r0, r4
 3477 0394 FFF7FEFF 		bl	Printf
 3478              	.LVL502:
 982:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1D));
 3479              		.loc 1 982 0
 3480 0398 1C20     		movs	r0, #28
 3481 039a FFF7FEFF 		bl	VXISI2CRead
 3482              	.LVL503:
 3483 039e 0146     		mov	r1, r0
 3484 03a0 2046     		mov	r0, r4
 3485 03a2 FFF7FEFF 		bl	Printf
 3486              	.LVL504:
 983:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1E));
 3487              		.loc 1 983 0
 3488 03a6 1D20     		movs	r0, #29
 3489 03a8 FFF7FEFF 		bl	VXISI2CRead
 3490              	.LVL505:
ARM GAS  /tmp/ccZa3c9M.s 			page 111


 3491 03ac 0146     		mov	r1, r0
 3492 03ae 2046     		mov	r0, r4
 3493 03b0 FFF7FEFF 		bl	Printf
 3494              	.LVL506:
 984:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x28));
 3495              		.loc 1 984 0
 3496 03b4 1E20     		movs	r0, #30
 3497 03b6 FFF7FEFF 		bl	VXISI2CRead
 3498              	.LVL507:
 3499 03ba 0146     		mov	r1, r0
 3500 03bc 2046     		mov	r0, r4
 3501 03be FFF7FEFF 		bl	Printf
 3502              	.LVL508:
 985:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x29));
 3503              		.loc 1 985 0
 3504 03c2 2820     		movs	r0, #40
 3505 03c4 FFF7FEFF 		bl	VXISI2CRead
 3506              	.LVL509:
 3507 03c8 0146     		mov	r1, r0
 3508 03ca 2046     		mov	r0, r4
 3509 03cc FFF7FEFF 		bl	Printf
 3510              	.LVL510:
 986:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2A));
 3511              		.loc 1 986 0
 3512 03d0 2920     		movs	r0, #41
 3513 03d2 FFF7FEFF 		bl	VXISI2CRead
 3514              	.LVL511:
 3515 03d6 0146     		mov	r1, r0
 3516 03d8 2046     		mov	r0, r4
 3517 03da FFF7FEFF 		bl	Printf
 3518              	.LVL512:
 987:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2B));
 3519              		.loc 1 987 0
 3520 03de 2A20     		movs	r0, #42
 3521 03e0 FFF7FEFF 		bl	VXISI2CRead
 3522              	.LVL513:
 3523 03e4 0146     		mov	r1, r0
 3524 03e6 2046     		mov	r0, r4
 3525 03e8 FFF7FEFF 		bl	Printf
 3526              	.LVL514:
 988:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2C));
 3527              		.loc 1 988 0
 3528 03ec 2B20     		movs	r0, #43
 3529 03ee FFF7FEFF 		bl	VXISI2CRead
 3530              	.LVL515:
 3531 03f2 0146     		mov	r1, r0
 3532 03f4 2046     		mov	r0, r4
 3533 03f6 FFF7FEFF 		bl	Printf
 3534              	.LVL516:
 989:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2D));
 3535              		.loc 1 989 0
 3536 03fa 2C20     		movs	r0, #44
 3537 03fc FFF7FEFF 		bl	VXISI2CRead
 3538              	.LVL517:
 3539 0400 0146     		mov	r1, r0
 3540 0402 2046     		mov	r0, r4
 3541 0404 FFF7FEFF 		bl	Printf
ARM GAS  /tmp/ccZa3c9M.s 			page 112


 3542              	.LVL518:
 990:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x74));
 3543              		.loc 1 990 0
 3544 0408 2D20     		movs	r0, #45
 3545 040a FFF7FEFF 		bl	VXISI2CRead
 3546              	.LVL519:
 3547 040e 0146     		mov	r1, r0
 3548 0410 2046     		mov	r0, r4
 3549 0412 FFF7FEFF 		bl	Printf
 3550              	.LVL520:
 991:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x7E));
 3551              		.loc 1 991 0
 3552 0416 7420     		movs	r0, #116
 3553 0418 FFF7FEFF 		bl	VXISI2CRead
 3554              	.LVL521:
 3555 041c 0146     		mov	r1, r0
 3556 041e 2046     		mov	r0, r4
 3557 0420 FFF7FEFF 		bl	Printf
 3558              	.LVL522:
 992:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x7F));
 3559              		.loc 1 992 0
 3560 0424 7E20     		movs	r0, #126
 3561 0426 FFF7FEFF 		bl	VXISI2CRead
 3562              	.LVL523:
 3563 042a 0146     		mov	r1, r0
 3564 042c 2046     		mov	r0, r4
 3565 042e FFF7FEFF 		bl	Printf
 3566              	.LVL524:
 993:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x80));
 3567              		.loc 1 993 0
 3568 0432 7F20     		movs	r0, #127
 3569 0434 FFF7FEFF 		bl	VXISI2CRead
 3570              	.LVL525:
 3571 0438 0146     		mov	r1, r0
 3572 043a 2046     		mov	r0, r4
 3573 043c FFF7FEFF 		bl	Printf
 3574              	.LVL526:
 994:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x81));
 3575              		.loc 1 994 0
 3576 0440 8020     		movs	r0, #128
 3577 0442 FFF7FEFF 		bl	VXISI2CRead
 3578              	.LVL527:
 3579 0446 0146     		mov	r1, r0
 3580 0448 2046     		mov	r0, r4
 3581 044a FFF7FEFF 		bl	Printf
 3582              	.LVL528:
 995:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x82));
 3583              		.loc 1 995 0
 3584 044e 8120     		movs	r0, #129
 3585 0450 FFF7FEFF 		bl	VXISI2CRead
 3586              	.LVL529:
 3587 0454 0146     		mov	r1, r0
 3588 0456 2046     		mov	r0, r4
 3589 0458 FFF7FEFF 		bl	Printf
 3590              	.LVL530:
 996:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x83));
 3591              		.loc 1 996 0
ARM GAS  /tmp/ccZa3c9M.s 			page 113


 3592 045c 8220     		movs	r0, #130
 3593 045e FFF7FEFF 		bl	VXISI2CRead
 3594              	.LVL531:
 3595 0462 0146     		mov	r1, r0
 3596 0464 2046     		mov	r0, r4
 3597 0466 FFF7FEFF 		bl	Printf
 3598              	.LVL532:
 997:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x84));
 3599              		.loc 1 997 0
 3600 046a 8320     		movs	r0, #131
 3601 046c FFF7FEFF 		bl	VXISI2CRead
 3602              	.LVL533:
 3603 0470 0146     		mov	r1, r0
 3604 0472 2046     		mov	r0, r4
 3605 0474 FFF7FEFF 		bl	Printf
 3606              	.LVL534:
 998:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x85));
 3607              		.loc 1 998 0
 3608 0478 8420     		movs	r0, #132
 3609 047a FFF7FEFF 		bl	VXISI2CRead
 3610              	.LVL535:
 3611 047e 0146     		mov	r1, r0
 3612 0480 2046     		mov	r0, r4
 3613 0482 FFF7FEFF 		bl	Printf
 3614              	.LVL536:
 999:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x86));
 3615              		.loc 1 999 0
 3616 0486 8520     		movs	r0, #133
 3617 0488 FFF7FEFF 		bl	VXISI2CRead
 3618              	.LVL537:
 3619 048c 0146     		mov	r1, r0
 3620 048e 2046     		mov	r0, r4
 3621 0490 FFF7FEFF 		bl	Printf
 3622              	.LVL538:
1000:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x87));
 3623              		.loc 1 1000 0
 3624 0494 8620     		movs	r0, #134
 3625 0496 FFF7FEFF 		bl	VXISI2CRead
 3626              	.LVL539:
 3627 049a 0146     		mov	r1, r0
 3628 049c 2046     		mov	r0, r4
 3629 049e FFF7FEFF 		bl	Printf
 3630              	.LVL540:
1001:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x88));
 3631              		.loc 1 1001 0
 3632 04a2 8720     		movs	r0, #135
 3633 04a4 FFF7FEFF 		bl	VXISI2CRead
 3634              	.LVL541:
 3635 04a8 0146     		mov	r1, r0
 3636 04aa 2046     		mov	r0, r4
 3637 04ac FFF7FEFF 		bl	Printf
 3638              	.LVL542:
1002:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x89));
 3639              		.loc 1 1002 0
 3640 04b0 8820     		movs	r0, #136
 3641 04b2 FFF7FEFF 		bl	VXISI2CRead
 3642              	.LVL543:
ARM GAS  /tmp/ccZa3c9M.s 			page 114


 3643 04b6 0146     		mov	r1, r0
 3644 04b8 2046     		mov	r0, r4
 3645 04ba FFF7FEFF 		bl	Printf
 3646              	.LVL544:
1003:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8A));
 3647              		.loc 1 1003 0
 3648 04be 8920     		movs	r0, #137
 3649 04c0 FFF7FEFF 		bl	VXISI2CRead
 3650              	.LVL545:
 3651 04c4 0146     		mov	r1, r0
 3652 04c6 2046     		mov	r0, r4
 3653 04c8 FFF7FEFF 		bl	Printf
 3654              	.LVL546:
1004:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8B));
 3655              		.loc 1 1004 0
 3656 04cc 8A20     		movs	r0, #138
 3657 04ce FFF7FEFF 		bl	VXISI2CRead
 3658              	.LVL547:
 3659 04d2 0146     		mov	r1, r0
 3660 04d4 2046     		mov	r0, r4
 3661 04d6 FFF7FEFF 		bl	Printf
 3662              	.LVL548:
1005:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8C));
 3663              		.loc 1 1005 0
 3664 04da 8B20     		movs	r0, #139
 3665 04dc FFF7FEFF 		bl	VXISI2CRead
 3666              	.LVL549:
 3667 04e0 0146     		mov	r1, r0
 3668 04e2 2046     		mov	r0, r4
 3669 04e4 FFF7FEFF 		bl	Printf
 3670              	.LVL550:
1006:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8D));
 3671              		.loc 1 1006 0
 3672 04e8 8C20     		movs	r0, #140
 3673 04ea FFF7FEFF 		bl	VXISI2CRead
 3674              	.LVL551:
 3675 04ee 0146     		mov	r1, r0
 3676 04f0 2046     		mov	r0, r4
 3677 04f2 FFF7FEFF 		bl	Printf
 3678              	.LVL552:
1007:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8E));
 3679              		.loc 1 1007 0
 3680 04f6 8D20     		movs	r0, #141
 3681 04f8 FFF7FEFF 		bl	VXISI2CRead
 3682              	.LVL553:
 3683 04fc 0146     		mov	r1, r0
 3684 04fe 2046     		mov	r0, r4
 3685 0500 FFF7FEFF 		bl	Printf
 3686              	.LVL554:
1008:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8F));
 3687              		.loc 1 1008 0
 3688 0504 8E20     		movs	r0, #142
 3689 0506 FFF7FEFF 		bl	VXISI2CRead
 3690              	.LVL555:
 3691 050a 0146     		mov	r1, r0
 3692 050c 2046     		mov	r0, r4
 3693 050e FFF7FEFF 		bl	Printf
ARM GAS  /tmp/ccZa3c9M.s 			page 115


 3694              	.LVL556:
1009:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x90));
 3695              		.loc 1 1009 0
 3696 0512 8F20     		movs	r0, #143
 3697 0514 FFF7FEFF 		bl	VXISI2CRead
 3698              	.LVL557:
 3699 0518 0146     		mov	r1, r0
 3700 051a 2046     		mov	r0, r4
 3701 051c FFF7FEFF 		bl	Printf
 3702              	.LVL558:
1010:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x91));
 3703              		.loc 1 1010 0
 3704 0520 9020     		movs	r0, #144
 3705 0522 FFF7FEFF 		bl	VXISI2CRead
 3706              	.LVL559:
 3707 0526 0146     		mov	r1, r0
 3708 0528 2046     		mov	r0, r4
 3709 052a FFF7FEFF 		bl	Printf
 3710              	.LVL560:
1011:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x92));
 3711              		.loc 1 1011 0
 3712 052e 9120     		movs	r0, #145
 3713 0530 FFF7FEFF 		bl	VXISI2CRead
 3714              	.LVL561:
 3715 0534 0146     		mov	r1, r0
 3716 0536 2046     		mov	r0, r4
 3717 0538 FFF7FEFF 		bl	Printf
 3718              	.LVL562:
1012:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x93));
 3719              		.loc 1 1012 0
 3720 053c 9220     		movs	r0, #146
 3721 053e FFF7FEFF 		bl	VXISI2CRead
 3722              	.LVL563:
 3723 0542 0146     		mov	r1, r0
 3724 0544 2046     		mov	r0, r4
 3725 0546 FFF7FEFF 		bl	Printf
 3726              	.LVL564:
1013:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x94));
 3727              		.loc 1 1013 0
 3728 054a 9320     		movs	r0, #147
 3729 054c FFF7FEFF 		bl	VXISI2CRead
 3730              	.LVL565:
 3731 0550 0146     		mov	r1, r0
 3732 0552 2046     		mov	r0, r4
 3733 0554 FFF7FEFF 		bl	Printf
 3734              	.LVL566:
1014:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x95));
 3735              		.loc 1 1014 0
 3736 0558 9420     		movs	r0, #148
 3737 055a FFF7FEFF 		bl	VXISI2CRead
 3738              	.LVL567:
 3739 055e 0146     		mov	r1, r0
 3740 0560 2046     		mov	r0, r4
 3741 0562 FFF7FEFF 		bl	Printf
 3742              	.LVL568:
1015:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x97));
 3743              		.loc 1 1015 0
ARM GAS  /tmp/ccZa3c9M.s 			page 116


 3744 0566 9520     		movs	r0, #149
 3745 0568 FFF7FEFF 		bl	VXISI2CRead
 3746              	.LVL569:
 3747 056c 0146     		mov	r1, r0
 3748 056e 2046     		mov	r0, r4
 3749 0570 FFF7FEFF 		bl	Printf
 3750              	.LVL570:
1016:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x98));
 3751              		.loc 1 1016 0
 3752 0574 9720     		movs	r0, #151
 3753 0576 FFF7FEFF 		bl	VXISI2CRead
 3754              	.LVL571:
 3755 057a 0146     		mov	r1, r0
 3756 057c 2046     		mov	r0, r4
 3757 057e FFF7FEFF 		bl	Printf
 3758              	.LVL572:
1017:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x99));
 3759              		.loc 1 1017 0
 3760 0582 9820     		movs	r0, #152
 3761 0584 FFF7FEFF 		bl	VXISI2CRead
 3762              	.LVL573:
 3763 0588 0146     		mov	r1, r0
 3764 058a 2046     		mov	r0, r4
 3765 058c FFF7FEFF 		bl	Printf
 3766              	.LVL574:
1018:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9B));
 3767              		.loc 1 1018 0
 3768 0590 9920     		movs	r0, #153
 3769 0592 FFF7FEFF 		bl	VXISI2CRead
 3770              	.LVL575:
 3771 0596 0146     		mov	r1, r0
 3772 0598 2046     		mov	r0, r4
 3773 059a FFF7FEFF 		bl	Printf
 3774              	.LVL576:
1019:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9C));
 3775              		.loc 1 1019 0
 3776 059e 9B20     		movs	r0, #155
 3777 05a0 FFF7FEFF 		bl	VXISI2CRead
 3778              	.LVL577:
 3779 05a4 0146     		mov	r1, r0
 3780 05a6 2046     		mov	r0, r4
 3781 05a8 FFF7FEFF 		bl	Printf
 3782              	.LVL578:
1020:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9D));
 3783              		.loc 1 1020 0
 3784 05ac 9C20     		movs	r0, #156
 3785 05ae FFF7FEFF 		bl	VXISI2CRead
 3786              	.LVL579:
 3787 05b2 0146     		mov	r1, r0
 3788 05b4 2046     		mov	r0, r4
 3789 05b6 FFF7FEFF 		bl	Printf
 3790              	.LVL580:
1021:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9E));
 3791              		.loc 1 1021 0
 3792 05ba 9D20     		movs	r0, #157
 3793 05bc FFF7FEFF 		bl	VXISI2CRead
 3794              	.LVL581:
ARM GAS  /tmp/ccZa3c9M.s 			page 117


 3795 05c0 0146     		mov	r1, r0
 3796 05c2 2046     		mov	r0, r4
 3797 05c4 FFF7FEFF 		bl	Printf
 3798              	.LVL582:
1022:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9F));
 3799              		.loc 1 1022 0
 3800 05c8 9E20     		movs	r0, #158
 3801 05ca FFF7FEFF 		bl	VXISI2CRead
 3802              	.LVL583:
 3803 05ce 0146     		mov	r1, r0
 3804 05d0 2046     		mov	r0, r4
 3805 05d2 FFF7FEFF 		bl	Printf
 3806              	.LVL584:
1023:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA0));
 3807              		.loc 1 1023 0
 3808 05d6 9F20     		movs	r0, #159
 3809 05d8 FFF7FEFF 		bl	VXISI2CRead
 3810              	.LVL585:
 3811 05dc 0146     		mov	r1, r0
 3812 05de 2046     		mov	r0, r4
 3813 05e0 FFF7FEFF 		bl	Printf
 3814              	.LVL586:
1024:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA1));
 3815              		.loc 1 1024 0
 3816 05e4 A020     		movs	r0, #160
 3817 05e6 FFF7FEFF 		bl	VXISI2CRead
 3818              	.LVL587:
 3819 05ea 0146     		mov	r1, r0
 3820 05ec 2046     		mov	r0, r4
 3821 05ee FFF7FEFF 		bl	Printf
 3822              	.LVL588:
1025:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA2));
 3823              		.loc 1 1025 0
 3824 05f2 A120     		movs	r0, #161
 3825 05f4 FFF7FEFF 		bl	VXISI2CRead
 3826              	.LVL589:
 3827 05f8 0146     		mov	r1, r0
 3828 05fa 2046     		mov	r0, r4
 3829 05fc FFF7FEFF 		bl	Printf
 3830              	.LVL590:
1026:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA3));
 3831              		.loc 1 1026 0
 3832 0600 A220     		movs	r0, #162
 3833 0602 FFF7FEFF 		bl	VXISI2CRead
 3834              	.LVL591:
 3835 0606 0146     		mov	r1, r0
 3836 0608 2046     		mov	r0, r4
 3837 060a FFF7FEFF 		bl	Printf
 3838              	.LVL592:
1027:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA4));
 3839              		.loc 1 1027 0
 3840 060e A320     		movs	r0, #163
 3841 0610 FFF7FEFF 		bl	VXISI2CRead
 3842              	.LVL593:
 3843 0614 0146     		mov	r1, r0
 3844 0616 2046     		mov	r0, r4
 3845 0618 FFF7FEFF 		bl	Printf
ARM GAS  /tmp/ccZa3c9M.s 			page 118


 3846              	.LVL594:
1028:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA5));
 3847              		.loc 1 1028 0
 3848 061c A420     		movs	r0, #164
 3849 061e FFF7FEFF 		bl	VXISI2CRead
 3850              	.LVL595:
 3851 0622 0146     		mov	r1, r0
 3852 0624 2046     		mov	r0, r4
 3853 0626 FFF7FEFF 		bl	Printf
 3854              	.LVL596:
1029:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA6));
 3855              		.loc 1 1029 0
 3856 062a A520     		movs	r0, #165
 3857 062c FFF7FEFF 		bl	VXISI2CRead
 3858              	.LVL597:
 3859 0630 0146     		mov	r1, r0
 3860 0632 2046     		mov	r0, r4
 3861 0634 FFF7FEFF 		bl	Printf
 3862              	.LVL598:
1030:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA7));
 3863              		.loc 1 1030 0
 3864 0638 A620     		movs	r0, #166
 3865 063a FFF7FEFF 		bl	VXISI2CRead
 3866              	.LVL599:
 3867 063e 0146     		mov	r1, r0
 3868 0640 2046     		mov	r0, r4
 3869 0642 FFF7FEFF 		bl	Printf
 3870              	.LVL600:
1031:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA8));
 3871              		.loc 1 1031 0
 3872 0646 A720     		movs	r0, #167
 3873 0648 FFF7FEFF 		bl	VXISI2CRead
 3874              	.LVL601:
 3875 064c 0146     		mov	r1, r0
 3876 064e 2046     		mov	r0, r4
 3877 0650 FFF7FEFF 		bl	Printf
 3878              	.LVL602:
1032:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA9));
 3879              		.loc 1 1032 0
 3880 0654 A820     		movs	r0, #168
 3881 0656 FFF7FEFF 		bl	VXISI2CRead
 3882              	.LVL603:
 3883 065a 0146     		mov	r1, r0
 3884 065c 2046     		mov	r0, r4
 3885 065e FFF7FEFF 		bl	Printf
 3886              	.LVL604:
 3887 0662 03E0     		b	.L213
 3888              	.L214:
 3889              		.align	2
 3890              	.L212:
 3891 0664 44010000 		.word	.LC37
 3892 0668 48010000 		.word	.LC38
 3893              	.L213:
1033:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAA));
 3894              		.loc 1 1033 0
 3895 066c A920     		movs	r0, #169
 3896 066e FFF7FEFF 		bl	VXISI2CRead
ARM GAS  /tmp/ccZa3c9M.s 			page 119


 3897              	.LVL605:
 3898 0672 0146     		mov	r1, r0
 3899 0674 2046     		mov	r0, r4
 3900 0676 FFF7FEFF 		bl	Printf
 3901              	.LVL606:
1034:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAB));
 3902              		.loc 1 1034 0
 3903 067a AA20     		movs	r0, #170
 3904 067c FFF7FEFF 		bl	VXISI2CRead
 3905              	.LVL607:
 3906 0680 0146     		mov	r1, r0
 3907 0682 2046     		mov	r0, r4
 3908 0684 FFF7FEFF 		bl	Printf
 3909              	.LVL608:
1035:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAF));
 3910              		.loc 1 1035 0
 3911 0688 AB20     		movs	r0, #171
 3912 068a FFF7FEFF 		bl	VXISI2CRead
 3913              	.LVL609:
 3914 068e 0146     		mov	r1, r0
 3915 0690 2046     		mov	r0, r4
 3916 0692 FFF7FEFF 		bl	Printf
 3917              	.LVL610:
1036:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xC0));
 3918              		.loc 1 1036 0
 3919 0696 AF20     		movs	r0, #175
 3920 0698 FFF7FEFF 		bl	VXISI2CRead
 3921              	.LVL611:
 3922 069c 0146     		mov	r1, r0
 3923 069e 2046     		mov	r0, r4
 3924 06a0 FFF7FEFF 		bl	Printf
 3925              	.LVL612:
1037:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD6));
 3926              		.loc 1 1037 0
 3927 06a4 C020     		movs	r0, #192
 3928 06a6 FFF7FEFF 		bl	VXISI2CRead
 3929              	.LVL613:
 3930 06aa 0146     		mov	r1, r0
 3931 06ac 2046     		mov	r0, r4
 3932 06ae FFF7FEFF 		bl	Printf
 3933              	.LVL614:
1038:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD7));
 3934              		.loc 1 1038 0
 3935 06b2 D620     		movs	r0, #214
 3936 06b4 FFF7FEFF 		bl	VXISI2CRead
 3937              	.LVL615:
 3938 06b8 0146     		mov	r1, r0
 3939 06ba 2046     		mov	r0, r4
 3940 06bc FFF7FEFF 		bl	Printf
 3941              	.LVL616:
1039:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD8));
 3942              		.loc 1 1039 0
 3943 06c0 D720     		movs	r0, #215
 3944 06c2 FFF7FEFF 		bl	VXISI2CRead
 3945              	.LVL617:
 3946 06c6 0146     		mov	r1, r0
 3947 06c8 2046     		mov	r0, r4
ARM GAS  /tmp/ccZa3c9M.s 			page 120


 3948 06ca FFF7FEFF 		bl	Printf
 3949              	.LVL618:
1040:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE6));
 3950              		.loc 1 1040 0
 3951 06ce D820     		movs	r0, #216
 3952 06d0 FFF7FEFF 		bl	VXISI2CRead
 3953              	.LVL619:
 3954 06d4 0146     		mov	r1, r0
 3955 06d6 2046     		mov	r0, r4
 3956 06d8 FFF7FEFF 		bl	Printf
 3957              	.LVL620:
1041:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE7));
 3958              		.loc 1 1041 0
 3959 06dc E620     		movs	r0, #230
 3960 06de FFF7FEFF 		bl	VXISI2CRead
 3961              	.LVL621:
 3962 06e2 0146     		mov	r1, r0
 3963 06e4 2046     		mov	r0, r4
 3964 06e6 FFF7FEFF 		bl	Printf
 3965              	.LVL622:
1042:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE8));
 3966              		.loc 1 1042 0
 3967 06ea E720     		movs	r0, #231
 3968 06ec FFF7FEFF 		bl	VXISI2CRead
 3969              	.LVL623:
 3970 06f0 0146     		mov	r1, r0
 3971 06f2 2046     		mov	r0, r4
 3972 06f4 FFF7FEFF 		bl	Printf
 3973              	.LVL624:
1043:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE9));
 3974              		.loc 1 1043 0
 3975 06f8 E820     		movs	r0, #232
 3976 06fa FFF7FEFF 		bl	VXISI2CRead
 3977              	.LVL625:
 3978 06fe 0146     		mov	r1, r0
 3979 0700 2046     		mov	r0, r4
 3980 0702 FFF7FEFF 		bl	Printf
 3981              	.LVL626:
1044:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEA));
 3982              		.loc 1 1044 0
 3983 0706 E920     		movs	r0, #233
 3984 0708 FFF7FEFF 		bl	VXISI2CRead
 3985              	.LVL627:
 3986 070c 0146     		mov	r1, r0
 3987 070e 2046     		mov	r0, r4
 3988 0710 FFF7FEFF 		bl	Printf
 3989              	.LVL628:
1045:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEB));
 3990              		.loc 1 1045 0
 3991 0714 EA20     		movs	r0, #234
 3992 0716 FFF7FEFF 		bl	VXISI2CRead
 3993              	.LVL629:
 3994 071a 0146     		mov	r1, r0
 3995 071c 2046     		mov	r0, r4
 3996 071e FFF7FEFF 		bl	Printf
 3997              	.LVL630:
1046:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEC));
ARM GAS  /tmp/ccZa3c9M.s 			page 121


 3998              		.loc 1 1046 0
 3999 0722 EB20     		movs	r0, #235
 4000 0724 FFF7FEFF 		bl	VXISI2CRead
 4001              	.LVL631:
 4002 0728 0146     		mov	r1, r0
 4003 072a 2046     		mov	r0, r4
 4004 072c FFF7FEFF 		bl	Printf
 4005              	.LVL632:
1047:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xED));
 4006              		.loc 1 1047 0
 4007 0730 EC20     		movs	r0, #236
 4008 0732 FFF7FEFF 		bl	VXISI2CRead
 4009              	.LVL633:
 4010 0736 0146     		mov	r1, r0
 4011 0738 2046     		mov	r0, r4
 4012 073a FFF7FEFF 		bl	Printf
 4013              	.LVL634:
1048:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEE));
 4014              		.loc 1 1048 0
 4015 073e ED20     		movs	r0, #237
 4016 0740 FFF7FEFF 		bl	VXISI2CRead
 4017              	.LVL635:
 4018 0744 0146     		mov	r1, r0
 4019 0746 2046     		mov	r0, r4
 4020 0748 FFF7FEFF 		bl	Printf
 4021              	.LVL636:
1049:VS4210/monitor.c **** 
 4022              		.loc 1 1049 0
 4023 074c EE20     		movs	r0, #238
 4024 074e FFF7FEFF 		bl	VXISI2CRead
 4025              	.LVL637:
 4026 0752 0146     		mov	r1, r0
 4027 0754 2046     		mov	r0, r4
 4028 0756 FFF7FEFF 		bl	Printf
 4029              	.LVL638:
 4030 075a FEE4     		b	.L134
 4031              	.L145:
1052:VS4210/monitor.c **** 		    VXISI2CWrite(Asc2Bin(argv[1]), Asc2Bin(argv[2]));   
 4032              		.loc 1 1052 0
 4033 075c AA49     		ldr	r1, .L215
 4034 075e 2046     		mov	r0, r4
 4035 0760 FFF7FEFF 		bl	stricmp
 4036              	.LVL639:
 4037 0764 D0B9     		cbnz	r0, .L146
1053:VS4210/monitor.c **** 	  ret= VXISI2CRead(Asc2Bin(argv[1]));   
 4038              		.loc 1 1053 0
 4039 0766 A94C     		ldr	r4, .L215+4
 4040 0768 6068     		ldr	r0, [r4, #4]
 4041 076a FFF7FEFF 		bl	Asc2Bin
 4042              	.LVL640:
 4043 076e 0546     		mov	r5, r0
 4044 0770 A068     		ldr	r0, [r4, #8]
 4045 0772 FFF7FEFF 		bl	Asc2Bin
 4046              	.LVL641:
 4047 0776 0146     		mov	r1, r0
 4048 0778 2846     		mov	r0, r5
 4049 077a FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccZa3c9M.s 			page 122


 4050              	.LVL642:
1054:VS4210/monitor.c **** 	Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);				
 4051              		.loc 1 1054 0
 4052 077e 6068     		ldr	r0, [r4, #4]
 4053 0780 FFF7FEFF 		bl	Asc2Bin
 4054              	.LVL643:
 4055 0784 FFF7FEFF 		bl	VXISI2CRead
 4056              	.LVL644:
 4057 0788 0546     		mov	r5, r0
 4058              	.LVL645:
1055:VS4210/monitor.c **** 		}
 4059              		.loc 1 1055 0
 4060 078a 6068     		ldr	r0, [r4, #4]
 4061 078c FFF7FEFF 		bl	Asc2Bin
 4062              	.LVL646:
 4063 0790 2A46     		mov	r2, r5
 4064 0792 0146     		mov	r1, r0
 4065 0794 9E48     		ldr	r0, .L215+8
 4066 0796 FFF7FEFF 		bl	Printf
 4067              	.LVL647:
 4068 079a DEE4     		b	.L134
 4069              	.LVL648:
 4070              	.L146:
1057:VS4210/monitor.c **** 		indirect=0;
 4071              		.loc 1 1057 0
 4072 079c 9D49     		ldr	r1, .L215+12
 4073 079e 2046     		mov	r0, r4
 4074 07a0 FFF7FEFF 		bl	stricmp
 4075              	.LVL649:
 4076 07a4 0028     		cmp	r0, #0
 4077 07a6 3FF4D8AC 		beq	.L134
1061:VS4210/monitor.c **** 		 ret=Asc2Bin(argv[1]); 
 4078              		.loc 1 1061 0
 4079 07aa 9B49     		ldr	r1, .L215+16
 4080 07ac 2046     		mov	r0, r4
 4081 07ae FFF7FEFF 		bl	stricmp
 4082              	.LVL650:
 4083 07b2 60B9     		cbnz	r0, .L147
1062:VS4210/monitor.c **** 		Printf("\r\nChange I2C addr. from %02x to %02x",(WORD)Monitor_I2C,(WORD)ret);		
 4084              		.loc 1 1062 0
 4085 07b4 954B     		ldr	r3, .L215+4
 4086 07b6 5868     		ldr	r0, [r3, #4]
 4087 07b8 FFF7FEFF 		bl	Asc2Bin
 4088              	.LVL651:
 4089 07bc 0546     		mov	r5, r0
 4090              	.LVL652:
1063:VS4210/monitor.c **** 		Monitor_I2C=ret;
 4091              		.loc 1 1063 0
 4092 07be 974C     		ldr	r4, .L215+20
 4093 07c0 0246     		mov	r2, r0
 4094 07c2 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4095 07c4 9648     		ldr	r0, .L215+24
 4096              	.LVL653:
 4097 07c6 FFF7FEFF 		bl	Printf
 4098              	.LVL654:
1064:VS4210/monitor.c **** 		}
 4099              		.loc 1 1064 0
ARM GAS  /tmp/ccZa3c9M.s 			page 123


 4100 07ca 2570     		strb	r5, [r4]
 4101 07cc C5E4     		b	.L134
 4102              	.L147:
1066:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
 4103              		.loc 1 1066 0
 4104 07ce 9549     		ldr	r1, .L215+28
 4105 07d0 2046     		mov	r0, r4
 4106 07d2 FFF7FEFF 		bl	stricmp
 4107              	.LVL655:
 4108 07d6 18B9     		cbnz	r0, .L148
1067:VS4210/monitor.c **** 		}
 4109              		.loc 1 1067 0
 4110 07d8 934B     		ldr	r3, .L215+32
 4111 07da 0022     		movs	r2, #0
 4112 07dc 1A70     		strb	r2, [r3]
 4113 07de BCE4     		b	.L134
 4114              	.L148:
1069:VS4210/monitor.c **** 		WORD s,e;	//20201211-03
 4115              		.loc 1 1069 0
 4116 07e0 9249     		ldr	r1, .L215+36
 4117 07e2 2046     		mov	r0, r4
 4118 07e4 FFF7FEFF 		bl	stricmp
 4119              	.LVL656:
 4120 07e8 0028     		cmp	r0, #0
 4121 07ea 51D1     		bne	.L149
 4122              	.LBB2:
1072:VS4210/monitor.c **** 		 e=Asc2Bin(argv[2]); 
 4123              		.loc 1 1072 0
 4124 07ec 874D     		ldr	r5, .L215+4
 4125 07ee 6868     		ldr	r0, [r5, #4]
 4126 07f0 FFF7FEFF 		bl	Asc2Bin
 4127              	.LVL657:
 4128 07f4 0446     		mov	r4, r0
 4129              	.LVL658:
1073:VS4210/monitor.c **** 
 4130              		.loc 1 1073 0
 4131 07f6 A868     		ldr	r0, [r5, #8]
 4132              	.LVL659:
 4133 07f8 FFF7FEFF 		bl	Asc2Bin
 4134              	.LVL660:
 4135 07fc 0546     		mov	r5, r0
 4136              	.LVL661:
1076:VS4210/monitor.c **** 			 {
 4137              		.loc 1 1076 0
 4138 07fe 874B     		ldr	r3, .L215+20
 4139 0800 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4140 0802 A02B     		cmp	r3, #160
 4141 0804 07D0     		beq	.L204
1080:VS4210/monitor.c **** 			 {
 4142              		.loc 1 1080 0
 4143 0806 402B     		cmp	r3, #64
 4144 0808 09D0     		beq	.L205
1084:VS4210/monitor.c **** 			 {
 4145              		.loc 1 1084 0
 4146 080a 122B     		cmp	r3, #18
 4147 080c 14D1     		bne	.L158
1086:VS4210/monitor.c **** 			 }
ARM GAS  /tmp/ccZa3c9M.s 			page 124


 4148              		.loc 1 1086 0
 4149 080e 8848     		ldr	r0, .L215+40
 4150              	.LVL662:
 4151 0810 FFF7FEFF 		bl	Printf
 4152              	.LVL663:
 4153 0814 10E0     		b	.L158
 4154              	.LVL664:
 4155              	.L204:
1078:VS4210/monitor.c **** 			 }
 4156              		.loc 1 1078 0
 4157 0816 8748     		ldr	r0, .L215+44
 4158              	.LVL665:
 4159 0818 FFF7FEFF 		bl	Printf
 4160              	.LVL666:
 4161 081c 0CE0     		b	.L158
 4162              	.LVL667:
 4163              	.L205:
1082:VS4210/monitor.c **** 			 }
 4164              		.loc 1 1082 0
 4165 081e 8648     		ldr	r0, .L215+48
 4166              	.LVL668:
 4167 0820 FFF7FEFF 		bl	Printf
 4168              	.LVL669:
 4169 0824 08E0     		b	.L158
 4170              	.L206:
1093:VS4210/monitor.c **** 			 Printf("\r\nEEPROM  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
 4171              		.loc 1 1093 0
 4172 0826 2046     		mov	r0, r4
 4173 0828 FFF7FEFF 		bl	ReadEEP
 4174              	.LVL670:
1094:VS4210/monitor.c **** 			 }
 4175              		.loc 1 1094 0
 4176 082c 0246     		mov	r2, r0
 4177 082e 2146     		mov	r1, r4
 4178 0830 8248     		ldr	r0, .L215+52
 4179              	.LVL671:
 4180 0832 FFF7FEFF 		bl	Printf
 4181              	.LVL672:
 4182              	.L154:
1089:VS4210/monitor.c **** {
 4183              		.loc 1 1089 0
 4184 0836 0134     		adds	r4, r4, #1
 4185              	.LVL673:
 4186              	.L158:
1089:VS4210/monitor.c **** {
 4187              		.loc 1 1089 0 is_stmt 0 discriminator 1
 4188 0838 AC42     		cmp	r4, r5
 4189 083a 3FF68EAC 		bhi	.L134
1091:VS4210/monitor.c **** 			 {
 4190              		.loc 1 1091 0 is_stmt 1
 4191 083e 774B     		ldr	r3, .L215+20
 4192 0840 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4193 0842 A02B     		cmp	r3, #160
 4194 0844 EFD0     		beq	.L206
1096:VS4210/monitor.c **** 			 {
 4195              		.loc 1 1096 0
 4196 0846 402B     		cmp	r3, #64
ARM GAS  /tmp/ccZa3c9M.s 			page 125


 4197 0848 07D0     		beq	.L207
1102:VS4210/monitor.c **** 			 {
 4198              		.loc 1 1102 0
 4199 084a 122B     		cmp	r3, #18
 4200 084c 0ED0     		beq	.L208
1108:VS4210/monitor.c **** 					  {
 4201              		.loc 1 1108 0
 4202 084e 882B     		cmp	r3, #136
 4203 0850 15D0     		beq	.L209
1127:VS4210/monitor.c **** 			 }
 4204              		.loc 1 1127 0
 4205 0852 7B48     		ldr	r0, .L215+56
 4206 0854 FFF7FEFF 		bl	Printf
 4207              	.LVL674:
 4208 0858 EDE7     		b	.L154
 4209              	.L207:
1098:VS4210/monitor.c **** 			 // Printf("\r\nVXISI2CWrite(0x%02x,0x%02x);",(WORD)s,(WORD)ret);
 4210              		.loc 1 1098 0
 4211 085a E0B2     		uxtb	r0, r4
 4212 085c FFF7FEFF 		bl	VXISI2CRead
 4213              	.LVL675:
1100:VS4210/monitor.c **** 			 }
 4214              		.loc 1 1100 0
 4215 0860 0246     		mov	r2, r0
 4216 0862 2146     		mov	r1, r4
 4217 0864 7748     		ldr	r0, .L215+60
 4218              	.LVL676:
 4219 0866 FFF7FEFF 		bl	Printf
 4220              	.LVL677:
 4221 086a E4E7     		b	.L154
 4222              	.L208:
1104:VS4210/monitor.c **** //			  Printf("\r\nVS8812  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
 4223              		.loc 1 1104 0
 4224 086c E0B2     		uxtb	r0, r4
 4225 086e FFF7FEFF 		bl	VS8812Read
 4226              	.LVL678:
1106:VS4210/monitor.c **** 			 }
 4227              		.loc 1 1106 0
 4228 0872 0246     		mov	r2, r0
 4229 0874 2146     		mov	r1, r4
 4230 0876 7448     		ldr	r0, .L215+64
 4231              	.LVL679:
 4232 0878 FFF7FEFF 		bl	Printf
 4233              	.LVL680:
 4234 087c DBE7     		b	.L154
 4235              	.L209:
1110:VS4210/monitor.c **** 					   Printf("\r\ntp28xx,%02x,%02x",(WORD)s,(WORD)ret);
 4236              		.loc 1 1110 0
 4237 087e E0B2     		uxtb	r0, r4
 4238 0880 FFF7FEFF 		bl	tp28xx_byte_read
 4239              	.LVL681:
1111:VS4210/monitor.c **** 					  } 
 4240              		.loc 1 1111 0
 4241 0884 0246     		mov	r2, r0
 4242 0886 2146     		mov	r1, r4
 4243 0888 7048     		ldr	r0, .L215+68
 4244              	.LVL682:
ARM GAS  /tmp/ccZa3c9M.s 			page 126


 4245 088a FFF7FEFF 		bl	Printf
 4246              	.LVL683:
 4247 088e D2E7     		b	.L154
 4248              	.LVL684:
 4249              	.L149:
 4250              	.LBE2:
1287:VS4210/monitor.c **** 		MonHelp();
 4251              		.loc 1 1287 0
 4252 0890 6F49     		ldr	r1, .L215+72
 4253 0892 2046     		mov	r0, r4
 4254 0894 FFF7FEFF 		bl	stricmp
 4255              	.LVL685:
 4256 0898 48B1     		cbz	r0, .L160
1287:VS4210/monitor.c **** 		MonHelp();
 4257              		.loc 1 1287 0 is_stmt 0 discriminator 1
 4258 089a 6E49     		ldr	r1, .L215+76
 4259 089c 2046     		mov	r0, r4
 4260 089e FFF7FEFF 		bl	stricmp
 4261              	.LVL686:
 4262 08a2 20B1     		cbz	r0, .L160
1287:VS4210/monitor.c **** 		MonHelp();
 4263              		.loc 1 1287 0 discriminator 2
 4264 08a4 6C49     		ldr	r1, .L215+80
 4265 08a6 2046     		mov	r0, r4
 4266 08a8 FFF7FEFF 		bl	stricmp
 4267              	.LVL687:
 4268 08ac 10B9     		cbnz	r0, .L161
 4269              	.L160:
1288:VS4210/monitor.c **** 	}
 4270              		.loc 1 1288 0 is_stmt 1
 4271 08ae FFF7FEFF 		bl	MonHelp
 4272              	.LVL688:
 4273 08b2 52E4     		b	.L134
 4274              	.L161:
1290:VS4210/monitor.c **** 
 4275              		.loc 1 1290 0
 4276 08b4 6949     		ldr	r1, .L215+84
 4277 08b6 2046     		mov	r0, r4
 4278 08b8 FFF7FEFF 		bl	stricmp
 4279              	.LVL689:
 4280 08bc 88B9     		cbnz	r0, .L162
1292:VS4210/monitor.c **** 
 4281              		.loc 1 1292 0
 4282 08be 534C     		ldr	r4, .L215+4
 4283 08c0 6068     		ldr	r0, [r4, #4]
 4284 08c2 FFF7FEFF 		bl	Asc2Bin
 4285              	.LVL690:
 4286 08c6 C0EB0010 		rsb	r0, r0, r0, lsl #4
 4287 08ca 80B2     		uxth	r0, r0
 4288 08cc FFF7FEFF 		bl	user_pwm_setvalue
 4289              	.LVL691:
1294:VS4210/monitor.c **** 	}
 4290              		.loc 1 1294 0
 4291 08d0 6068     		ldr	r0, [r4, #4]
 4292 08d2 FFF7FEFF 		bl	Asc2Bin
 4293              	.LVL692:
 4294 08d6 C0EB0011 		rsb	r1, r0, r0, lsl #4
ARM GAS  /tmp/ccZa3c9M.s 			page 127


 4295 08da 6148     		ldr	r0, .L215+88
 4296 08dc FFF7FEFF 		bl	Printf
 4297              	.LVL693:
 4298 08e0 3BE4     		b	.L134
 4299              	.L162:
1296:VS4210/monitor.c **** 
 4300              		.loc 1 1296 0
 4301 08e2 6049     		ldr	r1, .L215+92
 4302 08e4 2046     		mov	r0, r4
 4303 08e6 FFF7FEFF 		bl	stricmp
 4304              	.LVL694:
 4305 08ea 38B9     		cbnz	r0, .L163
1298:VS4210/monitor.c **** 
 4306              		.loc 1 1298 0
 4307 08ec 0220     		movs	r0, #2
 4308 08ee FFF7FEFF 		bl	GET_ALC122
 4309              	.LVL695:
 4310 08f2 0146     		mov	r1, r0
 4311 08f4 5C48     		ldr	r0, .L215+96
 4312 08f6 FFF7FEFF 		bl	Printf
 4313              	.LVL696:
 4314 08fa 2EE4     		b	.L134
 4315              	.L163:
1301:VS4210/monitor.c **** 		WORD val=0;
 4316              		.loc 1 1301 0
 4317 08fc 5B49     		ldr	r1, .L215+100
 4318 08fe 2046     		mov	r0, r4
 4319 0900 FFF7FEFF 		bl	stricmp
 4320              	.LVL697:
 4321 0904 80B9     		cbnz	r0, .L164
 4322              	.LVL698:
 4323              	.LBB3:
1303:VS4210/monitor.c **** 		val<<=8;
 4324              		.loc 1 1303 0
 4325 0906 414B     		ldr	r3, .L215+4
 4326 0908 5868     		ldr	r0, [r3, #4]
 4327 090a FFF7FEFF 		bl	Asc2Bin
 4328              	.LVL699:
1307:VS4210/monitor.c **** 
 4329              		.loc 1 1307 0
 4330 090e 40EA0021 		orr	r1, r0, r0, lsl #8
 4331              	.LVL700:
 4332 0912 0220     		movs	r0, #2
 4333 0914 FFF7FEFF 		bl	SET_ALC122
 4334              	.LVL701:
1309:VS4210/monitor.c **** 	}
 4335              		.loc 1 1309 0
 4336 0918 0220     		movs	r0, #2
 4337 091a FFF7FEFF 		bl	GET_ALC122
 4338              	.LVL702:
 4339 091e 0146     		mov	r1, r0
 4340 0920 5148     		ldr	r0, .L215+96
 4341 0922 FFF7FEFF 		bl	Printf
 4342              	.LVL703:
 4343              	.LBE3:
 4344 0926 18E4     		b	.L134
 4345              	.L164:
ARM GAS  /tmp/ccZa3c9M.s 			page 128


1318:VS4210/monitor.c **** 		//if( argc==2 ) {
 4346              		.loc 1 1318 0
 4347 0928 5149     		ldr	r1, .L215+104
 4348 092a 2046     		mov	r0, r4
 4349 092c FFF7FEFF 		bl	stricmp
 4350              	.LVL704:
 4351 0930 50B9     		cbnz	r0, .L165
1320:VS4210/monitor.c **** 		//}
 4352              		.loc 1 1320 0
 4353 0932 364B     		ldr	r3, .L215+4
 4354 0934 5868     		ldr	r0, [r3, #4]
 4355 0936 FFF7FEFF 		bl	Asc2Bin
 4356              	.LVL705:
 4357 093a 0146     		mov	r1, r0
 4358 093c 4D4B     		ldr	r3, .L215+108
 4359 093e 1860     		str	r0, [r3]
1322:VS4210/monitor.c **** 	}
 4360              		.loc 1 1322 0
 4361 0940 4D48     		ldr	r0, .L215+112
 4362 0942 FFF7FEFF 		bl	Printf
 4363              	.LVL706:
 4364 0946 08E4     		b	.L134
 4365              	.L165:
1324:VS4210/monitor.c **** 
 4366              		.loc 1 1324 0
 4367 0948 4C49     		ldr	r1, .L215+116
 4368 094a 2046     		mov	r0, r4
 4369 094c FFF7FEFF 		bl	stricmp
 4370              	.LVL707:
 4371 0950 38BB     		cbnz	r0, .L166
 4372              	.LBB4:
1327:VS4210/monitor.c **** 		
 4373              		.loc 1 1327 0
 4374 0952 2E4B     		ldr	r3, .L215+4
 4375 0954 5868     		ldr	r0, [r3, #4]
 4376 0956 FFF7FEFF 		bl	Asc2Bin
 4377              	.LVL708:
 4378 095a 0446     		mov	r4, r0
 4379              	.LVL709:
1329:VS4210/monitor.c **** 		
 4380              		.loc 1 1329 0
 4381 095c FFF7FEFF 		bl	HS_Select_Win
 4382              	.LVL710:
1332:VS4210/monitor.c **** 		{
 4383              		.loc 1 1332 0
 4384 0960 012C     		cmp	r4, #1
 4385 0962 7FF4FAAB 		bne	.L134
1334:VS4210/monitor.c **** 		
 4386              		.loc 1 1334 0
 4387 0966 464C     		ldr	r4, .L215+120
 4388              	.LVL711:
 4389 0968 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4390 096a 4648     		ldr	r0, .L215+124
 4391 096c FFF7FEFF 		bl	Printf
 4392              	.LVL712:
1336:VS4210/monitor.c **** 			TP_bt1120_720P_1080P_mode0_w0();
 4393              		.loc 1 1336 0
ARM GAS  /tmp/ccZa3c9M.s 			page 129


 4394 0970 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4395 0972 052B     		cmp	r3, #5
 4396 0974 03D1     		bne	.L167
1337:VS4210/monitor.c **** 			else if(TP_InputMode==6)
 4397              		.loc 1 1337 0
 4398 0976 FFF7FEFF 		bl	TP_bt1120_720P_1080P_mode0_w0
 4399              	.LVL713:
 4400 097a FFF7EEBB 		b	.L134
 4401              	.L167:
1338:VS4210/monitor.c **** 				TP_bt1120_1080P_1080P_mode0_w0();
 4402              		.loc 1 1338 0
 4403 097e 062B     		cmp	r3, #6
 4404 0980 03D1     		bne	.L168
1339:VS4210/monitor.c **** 			else if(TP_InputMode==0)
 4405              		.loc 1 1339 0
 4406 0982 FFF7FEFF 		bl	TP_bt1120_1080P_1080P_mode0_w0
 4407              	.LVL714:
 4408 0986 FFF7E8BB 		b	.L134
 4409              	.L168:
1340:VS4210/monitor.c **** 				TP_bt1120_NTSC_1080P_mode0_w0();
 4410              		.loc 1 1340 0
 4411 098a 1BB9     		cbnz	r3, .L169
1341:VS4210/monitor.c **** 			else if(TP_InputMode==1)
 4412              		.loc 1 1341 0
 4413 098c FFF7FEFF 		bl	TP_bt1120_NTSC_1080P_mode0_w0
 4414              	.LVL715:
 4415 0990 FFF7E3BB 		b	.L134
 4416              	.L169:
1342:VS4210/monitor.c **** 				TP_bt1120_PAL_1080P_mode0_w0();
 4417              		.loc 1 1342 0
 4418 0994 012B     		cmp	r3, #1
 4419 0996 7FF4E0AB 		bne	.L134
1343:VS4210/monitor.c **** 							
 4420              		.loc 1 1343 0
 4421 099a FFF7FEFF 		bl	TP_bt1120_PAL_1080P_mode0_w0
 4422              	.LVL716:
 4423 099e FFF7DCBB 		b	.L134
 4424              	.L166:
 4425              	.LBE4:
1347:VS4210/monitor.c **** 		TP_bt1120_720P_1080P_mode0_w0();
 4426              		.loc 1 1347 0
 4427 09a2 3949     		ldr	r1, .L215+128
 4428 09a4 2046     		mov	r0, r4
 4429 09a6 FFF7FEFF 		bl	stricmp
 4430              	.LVL717:
 4431 09aa 18B9     		cbnz	r0, .L170
1348:VS4210/monitor.c **** 	}	
 4432              		.loc 1 1348 0
 4433 09ac FFF7FEFF 		bl	TP_bt1120_720P_1080P_mode0_w0
 4434              	.LVL718:
 4435 09b0 FFF7D3BB 		b	.L134
 4436              	.L170:
1350:VS4210/monitor.c **** 		TP_bt1120_1080P_1080P_mode0_w0();
 4437              		.loc 1 1350 0
 4438 09b4 3549     		ldr	r1, .L215+132
 4439 09b6 2046     		mov	r0, r4
 4440 09b8 FFF7FEFF 		bl	stricmp
ARM GAS  /tmp/ccZa3c9M.s 			page 130


 4441              	.LVL719:
 4442 09bc 18B9     		cbnz	r0, .L171
1351:VS4210/monitor.c **** 	}	
 4443              		.loc 1 1351 0
 4444 09be FFF7FEFF 		bl	TP_bt1120_1080P_1080P_mode0_w0
 4445              	.LVL720:
 4446 09c2 FFF7CABB 		b	.L134
 4447              	.L171:
1353:VS4210/monitor.c **** 		TP_bt1120_NTSC_1080P_mode0_w0();
 4448              		.loc 1 1353 0
 4449 09c6 3249     		ldr	r1, .L215+136
 4450 09c8 2046     		mov	r0, r4
 4451 09ca FFF7FEFF 		bl	stricmp
 4452              	.LVL721:
 4453 09ce 18B9     		cbnz	r0, .L172
1354:VS4210/monitor.c **** 	}	
 4454              		.loc 1 1354 0
 4455 09d0 FFF7FEFF 		bl	TP_bt1120_NTSC_1080P_mode0_w0
 4456              	.LVL722:
 4457 09d4 FFF7C1BB 		b	.L134
 4458              	.L172:
1356:VS4210/monitor.c **** 		TP_bt1120_PAL_1080P_mode0_w0();
 4459              		.loc 1 1356 0
 4460 09d8 2E49     		ldr	r1, .L215+140
 4461 09da 2046     		mov	r0, r4
 4462 09dc FFF7FEFF 		bl	stricmp
 4463              	.LVL723:
 4464 09e0 18B9     		cbnz	r0, .L173
1357:VS4210/monitor.c **** 	}	
 4465              		.loc 1 1357 0
 4466 09e2 FFF7FEFF 		bl	TP_bt1120_PAL_1080P_mode0_w0
 4467              	.LVL724:
 4468 09e6 FFF7B8BB 		b	.L134
 4469              	.L173:
1359:VS4210/monitor.c **** 
 4470              		.loc 1 1359 0
 4471 09ea 2B49     		ldr	r1, .L215+144
 4472 09ec 2046     		mov	r0, r4
 4473 09ee FFF7FEFF 		bl	stricmp
 4474              	.LVL725:
 4475 09f2 0028     		cmp	r0, #0
 4476 09f4 54D1     		bne	.L174
1361:VS4210/monitor.c **** 		
 4477              		.loc 1 1361 0
 4478 09f6 0C4B     		ldr	r3, .L215+32
 4479 09f8 1870     		strb	r0, [r3]
1363:VS4210/monitor.c **** 		HS_Select_Win(0);
 4480              		.loc 1 1363 0
 4481 09fa 284B     		ldr	r3, .L215+148
 4482 09fc 1870     		strb	r0, [r3]
1364:VS4210/monitor.c **** 	}
 4483              		.loc 1 1364 0
 4484 09fe FFF7FEFF 		bl	HS_Select_Win
 4485              	.LVL726:
 4486 0a02 FFF7AABB 		b	.L134
 4487              	.L216:
 4488 0a06 00BF     		.align	2
ARM GAS  /tmp/ccZa3c9M.s 			page 131


 4489              	.L215:
 4490 0a08 58010000 		.word	.LC39
 4491 0a0c 00000000 		.word	argv
 4492 0a10 28000000 		.word	.LC27
 4493 0a14 5C010000 		.word	.LC40
 4494 0a18 60010000 		.word	.LC41
 4495 0a1c 00000000 		.word	.LANCHOR4
 4496 0a20 64010000 		.word	.LC42
 4497 0a24 8C010000 		.word	.LC43
 4498 0a28 00000000 		.word	.LANCHOR5
 4499 0a2c 90010000 		.word	.LC44
 4500 0a30 C0010000 		.word	.LC47
 4501 0a34 98010000 		.word	.LC45
 4502 0a38 AC010000 		.word	.LC46
 4503 0a3c D8000000 		.word	.LC34
 4504 0a40 BC000000 		.word	.LC31
 4505 0a44 48010000 		.word	.LC38
 4506 0a48 D4010000 		.word	.LC48
 4507 0a4c E8010000 		.word	.LC49
 4508 0a50 FC010000 		.word	.LC50
 4509 0a54 00020000 		.word	.LC51
 4510 0a58 08020000 		.word	.LC52
 4511 0a5c 0C020000 		.word	.LC53
 4512 0a60 10020000 		.word	.LC54
 4513 0a64 1C020000 		.word	.LC55
 4514 0a68 24020000 		.word	.LC56
 4515 0a6c 30020000 		.word	.LC57
 4516 0a70 38020000 		.word	.LC58
 4517 0a74 00000000 		.word	.LANCHOR10
 4518 0a78 40020000 		.word	.LC59
 4519 0a7c 5C020000 		.word	.LC60
 4520 0a80 00000000 		.word	TP_InputMode
 4521 0a84 60020000 		.word	.LC61
 4522 0a88 74020000 		.word	.LC62
 4523 0a8c 78020000 		.word	.LC63
 4524 0a90 7C020000 		.word	.LC64
 4525 0a94 80020000 		.word	.LC65
 4526 0a98 84020000 		.word	.LC66
 4527 0a9c 00000000 		.word	SelectInputMode
 4528              	.L174:
1366:VS4210/monitor.c **** 
 4529              		.loc 1 1366 0
 4530 0aa0 8849     		ldr	r1, .L217
 4531 0aa2 2046     		mov	r0, r4
 4532 0aa4 FFF7FEFF 		bl	stricmp
 4533              	.LVL727:
 4534 0aa8 28BB     		cbnz	r0, .L175
1368:VS4210/monitor.c **** 	
 4535              		.loc 1 1368 0
 4536 0aaa 874B     		ldr	r3, .L217+4
 4537 0aac 0022     		movs	r2, #0
 4538 0aae 1A70     		strb	r2, [r3]
1370:VS4210/monitor.c **** 		HS_Select_Win(1);
 4539              		.loc 1 1370 0
 4540 0ab0 0120     		movs	r0, #1
 4541 0ab2 864B     		ldr	r3, .L217+8
 4542 0ab4 1870     		strb	r0, [r3]
ARM GAS  /tmp/ccZa3c9M.s 			page 132


1371:VS4210/monitor.c **** 		Printf("\r\nTP_InputMode = %d", (WORD)TP_InputMode);
 4543              		.loc 1 1371 0
 4544 0ab6 FFF7FEFF 		bl	HS_Select_Win
 4545              	.LVL728:
1372:VS4210/monitor.c **** 		
 4546              		.loc 1 1372 0
 4547 0aba 854C     		ldr	r4, .L217+12
 4548 0abc 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4549 0abe 8548     		ldr	r0, .L217+16
 4550 0ac0 FFF7FEFF 		bl	Printf
 4551              	.LVL729:
1374:VS4210/monitor.c **** 			TP_bt1120_720P_1080P_mode0_w0();
 4552              		.loc 1 1374 0
 4553 0ac4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4554 0ac6 052B     		cmp	r3, #5
 4555 0ac8 03D1     		bne	.L176
1375:VS4210/monitor.c **** 			else if(TP_InputMode==6)
 4556              		.loc 1 1375 0
 4557 0aca FFF7FEFF 		bl	TP_bt1120_720P_1080P_mode0_w0
 4558              	.LVL730:
 4559 0ace FFF744BB 		b	.L134
 4560              	.L176:
1376:VS4210/monitor.c **** 				TP_bt1120_1080P_1080P_mode0_w0();
 4561              		.loc 1 1376 0
 4562 0ad2 062B     		cmp	r3, #6
 4563 0ad4 03D1     		bne	.L177
1377:VS4210/monitor.c **** 			else if(TP_InputMode==0)
 4564              		.loc 1 1377 0
 4565 0ad6 FFF7FEFF 		bl	TP_bt1120_1080P_1080P_mode0_w0
 4566              	.LVL731:
 4567 0ada FFF73EBB 		b	.L134
 4568              	.L177:
1378:VS4210/monitor.c **** 				TP_bt1120_NTSC_1080P_mode0_w0();
 4569              		.loc 1 1378 0
 4570 0ade 1BB9     		cbnz	r3, .L178
1379:VS4210/monitor.c **** 			else if(TP_InputMode==1)
 4571              		.loc 1 1379 0
 4572 0ae0 FFF7FEFF 		bl	TP_bt1120_NTSC_1080P_mode0_w0
 4573              	.LVL732:
 4574 0ae4 FFF739BB 		b	.L134
 4575              	.L178:
1380:VS4210/monitor.c **** 				TP_bt1120_PAL_1080P_mode0_w0();
 4576              		.loc 1 1380 0
 4577 0ae8 012B     		cmp	r3, #1
 4578 0aea 7FF436AB 		bne	.L134
1381:VS4210/monitor.c **** 			
 4579              		.loc 1 1381 0
 4580 0aee FFF7FEFF 		bl	TP_bt1120_PAL_1080P_mode0_w0
 4581              	.LVL733:
 4582 0af2 FFF732BB 		b	.L134
 4583              	.L175:
1385:VS4210/monitor.c **** 		extern tByte bSignal[4] ;
 4584              		.loc 1 1385 0
 4585 0af6 7849     		ldr	r1, .L217+20
 4586 0af8 2046     		mov	r0, r4
 4587 0afa FFF7FEFF 		bl	stricmp
 4588              	.LVL734:
ARM GAS  /tmp/ccZa3c9M.s 			page 133


 4589 0afe A8B9     		cbnz	r0, .L179
 4590              	.LBB5:
1387:VS4210/monitor.c **** 		Printf("\r\nbSignal[1] = %d", (WORD) bSignal[1]);
 4591              		.loc 1 1387 0
 4592 0b00 764C     		ldr	r4, .L217+24
 4593 0b02 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4594 0b04 7648     		ldr	r0, .L217+28
 4595 0b06 FFF7FEFF 		bl	Printf
 4596              	.LVL735:
1388:VS4210/monitor.c **** 		Printf("\r\nbSignal[2] = %d", (WORD) bSignal[2]);
 4597              		.loc 1 1388 0
 4598 0b0a 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 4599 0b0c 7548     		ldr	r0, .L217+32
 4600 0b0e FFF7FEFF 		bl	Printf
 4601              	.LVL736:
1389:VS4210/monitor.c **** 		Printf("\r\nbSignal[3] = %d", (WORD) bSignal[3]);
 4602              		.loc 1 1389 0
 4603 0b12 A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 4604 0b14 7448     		ldr	r0, .L217+36
 4605 0b16 FFF7FEFF 		bl	Printf
 4606              	.LVL737:
1390:VS4210/monitor.c **** 
 4607              		.loc 1 1390 0
 4608 0b1a E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 4609 0b1c 7348     		ldr	r0, .L217+40
 4610 0b1e FFF7FEFF 		bl	Printf
 4611              	.LVL738:
1392:VS4210/monitor.c **** 							
 4612              		.loc 1 1392 0
 4613 0b22 694B     		ldr	r3, .L217+4
 4614 0b24 0022     		movs	r2, #0
 4615 0b26 1A70     		strb	r2, [r3]
 4616              	.LBE5:
 4617 0b28 FFF717BB 		b	.L134
 4618              	.L179:
1395:VS4210/monitor.c **** 
 4619              		.loc 1 1395 0
 4620 0b2c 7049     		ldr	r1, .L217+44
 4621 0b2e 2046     		mov	r0, r4
 4622 0b30 FFF7FEFF 		bl	stricmp
 4623              	.LVL739:
 4624 0b34 30B9     		cbnz	r0, .L180
1397:VS4210/monitor.c **** 		SET_HDMI_SYNC_PARA();
 4625              		.loc 1 1397 0
 4626 0b36 644B     		ldr	r3, .L217+4
 4627 0b38 0022     		movs	r2, #0
 4628 0b3a 1A70     		strb	r2, [r3]
1398:VS4210/monitor.c **** 
 4629              		.loc 1 1398 0
 4630 0b3c FFF7FEFF 		bl	SET_HDMI_SYNC_PARA
 4631              	.LVL740:
 4632 0b40 FFF70BBB 		b	.L134
 4633              	.L180:
1401:VS4210/monitor.c **** 
 4634              		.loc 1 1401 0
 4635 0b44 6B49     		ldr	r1, .L217+48
 4636 0b46 2046     		mov	r0, r4
ARM GAS  /tmp/ccZa3c9M.s 			page 134


 4637 0b48 FFF7FEFF 		bl	stricmp
 4638              	.LVL741:
 4639 0b4c 30B9     		cbnz	r0, .L181
1403:VS4210/monitor.c **** 		SET_AHD_SYNC_PARA();
 4640              		.loc 1 1403 0
 4641 0b4e 5E4B     		ldr	r3, .L217+4
 4642 0b50 0022     		movs	r2, #0
 4643 0b52 1A70     		strb	r2, [r3]
1404:VS4210/monitor.c **** 
 4644              		.loc 1 1404 0
 4645 0b54 FFF7FEFF 		bl	SET_AHD_SYNC_PARA
 4646              	.LVL742:
 4647 0b58 FFF7FFBA 		b	.L134
 4648              	.L181:
1407:VS4210/monitor.c **** 
 4649              		.loc 1 1407 0
 4650 0b5c 6649     		ldr	r1, .L217+52
 4651 0b5e 2046     		mov	r0, r4
 4652 0b60 FFF7FEFF 		bl	stricmp
 4653              	.LVL743:
 4654 0b64 18B9     		cbnz	r0, .L182
1409:VS4210/monitor.c **** 
 4655              		.loc 1 1409 0
 4656 0b66 FFF7FEFF 		bl	Init_TP280x_RegSet
 4657              	.LVL744:
 4658 0b6a FFF7F6BA 		b	.L134
 4659              	.L182:
1412:VS4210/monitor.c **** 
 4660              		.loc 1 1412 0
 4661 0b6e 6349     		ldr	r1, .L217+56
 4662 0b70 2046     		mov	r0, r4
 4663 0b72 FFF7FEFF 		bl	stricmp
 4664              	.LVL745:
 4665 0b76 30B9     		cbnz	r0, .L183
1414:VS4210/monitor.c **** 		SET_HDMI_640_480P_PARA();
 4666              		.loc 1 1414 0
 4667 0b78 534B     		ldr	r3, .L217+4
 4668 0b7a 0022     		movs	r2, #0
 4669 0b7c 1A70     		strb	r2, [r3]
1415:VS4210/monitor.c **** 
 4670              		.loc 1 1415 0
 4671 0b7e FFF7FEFF 		bl	SET_HDMI_640_480P_PARA
 4672              	.LVL746:
 4673 0b82 FFF7EABA 		b	.L134
 4674              	.L183:
1418:VS4210/monitor.c **** 
 4675              		.loc 1 1418 0
 4676 0b86 5E49     		ldr	r1, .L217+60
 4677 0b88 2046     		mov	r0, r4
 4678 0b8a FFF7FEFF 		bl	stricmp
 4679              	.LVL747:
 4680 0b8e 30B9     		cbnz	r0, .L184
1420:VS4210/monitor.c **** 		SET_VS4210_720_480_out();
 4681              		.loc 1 1420 0
 4682 0b90 4D4B     		ldr	r3, .L217+4
 4683 0b92 0022     		movs	r2, #0
 4684 0b94 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccZa3c9M.s 			page 135


1421:VS4210/monitor.c **** 		
 4685              		.loc 1 1421 0
 4686 0b96 FFF7FEFF 		bl	SET_VS4210_720_480_out
 4687              	.LVL748:
 4688 0b9a FFF7DEBA 		b	.L134
 4689              	.L184:
1424:VS4210/monitor.c **** 
 4690              		.loc 1 1424 0
 4691 0b9e 5949     		ldr	r1, .L217+64
 4692 0ba0 2046     		mov	r0, r4
 4693 0ba2 FFF7FEFF 		bl	stricmp
 4694              	.LVL749:
 4695 0ba6 88B9     		cbnz	r0, .L185
1426:VS4210/monitor.c **** 		TVI_Command=0x0F;
 4696              		.loc 1 1426 0
 4697 0ba8 0023     		movs	r3, #0
 4698 0baa 474A     		ldr	r2, .L217+4
 4699 0bac 1370     		strb	r3, [r2]
1427:VS4210/monitor.c **** 		presetNum=0;
 4700              		.loc 1 1427 0
 4701 0bae 564A     		ldr	r2, .L217+68
 4702 0bb0 0F21     		movs	r1, #15
 4703 0bb2 1170     		strb	r1, [r2]
1428:VS4210/monitor.c **** 		TVI_speed=0;
 4704              		.loc 1 1428 0
 4705 0bb4 554A     		ldr	r2, .L217+72
 4706 0bb6 1370     		strb	r3, [r2]
1429:VS4210/monitor.c **** 		TVI_Chksum=0xC5;
 4707              		.loc 1 1429 0
 4708 0bb8 554A     		ldr	r2, .L217+76
 4709 0bba 1370     		strb	r3, [r2]
1430:VS4210/monitor.c **** 		ptztxflag=1;
 4710              		.loc 1 1430 0
 4711 0bbc 554B     		ldr	r3, .L217+80
 4712 0bbe C522     		movs	r2, #197
 4713 0bc0 1A70     		strb	r2, [r3]
1431:VS4210/monitor.c **** 		
 4714              		.loc 1 1431 0
 4715 0bc2 554B     		ldr	r3, .L217+84
 4716 0bc4 0122     		movs	r2, #1
 4717 0bc6 1A60     		str	r2, [r3]
 4718 0bc8 FFF7C7BA 		b	.L134
 4719              	.L185:
1434:VS4210/monitor.c **** 
 4720              		.loc 1 1434 0
 4721 0bcc 5349     		ldr	r1, .L217+88
 4722 0bce 2046     		mov	r0, r4
 4723 0bd0 FFF7FEFF 		bl	stricmp
 4724              	.LVL750:
 4725 0bd4 90B9     		cbnz	r0, .L186
1436:VS4210/monitor.c **** 		TVI_Command=0x06;
 4726              		.loc 1 1436 0
 4727 0bd6 0023     		movs	r3, #0
 4728 0bd8 3B4A     		ldr	r2, .L217+4
 4729 0bda 1370     		strb	r3, [r2]
1437:VS4210/monitor.c **** 		presetNum=0x1F;
 4730              		.loc 1 1437 0
ARM GAS  /tmp/ccZa3c9M.s 			page 136


 4731 0bdc 4A4A     		ldr	r2, .L217+68
 4732 0bde 0621     		movs	r1, #6
 4733 0be0 1170     		strb	r1, [r2]
1438:VS4210/monitor.c **** 		TVI_speed=0;
 4734              		.loc 1 1438 0
 4735 0be2 4A4A     		ldr	r2, .L217+72
 4736 0be4 1F21     		movs	r1, #31
 4737 0be6 1170     		strb	r1, [r2]
1439:VS4210/monitor.c **** 		TVI_Chksum=0xDB;
 4738              		.loc 1 1439 0
 4739 0be8 494A     		ldr	r2, .L217+76
 4740 0bea 1370     		strb	r3, [r2]
1440:VS4210/monitor.c **** 		ptztxflag=1;
 4741              		.loc 1 1440 0
 4742 0bec 494B     		ldr	r3, .L217+80
 4743 0bee DB22     		movs	r2, #219
 4744 0bf0 1A70     		strb	r2, [r3]
1441:VS4210/monitor.c **** 		
 4745              		.loc 1 1441 0
 4746 0bf2 494B     		ldr	r3, .L217+84
 4747 0bf4 0122     		movs	r2, #1
 4748 0bf6 1A60     		str	r2, [r3]
 4749 0bf8 FFF7AFBA 		b	.L134
 4750              	.L186:
1444:VS4210/monitor.c **** 
 4751              		.loc 1 1444 0
 4752 0bfc 4849     		ldr	r1, .L217+92
 4753 0bfe 2046     		mov	r0, r4
 4754 0c00 FFF7FEFF 		bl	stricmp
 4755              	.LVL751:
 4756 0c04 90B9     		cbnz	r0, .L187
1446:VS4210/monitor.c **** 		TVI_Command=0x07;
 4757              		.loc 1 1446 0
 4758 0c06 0023     		movs	r3, #0
 4759 0c08 2F4A     		ldr	r2, .L217+4
 4760 0c0a 1370     		strb	r3, [r2]
1447:VS4210/monitor.c **** 		presetNum=0x1F;
 4761              		.loc 1 1447 0
 4762 0c0c 3E4A     		ldr	r2, .L217+68
 4763 0c0e 0721     		movs	r1, #7
 4764 0c10 1170     		strb	r1, [r2]
1448:VS4210/monitor.c **** 		TVI_speed=0;
 4765              		.loc 1 1448 0
 4766 0c12 3E4A     		ldr	r2, .L217+72
 4767 0c14 1F21     		movs	r1, #31
 4768 0c16 1170     		strb	r1, [r2]
1449:VS4210/monitor.c **** 		TVI_Chksum=0xDC;
 4769              		.loc 1 1449 0
 4770 0c18 3D4A     		ldr	r2, .L217+76
 4771 0c1a 1370     		strb	r3, [r2]
1450:VS4210/monitor.c **** 		ptztxflag=1;
 4772              		.loc 1 1450 0
 4773 0c1c 3D4B     		ldr	r3, .L217+80
 4774 0c1e DC22     		movs	r2, #220
 4775 0c20 1A70     		strb	r2, [r3]
1451:VS4210/monitor.c **** 
 4776              		.loc 1 1451 0
ARM GAS  /tmp/ccZa3c9M.s 			page 137


 4777 0c22 3D4B     		ldr	r3, .L217+84
 4778 0c24 0122     		movs	r2, #1
 4779 0c26 1A60     		str	r2, [r3]
 4780 0c28 FFF797BA 		b	.L134
 4781              	.L187:
1453:VS4210/monitor.c **** 
 4782              		.loc 1 1453 0
 4783 0c2c 3D49     		ldr	r1, .L217+96
 4784 0c2e 2046     		mov	r0, r4
 4785 0c30 FFF7FEFF 		bl	stricmp
 4786              	.LVL752:
 4787 0c34 90B9     		cbnz	r0, .L188
1455:VS4210/monitor.c **** 		TVI_Command=0x09;
 4788              		.loc 1 1455 0
 4789 0c36 0023     		movs	r3, #0
 4790 0c38 234A     		ldr	r2, .L217+4
 4791 0c3a 1370     		strb	r3, [r2]
1456:VS4210/monitor.c **** 		presetNum=0;
 4792              		.loc 1 1456 0
 4793 0c3c 324A     		ldr	r2, .L217+68
 4794 0c3e 0921     		movs	r1, #9
 4795 0c40 1170     		strb	r1, [r2]
1457:VS4210/monitor.c **** 		TVI_speed=0x1F;
 4796              		.loc 1 1457 0
 4797 0c42 324A     		ldr	r2, .L217+72
 4798 0c44 1370     		strb	r3, [r2]
1458:VS4210/monitor.c **** 		TVI_Chksum=0xDE;
 4799              		.loc 1 1458 0
 4800 0c46 324B     		ldr	r3, .L217+76
 4801 0c48 1F22     		movs	r2, #31
 4802 0c4a 1A70     		strb	r2, [r3]
1459:VS4210/monitor.c **** 		ptztxflag=1;
 4803              		.loc 1 1459 0
 4804 0c4c 314B     		ldr	r3, .L217+80
 4805 0c4e DE22     		movs	r2, #222
 4806 0c50 1A70     		strb	r2, [r3]
1460:VS4210/monitor.c **** 
 4807              		.loc 1 1460 0
 4808 0c52 314B     		ldr	r3, .L217+84
 4809 0c54 0122     		movs	r2, #1
 4810 0c56 1A60     		str	r2, [r3]
 4811 0c58 FFF77FBA 		b	.L134
 4812              	.L188:
1462:VS4210/monitor.c **** 
 4813              		.loc 1 1462 0
 4814 0c5c 3249     		ldr	r1, .L217+100
 4815 0c5e 2046     		mov	r0, r4
 4816 0c60 FFF7FEFF 		bl	stricmp
 4817              	.LVL753:
 4818 0c64 90B9     		cbnz	r0, .L189
1464:VS4210/monitor.c **** 		TVI_Command=0x08;
 4819              		.loc 1 1464 0
 4820 0c66 0023     		movs	r3, #0
 4821 0c68 174A     		ldr	r2, .L217+4
 4822 0c6a 1370     		strb	r3, [r2]
1465:VS4210/monitor.c **** 		presetNum=0;
 4823              		.loc 1 1465 0
ARM GAS  /tmp/ccZa3c9M.s 			page 138


 4824 0c6c 264A     		ldr	r2, .L217+68
 4825 0c6e 0821     		movs	r1, #8
 4826 0c70 1170     		strb	r1, [r2]
1466:VS4210/monitor.c **** 		TVI_speed=0x1F;
 4827              		.loc 1 1466 0
 4828 0c72 264A     		ldr	r2, .L217+72
 4829 0c74 1370     		strb	r3, [r2]
1467:VS4210/monitor.c **** 		TVI_Chksum=0xDD;
 4830              		.loc 1 1467 0
 4831 0c76 264B     		ldr	r3, .L217+76
 4832 0c78 1F22     		movs	r2, #31
 4833 0c7a 1A70     		strb	r2, [r3]
1468:VS4210/monitor.c **** 		ptztxflag=1;
 4834              		.loc 1 1468 0
 4835 0c7c 254B     		ldr	r3, .L217+80
 4836 0c7e DD22     		movs	r2, #221
 4837 0c80 1A70     		strb	r2, [r3]
1469:VS4210/monitor.c **** 		
 4838              		.loc 1 1469 0
 4839 0c82 254B     		ldr	r3, .L217+84
 4840 0c84 0122     		movs	r2, #1
 4841 0c86 1A60     		str	r2, [r3]
 4842 0c88 FFF767BA 		b	.L134
 4843              	.L189:
1472:VS4210/monitor.c **** 			Monitor_flag=_FALSE;
 4844              		.loc 1 1472 0
 4845 0c8c 2749     		ldr	r1, .L217+104
 4846 0c8e 2046     		mov	r0, r4
 4847 0c90 FFF7FEFF 		bl	stricmp
 4848              	.LVL754:
 4849 0c94 80B9     		cbnz	r0, .L190
1473:VS4210/monitor.c **** 		TVI_Command=0x14;
 4850              		.loc 1 1473 0
 4851 0c96 0023     		movs	r3, #0
 4852 0c98 0B4A     		ldr	r2, .L217+4
 4853 0c9a 1370     		strb	r3, [r2]
1474:VS4210/monitor.c **** 			presetNum=0;
 4854              		.loc 1 1474 0
 4855 0c9c 1A4A     		ldr	r2, .L217+68
 4856 0c9e 1421     		movs	r1, #20
 4857 0ca0 1170     		strb	r1, [r2]
1475:VS4210/monitor.c **** 			TVI_speed=0;
 4858              		.loc 1 1475 0
 4859 0ca2 1A4A     		ldr	r2, .L217+72
 4860 0ca4 1370     		strb	r3, [r2]
1476:VS4210/monitor.c **** 			TVI_Chksum=0;
 4861              		.loc 1 1476 0
 4862 0ca6 1A4A     		ldr	r2, .L217+76
 4863 0ca8 1370     		strb	r3, [r2]
1477:VS4210/monitor.c **** 				ptztxflag=1;	
 4864              		.loc 1 1477 0
 4865 0caa 1A4A     		ldr	r2, .L217+80
 4866 0cac 1370     		strb	r3, [r2]
1478:VS4210/monitor.c **** 			}
 4867              		.loc 1 1478 0
 4868 0cae 1A4B     		ldr	r3, .L217+84
 4869 0cb0 0122     		movs	r2, #1
ARM GAS  /tmp/ccZa3c9M.s 			page 139


 4870 0cb2 1A60     		str	r2, [r3]
 4871 0cb4 FFF751BA 		b	.L134
 4872              	.L190:
1865:VS4210/monitor.c **** 	}
 4873              		.loc 1 1865 0
 4874 0cb8 1D48     		ldr	r0, .L217+108
 4875 0cba FFF7FEFF 		bl	Printf
 4876              	.LVL755:
 4877 0cbe FFF74CBA 		b	.L134
 4878              	.L218:
 4879 0cc2 00BF     		.align	2
 4880              	.L217:
 4881 0cc4 8C020000 		.word	.LC67
 4882 0cc8 00000000 		.word	.LANCHOR5
 4883 0ccc 00000000 		.word	SelectInputMode
 4884 0cd0 00000000 		.word	TP_InputMode
 4885 0cd4 60020000 		.word	.LC61
 4886 0cd8 90020000 		.word	.LC68
 4887 0cdc 00000000 		.word	bSignal
 4888 0ce0 94020000 		.word	.LC69
 4889 0ce4 A8020000 		.word	.LC70
 4890 0ce8 BC020000 		.word	.LC71
 4891 0cec D0020000 		.word	.LC72
 4892 0cf0 E4020000 		.word	.LC73
 4893 0cf4 EC020000 		.word	.LC74
 4894 0cf8 F4020000 		.word	.LC75
 4895 0cfc FC020000 		.word	.LC76
 4896 0d00 04030000 		.word	.LC77
 4897 0d04 0C030000 		.word	.LC78
 4898 0d08 00000000 		.word	TVI_Command
 4899 0d0c 00000000 		.word	presetNum
 4900 0d10 00000000 		.word	TVI_speed
 4901 0d14 00000000 		.word	TVI_Chksum
 4902 0d18 00000000 		.word	ptztxflag
 4903 0d1c 10030000 		.word	.LC79
 4904 0d20 14030000 		.word	.LC80
 4905 0d24 18030000 		.word	.LC81
 4906 0d28 1C030000 		.word	.LC82
 4907 0d2c 20030000 		.word	.LC83
 4908 0d30 24030000 		.word	.LC84
 4909              		.cfi_endproc
 4910              	.LFE92:
 4912              		.global	AccessEnable
 4913              		.global	RS2_Xbusy
 4914              		.global	RS_Xbusy
 4915              		.global	RS2_out
 4916              		.global	RS2_in
 4917              		.global	RS_out
 4918              		.global	RS_in
 4919              		.comm	DVR_buf,30,4
 4920              		.comm	RS2_buf,200,4
 4921              		.comm	RS_buf,30,4
 4922              		.global	Monitor_I2C
 4923              		.global	Monitor_flag
 4924              		.global	echo
 4925              		.global	argc
 4926              		.comm	argv,28,4
ARM GAS  /tmp/ccZa3c9M.s 			page 140


 4927              		.comm	monstr,30,4
 4928              		.comm	MonWdata,1,1
 4929              		.comm	MonRdata,1,1
 4930              		.comm	MonIndex,1,1
 4931              		.global	MonAddress
 4932              		.comm	newInRes,4,4
 4933              		.section	.bss.Monitor_flag,"aw",%nobits
 4934              		.set	.LANCHOR5,. + 0
 4937              	Monitor_flag:
 4938 0000 00       		.space	1
 4939              		.section	.bss.RS2_Xbusy,"aw",%nobits
 4940              		.align	2
 4943              	RS2_Xbusy:
 4944 0000 00000000 		.space	4
 4945              		.section	.bss.RS2_in,"aw",%nobits
 4946              		.set	.LANCHOR2,. + 0
 4949              	RS2_in:
 4950 0000 00       		.space	1
 4951              		.section	.bss.RS2_out,"aw",%nobits
 4952              		.set	.LANCHOR3,. + 0
 4955              	RS2_out:
 4956 0000 00       		.space	1
 4957              		.section	.bss.RS_Xbusy,"aw",%nobits
 4958              		.align	2
 4961              	RS_Xbusy:
 4962 0000 00000000 		.space	4
 4963              		.section	.bss.RS_in,"aw",%nobits
 4964              		.set	.LANCHOR0,. + 0
 4967              	RS_in:
 4968 0000 00       		.space	1
 4969              		.section	.bss.RS_out,"aw",%nobits
 4970              		.set	.LANCHOR1,. + 0
 4973              	RS_out:
 4974 0000 00       		.space	1
 4975              		.section	.bss.argc,"aw",%nobits
 4976              		.set	.LANCHOR7,. + 0
 4979              	argc:
 4980 0000 00       		.space	1
 4981              		.section	.bss.comment.8572,"aw",%nobits
 4982              		.set	.LANCHOR6,. + 0
 4985              	comment.8572:
 4986 0000 00       		.space	1
 4987              		.section	.bss.incnt.8573,"aw",%nobits
 4988              		.set	.LANCHOR8,. + 0
 4991              	incnt.8573:
 4992 0000 00       		.space	1
 4993              		.section	.bss.last_argc.8574,"aw",%nobits
 4994              		.set	.LANCHOR9,. + 0
 4997              	last_argc.8574:
 4998 0000 00       		.space	1
 4999              		.section	.data.AccessEnable,"aw",%progbits
 5000              		.align	2
 5001              		.set	.LANCHOR10,. + 0
 5004              	AccessEnable:
 5005 0000 01000000 		.word	1
 5006              		.section	.data.MonAddress,"aw",%progbits
 5009              	MonAddress:
ARM GAS  /tmp/ccZa3c9M.s 			page 141


 5010 0000 8A       		.byte	-118
 5011              		.section	.data.Monitor_I2C,"aw",%progbits
 5012              		.set	.LANCHOR4,. + 0
 5015              	Monitor_I2C:
 5016 0000 40       		.byte	64
 5017              		.section	.data.echo,"aw",%progbits
 5018              		.align	2
 5021              	echo:
 5022 0000 01000000 		.word	1
 5023              		.section	.rodata.MonHelp.str1.4,"aMS",%progbits,1
 5024              		.align	2
 5025              	.LC4:
 5026 0000 0D0A3D3D 		.ascii	"\015\012==========================================="
 5026      3D3D3D3D 
 5026      3D3D3D3D 
 5026      3D3D3D3D 
 5026      3D3D3D3D 
 5027 002d 3D3D3D3D 		.ascii	"============\000"
 5027      3D3D3D3D 
 5027      3D3D3D3D 
 5027      00
 5028 003a 0000     		.space	2
 5029              	.LC5:
 5030 003c 0D0A3E3E 		.ascii	"\015\012>>>     Welcome to ML076HQ     Rev 1.00    "
 5030      3E202020 
 5030      20205765 
 5030      6C636F6D 
 5030      6520746F 
 5031 0069 203C3C3C 		.ascii	" <<<\000"
 5031      00
 5032 006e 0000     		.space	2
 5033              	.LC6:
 5034 0070 0D0A2020 		.ascii	"\015\012   R ii             ; Read TP2824 data\000"
 5034      20522069 
 5034      69202020 
 5034      20202020 
 5034      20202020 
 5035 0099 000000   		.space	3
 5036              	.LC7:
 5037 009c 0D0A2020 		.ascii	"\015\012   W ii dd          ; Write TP2824 data\000"
 5037      20572069 
 5037      69206464 
 5037      20202020 
 5037      20202020 
 5038 00c6 0000     		.space	2
 5039              	.LC8:
 5040 00c8 0D0A2020 		.ascii	"\015\012   VR ii             ; Read VS4210 data\000"
 5040      20565220 
 5040      69692020 
 5040      20202020 
 5040      20202020 
 5041 00f2 0000     		.space	2
 5042              	.LC9:
 5043 00f4 0D0A2020 		.ascii	"\015\012   VW ii dd          ; Write VS4210 data\000"
 5043      20565720 
 5043      69692064 
 5043      64202020 
ARM GAS  /tmp/ccZa3c9M.s 			page 142


 5043      20202020 
 5044 011f 00       		.space	1
 5045              	.LC10:
 5046 0120 0D0A2020 		.ascii	"\015\012   D [ii] [cc]      ; Dump\000"
 5046      2044205B 
 5046      69695D20 
 5046      5B63635D 
 5046      20202020 
 5047 013d 000000   		.space	3
 5048              	.LC11:
 5049 0140 0D0A2020 		.ascii	"\015\012   C aa             ; Change I2C address\000"
 5049      20432061 
 5049      61202020 
 5049      20202020 
 5049      20202020 
 5050 016b 00       		.space	1
 5051              	.LC12:
 5052 016c 0D0A2020 		.ascii	"\015\012   M ?              ; Current Input\000"
 5052      204D203F 
 5052      20202020 
 5052      20202020 
 5052      20202020 
 5053 0192 0000     		.space	2
 5054              	.LC13:
 5055 0194 0D0A2020 		.ascii	"\015\012   M dd             ; Change Input\000"
 5055      204D2064 
 5055      64202020 
 5055      20202020 
 5055      20202020 
 5056 01b9 000000   		.space	3
 5057              	.LC14:
 5058 01bc 0D0A2020 		.ascii	"\015\012   Access [0,1]     ; Program TW88xx Access"
 5058      20416363 
 5058      65737320 
 5058      5B302C31 
 5058      5D202020 
 5059 01e9 204F4646 		.ascii	" OFF/ON\000"
 5059      2F4F4E00 
 5060 01f1 000000   		.space	3
 5061              	.LC15:
 5062 01f4 0D0A2020 		.ascii	"\015\012   AutoDetect [0,1] ; PC Automode OFF/ON\000"
 5062      20417574 
 5062      6F446574 
 5062      65637420 
 5062      5B302C31 
 5063 021f 00       		.space	1
 5064              	.LC16:
 5065 0220 0D0A2020 		.ascii	"\015\012   PCAuto\011\011    ; RUN PC Auto Adjust\000"
 5065      20504341 
 5065      75746F09 
 5065      09202020 
 5065      203B2052 
 5066 0246 0000     		.space	2
 5067              	.LC17:
 5068 0248 0D0A2020 		.ascii	"\015\012   Debug [0..255]   ; Debuging display leve"
 5068      20446562 
 5068      7567205B 
ARM GAS  /tmp/ccZa3c9M.s 			page 143


 5068      302E2E32 
 5068      35355D20 
 5069 0275 6C00     		.ascii	"l\000"
 5070 0277 00       		.space	1
 5071              	.LC18:
 5072 0278 0D0A2020 		.ascii	"\015\012   Echo On/Off      ; Terminal Echoing On/O"
 5072      20456368 
 5072      6F204F6E 
 5072      2F4F6666 
 5072      20202020 
 5073 02a5 666600   		.ascii	"ff\000"
 5074              	.LC19:
 5075 02a8 0D0A2020 		.ascii	"\015\012   Delta            ; Init DeltaRGB Panel\000"
 5075      2044656C 
 5075      74612020 
 5075      20202020 
 5075      20202020 
 5076              	.LC20:
 5077 02d4 0D0A2020 		.ascii	"\015\012   Delta w ii dh dl; SPI Write to DeltaRGB "
 5077      2044656C 
 5077      74612077 
 5077      20696920 
 5077      64682064 
 5078 0301 50616E65 		.ascii	"Panel\000"
 5078      6C00
 5079 0307 00       		.space	1
 5080              	.LC21:
 5081 0308 0D0A00   		.ascii	"\015\012\000"
 5082              		.section	.rodata.Monitor.str1.4,"aMS",%progbits,1
 5083              		.align	2
 5084              	.LC25:
 5085 0000 5700     		.ascii	"W\000"
 5086 0002 0000     		.space	2
 5087              	.LC26:
 5088 0004 0D0A4545 		.ascii	"\015\012EEPROM Write addr=%02x  data=%02x\000"
 5088      50524F4D 
 5088      20577269 
 5088      74652061 
 5088      6464723D 
 5089              	.LC27:
 5090 0028 0D0A5653 		.ascii	"\015\012VS4210 Write addr=%02x  data=%02x\000"
 5090      34323130 
 5090      20577269 
 5090      74652061 
 5090      6464723D 
 5091              	.LC28:
 5092 004c 0D0A5653 		.ascii	"\015\012VS8812 Write addr=%02x  data=%02x\000"
 5092      38383132 
 5092      20577269 
 5092      74652061 
 5092      6464723D 
 5093              	.LC29:
 5094 0070 0D0A5450 		.ascii	"\015\012TP2824  Read addr=%02x  data=%02x\000"
 5094      32383234 
 5094      20205265 
 5094      61642061 
 5094      6464723D 
ARM GAS  /tmp/ccZa3c9M.s 			page 144


 5095              	.LC30:
 5096 0094 0D0A4954 		.ascii	"\015\012IT66021  Read addr=%02x  data=%02x\000"
 5096      36363032 
 5096      31202052 
 5096      65616420 
 5096      61646472 
 5097 00b9 000000   		.space	3
 5098              	.LC31:
 5099 00bc 0D0A4932 		.ascii	"\015\012I2C addr. error\000"
 5099      43206164 
 5099      64722E20 
 5099      6572726F 
 5099      7200
 5100 00ce 0000     		.space	2
 5101              	.LC32:
 5102 00d0 2900     		.ascii	")\000"
 5103 00d2 0000     		.space	2
 5104              	.LC33:
 5105 00d4 5200     		.ascii	"R\000"
 5106 00d6 0000     		.space	2
 5107              	.LC34:
 5108 00d8 0D0A4545 		.ascii	"\015\012EEPROM  Read addr=%02x  data=%02x\000"
 5108      50524F4D 
 5108      20205265 
 5108      61642061 
 5108      6464723D 
 5109              	.LC35:
 5110 00fc 0D0A5653 		.ascii	"\015\012VS4210  Read addr=%02x  data=%02x\000"
 5110      34323130 
 5110      20205265 
 5110      61642061 
 5110      6464723D 
 5111              	.LC36:
 5112 0120 0D0A5653 		.ascii	"\015\012VS8812  Read addr=%02x  data=%02x\000"
 5112      38383132 
 5112      20205265 
 5112      61642061 
 5112      6464723D 
 5113              	.LC37:
 5114 0144 565200   		.ascii	"VR\000"
 5115 0147 00       		.space	1
 5116              	.LC38:
 5117 0148 0D0A3430 		.ascii	"\015\01240,%02x,%02x\000"
 5117      2C253032 
 5117      782C2530 
 5117      327800
 5118 0157 00       		.space	1
 5119              	.LC39:
 5120 0158 565700   		.ascii	"VW\000"
 5121 015b 00       		.space	1
 5122              	.LC40:
 5123 015c 2800     		.ascii	"(\000"
 5124 015e 0000     		.space	2
 5125              	.LC41:
 5126 0160 49324300 		.ascii	"I2C\000"
 5127              	.LC42:
 5128 0164 0D0A4368 		.ascii	"\015\012Change I2C addr. from %02x to %02x\000"
ARM GAS  /tmp/ccZa3c9M.s 			page 145


 5128      616E6765 
 5128      20493243 
 5128      20616464 
 5128      722E2066 
 5129 0189 000000   		.space	3
 5130              	.LC43:
 5131 018c 5100     		.ascii	"Q\000"
 5132 018e 0000     		.space	2
 5133              	.LC44:
 5134 0190 44554D50 		.ascii	"DUMP\000"
 5134      00
 5135 0195 000000   		.space	3
 5136              	.LC45:
 5137 0198 0D0A4455 		.ascii	"\015\012DUMP EEPROM Reg..\000"
 5137      4D502045 
 5137      4550524F 
 5137      4D205265 
 5137      672E2E00 
 5138              	.LC46:
 5139 01ac 0D0A4455 		.ascii	"\015\012DUMP VS4210 Reg..\000"
 5139      4D502056 
 5139      53343231 
 5139      30205265 
 5139      672E2E00 
 5140              	.LC47:
 5141 01c0 0D0A4455 		.ascii	"\015\012DUMP VS8812 Reg..\000"
 5141      4D502056 
 5141      53383831 
 5141      32205265 
 5141      672E2E00 
 5142              	.LC48:
 5143 01d4 0D0A5653 		.ascii	"\015\012VS8812,%02x,%02x\000"
 5143      38383132 
 5143      2C253032 
 5143      782C2530 
 5143      327800
 5144 01e7 00       		.space	1
 5145              	.LC49:
 5146 01e8 0D0A7470 		.ascii	"\015\012tp28xx,%02x,%02x\000"
 5146      32387878 
 5146      2C253032 
 5146      782C2530 
 5146      327800
 5147 01fb 00       		.space	1
 5148              	.LC50:
 5149 01fc 4800     		.ascii	"H\000"
 5150 01fe 0000     		.space	2
 5151              	.LC51:
 5152 0200 48454C50 		.ascii	"HELP\000"
 5152      00
 5153 0205 000000   		.space	3
 5154              	.LC52:
 5155 0208 3F00     		.ascii	"?\000"
 5156 020a 0000     		.space	2
 5157              	.LC53:
 5158 020c 50574D00 		.ascii	"PWM\000"
 5159              	.LC54:
ARM GAS  /tmp/ccZa3c9M.s 			page 146


 5160 0210 0D0A5057 		.ascii	"\015\012PWM=%d\000"
 5160      4D3D2564 
 5160      00
 5161 0219 000000   		.space	3
 5162              	.LC55:
 5163 021c 414C4352 		.ascii	"ALCR\000"
 5163      00
 5164 0221 000000   		.space	3
 5165              	.LC56:
 5166 0224 0D0A414C 		.ascii	"\015\012ALCR=%04x\000"
 5166      43523D25 
 5166      30347800 
 5167              	.LC57:
 5168 0230 414C4357 		.ascii	"ALCW\000"
 5168      00
 5169 0235 000000   		.space	3
 5170              	.LC58:
 5171 0238 41434345 		.ascii	"ACCESS\000"
 5171      535300
 5172 023f 00       		.space	1
 5173              	.LC59:
 5174 0240 0D0A5653 		.ascii	"\015\012VS4210 AUTO ACCESS = %d\000"
 5174      34323130 
 5174      20415554 
 5174      4F204143 
 5174      43455353 
 5175 025a 0000     		.space	2
 5176              	.LC60:
 5177 025c 57696E00 		.ascii	"Win\000"
 5178              	.LC61:
 5179 0260 0D0A5450 		.ascii	"\015\012TP_InputMode = %d\000"
 5179      5F496E70 
 5179      75744D6F 
 5179      6465203D 
 5179      20256400 
 5180              	.LC62:
 5181 0274 54503000 		.ascii	"TP0\000"
 5182              	.LC63:
 5183 0278 54503100 		.ascii	"TP1\000"
 5184              	.LC64:
 5185 027c 54503200 		.ascii	"TP2\000"
 5186              	.LC65:
 5187 0280 54503300 		.ascii	"TP3\000"
 5188              	.LC66:
 5189 0284 48444D49 		.ascii	"HDMI\000"
 5189      00
 5190 0289 000000   		.space	3
 5191              	.LC67:
 5192 028c 41484400 		.ascii	"AHD\000"
 5193              	.LC68:
 5194 0290 425300   		.ascii	"BS\000"
 5195 0293 00       		.space	1
 5196              	.LC69:
 5197 0294 0D0A6253 		.ascii	"\015\012bSignal[0] = %d\000"
 5197      69676E61 
 5197      6C5B305D 
 5197      203D2025 
ARM GAS  /tmp/ccZa3c9M.s 			page 147


 5197      6400
 5198 02a6 0000     		.space	2
 5199              	.LC70:
 5200 02a8 0D0A6253 		.ascii	"\015\012bSignal[1] = %d\000"
 5200      69676E61 
 5200      6C5B315D 
 5200      203D2025 
 5200      6400
 5201 02ba 0000     		.space	2
 5202              	.LC71:
 5203 02bc 0D0A6253 		.ascii	"\015\012bSignal[2] = %d\000"
 5203      69676E61 
 5203      6C5B325D 
 5203      203D2025 
 5203      6400
 5204 02ce 0000     		.space	2
 5205              	.LC72:
 5206 02d0 0D0A6253 		.ascii	"\015\012bSignal[3] = %d\000"
 5206      69676E61 
 5206      6C5B335D 
 5206      203D2025 
 5206      6400
 5207 02e2 0000     		.space	2
 5208              	.LC73:
 5209 02e4 53455448 		.ascii	"SETHDMI\000"
 5209      444D4900 
 5210              	.LC74:
 5211 02ec 53455441 		.ascii	"SETAHD\000"
 5211      484400
 5212 02f3 00       		.space	1
 5213              	.LC75:
 5214 02f4 54505253 		.ascii	"TPRST\000"
 5214      5400
 5215 02fa 0000     		.space	2
 5216              	.LC76:
 5217 02fc 48444D49 		.ascii	"HDMI6\000"
 5217      3600
 5218 0302 0000     		.space	2
 5219              	.LC77:
 5220 0304 56373230 		.ascii	"V720\000"
 5220      00
 5221 0309 000000   		.space	3
 5222              	.LC78:
 5223 030c 6F6D00   		.ascii	"om\000"
 5224 030f 00       		.space	1
 5225              	.LC79:
 5226 0310 6F7500   		.ascii	"ou\000"
 5227 0313 00       		.space	1
 5228              	.LC80:
 5229 0314 6F6400   		.ascii	"od\000"
 5230 0317 00       		.space	1
 5231              	.LC81:
 5232 0318 6F6C00   		.ascii	"ol\000"
 5233 031b 00       		.space	1
 5234              	.LC82:
 5235 031c 6F7200   		.ascii	"or\000"
 5236 031f 00       		.space	1
ARM GAS  /tmp/ccZa3c9M.s 			page 148


 5237              	.LC83:
 5238 0320 6F7000   		.ascii	"op\000"
 5239 0323 00       		.space	1
 5240              	.LC84:
 5241 0324 0D0A496E 		.ascii	"\015\012Invalid command...\000"
 5241      76616C69 
 5241      6420636F 
 5241      6D6D616E 
 5241      642E2E2E 
 5242              		.section	.rodata.Prompt.str1.4,"aMS",%progbits,1
 5243              		.align	2
 5244              	.LC0:
 5245 0000 0D0A4D43 		.ascii	"\015\012MCU_I2C[%02x][%d:%d:%d:%d]>\000"
 5245      555F4932 
 5245      435B2530 
 5245      32785D5B 
 5245      25643A25 
 5246 001e 0000     		.space	2
 5247              	.LC1:
 5248 0020 0D0A4D43 		.ascii	"\015\012MCU_I2C[%02x][%d:%d:%d]>\000"
 5248      555F4932 
 5248      435B2530 
 5248      32785D5B 
 5248      25643A25 
 5249 003b 00       		.space	1
 5250              	.LC2:
 5251 003c 0D0A4D43 		.ascii	"\015\012MCU_I2C[%02x][%d:%d]>\000"
 5251      555F4932 
 5251      435B2530 
 5251      32785D5B 
 5251      25643A25 
 5252              	.LC3:
 5253 0054 0D0A4D43 		.ascii	"\015\012MCU_I2C[%02x][%d]>\000"
 5253      555F4932 
 5253      435B2530 
 5253      32785D5B 
 5253      25645D3E 
 5254              		.section	.rodata.SET_AHD_SYNC_PARA.str1.4,"aMS",%progbits,1
 5255              		.align	2
 5256              	.LC22:
 5257 0000 0D0A4C6F 		.ascii	"\015\012Loading AHD Embedded Sync para.... \000"
 5257      6164696E 
 5257      67204148 
 5257      4420456D 
 5257      62656464 
 5258              		.section	.rodata.SET_HDMI_640_480P_PARA.str1.4,"aMS",%progbits,1
 5259              		.align	2
 5260              	.LC23:
 5261 0000 0D0A4C6F 		.ascii	"\015\012Loading HDMI 640X480P Embedded Sync para..."
 5261      6164696E 
 5261      67204844 
 5261      4D492036 
 5261      34305834 
 5262 002d 2E2000   		.ascii	". \000"
 5263              		.section	.rodata.SET_HDMI_SYNC_PARA.str1.4,"aMS",%progbits,1
 5264              		.align	2
 5265              	.LC24:
ARM GAS  /tmp/ccZa3c9M.s 			page 149


 5266 0000 0D0A4C6F 		.ascii	"\015\012Loading HDMI Embedded Sync para.... \000"
 5266      6164696E 
 5266      67204844 
 5266      4D492045 
 5266      6D626564 
 5267              		.text
 5268              	.Letext0:
 5269              		.file 2 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_
 5270              		.file 3 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 5271              		.file 4 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 5272              		.file 5 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 5273              		.file 6 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 5274              		.file 7 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 5275              		.file 8 "VS4210/VXIS_Extern_Define.h"
 5276              		.file 9 "TP2824/tpinc/TP2802.h"
 5277              		.file 10 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 5278              		.file 11 "sw_i2c/VX_swi2c.h"
 5279              		.file 12 "VS4210/VS4210.h"
 5280              		.file 13 "Drivers/CMSIS/Include/core_cm3.h"
 5281              		.file 14 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 5282              		.file 15 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 5283              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 5284              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 5285              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 5286              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 5287              		.file 20 "VS4210/printf.h"
 5288              		.file 21 "VS4210/monitor.h"
 5289              		.file 22 "Inc/main.h"
ARM GAS  /tmp/ccZa3c9M.s 			page 150


DEFINED SYMBOLS
                            *ABS*:0000000000000000 monitor.c
     /tmp/ccZa3c9M.s:16     .text.RS_ready:0000000000000000 $t
     /tmp/ccZa3c9M.s:23     .text.RS_ready:0000000000000000 RS_ready
     /tmp/ccZa3c9M.s:49     .text.RS_ready:0000000000000014 $d
     /tmp/ccZa3c9M.s:55     .text.RS2_ready:0000000000000000 $t
     /tmp/ccZa3c9M.s:62     .text.RS2_ready:0000000000000000 RS2_ready
     /tmp/ccZa3c9M.s:87     .text.RS2_ready:0000000000000014 $d
     /tmp/ccZa3c9M.s:93     .text.RS_rx:0000000000000000 $t
     /tmp/ccZa3c9M.s:100    .text.RS_rx:0000000000000000 RS_rx
     /tmp/ccZa3c9M.s:130    .text.RS_rx:000000000000001c $d
                            *COM*:000000000000001e RS_buf
     /tmp/ccZa3c9M.s:136    .text.RS2_rx:0000000000000000 $t
     /tmp/ccZa3c9M.s:143    .text.RS2_rx:0000000000000000 RS2_rx
     /tmp/ccZa3c9M.s:173    .text.RS2_rx:000000000000001c $d
                            *COM*:00000000000000c8 RS2_buf
     /tmp/ccZa3c9M.s:179    .text.RS_tx:0000000000000000 $t
     /tmp/ccZa3c9M.s:186    .text.RS_tx:0000000000000000 RS_tx
     /tmp/ccZa3c9M.s:218    .text.RS_tx:000000000000001c $d
     /tmp/ccZa3c9M.s:223    .text.RS2_tx:0000000000000000 $t
     /tmp/ccZa3c9M.s:230    .text.RS2_tx:0000000000000000 RS2_tx
     /tmp/ccZa3c9M.s:262    .text.RS2_tx:000000000000001c $d
     /tmp/ccZa3c9M.s:267    .text.Prompt:0000000000000000 $t
     /tmp/ccZa3c9M.s:274    .text.Prompt:0000000000000000 Prompt
     /tmp/ccZa3c9M.s:360    .text.Prompt:000000000000006c $d
     /tmp/ccZa3c9M.s:373    .text.Mon_tx:0000000000000000 $t
     /tmp/ccZa3c9M.s:380    .text.Mon_tx:0000000000000000 Mon_tx
     /tmp/ccZa3c9M.s:401    .text.a2i:0000000000000000 $t
     /tmp/ccZa3c9M.s:408    .text.a2i:0000000000000000 a2i
     /tmp/ccZa3c9M.s:447    .text.Asc1Bin:0000000000000000 $t
     /tmp/ccZa3c9M.s:454    .text.Asc1Bin:0000000000000000 Asc1Bin
     /tmp/ccZa3c9M.s:498    .text.Asc2Bin:0000000000000000 $t
     /tmp/ccZa3c9M.s:505    .text.Asc2Bin:0000000000000000 Asc2Bin
     /tmp/ccZa3c9M.s:553    .text.hs_toupper:0000000000000000 $t
     /tmp/ccZa3c9M.s:560    .text.hs_toupper:0000000000000000 hs_toupper
     /tmp/ccZa3c9M.s:584    .text.stricmp:0000000000000000 $t
     /tmp/ccZa3c9M.s:591    .text.stricmp:0000000000000000 stricmp
     /tmp/ccZa3c9M.s:640    .text.MonReadI2C:0000000000000000 $t
     /tmp/ccZa3c9M.s:647    .text.MonReadI2C:0000000000000000 MonReadI2C
     /tmp/ccZa3c9M.s:660    .text.MonWriteI2C:0000000000000000 $t
     /tmp/ccZa3c9M.s:667    .text.MonWriteI2C:0000000000000000 MonWriteI2C
     /tmp/ccZa3c9M.s:680    .text.MonIncDecI2C:0000000000000000 $t
     /tmp/ccZa3c9M.s:687    .text.MonIncDecI2C:0000000000000000 MonIncDecI2C
     /tmp/ccZa3c9M.s:708    .text.MonDumpI2C:0000000000000000 $t
     /tmp/ccZa3c9M.s:715    .text.MonDumpI2C:0000000000000000 MonDumpI2C
     /tmp/ccZa3c9M.s:728    .text.MonNewReadI2C:0000000000000000 $t
     /tmp/ccZa3c9M.s:735    .text.MonNewReadI2C:0000000000000000 MonNewReadI2C
     /tmp/ccZa3c9M.s:748    .text.MonNewWriteI2C:0000000000000000 $t
     /tmp/ccZa3c9M.s:755    .text.MonNewWriteI2C:0000000000000000 MonNewWriteI2C
     /tmp/ccZa3c9M.s:768    .text.MonNewDumpI2C:0000000000000000 $t
     /tmp/ccZa3c9M.s:775    .text.MonNewDumpI2C:0000000000000000 MonNewDumpI2C
     /tmp/ccZa3c9M.s:788    .text.MonWriteBit:0000000000000000 $t
     /tmp/ccZa3c9M.s:795    .text.MonWriteBit:0000000000000000 MonWriteBit
     /tmp/ccZa3c9M.s:808    .text.MonTxDump:0000000000000000 $t
     /tmp/ccZa3c9M.s:815    .text.MonTxDump:0000000000000000 MonTxDump
     /tmp/ccZa3c9M.s:828    .text.MonHelp:0000000000000000 $t
     /tmp/ccZa3c9M.s:835    .text.MonHelp:0000000000000000 MonHelp
ARM GAS  /tmp/ccZa3c9M.s 			page 151


     /tmp/ccZa3c9M.s:939    .text.MonHelp:0000000000000088 $d
     /tmp/ccZa3c9M.s:961    .text.MonGetCommand:0000000000000000 $t
     /tmp/ccZa3c9M.s:968    .text.MonGetCommand:0000000000000000 MonGetCommand
     /tmp/ccZa3c9M.s:1043   .text.MonGetCommand:0000000000000056 $d
     /tmp/ccZa3c9M.s:1098   .text.MonGetCommand:00000000000000c4 $t
     /tmp/ccZa3c9M.s:1409   .text.MonGetCommand:0000000000000268 $d
                            *COM*:000000000000001e monstr
                            *COM*:000000000000001c argv
     /tmp/ccZa3c9M.s:1420   .text.SET_AHD_SYNC_PARA:0000000000000000 $t
     /tmp/ccZa3c9M.s:1427   .text.SET_AHD_SYNC_PARA:0000000000000000 SET_AHD_SYNC_PARA
     /tmp/ccZa3c9M.s:1652   .text.SET_AHD_SYNC_PARA:0000000000000154 $d
     /tmp/ccZa3c9M.s:1657   .text.SET_HDMI_640_480P_PARA:0000000000000000 $t
     /tmp/ccZa3c9M.s:1664   .text.SET_HDMI_640_480P_PARA:0000000000000000 SET_HDMI_640_480P_PARA
     /tmp/ccZa3c9M.s:2313   .text.SET_HDMI_640_480P_PARA:00000000000003fc $d
     /tmp/ccZa3c9M.s:2316   .text.SET_HDMI_640_480P_PARA:0000000000000400 $t
     /tmp/ccZa3c9M.s:2881   .text.SET_HDMI_SYNC_PARA:0000000000000000 $t
     /tmp/ccZa3c9M.s:2888   .text.SET_HDMI_SYNC_PARA:0000000000000000 SET_HDMI_SYNC_PARA
     /tmp/ccZa3c9M.s:2908   .text.SET_HDMI_SYNC_PARA:000000000000000c $d
     /tmp/ccZa3c9M.s:2913   .text.Monitor:0000000000000000 $t
     /tmp/ccZa3c9M.s:2920   .text.Monitor:0000000000000000 Monitor
     /tmp/ccZa3c9M.s:3294   .text.Monitor:0000000000000234 $d
     /tmp/ccZa3c9M.s:3312   .text.Monitor:0000000000000270 $t
     /tmp/ccZa3c9M.s:3891   .text.Monitor:0000000000000664 $d
     /tmp/ccZa3c9M.s:3895   .text.Monitor:000000000000066c $t
     /tmp/ccZa3c9M.s:4490   .text.Monitor:0000000000000a08 $d
     /tmp/ccZa3c9M.s:4530   .text.Monitor:0000000000000aa0 $t
     /tmp/ccZa3c9M.s:4881   .text.Monitor:0000000000000cc4 $d
     /tmp/ccZa3c9M.s:5004   .data.AccessEnable:0000000000000000 AccessEnable
     /tmp/ccZa3c9M.s:4943   .bss.RS2_Xbusy:0000000000000000 RS2_Xbusy
     /tmp/ccZa3c9M.s:4961   .bss.RS_Xbusy:0000000000000000 RS_Xbusy
     /tmp/ccZa3c9M.s:4955   .bss.RS2_out:0000000000000000 RS2_out
     /tmp/ccZa3c9M.s:4949   .bss.RS2_in:0000000000000000 RS2_in
     /tmp/ccZa3c9M.s:4973   .bss.RS_out:0000000000000000 RS_out
     /tmp/ccZa3c9M.s:4967   .bss.RS_in:0000000000000000 RS_in
                            *COM*:000000000000001e DVR_buf
     /tmp/ccZa3c9M.s:5015   .data.Monitor_I2C:0000000000000000 Monitor_I2C
     /tmp/ccZa3c9M.s:4937   .bss.Monitor_flag:0000000000000000 Monitor_flag
     /tmp/ccZa3c9M.s:5021   .data.echo:0000000000000000 echo
     /tmp/ccZa3c9M.s:4979   .bss.argc:0000000000000000 argc
                            *COM*:0000000000000001 MonWdata
                            *COM*:0000000000000001 MonRdata
                            *COM*:0000000000000001 MonIndex
     /tmp/ccZa3c9M.s:5009   .data.MonAddress:0000000000000000 MonAddress
                            *COM*:0000000000000004 newInRes
     /tmp/ccZa3c9M.s:4938   .bss.Monitor_flag:0000000000000000 $d
     /tmp/ccZa3c9M.s:4940   .bss.RS2_Xbusy:0000000000000000 $d
     /tmp/ccZa3c9M.s:4950   .bss.RS2_in:0000000000000000 $d
     /tmp/ccZa3c9M.s:4956   .bss.RS2_out:0000000000000000 $d
     /tmp/ccZa3c9M.s:4958   .bss.RS_Xbusy:0000000000000000 $d
     /tmp/ccZa3c9M.s:4968   .bss.RS_in:0000000000000000 $d
     /tmp/ccZa3c9M.s:4974   .bss.RS_out:0000000000000000 $d
     /tmp/ccZa3c9M.s:4980   .bss.argc:0000000000000000 $d
     /tmp/ccZa3c9M.s:4985   .bss.comment.8572:0000000000000000 comment.8572
     /tmp/ccZa3c9M.s:4986   .bss.comment.8572:0000000000000000 $d
     /tmp/ccZa3c9M.s:4991   .bss.incnt.8573:0000000000000000 incnt.8573
     /tmp/ccZa3c9M.s:4992   .bss.incnt.8573:0000000000000000 $d
     /tmp/ccZa3c9M.s:4997   .bss.last_argc.8574:0000000000000000 last_argc.8574
ARM GAS  /tmp/ccZa3c9M.s 			page 152


     /tmp/ccZa3c9M.s:4998   .bss.last_argc.8574:0000000000000000 $d
     /tmp/ccZa3c9M.s:5000   .data.AccessEnable:0000000000000000 $d
     /tmp/ccZa3c9M.s:5018   .data.echo:0000000000000000 $d
     /tmp/ccZa3c9M.s:5024   .rodata.MonHelp.str1.4:0000000000000000 $d
     /tmp/ccZa3c9M.s:5083   .rodata.Monitor.str1.4:0000000000000000 $d
     /tmp/ccZa3c9M.s:5243   .rodata.Prompt.str1.4:0000000000000000 $d
     /tmp/ccZa3c9M.s:5255   .rodata.SET_AHD_SYNC_PARA.str1.4:0000000000000000 $d
     /tmp/ccZa3c9M.s:5259   .rodata.SET_HDMI_640_480P_PARA.str1.4:0000000000000000 $d
     /tmp/ccZa3c9M.s:5264   .rodata.SET_HDMI_SYNC_PARA.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
huart2
Printf
day
hour
minute
second
MCUTimerReactiveTimerEvent
VXISI2CWrite
WriteEEP
ReadEEP
VXISI2CRead
VS8812Write
VS8812Read
tp28xx_byte_write
tp28xx_byte_read
HDMIRX_WriteI2C_Byte
HDMIRX_ReadI2C_Byte
gHDMI_Index
user_pwm_setvalue
GET_ALC122
SET_ALC122
HS_Select_Win
TP_bt1120_720P_1080P_mode0_w0
TP_bt1120_1080P_1080P_mode0_w0
TP_bt1120_NTSC_1080P_mode0_w0
TP_bt1120_PAL_1080P_mode0_w0
TP_InputMode
SelectInputMode
Init_TP280x_RegSet
SET_VS4210_720_480_out
bSignal
TVI_Command
presetNum
TVI_speed
TVI_Chksum
ptztxflag
