ARM GAS  /tmp/cco5PJAb.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"monitor.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.RS_ready,"ax",%progbits
  16              		.align	1
  17              		.global	RS_ready
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	RS_ready:
  24              	.LFB68:
  25              		.file 1 "VS4210/monitor.c"
   1:VS4210/monitor.c **** /*****************************************************************************/
   2:VS4210/monitor.c **** /*                                                                           										*/
   3:VS4210/monitor.c **** /*  TELI ML070I   MCU                    													*/
   4:VS4210/monitor.c **** /*                                                                           										*/
   5:VS4210/monitor.c **** /*  Monitor.c		                                            										*/
   6:VS4210/monitor.c **** /*                                                                           										*/
   7:VS4210/monitor.c **** /*****************************************************************************/
   8:VS4210/monitor.c **** #include "VXIS_Extern_Define.h"
   9:VS4210/monitor.c **** 
  10:VS4210/monitor.c **** #include "tpinc/Device_Rx.h"
  11:VS4210/monitor.c **** #include "tpinc/TP2802.h"
  12:VS4210/monitor.c **** #include "stdlib.h"
  13:VS4210/monitor.c **** #include "VX_swi2c.h"
  14:VS4210/monitor.c **** #include "VS4210.h"
  15:VS4210/monitor.c **** 
  16:VS4210/monitor.c **** //#include "config.h"
  17:VS4210/monitor.c **** 
  18:VS4210/monitor.c **** //#ifdef SERIAL
  19:VS4210/monitor.c **** 
  20:VS4210/monitor.c **** //#include "typedefs.h"
  21:VS4210/monitor.c **** #include "main.h"
  22:VS4210/monitor.c **** //#include "i2c.h"
  23:VS4210/monitor.c **** //#include "reg.h"
  24:VS4210/monitor.c **** #include "printf.h"
  25:VS4210/monitor.c **** //#include "etc_eep.h"
  26:VS4210/monitor.c **** #include "monitor.h"
  27:VS4210/monitor.c **** //#include "cpu.h"
  28:VS4210/monitor.c **** //#include "Adc.h"
  29:VS4210/monitor.c **** 
  30:VS4210/monitor.c **** IDATA BYTE MonAddress = 0x8a;		// initialize value should be placed to IDATA area
  31:VS4210/monitor.c **** BYTE MonIndex;
  32:VS4210/monitor.c **** BYTE MonRdata, MonWdata;
  33:VS4210/monitor.c **** BYTE monstr[30];		// buffer for input string
ARM GAS  /tmp/cco5PJAb.s 			page 2


  34:VS4210/monitor.c **** #if 1
  35:VS4210/monitor.c **** BYTE *argv[7];
  36:VS4210/monitor.c **** //char *argv[7];
  37:VS4210/monitor.c **** #else
  38:VS4210/monitor.c **** volatile  BYTE *argv[7];
  39:VS4210/monitor.c **** //char *argv[7];
  40:VS4210/monitor.c **** #endif
  41:VS4210/monitor.c **** BYTE argc=0;
  42:VS4210/monitor.c **** bit	echo=1;
  43:VS4210/monitor.c **** 
  44:VS4210/monitor.c **** BYTE Monitor_flag=OFF;
  45:VS4210/monitor.c **** BYTE Monitor_I2C=0x40;//0x88;//0x40;///0x90;//0x40;//0x28;//0x12;//EEPROM_24C02_addr;
  46:VS4210/monitor.c **** 
  47:VS4210/monitor.c **** 		DATA BYTE	RS_buf[BUF_MAX];
  48:VS4210/monitor.c ****         	DATA BYTE   	RS2_buf[TOA_BUF_MAX];
  49:VS4210/monitor.c **** 		DATA BYTE	DVR_buf[DVR_BUF_MAX];
  50:VS4210/monitor.c **** 
  51:VS4210/monitor.c **** 		
  52:VS4210/monitor.c **** 		DATA BYTE   RS_in=0, RS_out=0;
  53:VS4210/monitor.c **** 		DATA BYTE   RS2_in=0, RS2_out=0;
  54:VS4210/monitor.c **** 		bit	        RS_Xbusy=0;			// bit RS_Xbusy=0;
  55:VS4210/monitor.c **** 		bit 		RS2_Xbusy=0; 		// bit RS_Xbusy=0;
  56:VS4210/monitor.c **** 
  57:VS4210/monitor.c **** static bit indirect=0;
  58:VS4210/monitor.c **** extern BYTE TriggerFlag;
  59:VS4210/monitor.c **** 
  60:VS4210/monitor.c **** //extern		  bit	AutoDetect;
  61:VS4210/monitor.c **** extern   BYTE InputSelection;
  62:VS4210/monitor.c **** extern	      BYTE	DebugLevel;
  63:VS4210/monitor.c **** //extern  CODE  struct struct_IdName struct_InputSelection[];
  64:VS4210/monitor.c **** extern 		  bit	NoInitAccess;
  65:VS4210/monitor.c ****  		  bit	AccessEnable=1;
  66:VS4210/monitor.c **** extern  BYTE PSW_Flag;
  67:VS4210/monitor.c **** extern BYTE year1,year2,month,day,hour,minute,second;
  68:VS4210/monitor.c **** 
  69:VS4210/monitor.c **** extern UART_HandleTypeDef huart1;
  70:VS4210/monitor.c **** extern UART_HandleTypeDef huart2;
  71:VS4210/monitor.c **** extern tByte	count[4];
  72:VS4210/monitor.c **** extern tByte	state[4];
  73:VS4210/monitor.c **** extern tByte	count[4];
  74:VS4210/monitor.c **** extern tByte	mode[4];
  75:VS4210/monitor.c **** extern tByte	std[4];
  76:VS4210/monitor.c **** extern tByte	egain[4][4];
  77:VS4210/monitor.c **** extern  tByte TP_InputMode;
  78:VS4210/monitor.c **** extern BYTE SelectInputMode;///0=HDMI , 1=AHD
  79:VS4210/monitor.c **** extern tByte bSignal[4] ;
  80:VS4210/monitor.c **** extern BYTE TVI_Command;
  81:VS4210/monitor.c **** extern BYTE presetNum;
  82:VS4210/monitor.c **** extern BYTE TVI_Chksum;
  83:VS4210/monitor.c **** extern BYTE TVI_speed;
  84:VS4210/monitor.c **** extern bit ptztxflag;
  85:VS4210/monitor.c **** 
  86:VS4210/monitor.c **** //char * asctime(const struct tm * timeptr);
  87:VS4210/monitor.c **** //char *ctime(const time_t *timep);
  88:VS4210/monitor.c **** 
  89:VS4210/monitor.c **** //=============================================================================
  90:VS4210/monitor.c **** //		Serial RX Check 												   
ARM GAS  /tmp/cco5PJAb.s 			page 3


  91:VS4210/monitor.c **** //=============================================================================
  92:VS4210/monitor.c **** BYTE RS_ready(void)
  93:VS4210/monitor.c **** {
  26              		.loc 1 93 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  94:VS4210/monitor.c **** 	if( RS_in == RS_out ) return 0;
  31              		.loc 1 94 0
  32 0000 044B     		ldr	r3, .L5
  33 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  34 0004 044B     		ldr	r3, .L5+4
  35 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  36 0008 9A42     		cmp	r2, r3
  37 000a 01D0     		beq	.L4
  95:VS4210/monitor.c **** 	else return 1;
  38              		.loc 1 95 0
  39 000c 0120     		movs	r0, #1
  96:VS4210/monitor.c **** }
  40              		.loc 1 96 0
  41 000e 7047     		bx	lr
  42              	.L4:
  94:VS4210/monitor.c **** 	if( RS_in == RS_out ) return 0;
  43              		.loc 1 94 0
  44 0010 0020     		movs	r0, #0
  45 0012 7047     		bx	lr
  46              	.L6:
  47              		.align	2
  48              	.L5:
  49 0014 00000000 		.word	.LANCHOR0
  50 0018 00000000 		.word	.LANCHOR1
  51              		.cfi_endproc
  52              	.LFE68:
  54              		.section	.text.RS2_ready,"ax",%progbits
  55              		.align	1
  56              		.global	RS2_ready
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu softvfp
  62              	RS2_ready:
  63              	.LFB69:
  97:VS4210/monitor.c **** 
  98:VS4210/monitor.c **** BYTE RS2_ready(void)
  99:VS4210/monitor.c **** {
  64              		.loc 1 99 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
 100:VS4210/monitor.c **** 	if( RS2_in == RS2_out ) return 0;
  69              		.loc 1 100 0
  70 0000 044B     		ldr	r3, .L11
  71 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  72 0004 044B     		ldr	r3, .L11+4
  73 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/cco5PJAb.s 			page 4


  74 0008 9A42     		cmp	r2, r3
  75 000a 01D0     		beq	.L10
 101:VS4210/monitor.c **** 	else return 1;
  76              		.loc 1 101 0
  77 000c 0120     		movs	r0, #1
 102:VS4210/monitor.c **** }
  78              		.loc 1 102 0
  79 000e 7047     		bx	lr
  80              	.L10:
 100:VS4210/monitor.c **** 	if( RS2_in == RS2_out ) return 0;
  81              		.loc 1 100 0
  82 0010 0020     		movs	r0, #0
  83 0012 7047     		bx	lr
  84              	.L12:
  85              		.align	2
  86              	.L11:
  87 0014 00000000 		.word	.LANCHOR2
  88 0018 00000000 		.word	.LANCHOR3
  89              		.cfi_endproc
  90              	.LFE69:
  92              		.section	.text.RS_rx,"ax",%progbits
  93              		.align	1
  94              		.global	RS_rx
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu softvfp
 100              	RS_rx:
 101              	.LFB70:
 103:VS4210/monitor.c **** 
 104:VS4210/monitor.c **** //#ifdef Hs_debug
 105:VS4210/monitor.c **** //=============================================================================
 106:VS4210/monitor.c **** //		Serial RX														   
 107:VS4210/monitor.c **** //=============================================================================
 108:VS4210/monitor.c **** BYTE RS_rx(void)
 109:VS4210/monitor.c **** {
 102              		.loc 1 109 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 110:VS4210/monitor.c **** 	BYTE ret;
 111:VS4210/monitor.c **** 		
 112:VS4210/monitor.c **** //	ES = 0;
 113:VS4210/monitor.c **** 	ret = RS_buf[RS_out];
 107              		.loc 1 113 0
 108 0000 064A     		ldr	r2, .L15
 109 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 110 0004 0649     		ldr	r1, .L15+4
 111 0006 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 112              	.LVL0:
 114:VS4210/monitor.c **** //	ret = DVR_buf[RS_out];
 115:VS4210/monitor.c **** 	RS_out++;
 113              		.loc 1 115 0
 114 0008 0133     		adds	r3, r3, #1
 115 000a DBB2     		uxtb	r3, r3
 116 000c 1370     		strb	r3, [r2]
ARM GAS  /tmp/cco5PJAb.s 			page 5


 116:VS4210/monitor.c **** 	if(RS_out >= BUF_MAX) 
 117              		.loc 1 116 0
 118 000e 1D2B     		cmp	r3, #29
 119 0010 02D9     		bls	.L14
 117:VS4210/monitor.c **** 		RS_out = 0;
 120              		.loc 1 117 0
 121 0012 1346     		mov	r3, r2
 122 0014 0022     		movs	r2, #0
 123 0016 1A70     		strb	r2, [r3]
 124              	.L14:
 118:VS4210/monitor.c **** //	ES = 1;
 119:VS4210/monitor.c **** 
 120:VS4210/monitor.c **** 	return ret;
 121:VS4210/monitor.c **** }
 125              		.loc 1 121 0
 126 0018 7047     		bx	lr
 127              	.L16:
 128 001a 00BF     		.align	2
 129              	.L15:
 130 001c 00000000 		.word	.LANCHOR1
 131 0020 00000000 		.word	RS_buf
 132              		.cfi_endproc
 133              	.LFE70:
 135              		.section	.text.RS2_rx,"ax",%progbits
 136              		.align	1
 137              		.global	RS2_rx
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu softvfp
 143              	RS2_rx:
 144              	.LFB71:
 122:VS4210/monitor.c **** 
 123:VS4210/monitor.c **** BYTE RS2_rx(void)
 124:VS4210/monitor.c **** {
 145              		.loc 1 124 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 125:VS4210/monitor.c **** 	BYTE ret;
 126:VS4210/monitor.c **** 		
 127:VS4210/monitor.c **** //	ES = 0;
 128:VS4210/monitor.c **** 	ret = RS2_buf[RS2_out];
 150              		.loc 1 128 0
 151 0000 064A     		ldr	r2, .L19
 152 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 153 0004 0649     		ldr	r1, .L19+4
 154 0006 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 155              	.LVL1:
 129:VS4210/monitor.c **** //	ret = DVR_buf[RS_out];
 130:VS4210/monitor.c **** 	RS2_out++;
 156              		.loc 1 130 0
 157 0008 0133     		adds	r3, r3, #1
 158 000a DBB2     		uxtb	r3, r3
 159 000c 1370     		strb	r3, [r2]
 131:VS4210/monitor.c **** 	if(RS2_out >= TOA_BUF_MAX) 
ARM GAS  /tmp/cco5PJAb.s 			page 6


 160              		.loc 1 131 0
 161 000e C72B     		cmp	r3, #199
 162 0010 02D9     		bls	.L18
 132:VS4210/monitor.c **** 		RS2_out = 0;
 163              		.loc 1 132 0
 164 0012 1346     		mov	r3, r2
 165 0014 0022     		movs	r2, #0
 166 0016 1A70     		strb	r2, [r3]
 167              	.L18:
 133:VS4210/monitor.c **** //	ES = 1;
 134:VS4210/monitor.c **** 
 135:VS4210/monitor.c **** 	return ret;
 136:VS4210/monitor.c **** }
 168              		.loc 1 136 0
 169 0018 7047     		bx	lr
 170              	.L20:
 171 001a 00BF     		.align	2
 172              	.L19:
 173 001c 00000000 		.word	.LANCHOR3
 174 0020 00000000 		.word	RS2_buf
 175              		.cfi_endproc
 176              	.LFE71:
 178              		.section	.text.RS_tx,"ax",%progbits
 179              		.align	1
 180              		.global	RS_tx
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu softvfp
 186              	RS_tx:
 187              	.LFB72:
 137:VS4210/monitor.c **** 
 138:VS4210/monitor.c **** 
 139:VS4210/monitor.c **** //=============================================================================
 140:VS4210/monitor.c **** //		Serial TX														   
 141:VS4210/monitor.c **** //=============================================================================
 142:VS4210/monitor.c **** void RS_tx(BYTE tx_buf)
 143:VS4210/monitor.c **** {
 188              		.loc 1 143 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 8
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              	.LVL2:
 193 0000 00B5     		push	{lr}
 194              	.LCFI0:
 195              		.cfi_def_cfa_offset 4
 196              		.cfi_offset 14, -4
 197 0002 83B0     		sub	sp, sp, #12
 198              	.LCFI1:
 199              		.cfi_def_cfa_offset 16
 200 0004 02A9     		add	r1, sp, #8
 201 0006 01F8010D 		strb	r0, [r1, #-1]!
 144:VS4210/monitor.c **** 
 145:VS4210/monitor.c **** 
 146:VS4210/monitor.c **** HAL_UART_Transmit(&huart1,&tx_buf,1,0xffff);
 202              		.loc 1 146 0
 203 000a 4FF6FF73 		movw	r3, #65535
ARM GAS  /tmp/cco5PJAb.s 			page 7


 204 000e 0122     		movs	r2, #1
 205 0010 0248     		ldr	r0, .L23
 206              	.LVL3:
 207 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 208              	.LVL4:
 147:VS4210/monitor.c **** //USART1->DR = tx_buf;
 148:VS4210/monitor.c **** //while(0 == (USART1->SR&(1<<6)));
 149:VS4210/monitor.c **** 
 150:VS4210/monitor.c **** }
 209              		.loc 1 150 0
 210 0016 03B0     		add	sp, sp, #12
 211              	.LCFI2:
 212              		.cfi_def_cfa_offset 4
 213              		@ sp needed
 214 0018 5DF804FB 		ldr	pc, [sp], #4
 215              	.L24:
 216              		.align	2
 217              	.L23:
 218 001c 00000000 		.word	huart1
 219              		.cfi_endproc
 220              	.LFE72:
 222              		.section	.text.RS2_tx,"ax",%progbits
 223              		.align	1
 224              		.global	RS2_tx
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu softvfp
 230              	RS2_tx:
 231              	.LFB73:
 151:VS4210/monitor.c **** 
 152:VS4210/monitor.c **** void RS2_tx(BYTE tx_buf)
 153:VS4210/monitor.c **** {
 232              		.loc 1 153 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 8
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              	.LVL5:
 237 0000 00B5     		push	{lr}
 238              	.LCFI3:
 239              		.cfi_def_cfa_offset 4
 240              		.cfi_offset 14, -4
 241 0002 83B0     		sub	sp, sp, #12
 242              	.LCFI4:
 243              		.cfi_def_cfa_offset 16
 244 0004 02A9     		add	r1, sp, #8
 245 0006 01F8010D 		strb	r0, [r1, #-1]!
 154:VS4210/monitor.c **** 
 155:VS4210/monitor.c **** 
 156:VS4210/monitor.c **** HAL_UART_Transmit(&huart2,&tx_buf,1,0xffff);
 246              		.loc 1 156 0
 247 000a 4FF6FF73 		movw	r3, #65535
 248 000e 0122     		movs	r2, #1
 249 0010 0248     		ldr	r0, .L27
 250              	.LVL6:
 251 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 252              	.LVL7:
ARM GAS  /tmp/cco5PJAb.s 			page 8


 157:VS4210/monitor.c **** //USART2->DR = tx_buf;
 158:VS4210/monitor.c **** //while(0 == (USART2->SR&(1<<6)));
 159:VS4210/monitor.c **** 
 160:VS4210/monitor.c **** }
 253              		.loc 1 160 0
 254 0016 03B0     		add	sp, sp, #12
 255              	.LCFI5:
 256              		.cfi_def_cfa_offset 4
 257              		@ sp needed
 258 0018 5DF804FB 		ldr	pc, [sp], #4
 259              	.L28:
 260              		.align	2
 261              	.L27:
 262 001c 00000000 		.word	huart2
 263              		.cfi_endproc
 264              	.LFE73:
 266              		.section	.text.Prompt,"ax",%progbits
 267              		.align	1
 268              		.global	Prompt
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 272              		.fpu softvfp
 274              	Prompt:
 275              	.LFB74:
 161:VS4210/monitor.c **** 
 162:VS4210/monitor.c **** //void Loader(BYTE);
 163:VS4210/monitor.c **** 
 164:VS4210/monitor.c **** //=============================================================================
 165:VS4210/monitor.c **** //
 166:VS4210/monitor.c **** //=============================================================================
 167:VS4210/monitor.c **** void Prompt(void)
 168:VS4210/monitor.c **** {
 276              		.loc 1 168 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280 0000 00B5     		push	{lr}
 281              	.LCFI6:
 282              		.cfi_def_cfa_offset 4
 283              		.cfi_offset 14, -4
 284 0002 83B0     		sub	sp, sp, #12
 285              	.LCFI7:
 286              		.cfi_def_cfa_offset 16
 169:VS4210/monitor.c **** 	if(day)
 287              		.loc 1 169 0
 288 0004 194B     		ldr	r3, .L38
 289 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 290 0008 6AB9     		cbnz	r2, .L35
 170:VS4210/monitor.c **** 	{
 171:VS4210/monitor.c **** 	Printf("\r\nMCU_I2C[%02x][%d:%d:%d:%d]>",(WORD)Monitor_I2C,(WORD)day,(WORD)hour,(WORD)minute,(WORD
 172:VS4210/monitor.c **** 	}
 173:VS4210/monitor.c **** 	else if(hour)
 291              		.loc 1 173 0
 292 000a 194B     		ldr	r3, .L38+4
 293 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 294 000e D2B9     		cbnz	r2, .L36
ARM GAS  /tmp/cco5PJAb.s 			page 9


 174:VS4210/monitor.c **** 	{
 175:VS4210/monitor.c **** 	Printf("\r\nMCU_I2C[%02x][%d:%d:%d]>",(WORD)Monitor_I2C,(WORD)hour,(WORD)minute,(WORD)second);
 176:VS4210/monitor.c **** 	}
 177:VS4210/monitor.c **** 	else if(minute)
 295              		.loc 1 177 0
 296 0010 184B     		ldr	r3, .L38+8
 297 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 298 0014 12BB     		cbnz	r2, .L37
 178:VS4210/monitor.c **** 		{
 179:VS4210/monitor.c **** 		Printf("\r\nMCU_I2C[%02x][%d:%d]>",(WORD)Monitor_I2C,(WORD)minute,(WORD)second);
 180:VS4210/monitor.c **** 		}
 181:VS4210/monitor.c **** 	else
 182:VS4210/monitor.c **** 		{
 183:VS4210/monitor.c **** 		Printf("\r\nMCU_I2C[%02x][%d]>",(WORD)Monitor_I2C,(WORD)second);
 299              		.loc 1 183 0
 300 0016 184B     		ldr	r3, .L38+12
 301 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 302 001a 184B     		ldr	r3, .L38+16
 303 001c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 304 001e 1848     		ldr	r0, .L38+20
 305 0020 FFF7FEFF 		bl	Printf
 306              	.LVL8:
 184:VS4210/monitor.c **** 		}
 185:VS4210/monitor.c **** 
 186:VS4210/monitor.c **** }
 307              		.loc 1 186 0
 308 0024 0CE0     		b	.L29
 309              	.L35:
 171:VS4210/monitor.c **** 	}
 310              		.loc 1 171 0
 311 0026 124B     		ldr	r3, .L38+4
 312 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 313 002a 1449     		ldr	r1, .L38+16
 314 002c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 315 002e 1248     		ldr	r0, .L38+12
 316 0030 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 317 0032 0190     		str	r0, [sp, #4]
 318 0034 0F48     		ldr	r0, .L38+8
 319 0036 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 320 0038 0090     		str	r0, [sp]
 321 003a 1248     		ldr	r0, .L38+24
 322 003c FFF7FEFF 		bl	Printf
 323              	.LVL9:
 324              	.L29:
 325              		.loc 1 186 0
 326 0040 03B0     		add	sp, sp, #12
 327              	.LCFI8:
 328              		.cfi_remember_state
 329              		.cfi_def_cfa_offset 4
 330              		@ sp needed
 331 0042 5DF804FB 		ldr	pc, [sp], #4
 332              	.L36:
 333              	.LCFI9:
 334              		.cfi_restore_state
 175:VS4210/monitor.c **** 	}
 335              		.loc 1 175 0
 336 0046 0B4B     		ldr	r3, .L38+8
ARM GAS  /tmp/cco5PJAb.s 			page 10


 337 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 338 004a 0C49     		ldr	r1, .L38+16
 339 004c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 340 004e 0A48     		ldr	r0, .L38+12
 341 0050 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 342 0052 0090     		str	r0, [sp]
 343 0054 0C48     		ldr	r0, .L38+28
 344 0056 FFF7FEFF 		bl	Printf
 345              	.LVL10:
 346 005a F1E7     		b	.L29
 347              	.L37:
 179:VS4210/monitor.c **** 		}
 348              		.loc 1 179 0
 349 005c 064B     		ldr	r3, .L38+12
 350 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 351 0060 0649     		ldr	r1, .L38+16
 352 0062 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 353 0064 0948     		ldr	r0, .L38+32
 354 0066 FFF7FEFF 		bl	Printf
 355              	.LVL11:
 356 006a E9E7     		b	.L29
 357              	.L39:
 358              		.align	2
 359              	.L38:
 360 006c 00000000 		.word	day
 361 0070 00000000 		.word	hour
 362 0074 00000000 		.word	minute
 363 0078 00000000 		.word	second
 364 007c 00000000 		.word	.LANCHOR4
 365 0080 54000000 		.word	.LC3
 366 0084 00000000 		.word	.LC0
 367 0088 20000000 		.word	.LC1
 368 008c 3C000000 		.word	.LC2
 369              		.cfi_endproc
 370              	.LFE74:
 372              		.section	.text.Mon_tx,"ax",%progbits
 373              		.align	1
 374              		.global	Mon_tx
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu softvfp
 380              	Mon_tx:
 381              	.LFB75:
 187:VS4210/monitor.c **** 
 188:VS4210/monitor.c **** void Mon_tx(BYTE ch)
 189:VS4210/monitor.c **** {
 382              		.loc 1 189 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              	.LVL12:
 387 0000 08B5     		push	{r3, lr}
 388              	.LCFI10:
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 3, -8
 391              		.cfi_offset 14, -4
ARM GAS  /tmp/cco5PJAb.s 			page 11


 190:VS4210/monitor.c **** 	RS_tx(ch);
 392              		.loc 1 190 0
 393 0002 FFF7FEFF 		bl	RS_tx
 394              	.LVL13:
 191:VS4210/monitor.c **** }
 395              		.loc 1 191 0
 396 0006 08BD     		pop	{r3, pc}
 397              		.cfi_endproc
 398              	.LFE75:
 400              		.section	.text.a2i,"ax",%progbits
 401              		.align	1
 402              		.global	a2i
 403              		.syntax unified
 404              		.thumb
 405              		.thumb_func
 406              		.fpu softvfp
 408              	a2i:
 409              	.LFB76:
 192:VS4210/monitor.c **** 
 193:VS4210/monitor.c **** 
 194:VS4210/monitor.c **** //=============================================================================
 195:VS4210/monitor.c **** //		Convert ASCII to Binery                                             
 196:VS4210/monitor.c **** //=============================================================================
 197:VS4210/monitor.c ****  DWORD a2i(BYTE *str)
 198:VS4210/monitor.c **** {
 410              		.loc 1 198 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              		@ link register save eliminated.
 415              	.LVL14:
 199:VS4210/monitor.c **** 	 DWORD num=0;
 416              		.loc 1 199 0
 417 0000 0023     		movs	r3, #0
 418              	.LVL15:
 419              	.L44:
 200:VS4210/monitor.c **** 	BYTE i;
 201:VS4210/monitor.c **** 
 202:VS4210/monitor.c **** 	for(i=0; ; i++, str++) {
 203:VS4210/monitor.c **** 		if( *str=='\0' || *str==' ' ) break;
 420              		.loc 1 203 0
 421 0002 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 422 0004 41B1     		cbz	r1, .L42
 423              		.loc 1 203 0 is_stmt 0 discriminator 1
 424 0006 2029     		cmp	r1, #32
 425 0008 06D0     		beq	.L42
 204:VS4210/monitor.c **** 		num = num*10 + *str - '0';
 426              		.loc 1 204 0 is_stmt 1
 427 000a 03EB8303 		add	r3, r3, r3, lsl #2
 428              	.LVL16:
 429 000e 5A00     		lsls	r2, r3, #1
 430 0010 5318     		adds	r3, r2, r1
 431 0012 303B     		subs	r3, r3, #48
 432              	.LVL17:
 202:VS4210/monitor.c **** 		if( *str=='\0' || *str==' ' ) break;
 433              		.loc 1 202 0
 434 0014 0130     		adds	r0, r0, #1
ARM GAS  /tmp/cco5PJAb.s 			page 12


 435              	.LVL18:
 203:VS4210/monitor.c **** 		num = num*10 + *str - '0';
 436              		.loc 1 203 0
 437 0016 F4E7     		b	.L44
 438              	.L42:
 205:VS4210/monitor.c **** 	}
 206:VS4210/monitor.c **** 	return num;
 207:VS4210/monitor.c **** }
 439              		.loc 1 207 0
 440 0018 1846     		mov	r0, r3
 441              	.LVL19:
 442 001a 7047     		bx	lr
 443              		.cfi_endproc
 444              	.LFE76:
 446              		.section	.text.Asc1Bin,"ax",%progbits
 447              		.align	1
 448              		.global	Asc1Bin
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 452              		.fpu softvfp
 454              	Asc1Bin:
 455              	.LFB77:
 208:VS4210/monitor.c **** 
 209:VS4210/monitor.c **** BYTE Asc1Bin(BYTE asc)
 210:VS4210/monitor.c **** {
 456              		.loc 1 210 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 461              	.LVL20:
 462 0000 0246     		mov	r2, r0
 211:VS4210/monitor.c **** 	if(asc>='0' && asc <='9') return (asc - '0');
 463              		.loc 1 211 0
 464 0002 A0F13003 		sub	r3, r0, #48
 465 0006 D8B2     		uxtb	r0, r3
 466              	.LVL21:
 467 0008 0928     		cmp	r0, #9
 468 000a 12D9     		bls	.L46
 212:VS4210/monitor.c **** 	if(asc>='a' && asc <='f') return (asc - 'a' + 0x0a);
 469              		.loc 1 212 0
 470 000c A2F16103 		sub	r3, r2, #97
 471 0010 DBB2     		uxtb	r3, r3
 472 0012 052B     		cmp	r3, #5
 473 0014 08D9     		bls	.L49
 213:VS4210/monitor.c **** 	if(asc>='A' && asc <='F') return (asc - 'A' + 0x0a);
 474              		.loc 1 213 0
 475 0016 A2F14103 		sub	r3, r2, #65
 476 001a DBB2     		uxtb	r3, r3
 477 001c 052B     		cmp	r3, #5
 478 001e 07D8     		bhi	.L48
 479              		.loc 1 213 0 is_stmt 0 discriminator 1
 480 0020 A2F13700 		sub	r0, r2, #55
 481 0024 C0B2     		uxtb	r0, r0
 482 0026 7047     		bx	lr
 483              	.L49:
ARM GAS  /tmp/cco5PJAb.s 			page 13


 212:VS4210/monitor.c **** 	if(asc>='a' && asc <='f') return (asc - 'a' + 0x0a);
 484              		.loc 1 212 0 is_stmt 1 discriminator 1
 485 0028 A2F15700 		sub	r0, r2, #87
 486 002c C0B2     		uxtb	r0, r0
 487 002e 7047     		bx	lr
 488              	.L48:
 214:VS4210/monitor.c **** 	
 215:VS4210/monitor.c **** 	return 0;
 489              		.loc 1 215 0
 490 0030 0020     		movs	r0, #0
 491              	.L46:
 216:VS4210/monitor.c **** }
 492              		.loc 1 216 0
 493 0032 7047     		bx	lr
 494              		.cfi_endproc
 495              	.LFE77:
 497              		.section	.text.Asc2Bin,"ax",%progbits
 498              		.align	1
 499              		.global	Asc2Bin
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 503              		.fpu softvfp
 505              	Asc2Bin:
 506              	.LFB78:
 217:VS4210/monitor.c **** 
 218:VS4210/monitor.c **** BYTE Asc2Bin(PDATA_P BYTE *s)
 219:VS4210/monitor.c **** {
 507              		.loc 1 219 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              	.LVL22:
 512 0000 38B5     		push	{r3, r4, r5, lr}
 513              	.LCFI11:
 514              		.cfi_def_cfa_offset 16
 515              		.cfi_offset 3, -16
 516              		.cfi_offset 4, -12
 517              		.cfi_offset 5, -8
 518              		.cfi_offset 14, -4
 519 0002 0546     		mov	r5, r0
 520              	.LVL23:
 220:VS4210/monitor.c **** 	WORD bin;
 221:VS4210/monitor.c **** 
 222:VS4210/monitor.c **** 	bin = 0;
 521              		.loc 1 222 0
 522 0004 0024     		movs	r4, #0
 223:VS4210/monitor.c **** 	while(*s != '\0' && *s !=' ') {
 523              		.loc 1 223 0
 524 0006 04E0     		b	.L51
 525              	.LVL24:
 526              	.L53:
 224:VS4210/monitor.c **** 		bin = bin<<4;
 527              		.loc 1 224 0
 528 0008 2401     		lsls	r4, r4, #4
 529              	.LVL25:
 225:VS4210/monitor.c **** 		bin = bin + Asc1Bin(*s);
ARM GAS  /tmp/cco5PJAb.s 			page 14


 530              		.loc 1 225 0
 531 000a FFF7FEFF 		bl	Asc1Bin
 532              	.LVL26:
 533 000e 0444     		add	r4, r4, r0
 534              	.LVL27:
 226:VS4210/monitor.c **** 		s++;
 535              		.loc 1 226 0
 536 0010 0135     		adds	r5, r5, #1
 537              	.LVL28:
 538              	.L51:
 223:VS4210/monitor.c **** 		bin = bin<<4;
 539              		.loc 1 223 0
 540 0012 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 541 0014 08B1     		cbz	r0, .L52
 223:VS4210/monitor.c **** 		bin = bin<<4;
 542              		.loc 1 223 0 is_stmt 0 discriminator 1
 543 0016 2028     		cmp	r0, #32
 544 0018 F6D1     		bne	.L53
 545              	.L52:
 227:VS4210/monitor.c **** 	}
 228:VS4210/monitor.c **** 	return (bin);
 229:VS4210/monitor.c **** }
 546              		.loc 1 229 0 is_stmt 1
 547 001a E0B2     		uxtb	r0, r4
 548 001c 38BD     		pop	{r3, r4, r5, pc}
 549              		.cfi_endproc
 550              	.LFE78:
 552              		.section	.text.hs_toupper,"ax",%progbits
 553              		.align	1
 554              		.global	hs_toupper
 555              		.syntax unified
 556              		.thumb
 557              		.thumb_func
 558              		.fpu softvfp
 560              	hs_toupper:
 561              	.LFB79:
 230:VS4210/monitor.c **** 
 231:VS4210/monitor.c **** 
 232:VS4210/monitor.c **** //=============================================================================
 233:VS4210/monitor.c **** BYTE hs_toupper(BYTE ch)
 234:VS4210/monitor.c **** {
 562              		.loc 1 234 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566              		@ link register save eliminated.
 567              	.LVL29:
 235:VS4210/monitor.c **** 	if( ch>='a' && ch<='z' )
 568              		.loc 1 235 0
 569 0000 A0F16103 		sub	r3, r0, #97
 570 0004 DBB2     		uxtb	r3, r3
 571 0006 192B     		cmp	r3, #25
 572 0008 01D8     		bhi	.L56
 236:VS4210/monitor.c **** 		return (ch - 'a' + 'A');
 573              		.loc 1 236 0
 574 000a 2038     		subs	r0, r0, #32
 575              	.LVL30:
ARM GAS  /tmp/cco5PJAb.s 			page 15


 576 000c C0B2     		uxtb	r0, r0
 577              	.L56:
 237:VS4210/monitor.c **** 	
 238:VS4210/monitor.c **** 	return ch;
 239:VS4210/monitor.c **** }
 578              		.loc 1 239 0
 579 000e 7047     		bx	lr
 580              		.cfi_endproc
 581              	.LFE79:
 583              		.section	.text.stricmp,"ax",%progbits
 584              		.align	1
 585              		.global	stricmp
 586              		.syntax unified
 587              		.thumb
 588              		.thumb_func
 589              		.fpu softvfp
 591              	stricmp:
 592              	.LFB80:
 240:VS4210/monitor.c **** 
 241:VS4210/monitor.c **** int stricmp(BYTE *ptr1, BYTE *ptr2)
 242:VS4210/monitor.c **** {
 593              		.loc 1 242 0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597              	.LVL31:
 598 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 599              	.LCFI12:
 600              		.cfi_def_cfa_offset 24
 601              		.cfi_offset 3, -24
 602              		.cfi_offset 4, -20
 603              		.cfi_offset 5, -16
 604              		.cfi_offset 6, -12
 605              		.cfi_offset 7, -8
 606              		.cfi_offset 14, -4
 607 0002 0546     		mov	r5, r0
 608 0004 0E46     		mov	r6, r1
 609              	.LVL32:
 610              	.L59:
 243:VS4210/monitor.c **** 	int		i;
 244:VS4210/monitor.c **** 	int		ret;
 245:VS4210/monitor.c **** 	
 246:VS4210/monitor.c **** 	for(i=0; *ptr1; i++) {
 611              		.loc 1 246 0 discriminator 1
 612 0006 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 613 0008 58B1     		cbz	r0, .L58
 247:VS4210/monitor.c **** 	  ret = hs_toupper(*ptr1++) - hs_toupper(*ptr2++);
 614              		.loc 1 247 0
 615 000a 0135     		adds	r5, r5, #1
 616              	.LVL33:
 617 000c FFF7FEFF 		bl	hs_toupper
 618              	.LVL34:
 619 0010 0446     		mov	r4, r0
 620 0012 771C     		adds	r7, r6, #1
 621              	.LVL35:
 622 0014 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 623 0016 FFF7FEFF 		bl	hs_toupper
ARM GAS  /tmp/cco5PJAb.s 			page 16


 624              	.LVL36:
 248:VS4210/monitor.c **** 		if( ret ) return ret;
 625              		.loc 1 248 0
 626 001a 201A     		subs	r0, r4, r0
 627              	.LVL37:
 628 001c 01D1     		bne	.L58
 247:VS4210/monitor.c **** 	  ret = hs_toupper(*ptr1++) - hs_toupper(*ptr2++);
 629              		.loc 1 247 0
 630 001e 3E46     		mov	r6, r7
 631 0020 F1E7     		b	.L59
 632              	.LVL38:
 633              	.L58:
 249:VS4210/monitor.c **** 	}
 250:VS4210/monitor.c **** 	return 0;
 251:VS4210/monitor.c **** }
 634              		.loc 1 251 0
 635 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 636              		.cfi_endproc
 637              	.LFE80:
 639              		.section	.text.MonReadI2C,"ax",%progbits
 640              		.align	1
 641              		.global	MonReadI2C
 642              		.syntax unified
 643              		.thumb
 644              		.thumb_func
 645              		.fpu softvfp
 647              	MonReadI2C:
 648              	.LFB81:
 252:VS4210/monitor.c **** 
 253:VS4210/monitor.c **** //=============================================================================
 254:VS4210/monitor.c **** //
 255:VS4210/monitor.c **** //=============================================================================
 256:VS4210/monitor.c **** /*
 257:VS4210/monitor.c **** void SetMonAddress(BYTE addr)
 258:VS4210/monitor.c **** {
 259:VS4210/monitor.c **** 	MonAddress = addr;
 260:VS4210/monitor.c **** }
 261:VS4210/monitor.c **** */
 262:VS4210/monitor.c **** void MonReadI2C(void)
 263:VS4210/monitor.c **** {
 649              		.loc 1 263 0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              		@ link register save eliminated.
 264:VS4210/monitor.c **** /*
 265:VS4210/monitor.c **** 	if( argc>=2 ) MonIndex = Asc2Bin( argv[1] );
 266:VS4210/monitor.c **** 	else	{
 267:VS4210/monitor.c **** 		Printf("   --> Missing parameter !!!");
 268:VS4210/monitor.c **** 		return;
 269:VS4210/monitor.c **** 	}
 270:VS4210/monitor.c **** 
 271:VS4210/monitor.c **** 	if ( MonAddress == TW88I2CAddress )
 272:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 273:VS4210/monitor.c **** 	else
 274:VS4210/monitor.c **** 		MonRdata = ReadI2C(MonAddress, MonIndex);
 275:VS4210/monitor.c **** 
ARM GAS  /tmp/cco5PJAb.s 			page 17


 276:VS4210/monitor.c **** 	if( echo )
 277:VS4210/monitor.c **** 		Printf("\r\nRead %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);	
 278:VS4210/monitor.c **** 	
 279:VS4210/monitor.c **** 	MonWdata = MonRdata;
 280:VS4210/monitor.c **** 	*/
 281:VS4210/monitor.c **** }
 654              		.loc 1 281 0
 655 0000 7047     		bx	lr
 656              		.cfi_endproc
 657              	.LFE81:
 659              		.section	.text.MonWriteI2C,"ax",%progbits
 660              		.align	1
 661              		.global	MonWriteI2C
 662              		.syntax unified
 663              		.thumb
 664              		.thumb_func
 665              		.fpu softvfp
 667              	MonWriteI2C:
 668              	.LFB82:
 282:VS4210/monitor.c **** 
 283:VS4210/monitor.c **** 
 284:VS4210/monitor.c **** void MonWriteI2C(void)
 285:VS4210/monitor.c **** {
 669              		.loc 1 285 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 0
 672              		@ frame_needed = 0, uses_anonymous_args = 0
 673              		@ link register save eliminated.
 286:VS4210/monitor.c **** /*
 287:VS4210/monitor.c **** 	if( argc<3 ) {
 288:VS4210/monitor.c **** 		Printf("   --> Missing parameter !!!");
 289:VS4210/monitor.c **** 		return;
 290:VS4210/monitor.c **** 	}
 291:VS4210/monitor.c **** 	
 292:VS4210/monitor.c **** 	MonIndex = Asc2Bin( argv[1] );
 293:VS4210/monitor.c **** 	MonWdata = Asc2Bin( argv[2] );
 294:VS4210/monitor.c **** 	
 295:VS4210/monitor.c **** 	if( echo ) {
 296:VS4210/monitor.c **** 		Printf("\r\nWrite %2xh:%2xh ", (tWord)MonIndex, (tWord)MonWdata);
 297:VS4210/monitor.c **** 		if ( MonAddress == TW88I2CAddress ) {
 298:VS4210/monitor.c **** 			WriteTW88(MonIndex, MonWdata);
 299:VS4210/monitor.c **** 			MonRdata = ReadTW88(MonIndex);
 300:VS4210/monitor.c **** 		}
 301:VS4210/monitor.c **** 		else {
 302:VS4210/monitor.c **** 			WriteI2C(MonAddress, MonIndex, MonWdata);
 303:VS4210/monitor.c **** 			MonRdata = ReadI2C(MonAddress, MonIndex);
 304:VS4210/monitor.c **** 		}
 305:VS4210/monitor.c ****    		Printf("==> Read %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 306:VS4210/monitor.c **** 	}
 307:VS4210/monitor.c **** 	else {
 308:VS4210/monitor.c **** 		if ( MonAddress == TW88I2CAddress ) {
 309:VS4210/monitor.c **** 			WriteTW88(MonIndex, MonWdata);
 310:VS4210/monitor.c **** 		}
 311:VS4210/monitor.c **** 		else {
 312:VS4210/monitor.c **** 			WriteI2C(MonAddress, MonIndex, MonWdata);
 313:VS4210/monitor.c **** 		}
 314:VS4210/monitor.c **** 	}
ARM GAS  /tmp/cco5PJAb.s 			page 18


 315:VS4210/monitor.c **** 	*/
 316:VS4210/monitor.c **** }
 674              		.loc 1 316 0
 675 0000 7047     		bx	lr
 676              		.cfi_endproc
 677              	.LFE82:
 679              		.section	.text.MonIncDecI2C,"ax",%progbits
 680              		.align	1
 681              		.global	MonIncDecI2C
 682              		.syntax unified
 683              		.thumb
 684              		.thumb_func
 685              		.fpu softvfp
 687              	MonIncDecI2C:
 688              	.LFB83:
 317:VS4210/monitor.c **** 
 318:VS4210/monitor.c **** 
 319:VS4210/monitor.c **** void MonIncDecI2C(BYTE inc)
 320:VS4210/monitor.c **** {
 689              		.loc 1 320 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 0
 692              		@ frame_needed = 0, uses_anonymous_args = 0
 693              	.LVL39:
 694 0000 10B5     		push	{r4, lr}
 695              	.LCFI13:
 696              		.cfi_def_cfa_offset 8
 697              		.cfi_offset 4, -8
 698              		.cfi_offset 14, -4
 321:VS4210/monitor.c **** 
 322:VS4210/monitor.c **** BYTE ret;
 323:VS4210/monitor.c **** 
 324:VS4210/monitor.c **** 	switch(inc){
 699              		.loc 1 324 0
 700 0002 0B28     		cmp	r0, #11
 701 0004 0BD8     		bhi	.L66
 702 0006 DFE800F0 		tbb	[pc, r0]
 703              	.L68:
 704 000a 06       		.byte	(.L67-.L68)/2
 705 000b 19       		.byte	(.L69-.L68)/2
 706 000c 0A       		.byte	(.L66-.L68)/2
 707 000d 0A       		.byte	(.L66-.L68)/2
 708 000e 0A       		.byte	(.L66-.L68)/2
 709 000f 0A       		.byte	(.L66-.L68)/2
 710 0010 0A       		.byte	(.L66-.L68)/2
 711 0011 0A       		.byte	(.L66-.L68)/2
 712 0012 0A       		.byte	(.L66-.L68)/2
 713 0013 0A       		.byte	(.L66-.L68)/2
 714 0014 1E       		.byte	(.L70-.L68)/2
 715 0015 23       		.byte	(.L71-.L68)/2
 716              		.p2align 1
 717              	.L67:
 325:VS4210/monitor.c **** 	case 0:  MonWdata--;	break;
 718              		.loc 1 325 0
 719 0016 3A4A     		ldr	r2, .L83
 720 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 721 001a 013B     		subs	r3, r3, #1
ARM GAS  /tmp/cco5PJAb.s 			page 19


 722 001c 1370     		strb	r3, [r2]
 723              	.L66:
 326:VS4210/monitor.c **** 	case 1:  MonWdata++;	break;
 327:VS4210/monitor.c **** 	case 10: MonWdata-=0x10;	break;
 328:VS4210/monitor.c **** 	case 11: MonWdata+=0x10;	break;
 329:VS4210/monitor.c **** 	}
 330:VS4210/monitor.c **** 
 331:VS4210/monitor.c **** 	/*
 332:VS4210/monitor.c **** 
 333:VS4210/monitor.c **** 	if ( MonAddress == TW88I2CAddress ) {
 334:VS4210/monitor.c **** 		WriteTW88(MonIndex, MonWdata);
 335:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 336:VS4210/monitor.c **** 	}
 337:VS4210/monitor.c **** 	else {
 338:VS4210/monitor.c **** 		WriteI2C(MonAddress, MonIndex, MonWdata);
 339:VS4210/monitor.c **** 		MonRdata = ReadI2C(MonAddress, MonIndex);
 340:VS4210/monitor.c **** 	}
 341:VS4210/monitor.c **** 
 342:VS4210/monitor.c **** 	if( echo ) {
 343:VS4210/monitor.c **** 		Printf("Write %2xh:%2xh ", (tWord)MonIndex, (tWord)MonWdata);
 344:VS4210/monitor.c **** 		Printf("==> Read %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 345:VS4210/monitor.c **** 	}
 346:VS4210/monitor.c **** 
 347:VS4210/monitor.c **** */
 348:VS4210/monitor.c **** 	if(Monitor_I2C==0xA0)
 724              		.loc 1 348 0
 725 001e 394B     		ldr	r3, .L83+4
 726 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 727 0022 A02B     		cmp	r3, #160
 728 0024 19D0     		beq	.L78
 349:VS4210/monitor.c **** 		{
 350:VS4210/monitor.c **** 		WriteEEP( MonIndex, MonWdata );
 351:VS4210/monitor.c **** 		 ret= ReadEEP(MonIndex);	
 352:VS4210/monitor.c **** 		  Printf("\r\nEEPROM Write addr=%02x  data=%02x",(WORD)MonIndex,(WORD)ret);
 353:VS4210/monitor.c **** 		}
 354:VS4210/monitor.c **** 	else if(Monitor_I2C==0x40)
 729              		.loc 1 354 0
 730 0026 402B     		cmp	r3, #64
 731 0028 26D0     		beq	.L79
 355:VS4210/monitor.c **** 	{
 356:VS4210/monitor.c **** 		VXISI2CWrite( MonIndex, MonWdata );
 357:VS4210/monitor.c **** 		 ret= VXISI2CRead(MonIndex);	
 358:VS4210/monitor.c **** 		   Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)MonIndex,(WORD)ret);
 359:VS4210/monitor.c **** 	}
 360:VS4210/monitor.c **** 	else if(Monitor_I2C==0x12)
 732              		.loc 1 360 0
 733 002a 122B     		cmp	r3, #18
 734 002c 33D0     		beq	.L80
 361:VS4210/monitor.c **** 	{
 362:VS4210/monitor.c **** 		VS8812Write( MonIndex ,MonWdata);
 363:VS4210/monitor.c **** 		ret= VS8812Read(MonIndex);	
 364:VS4210/monitor.c **** 		   Printf("\r\nVS8812 Write addr=%02x  data=%02x",(WORD)MonIndex,(WORD)ret);
 365:VS4210/monitor.c **** 	}
 366:VS4210/monitor.c **** 	else if( Monitor_I2C==0x88)
 735              		.loc 1 366 0
 736 002e 882B     		cmp	r3, #136
 737 0030 40D0     		beq	.L81
ARM GAS  /tmp/cco5PJAb.s 			page 20


 367:VS4210/monitor.c **** 		{
 368:VS4210/monitor.c **** 		tp28xx_byte_write( MonIndex, MonWdata);	
 369:VS4210/monitor.c **** 		ret= tp28xx_byte_read(MonIndex);			
 370:VS4210/monitor.c **** 		 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)MonIndex,(WORD)ret);
 371:VS4210/monitor.c **** 		}
 372:VS4210/monitor.c **** 	
 373:VS4210/monitor.c **** 	else if( Monitor_I2C==0x90)
 738              		.loc 1 373 0
 739 0032 902B     		cmp	r3, #144
 740 0034 4DD0     		beq	.L82
 741              	.LVL40:
 742              	.L73:
 374:VS4210/monitor.c **** 		{
 375:VS4210/monitor.c **** 		gHDMI_Index=0;	
 376:VS4210/monitor.c **** 		HDMIRX_WriteI2C_Byte( MonIndex, MonWdata ); 
 377:VS4210/monitor.c **** 		ret= HDMIRX_ReadI2C_Byte(MonIndex); 	
 378:VS4210/monitor.c **** 		 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 379:VS4210/monitor.c **** 		}
 380:VS4210/monitor.c **** 
 381:VS4210/monitor.c **** 	Prompt();
 743              		.loc 1 381 0
 744 0036 FFF7FEFF 		bl	Prompt
 745              	.LVL41:
 382:VS4210/monitor.c **** 
 383:VS4210/monitor.c **** }
 746              		.loc 1 383 0
 747 003a 10BD     		pop	{r4, pc}
 748              	.LVL42:
 749              	.L69:
 326:VS4210/monitor.c **** 	case 10: MonWdata-=0x10;	break;
 750              		.loc 1 326 0
 751 003c 304A     		ldr	r2, .L83
 752 003e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 753 0040 0133     		adds	r3, r3, #1
 754 0042 1370     		strb	r3, [r2]
 755 0044 EBE7     		b	.L66
 756              	.L70:
 327:VS4210/monitor.c **** 	case 11: MonWdata+=0x10;	break;
 757              		.loc 1 327 0
 758 0046 2E4A     		ldr	r2, .L83
 759 0048 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 760 004a 103B     		subs	r3, r3, #16
 761 004c 1370     		strb	r3, [r2]
 762 004e E6E7     		b	.L66
 763              	.L71:
 328:VS4210/monitor.c **** 	}
 764              		.loc 1 328 0
 765 0050 2B4A     		ldr	r2, .L83
 766 0052 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 767 0054 1033     		adds	r3, r3, #16
 768 0056 1370     		strb	r3, [r2]
 769 0058 E1E7     		b	.L66
 770              	.L78:
 350:VS4210/monitor.c **** 		 ret= ReadEEP(MonIndex);	
 771              		.loc 1 350 0
 772 005a 2B4C     		ldr	r4, .L83+8
 773 005c 284B     		ldr	r3, .L83
ARM GAS  /tmp/cco5PJAb.s 			page 21


 774 005e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 775 0060 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 776              	.LVL43:
 777 0062 FFF7FEFF 		bl	WriteEEP
 778              	.LVL44:
 351:VS4210/monitor.c **** 		  Printf("\r\nEEPROM Write addr=%02x  data=%02x",(WORD)MonIndex,(WORD)ret);
 779              		.loc 1 351 0
 780 0066 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 781 0068 FFF7FEFF 		bl	ReadEEP
 782              	.LVL45:
 352:VS4210/monitor.c **** 		}
 783              		.loc 1 352 0
 784 006c 0246     		mov	r2, r0
 785 006e 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 786 0070 2648     		ldr	r0, .L83+12
 787              	.LVL46:
 788 0072 FFF7FEFF 		bl	Printf
 789              	.LVL47:
 790 0076 DEE7     		b	.L73
 791              	.LVL48:
 792              	.L79:
 356:VS4210/monitor.c **** 		 ret= VXISI2CRead(MonIndex);	
 793              		.loc 1 356 0
 794 0078 234C     		ldr	r4, .L83+8
 795 007a 214B     		ldr	r3, .L83
 796 007c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 797 007e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 798              	.LVL49:
 799 0080 FFF7FEFF 		bl	VXISI2CWrite
 800              	.LVL50:
 357:VS4210/monitor.c **** 		   Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)MonIndex,(WORD)ret);
 801              		.loc 1 357 0
 802 0084 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 803 0086 FFF7FEFF 		bl	VXISI2CRead
 804              	.LVL51:
 358:VS4210/monitor.c **** 	}
 805              		.loc 1 358 0
 806 008a 0246     		mov	r2, r0
 807 008c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 808 008e 2048     		ldr	r0, .L83+16
 809              	.LVL52:
 810 0090 FFF7FEFF 		bl	Printf
 811              	.LVL53:
 812 0094 CFE7     		b	.L73
 813              	.LVL54:
 814              	.L80:
 362:VS4210/monitor.c **** 		ret= VS8812Read(MonIndex);	
 815              		.loc 1 362 0
 816 0096 1C4C     		ldr	r4, .L83+8
 817 0098 194B     		ldr	r3, .L83
 818 009a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 819 009c 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 820              	.LVL55:
 821 009e FFF7FEFF 		bl	VS8812Write
 822              	.LVL56:
 363:VS4210/monitor.c **** 		   Printf("\r\nVS8812 Write addr=%02x  data=%02x",(WORD)MonIndex,(WORD)ret);
 823              		.loc 1 363 0
ARM GAS  /tmp/cco5PJAb.s 			page 22


 824 00a2 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 825 00a4 FFF7FEFF 		bl	VS8812Read
 826              	.LVL57:
 364:VS4210/monitor.c **** 	}
 827              		.loc 1 364 0
 828 00a8 0246     		mov	r2, r0
 829 00aa 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 830 00ac 1948     		ldr	r0, .L83+20
 831              	.LVL58:
 832 00ae FFF7FEFF 		bl	Printf
 833              	.LVL59:
 834 00b2 C0E7     		b	.L73
 835              	.LVL60:
 836              	.L81:
 368:VS4210/monitor.c **** 		ret= tp28xx_byte_read(MonIndex);			
 837              		.loc 1 368 0
 838 00b4 144C     		ldr	r4, .L83+8
 839 00b6 124B     		ldr	r3, .L83
 840 00b8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 841 00ba 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 842              	.LVL61:
 843 00bc FFF7FEFF 		bl	tp28xx_byte_write
 844              	.LVL62:
 369:VS4210/monitor.c **** 		 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)MonIndex,(WORD)ret);
 845              		.loc 1 369 0
 846 00c0 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 847 00c2 FFF7FEFF 		bl	tp28xx_byte_read
 848              	.LVL63:
 370:VS4210/monitor.c **** 		}
 849              		.loc 1 370 0
 850 00c6 0246     		mov	r2, r0
 851 00c8 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 852 00ca 1348     		ldr	r0, .L83+24
 853              	.LVL64:
 854 00cc FFF7FEFF 		bl	Printf
 855              	.LVL65:
 856 00d0 B1E7     		b	.L73
 857              	.LVL66:
 858              	.L82:
 375:VS4210/monitor.c **** 		HDMIRX_WriteI2C_Byte( MonIndex, MonWdata ); 
 859              		.loc 1 375 0
 860 00d2 124B     		ldr	r3, .L83+28
 861 00d4 0022     		movs	r2, #0
 862 00d6 1A70     		strb	r2, [r3]
 376:VS4210/monitor.c **** 		ret= HDMIRX_ReadI2C_Byte(MonIndex); 	
 863              		.loc 1 376 0
 864 00d8 0B4C     		ldr	r4, .L83+8
 865 00da 094B     		ldr	r3, .L83
 866 00dc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 867 00de 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 868              	.LVL67:
 869 00e0 FFF7FEFF 		bl	HDMIRX_WriteI2C_Byte
 870              	.LVL68:
 377:VS4210/monitor.c **** 		 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 871              		.loc 1 377 0
 872 00e4 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 873 00e6 FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
ARM GAS  /tmp/cco5PJAb.s 			page 23


 874              	.LVL69:
 875 00ea 0446     		mov	r4, r0
 876              	.LVL70:
 378:VS4210/monitor.c **** 		}
 877              		.loc 1 378 0
 878 00ec 0C4B     		ldr	r3, .L83+32
 879 00ee 5868     		ldr	r0, [r3, #4]
 880 00f0 FFF7FEFF 		bl	Asc2Bin
 881              	.LVL71:
 882 00f4 2246     		mov	r2, r4
 883 00f6 0146     		mov	r1, r0
 884 00f8 0A48     		ldr	r0, .L83+36
 885 00fa FFF7FEFF 		bl	Printf
 886              	.LVL72:
 887 00fe 9AE7     		b	.L73
 888              	.L84:
 889              		.align	2
 890              	.L83:
 891 0100 00000000 		.word	MonWdata
 892 0104 00000000 		.word	.LANCHOR4
 893 0108 00000000 		.word	MonIndex
 894 010c 00000000 		.word	.LC4
 895 0110 24000000 		.word	.LC5
 896 0114 48000000 		.word	.LC6
 897 0118 6C000000 		.word	.LC7
 898 011c 00000000 		.word	gHDMI_Index
 899 0120 00000000 		.word	argv
 900 0124 90000000 		.word	.LC8
 901              		.cfi_endproc
 902              	.LFE83:
 904              		.section	.text.MonDumpI2C,"ax",%progbits
 905              		.align	1
 906              		.global	MonDumpI2C
 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 910              		.fpu softvfp
 912              	MonDumpI2C:
 913              	.LFB84:
 384:VS4210/monitor.c **** 
 385:VS4210/monitor.c **** void MonDumpI2C(void)
 386:VS4210/monitor.c **** {
 914              		.loc 1 386 0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 918              		@ link register save eliminated.
 387:VS4210/monitor.c **** /*
 388:VS4210/monitor.c **** 	BYTE ToMonIndex;
 389:VS4210/monitor.c **** 	int  cnt=8;
 390:VS4210/monitor.c **** 
 391:VS4210/monitor.c **** 	if( argc>=2 ) MonIndex = Asc2Bin(argv[1]);
 392:VS4210/monitor.c **** 	if( argc>=3 ) ToMonIndex = Asc2Bin(argv[2]);
 393:VS4210/monitor.c **** 	else ToMonIndex = MonIndex+cnt;
 394:VS4210/monitor.c **** 	if ( ToMonIndex < MonIndex ) ToMonIndex = 0xFF;
 395:VS4210/monitor.c **** 	cnt = ToMonIndex - MonIndex + 1;
 396:VS4210/monitor.c **** 
ARM GAS  /tmp/cco5PJAb.s 			page 24


 397:VS4210/monitor.c **** 	if( echo ) {
 398:VS4210/monitor.c **** 		if ( MonAddress == TW88I2CAddress ) {
 399:VS4210/monitor.c **** 			for ( ; cnt > 0; cnt-- ) {
 400:VS4210/monitor.c **** 				MonRdata = ReadTW88(MonIndex);
 401:VS4210/monitor.c **** 				Printf("\r\n==> Read %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 402:VS4210/monitor.c **** 				MonIndex++;
 403:VS4210/monitor.c **** 			}
 404:VS4210/monitor.c **** 		}
 405:VS4210/monitor.c **** 		else {
 406:VS4210/monitor.c **** 			for ( ; cnt > 0; cnt-- ) {
 407:VS4210/monitor.c **** 				MonRdata = ReadI2C(MonAddress, MonIndex);
 408:VS4210/monitor.c **** 				Printf("\r\n==> Read %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 409:VS4210/monitor.c **** 				MonIndex++;
 410:VS4210/monitor.c **** 			}
 411:VS4210/monitor.c **** 		}
 412:VS4210/monitor.c **** 	}
 413:VS4210/monitor.c **** 	else {
 414:VS4210/monitor.c **** 		if ( MonAddress == TW88I2CAddress ) {
 415:VS4210/monitor.c **** 			for ( ; cnt > 0; cnt-- ) {
 416:VS4210/monitor.c **** 				MonRdata = ReadTW88(MonIndex);
 417:VS4210/monitor.c **** 				MonIndex++;
 418:VS4210/monitor.c **** 			}
 419:VS4210/monitor.c **** 		}
 420:VS4210/monitor.c **** 		else {
 421:VS4210/monitor.c **** 			for ( ; cnt > 0; cnt-- ) {
 422:VS4210/monitor.c **** 				MonRdata = ReadI2C(MonAddress, MonIndex);
 423:VS4210/monitor.c **** 				MonIndex++;
 424:VS4210/monitor.c **** 			}
 425:VS4210/monitor.c **** 		}
 426:VS4210/monitor.c **** 	}
 427:VS4210/monitor.c **** 	*/
 428:VS4210/monitor.c **** }
 919              		.loc 1 428 0
 920 0000 7047     		bx	lr
 921              		.cfi_endproc
 922              	.LFE84:
 924              		.section	.text.MonNewReadI2C,"ax",%progbits
 925              		.align	1
 926              		.global	MonNewReadI2C
 927              		.syntax unified
 928              		.thumb
 929              		.thumb_func
 930              		.fpu softvfp
 932              	MonNewReadI2C:
 933              	.LFB85:
 429:VS4210/monitor.c **** 
 430:VS4210/monitor.c **** //-----------------------------------------------------------------------------
 431:VS4210/monitor.c **** 
 432:VS4210/monitor.c **** void MonNewReadI2C(void)
 433:VS4210/monitor.c **** {
 934              		.loc 1 433 0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 0
 937              		@ frame_needed = 0, uses_anonymous_args = 0
 938              		@ link register save eliminated.
 434:VS4210/monitor.c **** /*
 435:VS4210/monitor.c **** 	BYTE Slave;
ARM GAS  /tmp/cco5PJAb.s 			page 25


 436:VS4210/monitor.c **** 
 437:VS4210/monitor.c **** 	if( argc>=3 ) MonIndex = Asc2Bin( argv[2] );
 438:VS4210/monitor.c **** 	else	{
 439:VS4210/monitor.c **** 		Printf("   --> Missing parameter !!!");
 440:VS4210/monitor.c **** 		return;
 441:VS4210/monitor.c **** 	}
 442:VS4210/monitor.c **** 	Slave = Asc2Bin(argv[1]);
 443:VS4210/monitor.c **** 
 444:VS4210/monitor.c **** 	if ( Slave == TW88I2CAddress )
 445:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 446:VS4210/monitor.c **** 	else
 447:VS4210/monitor.c **** 		MonRdata = ReadI2C(Slave, MonIndex);
 448:VS4210/monitor.c **** 
 449:VS4210/monitor.c **** 	if( echo )
 450:VS4210/monitor.c **** 		Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)MonIndex, (tWord)MonRdata);
 451:VS4210/monitor.c **** 	
 452:VS4210/monitor.c **** 	MonWdata = MonRdata;
 453:VS4210/monitor.c **** 	*/
 454:VS4210/monitor.c **** }
 939              		.loc 1 454 0
 940 0000 7047     		bx	lr
 941              		.cfi_endproc
 942              	.LFE85:
 944              		.section	.text.MonNewWriteI2C,"ax",%progbits
 945              		.align	1
 946              		.global	MonNewWriteI2C
 947              		.syntax unified
 948              		.thumb
 949              		.thumb_func
 950              		.fpu softvfp
 952              	MonNewWriteI2C:
 953              	.LFB86:
 455:VS4210/monitor.c **** 
 456:VS4210/monitor.c **** void MonNewWriteI2C(void)
 457:VS4210/monitor.c **** {
 954              		.loc 1 457 0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 0
 957              		@ frame_needed = 0, uses_anonymous_args = 0
 958              		@ link register save eliminated.
 458:VS4210/monitor.c **** /*
 459:VS4210/monitor.c **** 	BYTE Slave;
 460:VS4210/monitor.c **** 
 461:VS4210/monitor.c **** 	if( argc<4 ) {
 462:VS4210/monitor.c **** 		Printf("   --> Missing parameter !!!");
 463:VS4210/monitor.c **** 		return;
 464:VS4210/monitor.c **** 	}
 465:VS4210/monitor.c **** 	
 466:VS4210/monitor.c **** 	MonIndex = Asc2Bin( argv[2] );
 467:VS4210/monitor.c **** 	MonWdata = Asc2Bin( argv[3] );
 468:VS4210/monitor.c **** 	Slave = Asc2Bin(argv[1]);
 469:VS4210/monitor.c **** 	
 470:VS4210/monitor.c **** 	if ( Slave == TW88I2CAddress ) {
 471:VS4210/monitor.c **** 		WriteTW88(MonIndex, MonWdata);
 472:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 473:VS4210/monitor.c **** 	}
 474:VS4210/monitor.c **** 	else {
ARM GAS  /tmp/cco5PJAb.s 			page 26


 475:VS4210/monitor.c **** 		WriteI2C(Slave, MonIndex, MonWdata);
 476:VS4210/monitor.c **** 		MonRdata = ReadI2C(Slave, MonIndex);
 477:VS4210/monitor.c ****    	}
 478:VS4210/monitor.c **** 
 479:VS4210/monitor.c **** 	if( echo )
 480:VS4210/monitor.c **** 		Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)MonIndex, (tWord)MonRdata);
 481:VS4210/monitor.c **** */
 482:VS4210/monitor.c **** }
 959              		.loc 1 482 0
 960 0000 7047     		bx	lr
 961              		.cfi_endproc
 962              	.LFE86:
 964              		.section	.text.MonNewDumpI2C,"ax",%progbits
 965              		.align	1
 966              		.global	MonNewDumpI2C
 967              		.syntax unified
 968              		.thumb
 969              		.thumb_func
 970              		.fpu softvfp
 972              	MonNewDumpI2C:
 973              	.LFB87:
 483:VS4210/monitor.c **** 
 484:VS4210/monitor.c **** void MonNewDumpI2C(void)
 485:VS4210/monitor.c **** {
 974              		.loc 1 485 0
 975              		.cfi_startproc
 976              		@ args = 0, pretend = 0, frame = 0
 977              		@ frame_needed = 0, uses_anonymous_args = 0
 978              		@ link register save eliminated.
 486:VS4210/monitor.c **** /*
 487:VS4210/monitor.c **** 	BYTE 	ToMonIndex, Slave;
 488:VS4210/monitor.c **** 	tWord	i;
 489:VS4210/monitor.c **** 	
 490:VS4210/monitor.c **** 	if( argc>=2 ) MonIndex = Asc2Bin(argv[2]);
 491:VS4210/monitor.c **** 	if( argc>=3 ) ToMonIndex = Asc2Bin(argv[3]);
 492:VS4210/monitor.c **** 	Slave = Asc2Bin(argv[1]);
 493:VS4210/monitor.c **** 
 494:VS4210/monitor.c **** 	if( echo ) {
 495:VS4210/monitor.c **** 		if ( Slave == TW88I2CAddress ) {
 496:VS4210/monitor.c **** 			for(i=MonIndex; i<=ToMonIndex; i++) {
 497:VS4210/monitor.c **** 				MonRdata = ReadTW88(i);
 498:VS4210/monitor.c ****         		Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)i, (tWord)MonRdata);
 499:VS4210/monitor.c **** 			}
 500:VS4210/monitor.c **** 		}
 501:VS4210/monitor.c **** 		else {
 502:VS4210/monitor.c **** 			for(i=MonIndex; i<=ToMonIndex; i++) {
 503:VS4210/monitor.c **** 				MonRdata = ReadI2C(Slave, i);
 504:VS4210/monitor.c ****         		Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)i, (tWord)MonRdata);
 505:VS4210/monitor.c **** 			}
 506:VS4210/monitor.c **** 		}
 507:VS4210/monitor.c **** 	}
 508:VS4210/monitor.c **** 	else {
 509:VS4210/monitor.c **** 		if ( Slave == TW88I2CAddress ) {
 510:VS4210/monitor.c **** 			for(i=MonIndex; i<=ToMonIndex; i++) {
 511:VS4210/monitor.c **** 				MonRdata = ReadTW88(i);
 512:VS4210/monitor.c **** 			}
 513:VS4210/monitor.c **** 		}
ARM GAS  /tmp/cco5PJAb.s 			page 27


 514:VS4210/monitor.c **** 		else {
 515:VS4210/monitor.c **** 			for(i=MonIndex; i<=ToMonIndex; i++) {
 516:VS4210/monitor.c **** 				MonRdata = ReadI2C(Slave, i);
 517:VS4210/monitor.c **** 			}
 518:VS4210/monitor.c **** 		}
 519:VS4210/monitor.c **** 	}
 520:VS4210/monitor.c **** 	*/
 521:VS4210/monitor.c **** }
 979              		.loc 1 521 0
 980 0000 7047     		bx	lr
 981              		.cfi_endproc
 982              	.LFE87:
 984              		.section	.text.MonWriteBit,"ax",%progbits
 985              		.align	1
 986              		.global	MonWriteBit
 987              		.syntax unified
 988              		.thumb
 989              		.thumb_func
 990              		.fpu softvfp
 992              	MonWriteBit:
 993              	.LFB88:
 522:VS4210/monitor.c **** 
 523:VS4210/monitor.c **** 
 524:VS4210/monitor.c **** void MonWriteBit(void)
 525:VS4210/monitor.c **** {
 994              		.loc 1 525 0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 0
 997              		@ frame_needed = 0, uses_anonymous_args = 0
 998              		@ link register save eliminated.
 526:VS4210/monitor.c **** /*
 527:VS4210/monitor.c **** 	BYTE mask, i, FromBit, ToBit,  MonMask, val;
 528:VS4210/monitor.c **** 	BYTE Slave;
 529:VS4210/monitor.c **** 	// b 88 index startbit|endbit data
 530:VS4210/monitor.c **** 
 531:VS4210/monitor.c **** 	if( argc<5 ) {
 532:VS4210/monitor.c **** 		Printf("   --> Missing parameter !!!");
 533:VS4210/monitor.c **** 		return;
 534:VS4210/monitor.c **** 	}
 535:VS4210/monitor.c **** 	Slave = Asc2Bin(argv[1]);
 536:VS4210/monitor.c **** 
 537:VS4210/monitor.c **** 	MonIndex = Asc2Bin( argv[2] );
 538:VS4210/monitor.c **** 	FromBit  = (Asc2Bin( argv[3] ) >> 4) & 0x0f;
 539:VS4210/monitor.c **** 	ToBit  = Asc2Bin( argv[3] )  & 0x0f;
 540:VS4210/monitor.c **** 	MonMask  = Asc2Bin( argv[4] );
 541:VS4210/monitor.c **** 
 542:VS4210/monitor.c **** 	if( FromBit<ToBit || FromBit>7 || ToBit>7) {
 543:VS4210/monitor.c **** 		Printf("\r\n   --> Wrong range of bit operation !!!");
 544:VS4210/monitor.c **** 		return;
 545:VS4210/monitor.c **** 	}
 546:VS4210/monitor.c **** 	
 547:VS4210/monitor.c **** 	mask = 0xff; 
 548:VS4210/monitor.c **** 	val=0x7f;
 549:VS4210/monitor.c **** 	for(i=7; i>FromBit; i--) {
 550:VS4210/monitor.c **** 		mask &= val;
 551:VS4210/monitor.c **** 		val = val>>1;
 552:VS4210/monitor.c **** 	}
ARM GAS  /tmp/cco5PJAb.s 			page 28


 553:VS4210/monitor.c **** 
 554:VS4210/monitor.c **** 	val=0xfe;
 555:VS4210/monitor.c **** 	for(i=0; i<ToBit; i++) {
 556:VS4210/monitor.c **** 		mask &= val;
 557:VS4210/monitor.c **** 		val = val<<1;
 558:VS4210/monitor.c **** 	}
 559:VS4210/monitor.c **** 
 560:VS4210/monitor.c **** 	if ( Slave == TW88I2CAddress ) {
 561:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 562:VS4210/monitor.c **** 		MonWdata = (MonRdata & (~mask)) | (MonMask & mask);
 563:VS4210/monitor.c **** 				
 564:VS4210/monitor.c **** 		WriteTW88(MonIndex, MonWdata);
 565:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 566:VS4210/monitor.c **** 	}
 567:VS4210/monitor.c **** 	else {
 568:VS4210/monitor.c **** 		MonRdata = ReadI2C(Slave, MonIndex);
 569:VS4210/monitor.c **** 		MonWdata = (MonRdata & (~mask)) | (MonMask & mask);
 570:VS4210/monitor.c **** 				
 571:VS4210/monitor.c **** 		WriteI2C(Slave, MonIndex, MonWdata);
 572:VS4210/monitor.c **** 		MonRdata = ReadI2C(Slave, MonIndex);
 573:VS4210/monitor.c **** 	}
 574:VS4210/monitor.c **** 
 575:VS4210/monitor.c **** 	if( echo )
 576:VS4210/monitor.c **** 		Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)MonIndex, (tWord)MonRdata);
 577:VS4210/monitor.c **** */
 578:VS4210/monitor.c **** }
 999              		.loc 1 578 0
 1000 0000 7047     		bx	lr
 1001              		.cfi_endproc
 1002              	.LFE88:
 1004              		.section	.text.MonTxDump,"ax",%progbits
 1005              		.align	1
 1006              		.global	MonTxDump
 1007              		.syntax unified
 1008              		.thumb
 1009              		.thumb_func
 1010              		.fpu softvfp
 1012              	MonTxDump:
 1013              	.LFB89:
 579:VS4210/monitor.c **** 
 580:VS4210/monitor.c **** #if  0// defined( SUPPORT_PC ) || defined( SUPPORT_DTV )
 581:VS4210/monitor.c **** void PclkAccess(void)
 582:VS4210/monitor.c **** {
 583:VS4210/monitor.c **** 	DtWord pclk;
 584:VS4210/monitor.c **** 
 585:VS4210/monitor.c **** 	if( argc > 2 ) {
 586:VS4210/monitor.c **** 		Printf("   --> Too many parameter !!!");
 587:VS4210/monitor.c **** 		return;
 588:VS4210/monitor.c **** 	}
 589:VS4210/monitor.c **** 
 590:VS4210/monitor.c **** 	if( argc==2 ) {
 591:VS4210/monitor.c **** 		pclk = (DtWord)a2i(argv[1]) * 1000000;
 592:VS4210/monitor.c **** 		Printf("\r\n --> Set Pclk:  %ld Hz ", pclk);
 593:VS4210/monitor.c **** //		Printf("\r\n Not Suuport ");
 594:VS4210/monitor.c **** 		ChangeInternPLL(pclk);
 595:VS4210/monitor.c **** 	}
 596:VS4210/monitor.c **** 	
ARM GAS  /tmp/cco5PJAb.s 			page 29


 597:VS4210/monitor.c **** 	if( argc==1)   GetPPF();
 598:VS4210/monitor.c **** 	
 599:VS4210/monitor.c **** }
 600:VS4210/monitor.c **** #endif
 601:VS4210/monitor.c **** 
 602:VS4210/monitor.c **** void MonTxDump(void)
 603:VS4210/monitor.c **** {
 1014              		.loc 1 603 0
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 0
 1017              		@ frame_needed = 0, uses_anonymous_args = 0
 1018              		@ link register save eliminated.
 604:VS4210/monitor.c **** /*
 605:VS4210/monitor.c **** 	tWord	count;
 606:VS4210/monitor.c **** 
 607:VS4210/monitor.c **** 	if ( argc < 2 ) {
 608:VS4210/monitor.c **** 		Puts("\r\nInsufficient parameters...");
 609:VS4210/monitor.c **** 		return;
 610:VS4210/monitor.c **** 	}
 611:VS4210/monitor.c **** 	count = (tWord)a2i(argv[1]);
 612:VS4210/monitor.c **** 	do {
 613:VS4210/monitor.c **** 		RS_tx((count&0x1F)+0x20);
 614:VS4210/monitor.c **** 		count--;
 615:VS4210/monitor.c **** 	} while ( count != 0 );
 616:VS4210/monitor.c **** 	*/
 617:VS4210/monitor.c **** }
 1019              		.loc 1 617 0
 1020 0000 7047     		bx	lr
 1021              		.cfi_endproc
 1022              	.LFE89:
 1024              		.section	.text.MonHelp,"ax",%progbits
 1025              		.align	1
 1026              		.global	MonHelp
 1027              		.syntax unified
 1028              		.thumb
 1029              		.thumb_func
 1030              		.fpu softvfp
 1032              	MonHelp:
 1033              	.LFB90:
 618:VS4210/monitor.c **** 
 619:VS4210/monitor.c **** //=============================================================================
 620:VS4210/monitor.c **** //			Help Message
 621:VS4210/monitor.c **** //=============================================================================
 622:VS4210/monitor.c **** void MonHelp(void)
 623:VS4210/monitor.c **** {
 1034              		.loc 1 623 0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 0
 1037              		@ frame_needed = 0, uses_anonymous_args = 0
 1038 0000 38B5     		push	{r3, r4, r5, lr}
 1039              	.LCFI14:
 1040              		.cfi_def_cfa_offset 16
 1041              		.cfi_offset 3, -16
 1042              		.cfi_offset 4, -12
 1043              		.cfi_offset 5, -8
 1044              		.cfi_offset 14, -4
 624:VS4210/monitor.c **** 	#if 1
ARM GAS  /tmp/cco5PJAb.s 			page 30


 625:VS4210/monitor.c **** 	  Printf("\r\n=======================================================");
 1045              		.loc 1 625 0
 1046 0002 154C     		ldr	r4, .L93
 1047 0004 2046     		mov	r0, r4
 1048 0006 FFF7FEFF 		bl	Printf
 1049              	.LVL73:
 626:VS4210/monitor.c **** 	  Printf("\r\n>>>   Welcome to TOA TAAH02 console	 Rev 1.00   <<<");
 1050              		.loc 1 626 0
 1051 000a 1448     		ldr	r0, .L93+4
 1052 000c FFF7FEFF 		bl	Printf
 1053              	.LVL74:
 627:VS4210/monitor.c **** 	  Printf("\r\n=======================================================");
 1054              		.loc 1 627 0
 1055 0010 2046     		mov	r0, r4
 1056 0012 FFF7FEFF 		bl	Printf
 1057              	.LVL75:
 628:VS4210/monitor.c **** 	  Printf("\r\n R [ii] 		   ; Read Register data");
 1058              		.loc 1 628 0
 1059 0016 1248     		ldr	r0, .L93+8
 1060 0018 FFF7FEFF 		bl	Printf
 1061              	.LVL76:
 629:VS4210/monitor.c **** 	  Printf("\r\n W [ii] [dd]		   ; Write Register data");
 1062              		.loc 1 629 0
 1063 001c 1148     		ldr	r0, .L93+12
 1064 001e FFF7FEFF 		bl	Printf
 1065              	.LVL77:
 630:VS4210/monitor.c **** 	  Printf("\r\n Dump [ii] [cc] 	   ; Dump [first][end] Reg.") ;
 1066              		.loc 1 630 0
 1067 0022 1148     		ldr	r0, .L93+16
 1068 0024 FFF7FEFF 		bl	Printf
 1069              	.LVL78:
 631:VS4210/monitor.c **** 	  Printf("\r\n I2C [aa]		   ; Change I2C address");
 1070              		.loc 1 631 0
 1071 0028 1048     		ldr	r0, .L93+20
 1072 002a FFF7FEFF 		bl	Printf
 1073              	.LVL79:
 632:VS4210/monitor.c **** 	  Printf("\r\n < VS4210:40 TP2824:88 EEPROM:0xA0 HDMI:90 >");
 1074              		.loc 1 632 0
 1075 002e 1048     		ldr	r0, .L93+24
 1076 0030 FFF7FEFF 		bl	Printf
 1077              	.LVL80:
 633:VS4210/monitor.c **** 	  Printf("\r\n WIN [ii] 	           ; Change Input Source");
 1078              		.loc 1 633 0
 1079 0034 0F48     		ldr	r0, .L93+28
 1080 0036 FFF7FEFF 		bl	Printf
 1081              	.LVL81:
 634:VS4210/monitor.c **** 	  Printf("\r\n Access [0,1]		   ; TP2824 Access OFF/ON");
 1082              		.loc 1 634 0
 1083 003a 0F48     		ldr	r0, .L93+32
 1084 003c FFF7FEFF 		bl	Printf
 1085              	.LVL82:
 635:VS4210/monitor.c **** 	  Printf("\r\n");
 1086              		.loc 1 635 0
 1087 0040 0E4D     		ldr	r5, .L93+36
 1088 0042 2846     		mov	r0, r5
 1089 0044 FFF7FEFF 		bl	Printf
 1090              	.LVL83:
ARM GAS  /tmp/cco5PJAb.s 			page 31


 636:VS4210/monitor.c **** 	  Printf("\r\n=======================================================");
 1091              		.loc 1 636 0
 1092 0048 2046     		mov	r0, r4
 1093 004a FFF7FEFF 		bl	Printf
 1094              	.LVL84:
 637:VS4210/monitor.c **** 	  Printf("\r\n");
 1095              		.loc 1 637 0
 1096 004e 2846     		mov	r0, r5
 1097 0050 FFF7FEFF 		bl	Printf
 1098              	.LVL85:
 638:VS4210/monitor.c **** 
 639:VS4210/monitor.c **** 	#else
 640:VS4210/monitor.c **** 	Printf("\r\n=======================================================");
 641:VS4210/monitor.c **** 	Printf("\r\n>>>     Welcome to ML076HQ     Rev 1.00     <<<");
 642:VS4210/monitor.c **** 	Printf("\r\n=======================================================");
 643:VS4210/monitor.c **** 	Printf("\r\n   R ii             ; Read TP2824 data");
 644:VS4210/monitor.c **** 	Printf("\r\n   W ii dd          ; Write TP2824 data");
 645:VS4210/monitor.c **** 	Printf("\r\n   VR ii             ; Read VS4210 data");
 646:VS4210/monitor.c **** 	Printf("\r\n   VW ii dd          ; Write VS4210 data");
 647:VS4210/monitor.c **** 	Printf("\r\n   D [ii] [cc]      ; Dump");
 648:VS4210/monitor.c **** 	Printf("\r\n   C aa             ; Change I2C address");
 649:VS4210/monitor.c **** 	Printf("\r\n   M ?              ; Current Input");
 650:VS4210/monitor.c **** 	Printf("\r\n   M dd             ; Change Input");
 651:VS4210/monitor.c **** 	Printf("\r\n   Access [0,1]     ; Program TW88xx Access OFF/ON");
 652:VS4210/monitor.c **** 	Printf("\r\n   AutoDetect [0,1] ; PC Automode OFF/ON");
 653:VS4210/monitor.c **** 	Printf("\r\n   PCAuto		    ; RUN PC Auto Adjust");
 654:VS4210/monitor.c **** 	Printf("\r\n   Debug [0..255]   ; Debuging display level");
 655:VS4210/monitor.c **** 	Printf("\r\n   Echo On/Off      ; Terminal Echoing On/Off");
 656:VS4210/monitor.c **** 	Printf("\r\n   Delta            ; Init DeltaRGB Panel");
 657:VS4210/monitor.c **** 	Printf("\r\n   Delta w ii dh dl; SPI Write to DeltaRGB Panel");
 658:VS4210/monitor.c **** 	Printf("\r\n");
 659:VS4210/monitor.c **** 	Printf("\r\n=======================================================");
 660:VS4210/monitor.c **** 	Printf("\r\n");
 661:VS4210/monitor.c **** 	#endif
 662:VS4210/monitor.c **** }
 1099              		.loc 1 662 0
 1100 0054 38BD     		pop	{r3, r4, r5, pc}
 1101              	.L94:
 1102 0056 00BF     		.align	2
 1103              	.L93:
 1104 0058 00000000 		.word	.LC9
 1105 005c 3C000000 		.word	.LC10
 1106 0060 74000000 		.word	.LC11
 1107 0064 98000000 		.word	.LC12
 1108 0068 C4000000 		.word	.LC13
 1109 006c F4000000 		.word	.LC14
 1110 0070 1C010000 		.word	.LC15
 1111 0074 4C010000 		.word	.LC16
 1112 0078 7C010000 		.word	.LC17
 1113 007c A8010000 		.word	.LC18
 1114              		.cfi_endproc
 1115              	.LFE90:
 1117              		.section	.text.MonGetCommand,"ax",%progbits
 1118              		.align	1
 1119              		.global	MonGetCommand
 1120              		.syntax unified
 1121              		.thumb
ARM GAS  /tmp/cco5PJAb.s 			page 32


 1122              		.thumb_func
 1123              		.fpu softvfp
 1125              	MonGetCommand:
 1126              	.LFB91:
 663:VS4210/monitor.c **** 
 664:VS4210/monitor.c **** //=============================================================================
 665:VS4210/monitor.c **** //
 666:VS4210/monitor.c **** //=============================================================================
 667:VS4210/monitor.c **** BYTE MonGetCommand(void)
 668:VS4210/monitor.c **** {
 1127              		.loc 1 668 0
 1128              		.cfi_startproc
 1129              		@ args = 0, pretend = 0, frame = 0
 1130              		@ frame_needed = 0, uses_anonymous_args = 0
 1131 0000 38B5     		push	{r3, r4, r5, lr}
 1132              	.LCFI15:
 1133              		.cfi_def_cfa_offset 16
 1134              		.cfi_offset 3, -16
 1135              		.cfi_offset 4, -12
 1136              		.cfi_offset 5, -8
 1137              		.cfi_offset 14, -4
 1138              	.LVL86:
 669:VS4210/monitor.c **** 	static BYTE comment=0;
 670:VS4210/monitor.c **** 	static BYTE incnt=0, last_argc=0;
 671:VS4210/monitor.c **** 	BYTE i, ch;
 672:VS4210/monitor.c **** 	BYTE ret=0;
 673:VS4210/monitor.c **** 
 674:VS4210/monitor.c **** 	if( !RS_ready() ) return 0;
 1139              		.loc 1 674 0
 1140 0002 FFF7FEFF 		bl	RS_ready
 1141              	.LVL87:
 1142 0006 0446     		mov	r4, r0
 1143 0008 08B9     		cbnz	r0, .L128
 1144              	.LVL88:
 1145              	.L96:
 675:VS4210/monitor.c **** 	//#ifdef HS_DEBUG
 676:VS4210/monitor.c **** 	ch = RS_rx();
 677:VS4210/monitor.c **** 	//#endif
 678:VS4210/monitor.c **** 
 679:VS4210/monitor.c **** 	#if (_DEBUG_MESSAGE_Monitor==ON)
 680:VS4210/monitor.c **** 	 Monitor_flag=_TRUE;
 681:VS4210/monitor.c **** 	#endif
 682:VS4210/monitor.c **** 	  MCUTimerReactiveTimerEvent(SEC(30), _USER_TIMER_EVENT_Monitor_ON);  
 683:VS4210/monitor.c **** 
 684:VS4210/monitor.c **** 	//----- if comment, echo back and ignore -----
 685:VS4210/monitor.c **** 	if( comment ) {
 686:VS4210/monitor.c **** 		if( ch=='\r' || ch==0x1b ) comment = 0;
 687:VS4210/monitor.c **** 		else { 
 688:VS4210/monitor.c **** 			Mon_tx(ch);
 689:VS4210/monitor.c **** 			return 0;
 690:VS4210/monitor.c **** 		}
 691:VS4210/monitor.c **** 	}
 692:VS4210/monitor.c **** 	else if( ch==';' ) {
 693:VS4210/monitor.c **** 		comment = 1;
 694:VS4210/monitor.c **** 		Mon_tx(ch);
 695:VS4210/monitor.c **** 		return 0;
 696:VS4210/monitor.c **** 	}
ARM GAS  /tmp/cco5PJAb.s 			page 33


 697:VS4210/monitor.c **** 
 698:VS4210/monitor.c **** 	//=====================================
 699:VS4210/monitor.c **** 	switch( ch ) {
 700:VS4210/monitor.c **** 
 701:VS4210/monitor.c **** 	case 0x1b:
 702:VS4210/monitor.c **** 		argc = 0;
 703:VS4210/monitor.c **** 		incnt = 0;
 704:VS4210/monitor.c **** 		comment = 0;
 705:VS4210/monitor.c **** 		Prompt();
 706:VS4210/monitor.c **** 		return 0;
 707:VS4210/monitor.c **** 
 708:VS4210/monitor.c **** 	//--- end of string
 709:VS4210/monitor.c **** 	case '\r':
 710:VS4210/monitor.c **** 
 711:VS4210/monitor.c **** 		if( incnt==0 ) {
 712:VS4210/monitor.c **** 			Prompt();
 713:VS4210/monitor.c **** 			break;
 714:VS4210/monitor.c **** 		}
 715:VS4210/monitor.c **** 
 716:VS4210/monitor.c **** 		monstr[incnt++] = '\0';
 717:VS4210/monitor.c **** 		argc=0;
 718:VS4210/monitor.c **** 
 719:VS4210/monitor.c **** 		for(i=0; i<incnt; i++) if( monstr[i]!=' ' ) break;
 720:VS4210/monitor.c **** 
 721:VS4210/monitor.c **** 		if( !monstr[i] ) {
 722:VS4210/monitor.c **** 			incnt = 0;
 723:VS4210/monitor.c **** 			comment = 0;
 724:VS4210/monitor.c **** 			Prompt();
 725:VS4210/monitor.c **** 			return 0;
 726:VS4210/monitor.c **** 		}
 727:VS4210/monitor.c **** 		argv[0] = &monstr[i];
 728:VS4210/monitor.c **** 		for(; i<incnt; i++) {
 729:VS4210/monitor.c **** 			if( monstr[i]==' ' || monstr[i]=='\0' ) {
 730:VS4210/monitor.c **** 				monstr[i]='\0';
 731:VS4210/monitor.c ****      			 //Printf("(%s) ",  argv[argc]);
 732:VS4210/monitor.c **** 				i++;
 733:VS4210/monitor.c **** 				while( monstr[i]==' ' ) i++;
 734:VS4210/monitor.c **** 				argc++;
 735:VS4210/monitor.c **** 				if( monstr[i] ){
 736:VS4210/monitor.c ****      			 argv[argc] = &monstr[i];
 737:VS4210/monitor.c **** 				}
 738:VS4210/monitor.c **** 			}
 739:VS4210/monitor.c **** 		}
 740:VS4210/monitor.c **** 
 741:VS4210/monitor.c **** 		ret = 1;
 742:VS4210/monitor.c **** 		last_argc = argc;
 743:VS4210/monitor.c **** 		incnt = 0;
 744:VS4210/monitor.c **** 		
 745:VS4210/monitor.c **** 		break;
 746:VS4210/monitor.c **** 
 747:VS4210/monitor.c **** 	//--- repeat command
 748:VS4210/monitor.c **** 	case '/':
 749:VS4210/monitor.c **** 		argc = last_argc;
 750:VS4210/monitor.c **** 		ret = 1;
 751:VS4210/monitor.c **** 		break;
 752:VS4210/monitor.c **** 
 753:VS4210/monitor.c **** 	//--- back space
ARM GAS  /tmp/cco5PJAb.s 			page 34


 754:VS4210/monitor.c **** 	case 0x08:
 755:VS4210/monitor.c **** 		if( incnt ) {
 756:VS4210/monitor.c **** 			incnt--;
 757:VS4210/monitor.c **** 			Mon_tx(ch);
 758:VS4210/monitor.c **** 			Mon_tx(' ');
 759:VS4210/monitor.c **** 			Mon_tx(ch);
 760:VS4210/monitor.c **** 		}
 761:VS4210/monitor.c **** 		break;
 762:VS4210/monitor.c **** 
 763:VS4210/monitor.c **** 	//--- decreamental write
 764:VS4210/monitor.c **** 	case ',':
 765:VS4210/monitor.c **** 		if( incnt ) {
 766:VS4210/monitor.c **** 			Mon_tx(ch);
 767:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 768:VS4210/monitor.c **** 		}
 769:VS4210/monitor.c **** 		else
 770:VS4210/monitor.c **** 			MonIncDecI2C(0);
 771:VS4210/monitor.c **** 		break;
 772:VS4210/monitor.c **** 
 773:VS4210/monitor.c **** 	case '<':
 774:VS4210/monitor.c **** 		if( incnt ) {
 775:VS4210/monitor.c **** 			Mon_tx(ch);
 776:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 777:VS4210/monitor.c **** 		}
 778:VS4210/monitor.c **** 		else
 779:VS4210/monitor.c **** 			MonIncDecI2C(10);
 780:VS4210/monitor.c **** 		break;
 781:VS4210/monitor.c **** 	//--- increamental write
 782:VS4210/monitor.c **** 	case '.':
 783:VS4210/monitor.c **** 		if( incnt ) {
 784:VS4210/monitor.c **** 			Mon_tx(ch);
 785:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 786:VS4210/monitor.c **** 		}
 787:VS4210/monitor.c **** 		else
 788:VS4210/monitor.c **** 			MonIncDecI2C(1);
 789:VS4210/monitor.c **** 		break;
 790:VS4210/monitor.c **** 
 791:VS4210/monitor.c **** 	case '>':
 792:VS4210/monitor.c **** 		if( incnt ) {
 793:VS4210/monitor.c **** 			Mon_tx(ch);
 794:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 795:VS4210/monitor.c **** 		}
 796:VS4210/monitor.c **** 		else
 797:VS4210/monitor.c **** 			MonIncDecI2C(11);
 798:VS4210/monitor.c **** 		break;
 799:VS4210/monitor.c **** 
 800:VS4210/monitor.c **** 	default:
 801:VS4210/monitor.c **** 		Mon_tx(ch);
 802:VS4210/monitor.c **** 		monstr[incnt++] = ch;
 803:VS4210/monitor.c **** 		break;
 804:VS4210/monitor.c **** 	}
 805:VS4210/monitor.c **** 
 806:VS4210/monitor.c **** 	if( ret ) {
 807:VS4210/monitor.c **** 		comment = 0;
 808:VS4210/monitor.c **** 		last_argc = argc;
 809:VS4210/monitor.c **** 		return ret;
 810:VS4210/monitor.c **** 	}
ARM GAS  /tmp/cco5PJAb.s 			page 35


 811:VS4210/monitor.c **** 	else {
 812:VS4210/monitor.c **** 		return ret;
 813:VS4210/monitor.c **** 	}
 814:VS4210/monitor.c **** }
 1146              		.loc 1 814 0
 1147 000a 2046     		mov	r0, r4
 1148 000c 38BD     		pop	{r3, r4, r5, pc}
 1149              	.LVL89:
 1150              	.L128:
 676:VS4210/monitor.c **** 	//#endif
 1151              		.loc 1 676 0
 1152 000e FFF7FEFF 		bl	RS_rx
 1153              	.LVL90:
 1154 0012 0546     		mov	r5, r0
 1155              	.LVL91:
 680:VS4210/monitor.c **** 	#endif
 1156              		.loc 1 680 0
 1157 0014 944B     		ldr	r3, .L133
 1158 0016 0122     		movs	r2, #1
 1159 0018 1A70     		strb	r2, [r3]
 682:VS4210/monitor.c **** 
 1160              		.loc 1 682 0
 1161 001a 1F21     		movs	r1, #31
 1162 001c 47F23050 		movw	r0, #30000
 1163 0020 FFF7FEFF 		bl	MCUTimerReactiveTimerEvent
 1164              	.LVL92:
 685:VS4210/monitor.c **** 		if( ch=='\r' || ch==0x1b ) comment = 0;
 1165              		.loc 1 685 0
 1166 0024 914B     		ldr	r3, .L133+4
 1167 0026 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1168 0028 64B1     		cbz	r4, .L97
 686:VS4210/monitor.c **** 		else { 
 1169              		.loc 1 686 0
 1170 002a 0D2D     		cmp	r5, #13
 1171 002c 01D0     		beq	.L98
 686:VS4210/monitor.c **** 		else { 
 1172              		.loc 1 686 0 is_stmt 0 discriminator 2
 1173 002e 1B2D     		cmp	r5, #27
 1174 0030 03D1     		bne	.L99
 1175              	.L98:
 686:VS4210/monitor.c **** 		else { 
 1176              		.loc 1 686 0 discriminator 3
 1177 0032 8E4B     		ldr	r3, .L133+4
 1178 0034 0022     		movs	r2, #0
 1179 0036 1A70     		strb	r2, [r3]
 1180 0038 06E0     		b	.L100
 1181              	.L99:
 688:VS4210/monitor.c **** 			return 0;
 1182              		.loc 1 688 0 is_stmt 1
 1183 003a 2846     		mov	r0, r5
 1184 003c FFF7FEFF 		bl	Mon_tx
 1185              	.LVL93:
 689:VS4210/monitor.c **** 		}
 1186              		.loc 1 689 0
 1187 0040 0024     		movs	r4, #0
 1188 0042 E2E7     		b	.L96
 1189              	.L97:
ARM GAS  /tmp/cco5PJAb.s 			page 36


 692:VS4210/monitor.c **** 		comment = 1;
 1190              		.loc 1 692 0
 1191 0044 3B2D     		cmp	r5, #59
 1192 0046 3DD0     		beq	.L129
 1193              	.L100:
 699:VS4210/monitor.c **** 
 1194              		.loc 1 699 0
 1195 0048 A5F10803 		sub	r3, r5, #8
 1196 004c 362B     		cmp	r3, #54
 1197 004e 00F2FF80 		bhi	.L101
 1198 0052 DFE813F0 		tbh	[pc, r3, lsl #1]
 1199              	.L103:
 1200 0056 A300     		.2byte	(.L102-.L103)/2
 1201 0058 FD00     		.2byte	(.L101-.L103)/2
 1202 005a FD00     		.2byte	(.L101-.L103)/2
 1203 005c FD00     		.2byte	(.L101-.L103)/2
 1204 005e FD00     		.2byte	(.L101-.L103)/2
 1205 0060 4800     		.2byte	(.L104-.L103)/2
 1206 0062 FD00     		.2byte	(.L101-.L103)/2
 1207 0064 FD00     		.2byte	(.L101-.L103)/2
 1208 0066 FD00     		.2byte	(.L101-.L103)/2
 1209 0068 FD00     		.2byte	(.L101-.L103)/2
 1210 006a FD00     		.2byte	(.L101-.L103)/2
 1211 006c FD00     		.2byte	(.L101-.L103)/2
 1212 006e FD00     		.2byte	(.L101-.L103)/2
 1213 0070 FD00     		.2byte	(.L101-.L103)/2
 1214 0072 FD00     		.2byte	(.L101-.L103)/2
 1215 0074 FD00     		.2byte	(.L101-.L103)/2
 1216 0076 FD00     		.2byte	(.L101-.L103)/2
 1217 0078 FD00     		.2byte	(.L101-.L103)/2
 1218 007a FD00     		.2byte	(.L101-.L103)/2
 1219 007c 3E00     		.2byte	(.L105-.L103)/2
 1220 007e FD00     		.2byte	(.L101-.L103)/2
 1221 0080 FD00     		.2byte	(.L101-.L103)/2
 1222 0082 FD00     		.2byte	(.L101-.L103)/2
 1223 0084 FD00     		.2byte	(.L101-.L103)/2
 1224 0086 FD00     		.2byte	(.L101-.L103)/2
 1225 0088 FD00     		.2byte	(.L101-.L103)/2
 1226 008a FD00     		.2byte	(.L101-.L103)/2
 1227 008c FD00     		.2byte	(.L101-.L103)/2
 1228 008e FD00     		.2byte	(.L101-.L103)/2
 1229 0090 FD00     		.2byte	(.L101-.L103)/2
 1230 0092 FD00     		.2byte	(.L101-.L103)/2
 1231 0094 FD00     		.2byte	(.L101-.L103)/2
 1232 0096 FD00     		.2byte	(.L101-.L103)/2
 1233 0098 FD00     		.2byte	(.L101-.L103)/2
 1234 009a FD00     		.2byte	(.L101-.L103)/2
 1235 009c FD00     		.2byte	(.L101-.L103)/2
 1236 009e B500     		.2byte	(.L106-.L103)/2
 1237 00a0 FD00     		.2byte	(.L101-.L103)/2
 1238 00a2 D900     		.2byte	(.L107-.L103)/2
 1239 00a4 9600     		.2byte	(.L108-.L103)/2
 1240 00a6 FD00     		.2byte	(.L101-.L103)/2
 1241 00a8 FD00     		.2byte	(.L101-.L103)/2
 1242 00aa FD00     		.2byte	(.L101-.L103)/2
 1243 00ac FD00     		.2byte	(.L101-.L103)/2
 1244 00ae FD00     		.2byte	(.L101-.L103)/2
ARM GAS  /tmp/cco5PJAb.s 			page 37


 1245 00b0 FD00     		.2byte	(.L101-.L103)/2
 1246 00b2 FD00     		.2byte	(.L101-.L103)/2
 1247 00b4 FD00     		.2byte	(.L101-.L103)/2
 1248 00b6 FD00     		.2byte	(.L101-.L103)/2
 1249 00b8 FD00     		.2byte	(.L101-.L103)/2
 1250 00ba FD00     		.2byte	(.L101-.L103)/2
 1251 00bc FD00     		.2byte	(.L101-.L103)/2
 1252 00be C700     		.2byte	(.L109-.L103)/2
 1253 00c0 FD00     		.2byte	(.L101-.L103)/2
 1254 00c2 EB00     		.2byte	(.L110-.L103)/2
 1255              		.p2align 1
 1256              	.L129:
 693:VS4210/monitor.c **** 		Mon_tx(ch);
 1257              		.loc 1 693 0
 1258 00c4 694B     		ldr	r3, .L133+4
 1259 00c6 0122     		movs	r2, #1
 1260 00c8 1A70     		strb	r2, [r3]
 694:VS4210/monitor.c **** 		return 0;
 1261              		.loc 1 694 0
 1262 00ca 2846     		mov	r0, r5
 1263 00cc FFF7FEFF 		bl	Mon_tx
 1264              	.LVL94:
 695:VS4210/monitor.c **** 	}
 1265              		.loc 1 695 0
 1266 00d0 9BE7     		b	.L96
 1267              	.L105:
 702:VS4210/monitor.c **** 		incnt = 0;
 1268              		.loc 1 702 0
 1269 00d2 0024     		movs	r4, #0
 1270 00d4 664B     		ldr	r3, .L133+8
 1271 00d6 1C70     		strb	r4, [r3]
 703:VS4210/monitor.c **** 		comment = 0;
 1272              		.loc 1 703 0
 1273 00d8 664B     		ldr	r3, .L133+12
 1274 00da 1C70     		strb	r4, [r3]
 704:VS4210/monitor.c **** 		Prompt();
 1275              		.loc 1 704 0
 1276 00dc 634B     		ldr	r3, .L133+4
 1277 00de 1C70     		strb	r4, [r3]
 705:VS4210/monitor.c **** 		return 0;
 1278              		.loc 1 705 0
 1279 00e0 FFF7FEFF 		bl	Prompt
 1280              	.LVL95:
 706:VS4210/monitor.c **** 
 1281              		.loc 1 706 0
 1282 00e4 91E7     		b	.L96
 1283              	.L104:
 711:VS4210/monitor.c **** 			Prompt();
 1284              		.loc 1 711 0
 1285 00e6 634B     		ldr	r3, .L133+12
 1286 00e8 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1287 00ea 84B1     		cbz	r4, .L130
 716:VS4210/monitor.c **** 		argc=0;
 1288              		.loc 1 716 0
 1289 00ec 601C     		adds	r0, r4, #1
 1290 00ee C0B2     		uxtb	r0, r0
 1291 00f0 0023     		movs	r3, #0
ARM GAS  /tmp/cco5PJAb.s 			page 38


 1292 00f2 614A     		ldr	r2, .L133+16
 1293 00f4 1355     		strb	r3, [r2, r4]
 717:VS4210/monitor.c **** 
 1294              		.loc 1 717 0
 1295 00f6 5E4A     		ldr	r2, .L133+8
 1296 00f8 1370     		strb	r3, [r2]
 1297              	.LVL96:
 719:VS4210/monitor.c **** 
 1298              		.loc 1 719 0
 1299 00fa 1D46     		mov	r5, r3
 1300              	.LVL97:
 1301              	.L112:
 719:VS4210/monitor.c **** 
 1302              		.loc 1 719 0 is_stmt 0 discriminator 3
 1303 00fc A842     		cmp	r0, r5
 1304 00fe 09D9     		bls	.L113
 719:VS4210/monitor.c **** 
 1305              		.loc 1 719 0 discriminator 4
 1306 0100 5D4A     		ldr	r2, .L133+16
 1307 0102 525D     		ldrb	r2, [r2, r5]	@ zero_extendqisi2
 1308 0104 202A     		cmp	r2, #32
 1309 0106 05D1     		bne	.L113
 719:VS4210/monitor.c **** 
 1310              		.loc 1 719 0 discriminator 2
 1311 0108 6B1C     		adds	r3, r5, #1
 1312 010a DDB2     		uxtb	r5, r3
 1313              	.LVL98:
 1314 010c F6E7     		b	.L112
 1315              	.LVL99:
 1316              	.L130:
 712:VS4210/monitor.c **** 			break;
 1317              		.loc 1 712 0 is_stmt 1
 1318 010e FFF7FEFF 		bl	Prompt
 1319              	.LVL100:
 1320 0112 7AE7     		b	.L96
 1321              	.LVL101:
 1322              	.L113:
 721:VS4210/monitor.c **** 			incnt = 0;
 1323              		.loc 1 721 0
 1324 0114 584B     		ldr	r3, .L133+16
 1325 0116 5C5D     		ldrb	r4, [r3, r5]	@ zero_extendqisi2
 1326 0118 24B1     		cbz	r4, .L131
 727:VS4210/monitor.c **** 		for(; i<incnt; i++) {
 1327              		.loc 1 727 0
 1328 011a 574B     		ldr	r3, .L133+16
 1329 011c 2B44     		add	r3, r3, r5
 1330 011e 574A     		ldr	r2, .L133+20
 1331 0120 1360     		str	r3, [r2]
 728:VS4210/monitor.c **** 			if( monstr[i]==' ' || monstr[i]=='\0' ) {
 1332              		.loc 1 728 0
 1333 0122 1BE0     		b	.L116
 1334              	.L131:
 722:VS4210/monitor.c **** 			comment = 0;
 1335              		.loc 1 722 0
 1336 0124 0023     		movs	r3, #0
 1337 0126 534A     		ldr	r2, .L133+12
 1338 0128 1370     		strb	r3, [r2]
ARM GAS  /tmp/cco5PJAb.s 			page 39


 723:VS4210/monitor.c **** 			Prompt();
 1339              		.loc 1 723 0
 1340 012a 504A     		ldr	r2, .L133+4
 1341 012c 1370     		strb	r3, [r2]
 724:VS4210/monitor.c **** 			return 0;
 1342              		.loc 1 724 0
 1343 012e FFF7FEFF 		bl	Prompt
 1344              	.LVL102:
 725:VS4210/monitor.c **** 		}
 1345              		.loc 1 725 0
 1346 0132 6AE7     		b	.L96
 1347              	.L120:
 733:VS4210/monitor.c **** 				argc++;
 1348              		.loc 1 733 0 discriminator 2
 1349 0134 6B1C     		adds	r3, r5, #1
 1350 0136 DDB2     		uxtb	r5, r3
 1351              	.LVL103:
 1352              	.L119:
 733:VS4210/monitor.c **** 				argc++;
 1353              		.loc 1 733 0 is_stmt 0 discriminator 1
 1354 0138 2A46     		mov	r2, r5
 1355 013a 4F4B     		ldr	r3, .L133+16
 1356 013c 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 1357 013e 202B     		cmp	r3, #32
 1358 0140 F8D0     		beq	.L120
 734:VS4210/monitor.c **** 				if( monstr[i] ){
 1359              		.loc 1 734 0 is_stmt 1
 1360 0142 4B4C     		ldr	r4, .L133+8
 1361 0144 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 1362 0146 0131     		adds	r1, r1, #1
 1363 0148 C9B2     		uxtb	r1, r1
 1364 014a 2170     		strb	r1, [r4]
 735:VS4210/monitor.c ****      			 argv[argc] = &monstr[i];
 1365              		.loc 1 735 0
 1366 014c 23B1     		cbz	r3, .L118
 736:VS4210/monitor.c **** 				}
 1367              		.loc 1 736 0
 1368 014e 4A4B     		ldr	r3, .L133+16
 1369 0150 1A44     		add	r2, r2, r3
 1370 0152 4A4B     		ldr	r3, .L133+20
 1371 0154 43F82120 		str	r2, [r3, r1, lsl #2]
 1372              	.L118:
 728:VS4210/monitor.c **** 			if( monstr[i]==' ' || monstr[i]=='\0' ) {
 1373              		.loc 1 728 0
 1374 0158 6B1C     		adds	r3, r5, #1
 1375 015a DDB2     		uxtb	r5, r3
 1376              	.LVL104:
 1377              	.L116:
 728:VS4210/monitor.c **** 			if( monstr[i]==' ' || monstr[i]=='\0' ) {
 1378              		.loc 1 728 0 is_stmt 0 discriminator 1
 1379 015c A842     		cmp	r0, r5
 1380 015e 0CD9     		bls	.L132
 729:VS4210/monitor.c **** 				monstr[i]='\0';
 1381              		.loc 1 729 0 is_stmt 1
 1382 0160 2B46     		mov	r3, r5
 1383 0162 454A     		ldr	r2, .L133+16
 1384 0164 525D     		ldrb	r2, [r2, r5]	@ zero_extendqisi2
ARM GAS  /tmp/cco5PJAb.s 			page 40


 1385 0166 202A     		cmp	r2, #32
 1386 0168 01D0     		beq	.L117
 729:VS4210/monitor.c **** 				monstr[i]='\0';
 1387              		.loc 1 729 0 is_stmt 0 discriminator 1
 1388 016a 002A     		cmp	r2, #0
 1389 016c F4D1     		bne	.L118
 1390              	.L117:
 730:VS4210/monitor.c ****      			 //Printf("(%s) ",  argv[argc]);
 1391              		.loc 1 730 0 is_stmt 1
 1392 016e 424A     		ldr	r2, .L133+16
 1393 0170 0021     		movs	r1, #0
 1394 0172 D154     		strb	r1, [r2, r3]
 732:VS4210/monitor.c **** 				while( monstr[i]==' ' ) i++;
 1395              		.loc 1 732 0
 1396 0174 6B1C     		adds	r3, r5, #1
 1397 0176 DDB2     		uxtb	r5, r3
 1398              	.LVL105:
 733:VS4210/monitor.c **** 				argc++;
 1399              		.loc 1 733 0
 1400 0178 DEE7     		b	.L119
 1401              	.L132:
 1402              	.LVL106:
 743:VS4210/monitor.c **** 		
 1403              		.loc 1 743 0
 1404 017a 3E4B     		ldr	r3, .L133+12
 1405 017c 0022     		movs	r2, #0
 1406 017e 1A70     		strb	r2, [r3]
 1407 0180 03E0     		b	.L122
 1408              	.LVL107:
 1409              	.L108:
 749:VS4210/monitor.c **** 		ret = 1;
 1410              		.loc 1 749 0
 1411 0182 3F4B     		ldr	r3, .L133+24
 1412 0184 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1413 0186 3A4B     		ldr	r3, .L133+8
 1414 0188 1A70     		strb	r2, [r3]
 1415              	.LVL108:
 1416              	.L122:
 807:VS4210/monitor.c **** 		last_argc = argc;
 1417              		.loc 1 807 0
 1418 018a 384B     		ldr	r3, .L133+4
 1419 018c 0022     		movs	r2, #0
 1420 018e 1A70     		strb	r2, [r3]
 808:VS4210/monitor.c **** 		return ret;
 1421              		.loc 1 808 0
 1422 0190 374B     		ldr	r3, .L133+8
 1423 0192 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1424 0194 3A4B     		ldr	r3, .L133+24
 1425 0196 1A70     		strb	r2, [r3]
 809:VS4210/monitor.c **** 	}
 1426              		.loc 1 809 0
 1427 0198 0124     		movs	r4, #1
 1428 019a 36E7     		b	.L96
 1429              	.LVL109:
 1430              	.L102:
 755:VS4210/monitor.c **** 			incnt--;
 1431              		.loc 1 755 0
ARM GAS  /tmp/cco5PJAb.s 			page 41


 1432 019c 354B     		ldr	r3, .L133+12
 1433 019e 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1434 01a0 002C     		cmp	r4, #0
 1435 01a2 3FF432AF 		beq	.L96
 756:VS4210/monitor.c **** 			Mon_tx(ch);
 1436              		.loc 1 756 0
 1437 01a6 013C     		subs	r4, r4, #1
 1438 01a8 1C70     		strb	r4, [r3]
 757:VS4210/monitor.c **** 			Mon_tx(' ');
 1439              		.loc 1 757 0
 1440 01aa 2846     		mov	r0, r5
 1441 01ac FFF7FEFF 		bl	Mon_tx
 1442              	.LVL110:
 758:VS4210/monitor.c **** 			Mon_tx(ch);
 1443              		.loc 1 758 0
 1444 01b0 2020     		movs	r0, #32
 1445 01b2 FFF7FEFF 		bl	Mon_tx
 1446              	.LVL111:
 759:VS4210/monitor.c **** 		}
 1447              		.loc 1 759 0
 1448 01b6 2846     		mov	r0, r5
 1449 01b8 FFF7FEFF 		bl	Mon_tx
 1450              	.LVL112:
 1451 01bc 0024     		movs	r4, #0
 1452 01be 24E7     		b	.L96
 1453              	.L106:
 765:VS4210/monitor.c **** 			Mon_tx(ch);
 1454              		.loc 1 765 0
 1455 01c0 2C4B     		ldr	r3, .L133+12
 1456 01c2 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1457 01c4 54B1     		cbz	r4, .L123
 766:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 1458              		.loc 1 766 0
 1459 01c6 2846     		mov	r0, r5
 1460 01c8 FFF7FEFF 		bl	Mon_tx
 1461              	.LVL113:
 767:VS4210/monitor.c **** 		}
 1462              		.loc 1 767 0
 1463 01cc 294A     		ldr	r2, .L133+12
 1464 01ce 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1465 01d0 591C     		adds	r1, r3, #1
 1466 01d2 1170     		strb	r1, [r2]
 1467 01d4 284A     		ldr	r2, .L133+16
 1468 01d6 D554     		strb	r5, [r2, r3]
 1469 01d8 0024     		movs	r4, #0
 1470 01da 16E7     		b	.L96
 1471              	.L123:
 770:VS4210/monitor.c **** 		break;
 1472              		.loc 1 770 0
 1473 01dc 0020     		movs	r0, #0
 1474 01de FFF7FEFF 		bl	MonIncDecI2C
 1475              	.LVL114:
 1476 01e2 12E7     		b	.L96
 1477              	.L109:
 774:VS4210/monitor.c **** 			Mon_tx(ch);
 1478              		.loc 1 774 0
 1479 01e4 234B     		ldr	r3, .L133+12
ARM GAS  /tmp/cco5PJAb.s 			page 42


 1480 01e6 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1481 01e8 54B1     		cbz	r4, .L124
 775:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 1482              		.loc 1 775 0
 1483 01ea 2846     		mov	r0, r5
 1484 01ec FFF7FEFF 		bl	Mon_tx
 1485              	.LVL115:
 776:VS4210/monitor.c **** 		}
 1486              		.loc 1 776 0
 1487 01f0 204A     		ldr	r2, .L133+12
 1488 01f2 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1489 01f4 591C     		adds	r1, r3, #1
 1490 01f6 1170     		strb	r1, [r2]
 1491 01f8 1F4A     		ldr	r2, .L133+16
 1492 01fa D554     		strb	r5, [r2, r3]
 1493 01fc 0024     		movs	r4, #0
 1494 01fe 04E7     		b	.L96
 1495              	.L124:
 779:VS4210/monitor.c **** 		break;
 1496              		.loc 1 779 0
 1497 0200 0A20     		movs	r0, #10
 1498 0202 FFF7FEFF 		bl	MonIncDecI2C
 1499              	.LVL116:
 1500 0206 00E7     		b	.L96
 1501              	.L107:
 783:VS4210/monitor.c **** 			Mon_tx(ch);
 1502              		.loc 1 783 0
 1503 0208 1A4B     		ldr	r3, .L133+12
 1504 020a 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1505 020c 54B1     		cbz	r4, .L125
 784:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 1506              		.loc 1 784 0
 1507 020e 2846     		mov	r0, r5
 1508 0210 FFF7FEFF 		bl	Mon_tx
 1509              	.LVL117:
 785:VS4210/monitor.c **** 		}
 1510              		.loc 1 785 0
 1511 0214 174A     		ldr	r2, .L133+12
 1512 0216 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1513 0218 591C     		adds	r1, r3, #1
 1514 021a 1170     		strb	r1, [r2]
 1515 021c 164A     		ldr	r2, .L133+16
 1516 021e D554     		strb	r5, [r2, r3]
 1517 0220 0024     		movs	r4, #0
 1518 0222 F2E6     		b	.L96
 1519              	.L125:
 788:VS4210/monitor.c **** 		break;
 1520              		.loc 1 788 0
 1521 0224 0120     		movs	r0, #1
 1522 0226 FFF7FEFF 		bl	MonIncDecI2C
 1523              	.LVL118:
 1524 022a EEE6     		b	.L96
 1525              	.L110:
 792:VS4210/monitor.c **** 			Mon_tx(ch);
 1526              		.loc 1 792 0
 1527 022c 114B     		ldr	r3, .L133+12
 1528 022e 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/cco5PJAb.s 			page 43


 1529 0230 54B1     		cbz	r4, .L126
 793:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 1530              		.loc 1 793 0
 1531 0232 2846     		mov	r0, r5
 1532 0234 FFF7FEFF 		bl	Mon_tx
 1533              	.LVL119:
 794:VS4210/monitor.c **** 		}
 1534              		.loc 1 794 0
 1535 0238 0E4A     		ldr	r2, .L133+12
 1536 023a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1537 023c 591C     		adds	r1, r3, #1
 1538 023e 1170     		strb	r1, [r2]
 1539 0240 0D4A     		ldr	r2, .L133+16
 1540 0242 D554     		strb	r5, [r2, r3]
 1541 0244 0024     		movs	r4, #0
 1542 0246 E0E6     		b	.L96
 1543              	.L126:
 797:VS4210/monitor.c **** 		break;
 1544              		.loc 1 797 0
 1545 0248 0B20     		movs	r0, #11
 1546 024a FFF7FEFF 		bl	MonIncDecI2C
 1547              	.LVL120:
 1548 024e DCE6     		b	.L96
 1549              	.L101:
 801:VS4210/monitor.c **** 		monstr[incnt++] = ch;
 1550              		.loc 1 801 0
 1551 0250 2846     		mov	r0, r5
 1552 0252 FFF7FEFF 		bl	Mon_tx
 1553              	.LVL121:
 802:VS4210/monitor.c **** 		break;
 1554              		.loc 1 802 0
 1555 0256 074A     		ldr	r2, .L133+12
 1556 0258 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1557 025a 591C     		adds	r1, r3, #1
 1558 025c 1170     		strb	r1, [r2]
 1559 025e 064A     		ldr	r2, .L133+16
 1560 0260 D554     		strb	r5, [r2, r3]
 1561 0262 0024     		movs	r4, #0
 1562 0264 D1E6     		b	.L96
 1563              	.L134:
 1564 0266 00BF     		.align	2
 1565              	.L133:
 1566 0268 00000000 		.word	.LANCHOR5
 1567 026c 00000000 		.word	.LANCHOR6
 1568 0270 00000000 		.word	.LANCHOR7
 1569 0274 00000000 		.word	.LANCHOR8
 1570 0278 00000000 		.word	monstr
 1571 027c 00000000 		.word	argv
 1572 0280 00000000 		.word	.LANCHOR9
 1573              		.cfi_endproc
 1574              	.LFE91:
 1576              		.section	.text.SET_AHD_SYNC_PARA,"ax",%progbits
 1577              		.align	1
 1578              		.global	SET_AHD_SYNC_PARA
 1579              		.syntax unified
 1580              		.thumb
 1581              		.thumb_func
ARM GAS  /tmp/cco5PJAb.s 			page 44


 1582              		.fpu softvfp
 1584              	SET_AHD_SYNC_PARA:
 1585              	.LFB93:
 815:VS4210/monitor.c **** 
 816:VS4210/monitor.c **** //*****************************************************************************
 817:VS4210/monitor.c **** //				Monitoring Command
 818:VS4210/monitor.c **** //*****************************************************************************
 819:VS4210/monitor.c **** //#ifdef  HS_DEBUG
 820:VS4210/monitor.c **** #ifdef  HS_DEBUG
 821:VS4210/monitor.c **** void Monitor(void)
 822:VS4210/monitor.c **** {
 823:VS4210/monitor.c **** 
 824:VS4210/monitor.c **** 	 BYTE ret/*,temp*/;
 825:VS4210/monitor.c **** 	//WORD addr;		
 826:VS4210/monitor.c **** 	if( !MonGetCommand() ) return;
 827:VS4210/monitor.c **** 
 828:VS4210/monitor.c **** 	//--------------------------------------------------
 829:VS4210/monitor.c **** 	// Check Indirect command
 830:VS4210/monitor.c **** 	/*
 831:VS4210/monitor.c **** 	if( !stricmp( argv[0], "I" ) ) 			indirect=1;	
 832:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "O" ) ) 	indirect=1;	
 833:VS4210/monitor.c **** 
 834:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "," ) ) 	indirect=0;	
 835:VS4210/monitor.c **** 	else if( !stricmp( argv[0], ">" ) ) 	indirect=0;	
 836:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "<" ) ) 	indirect=0;	
 837:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "." ) ) 	indirect=0;	
 838:VS4210/monitor.c **** 	else  indirect=0;	
 839:VS4210/monitor.c **** 	*/
 840:VS4210/monitor.c **** 	indirect = 0;
 841:VS4210/monitor.c **** 
 842:VS4210/monitor.c **** 	//---------------- Write Register -------------------
 843:VS4210/monitor.c **** 	if( !stricmp( (BYTE *)argv[0],(BYTE *)"W" ) ) {
 844:VS4210/monitor.c **** 
 845:VS4210/monitor.c **** #if 0
 846:VS4210/monitor.c **** 
 847:VS4210/monitor.c **** VXISI2CWrite( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 848:VS4210/monitor.c **** 		 ret= VXISI2CRead(Asc2Bin(argv[1]));	
 849:VS4210/monitor.c **** 	   Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 850:VS4210/monitor.c **** 
 851:VS4210/monitor.c **** #else
 852:VS4210/monitor.c **** if(Monitor_I2C==0xA0)
 853:VS4210/monitor.c **** 	{
 854:VS4210/monitor.c **** 	WriteEEP( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 855:VS4210/monitor.c **** 	   //tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2])); 	
 856:VS4210/monitor.c **** 	 ret= ReadEEP(Asc2Bin(argv[1]));	
 857:VS4210/monitor.c **** 		MonIndex=Asc2Bin(argv[1]);
 858:VS4210/monitor.c **** 		MonWdata=Asc2Bin(argv[2]);
 859:VS4210/monitor.c **** 	  Printf("\r\nEEPROM Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 860:VS4210/monitor.c **** 	}
 861:VS4210/monitor.c **** else if(Monitor_I2C==0x40)
 862:VS4210/monitor.c **** {
 863:VS4210/monitor.c **** 	VXISI2CWrite( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 864:VS4210/monitor.c **** 	 ret= VXISI2CRead(Asc2Bin(argv[1]));	
 865:VS4210/monitor.c **** 	 MonIndex=Asc2Bin(argv[1]);
 866:VS4210/monitor.c **** 	 MonWdata=Asc2Bin(argv[2]); 
 867:VS4210/monitor.c **** 	   Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 868:VS4210/monitor.c **** }
ARM GAS  /tmp/cco5PJAb.s 			page 45


 869:VS4210/monitor.c **** else if(Monitor_I2C==0x12)
 870:VS4210/monitor.c **** {
 871:VS4210/monitor.c **** 	VS8812Write( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 872:VS4210/monitor.c **** 	 ret= VS8812Read(Asc2Bin(argv[1]));	
 873:VS4210/monitor.c **** 	 MonIndex=Asc2Bin(argv[1]);
 874:VS4210/monitor.c **** 	 MonWdata=Asc2Bin(argv[2]); 
 875:VS4210/monitor.c **** 	   Printf("\r\nVS8812 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 876:VS4210/monitor.c **** }
 877:VS4210/monitor.c **** /*
 878:VS4210/monitor.c **** else if(Monitor_I2C==0x28)
 879:VS4210/monitor.c **** {
 880:VS4210/monitor.c **** 	
 881:VS4210/monitor.c **** 	addr=Asc2Bin(argv[1]);
 882:VS4210/monitor.c **** 	addr<<=8;
 883:VS4210/monitor.c **** 	addr|=Asc2Bin(argv[2]);
 884:VS4210/monitor.c **** 
 885:VS4210/monitor.c **** 	temp=Asc2Bin(argv[3]);
 886:VS4210/monitor.c **** 	SET_nGT911( addr,&temp,1 );
 887:VS4210/monitor.c **** 
 888:VS4210/monitor.c **** Printf("\r\nGT911  Write addr=%02x%02x data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]),(WO
 889:VS4210/monitor.c **** 	
 890:VS4210/monitor.c **** 	GET_nGT911(addr,&ret,1); 
 891:VS4210/monitor.c **** 	
 892:VS4210/monitor.c **** Printf("\r\nGT911  Read addr=%02x%02x data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]),(WOR
 893:VS4210/monitor.c ****   
 894:VS4210/monitor.c **** }
 895:VS4210/monitor.c **** */
 896:VS4210/monitor.c **** else if( Monitor_I2C==0x88)
 897:VS4210/monitor.c **** 	{
 898:VS4210/monitor.c **** 	tp28xx_byte_write( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );	
 899:VS4210/monitor.c **** 	ret= tp28xx_byte_read(Asc2Bin(argv[1]));	
 900:VS4210/monitor.c **** 	MonIndex=Asc2Bin(argv[1]);
 901:VS4210/monitor.c **** 	MonWdata=Asc2Bin(argv[2]);
 902:VS4210/monitor.c **** 	 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 903:VS4210/monitor.c **** 	}
 904:VS4210/monitor.c **** 
 905:VS4210/monitor.c **** else if( Monitor_I2C==0x90)
 906:VS4210/monitor.c **** 	{
 907:VS4210/monitor.c **** 	gHDMI_Index=0;	
 908:VS4210/monitor.c **** 	HDMIRX_WriteI2C_Byte( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );	
 909:VS4210/monitor.c **** 	ret= HDMIRX_ReadI2C_Byte(Asc2Bin(argv[1]));		
 910:VS4210/monitor.c **** 	MonIndex=Asc2Bin(argv[1]);
 911:VS4210/monitor.c **** 	MonWdata=Asc2Bin(argv[2]);
 912:VS4210/monitor.c **** 	 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 913:VS4210/monitor.c **** 	}
 914:VS4210/monitor.c **** else
 915:VS4210/monitor.c **** {
 916:VS4210/monitor.c **** 	Printf("\r\nI2C addr. error");   
 917:VS4210/monitor.c **** 
 918:VS4210/monitor.c **** }
 919:VS4210/monitor.c **** 
 920:VS4210/monitor.c **** #endif
 921:VS4210/monitor.c **** /*
 922:VS4210/monitor.c **** 		if(Monitor_I2C==EEPROM_24C02_addr)
 923:VS4210/monitor.c **** 		{
 924:VS4210/monitor.c **** 		 SW_I2C1Write( Monitor_I2C , Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 925:VS4210/monitor.c **** 		//tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2]));	 
ARM GAS  /tmp/cco5PJAb.s 			page 46


 926:VS4210/monitor.c **** 		  ret= SW_I2C1Read(Monitor_I2C,Asc2Bin(argv[1]));	 
 927:VS4210/monitor.c **** 		Printf("\r\nEEPROM Write addr=%02x	data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 928:VS4210/monitor.c **** 		}
 929:VS4210/monitor.c **** 		else
 930:VS4210/monitor.c **** 			{
 931:VS4210/monitor.c **** 		    	tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2]));   
 932:VS4210/monitor.c **** 	        	//ret= tp28xx_byte_read(0x2a);   
 933:VS4210/monitor.c **** 			  ret= tp28xx_byte_read(Asc2Bin(argv[1]));   
 934:VS4210/monitor.c **** 			Printf("\r\nTP2824 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 935:VS4210/monitor.c **** 			}
 936:VS4210/monitor.c **** 		*/
 937:VS4210/monitor.c **** 		
 938:VS4210/monitor.c **** 	}
 939:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0],(BYTE *) ")" ) ) {
 940:VS4210/monitor.c **** 		indirect=0;
 941:VS4210/monitor.c **** 	//	MonNewWriteI2C();
 942:VS4210/monitor.c **** 	}
 943:VS4210/monitor.c **** 	/*
 944:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "O" ) ) {			// inderect addressing for 8806
 945:VS4210/monitor.c **** 		MonIndex = Asc2Bin( argv[1] );
 946:VS4210/monitor.c **** 		MonWdata = Asc2Bin( argv[2] );
 947:VS4210/monitor.c **** 		WriteI2C(MonAddress, 0xc5, MonIndex);
 948:VS4210/monitor.c **** 		WriteI2C(MonAddress, 0xc6, MonWdata);
 949:VS4210/monitor.c **** 		MonRdata = ReadI2C(MonAddress, 0xc6);
 950:VS4210/monitor.c **** 		Printf("\r\n==> Read %2xh:%2xh", (WORD)MonIndex, (WORD)MonRdata);
 951:VS4210/monitor.c **** 	}
 952:VS4210/monitor.c **** 	*/
 953:VS4210/monitor.c **** 	//---------------- Read Register --------------------
 954:VS4210/monitor.c **** 	else if ( !stricmp((BYTE*) argv[0],(BYTE*) "R" ) ) {
 955:VS4210/monitor.c **** 		//MonReadI2C();
 956:VS4210/monitor.c **** 	
 957:VS4210/monitor.c **** 		#if 0
 958:VS4210/monitor.c **** 			   ret= VXISI2CRead(Asc2Bin(argv[1]));			 
 959:VS4210/monitor.c **** 			Printf("\r\nVS4210	Read addr=%02x	data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 960:VS4210/monitor.c **** 
 961:VS4210/monitor.c **** 		#else
 962:VS4210/monitor.c **** 	if(Monitor_I2C==0xA0)
 963:VS4210/monitor.c **** 		{
 964:VS4210/monitor.c **** 		   ret= ReadEEP(Asc2Bin(argv[1])); 
 965:VS4210/monitor.c **** 		   MonIndex=Asc2Bin(argv[1]);
 966:VS4210/monitor.c **** 		   MonWdata=ret;
 967:VS4210/monitor.c **** 		Printf("\r\nEEPROM  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 968:VS4210/monitor.c **** 		}
 969:VS4210/monitor.c **** 	else if(Monitor_I2C==0x40)
 970:VS4210/monitor.c **** 		{
 971:VS4210/monitor.c **** 		ret= VXISI2CRead(Asc2Bin(argv[1])); 	
 972:VS4210/monitor.c **** 		 MonIndex=Asc2Bin(argv[1]);
 973:VS4210/monitor.c **** 		 MonWdata=ret;
 974:VS4210/monitor.c **** 		 Printf("\r\nVS4210  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 975:VS4210/monitor.c **** 		}
 976:VS4210/monitor.c **** 	else if(Monitor_I2C==0x12)
 977:VS4210/monitor.c **** 		{
 978:VS4210/monitor.c **** 		ret= VS8812Read(Asc2Bin(argv[1])); 	
 979:VS4210/monitor.c **** 		 MonIndex=Asc2Bin(argv[1]);
 980:VS4210/monitor.c **** 		 MonWdata=ret;
 981:VS4210/monitor.c **** 		 Printf("\r\nVS8812  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 982:VS4210/monitor.c **** 		}
ARM GAS  /tmp/cco5PJAb.s 			page 47


 983:VS4210/monitor.c **** 	/*
 984:VS4210/monitor.c **** 	else if(Monitor_I2C==0x28)
 985:VS4210/monitor.c **** 		{
 986:VS4210/monitor.c **** 
 987:VS4210/monitor.c **** 		addr=Asc2Bin(argv[1]);
 988:VS4210/monitor.c **** 		addr<<=8;
 989:VS4210/monitor.c **** 		addr|=Asc2Bin(argv[2]);
 990:VS4210/monitor.c **** 		
 991:VS4210/monitor.c **** 		GET_nGT911(addr,&temp,1); 		  
 992:VS4210/monitor.c **** 		 Printf("\r\nGT911  Read addr=%02x%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]),
 993:VS4210/monitor.c **** 		}
 994:VS4210/monitor.c **** 	*/
 995:VS4210/monitor.c **** 	else if( Monitor_I2C==0x88)
 996:VS4210/monitor.c **** 		{	
 997:VS4210/monitor.c **** 		ret= tp28xx_byte_read(Asc2Bin(argv[1])); 	
 998:VS4210/monitor.c **** 		MonIndex=Asc2Bin(argv[1]);
 999:VS4210/monitor.c **** 		MonWdata=ret;
1000:VS4210/monitor.c **** 		 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
1001:VS4210/monitor.c **** 		}
1002:VS4210/monitor.c **** 	else if( Monitor_I2C==0x90)
1003:VS4210/monitor.c **** 			{
1004:VS4210/monitor.c **** 			gHDMI_Index=0;
1005:VS4210/monitor.c **** 			ret= HDMIRX_ReadI2C_Byte(Asc2Bin(argv[1]));	  
1006:VS4210/monitor.c **** 			 MonIndex=Asc2Bin(argv[1]);
1007:VS4210/monitor.c **** 			 MonWdata=ret;
1008:VS4210/monitor.c **** 			 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
1009:VS4210/monitor.c **** 			}
1010:VS4210/monitor.c **** 	else
1011:VS4210/monitor.c **** 		{
1012:VS4210/monitor.c **** 		Printf("\r\nI2C addr. error");
1013:VS4210/monitor.c **** 		}
1014:VS4210/monitor.c **** 		#endif
1015:VS4210/monitor.c **** 		/*
1016:VS4210/monitor.c **** 		if(Monitor_I2C==EEPROM_24C02_addr)
1017:VS4210/monitor.c **** 				{
1018:VS4210/monitor.c **** 			   ret= SW_I2C1Read(Monitor_I2C,Asc2Bin(argv[1]));              
1019:VS4210/monitor.c **** 			Printf("\r\nEEPROM Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);	
1020:VS4210/monitor.c **** 			}
1021:VS4210/monitor.c **** 		else
1022:VS4210/monitor.c **** 			{
1023:VS4210/monitor.c **** 			   ret= tp28xx_byte_read(Asc2Bin(argv[1]));              
1024:VS4210/monitor.c **** 			Printf("\r\nTP2824 Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);		
1025:VS4210/monitor.c **** 			}
1026:VS4210/monitor.c **** 		*/
1027:VS4210/monitor.c **** 	}  
1028:VS4210/monitor.c **** 	
1029:VS4210/monitor.c **** 	else if ( !stricmp( (BYTE *)argv[0],(BYTE *) "VR" ) ) {
1030:VS4210/monitor.c **** 			//MonReadI2C();
1031:VS4210/monitor.c **** 	//	 ret=VXISI2CRead(Asc2Bin(argv[1])); 
1032:VS4210/monitor.c **** 	//	Printf("\r\nVS4210 Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);	
1033:VS4210/monitor.c **** 	
1034:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x02));
1035:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x03));
1036:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x04));
1037:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x05));
1038:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x06));
1039:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x07));
ARM GAS  /tmp/cco5PJAb.s 			page 48


1040:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x08));
1041:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x09));
1042:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0A));
1043:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0B));
1044:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0C));
1045:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0D));
1046:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x10));
1047:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x11));
1048:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x15));
1049:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x16));
1050:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x17));
1051:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x18));
1052:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x19));
1053:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1A));
1054:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1C));
1055:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1D));
1056:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1E));
1057:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x28));
1058:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x29));
1059:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2A));
1060:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2B));
1061:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2C));
1062:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2D));
1063:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x74));
1064:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x7E));
1065:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x7F));
1066:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x80));
1067:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x81));
1068:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x82));
1069:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x83));
1070:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x84));
1071:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x85));
1072:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x86));
1073:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x87));
1074:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x88));
1075:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x89));
1076:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8A));
1077:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8B));
1078:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8C));
1079:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8D));
1080:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8E));
1081:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8F));
1082:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x90));
1083:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x91));
1084:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x92));
1085:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x93));
1086:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x94));
1087:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x95));
1088:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x97));
1089:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x98));
1090:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x99));
1091:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9B));
1092:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9C));
1093:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9D));
1094:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9E));
1095:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9F));
1096:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA0));
ARM GAS  /tmp/cco5PJAb.s 			page 49


1097:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA1));
1098:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA2));
1099:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA3));
1100:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA4));
1101:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA5));
1102:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA6));
1103:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA7));
1104:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA8));
1105:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA9));
1106:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAA));
1107:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAB));
1108:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAF));
1109:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xC0));
1110:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD6));
1111:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD7));
1112:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD8));
1113:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE6));
1114:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE7));
1115:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE8));
1116:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE9));
1117:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEA));
1118:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEB));
1119:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEC));
1120:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xED));
1121:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEE));
1122:VS4210/monitor.c **** 
1123:VS4210/monitor.c **** 		}
1124:VS4210/monitor.c **** 	else if ( !stricmp( (BYTE *)argv[0], (BYTE *)"VW" ) ) {
1125:VS4210/monitor.c **** 		    VXISI2CWrite(Asc2Bin(argv[1]), Asc2Bin(argv[2]));   
1126:VS4210/monitor.c **** 	  ret= VXISI2CRead(Asc2Bin(argv[1]));   
1127:VS4210/monitor.c **** 	Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);				
1128:VS4210/monitor.c **** 		}
1129:VS4210/monitor.c **** 	else if ( !stricmp( argv[0],(BYTE *)"(" ) ) {
1130:VS4210/monitor.c **** 		indirect=0;
1131:VS4210/monitor.c **** 		//MonNewReadI2C();
1132:VS4210/monitor.c **** 	}
1133:VS4210/monitor.c **** 	else if ( !stricmp( (BYTE *)argv[0],(BYTE *) "I2C" ) ) {
1134:VS4210/monitor.c **** 		 ret=Asc2Bin(argv[1]); 
1135:VS4210/monitor.c **** 		Printf("\r\nChange I2C addr. from %02x to %02x",(WORD)Monitor_I2C,(WORD)ret);		
1136:VS4210/monitor.c **** 		Monitor_I2C=ret;
1137:VS4210/monitor.c **** 		}
1138:VS4210/monitor.c **** 	else if ( !stricmp( (BYTE *)argv[0],(BYTE *) "Q" ) ) {
1139:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1140:VS4210/monitor.c **** 		}
1141:VS4210/monitor.c **** 	else if ( !stricmp( (BYTE *)argv[0],(BYTE *) "DUMP" ) ) {
1142:VS4210/monitor.c **** 		WORD s,e;	//20201211-03
1143:VS4210/monitor.c **** 		
1144:VS4210/monitor.c **** 		 s=Asc2Bin(argv[1]); 
1145:VS4210/monitor.c **** 		 e=Asc2Bin(argv[2]); 
1146:VS4210/monitor.c **** 
1147:VS4210/monitor.c **** 
1148:VS4210/monitor.c **** 		 if(Monitor_I2C==0xA0)
1149:VS4210/monitor.c **** 			 {
1150:VS4210/monitor.c **** 			 Printf("\r\nDUMP EEPROM Reg..");
1151:VS4210/monitor.c **** 			 }
1152:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x40)
1153:VS4210/monitor.c **** 			 {
ARM GAS  /tmp/cco5PJAb.s 			page 50


1154:VS4210/monitor.c **** 			 Printf("\r\nDUMP VS4210 Reg..");
1155:VS4210/monitor.c **** 			 }
1156:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x12)
1157:VS4210/monitor.c **** 			 {
1158:VS4210/monitor.c **** 			 Printf("\r\nDUMP VS8812 Reg..");
1159:VS4210/monitor.c **** 			 }
1160:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x90)
1161:VS4210/monitor.c **** 			 {
1162:VS4210/monitor.c **** 			 Printf("\r\nDUMP IT66021 Reg..");
1163:VS4210/monitor.c **** 			 }		 
1164:VS4210/monitor.c **** 
1165:VS4210/monitor.c **** for(;s<=e;s++)
1166:VS4210/monitor.c **** {
1167:VS4210/monitor.c **** 		 if(Monitor_I2C==0xA0)
1168:VS4210/monitor.c **** 			 {
1169:VS4210/monitor.c **** 				ret= ReadEEP(s); 		  
1170:VS4210/monitor.c **** 			 Printf("\r\nEEPROM  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
1171:VS4210/monitor.c **** 			 }
1172:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x40)
1173:VS4210/monitor.c **** 			 {
1174:VS4210/monitor.c **** 			 ret= VXISI2CRead(s);		   
1175:VS4210/monitor.c **** 			 // Printf("\r\nVXISI2CWrite(0x%02x,0x%02x);",(WORD)s,(WORD)ret);
1176:VS4210/monitor.c **** 			  Printf("\r\n40,%02x,%02x",(WORD)s,(WORD)ret);
1177:VS4210/monitor.c **** 			 }
1178:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x12)
1179:VS4210/monitor.c **** 			 {
1180:VS4210/monitor.c **** 			 ret= VS8812Read(s); 	   
1181:VS4210/monitor.c **** //			  Printf("\r\nVS8812  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
1182:VS4210/monitor.c **** 			  Printf("\r\nVS8812,%02x,%02x",(WORD)s,(WORD)ret);
1183:VS4210/monitor.c **** 			 }
1184:VS4210/monitor.c **** 		  else if(Monitor_I2C==0x88)
1185:VS4210/monitor.c **** 					  {
1186:VS4210/monitor.c **** 					  ret= tp28xx_byte_read(s);		
1187:VS4210/monitor.c **** 					 // Printf("\r\ntp28xx,%02x,%02x",(WORD)s,(WORD)ret);
1188:VS4210/monitor.c **** 					  Printf("\r\nR %02x %02x",(WORD)s,(WORD)ret);
1189:VS4210/monitor.c **** 					  } 
1190:VS4210/monitor.c **** 		  else if(Monitor_I2C==0x90)
1191:VS4210/monitor.c **** 								{
1192:VS4210/monitor.c **** 								gHDMI_Index=0;
1193:VS4210/monitor.c **** 							ret= HDMIRX_ReadI2C_Byte(s);	  
1194:VS4210/monitor.c **** 								 Printf("\r\nIT66021,%02x,%02x",(WORD)s,(WORD)ret);
1195:VS4210/monitor.c **** 								} 
1196:VS4210/monitor.c **** 
1197:VS4210/monitor.c **** 		 /*
1198:VS4210/monitor.c **** 		 else if(Monitor_I2C==0x28)
1199:VS4210/monitor.c **** 		 {
1200:VS4210/monitor.c **** 			 addr=Asc2Bin(argv[1]);
1201:VS4210/monitor.c **** 			 addr<<=8;
1202:VS4210/monitor.c **** 			 addr|=Asc2Bin(argv[2]);
1203:VS4210/monitor.c **** 			 
1204:VS4210/monitor.c **** 			 GET_nGT911(addr,&temp,1);		   
1205:VS4210/monitor.c **** 			  Printf("\r\nGT911  Read addr=%02x%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]
1206:VS4210/monitor.c **** 		 
1207:VS4210/monitor.c **** 		 }	
1208:VS4210/monitor.c **** 		 */
1209:VS4210/monitor.c **** 		 else
1210:VS4210/monitor.c **** 			 {
ARM GAS  /tmp/cco5PJAb.s 			page 51


1211:VS4210/monitor.c **** 			 Printf("\r\nI2C addr. error");
1212:VS4210/monitor.c **** 			 }
1213:VS4210/monitor.c **** }
1214:VS4210/monitor.c **** 		}
1215:VS4210/monitor.c **** 	#if 0
1216:VS4210/monitor.c **** 		else if ( !stricmp( (BYTE *)argv[0],(BYTE *) "DTP" ) ) {
1217:VS4210/monitor.c **** 			WORD /*s,e,*/n,i;
1218:VS4210/monitor.c **** 			
1219:VS4210/monitor.c **** 				 addr=Asc2Bin(argv[1]);
1220:VS4210/monitor.c **** 				 addr<<=8;
1221:VS4210/monitor.c **** 				 addr|=Asc2Bin(argv[2]);
1222:VS4210/monitor.c ****  					
1223:VS4210/monitor.c **** 				 n=Asc2Bin(argv[3]);
1224:VS4210/monitor.c **** 
1225:VS4210/monitor.c **** 			 Printf("\r\nDUMP GT911 Reg..");
1226:VS4210/monitor.c **** 
1227:VS4210/monitor.c **** 	
1228:VS4210/monitor.c **** 		for(i=0;i<n;i++)
1229:VS4210/monitor.c **** 		{	
1230:VS4210/monitor.c ****    		GET_nGT911(addr+i,&temp,1);		  	
1231:VS4210/monitor.c **** 		  Printf("\r\nAddr=%04x Data=%02x",(WORD)addr+i,(WORD)temp);
1232:VS4210/monitor.c **** 		}
1233:VS4210/monitor.c **** 	}
1234:VS4210/monitor.c **** 		#endif
1235:VS4210/monitor.c **** 	/*
1236:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "i" ) ) {
1237:VS4210/monitor.c **** 		MonIndex = Asc2Bin( argv[1] );
1238:VS4210/monitor.c **** 		WriteI2C(MonAddress, 0xc5, MonIndex);
1239:VS4210/monitor.c **** 		MonRdata = ReadI2C(MonAddress, 0xc6);
1240:VS4210/monitor.c **** 		Printf("\r\n==> Read %2xh:%2xh", (WORD)MonIndex, (WORD)MonRdata);
1241:VS4210/monitor.c **** 
1242:VS4210/monitor.c **** 	}
1243:VS4210/monitor.c **** 	*/
1244:VS4210/monitor.c **** 	/*
1245:VS4210/monitor.c **** 	//---------------- Dump Register --------------------
1246:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "D" ) ) {
1247:VS4210/monitor.c **** 		Puts("\r\ndump start");
1248:VS4210/monitor.c **** 		MonDumpI2C();
1249:VS4210/monitor.c **** 	}
1250:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "&" ) ) {
1251:VS4210/monitor.c **** 		indirect=0;
1252:VS4210/monitor.c **** 		MonNewDumpI2C();
1253:VS4210/monitor.c **** 	}
1254:VS4210/monitor.c **** 
1255:VS4210/monitor.c **** 	//---------------- Bit Operation --------------------
1256:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "B" ) ) {// Write bits - B AA II bb DD
1257:VS4210/monitor.c **** 		MonWriteBit();
1258:VS4210/monitor.c **** 	}
1259:VS4210/monitor.c **** 	//---------------- AD5110 CMD --------------------
1260:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PSW" ) ) {
1261:VS4210/monitor.c **** 		PSW_Flag=1;
1262:VS4210/monitor.c **** 		Printf("\r\n(PSW_Flag =1)");
1263:VS4210/monitor.c **** 	}
1264:VS4210/monitor.c **** 	//---------------- AD5110 CMD --------------------
1265:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "ADW" ) ) {
1266:VS4210/monitor.c **** 		WriteAD5110(Asc2Bin(argv[1]),Asc2Bin(argv[2]));
1267:VS4210/monitor.c **** 		Printf("\r\nAD5110 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]));
ARM GAS  /tmp/cco5PJAb.s 			page 52


1268:VS4210/monitor.c **** 	}
1269:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "ADR" ) ) {
1270:VS4210/monitor.c **** 		ReadAD5110(Asc2Bin(argv[1]));
1271:VS4210/monitor.c **** 		Printf("\r\nAD5110 Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ReadAD5110(Asc2Bin(arg
1272:VS4210/monitor.c **** 	}
1273:VS4210/monitor.c **** */
1274:VS4210/monitor.c **** 	/*	no indirect addressing in TW8816
1275:VS4210/monitor.c ****     //---------------------------------------------------
1276:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "@" ) ) { // Indirect address bit access
1277:VS4210/monitor.c **** 
1278:VS4210/monitor.c **** 					BYTE Slave, mask, FromBit, ToBit,  MonMask, val,i;
1279:VS4210/monitor.c **** 					// @ 8a iaddr idata index  startbit|endbit  data
1280:VS4210/monitor.c **** 					// 0  1   2    3     4     5                 6
1281:VS4210/monitor.c **** 
1282:VS4210/monitor.c **** 					if( argc<7 ) {
1283:VS4210/monitor.c **** 						Printf("   --> Missing parameter !!!");
1284:VS4210/monitor.c **** 						return;
1285:VS4210/monitor.c **** 					}
1286:VS4210/monitor.c **** 
1287:VS4210/monitor.c **** 					Slave = Asc2Bin(argv[1]);
1288:VS4210/monitor.c **** 					
1289:VS4210/monitor.c **** 					FromBit = Asc2Bin( argv[5] );
1290:VS4210/monitor.c **** 					FromBit  = ( FromBit >> 4) & 0x0f;
1291:VS4210/monitor.c **** 					ToBit = Asc2Bin( argv[5] );
1292:VS4210/monitor.c **** 					ToBit  =  ToBit & 0x0f;
1293:VS4210/monitor.c **** 					MonMask  = Asc2Bin( argv[6] );
1294:VS4210/monitor.c **** 
1295:VS4210/monitor.c **** 					if( FromBit<ToBit || FromBit>7 || ToBit>7) {
1296:VS4210/monitor.c **** 						Printf("\r\n   --> Wrong range of bit operation !!!");
1297:VS4210/monitor.c **** 						return;
1298:VS4210/monitor.c **** 					}
1299:VS4210/monitor.c **** 	
1300:VS4210/monitor.c **** 					mask = 0xff; 
1301:VS4210/monitor.c **** 					val=0x7f;
1302:VS4210/monitor.c **** 					for(i=7; i>FromBit; i--) {
1303:VS4210/monitor.c **** 						mask &= val;
1304:VS4210/monitor.c **** 						val = val>>1;
1305:VS4210/monitor.c **** 					}
1306:VS4210/monitor.c **** 
1307:VS4210/monitor.c **** 					val=0xfe;
1308:VS4210/monitor.c **** 					for(i=0; i<ToBit; i++) {
1309:VS4210/monitor.c **** 						mask &= val;
1310:VS4210/monitor.c **** 						val = val<<1;
1311:VS4210/monitor.c **** 					}
1312:VS4210/monitor.c **** 
1313:VS4210/monitor.c **** 					// @ 8a iaddr idata index  startbit|endbit  data
1314:VS4210/monitor.c **** 					// 0  1   2    3     4     5                 6
1315:VS4210/monitor.c **** 					MonIndex = Asc2Bin(argv[2]);
1316:VS4210/monitor.c **** 					MonWdata = Asc2Bin(argv[4]);
1317:VS4210/monitor.c **** 					WriteI2C( Slave, MonIndex, MonWdata);
1318:VS4210/monitor.c **** 
1319:VS4210/monitor.c **** 					MonRdata = ReadI2C(Slave, Asc2Bin( argv[3]));
1320:VS4210/monitor.c **** 					MonWdata = (MonRdata & (~mask)) | (MonMask & mask);
1321:VS4210/monitor.c **** 					MonIndex = Asc2Bin(argv[3]);
1322:VS4210/monitor.c **** 					WriteI2C(Slave, MonIndex, MonWdata);
1323:VS4210/monitor.c **** 
1324:VS4210/monitor.c **** 					MonRdata = ReadI2C(Slave, MonIndex);
ARM GAS  /tmp/cco5PJAb.s 			page 53


1325:VS4210/monitor.c **** 
1326:VS4210/monitor.c **** 					Printf("\r\n<R>%2x[%2x]=%2x", (WORD)Slave, (WORD)MonIndex, (WORD)MonRdata);
1327:VS4210/monitor.c **** 
1328:VS4210/monitor.c **** 	}
1329:VS4210/monitor.c **** 	//------------------------------------------------------------------				
1330:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "!" ) ) //  Indirect address write access
1331:VS4210/monitor.c **** 	{
1332:VS4210/monitor.c **** 					BYTE Slave;
1333:VS4210/monitor.c **** 					// @ 8a iaddr idata index data
1334:VS4210/monitor.c **** 					if( argc<6 ) {
1335:VS4210/monitor.c **** 						Printf("   --> Missing parameter !!!");
1336:VS4210/monitor.c **** 						return;
1337:VS4210/monitor.c **** 					}
1338:VS4210/monitor.c **** 
1339:VS4210/monitor.c **** 					Slave = Asc2Bin(argv[1]);
1340:VS4210/monitor.c **** 
1341:VS4210/monitor.c **** 					MonIndex = Asc2Bin(argv[2]);
1342:VS4210/monitor.c **** 					MonWdata = Asc2Bin(argv[4]);
1343:VS4210/monitor.c **** 					WriteI2C(Slave, MonIndex, MonWdata);
1344:VS4210/monitor.c **** 
1345:VS4210/monitor.c **** 					MonIndex = Asc2Bin(argv[3]);
1346:VS4210/monitor.c **** 					MonWdata = Asc2Bin(argv[5]);
1347:VS4210/monitor.c **** 					WriteI2C(Slave, MonIndex, MonWdata);
1348:VS4210/monitor.c **** 
1349:VS4210/monitor.c **** 					MonRdata = ReadI2C(Slave, MonIndex);
1350:VS4210/monitor.c **** 
1351:VS4210/monitor.c **** 					Printf("\r\n<R>%2x[%2x]=%2x", (WORD)Slave, (WORD)MonIndex, (WORD)MonRdata);
1352:VS4210/monitor.c **** 
1353:VS4210/monitor.c **** 	}
1354:VS4210/monitor.c **** 	*/    
1355:VS4210/monitor.c **** 
1356:VS4210/monitor.c **** 	//---------------- Change I2C -----------------------
1357:VS4210/monitor.c **** 	/*
1358:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0],(BYTE *) "C" ) ) {
1359:VS4210/monitor.c **** 		//Monitor_I2C = Asc2Bin( argv[1] );
1360:VS4210/monitor.c **** 		SetNowMode(); 
1361:VS4210/monitor.c **** 	}
1362:VS4210/monitor.c **** 	
1363:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0],(BYTE *) "PON" ) ) {
1364:VS4210/monitor.c **** 			//Monitor_I2C = Asc2Bin( argv[1] );
1365:VS4210/monitor.c **** 			SetNowMode(); 
1366:VS4210/monitor.c **** 				LCDPowerON();
1367:VS4210/monitor.c **** 		}
1368:VS4210/monitor.c **** 	*/
1369:VS4210/monitor.c **** 
1370:VS4210/monitor.c **** 	//---------------- Help -----------------------------
1371:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0],(BYTE *) "H" ) || !stricmp( (BYTE *)argv[0],(BYTE *) "HELP" ) |
1372:VS4210/monitor.c **** 		MonHelp();
1373:VS4210/monitor.c **** 	}
1374:VS4210/monitor.c **** 	else if( !stricmp( argv[0], (BYTE *)"PWM" ) ) {
1375:VS4210/monitor.c **** 
1376:VS4210/monitor.c **** 		user_pwm_setvalue(Asc2Bin(argv[1])*15);
1377:VS4210/monitor.c **** 
1378:VS4210/monitor.c **** 			Printf("\r\nPWM=%d",(WORD)(Asc2Bin(argv[1])*15));
1379:VS4210/monitor.c **** 	}
1380:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "ALCR" ) ) {
1381:VS4210/monitor.c **** 
ARM GAS  /tmp/cco5PJAb.s 			page 54


1382:VS4210/monitor.c **** 			Printf("\r\nALCR=%04x",(WORD)GET_ALC122(0x02));
1383:VS4210/monitor.c **** 
1384:VS4210/monitor.c **** 		}
1385:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "ALCW" ) ) {
1386:VS4210/monitor.c **** 		WORD val=0;
1387:VS4210/monitor.c **** 		val=Asc2Bin(argv[1]);
1388:VS4210/monitor.c **** 		val<<=8;
1389:VS4210/monitor.c **** 		val|=Asc2Bin(argv[1]);
1390:VS4210/monitor.c **** 	
1391:VS4210/monitor.c **** 		SET_ALC122(0x02,val);
1392:VS4210/monitor.c **** 
1393:VS4210/monitor.c **** 			Printf("\r\nALCR=%04x",(WORD)GET_ALC122(0x02));
1394:VS4210/monitor.c **** 	}
1395:VS4210/monitor.c **** 	/*
1396:VS4210/monitor.c **** 	else if( !stricmp( argv[0], (BYTE *)"tri" ) ) {
1397:VS4210/monitor.c **** 	TriggerFlag=Asc2Bin( argv[1]);
1398:VS4210/monitor.c **** 
1399:VS4210/monitor.c **** 			Printf("\r\nTrigger=%02x",(WORD)TriggerFlag);
1400:VS4210/monitor.c **** 	}
1401:VS4210/monitor.c **** 	*/
1402:VS4210/monitor.c **** else if( !stricmp( argv[0], (BYTE *) "ACCESS" ) ) {
1403:VS4210/monitor.c **** 		//if( argc==2 ) {
1404:VS4210/monitor.c **** 			AccessEnable = Asc2Bin(argv[1]);
1405:VS4210/monitor.c **** 		//}
1406:VS4210/monitor.c **** 		Printf("\r\nVS4210 AUTO ACCESS = %d", (WORD)AccessEnable);
1407:VS4210/monitor.c **** 	}
1408:VS4210/monitor.c **** else if( !stricmp( argv[0], (BYTE *) "Win" ) ) {	//20201214-02
1409:VS4210/monitor.c **** 
1410:VS4210/monitor.c **** 		BYTE ch;
1411:VS4210/monitor.c **** 		ch=Asc2Bin(argv[1]);
1412:VS4210/monitor.c **** 		
1413:VS4210/monitor.c **** 		HS_Select_Win(ch);
1414:VS4210/monitor.c **** 		
1415:VS4210/monitor.c **** 
1416:VS4210/monitor.c **** 		if(ch==1)
1417:VS4210/monitor.c **** 		{
1418:VS4210/monitor.c **** 		Printf("\r\nTP_InputMode = %d", (WORD)TP_InputMode);
1419:VS4210/monitor.c **** 		
1420:VS4210/monitor.c **** 			if(TP_InputMode==5)
1421:VS4210/monitor.c **** 			TP_bt1120_720P_1080P_mode0_w0();
1422:VS4210/monitor.c **** 			else if(TP_InputMode==6)
1423:VS4210/monitor.c **** 				TP_bt1120_1080P_1080P_mode0_w0();
1424:VS4210/monitor.c **** 			else if(TP_InputMode==0)
1425:VS4210/monitor.c **** 				TP_bt1120_NTSC_1080P_mode0_w0();
1426:VS4210/monitor.c **** 			else if(TP_InputMode==1)
1427:VS4210/monitor.c **** 				TP_bt1120_PAL_1080P_mode0_w0();
1428:VS4210/monitor.c **** 							
1429:VS4210/monitor.c **** 		}
1430:VS4210/monitor.c **** }	
1431:VS4210/monitor.c **** 	else if( !stricmp( argv[0], (BYTE *) "TP0" ) ) { //720P
1432:VS4210/monitor.c **** 		TP_bt1120_720P_1080P_mode0_w0();
1433:VS4210/monitor.c **** 	}	
1434:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *)  "TP1" ) ) { //1080P
1435:VS4210/monitor.c **** 		TP_bt1120_1080P_1080P_mode0_w0();
1436:VS4210/monitor.c **** 	}	
1437:VS4210/monitor.c **** 	else if( !stricmp( argv[0], (BYTE *) "TP2" ) ) { //NTSC
1438:VS4210/monitor.c **** 		TP_bt1120_NTSC_1080P_mode0_w0();
ARM GAS  /tmp/cco5PJAb.s 			page 55


1439:VS4210/monitor.c **** 	}	
1440:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "TP3" ) ) { //PAL
1441:VS4210/monitor.c **** 		TP_bt1120_PAL_1080P_mode0_w0();
1442:VS4210/monitor.c **** 	}	
1443:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "HDMI" ) ) { //HDMI
1444:VS4210/monitor.c **** 
1445:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1446:VS4210/monitor.c **** 		
1447:VS4210/monitor.c **** 		SelectInputMode=0;
1448:VS4210/monitor.c **** 		HS_Select_Win(0);
1449:VS4210/monitor.c **** 	}
1450:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "AHD" ) ) { //AHD
1451:VS4210/monitor.c **** 
1452:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1453:VS4210/monitor.c **** 	
1454:VS4210/monitor.c **** 		SelectInputMode=1;
1455:VS4210/monitor.c **** 		HS_Select_Win(1);
1456:VS4210/monitor.c **** 		Printf("\r\nTP_InputMode = %d", (WORD)TP_InputMode);
1457:VS4210/monitor.c **** 		
1458:VS4210/monitor.c **** 			if(TP_InputMode==5)
1459:VS4210/monitor.c **** 			TP_bt1120_720P_1080P_mode0_w0();
1460:VS4210/monitor.c **** 			else if(TP_InputMode==6)
1461:VS4210/monitor.c **** 				TP_bt1120_1080P_1080P_mode0_w0();
1462:VS4210/monitor.c **** 			else if(TP_InputMode==0)
1463:VS4210/monitor.c **** 				TP_bt1120_NTSC_1080P_mode0_w0();
1464:VS4210/monitor.c **** 			else if(TP_InputMode==1)
1465:VS4210/monitor.c **** 				TP_bt1120_PAL_1080P_mode0_w0();
1466:VS4210/monitor.c **** 			
1467:VS4210/monitor.c **** 							
1468:VS4210/monitor.c **** 	}	
1469:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "BS" ) ) { //HDMI input
1470:VS4210/monitor.c **** 		extern tByte bSignal[4] ;
1471:VS4210/monitor.c **** 		Printf("\r\nbSignal[0] = %d", (WORD) bSignal[0]);
1472:VS4210/monitor.c **** 		Printf("\r\nbSignal[1] = %d", (WORD) bSignal[1]);
1473:VS4210/monitor.c **** 		Printf("\r\nbSignal[2] = %d", (WORD) bSignal[2]);
1474:VS4210/monitor.c **** 		Printf("\r\nbSignal[3] = %d", (WORD) bSignal[3]);
1475:VS4210/monitor.c **** 
1476:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1477:VS4210/monitor.c **** 							
1478:VS4210/monitor.c **** 	}	
1479:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "SETHDMI" ) ) { //set HDMI embedded sync
1480:VS4210/monitor.c **** 
1481:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1482:VS4210/monitor.c **** 		SET_HDMI_SYNC_PARA();
1483:VS4210/monitor.c **** 
1484:VS4210/monitor.c **** 	}	
1485:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "SETAHD" ) ) { //set AHD embedded sync
1486:VS4210/monitor.c **** 
1487:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1488:VS4210/monitor.c **** 		SET_AHD_SYNC_PARA();
1489:VS4210/monitor.c **** 
1490:VS4210/monitor.c **** 	}	  
1491:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "TPRST" ) ) { //reset TP2824
1492:VS4210/monitor.c **** 
1493:VS4210/monitor.c **** 		Init_TP280x_RegSet();
1494:VS4210/monitor.c **** 
1495:VS4210/monitor.c **** 	}	
ARM GAS  /tmp/cco5PJAb.s 			page 56


1496:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "HDMI6" ) ) { 
1497:VS4210/monitor.c **** 
1498:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1499:VS4210/monitor.c **** 		SET_HDMI_640_480P_PARA();
1500:VS4210/monitor.c **** 
1501:VS4210/monitor.c **** 		}
1502:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "V720" ) ) { 
1503:VS4210/monitor.c **** 
1504:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1505:VS4210/monitor.c **** 		SET_VS4210_720_480_out();
1506:VS4210/monitor.c **** 		
1507:VS4210/monitor.c **** 	}	
1508:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "om" ) ) {    //COC menu
1509:VS4210/monitor.c **** 
1510:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1511:VS4210/monitor.c **** 		TVI_Command=0x0F;
1512:VS4210/monitor.c **** 		presetNum=0;
1513:VS4210/monitor.c **** 		TVI_speed=0;
1514:VS4210/monitor.c **** 		TVI_Chksum=0xC5;
1515:VS4210/monitor.c **** 		ptztxflag=1;
1516:VS4210/monitor.c **** 		
1517:VS4210/monitor.c **** 	}	
1518:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "ou" ) ) {    //COC up
1519:VS4210/monitor.c **** 
1520:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1521:VS4210/monitor.c **** 		TVI_Command=0x06;
1522:VS4210/monitor.c **** 		presetNum=0x1F;
1523:VS4210/monitor.c **** 		TVI_speed=0;
1524:VS4210/monitor.c **** 		TVI_Chksum=0xDB;
1525:VS4210/monitor.c **** 		ptztxflag=1;
1526:VS4210/monitor.c **** 		
1527:VS4210/monitor.c **** 	}	
1528:VS4210/monitor.c **** 	else if( !stricmp( argv[0],(BYTE *) "od" ) ) {    //COC down
1529:VS4210/monitor.c **** 
1530:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1531:VS4210/monitor.c **** 		TVI_Command=0x07;
1532:VS4210/monitor.c **** 		presetNum=0x1F;
1533:VS4210/monitor.c **** 		TVI_speed=0;
1534:VS4210/monitor.c **** 		TVI_Chksum=0xDC;
1535:VS4210/monitor.c **** 		ptztxflag=1;
1536:VS4210/monitor.c **** 
1537:VS4210/monitor.c **** 	}	else if( !stricmp( argv[0],(BYTE *) "ol" ) ) {    //COC left
1538:VS4210/monitor.c **** 
1539:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1540:VS4210/monitor.c **** 		TVI_Command=0x09;
1541:VS4210/monitor.c **** 		presetNum=0;
1542:VS4210/monitor.c **** 		TVI_speed=0x1F;
1543:VS4210/monitor.c **** 		TVI_Chksum=0xDE;
1544:VS4210/monitor.c **** 		ptztxflag=1;
1545:VS4210/monitor.c **** 
1546:VS4210/monitor.c **** 	}	else if( !stricmp( argv[0],(BYTE *) "or" ) ) {    //COC right
1547:VS4210/monitor.c **** 
1548:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
1549:VS4210/monitor.c **** 		TVI_Command=0x08;
1550:VS4210/monitor.c **** 		presetNum=0;
1551:VS4210/monitor.c **** 		TVI_speed=0x1F;
1552:VS4210/monitor.c **** 		TVI_Chksum=0xDD;
ARM GAS  /tmp/cco5PJAb.s 			page 57


1553:VS4210/monitor.c **** 		ptztxflag=1;
1554:VS4210/monitor.c **** 		
1555:VS4210/monitor.c **** 	}
1556:VS4210/monitor.c **** 		else if( !stricmp( argv[0],(BYTE *) "op" ) ) {    //COC stop
1557:VS4210/monitor.c **** 			Monitor_flag=_FALSE;
1558:VS4210/monitor.c **** 		TVI_Command=0x14;
1559:VS4210/monitor.c **** 			presetNum=0;
1560:VS4210/monitor.c **** 			TVI_speed=0;
1561:VS4210/monitor.c **** 			TVI_Chksum=0;
1562:VS4210/monitor.c **** 				ptztxflag=1;	
1563:VS4210/monitor.c **** 			}
1564:VS4210/monitor.c **** 	#if 0
1565:VS4210/monitor.c **** 	else if( !stricmp( argv[0], (BYTE *)"sw" ) ) {
1566:VS4210/monitor.c **** 		BYTE ch,win;
1567:VS4210/monitor.c **** 	ch=Asc2Bin( argv[1]);
1568:VS4210/monitor.c **** 	win=Asc2Bin( (BYTE *)argv[2]);
1569:VS4210/monitor.c **** 	VS4210_SwitchChannel(ch,win);
1570:VS4210/monitor.c **** 
1571:VS4210/monitor.c **** 			Printf("\r\n(VS4210_SwitchChannel ch=%02x win=%02x)",(WORD)ch,(WORD)win);
1572:VS4210/monitor.c **** 	}
1573:VS4210/monitor.c **** 	#endif
1574:VS4210/monitor.c **** 	#if 0
1575:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0], (BYTE *)"dpreg" ) ) {	
1576:VS4210/monitor.c **** 		BYTE i;
1577:VS4210/monitor.c **** 		    for( i = 0; i < 4; i++)
1578:VS4210/monitor.c ****     {/*
1579:VS4210/monitor.c ****         count[i] = 0;
1580:VS4210/monitor.c ****         state[i] = VIDEO_UNPLUG;
1581:VS4210/monitor.c ****         std[i] = TVI;
1582:VS4210/monitor.c ****         mode[i] = NoDet;
1583:VS4210/monitor.c **** 		egain[4][4];        
1584:VS4210/monitor.c **** 		*/
1585:VS4210/monitor.c **** Printf("\r\n(ch=%02x count=%02x state=%02x std=%02x mode=%02x)",(WORD)i,(WORD)count[i],(WORD)state[
1586:VS4210/monitor.c **** Printf("(egain[%02x]  [0]=%02x [1]=%02x [2]=%02x [3]=%02x)",(WORD)i,(WORD)egain[i][0],(WORD)egain[i
1587:VS4210/monitor.c ****     }
1588:VS4210/monitor.c **** 	
1589:VS4210/monitor.c **** 		}
1590:VS4210/monitor.c **** #endif	
1591:VS4210/monitor.c **** 		/*
1592:VS4210/monitor.c **** 	//---------------------------------------------------
1593:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "*" ) ) {
1594:VS4210/monitor.c **** 			
1595:VS4210/monitor.c **** 				if( argc==1 ) {
1596:VS4210/monitor.c **** 					Printf("\r\n  * 0 : Program default Loader");
1597:VS4210/monitor.c **** 					Printf("\r\n  * 1 : Program external Loader");
1598:VS4210/monitor.c **** 					Printf("\r\n  * 2 : Execute Loader");
1599:VS4210/monitor.c **** 				}
1600:VS4210/monitor.c **** 				else { 
1601:VS4210/monitor.c **** 					BYTE mode;
1602:VS4210/monitor.c **** 					mode = Asc2Bin(argv[1]);
1603:VS4210/monitor.c **** 					//Loader(mode);
1604:VS4210/monitor.c **** 				}
1605:VS4210/monitor.c **** 	}
1606:VS4210/monitor.c **** 
1607:VS4210/monitor.c **** 	//---------------------------------------------------
1608:VS4210/monitor.c **** #if defined( SUPPORT_PC ) || defined( SUPPORT_DTV )
1609:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PCLK" ) ) {
ARM GAS  /tmp/cco5PJAb.s 			page 58


1610:VS4210/monitor.c **** 		PclkAccess();			
1611:VS4210/monitor.c **** 	}
1612:VS4210/monitor.c **** #endif	
1613:VS4210/monitor.c **** 
1614:VS4210/monitor.c **** 	//---------------------------------------------------
1615:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "POWER" ) ) {
1616:VS4210/monitor.c **** 		//LCDPower();
1617:VS4210/monitor.c **** 	}
1618:VS4210/monitor.c **** 
1619:VS4210/monitor.c **** 	//---------------------------------------------------
1620:VS4210/monitor.c **** #if defined( SUPPORT_PC ) || defined( SUPPORT_DTV )
1621:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "M" ) ) {
1622:VS4210/monitor.c **** 		if( argc==2 ) {
1623:VS4210/monitor.c **** 			if( !stricmp( argv[1], "?" ) ) {
1624:VS4210/monitor.c **** 				BYTE i;
1625:VS4210/monitor.c **** 				Printf("\r\nCurrent Input:%d \r\n", (WORD)InputSelection);
1626:VS4210/monitor.c **** 				for(i=1; struct_InputSelection[i].Id!=0 ; i++)
1627:VS4210/monitor.c **** 						Printf("%s:%d  ",struct_InputSelection[i].Name,(WORD)struct_InputSelection[i].Id );
1628:VS4210/monitor.c **** 				Printf("\r\n");
1629:VS4210/monitor.c **** 			}
1630:VS4210/monitor.c **** 			else
1631:VS4210/monitor.c **** 				ChangeInput(Asc2Bin( argv[1] ));
1632:VS4210/monitor.c **** 		}
1633:VS4210/monitor.c **** 		else
1634:VS4210/monitor.c **** 			ChangeInput(GetNextInputSelection());
1635:VS4210/monitor.c **** 	}	
1636:VS4210/monitor.c **** 	//---------------------------------------------------
1637:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "ACCESS" ) ) {
1638:VS4210/monitor.c **** 		if( argc==2 ) {
1639:VS4210/monitor.c **** 			AccessEnable = Asc2Bin(argv[1]);
1640:VS4210/monitor.c **** 		}
1641:VS4210/monitor.c **** 		Printf("\r\nTW88xx AUTO ACCESS = %d", (WORD)AccessEnable);
1642:VS4210/monitor.c **** 	}
1643:VS4210/monitor.c **** 	#if 0
1644:VS4210/monitor.c **** 	//---------------------------------------------------
1645:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "AUTODETECT" ) ) {
1646:VS4210/monitor.c **** 		if( argc==2 ) {
1647:VS4210/monitor.c **** 			AutoDetect = Asc2Bin(argv[1]);
1648:VS4210/monitor.c **** 		}
1649:VS4210/monitor.c **** 		Printf("\r\nPC Auto Detect = %d", (WORD)AutoDetect);
1650:VS4210/monitor.c **** 	}	
1651:VS4210/monitor.c **** 	#endif
1652:VS4210/monitor.c **** 	//---------------------------------------------------
1653:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PCAUTO" ) ) {
1654:VS4210/monitor.c **** 		Puts("\r\nPC Auto Measurement");
1655:VS4210/monitor.c **** 		AutoAdjust();
1656:VS4210/monitor.c **** 	}	
1657:VS4210/monitor.c **** 	//---------------------------------------------------
1658:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PCCOLOR" ) ) {
1659:VS4210/monitor.c **** 		Puts("\r\nPC Color Auto Measurement");
1660:VS4210/monitor.c **** 		AutoColorAdjust();
1661:VS4210/monitor.c **** 	}	
1662:VS4210/monitor.c **** 	//---------------------------------------------------
1663:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "7" ) ) {
1664:VS4210/monitor.c **** 		Puts("\r\nGet HPN / VPN");
1665:VS4210/monitor.c **** 		GetHpnVpn(DebugLevel);
1666:VS4210/monitor.c **** 	}	
ARM GAS  /tmp/cco5PJAb.s 			page 59


1667:VS4210/monitor.c **** #endif
1668:VS4210/monitor.c **** 	//---------------- Debug Level ---------------------
1669:VS4210/monitor.c **** 	else if ( !stricmp( argv[0], "DEBUG" ) ) {
1670:VS4210/monitor.c **** 		if( argc==2 ) {
1671:VS4210/monitor.c **** 			DebugLevel = Asc2Bin(argv[1]);
1672:VS4210/monitor.c **** 			SaveDebugLevelEE(DebugLevel);
1673:VS4210/monitor.c **** 		}
1674:VS4210/monitor.c **** 		Printf("\r\nDebug Level = %2x", (WORD)DebugLevel);
1675:VS4210/monitor.c **** 	}
1676:VS4210/monitor.c **** 	
1677:VS4210/monitor.c **** 	//---------------- Display on/off -------------------
1678:VS4210/monitor.c **** 	else if ( !stricmp( argv[0], "echo" ) ) {
1679:VS4210/monitor.c **** 		if( !stricmp( argv[1], "off" ) ) {
1680:VS4210/monitor.c **** 			echo = 0;
1681:VS4210/monitor.c **** 			Printf("\r\necho off");
1682:VS4210/monitor.c **** 		}
1683:VS4210/monitor.c **** 		else {
1684:VS4210/monitor.c **** 			echo = 1;
1685:VS4210/monitor.c **** 			Printf("\r\necho on");
1686:VS4210/monitor.c **** 		}
1687:VS4210/monitor.c **** 	}
1688:VS4210/monitor.c **** 	//---------------- RESET/ TEST / POWER_DOWN -------------------
1689:VS4210/monitor.c **** 	else if ( !stricmp( argv[0], "reset" ) ) {
1690:VS4210/monitor.c **** 		if( !stricmp( argv[1], "0" ) ) {
1691:VS4210/monitor.c **** //			P3_4 = 0;
1692:VS4210/monitor.c **** 			Printf("\r\nTW_reset_pin => 0");
1693:VS4210/monitor.c **** 		}
1694:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "1" ) ) {
1695:VS4210/monitor.c **** 	//		P3_4 = 1;
1696:VS4210/monitor.c **** 			Printf("\r\nTW_reset_pin => 1");
1697:VS4210/monitor.c **** 		}
1698:VS4210/monitor.c **** 		else {
1699:VS4210/monitor.c **** 			//Printf("\r\nTW_reset_pin = %d", (WORD)P3_4);
1700:VS4210/monitor.c **** 		}
1701:VS4210/monitor.c **** 	}
1702:VS4210/monitor.c **** 	else if ( !stricmp( argv[0], "test" ) ) {
1703:VS4210/monitor.c **** 		if( !stricmp( argv[1], "0" ) ) {
1704:VS4210/monitor.c **** 			//P0_7 = 0;
1705:VS4210/monitor.c **** 			Printf("\r\nTW_test_pin => 0");
1706:VS4210/monitor.c **** 		}
1707:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "1" ) ) {
1708:VS4210/monitor.c **** 			//P0_7 = 1;
1709:VS4210/monitor.c **** 			Printf("\r\nTW_test_pin => 1");
1710:VS4210/monitor.c **** 		}
1711:VS4210/monitor.c **** 		else {
1712:VS4210/monitor.c **** 		//	Printf("\r\nTW_test_pin = %d", (WORD)P0_7);
1713:VS4210/monitor.c **** 		}
1714:VS4210/monitor.c **** 	}
1715:VS4210/monitor.c **** 	else if ( !stricmp( argv[0], "pdn" ) ) {
1716:VS4210/monitor.c **** 		if( !stricmp( argv[1], "0" ) ) {
1717:VS4210/monitor.c **** 		//	P3_7 = 0;
1718:VS4210/monitor.c **** 			Printf("\r\nTW_PowerDown_pin => 0");
1719:VS4210/monitor.c **** 		}
1720:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "1" ) ) {
1721:VS4210/monitor.c **** 			//P3_7 = 1;
1722:VS4210/monitor.c **** 			Printf("\r\nTW_PowerDown_pin => 1");
1723:VS4210/monitor.c **** 		}
ARM GAS  /tmp/cco5PJAb.s 			page 60


1724:VS4210/monitor.c **** 		else {
1725:VS4210/monitor.c **** 			//Printf("\r\nTW_PowerDown_pin = %d", (WORD)P3_7);
1726:VS4210/monitor.c **** 		}
1727:VS4210/monitor.c **** 	}
1728:VS4210/monitor.c **** 	//---------------- OSD test for parallel -----------------------------------
1729:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "OSD" ) ) {
1730:VS4210/monitor.c **** 		if( !stricmp( argv[1], "logo" ) ) {
1731:VS4210/monitor.c **** //			DisplayLogo();
1732:VS4210/monitor.c **** 		}
1733:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "end" ) ) {
1734:VS4210/monitor.c **** 		  	Puts("\r\nIf you'd like to exit, press any Key....");
1735:VS4210/monitor.c **** 	 		while ( !RS_ready() ){
1736:VS4210/monitor.c **** 				P2 = ReadTW88( 0x95 );
1737:VS4210/monitor.c **** 			}
1738:VS4210/monitor.c **** 		}
1739:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "input" ) ) {
1740:VS4210/monitor.c **** //			DisplayInput();
1741:VS4210/monitor.c **** 		}
1742:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "off" ) ) {
1743:VS4210/monitor.c **** ////			ShowOSDWindowAll(OFF);
1744:VS4210/monitor.c **** 		}
1745:VS4210/monitor.c **** 		//else if( !stricmp( argv[1], "grid" ) ) {
1746:VS4210/monitor.c **** 		//	DisplayGrid();
1747:VS4210/monitor.c **** 		//}
1748:VS4210/monitor.c **** #if 0		
1749:VS4210/monitor.c **** #ifndef BANKING
1750:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "cone" ) ) {
1751:VS4210/monitor.c **** 			DisplayCone();
1752:VS4210/monitor.c **** 			DisplayJapanese();
1753:VS4210/monitor.c **** 		}
1754:VS4210/monitor.c **** #endif		
1755:VS4210/monitor.c **** #endif
1756:VS4210/monitor.c **** 		#ifdef BANKING
1757:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "agrid" ) ) {
1758:VS4210/monitor.c **** 		  	BYTE i, j, k;
1759:VS4210/monitor.c **** 		  	Puts("\r\nIf you'd like to exit, press any Key....");
1760:VS4210/monitor.c **** 			j = 0;
1761:VS4210/monitor.c **** 			k = 0;
1762:VS4210/monitor.c **** 			DisplayMessage();
1763:VS4210/monitor.c **** 			if ( argc == 3 )
1764:VS4210/monitor.c **** 				i = Asc2Bin(argv[2]);
1765:VS4210/monitor.c **** 			else i = 0;
1766:VS4210/monitor.c **** 	 		while ( !RS_ready() ){
1767:VS4210/monitor.c **** 				if ( j < 9 )
1768:VS4210/monitor.c **** 					DisplayGridBank0(j);
1769:VS4210/monitor.c **** 				else
1770:VS4210/monitor.c **** 					DisplayGridBank1(j);
1771:VS4210/monitor.c **** 				if ( i )
1772:VS4210/monitor.c **** 					delay(10*i);
1773:VS4210/monitor.c **** 				if (k==0) {
1774:VS4210/monitor.c **** 					if (j==16) {
1775:VS4210/monitor.c **** 						k = 1;
1776:VS4210/monitor.c **** 						j--;
1777:VS4210/monitor.c **** 					}
1778:VS4210/monitor.c **** 					else j++;
1779:VS4210/monitor.c **** 				}
1780:VS4210/monitor.c **** 				else {
ARM GAS  /tmp/cco5PJAb.s 			page 61


1781:VS4210/monitor.c **** 					if ( j==0 ) {
1782:VS4210/monitor.c **** 						k = 0;
1783:VS4210/monitor.c **** 						j++;
1784:VS4210/monitor.c **** 					}
1785:VS4210/monitor.c **** 					else j--;
1786:VS4210/monitor.c **** 				}
1787:VS4210/monitor.c **** 			}
1788:VS4210/monitor.c **** 		}
1789:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "cgrid" ) ) {
1790:VS4210/monitor.c **** 		  	BYTE i, j, k;
1791:VS4210/monitor.c **** 		  	Puts("\r\nIf you'd like to exit, press any Key....");
1792:VS4210/monitor.c **** 			j = 0;
1793:VS4210/monitor.c **** 			k = 0;
1794:VS4210/monitor.c **** 			DisplayChinese();
1795:VS4210/monitor.c **** 			if ( argc == 3 )
1796:VS4210/monitor.c **** 				i = Asc2Bin(argv[2]);
1797:VS4210/monitor.c **** 			else i = 0;
1798:VS4210/monitor.c **** 	 		while ( !RS_ready() ){
1799:VS4210/monitor.c **** 				if ( j < 9 )
1800:VS4210/monitor.c **** 					DisplayGridBank0(j);
1801:VS4210/monitor.c **** 				else
1802:VS4210/monitor.c **** 					DisplayGridBank1(j);
1803:VS4210/monitor.c **** 				if ( i )
1804:VS4210/monitor.c **** 					delay(10*i);
1805:VS4210/monitor.c **** 				if (k==0) {
1806:VS4210/monitor.c **** 					if (j==16) {
1807:VS4210/monitor.c **** 						k = 1;
1808:VS4210/monitor.c **** 						j--;
1809:VS4210/monitor.c **** 					}
1810:VS4210/monitor.c **** 					else j++;
1811:VS4210/monitor.c **** 				}
1812:VS4210/monitor.c **** 				else {
1813:VS4210/monitor.c **** 					if ( j==0 ) {
1814:VS4210/monitor.c **** 						k = 0;
1815:VS4210/monitor.c **** 						j++;
1816:VS4210/monitor.c **** 					}
1817:VS4210/monitor.c **** 					else j--;
1818:VS4210/monitor.c **** 				}
1819:VS4210/monitor.c **** 			}
1820:VS4210/monitor.c **** 		}
1821:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "jgrid" ) ) {
1822:VS4210/monitor.c **** 		  	BYTE i, j, k;
1823:VS4210/monitor.c **** 		  	Puts("\r\nIf you'd like to exit, press any Key....");
1824:VS4210/monitor.c **** 			j = 0;
1825:VS4210/monitor.c **** 			k = 0;
1826:VS4210/monitor.c **** 			DisplayJapanese();
1827:VS4210/monitor.c **** 			if ( argc == 3 )
1828:VS4210/monitor.c **** 				i = Asc2Bin(argv[2]);
1829:VS4210/monitor.c **** 			else i = 0;
1830:VS4210/monitor.c **** 	 		while ( !RS_ready() ){
1831:VS4210/monitor.c **** 				if ( j < 9 )
1832:VS4210/monitor.c **** 					DisplayGridBank0(j);
1833:VS4210/monitor.c **** 				else
1834:VS4210/monitor.c **** 					DisplayGridBank1(j);
1835:VS4210/monitor.c **** 				if ( i )
1836:VS4210/monitor.c **** 					delay(10*i);
1837:VS4210/monitor.c **** 				if (k==0) {
ARM GAS  /tmp/cco5PJAb.s 			page 62


1838:VS4210/monitor.c **** 					if (j==16) {
1839:VS4210/monitor.c **** 						k = 1;
1840:VS4210/monitor.c **** 						j--;
1841:VS4210/monitor.c **** 					}
1842:VS4210/monitor.c **** 					else j++;
1843:VS4210/monitor.c **** 				}
1844:VS4210/monitor.c **** 				else {
1845:VS4210/monitor.c **** 					if ( j==0 ) {
1846:VS4210/monitor.c **** 						k = 0;
1847:VS4210/monitor.c **** 						j++;
1848:VS4210/monitor.c **** 					}
1849:VS4210/monitor.c **** 					else j--;
1850:VS4210/monitor.c **** 				}
1851:VS4210/monitor.c **** 			}
1852:VS4210/monitor.c **** 		}
1853:VS4210/monitor.c **** 		else if( !stricmp( argv[1], "kgrid" ) ) {
1854:VS4210/monitor.c **** 		  	BYTE i, j, k;
1855:VS4210/monitor.c **** 		  	Puts("\r\nIf you'd like to exit, press any Key....");
1856:VS4210/monitor.c **** 			j = 0;
1857:VS4210/monitor.c **** 			k = 0;
1858:VS4210/monitor.c **** 			DisplayKorean();
1859:VS4210/monitor.c **** 			if ( argc == 3 )
1860:VS4210/monitor.c **** 				i = Asc2Bin(argv[2]);
1861:VS4210/monitor.c **** 			else i = 0;
1862:VS4210/monitor.c **** 	 		while ( !RS_ready() ){
1863:VS4210/monitor.c **** 				if ( j < 9 )
1864:VS4210/monitor.c **** 					DisplayGridBank0(j);
1865:VS4210/monitor.c **** 				else
1866:VS4210/monitor.c **** 					DisplayGridBank1(j);
1867:VS4210/monitor.c **** 				if ( i )
1868:VS4210/monitor.c **** 					delay(10*i);
1869:VS4210/monitor.c **** 				if (k==0) {
1870:VS4210/monitor.c **** 					if (j==16) {
1871:VS4210/monitor.c **** 						k = 1;
1872:VS4210/monitor.c **** 						j--;
1873:VS4210/monitor.c **** 					}
1874:VS4210/monitor.c **** 					else j++;
1875:VS4210/monitor.c **** 				}
1876:VS4210/monitor.c **** 				else {
1877:VS4210/monitor.c **** 					if ( j==0 ) {
1878:VS4210/monitor.c **** 						k = 0;
1879:VS4210/monitor.c **** 						j++;
1880:VS4210/monitor.c **** 					}
1881:VS4210/monitor.c **** 					else j--;
1882:VS4210/monitor.c **** 				}
1883:VS4210/monitor.c **** 			}
1884:VS4210/monitor.c **** 		}
1885:VS4210/monitor.c **** 		#endif
1886:VS4210/monitor.c **** 	}
1887:VS4210/monitor.c **** 	//---------------- TELI ML070I Test function -----------------------------------
1888:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PWM0" ) ) {
1889:VS4210/monitor.c **** 		SET_PWM(_BL_PWM, Asc2Bin(argv[1]));
1890:VS4210/monitor.c **** 		Puts("\r\nSET PWMP1.4");
1891:VS4210/monitor.c **** 	}
1892:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PWM1" ) ) {
1893:VS4210/monitor.c **** 		SET_PWM(_CHG_CURR, Asc2Bin(argv[1]));
1894:VS4210/monitor.c **** 		Puts("\r\nSET PWMP1.5");
ARM GAS  /tmp/cco5PJAb.s 			page 63


1895:VS4210/monitor.c **** 	}
1896:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PWM" ) ) {
1897:VS4210/monitor.c **** 		if(Asc2Bin(argv[1]))
1898:VS4210/monitor.c **** 			{
1899:VS4210/monitor.c **** 			SET_PWM(_RUN_PWM, _RUN_PWM);
1900:VS4210/monitor.c **** 			Puts("\r\nPOEN PWM");
1901:VS4210/monitor.c **** 			}
1902:VS4210/monitor.c **** 		else
1903:VS4210/monitor.c **** 			{
1904:VS4210/monitor.c **** 			SET_PWM(_STOP_PWM, _STOP_PWM);
1905:VS4210/monitor.c **** 			Puts("\r\nSTOP PWM");
1906:VS4210/monitor.c **** 			}
1907:VS4210/monitor.c **** 	}
1908:VS4210/monitor.c **** 	//---------------- serial tx test with some number -----------------------------------
1909:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "TX" ) ) {
1910:VS4210/monitor.c **** 		MonTxDump();
1911:VS4210/monitor.c **** 	}
1912:VS4210/monitor.c **** 	//---------------- OSD FONTtest for parallel -----------------------------------
1913:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "FONT" ) ) {
1914:VS4210/monitor.c **** 		if ( !stricmp( argv[1], "RAM" ) ) {
1915:VS4210/monitor.c **** //			DisplayRAMFont( Asc2Bin(argv[2]) );
1916:VS4210/monitor.c **** 		}
1917:VS4210/monitor.c **** 		else if ( !stricmp( argv[1], "ROM" ) ) {
1918:VS4210/monitor.c **** 		//	DisplayROMFont(Asc2Bin(argv[2]));
1919:VS4210/monitor.c **** 		}
1920:VS4210/monitor.c **** 		else {
1921:VS4210/monitor.c **** 			Puts("\r\n Font ROM # or Font RAM # for testing");
1922:VS4210/monitor.c **** 		}
1923:VS4210/monitor.c **** 	}
1924:VS4210/monitor.c **** 	*/
1925:VS4210/monitor.c **** 	//---------------- Delta RGB Panel Test -------------------------
1926:VS4210/monitor.c **** 	#if 0//def SUPPORT_DELTA_RGB
1927:VS4210/monitor.c **** 
1928:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "delta" ) ) {
1929:VS4210/monitor.c **** 		if( argc==1 )	DeltaRGBPanelInit();
1930:VS4210/monitor.c **** 		else {
1931:VS4210/monitor.c **** 			
1932:VS4210/monitor.c **** 			if( !stricmp( argv[1], "w" ) ) {
1933:VS4210/monitor.c **** 
1934:VS4210/monitor.c **** 				WORD val;
1935:VS4210/monitor.c **** 				val= Asc2Bin(argv[3])<<8 | Asc2Bin(argv[4]);
1936:VS4210/monitor.c **** 				Printf("\r\n SPI Write: Addr:%2x  Data:%4x", (WORD)Asc2Bin(argv[2]), val);
1937:VS4210/monitor.c **** 				WriteSPI(Asc2Bin(argv[2]), val );
1938:VS4210/monitor.c **** 			}
1939:VS4210/monitor.c **** 			else if( !stricmp( argv[1], "r" ) ) {
1940:VS4210/monitor.c **** 				WORD val;
1941:VS4210/monitor.c **** 				val = ReadSPI(Asc2Bin(argv[2]));
1942:VS4210/monitor.c **** 				Printf("\r\n SPI Read: Addr:%2x  Data:%4x", (WORD)Asc2Bin(argv[2]), val);
1943:VS4210/monitor.c **** 			}
1944:VS4210/monitor.c **** 		}
1945:VS4210/monitor.c **** 	}
1946:VS4210/monitor.c **** 	#endif
1947:VS4210/monitor.c **** 	//----------------------------------------------------
1948:VS4210/monitor.c **** 	else {
1949:VS4210/monitor.c **** 		Printf("\r\nInvalid command...");
1950:VS4210/monitor.c **** 	}
1951:VS4210/monitor.c **** 
ARM GAS  /tmp/cco5PJAb.s 			page 64


1952:VS4210/monitor.c **** 
1953:VS4210/monitor.c **** 	Prompt();
1954:VS4210/monitor.c **** 
1955:VS4210/monitor.c **** 
1956:VS4210/monitor.c **** }
1957:VS4210/monitor.c **** #endif
1958:VS4210/monitor.c **** 
1959:VS4210/monitor.c **** 
1960:VS4210/monitor.c **** 
1961:VS4210/monitor.c **** void SET_AHD_SYNC_PARA(void)
1962:VS4210/monitor.c **** {
 1586              		.loc 1 1962 0
 1587              		.cfi_startproc
 1588              		@ args = 0, pretend = 0, frame = 0
 1589              		@ frame_needed = 0, uses_anonymous_args = 0
 1590 0000 08B5     		push	{r3, lr}
 1591              	.LCFI16:
 1592              		.cfi_def_cfa_offset 8
 1593              		.cfi_offset 3, -8
 1594              		.cfi_offset 14, -4
1963:VS4210/monitor.c **** 	Printf("\r\nLoading AHD Embedded Sync para.... ");
 1595              		.loc 1 1963 0
 1596 0002 5448     		ldr	r0, .L137
 1597 0004 FFF7FEFF 		bl	Printf
 1598              	.LVL122:
1964:VS4210/monitor.c **** 	//DUMP VS4210 Reg..
1965:VS4210/monitor.c **** #if 1
1966:VS4210/monitor.c **** 	VXISI2CWrite(0x08,0x40);
 1599              		.loc 1 1966 0
 1600 0008 4021     		movs	r1, #64
 1601 000a 0820     		movs	r0, #8
 1602 000c FFF7FEFF 		bl	VXISI2CWrite
 1603              	.LVL123:
1967:VS4210/monitor.c **** 	
1968:VS4210/monitor.c **** 	VXISI2CWrite(0x0A,0x40);
 1604              		.loc 1 1968 0
 1605 0010 4021     		movs	r1, #64
 1606 0012 0A20     		movs	r0, #10
 1607 0014 FFF7FEFF 		bl	VXISI2CWrite
 1608              	.LVL124:
1969:VS4210/monitor.c **** 	
1970:VS4210/monitor.c **** //	VXISI2CWrite(0x10,0x80);
1971:VS4210/monitor.c **** 	
1972:VS4210/monitor.c **** 	VXISI2CWrite(0x12,0x74);
 1609              		.loc 1 1972 0
 1610 0018 7421     		movs	r1, #116
 1611 001a 1220     		movs	r0, #18
 1612 001c FFF7FEFF 		bl	VXISI2CWrite
 1613              	.LVL125:
1973:VS4210/monitor.c **** 	VXISI2CWrite(0x13,0x80);
 1614              		.loc 1 1973 0
 1615 0020 8021     		movs	r1, #128
 1616 0022 1320     		movs	r0, #19
 1617 0024 FFF7FEFF 		bl	VXISI2CWrite
 1618              	.LVL126:
1974:VS4210/monitor.c **** 	VXISI2CWrite(0x14,0x38);
 1619              		.loc 1 1974 0
ARM GAS  /tmp/cco5PJAb.s 			page 65


 1620 0028 3821     		movs	r1, #56
 1621 002a 1420     		movs	r0, #20
 1622 002c FFF7FEFF 		bl	VXISI2CWrite
 1623              	.LVL127:
1975:VS4210/monitor.c **** 	
1976:VS4210/monitor.c **** 	VXISI2CWrite(0x19,0x00);
 1624              		.loc 1 1976 0
 1625 0030 0021     		movs	r1, #0
 1626 0032 1920     		movs	r0, #25
 1627 0034 FFF7FEFF 		bl	VXISI2CWrite
 1628              	.LVL128:
1977:VS4210/monitor.c **** 	VXISI2CWrite(0x1A,0x20);
 1629              		.loc 1 1977 0
 1630 0038 2021     		movs	r1, #32
 1631 003a 1A20     		movs	r0, #26
 1632 003c FFF7FEFF 		bl	VXISI2CWrite
 1633              	.LVL129:
1978:VS4210/monitor.c **** 	VXISI2CWrite(0x1B,0x30);
 1634              		.loc 1 1978 0
 1635 0040 3021     		movs	r1, #48
 1636 0042 1B20     		movs	r0, #27
 1637 0044 FFF7FEFF 		bl	VXISI2CWrite
 1638              	.LVL130:
1979:VS4210/monitor.c **** 	
1980:VS4210/monitor.c **** 	VXISI2CWrite(0x1F,0xA4);
 1639              		.loc 1 1980 0
 1640 0048 A421     		movs	r1, #164
 1641 004a 1F20     		movs	r0, #31
 1642 004c FFF7FEFF 		bl	VXISI2CWrite
 1643              	.LVL131:
1981:VS4210/monitor.c **** 	VXISI2CWrite(0x20,0x50);
 1644              		.loc 1 1981 0
 1645 0050 5021     		movs	r1, #80
 1646 0052 2020     		movs	r0, #32
 1647 0054 FFF7FEFF 		bl	VXISI2CWrite
 1648              	.LVL132:
1982:VS4210/monitor.c **** 	VXISI2CWrite(0x21,0xE2);
 1649              		.loc 1 1982 0
 1650 0058 E221     		movs	r1, #226
 1651 005a 2120     		movs	r0, #33
 1652 005c FFF7FEFF 		bl	VXISI2CWrite
 1653              	.LVL133:
1983:VS4210/monitor.c **** 	VXISI2CWrite(0x22,0x87);
 1654              		.loc 1 1983 0
 1655 0060 8721     		movs	r1, #135
 1656 0062 2220     		movs	r0, #34
 1657 0064 FFF7FEFF 		bl	VXISI2CWrite
 1658              	.LVL134:
1984:VS4210/monitor.c **** 	VXISI2CWrite(0x23,0x98);
 1659              		.loc 1 1984 0
 1660 0068 9821     		movs	r1, #152
 1661 006a 2320     		movs	r0, #35
 1662 006c FFF7FEFF 		bl	VXISI2CWrite
 1663              	.LVL135:
1985:VS4210/monitor.c **** 	VXISI2CWrite(0x24,0x80);
 1664              		.loc 1 1985 0
 1665 0070 8021     		movs	r1, #128
ARM GAS  /tmp/cco5PJAb.s 			page 66


 1666 0072 2420     		movs	r0, #36
 1667 0074 FFF7FEFF 		bl	VXISI2CWrite
 1668              	.LVL136:
1986:VS4210/monitor.c **** 	VXISI2CWrite(0x25,0x44);
 1669              		.loc 1 1986 0
 1670 0078 4421     		movs	r1, #68
 1671 007a 2520     		movs	r0, #37
 1672 007c FFF7FEFF 		bl	VXISI2CWrite
 1673              	.LVL137:
1987:VS4210/monitor.c **** 	
1988:VS4210/monitor.c **** 	VXISI2CWrite(0x27,0x38);
 1674              		.loc 1 1988 0
 1675 0080 3821     		movs	r1, #56
 1676 0082 2720     		movs	r0, #39
 1677 0084 FFF7FEFF 		bl	VXISI2CWrite
 1678              	.LVL138:
1989:VS4210/monitor.c **** 	
1990:VS4210/monitor.c **** 	VXISI2CWrite(0x2E,0x47);
 1679              		.loc 1 1990 0
 1680 0088 4721     		movs	r1, #71
 1681 008a 2E20     		movs	r0, #46
 1682 008c FFF7FEFF 		bl	VXISI2CWrite
 1683              	.LVL139:
1991:VS4210/monitor.c **** 	VXISI2CWrite(0x2F,0x80);
 1684              		.loc 1 1991 0
 1685 0090 8021     		movs	r1, #128
 1686 0092 2F20     		movs	r0, #47
 1687 0094 FFF7FEFF 		bl	VXISI2CWrite
 1688              	.LVL140:
1992:VS4210/monitor.c **** 	
1993:VS4210/monitor.c **** 	VXISI2CWrite(0x3A,0x1D);
 1689              		.loc 1 1993 0
 1690 0098 1D21     		movs	r1, #29
 1691 009a 3A20     		movs	r0, #58
 1692 009c FFF7FEFF 		bl	VXISI2CWrite
 1693              	.LVL141:
1994:VS4210/monitor.c **** 	
1995:VS4210/monitor.c **** 	VXISI2CWrite(0x45,0x00);
 1694              		.loc 1 1995 0
 1695 00a0 0021     		movs	r1, #0
 1696 00a2 4520     		movs	r0, #69
 1697 00a4 FFF7FEFF 		bl	VXISI2CWrite
 1698              	.LVL142:
1996:VS4210/monitor.c **** 	
1997:VS4210/monitor.c **** 	VXISI2CWrite(0x58,0x00);
 1699              		.loc 1 1997 0
 1700 00a8 0021     		movs	r1, #0
 1701 00aa 5820     		movs	r0, #88
 1702 00ac FFF7FEFF 		bl	VXISI2CWrite
 1703              	.LVL143:
1998:VS4210/monitor.c **** 	
1999:VS4210/monitor.c **** 	VXISI2CWrite(0x69,0x88);
 1704              		.loc 1 1999 0
 1705 00b0 8821     		movs	r1, #136
 1706 00b2 6920     		movs	r0, #105
 1707 00b4 FFF7FEFF 		bl	VXISI2CWrite
 1708              	.LVL144:
ARM GAS  /tmp/cco5PJAb.s 			page 67


2000:VS4210/monitor.c **** 	
2001:VS4210/monitor.c **** 	VXISI2CWrite(0x74,0x06);
 1709              		.loc 1 2001 0
 1710 00b8 0621     		movs	r1, #6
 1711 00ba 7420     		movs	r0, #116
 1712 00bc FFF7FEFF 		bl	VXISI2CWrite
 1713              	.LVL145:
2002:VS4210/monitor.c **** 
2003:VS4210/monitor.c **** 	VXISI2CWrite(0x80,0x01);
 1714              		.loc 1 2003 0
 1715 00c0 0121     		movs	r1, #1
 1716 00c2 8020     		movs	r0, #128
 1717 00c4 FFF7FEFF 		bl	VXISI2CWrite
 1718              	.LVL146:
2004:VS4210/monitor.c **** 	VXISI2CWrite(0x81,0x15);
 1719              		.loc 1 2004 0
 1720 00c8 1521     		movs	r1, #21
 1721 00ca 8120     		movs	r0, #129
 1722 00cc FFF7FEFF 		bl	VXISI2CWrite
 1723              	.LVL147:
2005:VS4210/monitor.c **** 	
2006:VS4210/monitor.c **** 	VXISI2CWrite(0x83,0x2D);
 1724              		.loc 1 2006 0
 1725 00d0 2D21     		movs	r1, #45
 1726 00d2 8320     		movs	r0, #131
 1727 00d4 FFF7FEFF 		bl	VXISI2CWrite
 1728              	.LVL148:
2007:VS4210/monitor.c **** 	
2008:VS4210/monitor.c **** 	VXISI2CWrite(0x86,0x00);
 1729              		.loc 1 2008 0
 1730 00d8 0021     		movs	r1, #0
 1731 00da 8620     		movs	r0, #134
 1732 00dc FFF7FEFF 		bl	VXISI2CWrite
 1733              	.LVL149:
2009:VS4210/monitor.c **** 	VXISI2CWrite(0x87,0x00);
 1734              		.loc 1 2009 0
 1735 00e0 0021     		movs	r1, #0
 1736 00e2 8720     		movs	r0, #135
 1737 00e4 FFF7FEFF 		bl	VXISI2CWrite
 1738              	.LVL150:
2010:VS4210/monitor.c **** 	VXISI2CWrite(0x88,0x00);
 1739              		.loc 1 2010 0
 1740 00e8 0021     		movs	r1, #0
 1741 00ea 8820     		movs	r0, #136
 1742 00ec FFF7FEFF 		bl	VXISI2CWrite
 1743              	.LVL151:
2011:VS4210/monitor.c **** 	VXISI2CWrite(0x89,0x00);
 1744              		.loc 1 2011 0
 1745 00f0 0021     		movs	r1, #0
 1746 00f2 8920     		movs	r0, #137
 1747 00f4 FFF7FEFF 		bl	VXISI2CWrite
 1748              	.LVL152:
2012:VS4210/monitor.c **** 	
2013:VS4210/monitor.c **** 	VXISI2CWrite(0x8D,0x17);
 1749              		.loc 1 2013 0
 1750 00f8 1721     		movs	r1, #23
 1751 00fa 8D20     		movs	r0, #141
ARM GAS  /tmp/cco5PJAb.s 			page 68


 1752 00fc FFF7FEFF 		bl	VXISI2CWrite
 1753              	.LVL153:
2014:VS4210/monitor.c **** 	
2015:VS4210/monitor.c **** 	VXISI2CWrite(0x9A,0x80);
 1754              		.loc 1 2015 0
 1755 0100 8021     		movs	r1, #128
 1756 0102 9A20     		movs	r0, #154
 1757 0104 FFF7FEFF 		bl	VXISI2CWrite
 1758              	.LVL154:
2016:VS4210/monitor.c **** 	
2017:VS4210/monitor.c **** 	
2018:VS4210/monitor.c **** 	VXISI2CWrite(0xB8,0x80);
 1759              		.loc 1 2018 0
 1760 0108 8021     		movs	r1, #128
 1761 010a B820     		movs	r0, #184
 1762 010c FFF7FEFF 		bl	VXISI2CWrite
 1763              	.LVL155:
2019:VS4210/monitor.c **** 
2020:VS4210/monitor.c **** 	VXISI2CWrite(0xBA,0x01);
 1764              		.loc 1 2020 0
 1765 0110 0121     		movs	r1, #1
 1766 0112 BA20     		movs	r0, #186
 1767 0114 FFF7FEFF 		bl	VXISI2CWrite
 1768              	.LVL156:
2021:VS4210/monitor.c **** 	
2022:VS4210/monitor.c **** 	VXISI2CWrite(0xBE,0x2C);
 1769              		.loc 1 2022 0
 1770 0118 2C21     		movs	r1, #44
 1771 011a BE20     		movs	r0, #190
 1772 011c FFF7FEFF 		bl	VXISI2CWrite
 1773              	.LVL157:
2023:VS4210/monitor.c **** 	
2024:VS4210/monitor.c **** 	VXISI2CWrite(0xD7,0x0F);
 1774              		.loc 1 2024 0
 1775 0120 0F21     		movs	r1, #15
 1776 0122 D720     		movs	r0, #215
 1777 0124 FFF7FEFF 		bl	VXISI2CWrite
 1778              	.LVL158:
2025:VS4210/monitor.c **** 	
2026:VS4210/monitor.c **** 	VXISI2CWrite(0xDE,0xB0);
 1779              		.loc 1 2026 0
 1780 0128 B021     		movs	r1, #176
 1781 012a DE20     		movs	r0, #222
 1782 012c FFF7FEFF 		bl	VXISI2CWrite
 1783              	.LVL159:
2027:VS4210/monitor.c **** 	
2028:VS4210/monitor.c **** 	VXISI2CWrite(0xF0,0x30);
 1784              		.loc 1 2028 0
 1785 0130 3021     		movs	r1, #48
 1786 0132 F020     		movs	r0, #240
 1787 0134 FFF7FEFF 		bl	VXISI2CWrite
 1788              	.LVL160:
2029:VS4210/monitor.c **** 	
2030:VS4210/monitor.c **** 	VXISI2CWrite(0xFD,0x70);
 1789              		.loc 1 2030 0
 1790 0138 7021     		movs	r1, #112
 1791 013a FD20     		movs	r0, #253
ARM GAS  /tmp/cco5PJAb.s 			page 69


 1792 013c FFF7FEFF 		bl	VXISI2CWrite
 1793              	.LVL161:
2031:VS4210/monitor.c **** 	VXISI2CWrite(0xFE,0x18);
 1794              		.loc 1 2031 0
 1795 0140 1821     		movs	r1, #24
 1796 0142 FE20     		movs	r0, #254
 1797 0144 FFF7FEFF 		bl	VXISI2CWrite
 1798              	.LVL162:
2032:VS4210/monitor.c **** 	VXISI2CWrite(0xFF,0x07);
 1799              		.loc 1 2032 0
 1800 0148 0721     		movs	r1, #7
 1801 014a FF20     		movs	r0, #255
 1802 014c FFF7FEFF 		bl	VXISI2CWrite
 1803              	.LVL163:
2033:VS4210/monitor.c **** #else
2034:VS4210/monitor.c **** 	VXISI2CWrite(0x08,0x40);
2035:VS4210/monitor.c **** 	
2036:VS4210/monitor.c **** 	VXISI2CWrite(0x0A,0x40);
2037:VS4210/monitor.c **** 	
2038:VS4210/monitor.c **** //	VXISI2CWrite(0x10,0x80);
2039:VS4210/monitor.c **** 	
2040:VS4210/monitor.c **** 	VXISI2CWrite(0x12,0x74);
2041:VS4210/monitor.c **** 	VXISI2CWrite(0x13,0x80);
2042:VS4210/monitor.c **** 	VXISI2CWrite(0x14,0x38);
2043:VS4210/monitor.c **** 	
2044:VS4210/monitor.c **** 	VXISI2CWrite(0x19,0x00);
2045:VS4210/monitor.c **** 	VXISI2CWrite(0x1A,0x20);
2046:VS4210/monitor.c **** 	VXISI2CWrite(0x1B,0x30);
2047:VS4210/monitor.c **** 	
2048:VS4210/monitor.c **** 	VXISI2CWrite(0x1F,0xA4);
2049:VS4210/monitor.c **** 	VXISI2CWrite(0x20,0x50);
2050:VS4210/monitor.c **** 	VXISI2CWrite(0x21,0xE2);
2051:VS4210/monitor.c **** 	VXISI2CWrite(0x22,0x87);
2052:VS4210/monitor.c **** 	VXISI2CWrite(0x23,0x98);
2053:VS4210/monitor.c **** 	VXISI2CWrite(0x24,0x80);
2054:VS4210/monitor.c **** 	VXISI2CWrite(0x25,0x44);
2055:VS4210/monitor.c **** 	
2056:VS4210/monitor.c **** 	VXISI2CWrite(0x27,0x38);
2057:VS4210/monitor.c **** 	
2058:VS4210/monitor.c **** //	VXISI2CWrite(0x2E,0x47);
2059:VS4210/monitor.c **** //	VXISI2CWrite(0x2F,0x80);
2060:VS4210/monitor.c **** 	
2061:VS4210/monitor.c **** //	VXISI2CWrite(0x3A,0x1D);
2062:VS4210/monitor.c **** 	
2063:VS4210/monitor.c **** //	VXISI2CWrite(0x45,0x00);
2064:VS4210/monitor.c **** 	
2065:VS4210/monitor.c **** //	VXISI2CWrite(0x58,0x00);
2066:VS4210/monitor.c **** 	
2067:VS4210/monitor.c **** //	VXISI2CWrite(0x69,0x88);
2068:VS4210/monitor.c **** 	
2069:VS4210/monitor.c **** 	VXISI2CWrite(0x74,0x06);
2070:VS4210/monitor.c **** 
2071:VS4210/monitor.c **** 	VXISI2CWrite(0x80,0x01);
2072:VS4210/monitor.c **** 	VXISI2CWrite(0x81,0x15);
2073:VS4210/monitor.c **** 	
2074:VS4210/monitor.c **** 	VXISI2CWrite(0x83,0x2D);
2075:VS4210/monitor.c **** 	
ARM GAS  /tmp/cco5PJAb.s 			page 70


2076:VS4210/monitor.c **** //	VXISI2CWrite(0x86,0x00);
2077:VS4210/monitor.c **** //	VXISI2CWrite(0x87,0x00);
2078:VS4210/monitor.c **** //	VXISI2CWrite(0x88,0x00);
2079:VS4210/monitor.c **** //	VXISI2CWrite(0x89,0x00);
2080:VS4210/monitor.c **** 	
2081:VS4210/monitor.c **** 	VXISI2CWrite(0x8D,0x17);
2082:VS4210/monitor.c **** 	
2083:VS4210/monitor.c **** //	VXISI2CWrite(0x9A,0x80);
2084:VS4210/monitor.c **** 	
2085:VS4210/monitor.c **** 	
2086:VS4210/monitor.c **** //	VXISI2CWrite(0xB8,0x80);
2087:VS4210/monitor.c **** 	/*
2088:VS4210/monitor.c **** 	VXISI2CWrite(0xBA,0x01);
2089:VS4210/monitor.c **** 	
2090:VS4210/monitor.c **** 	VXISI2CWrite(0xBE,0x2C);
2091:VS4210/monitor.c **** 	
2092:VS4210/monitor.c **** 	VXISI2CWrite(0xD7,0x0F);
2093:VS4210/monitor.c **** 	
2094:VS4210/monitor.c **** 	VXISI2CWrite(0xDE,0xB0);
2095:VS4210/monitor.c **** 	
2096:VS4210/monitor.c **** 	VXISI2CWrite(0xF0,0x30);
2097:VS4210/monitor.c **** 	
2098:VS4210/monitor.c **** 	VXISI2CWrite(0xFD,0x70);
2099:VS4210/monitor.c **** 	VXISI2CWrite(0xFE,0x18);
2100:VS4210/monitor.c **** 	VXISI2CWrite(0xFF,0x07);
2101:VS4210/monitor.c **** */
2102:VS4210/monitor.c **** 
2103:VS4210/monitor.c **** #endif
2104:VS4210/monitor.c **** }
 1804              		.loc 1 2104 0
 1805 0150 08BD     		pop	{r3, pc}
 1806              	.L138:
 1807 0152 00BF     		.align	2
 1808              	.L137:
 1809 0154 00000000 		.word	.LC19
 1810              		.cfi_endproc
 1811              	.LFE93:
 1813              		.section	.text.SET_HDMI_640_480P_PARA,"ax",%progbits
 1814              		.align	1
 1815              		.global	SET_HDMI_640_480P_PARA
 1816              		.syntax unified
 1817              		.thumb
 1818              		.thumb_func
 1819              		.fpu softvfp
 1821              	SET_HDMI_640_480P_PARA:
 1822              	.LFB94:
2105:VS4210/monitor.c **** 
2106:VS4210/monitor.c **** void SET_HDMI_640_480P_PARA(void)
2107:VS4210/monitor.c **** {
 1823              		.loc 1 2107 0
 1824              		.cfi_startproc
 1825              		@ args = 0, pretend = 0, frame = 0
 1826              		@ frame_needed = 0, uses_anonymous_args = 0
 1827 0000 08B5     		push	{r3, lr}
 1828              	.LCFI17:
 1829              		.cfi_def_cfa_offset 8
 1830              		.cfi_offset 3, -8
ARM GAS  /tmp/cco5PJAb.s 			page 71


 1831              		.cfi_offset 14, -4
2108:VS4210/monitor.c **** 	Printf("\r\nLoading HDMI 640X480P Embedded Sync para.... ");
 1832              		.loc 1 2108 0
 1833 0002 FE48     		ldr	r0, .L141
 1834 0004 FFF7FEFF 		bl	Printf
 1835              	.LVL164:
2109:VS4210/monitor.c **** 	VXISI2CWrite(0x01,0x00);
 1836              		.loc 1 2109 0
 1837 0008 0021     		movs	r1, #0
 1838 000a 0120     		movs	r0, #1
 1839 000c FFF7FEFF 		bl	VXISI2CWrite
 1840              	.LVL165:
2110:VS4210/monitor.c **** 	VXISI2CWrite(0x02,0x00);
 1841              		.loc 1 2110 0
 1842 0010 0021     		movs	r1, #0
 1843 0012 0220     		movs	r0, #2
 1844 0014 FFF7FEFF 		bl	VXISI2CWrite
 1845              	.LVL166:
2111:VS4210/monitor.c **** 	VXISI2CWrite(0x03,0x75);
 1846              		.loc 1 2111 0
 1847 0018 7521     		movs	r1, #117
 1848 001a 0320     		movs	r0, #3
 1849 001c FFF7FEFF 		bl	VXISI2CWrite
 1850              	.LVL167:
2112:VS4210/monitor.c **** 	VXISI2CWrite(0x04,0x18);
 1851              		.loc 1 2112 0
 1852 0020 1821     		movs	r1, #24
 1853 0022 0420     		movs	r0, #4
 1854 0024 FFF7FEFF 		bl	VXISI2CWrite
 1855              	.LVL168:
2113:VS4210/monitor.c **** 	VXISI2CWrite(0x05,0x80);
 1856              		.loc 1 2113 0
 1857 0028 8021     		movs	r1, #128
 1858 002a 0520     		movs	r0, #5
 1859 002c FFF7FEFF 		bl	VXISI2CWrite
 1860              	.LVL169:
2114:VS4210/monitor.c **** 	VXISI2CWrite(0x06,0x20);
 1861              		.loc 1 2114 0
 1862 0030 2021     		movs	r1, #32
 1863 0032 0620     		movs	r0, #6
 1864 0034 FFF7FEFF 		bl	VXISI2CWrite
 1865              	.LVL170:
2115:VS4210/monitor.c **** 	VXISI2CWrite(0x07,0x08);
 1866              		.loc 1 2115 0
 1867 0038 0821     		movs	r1, #8
 1868 003a 0720     		movs	r0, #7
 1869 003c FFF7FEFF 		bl	VXISI2CWrite
 1870              	.LVL171:
2116:VS4210/monitor.c **** 	VXISI2CWrite(0x08,0x40);
 1871              		.loc 1 2116 0
 1872 0040 4021     		movs	r1, #64
 1873 0042 0820     		movs	r0, #8
 1874 0044 FFF7FEFF 		bl	VXISI2CWrite
 1875              	.LVL172:
2117:VS4210/monitor.c **** 	VXISI2CWrite(0x09,0x0A);
 1876              		.loc 1 2117 0
 1877 0048 0A21     		movs	r1, #10
ARM GAS  /tmp/cco5PJAb.s 			page 72


 1878 004a 0920     		movs	r0, #9
 1879 004c FFF7FEFF 		bl	VXISI2CWrite
 1880              	.LVL173:
2118:VS4210/monitor.c **** 	VXISI2CWrite(0x0A,0x40);
 1881              		.loc 1 2118 0
 1882 0050 4021     		movs	r1, #64
 1883 0052 0A20     		movs	r0, #10
 1884 0054 FFF7FEFF 		bl	VXISI2CWrite
 1885              	.LVL174:
2119:VS4210/monitor.c **** 	VXISI2CWrite(0x0B,0x03);
 1886              		.loc 1 2119 0
 1887 0058 0321     		movs	r1, #3
 1888 005a 0B20     		movs	r0, #11
 1889 005c FFF7FEFF 		bl	VXISI2CWrite
 1890              	.LVL175:
2120:VS4210/monitor.c **** 	VXISI2CWrite(0x0C,0x00);
 1891              		.loc 1 2120 0
 1892 0060 0021     		movs	r1, #0
 1893 0062 0C20     		movs	r0, #12
 1894 0064 FFF7FEFF 		bl	VXISI2CWrite
 1895              	.LVL176:
2121:VS4210/monitor.c **** 	VXISI2CWrite(0x0D,0x20);
 1896              		.loc 1 2121 0
 1897 0068 2021     		movs	r1, #32
 1898 006a 0D20     		movs	r0, #13
 1899 006c FFF7FEFF 		bl	VXISI2CWrite
 1900              	.LVL177:
2122:VS4210/monitor.c **** 	VXISI2CWrite(0x0E,0x10);
 1901              		.loc 1 2122 0
 1902 0070 1021     		movs	r1, #16
 1903 0072 0E20     		movs	r0, #14
 1904 0074 FFF7FEFF 		bl	VXISI2CWrite
 1905              	.LVL178:
2123:VS4210/monitor.c **** 	VXISI2CWrite(0x0F,0x00);
 1906              		.loc 1 2123 0
 1907 0078 0021     		movs	r1, #0
 1908 007a 0F20     		movs	r0, #15
 1909 007c FFF7FEFF 		bl	VXISI2CWrite
 1910              	.LVL179:
2124:VS4210/monitor.c **** 	VXISI2CWrite(0x10,0x80);
 1911              		.loc 1 2124 0
 1912 0080 8021     		movs	r1, #128
 1913 0082 1020     		movs	r0, #16
 1914 0084 FFF7FEFF 		bl	VXISI2CWrite
 1915              	.LVL180:
2125:VS4210/monitor.c **** 	VXISI2CWrite(0x11,0x82);
 1916              		.loc 1 2125 0
 1917 0088 8221     		movs	r1, #130
 1918 008a 1120     		movs	r0, #17
 1919 008c FFF7FEFF 		bl	VXISI2CWrite
 1920              	.LVL181:
2126:VS4210/monitor.c **** 	VXISI2CWrite(0x12,0x42);
 1921              		.loc 1 2126 0
 1922 0090 4221     		movs	r1, #66
 1923 0092 1220     		movs	r0, #18
 1924 0094 FFF7FEFF 		bl	VXISI2CWrite
 1925              	.LVL182:
ARM GAS  /tmp/cco5PJAb.s 			page 73


2127:VS4210/monitor.c **** 	VXISI2CWrite(0x13,0x81);
 1926              		.loc 1 2127 0
 1927 0098 8121     		movs	r1, #129
 1928 009a 1320     		movs	r0, #19
 1929 009c FFF7FEFF 		bl	VXISI2CWrite
 1930              	.LVL183:
2128:VS4210/monitor.c **** 	VXISI2CWrite(0x14,0xC6);
 1931              		.loc 1 2128 0
 1932 00a0 C621     		movs	r1, #198
 1933 00a2 1420     		movs	r0, #20
 1934 00a4 FFF7FEFF 		bl	VXISI2CWrite
 1935              	.LVL184:
2129:VS4210/monitor.c **** 	VXISI2CWrite(0x15,0x77);
 1936              		.loc 1 2129 0
 1937 00a8 7721     		movs	r1, #119
 1938 00aa 1520     		movs	r0, #21
 1939 00ac FFF7FEFF 		bl	VXISI2CWrite
 1940              	.LVL185:
2130:VS4210/monitor.c **** 	VXISI2CWrite(0x16,0xFE);
 1941              		.loc 1 2130 0
 1942 00b0 FE21     		movs	r1, #254
 1943 00b2 1620     		movs	r0, #22
 1944 00b4 FFF7FEFF 		bl	VXISI2CWrite
 1945              	.LVL186:
2131:VS4210/monitor.c **** 	VXISI2CWrite(0x17,0xFA);
 1946              		.loc 1 2131 0
 1947 00b8 FA21     		movs	r1, #250
 1948 00ba 1720     		movs	r0, #23
 1949 00bc FFF7FEFF 		bl	VXISI2CWrite
 1950              	.LVL187:
2132:VS4210/monitor.c **** 	VXISI2CWrite(0x18,0xC0);
 1951              		.loc 1 2132 0
 1952 00c0 C021     		movs	r1, #192
 1953 00c2 1820     		movs	r0, #24
 1954 00c4 FFF7FEFF 		bl	VXISI2CWrite
 1955              	.LVL188:
2133:VS4210/monitor.c **** 	VXISI2CWrite(0x19,0x00);
 1956              		.loc 1 2133 0
 1957 00c8 0021     		movs	r1, #0
 1958 00ca 1920     		movs	r0, #25
 1959 00cc FFF7FEFF 		bl	VXISI2CWrite
 1960              	.LVL189:
2134:VS4210/monitor.c **** 	VXISI2CWrite(0x1A,0x20);
 1961              		.loc 1 2134 0
 1962 00d0 2021     		movs	r1, #32
 1963 00d2 1A20     		movs	r0, #26
 1964 00d4 FFF7FEFF 		bl	VXISI2CWrite
 1965              	.LVL190:
2135:VS4210/monitor.c **** 	VXISI2CWrite(0x1B,0x30);
 1966              		.loc 1 2135 0
 1967 00d8 3021     		movs	r1, #48
 1968 00da 1B20     		movs	r0, #27
 1969 00dc FFF7FEFF 		bl	VXISI2CWrite
 1970              	.LVL191:
2136:VS4210/monitor.c **** 	VXISI2CWrite(0x1C,0x00);
 1971              		.loc 1 2136 0
 1972 00e0 0021     		movs	r1, #0
ARM GAS  /tmp/cco5PJAb.s 			page 74


 1973 00e2 1C20     		movs	r0, #28
 1974 00e4 FFF7FEFF 		bl	VXISI2CWrite
 1975              	.LVL192:
2137:VS4210/monitor.c **** 	VXISI2CWrite(0x1D,0x00);
 1976              		.loc 1 2137 0
 1977 00e8 0021     		movs	r1, #0
 1978 00ea 1D20     		movs	r0, #29
 1979 00ec FFF7FEFF 		bl	VXISI2CWrite
 1980              	.LVL193:
2138:VS4210/monitor.c **** 	VXISI2CWrite(0x1E,0x20);
 1981              		.loc 1 2138 0
 1982 00f0 2021     		movs	r1, #32
 1983 00f2 1E20     		movs	r0, #30
 1984 00f4 FFF7FEFF 		bl	VXISI2CWrite
 1985              	.LVL194:
2139:VS4210/monitor.c **** 	VXISI2CWrite(0x1F,0x52);
 1986              		.loc 1 2139 0
 1987 00f8 5221     		movs	r1, #82
 1988 00fa 1F20     		movs	r0, #31
 1989 00fc FFF7FEFF 		bl	VXISI2CWrite
 1990              	.LVL195:
2140:VS4210/monitor.c **** 	VXISI2CWrite(0x20,0xA0);
 1991              		.loc 1 2140 0
 1992 0100 A021     		movs	r1, #160
 1993 0102 2020     		movs	r0, #32
 1994 0104 FFF7FEFF 		bl	VXISI2CWrite
 1995              	.LVL196:
2141:VS4210/monitor.c **** 	VXISI2CWrite(0x21,0xE5);
 1996              		.loc 1 2141 0
 1997 0108 E521     		movs	r1, #229
 1998 010a 2120     		movs	r0, #33
 1999 010c FFF7FEFF 		bl	VXISI2CWrite
 2000              	.LVL197:
2142:VS4210/monitor.c **** 	VXISI2CWrite(0x22,0x32);
 2001              		.loc 1 2142 0
 2002 0110 3221     		movs	r1, #50
 2003 0112 2220     		movs	r0, #34
 2004 0114 FFF7FEFF 		bl	VXISI2CWrite
 2005              	.LVL198:
2143:VS4210/monitor.c **** 	VXISI2CWrite(0x23,0x20);
 2006              		.loc 1 2143 0
 2007 0118 2021     		movs	r1, #32
 2008 011a 2320     		movs	r0, #35
 2009 011c FFF7FEFF 		bl	VXISI2CWrite
 2010              	.LVL199:
2144:VS4210/monitor.c **** 	VXISI2CWrite(0x24,0x80);
 2011              		.loc 1 2144 0
 2012 0120 8021     		movs	r1, #128
 2013 0122 2420     		movs	r0, #36
 2014 0124 FFF7FEFF 		bl	VXISI2CWrite
 2015              	.LVL200:
2145:VS4210/monitor.c **** 	VXISI2CWrite(0x25,0x21);
 2016              		.loc 1 2145 0
 2017 0128 2121     		movs	r1, #33
 2018 012a 2520     		movs	r0, #37
 2019 012c FFF7FEFF 		bl	VXISI2CWrite
 2020              	.LVL201:
ARM GAS  /tmp/cco5PJAb.s 			page 75


2146:VS4210/monitor.c **** 	VXISI2CWrite(0x26,0x0D);
 2021              		.loc 1 2146 0
 2022 0130 0D21     		movs	r1, #13
 2023 0132 2620     		movs	r0, #38
 2024 0134 FFF7FEFF 		bl	VXISI2CWrite
 2025              	.LVL202:
2147:VS4210/monitor.c **** 	VXISI2CWrite(0x27,0xE0);
 2026              		.loc 1 2147 0
 2027 0138 E021     		movs	r1, #224
 2028 013a 2720     		movs	r0, #39
 2029 013c FFF7FEFF 		bl	VXISI2CWrite
 2030              	.LVL203:
2148:VS4210/monitor.c **** 	VXISI2CWrite(0x28,0xF0);
 2031              		.loc 1 2148 0
 2032 0140 F021     		movs	r1, #240
 2033 0142 2820     		movs	r0, #40
 2034 0144 FFF7FEFF 		bl	VXISI2CWrite
 2035              	.LVL204:
2149:VS4210/monitor.c **** 	VXISI2CWrite(0x29,0x00);
 2036              		.loc 1 2149 0
 2037 0148 0021     		movs	r1, #0
 2038 014a 2920     		movs	r0, #41
 2039 014c FFF7FEFF 		bl	VXISI2CWrite
 2040              	.LVL205:
2150:VS4210/monitor.c **** 	VXISI2CWrite(0x2A,0x00);
 2041              		.loc 1 2150 0
 2042 0150 0021     		movs	r1, #0
 2043 0152 2A20     		movs	r0, #42
 2044 0154 FFF7FEFF 		bl	VXISI2CWrite
 2045              	.LVL206:
2151:VS4210/monitor.c **** 	VXISI2CWrite(0x2B,0x11);
 2046              		.loc 1 2151 0
 2047 0158 1121     		movs	r1, #17
 2048 015a 2B20     		movs	r0, #43
 2049 015c FFF7FEFF 		bl	VXISI2CWrite
 2050              	.LVL207:
2152:VS4210/monitor.c **** 	VXISI2CWrite(0x2C,0x00);
 2051              		.loc 1 2152 0
 2052 0160 0021     		movs	r1, #0
 2053 0162 2C20     		movs	r0, #44
 2054 0164 FFF7FEFF 		bl	VXISI2CWrite
 2055              	.LVL208:
2153:VS4210/monitor.c **** 	VXISI2CWrite(0x2D,0x00);
 2056              		.loc 1 2153 0
 2057 0168 0021     		movs	r1, #0
 2058 016a 2D20     		movs	r0, #45
 2059 016c FFF7FEFF 		bl	VXISI2CWrite
 2060              	.LVL209:
2154:VS4210/monitor.c **** 	VXISI2CWrite(0x2E,0x12);
 2061              		.loc 1 2154 0
 2062 0170 1221     		movs	r1, #18
 2063 0172 2E20     		movs	r0, #46
 2064 0174 FFF7FEFF 		bl	VXISI2CWrite
 2065              	.LVL210:
2155:VS4210/monitor.c **** 	VXISI2CWrite(0x2F,0x80);
 2066              		.loc 1 2155 0
 2067 0178 8021     		movs	r1, #128
ARM GAS  /tmp/cco5PJAb.s 			page 76


 2068 017a 2F20     		movs	r0, #47
 2069 017c FFF7FEFF 		bl	VXISI2CWrite
 2070              	.LVL211:
2156:VS4210/monitor.c **** 	VXISI2CWrite(0x30,0xE0);
 2071              		.loc 1 2156 0
 2072 0180 E021     		movs	r1, #224
 2073 0182 3020     		movs	r0, #48
 2074 0184 FFF7FEFF 		bl	VXISI2CWrite
 2075              	.LVL212:
2157:VS4210/monitor.c **** 	VXISI2CWrite(0x31,0x80);
 2076              		.loc 1 2157 0
 2077 0188 8021     		movs	r1, #128
 2078 018a 3120     		movs	r0, #49
 2079 018c FFF7FEFF 		bl	VXISI2CWrite
 2080              	.LVL213:
2158:VS4210/monitor.c **** 	VXISI2CWrite(0x32,0x80);
 2081              		.loc 1 2158 0
 2082 0190 8021     		movs	r1, #128
 2083 0192 3220     		movs	r0, #50
 2084 0194 FFF7FEFF 		bl	VXISI2CWrite
 2085              	.LVL214:
2159:VS4210/monitor.c **** 	VXISI2CWrite(0x33,0x80);
 2086              		.loc 1 2159 0
 2087 0198 8021     		movs	r1, #128
 2088 019a 3320     		movs	r0, #51
 2089 019c FFF7FEFF 		bl	VXISI2CWrite
 2090              	.LVL215:
2160:VS4210/monitor.c **** 	VXISI2CWrite(0x34,0xA0);
 2091              		.loc 1 2160 0
 2092 01a0 A021     		movs	r1, #160
 2093 01a2 3420     		movs	r0, #52
 2094 01a4 FFF7FEFF 		bl	VXISI2CWrite
 2095              	.LVL216:
2161:VS4210/monitor.c **** 	VXISI2CWrite(0x35,0x18);
 2096              		.loc 1 2161 0
 2097 01a8 1821     		movs	r1, #24
 2098 01aa 3520     		movs	r0, #53
 2099 01ac FFF7FEFF 		bl	VXISI2CWrite
 2100              	.LVL217:
2162:VS4210/monitor.c **** 	VXISI2CWrite(0x36,0x46);
 2101              		.loc 1 2162 0
 2102 01b0 4621     		movs	r1, #70
 2103 01b2 3620     		movs	r0, #54
 2104 01b4 FFF7FEFF 		bl	VXISI2CWrite
 2105              	.LVL218:
2163:VS4210/monitor.c **** 	VXISI2CWrite(0x37,0x64);
 2106              		.loc 1 2163 0
 2107 01b8 6421     		movs	r1, #100
 2108 01ba 3720     		movs	r0, #55
 2109 01bc FFF7FEFF 		bl	VXISI2CWrite
 2110              	.LVL219:
2164:VS4210/monitor.c **** 	VXISI2CWrite(0x38,0x00);
 2111              		.loc 1 2164 0
 2112 01c0 0021     		movs	r1, #0
 2113 01c2 3820     		movs	r0, #56
 2114 01c4 FFF7FEFF 		bl	VXISI2CWrite
 2115              	.LVL220:
ARM GAS  /tmp/cco5PJAb.s 			page 77


2165:VS4210/monitor.c **** 	VXISI2CWrite(0x39,0xFF);
 2116              		.loc 1 2165 0
 2117 01c8 FF21     		movs	r1, #255
 2118 01ca 3920     		movs	r0, #57
 2119 01cc FFF7FEFF 		bl	VXISI2CWrite
 2120              	.LVL221:
2166:VS4210/monitor.c **** 	VXISI2CWrite(0x3A,0x2C);
 2121              		.loc 1 2166 0
 2122 01d0 2C21     		movs	r1, #44
 2123 01d2 3A20     		movs	r0, #58
 2124 01d4 FFF7FEFF 		bl	VXISI2CWrite
 2125              	.LVL222:
2167:VS4210/monitor.c **** 	VXISI2CWrite(0x3B,0x80);
 2126              		.loc 1 2167 0
 2127 01d8 8021     		movs	r1, #128
 2128 01da 3B20     		movs	r0, #59
 2129 01dc FFF7FEFF 		bl	VXISI2CWrite
 2130              	.LVL223:
2168:VS4210/monitor.c **** 	VXISI2CWrite(0x3C,0x80);
 2131              		.loc 1 2168 0
 2132 01e0 8021     		movs	r1, #128
 2133 01e2 3C20     		movs	r0, #60
 2134 01e4 FFF7FEFF 		bl	VXISI2CWrite
 2135              	.LVL224:
2169:VS4210/monitor.c **** 	VXISI2CWrite(0x3D,0x80);
 2136              		.loc 1 2169 0
 2137 01e8 8021     		movs	r1, #128
 2138 01ea 3D20     		movs	r0, #61
 2139 01ec FFF7FEFF 		bl	VXISI2CWrite
 2140              	.LVL225:
2170:VS4210/monitor.c **** 	VXISI2CWrite(0x3E,0x80);
 2141              		.loc 1 2170 0
 2142 01f0 8021     		movs	r1, #128
 2143 01f2 3E20     		movs	r0, #62
 2144 01f4 FFF7FEFF 		bl	VXISI2CWrite
 2145              	.LVL226:
2171:VS4210/monitor.c **** 	VXISI2CWrite(0x3F,0x80);
 2146              		.loc 1 2171 0
 2147 01f8 8021     		movs	r1, #128
 2148 01fa 3F20     		movs	r0, #63
 2149 01fc FFF7FEFF 		bl	VXISI2CWrite
 2150              	.LVL227:
2172:VS4210/monitor.c **** 	//VXISI2CWrite(0xVXISI2CWrite(0x80
2173:VS4210/monitor.c **** 	VXISI2CWrite(0x41,0x60);
 2151              		.loc 1 2173 0
 2152 0200 6021     		movs	r1, #96
 2153 0202 4120     		movs	r0, #65
 2154 0204 FFF7FEFF 		bl	VXISI2CWrite
 2155              	.LVL228:
2174:VS4210/monitor.c **** 	VXISI2CWrite(0x42,0x5F);
 2156              		.loc 1 2174 0
 2157 0208 5F21     		movs	r1, #95
 2158 020a 4220     		movs	r0, #66
 2159 020c FFF7FEFF 		bl	VXISI2CWrite
 2160              	.LVL229:
2175:VS4210/monitor.c **** 	VXISI2CWrite(0x43,0x37);
 2161              		.loc 1 2175 0
ARM GAS  /tmp/cco5PJAb.s 			page 78


 2162 0210 3721     		movs	r1, #55
 2163 0212 4320     		movs	r0, #67
 2164 0214 FFF7FEFF 		bl	VXISI2CWrite
 2165              	.LVL230:
2176:VS4210/monitor.c **** 	VXISI2CWrite(0x44,0x14);
 2166              		.loc 1 2176 0
 2167 0218 1421     		movs	r1, #20
 2168 021a 4420     		movs	r0, #68
 2169 021c FFF7FEFF 		bl	VXISI2CWrite
 2170              	.LVL231:
2177:VS4210/monitor.c **** 	VXISI2CWrite(0x45,0x05);
 2171              		.loc 1 2177 0
 2172 0220 0521     		movs	r1, #5
 2173 0222 4520     		movs	r0, #69
 2174 0224 FFF7FEFF 		bl	VXISI2CWrite
 2175              	.LVL232:
2178:VS4210/monitor.c **** 	VXISI2CWrite(0x46,0x00);
 2176              		.loc 1 2178 0
 2177 0228 0021     		movs	r1, #0
 2178 022a 4620     		movs	r0, #70
 2179 022c FFF7FEFF 		bl	VXISI2CWrite
 2180              	.LVL233:
2179:VS4210/monitor.c **** 	VXISI2CWrite(0x47,0x00);
 2181              		.loc 1 2179 0
 2182 0230 0021     		movs	r1, #0
 2183 0232 4720     		movs	r0, #71
 2184 0234 FFF7FEFF 		bl	VXISI2CWrite
 2185              	.LVL234:
2180:VS4210/monitor.c **** 	VXISI2CWrite(0x48,0x00);
 2186              		.loc 1 2180 0
 2187 0238 0021     		movs	r1, #0
 2188 023a 4820     		movs	r0, #72
 2189 023c FFF7FEFF 		bl	VXISI2CWrite
 2190              	.LVL235:
2181:VS4210/monitor.c **** 	VXISI2CWrite(0x49,0x00);
 2191              		.loc 1 2181 0
 2192 0240 0021     		movs	r1, #0
 2193 0242 4920     		movs	r0, #73
 2194 0244 FFF7FEFF 		bl	VXISI2CWrite
 2195              	.LVL236:
2182:VS4210/monitor.c **** 	VXISI2CWrite(0x4B,0x20); 
 2196              		.loc 1 2182 0
 2197 0248 2021     		movs	r1, #32
 2198 024a 4B20     		movs	r0, #75
 2199 024c FFF7FEFF 		bl	VXISI2CWrite
 2200              	.LVL237:
2183:VS4210/monitor.c **** 	VXISI2CWrite(0x4C,0x00); 
 2201              		.loc 1 2183 0
 2202 0250 0021     		movs	r1, #0
 2203 0252 4C20     		movs	r0, #76
 2204 0254 FFF7FEFF 		bl	VXISI2CWrite
 2205              	.LVL238:
2184:VS4210/monitor.c **** 	VXISI2CWrite(0x4D,0x00); 
 2206              		.loc 1 2184 0
 2207 0258 0021     		movs	r1, #0
 2208 025a 4D20     		movs	r0, #77
 2209 025c FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/cco5PJAb.s 			page 79


 2210              	.LVL239:
2185:VS4210/monitor.c **** 	VXISI2CWrite(0x4E,0x00); 
 2211              		.loc 1 2185 0
 2212 0260 0021     		movs	r1, #0
 2213 0262 4E20     		movs	r0, #78
 2214 0264 FFF7FEFF 		bl	VXISI2CWrite
 2215              	.LVL240:
2186:VS4210/monitor.c **** 	VXISI2CWrite(0x4F,0x7F); 
 2216              		.loc 1 2186 0
 2217 0268 7F21     		movs	r1, #127
 2218 026a 4F20     		movs	r0, #79
 2219 026c FFF7FEFF 		bl	VXISI2CWrite
 2220              	.LVL241:
2187:VS4210/monitor.c **** 	VXISI2CWrite(0x50,0x20); 
 2221              		.loc 1 2187 0
 2222 0270 2021     		movs	r1, #32
 2223 0272 5020     		movs	r0, #80
 2224 0274 FFF7FEFF 		bl	VXISI2CWrite
 2225              	.LVL242:
2188:VS4210/monitor.c **** 	VXISI2CWrite(0x51,0x00); 
 2226              		.loc 1 2188 0
 2227 0278 0021     		movs	r1, #0
 2228 027a 5120     		movs	r0, #81
 2229 027c FFF7FEFF 		bl	VXISI2CWrite
 2230              	.LVL243:
2189:VS4210/monitor.c **** 	VXISI2CWrite(0x52,0x00); 
 2231              		.loc 1 2189 0
 2232 0280 0021     		movs	r1, #0
 2233 0282 5220     		movs	r0, #82
 2234 0284 FFF7FEFF 		bl	VXISI2CWrite
 2235              	.LVL244:
2190:VS4210/monitor.c **** 	VXISI2CWrite(0x53,0x06); 
 2236              		.loc 1 2190 0
 2237 0288 0621     		movs	r1, #6
 2238 028a 5320     		movs	r0, #83
 2239 028c FFF7FEFF 		bl	VXISI2CWrite
 2240              	.LVL245:
2191:VS4210/monitor.c **** 	VXISI2CWrite(0x54,0x00);
 2241              		.loc 1 2191 0
 2242 0290 0021     		movs	r1, #0
 2243 0292 5420     		movs	r0, #84
 2244 0294 FFF7FEFF 		bl	VXISI2CWrite
 2245              	.LVL246:
2192:VS4210/monitor.c **** 	VXISI2CWrite(0x55,0xB4);
 2246              		.loc 1 2192 0
 2247 0298 B421     		movs	r1, #180
 2248 029a 5520     		movs	r0, #85
 2249 029c FFF7FEFF 		bl	VXISI2CWrite
 2250              	.LVL247:
2193:VS4210/monitor.c **** 	VXISI2CWrite(0x56,0x3D);
 2251              		.loc 1 2193 0
 2252 02a0 3D21     		movs	r1, #61
 2253 02a2 5620     		movs	r0, #86
 2254 02a4 FFF7FEFF 		bl	VXISI2CWrite
 2255              	.LVL248:
2194:VS4210/monitor.c **** 	VXISI2CWrite(0x57,0x04);
 2256              		.loc 1 2194 0
ARM GAS  /tmp/cco5PJAb.s 			page 80


 2257 02a8 0421     		movs	r1, #4
 2258 02aa 5720     		movs	r0, #87
 2259 02ac FFF7FEFF 		bl	VXISI2CWrite
 2260              	.LVL249:
2195:VS4210/monitor.c **** 	VXISI2CWrite(0x58,0x00);
 2261              		.loc 1 2195 0
 2262 02b0 0021     		movs	r1, #0
 2263 02b2 5820     		movs	r0, #88
 2264 02b4 FFF7FEFF 		bl	VXISI2CWrite
 2265              	.LVL250:
2196:VS4210/monitor.c **** 	VXISI2CWrite(0x59,0x08);
 2266              		.loc 1 2196 0
 2267 02b8 0821     		movs	r1, #8
 2268 02ba 5920     		movs	r0, #89
 2269 02bc FFF7FEFF 		bl	VXISI2CWrite
 2270              	.LVL251:
2197:VS4210/monitor.c **** 	VXISI2CWrite(0x5A,0x10);
 2271              		.loc 1 2197 0
 2272 02c0 1021     		movs	r1, #16
 2273 02c2 5A20     		movs	r0, #90
 2274 02c4 FFF7FEFF 		bl	VXISI2CWrite
 2275              	.LVL252:
2198:VS4210/monitor.c **** 	VXISI2CWrite(0x5B,0x00);
 2276              		.loc 1 2198 0
 2277 02c8 0021     		movs	r1, #0
 2278 02ca 5B20     		movs	r0, #91
 2279 02cc FFF7FEFF 		bl	VXISI2CWrite
 2280              	.LVL253:
2199:VS4210/monitor.c **** 	VXISI2CWrite(0x5C,0x68);
 2281              		.loc 1 2199 0
 2282 02d0 6821     		movs	r1, #104
 2283 02d2 5C20     		movs	r0, #92
 2284 02d4 FFF7FEFF 		bl	VXISI2CWrite
 2285              	.LVL254:
2200:VS4210/monitor.c **** 	VXISI2CWrite(0x5D,0x40);
 2286              		.loc 1 2200 0
 2287 02d8 4021     		movs	r1, #64
 2288 02da 5D20     		movs	r0, #93
 2289 02dc FFF7FEFF 		bl	VXISI2CWrite
 2290              	.LVL255:
2201:VS4210/monitor.c **** 	VXISI2CWrite(0x5E,0x0A);
 2291              		.loc 1 2201 0
 2292 02e0 0A21     		movs	r1, #10
 2293 02e2 5E20     		movs	r0, #94
 2294 02e4 FFF7FEFF 		bl	VXISI2CWrite
 2295              	.LVL256:
2202:VS4210/monitor.c **** 	VXISI2CWrite(0x5F,0x00);
 2296              		.loc 1 2202 0
 2297 02e8 0021     		movs	r1, #0
 2298 02ea 5F20     		movs	r0, #95
 2299 02ec FFF7FEFF 		bl	VXISI2CWrite
 2300              	.LVL257:
2203:VS4210/monitor.c **** 	VXISI2CWrite(0x60,0xB4);
 2301              		.loc 1 2203 0
 2302 02f0 B421     		movs	r1, #180
 2303 02f2 6020     		movs	r0, #96
 2304 02f4 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/cco5PJAb.s 			page 81


 2305              	.LVL258:
2204:VS4210/monitor.c **** 	VXISI2CWrite(0x61,0x51);
 2306              		.loc 1 2204 0
 2307 02f8 5121     		movs	r1, #81
 2308 02fa 6120     		movs	r0, #97
 2309 02fc FFF7FEFF 		bl	VXISI2CWrite
 2310              	.LVL259:
2205:VS4210/monitor.c **** 	VXISI2CWrite(0x62,0x33);
 2311              		.loc 1 2205 0
 2312 0300 3321     		movs	r1, #51
 2313 0302 6220     		movs	r0, #98
 2314 0304 FFF7FEFF 		bl	VXISI2CWrite
 2315              	.LVL260:
2206:VS4210/monitor.c **** 	VXISI2CWrite(0x63,0x01);
 2316              		.loc 1 2206 0
 2317 0308 0121     		movs	r1, #1
 2318 030a 6320     		movs	r0, #99
 2319 030c FFF7FEFF 		bl	VXISI2CWrite
 2320              	.LVL261:
2207:VS4210/monitor.c **** 	VXISI2CWrite(0x64,0xFF);
 2321              		.loc 1 2207 0
 2322 0310 FF21     		movs	r1, #255
 2323 0312 6420     		movs	r0, #100
 2324 0314 FFF7FEFF 		bl	VXISI2CWrite
 2325              	.LVL262:
2208:VS4210/monitor.c **** 	VXISI2CWrite(0x65,0x01);
 2326              		.loc 1 2208 0
 2327 0318 0121     		movs	r1, #1
 2328 031a 6520     		movs	r0, #101
 2329 031c FFF7FEFF 		bl	VXISI2CWrite
 2330              	.LVL263:
2209:VS4210/monitor.c **** 	VXISI2CWrite(0x66,0xFF);
 2331              		.loc 1 2209 0
 2332 0320 FF21     		movs	r1, #255
 2333 0322 6620     		movs	r0, #102
 2334 0324 FFF7FEFF 		bl	VXISI2CWrite
 2335              	.LVL264:
2210:VS4210/monitor.c **** 	VXISI2CWrite(0x67,0x89);
 2336              		.loc 1 2210 0
 2337 0328 8921     		movs	r1, #137
 2338 032a 6720     		movs	r0, #103
 2339 032c FFF7FEFF 		bl	VXISI2CWrite
 2340              	.LVL265:
2211:VS4210/monitor.c **** 	VXISI2CWrite(0x68,0xAB);
 2341              		.loc 1 2211 0
 2342 0330 AB21     		movs	r1, #171
 2343 0332 6820     		movs	r0, #104
 2344 0334 FFF7FEFF 		bl	VXISI2CWrite
 2345              	.LVL266:
2212:VS4210/monitor.c **** 	VXISI2CWrite(0x69,0x88);
 2346              		.loc 1 2212 0
 2347 0338 8821     		movs	r1, #136
 2348 033a 6920     		movs	r0, #105
 2349 033c FFF7FEFF 		bl	VXISI2CWrite
 2350              	.LVL267:
2213:VS4210/monitor.c **** 	VXISI2CWrite(0x6A,0x6E);
 2351              		.loc 1 2213 0
ARM GAS  /tmp/cco5PJAb.s 			page 82


 2352 0340 6E21     		movs	r1, #110
 2353 0342 6A20     		movs	r0, #106
 2354 0344 FFF7FEFF 		bl	VXISI2CWrite
 2355              	.LVL268:
2214:VS4210/monitor.c **** 	VXISI2CWrite(0x6B,0x6E);
 2356              		.loc 1 2214 0
 2357 0348 6E21     		movs	r1, #110
 2358 034a 6B20     		movs	r0, #107
 2359 034c FFF7FEFF 		bl	VXISI2CWrite
 2360              	.LVL269:
2215:VS4210/monitor.c **** 	VXISI2CWrite(0x6C,0x6E);
 2361              		.loc 1 2215 0
 2362 0350 6E21     		movs	r1, #110
 2363 0352 6C20     		movs	r0, #108
 2364 0354 FFF7FEFF 		bl	VXISI2CWrite
 2365              	.LVL270:
2216:VS4210/monitor.c **** 	VXISI2CWrite(0x6D,0x00);
 2366              		.loc 1 2216 0
 2367 0358 0021     		movs	r1, #0
 2368 035a 6D20     		movs	r0, #109
 2369 035c FFF7FEFF 		bl	VXISI2CWrite
 2370              	.LVL271:
2217:VS4210/monitor.c **** 	VXISI2CWrite(0x6E,0x00);
 2371              		.loc 1 2217 0
 2372 0360 0021     		movs	r1, #0
 2373 0362 6E20     		movs	r0, #110
 2374 0364 FFF7FEFF 		bl	VXISI2CWrite
 2375              	.LVL272:
2218:VS4210/monitor.c **** 	VXISI2CWrite(0x6F,0x00);
 2376              		.loc 1 2218 0
 2377 0368 0021     		movs	r1, #0
 2378 036a 6F20     		movs	r0, #111
 2379 036c FFF7FEFF 		bl	VXISI2CWrite
 2380              	.LVL273:
2219:VS4210/monitor.c **** 	VXISI2CWrite(0x70,0x00);
 2381              		.loc 1 2219 0
 2382 0370 0021     		movs	r1, #0
 2383 0372 7020     		movs	r0, #112
 2384 0374 FFF7FEFF 		bl	VXISI2CWrite
 2385              	.LVL274:
2220:VS4210/monitor.c **** 	VXISI2CWrite(0x71,0x00);
 2386              		.loc 1 2220 0
 2387 0378 0021     		movs	r1, #0
 2388 037a 7120     		movs	r0, #113
 2389 037c FFF7FEFF 		bl	VXISI2CWrite
 2390              	.LVL275:
2221:VS4210/monitor.c **** 	VXISI2CWrite(0x72,0x00);
 2391              		.loc 1 2221 0
 2392 0380 0021     		movs	r1, #0
 2393 0382 7220     		movs	r0, #114
 2394 0384 FFF7FEFF 		bl	VXISI2CWrite
 2395              	.LVL276:
2222:VS4210/monitor.c **** 	VXISI2CWrite(0x73,0x00);
 2396              		.loc 1 2222 0
 2397 0388 0021     		movs	r1, #0
 2398 038a 7320     		movs	r0, #115
 2399 038c FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/cco5PJAb.s 			page 83


 2400              	.LVL277:
2223:VS4210/monitor.c **** 	VXISI2CWrite(0x74,0x04);
 2401              		.loc 1 2223 0
 2402 0390 0421     		movs	r1, #4
 2403 0392 7420     		movs	r0, #116
 2404 0394 FFF7FEFF 		bl	VXISI2CWrite
 2405              	.LVL278:
2224:VS4210/monitor.c **** 	VXISI2CWrite(0x75,0xFF);
 2406              		.loc 1 2224 0
 2407 0398 FF21     		movs	r1, #255
 2408 039a 7520     		movs	r0, #117
 2409 039c FFF7FEFF 		bl	VXISI2CWrite
 2410              	.LVL279:
2225:VS4210/monitor.c **** 	VXISI2CWrite(0x76,0xFF);
 2411              		.loc 1 2225 0
 2412 03a0 FF21     		movs	r1, #255
 2413 03a2 7620     		movs	r0, #118
 2414 03a4 FFF7FEFF 		bl	VXISI2CWrite
 2415              	.LVL280:
2226:VS4210/monitor.c **** 	VXISI2CWrite(0x77,0xFF);
 2416              		.loc 1 2226 0
 2417 03a8 FF21     		movs	r1, #255
 2418 03aa 7720     		movs	r0, #119
 2419 03ac FFF7FEFF 		bl	VXISI2CWrite
 2420              	.LVL281:
2227:VS4210/monitor.c **** 	VXISI2CWrite(0x78,0xFF);
 2421              		.loc 1 2227 0
 2422 03b0 FF21     		movs	r1, #255
 2423 03b2 7820     		movs	r0, #120
 2424 03b4 FFF7FEFF 		bl	VXISI2CWrite
 2425              	.LVL282:
2228:VS4210/monitor.c **** 	VXISI2CWrite(0x79,0xFF);
 2426              		.loc 1 2228 0
 2427 03b8 FF21     		movs	r1, #255
 2428 03ba 7920     		movs	r0, #121
 2429 03bc FFF7FEFF 		bl	VXISI2CWrite
 2430              	.LVL283:
2229:VS4210/monitor.c **** 	VXISI2CWrite(0x7A,0xFF);
 2431              		.loc 1 2229 0
 2432 03c0 FF21     		movs	r1, #255
 2433 03c2 7A20     		movs	r0, #122
 2434 03c4 FFF7FEFF 		bl	VXISI2CWrite
 2435              	.LVL284:
2230:VS4210/monitor.c **** 	VXISI2CWrite(0x7B,0xFF);
 2436              		.loc 1 2230 0
 2437 03c8 FF21     		movs	r1, #255
 2438 03ca 7B20     		movs	r0, #123
 2439 03cc FFF7FEFF 		bl	VXISI2CWrite
 2440              	.LVL285:
2231:VS4210/monitor.c **** 	VXISI2CWrite(0x7C,0xFF);
 2441              		.loc 1 2231 0
 2442 03d0 FF21     		movs	r1, #255
 2443 03d2 7C20     		movs	r0, #124
 2444 03d4 FFF7FEFF 		bl	VXISI2CWrite
 2445              	.LVL286:
2232:VS4210/monitor.c **** 	VXISI2CWrite(0x7D,0xF0);
 2446              		.loc 1 2232 0
ARM GAS  /tmp/cco5PJAb.s 			page 84


 2447 03d8 F021     		movs	r1, #240
 2448 03da 7D20     		movs	r0, #125
 2449 03dc FFF7FEFF 		bl	VXISI2CWrite
 2450              	.LVL287:
2233:VS4210/monitor.c **** 	VXISI2CWrite(0x7E,0x80);
 2451              		.loc 1 2233 0
 2452 03e0 8021     		movs	r1, #128
 2453 03e2 7E20     		movs	r0, #126
 2454 03e4 FFF7FEFF 		bl	VXISI2CWrite
 2455              	.LVL288:
2234:VS4210/monitor.c **** 	VXISI2CWrite(0x7F,0x00);
 2456              		.loc 1 2234 0
 2457 03e8 0021     		movs	r1, #0
 2458 03ea 7F20     		movs	r0, #127
 2459 03ec FFF7FEFF 		bl	VXISI2CWrite
 2460              	.LVL289:
2235:VS4210/monitor.c **** 	VXISI2CWrite(0x80,0x01);
 2461              		.loc 1 2235 0
 2462 03f0 0121     		movs	r1, #1
 2463 03f2 8020     		movs	r0, #128
 2464 03f4 FFF7FEFF 		bl	VXISI2CWrite
 2465              	.LVL290:
 2466 03f8 02E0     		b	.L142
 2467              	.L143:
 2468 03fa 00BF     		.align	2
 2469              	.L141:
 2470 03fc 00000000 		.word	.LC20
 2471              	.L142:
2236:VS4210/monitor.c **** 	VXISI2CWrite(0x81,0x34);
 2472              		.loc 1 2236 0
 2473 0400 3421     		movs	r1, #52
 2474 0402 8120     		movs	r0, #129
 2475 0404 FFF7FEFF 		bl	VXISI2CWrite
 2476              	.LVL291:
2237:VS4210/monitor.c **** 	VXISI2CWrite(0x82,0x40);
 2477              		.loc 1 2237 0
 2478 0408 4021     		movs	r1, #64
 2479 040a 8220     		movs	r0, #130
 2480 040c FFF7FEFF 		bl	VXISI2CWrite
 2481              	.LVL292:
2238:VS4210/monitor.c **** 	VXISI2CWrite(0x83,0x2D);
 2482              		.loc 1 2238 0
 2483 0410 2D21     		movs	r1, #45
 2484 0412 8320     		movs	r0, #131
 2485 0414 FFF7FEFF 		bl	VXISI2CWrite
 2486              	.LVL293:
2239:VS4210/monitor.c **** 	VXISI2CWrite(0x84,0x59);
 2487              		.loc 1 2239 0
 2488 0418 5921     		movs	r1, #89
 2489 041a 8420     		movs	r0, #132
 2490 041c FFF7FEFF 		bl	VXISI2CWrite
 2491              	.LVL294:
2240:VS4210/monitor.c **** 	VXISI2CWrite(0x85,0xFD);
 2492              		.loc 1 2240 0
 2493 0420 FD21     		movs	r1, #253
 2494 0422 8520     		movs	r0, #133
 2495 0424 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/cco5PJAb.s 			page 85


 2496              	.LVL295:
2241:VS4210/monitor.c **** 	VXISI2CWrite(0x86,0x00);
 2497              		.loc 1 2241 0
 2498 0428 0021     		movs	r1, #0
 2499 042a 8620     		movs	r0, #134
 2500 042c FFF7FEFF 		bl	VXISI2CWrite
 2501              	.LVL296:
2242:VS4210/monitor.c **** 	VXISI2CWrite(0x87,0x00);
 2502              		.loc 1 2242 0
 2503 0430 0021     		movs	r1, #0
 2504 0432 8720     		movs	r0, #135
 2505 0434 FFF7FEFF 		bl	VXISI2CWrite
 2506              	.LVL297:
2243:VS4210/monitor.c **** 	VXISI2CWrite(0x88,0x00);
 2507              		.loc 1 2243 0
 2508 0438 0021     		movs	r1, #0
 2509 043a 8820     		movs	r0, #136
 2510 043c FFF7FEFF 		bl	VXISI2CWrite
 2511              	.LVL298:
2244:VS4210/monitor.c **** 	VXISI2CWrite(0x89,0x00);
 2512              		.loc 1 2244 0
 2513 0440 0021     		movs	r1, #0
 2514 0442 8920     		movs	r0, #137
 2515 0444 FFF7FEFF 		bl	VXISI2CWrite
 2516              	.LVL299:
2245:VS4210/monitor.c **** 	VXISI2CWrite(0x8A,0x00);
 2517              		.loc 1 2245 0
 2518 0448 0021     		movs	r1, #0
 2519 044a 8A20     		movs	r0, #138
 2520 044c FFF7FEFF 		bl	VXISI2CWrite
 2521              	.LVL300:
2246:VS4210/monitor.c **** 	VXISI2CWrite(0x8B,0x7E);
 2522              		.loc 1 2246 0
 2523 0450 7E21     		movs	r1, #126
 2524 0452 8B20     		movs	r0, #139
 2525 0454 FFF7FEFF 		bl	VXISI2CWrite
 2526              	.LVL301:
2247:VS4210/monitor.c **** 	VXISI2CWrite(0x8C,0x03);
 2527              		.loc 1 2247 0
 2528 0458 0321     		movs	r1, #3
 2529 045a 8C20     		movs	r0, #140
 2530 045c FFF7FEFF 		bl	VXISI2CWrite
 2531              	.LVL302:
2248:VS4210/monitor.c **** 	VXISI2CWrite(0x8D,0x17);
 2532              		.loc 1 2248 0
 2533 0460 1721     		movs	r1, #23
 2534 0462 8D20     		movs	r0, #141
 2535 0464 FFF7FEFF 		bl	VXISI2CWrite
 2536              	.LVL303:
2249:VS4210/monitor.c **** 	VXISI2CWrite(0x8E,0x8C);
 2537              		.loc 1 2249 0
 2538 0468 8C21     		movs	r1, #140
 2539 046a 8E20     		movs	r0, #142
 2540 046c FFF7FEFF 		bl	VXISI2CWrite
 2541              	.LVL304:
2250:VS4210/monitor.c **** 	VXISI2CWrite(0x8F,0x00);
 2542              		.loc 1 2250 0
ARM GAS  /tmp/cco5PJAb.s 			page 86


 2543 0470 0021     		movs	r1, #0
 2544 0472 8F20     		movs	r0, #143
 2545 0474 FFF7FEFF 		bl	VXISI2CWrite
 2546              	.LVL305:
2251:VS4210/monitor.c **** 	VXISI2CWrite(0x90,0xCC);
 2547              		.loc 1 2251 0
 2548 0478 CC21     		movs	r1, #204
 2549 047a 9020     		movs	r0, #144
 2550 047c FFF7FEFF 		bl	VXISI2CWrite
 2551              	.LVL306:
2252:VS4210/monitor.c **** 	VXISI2CWrite(0x91,0x41);
 2552              		.loc 1 2252 0
 2553 0480 4121     		movs	r1, #65
 2554 0482 9120     		movs	r0, #145
 2555 0484 FFF7FEFF 		bl	VXISI2CWrite
 2556              	.LVL307:
2253:VS4210/monitor.c **** 	VXISI2CWrite(0x92,0xC4);
 2557              		.loc 1 2253 0
 2558 0488 C421     		movs	r1, #196
 2559 048a 9220     		movs	r0, #146
 2560 048c FFF7FEFF 		bl	VXISI2CWrite
 2561              	.LVL308:
2254:VS4210/monitor.c **** 	VXISI2CWrite(0x93,0x31);
 2562              		.loc 1 2254 0
 2563 0490 3121     		movs	r1, #49
 2564 0492 9320     		movs	r0, #147
 2565 0494 FFF7FEFF 		bl	VXISI2CWrite
 2566              	.LVL309:
2255:VS4210/monitor.c **** 	VXISI2CWrite(0x94,0x88);
 2567              		.loc 1 2255 0
 2568 0498 8821     		movs	r1, #136
 2569 049a 9420     		movs	r0, #148
 2570 049c FFF7FEFF 		bl	VXISI2CWrite
 2571              	.LVL310:
2256:VS4210/monitor.c **** 	VXISI2CWrite(0x95,0x80);
 2572              		.loc 1 2256 0
 2573 04a0 8021     		movs	r1, #128
 2574 04a2 9520     		movs	r0, #149
 2575 04a4 FFF7FEFF 		bl	VXISI2CWrite
 2576              	.LVL311:
2257:VS4210/monitor.c **** 	VXISI2CWrite(0x96,0xF2);
 2577              		.loc 1 2257 0
 2578 04a8 F221     		movs	r1, #242
 2579 04aa 9620     		movs	r0, #150
 2580 04ac FFF7FEFF 		bl	VXISI2CWrite
 2581              	.LVL312:
2258:VS4210/monitor.c **** 	VXISI2CWrite(0x97,0x20);
 2582              		.loc 1 2258 0
 2583 04b0 2021     		movs	r1, #32
 2584 04b2 9720     		movs	r0, #151
 2585 04b4 FFF7FEFF 		bl	VXISI2CWrite
 2586              	.LVL313:
2259:VS4210/monitor.c **** 	VXISI2CWrite(0x98,0x10);
 2587              		.loc 1 2259 0
 2588 04b8 1021     		movs	r1, #16
 2589 04ba 9820     		movs	r0, #152
 2590 04bc FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/cco5PJAb.s 			page 87


 2591              	.LVL314:
2260:VS4210/monitor.c **** 	VXISI2CWrite(0x99,0x90);
 2592              		.loc 1 2260 0
 2593 04c0 9021     		movs	r1, #144
 2594 04c2 9920     		movs	r0, #153
 2595 04c4 FFF7FEFF 		bl	VXISI2CWrite
 2596              	.LVL315:
2261:VS4210/monitor.c **** 	VXISI2CWrite(0x9A,0x80);
 2597              		.loc 1 2261 0
 2598 04c8 8021     		movs	r1, #128
 2599 04ca 9A20     		movs	r0, #154
 2600 04cc FFF7FEFF 		bl	VXISI2CWrite
 2601              	.LVL316:
2262:VS4210/monitor.c **** 	VXISI2CWrite(0x9B,0x04);
 2602              		.loc 1 2262 0
 2603 04d0 0421     		movs	r1, #4
 2604 04d2 9B20     		movs	r0, #155
 2605 04d4 FFF7FEFF 		bl	VXISI2CWrite
 2606              	.LVL317:
2263:VS4210/monitor.c **** 	VXISI2CWrite(0x9C,0x0A);
 2607              		.loc 1 2263 0
 2608 04d8 0A21     		movs	r1, #10
 2609 04da 9C20     		movs	r0, #156
 2610 04dc FFF7FEFF 		bl	VXISI2CWrite
 2611              	.LVL318:
2264:VS4210/monitor.c **** 	VXISI2CWrite(0x9D,0x00);
 2612              		.loc 1 2264 0
 2613 04e0 0021     		movs	r1, #0
 2614 04e2 9D20     		movs	r0, #157
 2615 04e4 FFF7FEFF 		bl	VXISI2CWrite
 2616              	.LVL319:
2265:VS4210/monitor.c **** 	VXISI2CWrite(0x9E,0x04);
 2617              		.loc 1 2265 0
 2618 04e8 0421     		movs	r1, #4
 2619 04ea 9E20     		movs	r0, #158
 2620 04ec FFF7FEFF 		bl	VXISI2CWrite
 2621              	.LVL320:
2266:VS4210/monitor.c **** 	VXISI2CWrite(0x9F,0x65);
 2622              		.loc 1 2266 0
 2623 04f0 6521     		movs	r1, #101
 2624 04f2 9F20     		movs	r0, #159
 2625 04f4 FFF7FEFF 		bl	VXISI2CWrite
 2626              	.LVL321:
2267:VS4210/monitor.c **** 	VXISI2CWrite(0xA0,0x2A);
 2627              		.loc 1 2267 0
 2628 04f8 2A21     		movs	r1, #42
 2629 04fa A020     		movs	r0, #160
 2630 04fc FFF7FEFF 		bl	VXISI2CWrite
 2631              	.LVL322:
2268:VS4210/monitor.c **** 	VXISI2CWrite(0xA1,0xD8);
 2632              		.loc 1 2268 0
 2633 0500 D821     		movs	r1, #216
 2634 0502 A120     		movs	r0, #161
 2635 0504 FFF7FEFF 		bl	VXISI2CWrite
 2636              	.LVL323:
2269:VS4210/monitor.c **** 	VXISI2CWrite(0xA2,0x98);
 2637              		.loc 1 2269 0
ARM GAS  /tmp/cco5PJAb.s 			page 88


 2638 0508 9821     		movs	r1, #152
 2639 050a A220     		movs	r0, #162
 2640 050c FFF7FEFF 		bl	VXISI2CWrite
 2641              	.LVL324:
2270:VS4210/monitor.c **** 	VXISI2CWrite(0xA3,0x87);
 2642              		.loc 1 2270 0
 2643 0510 8721     		movs	r1, #135
 2644 0512 A320     		movs	r0, #163
 2645 0514 FFF7FEFF 		bl	VXISI2CWrite
 2646              	.LVL325:
2271:VS4210/monitor.c **** 	VXISI2CWrite(0xA4,0xD9);
 2647              		.loc 1 2271 0
 2648 0518 D921     		movs	r1, #217
 2649 051a A420     		movs	r0, #164
 2650 051c FFF7FEFF 		bl	VXISI2CWrite
 2651              	.LVL326:
2272:VS4210/monitor.c **** 	VXISI2CWrite(0xA5,0x38);
 2652              		.loc 1 2272 0
 2653 0520 3821     		movs	r1, #56
 2654 0522 A520     		movs	r0, #165
 2655 0524 FFF7FEFF 		bl	VXISI2CWrite
 2656              	.LVL327:
2273:VS4210/monitor.c **** 	VXISI2CWrite(0xA6,0xBA);
 2657              		.loc 1 2273 0
 2658 0528 BA21     		movs	r1, #186
 2659 052a A620     		movs	r0, #166
 2660 052c FFF7FEFF 		bl	VXISI2CWrite
 2661              	.LVL328:
2274:VS4210/monitor.c **** 	VXISI2CWrite(0xA7,0x70);
 2662              		.loc 1 2274 0
 2663 0530 7021     		movs	r1, #112
 2664 0532 A720     		movs	r0, #167
 2665 0534 FFF7FEFF 		bl	VXISI2CWrite
 2666              	.LVL329:
2275:VS4210/monitor.c **** 	VXISI2CWrite(0xA8,0x40);
 2667              		.loc 1 2275 0
 2668 0538 4021     		movs	r1, #64
 2669 053a A820     		movs	r0, #168
 2670 053c FFF7FEFF 		bl	VXISI2CWrite
 2671              	.LVL330:
2276:VS4210/monitor.c **** 	VXISI2CWrite(0xA9,0x1E);
 2672              		.loc 1 2276 0
 2673 0540 1E21     		movs	r1, #30
 2674 0542 A920     		movs	r0, #169
 2675 0544 FFF7FEFF 		bl	VXISI2CWrite
 2676              	.LVL331:
2277:VS4210/monitor.c **** 	VXISI2CWrite(0xAA,0x2E);
 2677              		.loc 1 2277 0
 2678 0548 2E21     		movs	r1, #46
 2679 054a AA20     		movs	r0, #170
 2680 054c FFF7FEFF 		bl	VXISI2CWrite
 2681              	.LVL332:
2278:VS4210/monitor.c **** 	VXISI2CWrite(0xAB,0x00);
 2682              		.loc 1 2278 0
 2683 0550 0021     		movs	r1, #0
 2684 0552 AB20     		movs	r0, #171
 2685 0554 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/cco5PJAb.s 			page 89


 2686              	.LVL333:
2279:VS4210/monitor.c **** 	VXISI2CWrite(0xAC,0x84);
 2687              		.loc 1 2279 0
 2688 0558 8421     		movs	r1, #132
 2689 055a AC20     		movs	r0, #172
 2690 055c FFF7FEFF 		bl	VXISI2CWrite
 2691              	.LVL334:
2280:VS4210/monitor.c **** 	VXISI2CWrite(0xAD,0xF2);
 2692              		.loc 1 2280 0
 2693 0560 F221     		movs	r1, #242
 2694 0562 AD20     		movs	r0, #173
 2695 0564 FFF7FEFF 		bl	VXISI2CWrite
 2696              	.LVL335:
2281:VS4210/monitor.c **** 	VXISI2CWrite(0xAE,0x65);
 2697              		.loc 1 2281 0
 2698 0568 6521     		movs	r1, #101
 2699 056a AE20     		movs	r0, #174
 2700 056c FFF7FEFF 		bl	VXISI2CWrite
 2701              	.LVL336:
2282:VS4210/monitor.c **** 	VXISI2CWrite(0xAF,0x99);
 2702              		.loc 1 2282 0
 2703 0570 9921     		movs	r1, #153
 2704 0572 AF20     		movs	r0, #175
 2705 0574 FFF7FEFF 		bl	VXISI2CWrite
 2706              	.LVL337:
2283:VS4210/monitor.c **** 	VXISI2CWrite(0xB0,0x00);
 2707              		.loc 1 2283 0
 2708 0578 0021     		movs	r1, #0
 2709 057a B020     		movs	r0, #176
 2710 057c FFF7FEFF 		bl	VXISI2CWrite
 2711              	.LVL338:
2284:VS4210/monitor.c **** 	VXISI2CWrite(0xB1,0x00);
 2712              		.loc 1 2284 0
 2713 0580 0021     		movs	r1, #0
 2714 0582 B120     		movs	r0, #177
 2715 0584 FFF7FEFF 		bl	VXISI2CWrite
 2716              	.LVL339:
2285:VS4210/monitor.c **** 	VXISI2CWrite(0xB2,0x00);
 2717              		.loc 1 2285 0
 2718 0588 0021     		movs	r1, #0
 2719 058a B220     		movs	r0, #178
 2720 058c FFF7FEFF 		bl	VXISI2CWrite
 2721              	.LVL340:
2286:VS4210/monitor.c **** 	VXISI2CWrite(0xB3,0x00);
 2722              		.loc 1 2286 0
 2723 0590 0021     		movs	r1, #0
 2724 0592 B320     		movs	r0, #179
 2725 0594 FFF7FEFF 		bl	VXISI2CWrite
 2726              	.LVL341:
2287:VS4210/monitor.c **** 	VXISI2CWrite(0xB4,0x00);
 2727              		.loc 1 2287 0
 2728 0598 0021     		movs	r1, #0
 2729 059a B420     		movs	r0, #180
 2730 059c FFF7FEFF 		bl	VXISI2CWrite
 2731              	.LVL342:
2288:VS4210/monitor.c **** 	VXISI2CWrite(0xB5,0x00);
 2732              		.loc 1 2288 0
ARM GAS  /tmp/cco5PJAb.s 			page 90


 2733 05a0 0021     		movs	r1, #0
 2734 05a2 B520     		movs	r0, #181
 2735 05a4 FFF7FEFF 		bl	VXISI2CWrite
 2736              	.LVL343:
2289:VS4210/monitor.c **** 	VXISI2CWrite(0xB6,0x00);
 2737              		.loc 1 2289 0
 2738 05a8 0021     		movs	r1, #0
 2739 05aa B620     		movs	r0, #182
 2740 05ac FFF7FEFF 		bl	VXISI2CWrite
 2741              	.LVL344:
2290:VS4210/monitor.c **** 	VXISI2CWrite(0xB8,0x80);
 2742              		.loc 1 2290 0
 2743 05b0 8021     		movs	r1, #128
 2744 05b2 B820     		movs	r0, #184
 2745 05b4 FFF7FEFF 		bl	VXISI2CWrite
 2746              	.LVL345:
2291:VS4210/monitor.c **** 	VXISI2CWrite(0xB9,0x00);
 2747              		.loc 1 2291 0
 2748 05b8 0021     		movs	r1, #0
 2749 05ba B920     		movs	r0, #185
 2750 05bc FFF7FEFF 		bl	VXISI2CWrite
 2751              	.LVL346:
2292:VS4210/monitor.c **** 	VXISI2CWrite(0xBA,0x01);
 2752              		.loc 1 2292 0
 2753 05c0 0121     		movs	r1, #1
 2754 05c2 BA20     		movs	r0, #186
 2755 05c4 FFF7FEFF 		bl	VXISI2CWrite
 2756              	.LVL347:
2293:VS4210/monitor.c **** 	VXISI2CWrite(0xBB,0x00);
 2757              		.loc 1 2293 0
 2758 05c8 0021     		movs	r1, #0
 2759 05ca BB20     		movs	r0, #187
 2760 05cc FFF7FEFF 		bl	VXISI2CWrite
 2761              	.LVL348:
2294:VS4210/monitor.c **** 	VXISI2CWrite(0xBC,0x90);
 2762              		.loc 1 2294 0
 2763 05d0 9021     		movs	r1, #144
 2764 05d2 BC20     		movs	r0, #188
 2765 05d4 FFF7FEFF 		bl	VXISI2CWrite
 2766              	.LVL349:
2295:VS4210/monitor.c **** 	VXISI2CWrite(0xBD,0x01);
 2767              		.loc 1 2295 0
 2768 05d8 0121     		movs	r1, #1
 2769 05da BD20     		movs	r0, #189
 2770 05dc FFF7FEFF 		bl	VXISI2CWrite
 2771              	.LVL350:
2296:VS4210/monitor.c **** 	VXISI2CWrite(0xBE,0x2C);
 2772              		.loc 1 2296 0
 2773 05e0 2C21     		movs	r1, #44
 2774 05e2 BE20     		movs	r0, #190
 2775 05e4 FFF7FEFF 		bl	VXISI2CWrite
 2776              	.LVL351:
2297:VS4210/monitor.c **** 	VXISI2CWrite(0xC0,0x00);
 2777              		.loc 1 2297 0
 2778 05e8 0021     		movs	r1, #0
 2779 05ea C020     		movs	r0, #192
 2780 05ec FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/cco5PJAb.s 			page 91


 2781              	.LVL352:
2298:VS4210/monitor.c **** 	VXISI2CWrite(0xC1,0x20);
 2782              		.loc 1 2298 0
 2783 05f0 2021     		movs	r1, #32
 2784 05f2 C120     		movs	r0, #193
 2785 05f4 FFF7FEFF 		bl	VXISI2CWrite
 2786              	.LVL353:
2299:VS4210/monitor.c **** 	VXISI2CWrite(0xC2,0x20);
 2787              		.loc 1 2299 0
 2788 05f8 2021     		movs	r1, #32
 2789 05fa C220     		movs	r0, #194
 2790 05fc FFF7FEFF 		bl	VXISI2CWrite
 2791              	.LVL354:
2300:VS4210/monitor.c **** 	VXISI2CWrite(0xC3,0x20);
 2792              		.loc 1 2300 0
 2793 0600 2021     		movs	r1, #32
 2794 0602 C320     		movs	r0, #195
 2795 0604 FFF7FEFF 		bl	VXISI2CWrite
 2796              	.LVL355:
2301:VS4210/monitor.c **** 	VXISI2CWrite(0xC4,0x20);
 2797              		.loc 1 2301 0
 2798 0608 2021     		movs	r1, #32
 2799 060a C420     		movs	r0, #196
 2800 060c FFF7FEFF 		bl	VXISI2CWrite
 2801              	.LVL356:
2302:VS4210/monitor.c **** 	VXISI2CWrite(0xC5,0x20);
 2802              		.loc 1 2302 0
 2803 0610 2021     		movs	r1, #32
 2804 0612 C520     		movs	r0, #197
 2805 0614 FFF7FEFF 		bl	VXISI2CWrite
 2806              	.LVL357:
2303:VS4210/monitor.c **** 	VXISI2CWrite(0xD0,0xFF);
 2807              		.loc 1 2303 0
 2808 0618 FF21     		movs	r1, #255
 2809 061a D020     		movs	r0, #208
 2810 061c FFF7FEFF 		bl	VXISI2CWrite
 2811              	.LVL358:
2304:VS4210/monitor.c **** 	VXISI2CWrite(0xD1,0x3F);
 2812              		.loc 1 2304 0
 2813 0620 3F21     		movs	r1, #63
 2814 0622 D120     		movs	r0, #209
 2815 0624 FFF7FEFF 		bl	VXISI2CWrite
 2816              	.LVL359:
2305:VS4210/monitor.c **** 	VXISI2CWrite(0xD2,0xC2);
 2817              		.loc 1 2305 0
 2818 0628 C221     		movs	r1, #194
 2819 062a D220     		movs	r0, #210
 2820 062c FFF7FEFF 		bl	VXISI2CWrite
 2821              	.LVL360:
2306:VS4210/monitor.c **** 	VXISI2CWrite(0xD3,0x3F);
 2822              		.loc 1 2306 0
 2823 0630 3F21     		movs	r1, #63
 2824 0632 D320     		movs	r0, #211
 2825 0634 FFF7FEFF 		bl	VXISI2CWrite
 2826              	.LVL361:
2307:VS4210/monitor.c **** 	VXISI2CWrite(0xD4,0x00);
 2827              		.loc 1 2307 0
ARM GAS  /tmp/cco5PJAb.s 			page 92


 2828 0638 0021     		movs	r1, #0
 2829 063a D420     		movs	r0, #212
 2830 063c FFF7FEFF 		bl	VXISI2CWrite
 2831              	.LVL362:
2308:VS4210/monitor.c **** 	VXISI2CWrite(0xD5,0x00);
 2832              		.loc 1 2308 0
 2833 0640 0021     		movs	r1, #0
 2834 0642 D520     		movs	r0, #213
 2835 0644 FFF7FEFF 		bl	VXISI2CWrite
 2836              	.LVL363:
2309:VS4210/monitor.c **** 	VXISI2CWrite(0xD6,0x00);
 2837              		.loc 1 2309 0
 2838 0648 0021     		movs	r1, #0
 2839 064a D620     		movs	r0, #214
 2840 064c FFF7FEFF 		bl	VXISI2CWrite
 2841              	.LVL364:
2310:VS4210/monitor.c **** 	VXISI2CWrite(0xD7,0x10);
 2842              		.loc 1 2310 0
 2843 0650 1021     		movs	r1, #16
 2844 0652 D720     		movs	r0, #215
 2845 0654 FFF7FEFF 		bl	VXISI2CWrite
 2846              	.LVL365:
2311:VS4210/monitor.c **** 	VXISI2CWrite(0xD8,0x00);
 2847              		.loc 1 2311 0
 2848 0658 0021     		movs	r1, #0
 2849 065a D820     		movs	r0, #216
 2850 065c FFF7FEFF 		bl	VXISI2CWrite
 2851              	.LVL366:
2312:VS4210/monitor.c **** 	VXISI2CWrite(0xDC,0x77);
 2852              		.loc 1 2312 0
 2853 0660 7721     		movs	r1, #119
 2854 0662 DC20     		movs	r0, #220
 2855 0664 FFF7FEFF 		bl	VXISI2CWrite
 2856              	.LVL367:
2313:VS4210/monitor.c **** 	VXISI2CWrite(0xDD,0x00);
 2857              		.loc 1 2313 0
 2858 0668 0021     		movs	r1, #0
 2859 066a DD20     		movs	r0, #221
 2860 066c FFF7FEFF 		bl	VXISI2CWrite
 2861              	.LVL368:
2314:VS4210/monitor.c **** 	VXISI2CWrite(0xDE,0xAF);
 2862              		.loc 1 2314 0
 2863 0670 AF21     		movs	r1, #175
 2864 0672 DE20     		movs	r0, #222
 2865 0674 FFF7FEFF 		bl	VXISI2CWrite
 2866              	.LVL369:
2315:VS4210/monitor.c **** 	VXISI2CWrite(0xDF,0xEC);
 2867              		.loc 1 2315 0
 2868 0678 EC21     		movs	r1, #236
 2869 067a DF20     		movs	r0, #223
 2870 067c FFF7FEFF 		bl	VXISI2CWrite
 2871              	.LVL370:
2316:VS4210/monitor.c **** 	VXISI2CWrite(0xE0,0x00);
 2872              		.loc 1 2316 0
 2873 0680 0021     		movs	r1, #0
 2874 0682 E020     		movs	r0, #224
 2875 0684 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/cco5PJAb.s 			page 93


 2876              	.LVL371:
2317:VS4210/monitor.c **** 	VXISI2CWrite(0xE1,0x00);
 2877              		.loc 1 2317 0
 2878 0688 0021     		movs	r1, #0
 2879 068a E120     		movs	r0, #225
 2880 068c FFF7FEFF 		bl	VXISI2CWrite
 2881              	.LVL372:
2318:VS4210/monitor.c **** 	VXISI2CWrite(0xE2,0x00);
 2882              		.loc 1 2318 0
 2883 0690 0021     		movs	r1, #0
 2884 0692 E220     		movs	r0, #226
 2885 0694 FFF7FEFF 		bl	VXISI2CWrite
 2886              	.LVL373:
2319:VS4210/monitor.c **** 	VXISI2CWrite(0xE3,0x12);
 2887              		.loc 1 2319 0
 2888 0698 1221     		movs	r1, #18
 2889 069a E320     		movs	r0, #227
 2890 069c FFF7FEFF 		bl	VXISI2CWrite
 2891              	.LVL374:
2320:VS4210/monitor.c **** 	VXISI2CWrite(0xE4,0xE2);
 2892              		.loc 1 2320 0
 2893 06a0 E221     		movs	r1, #226
 2894 06a2 E420     		movs	r0, #228
 2895 06a4 FFF7FEFF 		bl	VXISI2CWrite
 2896              	.LVL375:
2321:VS4210/monitor.c **** 	VXISI2CWrite(0xE5,0x80);
 2897              		.loc 1 2321 0
 2898 06a8 8021     		movs	r1, #128
 2899 06aa E520     		movs	r0, #229
 2900 06ac FFF7FEFF 		bl	VXISI2CWrite
 2901              	.LVL376:
2322:VS4210/monitor.c **** 	VXISI2CWrite(0xE6,0x00);
 2902              		.loc 1 2322 0
 2903 06b0 0021     		movs	r1, #0
 2904 06b2 E620     		movs	r0, #230
 2905 06b4 FFF7FEFF 		bl	VXISI2CWrite
 2906              	.LVL377:
2323:VS4210/monitor.c **** 	VXISI2CWrite(0xE7,0x00);
 2907              		.loc 1 2323 0
 2908 06b8 0021     		movs	r1, #0
 2909 06ba E720     		movs	r0, #231
 2910 06bc FFF7FEFF 		bl	VXISI2CWrite
 2911              	.LVL378:
2324:VS4210/monitor.c **** 	VXISI2CWrite(0xE8,0x00);
 2912              		.loc 1 2324 0
 2913 06c0 0021     		movs	r1, #0
 2914 06c2 E820     		movs	r0, #232
 2915 06c4 FFF7FEFF 		bl	VXISI2CWrite
 2916              	.LVL379:
2325:VS4210/monitor.c **** 	VXISI2CWrite(0xE9,0x00);
 2917              		.loc 1 2325 0
 2918 06c8 0021     		movs	r1, #0
 2919 06ca E920     		movs	r0, #233
 2920 06cc FFF7FEFF 		bl	VXISI2CWrite
 2921              	.LVL380:
2326:VS4210/monitor.c **** 	VXISI2CWrite(0xEA,0x00);
 2922              		.loc 1 2326 0
ARM GAS  /tmp/cco5PJAb.s 			page 94


 2923 06d0 0021     		movs	r1, #0
 2924 06d2 EA20     		movs	r0, #234
 2925 06d4 FFF7FEFF 		bl	VXISI2CWrite
 2926              	.LVL381:
2327:VS4210/monitor.c **** 	VXISI2CWrite(0xEB,0x00);
 2927              		.loc 1 2327 0
 2928 06d8 0021     		movs	r1, #0
 2929 06da EB20     		movs	r0, #235
 2930 06dc FFF7FEFF 		bl	VXISI2CWrite
 2931              	.LVL382:
2328:VS4210/monitor.c **** 	VXISI2CWrite(0xEC,0x88);
 2932              		.loc 1 2328 0
 2933 06e0 8821     		movs	r1, #136
 2934 06e2 EC20     		movs	r0, #236
 2935 06e4 FFF7FEFF 		bl	VXISI2CWrite
 2936              	.LVL383:
2329:VS4210/monitor.c **** 	VXISI2CWrite(0xED,0x00);
 2937              		.loc 1 2329 0
 2938 06e8 0021     		movs	r1, #0
 2939 06ea ED20     		movs	r0, #237
 2940 06ec FFF7FEFF 		bl	VXISI2CWrite
 2941              	.LVL384:
2330:VS4210/monitor.c **** 	VXISI2CWrite(0xEE,0x00);
 2942              		.loc 1 2330 0
 2943 06f0 0021     		movs	r1, #0
 2944 06f2 EE20     		movs	r0, #238
 2945 06f4 FFF7FEFF 		bl	VXISI2CWrite
 2946              	.LVL385:
2331:VS4210/monitor.c **** 	VXISI2CWrite(0xEF,0x00);
 2947              		.loc 1 2331 0
 2948 06f8 0021     		movs	r1, #0
 2949 06fa EF20     		movs	r0, #239
 2950 06fc FFF7FEFF 		bl	VXISI2CWrite
 2951              	.LVL386:
2332:VS4210/monitor.c **** 	VXISI2CWrite(0xF0,0x30);
 2952              		.loc 1 2332 0
 2953 0700 3021     		movs	r1, #48
 2954 0702 F020     		movs	r0, #240
 2955 0704 FFF7FEFF 		bl	VXISI2CWrite
 2956              	.LVL387:
2333:VS4210/monitor.c **** 	VXISI2CWrite(0xF1,0x43);
 2957              		.loc 1 2333 0
 2958 0708 4321     		movs	r1, #67
 2959 070a F120     		movs	r0, #241
 2960 070c FFF7FEFF 		bl	VXISI2CWrite
 2961              	.LVL388:
2334:VS4210/monitor.c **** 	VXISI2CWrite(0xF2,0x1F);
 2962              		.loc 1 2334 0
 2963 0710 1F21     		movs	r1, #31
 2964 0712 F220     		movs	r0, #242
 2965 0714 FFF7FEFF 		bl	VXISI2CWrite
 2966              	.LVL389:
2335:VS4210/monitor.c **** 	VXISI2CWrite(0xF3,0x1F);
 2967              		.loc 1 2335 0
 2968 0718 1F21     		movs	r1, #31
 2969 071a F320     		movs	r0, #243
 2970 071c FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/cco5PJAb.s 			page 95


 2971              	.LVL390:
2336:VS4210/monitor.c **** 	VXISI2CWrite(0xF4,0x22);
 2972              		.loc 1 2336 0
 2973 0720 2221     		movs	r1, #34
 2974 0722 F420     		movs	r0, #244
 2975 0724 FFF7FEFF 		bl	VXISI2CWrite
 2976              	.LVL391:
2337:VS4210/monitor.c **** 	VXISI2CWrite(0xF5,0x73);
 2977              		.loc 1 2337 0
 2978 0728 7321     		movs	r1, #115
 2979 072a F520     		movs	r0, #245
 2980 072c FFF7FEFF 		bl	VXISI2CWrite
 2981              	.LVL392:
2338:VS4210/monitor.c **** 	VXISI2CWrite(0xF6,0x53);
 2982              		.loc 1 2338 0
 2983 0730 5321     		movs	r1, #83
 2984 0732 F620     		movs	r0, #246
 2985 0734 FFF7FEFF 		bl	VXISI2CWrite
 2986              	.LVL393:
2339:VS4210/monitor.c **** 	VXISI2CWrite(0xF7,0x80);
 2987              		.loc 1 2339 0
 2988 0738 8021     		movs	r1, #128
 2989 073a F720     		movs	r0, #247
 2990 073c FFF7FEFF 		bl	VXISI2CWrite
 2991              	.LVL394:
2340:VS4210/monitor.c **** 	VXISI2CWrite(0xF8,0x01);
 2992              		.loc 1 2340 0
 2993 0740 0121     		movs	r1, #1
 2994 0742 F820     		movs	r0, #248
 2995 0744 FFF7FEFF 		bl	VXISI2CWrite
 2996              	.LVL395:
2341:VS4210/monitor.c **** 	VXISI2CWrite(0xF9,0x01);
 2997              		.loc 1 2341 0
 2998 0748 0121     		movs	r1, #1
 2999 074a F920     		movs	r0, #249
 3000 074c FFF7FEFF 		bl	VXISI2CWrite
 3001              	.LVL396:
2342:VS4210/monitor.c **** 	VXISI2CWrite(0xFA,0x00);
 3002              		.loc 1 2342 0
 3003 0750 0021     		movs	r1, #0
 3004 0752 FA20     		movs	r0, #250
 3005 0754 FFF7FEFF 		bl	VXISI2CWrite
 3006              	.LVL397:
2343:VS4210/monitor.c **** 	VXISI2CWrite(0xFB,0x00);
 3007              		.loc 1 2343 0
 3008 0758 0021     		movs	r1, #0
 3009 075a FB20     		movs	r0, #251
 3010 075c FFF7FEFF 		bl	VXISI2CWrite
 3011              	.LVL398:
2344:VS4210/monitor.c **** 	VXISI2CWrite(0xFC,0x00);
 3012              		.loc 1 2344 0
 3013 0760 0021     		movs	r1, #0
 3014 0762 FC20     		movs	r0, #252
 3015 0764 FFF7FEFF 		bl	VXISI2CWrite
 3016              	.LVL399:
2345:VS4210/monitor.c **** 	VXISI2CWrite(0xFD,0x70);
 3017              		.loc 1 2345 0
ARM GAS  /tmp/cco5PJAb.s 			page 96


 3018 0768 7021     		movs	r1, #112
 3019 076a FD20     		movs	r0, #253
 3020 076c FFF7FEFF 		bl	VXISI2CWrite
 3021              	.LVL400:
2346:VS4210/monitor.c **** 	VXISI2CWrite(0xFE,0x40);
 3022              		.loc 1 2346 0
 3023 0770 4021     		movs	r1, #64
 3024 0772 FE20     		movs	r0, #254
 3025 0774 FFF7FEFF 		bl	VXISI2CWrite
 3026              	.LVL401:
2347:VS4210/monitor.c **** 	VXISI2CWrite(0xFF,0x07);
 3027              		.loc 1 2347 0
 3028 0778 0721     		movs	r1, #7
 3029 077a FF20     		movs	r0, #255
 3030 077c FFF7FEFF 		bl	VXISI2CWrite
 3031              	.LVL402:
2348:VS4210/monitor.c **** 					   
2349:VS4210/monitor.c **** 
2350:VS4210/monitor.c **** }
 3032              		.loc 1 2350 0
 3033 0780 08BD     		pop	{r3, pc}
 3034              		.cfi_endproc
 3035              	.LFE94:
 3037 0782 00BF     		.section	.text.SET_HDMI_SYNC_PARA,"ax",%progbits
 3038              		.align	1
 3039              		.global	SET_HDMI_SYNC_PARA
 3040              		.syntax unified
 3041              		.thumb
 3042              		.thumb_func
 3043              		.fpu softvfp
 3045              	SET_HDMI_SYNC_PARA:
 3046              	.LFB95:
2351:VS4210/monitor.c **** 
2352:VS4210/monitor.c **** void SET_HDMI_SYNC_PARA(void)
2353:VS4210/monitor.c **** {
 3047              		.loc 1 2353 0
 3048              		.cfi_startproc
 3049              		@ args = 0, pretend = 0, frame = 0
 3050              		@ frame_needed = 0, uses_anonymous_args = 0
 3051 0000 08B5     		push	{r3, lr}
 3052              	.LCFI18:
 3053              		.cfi_def_cfa_offset 8
 3054              		.cfi_offset 3, -8
 3055              		.cfi_offset 14, -4
2354:VS4210/monitor.c **** 	Printf("\r\nLoading HDMI Embedded Sync para.... ");
 3056              		.loc 1 2354 0
 3057 0002 0248     		ldr	r0, .L146
 3058 0004 FFF7FEFF 		bl	Printf
 3059              	.LVL403:
2355:VS4210/monitor.c **** 
2356:VS4210/monitor.c **** 	return;
2357:VS4210/monitor.c **** 	//DUMP VS4210 Reg..
2358:VS4210/monitor.c **** #if 0
2359:VS4210/monitor.c **** VXISI2CWrite(0x00,0x42);
2360:VS4210/monitor.c **** VXISI2CWrite(0x01,0x00);
2361:VS4210/monitor.c **** VXISI2CWrite(0x02,0x00);
2362:VS4210/monitor.c **** VXISI2CWrite(0x03,0x75);
ARM GAS  /tmp/cco5PJAb.s 			page 97


2363:VS4210/monitor.c **** VXISI2CWrite(0x04,0x18);
2364:VS4210/monitor.c **** VXISI2CWrite(0x05,0x80);
2365:VS4210/monitor.c **** VXISI2CWrite(0x06,0x20);
2366:VS4210/monitor.c **** VXISI2CWrite(0x07,0x0C);
2367:VS4210/monitor.c **** VXISI2CWrite(0x08,0x40);
2368:VS4210/monitor.c **** VXISI2CWrite(0x09,0x0A);
2369:VS4210/monitor.c **** VXISI2CWrite(0x0A,0x40);
2370:VS4210/monitor.c **** VXISI2CWrite(0x0B,0x0A);
2371:VS4210/monitor.c **** VXISI2CWrite(0x0C,0x00);
2372:VS4210/monitor.c **** VXISI2CWrite(0x0D,0x20);
2373:VS4210/monitor.c **** VXISI2CWrite(0x0E,0x10);
2374:VS4210/monitor.c **** VXISI2CWrite(0x0F,0x00);
2375:VS4210/monitor.c **** VXISI2CWrite(0x10,0x80);
2376:VS4210/monitor.c **** VXISI2CWrite(0x11,0x82);
2377:VS4210/monitor.c **** VXISI2CWrite(0x12,0x74);
2378:VS4210/monitor.c **** VXISI2CWrite(0x13,0x80);
2379:VS4210/monitor.c **** VXISI2CWrite(0x14,0x38);
2380:VS4210/monitor.c **** VXISI2CWrite(0x15,0x78);
2381:VS4210/monitor.c **** VXISI2CWrite(0x16,0xFE);
2382:VS4210/monitor.c **** VXISI2CWrite(0x17,0x00);
2383:VS4210/monitor.c **** VXISI2CWrite(0x18,0xC0);
2384:VS4210/monitor.c **** VXISI2CWrite(0x19,0x00);
2385:VS4210/monitor.c **** VXISI2CWrite(0x1A,0x20);
2386:VS4210/monitor.c **** VXISI2CWrite(0x1B,0x30);
2387:VS4210/monitor.c **** VXISI2CWrite(0x1C,0x00);
2388:VS4210/monitor.c **** VXISI2CWrite(0x1D,0x00);
2389:VS4210/monitor.c **** VXISI2CWrite(0x1E,0x20);
2390:VS4210/monitor.c **** VXISI2CWrite(0x1F,0xA4);
2391:VS4210/monitor.c **** VXISI2CWrite(0x20,0x50);
2392:VS4210/monitor.c **** VXISI2CWrite(0x21,0xE2);
2393:VS4210/monitor.c **** VXISI2CWrite(0x22,0x87);
2394:VS4210/monitor.c **** VXISI2CWrite(0x23,0x98);
2395:VS4210/monitor.c **** VXISI2CWrite(0x24,0x80);
2396:VS4210/monitor.c **** VXISI2CWrite(0x25,0x44);
2397:VS4210/monitor.c **** VXISI2CWrite(0x26,0x65);
2398:VS4210/monitor.c **** VXISI2CWrite(0x27,0x38);
2399:VS4210/monitor.c **** VXISI2CWrite(0x28,0xF0);
2400:VS4210/monitor.c **** VXISI2CWrite(0x29,0x00);
2401:VS4210/monitor.c **** VXISI2CWrite(0x2A,0x00);
2402:VS4210/monitor.c **** VXISI2CWrite(0x2B,0x11);
2403:VS4210/monitor.c **** VXISI2CWrite(0x2C,0x00);
2404:VS4210/monitor.c **** VXISI2CWrite(0x2D,0x00);
2405:VS4210/monitor.c **** VXISI2CWrite(0x2E,0x47);
2406:VS4210/monitor.c **** VXISI2CWrite(0x2F,0x80);
2407:VS4210/monitor.c **** VXISI2CWrite(0x30,0x38);
2408:VS4210/monitor.c **** VXISI2CWrite(0x31,0x80);
2409:VS4210/monitor.c **** VXISI2CWrite(0x32,0x80);
2410:VS4210/monitor.c **** VXISI2CWrite(0x33,0x80);
2411:VS4210/monitor.c **** VXISI2CWrite(0x34,0xA0);
2412:VS4210/monitor.c **** VXISI2CWrite(0x35,0x18);
2413:VS4210/monitor.c **** VXISI2CWrite(0x36,0x46);
2414:VS4210/monitor.c **** VXISI2CWrite(0x37,0x64);
2415:VS4210/monitor.c **** VXISI2CWrite(0x38,0x00);
2416:VS4210/monitor.c **** VXISI2CWrite(0x39,0xFF);
2417:VS4210/monitor.c **** VXISI2CWrite(0x3A,0x1D);
2418:VS4210/monitor.c **** VXISI2CWrite(0x3B,0x80);
2419:VS4210/monitor.c **** VXISI2CWrite(0x3C,0x80);
ARM GAS  /tmp/cco5PJAb.s 			page 98


2420:VS4210/monitor.c **** VXISI2CWrite(0x3D,0x80);
2421:VS4210/monitor.c **** VXISI2CWrite(0x3E,0x80);
2422:VS4210/monitor.c **** VXISI2CWrite(0x3F,0x80);
2423:VS4210/monitor.c **** VXISI2CWrite(0x40,0x80);
2424:VS4210/monitor.c **** VXISI2CWrite(0x41,0x60);
2425:VS4210/monitor.c **** VXISI2CWrite(0x42,0x5F);
2426:VS4210/monitor.c **** VXISI2CWrite(0x43,0x37);
2427:VS4210/monitor.c **** VXISI2CWrite(0x44,0x14);
2428:VS4210/monitor.c **** VXISI2CWrite(0x45,0x00);
2429:VS4210/monitor.c **** VXISI2CWrite(0x46,0x00);
2430:VS4210/monitor.c **** VXISI2CWrite(0x47,0x00);
2431:VS4210/monitor.c **** VXISI2CWrite(0x48,0x00);
2432:VS4210/monitor.c **** VXISI2CWrite(0x49,0x00);
2433:VS4210/monitor.c **** VXISI2CWrite(0x4A,0x00);
2434:VS4210/monitor.c **** VXISI2CWrite(0x4B,0x20);
2435:VS4210/monitor.c **** VXISI2CWrite(0x4C,0x00);
2436:VS4210/monitor.c **** VXISI2CWrite(0x4D,0x00);
2437:VS4210/monitor.c **** VXISI2CWrite(0x4E,0x00);
2438:VS4210/monitor.c **** VXISI2CWrite(0x4F,0x7F);
2439:VS4210/monitor.c **** VXISI2CWrite(0x50,0x20);
2440:VS4210/monitor.c **** VXISI2CWrite(0x51,0x00);
2441:VS4210/monitor.c **** VXISI2CWrite(0x52,0xA4);
2442:VS4210/monitor.c **** VXISI2CWrite(0x53,0xC0);
2443:VS4210/monitor.c **** VXISI2CWrite(0x54,0x42);
2444:VS4210/monitor.c **** VXISI2CWrite(0x55,0x60);
2445:VS4210/monitor.c **** VXISI2CWrite(0x56,0x5C);
2446:VS4210/monitor.c **** VXISI2CWrite(0x57,0x04);
2447:VS4210/monitor.c **** VXISI2CWrite(0x58,0x00);
2448:VS4210/monitor.c **** VXISI2CWrite(0x59,0x08);
2449:VS4210/monitor.c **** VXISI2CWrite(0x5A,0x10);
2450:VS4210/monitor.c **** VXISI2CWrite(0x5B,0x00);
2451:VS4210/monitor.c **** VXISI2CWrite(0x5C,0x68);
2452:VS4210/monitor.c **** VXISI2CWrite(0x5D,0xA8);
2453:VS4210/monitor.c **** VXISI2CWrite(0x5E,0xC0);
2454:VS4210/monitor.c **** VXISI2CWrite(0x5F,0x53);
2455:VS4210/monitor.c **** VXISI2CWrite(0x60,0xE0);
2456:VS4210/monitor.c **** VXISI2CWrite(0x61,0xCC);
2457:VS4210/monitor.c **** VXISI2CWrite(0x62,0x33);
2458:VS4210/monitor.c **** VXISI2CWrite(0x63,0x01);
2459:VS4210/monitor.c **** VXISI2CWrite(0x64,0xFF);
2460:VS4210/monitor.c **** VXISI2CWrite(0x65,0x01);
2461:VS4210/monitor.c **** VXISI2CWrite(0x66,0xFF);
2462:VS4210/monitor.c **** VXISI2CWrite(0x67,0x89);
2463:VS4210/monitor.c **** VXISI2CWrite(0x68,0xAB);
2464:VS4210/monitor.c **** VXISI2CWrite(0x69,0x88);
2465:VS4210/monitor.c **** VXISI2CWrite(0x6A,0x6E);
2466:VS4210/monitor.c **** VXISI2CWrite(0x6B,0x6E);
2467:VS4210/monitor.c **** VXISI2CWrite(0x6C,0x6E);
2468:VS4210/monitor.c **** VXISI2CWrite(0x6D,0x00);
2469:VS4210/monitor.c **** VXISI2CWrite(0x6E,0x00);
2470:VS4210/monitor.c **** VXISI2CWrite(0x6F,0x00);
2471:VS4210/monitor.c **** VXISI2CWrite(0x70,0x00);
2472:VS4210/monitor.c **** VXISI2CWrite(0x71,0x00);
2473:VS4210/monitor.c **** VXISI2CWrite(0x72,0x00);
2474:VS4210/monitor.c **** VXISI2CWrite(0x73,0x00);
2475:VS4210/monitor.c **** VXISI2CWrite(0x74,0x06);
2476:VS4210/monitor.c **** VXISI2CWrite(0x75,0xFF);
ARM GAS  /tmp/cco5PJAb.s 			page 99


2477:VS4210/monitor.c **** VXISI2CWrite(0x76,0xFF);
2478:VS4210/monitor.c **** VXISI2CWrite(0x77,0xFF);
2479:VS4210/monitor.c **** VXISI2CWrite(0x78,0xFF);
2480:VS4210/monitor.c **** VXISI2CWrite(0x79,0xFF);
2481:VS4210/monitor.c **** VXISI2CWrite(0x7A,0xFF);
2482:VS4210/monitor.c **** VXISI2CWrite(0x7B,0xFF);
2483:VS4210/monitor.c **** VXISI2CWrite(0x7C,0xFF);
2484:VS4210/monitor.c **** VXISI2CWrite(0x7D,0xF0);
2485:VS4210/monitor.c **** VXISI2CWrite(0x7E,0x80);
2486:VS4210/monitor.c **** VXISI2CWrite(0x7F,0x00);
2487:VS4210/monitor.c **** VXISI2CWrite(0x80,0x01);
2488:VS4210/monitor.c **** VXISI2CWrite(0x81,0x15);
2489:VS4210/monitor.c **** VXISI2CWrite(0x82,0x40);
2490:VS4210/monitor.c **** VXISI2CWrite(0x83,0x2D);
2491:VS4210/monitor.c **** VXISI2CWrite(0x84,0x57);
2492:VS4210/monitor.c **** VXISI2CWrite(0x85,0xFD);
2493:VS4210/monitor.c **** VXISI2CWrite(0x86,0x00);
2494:VS4210/monitor.c **** VXISI2CWrite(0x87,0x00);
2495:VS4210/monitor.c **** VXISI2CWrite(0x88,0x00);
2496:VS4210/monitor.c **** VXISI2CWrite(0x89,0x00);
2497:VS4210/monitor.c **** VXISI2CWrite(0x8A,0x00);
2498:VS4210/monitor.c **** VXISI2CWrite(0x8B,0x7E);
2499:VS4210/monitor.c **** VXISI2CWrite(0x8C,0x03);
2500:VS4210/monitor.c **** VXISI2CWrite(0x8D,0x17);
2501:VS4210/monitor.c **** VXISI2CWrite(0x8E,0x8C);
2502:VS4210/monitor.c **** VXISI2CWrite(0x8F,0x00);
2503:VS4210/monitor.c **** VXISI2CWrite(0x90,0xCC);
2504:VS4210/monitor.c **** VXISI2CWrite(0x91,0x41);
2505:VS4210/monitor.c **** VXISI2CWrite(0x92,0xC4);
2506:VS4210/monitor.c **** VXISI2CWrite(0x93,0x84);
2507:VS4210/monitor.c **** VXISI2CWrite(0x94,0x98);
2508:VS4210/monitor.c **** VXISI2CWrite(0x95,0x80);
2509:VS4210/monitor.c **** VXISI2CWrite(0x96,0x65);
2510:VS4210/monitor.c **** VXISI2CWrite(0x97,0x70);
2511:VS4210/monitor.c **** VXISI2CWrite(0x98,0x29);
2512:VS4210/monitor.c **** VXISI2CWrite(0x99,0x90);
2513:VS4210/monitor.c **** VXISI2CWrite(0x9A,0x80);
2514:VS4210/monitor.c **** VXISI2CWrite(0x9B,0x04);
2515:VS4210/monitor.c **** VXISI2CWrite(0x9C,0x0A);
2516:VS4210/monitor.c **** VXISI2CWrite(0x9D,0x00);
2517:VS4210/monitor.c **** VXISI2CWrite(0x9E,0x04);
2518:VS4210/monitor.c **** VXISI2CWrite(0x9F,0x65);
2519:VS4210/monitor.c **** VXISI2CWrite(0xA0,0x80);
2520:VS4210/monitor.c **** VXISI2CWrite(0xA1,0xD8);
2521:VS4210/monitor.c **** VXISI2CWrite(0xA2,0x98);
2522:VS4210/monitor.c **** VXISI2CWrite(0xA3,0x87);
2523:VS4210/monitor.c **** VXISI2CWrite(0xA4,0x00);
2524:VS4210/monitor.c **** VXISI2CWrite(0xA5,0x80);
2525:VS4210/monitor.c **** VXISI2CWrite(0xA6,0x00);
2526:VS4210/monitor.c **** VXISI2CWrite(0xA7,0x70);
2527:VS4210/monitor.c **** VXISI2CWrite(0xA8,0x40);
2528:VS4210/monitor.c **** VXISI2CWrite(0xA9,0x1E);
2529:VS4210/monitor.c **** VXISI2CWrite(0xAA,0x2C);
2530:VS4210/monitor.c **** VXISI2CWrite(0xAB,0x00);
2531:VS4210/monitor.c **** VXISI2CWrite(0xAC,0x90);
2532:VS4210/monitor.c **** VXISI2CWrite(0xAD,0x65);
2533:VS4210/monitor.c **** VXISI2CWrite(0xAE,0x65);
ARM GAS  /tmp/cco5PJAb.s 			page 100


2534:VS4210/monitor.c **** VXISI2CWrite(0xAF,0x99);
2535:VS4210/monitor.c **** VXISI2CWrite(0xB0,0x00);
2536:VS4210/monitor.c **** VXISI2CWrite(0xB1,0x00);
2537:VS4210/monitor.c **** VXISI2CWrite(0xB2,0x00);
2538:VS4210/monitor.c **** VXISI2CWrite(0xB3,0x00);
2539:VS4210/monitor.c **** VXISI2CWrite(0xB4,0x00);
2540:VS4210/monitor.c **** VXISI2CWrite(0xB5,0x00);
2541:VS4210/monitor.c **** VXISI2CWrite(0xB6,0x00);
2542:VS4210/monitor.c **** VXISI2CWrite(0xB7,0x00);
2543:VS4210/monitor.c **** VXISI2CWrite(0xB8,0x80);
2544:VS4210/monitor.c **** VXISI2CWrite(0xB9,0x00);
2545:VS4210/monitor.c **** VXISI2CWrite(0xBA,0x01);
2546:VS4210/monitor.c **** VXISI2CWrite(0xBB,0x00);
2547:VS4210/monitor.c **** VXISI2CWrite(0xBC,0x90);
2548:VS4210/monitor.c **** VXISI2CWrite(0xBD,0x01);
2549:VS4210/monitor.c **** VXISI2CWrite(0xBE,0x2C);
2550:VS4210/monitor.c **** VXISI2CWrite(0xBF,0x00);
2551:VS4210/monitor.c **** VXISI2CWrite(0xC0,0x00);
2552:VS4210/monitor.c **** VXISI2CWrite(0xC1,0x20);
2553:VS4210/monitor.c **** VXISI2CWrite(0xC2,0x20);
2554:VS4210/monitor.c **** VXISI2CWrite(0xC3,0x20);
2555:VS4210/monitor.c **** VXISI2CWrite(0xC4,0x20);
2556:VS4210/monitor.c **** VXISI2CWrite(0xC5,0x20);
2557:VS4210/monitor.c **** VXISI2CWrite(0xC6,0x00);
2558:VS4210/monitor.c **** VXISI2CWrite(0xC7,0x00);
2559:VS4210/monitor.c **** VXISI2CWrite(0xC8,0x00);
2560:VS4210/monitor.c **** VXISI2CWrite(0xC9,0x00);
2561:VS4210/monitor.c **** VXISI2CWrite(0xCA,0x00);
2562:VS4210/monitor.c **** VXISI2CWrite(0xCB,0x00);
2563:VS4210/monitor.c **** VXISI2CWrite(0xCC,0x00);
2564:VS4210/monitor.c **** VXISI2CWrite(0xCD,0x00);
2565:VS4210/monitor.c **** VXISI2CWrite(0xCE,0x00);
2566:VS4210/monitor.c **** VXISI2CWrite(0xCF,0x00);
2567:VS4210/monitor.c **** VXISI2CWrite(0xD0,0xFF);
2568:VS4210/monitor.c **** VXISI2CWrite(0xD1,0x3F);
2569:VS4210/monitor.c **** VXISI2CWrite(0xD2,0xC2);
2570:VS4210/monitor.c **** VXISI2CWrite(0xD3,0x3F);
2571:VS4210/monitor.c **** VXISI2CWrite(0xD4,0x00);
2572:VS4210/monitor.c **** VXISI2CWrite(0xD5,0x00);
2573:VS4210/monitor.c **** VXISI2CWrite(0xD6,0x00);
2574:VS4210/monitor.c **** VXISI2CWrite(0xD7,0x0F);
2575:VS4210/monitor.c **** VXISI2CWrite(0xD8,0x00);
2576:VS4210/monitor.c **** VXISI2CWrite(0xD9,0x00);
2577:VS4210/monitor.c **** VXISI2CWrite(0xDA,0x00);
2578:VS4210/monitor.c **** VXISI2CWrite(0xDB,0x00);
2579:VS4210/monitor.c **** VXISI2CWrite(0xDC,0x77);
2580:VS4210/monitor.c **** VXISI2CWrite(0xDD,0x00);
2581:VS4210/monitor.c **** VXISI2CWrite(0xDE,0xB0);
2582:VS4210/monitor.c **** VXISI2CWrite(0xDF,0x00);
2583:VS4210/monitor.c **** VXISI2CWrite(0xE0,0x00);
2584:VS4210/monitor.c **** VXISI2CWrite(0xE1,0x00);
2585:VS4210/monitor.c **** VXISI2CWrite(0xE2,0x00);
2586:VS4210/monitor.c **** VXISI2CWrite(0xE3,0x47);
2587:VS4210/monitor.c **** VXISI2CWrite(0xE4,0x3C);
2588:VS4210/monitor.c **** VXISI2CWrite(0xE5,0x80);
2589:VS4210/monitor.c **** VXISI2CWrite(0xE6,0x00);
2590:VS4210/monitor.c **** VXISI2CWrite(0xE7,0x00);
ARM GAS  /tmp/cco5PJAb.s 			page 101


2591:VS4210/monitor.c **** VXISI2CWrite(0xE8,0x00);
2592:VS4210/monitor.c **** VXISI2CWrite(0xE9,0x00);
2593:VS4210/monitor.c **** VXISI2CWrite(0xEA,0x00);
2594:VS4210/monitor.c **** VXISI2CWrite(0xEB,0x00);
2595:VS4210/monitor.c **** VXISI2CWrite(0xEC,0x88);
2596:VS4210/monitor.c **** VXISI2CWrite(0xED,0x00);
2597:VS4210/monitor.c **** VXISI2CWrite(0xEE,0x00);
2598:VS4210/monitor.c **** VXISI2CWrite(0xEF,0x00);
2599:VS4210/monitor.c **** VXISI2CWrite(0xF0,0x30);
2600:VS4210/monitor.c **** VXISI2CWrite(0xF1,0x43);
2601:VS4210/monitor.c **** VXISI2CWrite(0xF2,0x1F);
2602:VS4210/monitor.c **** VXISI2CWrite(0xF3,0x1F);
2603:VS4210/monitor.c **** VXISI2CWrite(0xF4,0x22);
2604:VS4210/monitor.c **** VXISI2CWrite(0xF5,0x73);
2605:VS4210/monitor.c **** VXISI2CWrite(0xF6,0x53);
2606:VS4210/monitor.c **** VXISI2CWrite(0xF7,0x80);
2607:VS4210/monitor.c **** VXISI2CWrite(0xF8,0x01);
2608:VS4210/monitor.c **** VXISI2CWrite(0xF9,0x01);
2609:VS4210/monitor.c **** VXISI2CWrite(0xFA,0x00);
2610:VS4210/monitor.c **** VXISI2CWrite(0xFB,0x00);
2611:VS4210/monitor.c **** VXISI2CWrite(0xFC,0x00);
2612:VS4210/monitor.c **** VXISI2CWrite(0xFD,0x70);
2613:VS4210/monitor.c **** VXISI2CWrite(0xFE,0x18);
2614:VS4210/monitor.c **** VXISI2CWrite(0xFF,0x07);
2615:VS4210/monitor.c **** 
2616:VS4210/monitor.c **** #else
2617:VS4210/monitor.c **** #if 1
2618:VS4210/monitor.c **** /*
2619:VS4210/monitor.c **** 	VXISI2CWrite(0x08,0x40);
2620:VS4210/monitor.c **** 	
2621:VS4210/monitor.c **** 	VXISI2CWrite(0x0A,0x40);
2622:VS4210/monitor.c **** 	
2623:VS4210/monitor.c **** 	VXISI2CWrite(0x10,0x80);
2624:VS4210/monitor.c **** 	
2625:VS4210/monitor.c **** 	VXISI2CWrite(0x12,0x74);
2626:VS4210/monitor.c **** 	VXISI2CWrite(0x13,0x80);
2627:VS4210/monitor.c **** 	VXISI2CWrite(0x14,0x38);
2628:VS4210/monitor.c **** 	
2629:VS4210/monitor.c **** 	VXISI2CWrite(0x19,0x00);
2630:VS4210/monitor.c **** */
2631:VS4210/monitor.c **** 
2632:VS4210/monitor.c **** 	VXISI2CWrite(0x1A,0x20);
2633:VS4210/monitor.c **** /*
2634:VS4210/monitor.c **** 	VXISI2CWrite(0x1B,0x30);
2635:VS4210/monitor.c **** 	
2636:VS4210/monitor.c **** 	VXISI2CWrite(0x1F,0xA4);
2637:VS4210/monitor.c **** 	VXISI2CWrite(0x20,0x50);
2638:VS4210/monitor.c **** 	VXISI2CWrite(0x21,0xE2);
2639:VS4210/monitor.c **** 	VXISI2CWrite(0x22,0x87);
2640:VS4210/monitor.c **** 	VXISI2CWrite(0x23,0x98);
2641:VS4210/monitor.c **** 	VXISI2CWrite(0x24,0x80);
2642:VS4210/monitor.c **** 	VXISI2CWrite(0x25,0x44);
2643:VS4210/monitor.c **** 	
2644:VS4210/monitor.c **** 	VXISI2CWrite(0x27,0x38);
2645:VS4210/monitor.c **** 	
2646:VS4210/monitor.c **** 	VXISI2CWrite(0x2E,0x47);
2647:VS4210/monitor.c **** 	VXISI2CWrite(0x2F,0x80);
ARM GAS  /tmp/cco5PJAb.s 			page 102


2648:VS4210/monitor.c **** 	
2649:VS4210/monitor.c **** 	VXISI2CWrite(0x3A,0x1D);
2650:VS4210/monitor.c **** 	
2651:VS4210/monitor.c **** 	VXISI2CWrite(0x45,0x00);
2652:VS4210/monitor.c **** 
2653:VS4210/monitor.c **** 	VXISI2CWrite(0x58,0x00);
2654:VS4210/monitor.c **** 	
2655:VS4210/monitor.c **** 	VXISI2CWrite(0x69,0x88);
2656:VS4210/monitor.c **** */	
2657:VS4210/monitor.c **** 	VXISI2CWrite(0x74,0x06);
2658:VS4210/monitor.c **** 
2659:VS4210/monitor.c **** 	VXISI2CWrite(0x80,0x01);
2660:VS4210/monitor.c **** 	VXISI2CWrite(0x81,0x15);
2661:VS4210/monitor.c **** 	
2662:VS4210/monitor.c **** 	VXISI2CWrite(0x83,0x2D);
2663:VS4210/monitor.c **** 	
2664:VS4210/monitor.c **** 	VXISI2CWrite(0x86,0x00);
2665:VS4210/monitor.c **** 	VXISI2CWrite(0x87,0x00);
2666:VS4210/monitor.c **** 	VXISI2CWrite(0x88,0x00);
2667:VS4210/monitor.c **** 	VXISI2CWrite(0x89,0x00);
2668:VS4210/monitor.c **** 	
2669:VS4210/monitor.c **** 	VXISI2CWrite(0x8D,0x17);
2670:VS4210/monitor.c **** /*
2671:VS4210/monitor.c **** 	VXISI2CWrite(0x9A,0x80);
2672:VS4210/monitor.c **** 	
2673:VS4210/monitor.c **** 	
2674:VS4210/monitor.c **** 	VXISI2CWrite(0xB8,0x80);
2675:VS4210/monitor.c **** 
2676:VS4210/monitor.c **** 	VXISI2CWrite(0xBA,0x01);
2677:VS4210/monitor.c **** 	
2678:VS4210/monitor.c **** 	VXISI2CWrite(0xBE,0x2C);
2679:VS4210/monitor.c **** 	
2680:VS4210/monitor.c **** 	VXISI2CWrite(0xD7,0x0F);
2681:VS4210/monitor.c **** 	
2682:VS4210/monitor.c **** 	VXISI2CWrite(0xDE,0xB0);
2683:VS4210/monitor.c **** 	
2684:VS4210/monitor.c **** 	VXISI2CWrite(0xF0,0x30);
2685:VS4210/monitor.c **** 	
2686:VS4210/monitor.c **** 	VXISI2CWrite(0xFD,0x70);
2687:VS4210/monitor.c **** 	VXISI2CWrite(0xFE,0x18);
2688:VS4210/monitor.c **** 	VXISI2CWrite(0xFF,0x07);
2689:VS4210/monitor.c **** */
2690:VS4210/monitor.c **** 
2691:VS4210/monitor.c **** 
2692:VS4210/monitor.c **** #else
2693:VS4210/monitor.c **** 	VXISI2CWrite(0x08,0x40);
2694:VS4210/monitor.c **** 	
2695:VS4210/monitor.c **** 	VXISI2CWrite(0x0A,0x40);
2696:VS4210/monitor.c **** 	
2697:VS4210/monitor.c **** 	VXISI2CWrite(0x10,0x80);
2698:VS4210/monitor.c **** 	
2699:VS4210/monitor.c **** 	VXISI2CWrite(0x12,0x74);
2700:VS4210/monitor.c **** 	VXISI2CWrite(0x13,0x80);
2701:VS4210/monitor.c **** 	VXISI2CWrite(0x14,0x38);
2702:VS4210/monitor.c **** 	
2703:VS4210/monitor.c **** 	VXISI2CWrite(0x19,0x00);
2704:VS4210/monitor.c **** 	VXISI2CWrite(0x1A,0x20);
ARM GAS  /tmp/cco5PJAb.s 			page 103


2705:VS4210/monitor.c **** 	VXISI2CWrite(0x1B,0x30);
2706:VS4210/monitor.c **** 	
2707:VS4210/monitor.c **** 	VXISI2CWrite(0x1F,0xA4);
2708:VS4210/monitor.c **** 	VXISI2CWrite(0x20,0x50);
2709:VS4210/monitor.c **** 	VXISI2CWrite(0x21,0xE2);
2710:VS4210/monitor.c **** 	VXISI2CWrite(0x22,0x87);
2711:VS4210/monitor.c **** 	VXISI2CWrite(0x23,0x98);
2712:VS4210/monitor.c **** 	VXISI2CWrite(0x24,0x80);
2713:VS4210/monitor.c **** 	VXISI2CWrite(0x25,0x44);
2714:VS4210/monitor.c **** 	
2715:VS4210/monitor.c **** 	VXISI2CWrite(0x27,0x38);
2716:VS4210/monitor.c **** 	
2717:VS4210/monitor.c **** //	VXISI2CWrite(0x2E,0x47);
2718:VS4210/monitor.c **** //	VXISI2CWrite(0x2F,0x80);
2719:VS4210/monitor.c **** 	
2720:VS4210/monitor.c **** //	VXISI2CWrite(0x3A,0x1D);
2721:VS4210/monitor.c **** 	
2722:VS4210/monitor.c **** //	VXISI2CWrite(0x45,0x00);
2723:VS4210/monitor.c **** 	
2724:VS4210/monitor.c **** //	VXISI2CWrite(0x58,0x00);
2725:VS4210/monitor.c **** 	
2726:VS4210/monitor.c **** //	VXISI2CWrite(0x69,0x88);
2727:VS4210/monitor.c **** 	
2728:VS4210/monitor.c **** 	VXISI2CWrite(0x74,0x06);
2729:VS4210/monitor.c **** 
2730:VS4210/monitor.c **** 	VXISI2CWrite(0x80,0x01);
2731:VS4210/monitor.c **** 	VXISI2CWrite(0x81,0x15);
2732:VS4210/monitor.c **** 	
2733:VS4210/monitor.c **** 	VXISI2CWrite(0x83,0x2D);
2734:VS4210/monitor.c **** 	
2735:VS4210/monitor.c **** //	VXISI2CWrite(0x86,0x00);
2736:VS4210/monitor.c **** //	VXISI2CWrite(0x87,0x00);
2737:VS4210/monitor.c **** //	VXISI2CWrite(0x88,0x00);
2738:VS4210/monitor.c **** //	VXISI2CWrite(0x89,0x00);
2739:VS4210/monitor.c **** 	
2740:VS4210/monitor.c **** 	VXISI2CWrite(0x8D,0x17);
2741:VS4210/monitor.c **** 
2742:VS4210/monitor.c **** //	VXISI2CWrite(0x9A,0x80);
2743:VS4210/monitor.c **** 	
2744:VS4210/monitor.c **** 	
2745:VS4210/monitor.c **** //	VXISI2CWrite(0xB8,0x80);
2746:VS4210/monitor.c **** 	/*
2747:VS4210/monitor.c **** 	VXISI2CWrite(0xBA,0x01);
2748:VS4210/monitor.c **** 	
2749:VS4210/monitor.c **** 	VXISI2CWrite(0xBE,0x2C);
2750:VS4210/monitor.c **** 	
2751:VS4210/monitor.c **** 	VXISI2CWrite(0xD7,0x0F);
2752:VS4210/monitor.c **** 	
2753:VS4210/monitor.c **** 	VXISI2CWrite(0xDE,0xB0);
2754:VS4210/monitor.c **** 	
2755:VS4210/monitor.c **** 	VXISI2CWrite(0xF0,0x30);
2756:VS4210/monitor.c **** 	
2757:VS4210/monitor.c **** 	VXISI2CWrite(0xFD,0x70);
2758:VS4210/monitor.c **** 	VXISI2CWrite(0xFE,0x18);
2759:VS4210/monitor.c **** 	VXISI2CWrite(0xFF,0x07);
2760:VS4210/monitor.c **** */
2761:VS4210/monitor.c ****  #endif
ARM GAS  /tmp/cco5PJAb.s 			page 104


2762:VS4210/monitor.c **** #endif	
2763:VS4210/monitor.c **** 
2764:VS4210/monitor.c **** 
2765:VS4210/monitor.c **** }
 3060              		.loc 1 2765 0
 3061 0008 08BD     		pop	{r3, pc}
 3062              	.L147:
 3063 000a 00BF     		.align	2
 3064              	.L146:
 3065 000c 00000000 		.word	.LC21
 3066              		.cfi_endproc
 3067              	.LFE95:
 3069              		.section	.text.Monitor,"ax",%progbits
 3070              		.align	1
 3071              		.global	Monitor
 3072              		.syntax unified
 3073              		.thumb
 3074              		.thumb_func
 3075              		.fpu softvfp
 3077              	Monitor:
 3078              	.LFB92:
 822:VS4210/monitor.c **** 
 3079              		.loc 1 822 0
 3080              		.cfi_startproc
 3081              		@ args = 0, pretend = 0, frame = 0
 3082              		@ frame_needed = 0, uses_anonymous_args = 0
 3083 0000 70B5     		push	{r4, r5, r6, lr}
 3084              	.LCFI19:
 3085              		.cfi_def_cfa_offset 16
 3086              		.cfi_offset 4, -16
 3087              		.cfi_offset 5, -12
 3088              		.cfi_offset 6, -8
 3089              		.cfi_offset 14, -4
 826:VS4210/monitor.c **** 
 3090              		.loc 1 826 0
 3091 0002 FFF7FEFF 		bl	MonGetCommand
 3092              	.LVL404:
 3093 0006 00B9     		cbnz	r0, .L212
 3094              	.L148:
1956:VS4210/monitor.c **** #endif
 3095              		.loc 1 1956 0
 3096 0008 70BD     		pop	{r4, r5, r6, pc}
 3097              	.L212:
 843:VS4210/monitor.c **** 
 3098              		.loc 1 843 0
 3099 000a BA4B     		ldr	r3, .L231
 3100 000c 1C68     		ldr	r4, [r3]
 3101 000e BA49     		ldr	r1, .L231+4
 3102 0010 2046     		mov	r0, r4
 3103 0012 FFF7FEFF 		bl	stricmp
 3104              	.LVL405:
 3105 0016 0028     		cmp	r0, #0
 3106 0018 40F0D280 		bne	.L150
 852:VS4210/monitor.c **** 	{
 3107              		.loc 1 852 0
 3108 001c B74B     		ldr	r3, .L231+8
 3109 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/cco5PJAb.s 			page 105


 3110 0020 A02B     		cmp	r3, #160
 3111 0022 0CD0     		beq	.L213
 861:VS4210/monitor.c **** {
 3112              		.loc 1 861 0
 3113 0024 402B     		cmp	r3, #64
 3114 0026 30D0     		beq	.L214
 869:VS4210/monitor.c **** {
 3115              		.loc 1 869 0
 3116 0028 122B     		cmp	r3, #18
 3117 002a 54D0     		beq	.L215
 896:VS4210/monitor.c **** 	{
 3118              		.loc 1 896 0
 3119 002c 882B     		cmp	r3, #136
 3120 002e 78D0     		beq	.L216
 905:VS4210/monitor.c **** 	{
 3121              		.loc 1 905 0
 3122 0030 902B     		cmp	r3, #144
 3123 0032 00F09C80 		beq	.L217
 916:VS4210/monitor.c **** 
 3124              		.loc 1 916 0
 3125 0036 B248     		ldr	r0, .L231+12
 3126 0038 FFF7FEFF 		bl	Printf
 3127              	.LVL406:
 3128 003c C5E0     		b	.L152
 3129              	.L213:
 854:VS4210/monitor.c **** 	   //tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2])); 	
 3130              		.loc 1 854 0
 3131 003e AD4C     		ldr	r4, .L231
 3132 0040 6068     		ldr	r0, [r4, #4]
 3133 0042 FFF7FEFF 		bl	Asc2Bin
 3134              	.LVL407:
 3135 0046 0546     		mov	r5, r0
 3136 0048 A068     		ldr	r0, [r4, #8]
 3137 004a FFF7FEFF 		bl	Asc2Bin
 3138              	.LVL408:
 3139 004e 0146     		mov	r1, r0
 3140 0050 2846     		mov	r0, r5
 3141 0052 FFF7FEFF 		bl	WriteEEP
 3142              	.LVL409:
 856:VS4210/monitor.c **** 		MonIndex=Asc2Bin(argv[1]);
 3143              		.loc 1 856 0
 3144 0056 6068     		ldr	r0, [r4, #4]
 3145 0058 FFF7FEFF 		bl	Asc2Bin
 3146              	.LVL410:
 3147 005c FFF7FEFF 		bl	ReadEEP
 3148              	.LVL411:
 3149 0060 0646     		mov	r6, r0
 3150              	.LVL412:
 857:VS4210/monitor.c **** 		MonWdata=Asc2Bin(argv[2]);
 3151              		.loc 1 857 0
 3152 0062 6568     		ldr	r5, [r4, #4]
 3153 0064 2846     		mov	r0, r5
 3154 0066 FFF7FEFF 		bl	Asc2Bin
 3155              	.LVL413:
 3156 006a A64B     		ldr	r3, .L231+16
 3157 006c 1870     		strb	r0, [r3]
 858:VS4210/monitor.c **** 	  Printf("\r\nEEPROM Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
ARM GAS  /tmp/cco5PJAb.s 			page 106


 3158              		.loc 1 858 0
 3159 006e A068     		ldr	r0, [r4, #8]
 3160 0070 FFF7FEFF 		bl	Asc2Bin
 3161              	.LVL414:
 3162 0074 A44B     		ldr	r3, .L231+20
 3163 0076 1870     		strb	r0, [r3]
 859:VS4210/monitor.c **** 	}
 3164              		.loc 1 859 0
 3165 0078 2846     		mov	r0, r5
 3166 007a FFF7FEFF 		bl	Asc2Bin
 3167              	.LVL415:
 3168 007e 3246     		mov	r2, r6
 3169 0080 0146     		mov	r1, r0
 3170 0082 A248     		ldr	r0, .L231+24
 3171 0084 FFF7FEFF 		bl	Printf
 3172              	.LVL416:
 3173 0088 9FE0     		b	.L152
 3174              	.LVL417:
 3175              	.L214:
 863:VS4210/monitor.c **** 	 ret= VXISI2CRead(Asc2Bin(argv[1]));	
 3176              		.loc 1 863 0
 3177 008a 9A4C     		ldr	r4, .L231
 3178 008c 6068     		ldr	r0, [r4, #4]
 3179 008e FFF7FEFF 		bl	Asc2Bin
 3180              	.LVL418:
 3181 0092 0546     		mov	r5, r0
 3182 0094 A068     		ldr	r0, [r4, #8]
 3183 0096 FFF7FEFF 		bl	Asc2Bin
 3184              	.LVL419:
 3185 009a 0146     		mov	r1, r0
 3186 009c 2846     		mov	r0, r5
 3187 009e FFF7FEFF 		bl	VXISI2CWrite
 3188              	.LVL420:
 864:VS4210/monitor.c **** 	 MonIndex=Asc2Bin(argv[1]);
 3189              		.loc 1 864 0
 3190 00a2 6068     		ldr	r0, [r4, #4]
 3191 00a4 FFF7FEFF 		bl	Asc2Bin
 3192              	.LVL421:
 3193 00a8 FFF7FEFF 		bl	VXISI2CRead
 3194              	.LVL422:
 3195 00ac 0646     		mov	r6, r0
 3196              	.LVL423:
 865:VS4210/monitor.c **** 	 MonWdata=Asc2Bin(argv[2]); 
 3197              		.loc 1 865 0
 3198 00ae 6568     		ldr	r5, [r4, #4]
 3199 00b0 2846     		mov	r0, r5
 3200 00b2 FFF7FEFF 		bl	Asc2Bin
 3201              	.LVL424:
 3202 00b6 934B     		ldr	r3, .L231+16
 3203 00b8 1870     		strb	r0, [r3]
 866:VS4210/monitor.c **** 	   Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3204              		.loc 1 866 0
 3205 00ba A068     		ldr	r0, [r4, #8]
 3206 00bc FFF7FEFF 		bl	Asc2Bin
 3207              	.LVL425:
 3208 00c0 914B     		ldr	r3, .L231+20
 3209 00c2 1870     		strb	r0, [r3]
ARM GAS  /tmp/cco5PJAb.s 			page 107


 867:VS4210/monitor.c **** }
 3210              		.loc 1 867 0
 3211 00c4 2846     		mov	r0, r5
 3212 00c6 FFF7FEFF 		bl	Asc2Bin
 3213              	.LVL426:
 3214 00ca 3246     		mov	r2, r6
 3215 00cc 0146     		mov	r1, r0
 3216 00ce 9048     		ldr	r0, .L231+28
 3217 00d0 FFF7FEFF 		bl	Printf
 3218              	.LVL427:
 3219 00d4 79E0     		b	.L152
 3220              	.LVL428:
 3221              	.L215:
 871:VS4210/monitor.c **** 	 ret= VS8812Read(Asc2Bin(argv[1]));	
 3222              		.loc 1 871 0
 3223 00d6 874C     		ldr	r4, .L231
 3224 00d8 6068     		ldr	r0, [r4, #4]
 3225 00da FFF7FEFF 		bl	Asc2Bin
 3226              	.LVL429:
 3227 00de 0546     		mov	r5, r0
 3228 00e0 A068     		ldr	r0, [r4, #8]
 3229 00e2 FFF7FEFF 		bl	Asc2Bin
 3230              	.LVL430:
 3231 00e6 0146     		mov	r1, r0
 3232 00e8 2846     		mov	r0, r5
 3233 00ea FFF7FEFF 		bl	VS8812Write
 3234              	.LVL431:
 872:VS4210/monitor.c **** 	 MonIndex=Asc2Bin(argv[1]);
 3235              		.loc 1 872 0
 3236 00ee 6068     		ldr	r0, [r4, #4]
 3237 00f0 FFF7FEFF 		bl	Asc2Bin
 3238              	.LVL432:
 3239 00f4 FFF7FEFF 		bl	VS8812Read
 3240              	.LVL433:
 3241 00f8 0646     		mov	r6, r0
 3242              	.LVL434:
 873:VS4210/monitor.c **** 	 MonWdata=Asc2Bin(argv[2]); 
 3243              		.loc 1 873 0
 3244 00fa 6568     		ldr	r5, [r4, #4]
 3245 00fc 2846     		mov	r0, r5
 3246 00fe FFF7FEFF 		bl	Asc2Bin
 3247              	.LVL435:
 3248 0102 804B     		ldr	r3, .L231+16
 3249 0104 1870     		strb	r0, [r3]
 874:VS4210/monitor.c **** 	   Printf("\r\nVS8812 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3250              		.loc 1 874 0
 3251 0106 A068     		ldr	r0, [r4, #8]
 3252 0108 FFF7FEFF 		bl	Asc2Bin
 3253              	.LVL436:
 3254 010c 7E4B     		ldr	r3, .L231+20
 3255 010e 1870     		strb	r0, [r3]
 875:VS4210/monitor.c **** }
 3256              		.loc 1 875 0
 3257 0110 2846     		mov	r0, r5
 3258 0112 FFF7FEFF 		bl	Asc2Bin
 3259              	.LVL437:
 3260 0116 3246     		mov	r2, r6
ARM GAS  /tmp/cco5PJAb.s 			page 108


 3261 0118 0146     		mov	r1, r0
 3262 011a 7E48     		ldr	r0, .L231+32
 3263 011c FFF7FEFF 		bl	Printf
 3264              	.LVL438:
 3265 0120 53E0     		b	.L152
 3266              	.LVL439:
 3267              	.L216:
 898:VS4210/monitor.c **** 	ret= tp28xx_byte_read(Asc2Bin(argv[1]));	
 3268              		.loc 1 898 0
 3269 0122 744C     		ldr	r4, .L231
 3270 0124 6068     		ldr	r0, [r4, #4]
 3271 0126 FFF7FEFF 		bl	Asc2Bin
 3272              	.LVL440:
 3273 012a 0546     		mov	r5, r0
 3274 012c A068     		ldr	r0, [r4, #8]
 3275 012e FFF7FEFF 		bl	Asc2Bin
 3276              	.LVL441:
 3277 0132 0146     		mov	r1, r0
 3278 0134 2846     		mov	r0, r5
 3279 0136 FFF7FEFF 		bl	tp28xx_byte_write
 3280              	.LVL442:
 899:VS4210/monitor.c **** 	MonIndex=Asc2Bin(argv[1]);
 3281              		.loc 1 899 0
 3282 013a 6068     		ldr	r0, [r4, #4]
 3283 013c FFF7FEFF 		bl	Asc2Bin
 3284              	.LVL443:
 3285 0140 FFF7FEFF 		bl	tp28xx_byte_read
 3286              	.LVL444:
 3287 0144 0646     		mov	r6, r0
 3288              	.LVL445:
 900:VS4210/monitor.c **** 	MonWdata=Asc2Bin(argv[2]);
 3289              		.loc 1 900 0
 3290 0146 6568     		ldr	r5, [r4, #4]
 3291 0148 2846     		mov	r0, r5
 3292 014a FFF7FEFF 		bl	Asc2Bin
 3293              	.LVL446:
 3294 014e 6D4B     		ldr	r3, .L231+16
 3295 0150 1870     		strb	r0, [r3]
 901:VS4210/monitor.c **** 	 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3296              		.loc 1 901 0
 3297 0152 A068     		ldr	r0, [r4, #8]
 3298 0154 FFF7FEFF 		bl	Asc2Bin
 3299              	.LVL447:
 3300 0158 6B4B     		ldr	r3, .L231+20
 3301 015a 1870     		strb	r0, [r3]
 902:VS4210/monitor.c **** 	}
 3302              		.loc 1 902 0
 3303 015c 2846     		mov	r0, r5
 3304 015e FFF7FEFF 		bl	Asc2Bin
 3305              	.LVL448:
 3306 0162 3246     		mov	r2, r6
 3307 0164 0146     		mov	r1, r0
 3308 0166 6C48     		ldr	r0, .L231+36
 3309 0168 FFF7FEFF 		bl	Printf
 3310              	.LVL449:
 3311 016c 2DE0     		b	.L152
 3312              	.LVL450:
ARM GAS  /tmp/cco5PJAb.s 			page 109


 3313              	.L217:
 907:VS4210/monitor.c **** 	HDMIRX_WriteI2C_Byte( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );	
 3314              		.loc 1 907 0
 3315 016e 6B4B     		ldr	r3, .L231+40
 3316 0170 0022     		movs	r2, #0
 3317 0172 1A70     		strb	r2, [r3]
 908:VS4210/monitor.c **** 	ret= HDMIRX_ReadI2C_Byte(Asc2Bin(argv[1]));		
 3318              		.loc 1 908 0
 3319 0174 5F4C     		ldr	r4, .L231
 3320 0176 6068     		ldr	r0, [r4, #4]
 3321 0178 FFF7FEFF 		bl	Asc2Bin
 3322              	.LVL451:
 3323 017c 0546     		mov	r5, r0
 3324 017e A068     		ldr	r0, [r4, #8]
 3325 0180 FFF7FEFF 		bl	Asc2Bin
 3326              	.LVL452:
 3327 0184 0146     		mov	r1, r0
 3328 0186 2846     		mov	r0, r5
 3329 0188 FFF7FEFF 		bl	HDMIRX_WriteI2C_Byte
 3330              	.LVL453:
 909:VS4210/monitor.c **** 	MonIndex=Asc2Bin(argv[1]);
 3331              		.loc 1 909 0
 3332 018c 6068     		ldr	r0, [r4, #4]
 3333 018e FFF7FEFF 		bl	Asc2Bin
 3334              	.LVL454:
 3335 0192 FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 3336              	.LVL455:
 3337 0196 0646     		mov	r6, r0
 3338              	.LVL456:
 910:VS4210/monitor.c **** 	MonWdata=Asc2Bin(argv[2]);
 3339              		.loc 1 910 0
 3340 0198 6568     		ldr	r5, [r4, #4]
 3341 019a 2846     		mov	r0, r5
 3342 019c FFF7FEFF 		bl	Asc2Bin
 3343              	.LVL457:
 3344 01a0 584B     		ldr	r3, .L231+16
 3345 01a2 1870     		strb	r0, [r3]
 911:VS4210/monitor.c **** 	 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3346              		.loc 1 911 0
 3347 01a4 A068     		ldr	r0, [r4, #8]
 3348 01a6 FFF7FEFF 		bl	Asc2Bin
 3349              	.LVL458:
 3350 01aa 574B     		ldr	r3, .L231+20
 3351 01ac 1870     		strb	r0, [r3]
 912:VS4210/monitor.c **** 	}
 3352              		.loc 1 912 0
 3353 01ae 2846     		mov	r0, r5
 3354 01b0 FFF7FEFF 		bl	Asc2Bin
 3355              	.LVL459:
 3356 01b4 3246     		mov	r2, r6
 3357 01b6 0146     		mov	r1, r0
 3358 01b8 5948     		ldr	r0, .L231+44
 3359 01ba FFF7FEFF 		bl	Printf
 3360              	.LVL460:
 3361 01be 04E0     		b	.L152
 3362              	.LVL461:
 3363              	.L150:
ARM GAS  /tmp/cco5PJAb.s 			page 110


 939:VS4210/monitor.c **** 		indirect=0;
 3364              		.loc 1 939 0
 3365 01c0 5849     		ldr	r1, .L231+48
 3366 01c2 2046     		mov	r0, r4
 3367 01c4 FFF7FEFF 		bl	stricmp
 3368              	.LVL462:
 3369 01c8 10B9     		cbnz	r0, .L218
 3370              	.L152:
1953:VS4210/monitor.c **** 
 3371              		.loc 1 1953 0
 3372 01ca FFF7FEFF 		bl	Prompt
 3373              	.LVL463:
 3374 01ce 1BE7     		b	.L148
 3375              	.L218:
 954:VS4210/monitor.c **** 		//MonReadI2C();
 3376              		.loc 1 954 0
 3377 01d0 5549     		ldr	r1, .L231+52
 3378 01d2 2046     		mov	r0, r4
 3379 01d4 FFF7FEFF 		bl	stricmp
 3380              	.LVL464:
 3381 01d8 0028     		cmp	r0, #0
 3382 01da 40F0AD80 		bne	.L157
 962:VS4210/monitor.c **** 		{
 3383              		.loc 1 962 0
 3384 01de 474B     		ldr	r3, .L231+8
 3385 01e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3386 01e2 A02B     		cmp	r3, #160
 3387 01e4 0BD0     		beq	.L219
 969:VS4210/monitor.c **** 		{
 3388              		.loc 1 969 0
 3389 01e6 402B     		cmp	r3, #64
 3390 01e8 21D0     		beq	.L220
 976:VS4210/monitor.c **** 		{
 3391              		.loc 1 976 0
 3392 01ea 122B     		cmp	r3, #18
 3393 01ec 37D0     		beq	.L221
 995:VS4210/monitor.c **** 		{	
 3394              		.loc 1 995 0
 3395 01ee 882B     		cmp	r3, #136
 3396 01f0 4DD0     		beq	.L222
1002:VS4210/monitor.c **** 			{
 3397              		.loc 1 1002 0
 3398 01f2 902B     		cmp	r3, #144
 3399 01f4 63D0     		beq	.L223
1012:VS4210/monitor.c **** 		}
 3400              		.loc 1 1012 0
 3401 01f6 4248     		ldr	r0, .L231+12
 3402 01f8 FFF7FEFF 		bl	Printf
 3403              	.LVL465:
 3404 01fc E5E7     		b	.L152
 3405              	.L219:
 964:VS4210/monitor.c **** 		   MonIndex=Asc2Bin(argv[1]);
 3406              		.loc 1 964 0
 3407 01fe 3D4D     		ldr	r5, .L231
 3408 0200 6868     		ldr	r0, [r5, #4]
 3409 0202 FFF7FEFF 		bl	Asc2Bin
 3410              	.LVL466:
ARM GAS  /tmp/cco5PJAb.s 			page 111


 3411 0206 FFF7FEFF 		bl	ReadEEP
 3412              	.LVL467:
 3413 020a 0446     		mov	r4, r0
 3414              	.LVL468:
 965:VS4210/monitor.c **** 		   MonWdata=ret;
 3415              		.loc 1 965 0
 3416 020c 6D68     		ldr	r5, [r5, #4]
 3417 020e 2846     		mov	r0, r5
 3418 0210 FFF7FEFF 		bl	Asc2Bin
 3419              	.LVL469:
 3420 0214 3B4B     		ldr	r3, .L231+16
 3421 0216 1870     		strb	r0, [r3]
 966:VS4210/monitor.c **** 		Printf("\r\nEEPROM  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3422              		.loc 1 966 0
 3423 0218 3B4B     		ldr	r3, .L231+20
 3424 021a 1C70     		strb	r4, [r3]
 967:VS4210/monitor.c **** 		}
 3425              		.loc 1 967 0
 3426 021c 2846     		mov	r0, r5
 3427 021e FFF7FEFF 		bl	Asc2Bin
 3428              	.LVL470:
 3429 0222 2246     		mov	r2, r4
 3430 0224 0146     		mov	r1, r0
 3431 0226 4148     		ldr	r0, .L231+56
 3432 0228 FFF7FEFF 		bl	Printf
 3433              	.LVL471:
 3434 022c CDE7     		b	.L152
 3435              	.LVL472:
 3436              	.L220:
 971:VS4210/monitor.c **** 		 MonIndex=Asc2Bin(argv[1]);
 3437              		.loc 1 971 0
 3438 022e 314D     		ldr	r5, .L231
 3439 0230 6868     		ldr	r0, [r5, #4]
 3440 0232 FFF7FEFF 		bl	Asc2Bin
 3441              	.LVL473:
 3442 0236 FFF7FEFF 		bl	VXISI2CRead
 3443              	.LVL474:
 3444 023a 0446     		mov	r4, r0
 3445              	.LVL475:
 972:VS4210/monitor.c **** 		 MonWdata=ret;
 3446              		.loc 1 972 0
 3447 023c 6D68     		ldr	r5, [r5, #4]
 3448 023e 2846     		mov	r0, r5
 3449 0240 FFF7FEFF 		bl	Asc2Bin
 3450              	.LVL476:
 3451 0244 2F4B     		ldr	r3, .L231+16
 3452 0246 1870     		strb	r0, [r3]
 973:VS4210/monitor.c **** 		 Printf("\r\nVS4210  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3453              		.loc 1 973 0
 3454 0248 2F4B     		ldr	r3, .L231+20
 3455 024a 1C70     		strb	r4, [r3]
 974:VS4210/monitor.c **** 		}
 3456              		.loc 1 974 0
 3457 024c 2846     		mov	r0, r5
 3458 024e FFF7FEFF 		bl	Asc2Bin
 3459              	.LVL477:
 3460 0252 2246     		mov	r2, r4
ARM GAS  /tmp/cco5PJAb.s 			page 112


 3461 0254 0146     		mov	r1, r0
 3462 0256 3648     		ldr	r0, .L231+60
 3463 0258 FFF7FEFF 		bl	Printf
 3464              	.LVL478:
 3465 025c B5E7     		b	.L152
 3466              	.LVL479:
 3467              	.L221:
 978:VS4210/monitor.c **** 		 MonIndex=Asc2Bin(argv[1]);
 3468              		.loc 1 978 0
 3469 025e 254D     		ldr	r5, .L231
 3470 0260 6868     		ldr	r0, [r5, #4]
 3471 0262 FFF7FEFF 		bl	Asc2Bin
 3472              	.LVL480:
 3473 0266 FFF7FEFF 		bl	VS8812Read
 3474              	.LVL481:
 3475 026a 0446     		mov	r4, r0
 3476              	.LVL482:
 979:VS4210/monitor.c **** 		 MonWdata=ret;
 3477              		.loc 1 979 0
 3478 026c 6D68     		ldr	r5, [r5, #4]
 3479 026e 2846     		mov	r0, r5
 3480 0270 FFF7FEFF 		bl	Asc2Bin
 3481              	.LVL483:
 3482 0274 234B     		ldr	r3, .L231+16
 3483 0276 1870     		strb	r0, [r3]
 980:VS4210/monitor.c **** 		 Printf("\r\nVS8812  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3484              		.loc 1 980 0
 3485 0278 234B     		ldr	r3, .L231+20
 3486 027a 1C70     		strb	r4, [r3]
 981:VS4210/monitor.c **** 		}
 3487              		.loc 1 981 0
 3488 027c 2846     		mov	r0, r5
 3489 027e FFF7FEFF 		bl	Asc2Bin
 3490              	.LVL484:
 3491 0282 2246     		mov	r2, r4
 3492 0284 0146     		mov	r1, r0
 3493 0286 2B48     		ldr	r0, .L231+64
 3494 0288 FFF7FEFF 		bl	Printf
 3495              	.LVL485:
 3496 028c 9DE7     		b	.L152
 3497              	.LVL486:
 3498              	.L222:
 997:VS4210/monitor.c **** 		MonIndex=Asc2Bin(argv[1]);
 3499              		.loc 1 997 0
 3500 028e 194D     		ldr	r5, .L231
 3501 0290 6868     		ldr	r0, [r5, #4]
 3502 0292 FFF7FEFF 		bl	Asc2Bin
 3503              	.LVL487:
 3504 0296 FFF7FEFF 		bl	tp28xx_byte_read
 3505              	.LVL488:
 3506 029a 0446     		mov	r4, r0
 3507              	.LVL489:
 998:VS4210/monitor.c **** 		MonWdata=ret;
 3508              		.loc 1 998 0
 3509 029c 6D68     		ldr	r5, [r5, #4]
 3510 029e 2846     		mov	r0, r5
 3511 02a0 FFF7FEFF 		bl	Asc2Bin
ARM GAS  /tmp/cco5PJAb.s 			page 113


 3512              	.LVL490:
 3513 02a4 174B     		ldr	r3, .L231+16
 3514 02a6 1870     		strb	r0, [r3]
 999:VS4210/monitor.c **** 		 Printf("\r\nTP2824  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3515              		.loc 1 999 0
 3516 02a8 174B     		ldr	r3, .L231+20
 3517 02aa 1C70     		strb	r4, [r3]
1000:VS4210/monitor.c **** 		}
 3518              		.loc 1 1000 0
 3519 02ac 2846     		mov	r0, r5
 3520 02ae FFF7FEFF 		bl	Asc2Bin
 3521              	.LVL491:
 3522 02b2 2246     		mov	r2, r4
 3523 02b4 0146     		mov	r1, r0
 3524 02b6 1848     		ldr	r0, .L231+36
 3525 02b8 FFF7FEFF 		bl	Printf
 3526              	.LVL492:
 3527 02bc 85E7     		b	.L152
 3528              	.LVL493:
 3529              	.L223:
1004:VS4210/monitor.c **** 			ret= HDMIRX_ReadI2C_Byte(Asc2Bin(argv[1]));	  
 3530              		.loc 1 1004 0
 3531 02be 174B     		ldr	r3, .L231+40
 3532 02c0 0022     		movs	r2, #0
 3533 02c2 1A70     		strb	r2, [r3]
1005:VS4210/monitor.c **** 			 MonIndex=Asc2Bin(argv[1]);
 3534              		.loc 1 1005 0
 3535 02c4 0B4D     		ldr	r5, .L231
 3536 02c6 6868     		ldr	r0, [r5, #4]
 3537 02c8 FFF7FEFF 		bl	Asc2Bin
 3538              	.LVL494:
 3539 02cc FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 3540              	.LVL495:
 3541 02d0 0446     		mov	r4, r0
 3542              	.LVL496:
1006:VS4210/monitor.c **** 			 MonWdata=ret;
 3543              		.loc 1 1006 0
 3544 02d2 6D68     		ldr	r5, [r5, #4]
 3545 02d4 2846     		mov	r0, r5
 3546 02d6 FFF7FEFF 		bl	Asc2Bin
 3547              	.LVL497:
 3548 02da 0A4B     		ldr	r3, .L231+16
 3549 02dc 1870     		strb	r0, [r3]
1007:VS4210/monitor.c **** 			 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 3550              		.loc 1 1007 0
 3551 02de 0A4B     		ldr	r3, .L231+20
 3552 02e0 1C70     		strb	r4, [r3]
1008:VS4210/monitor.c **** 			}
 3553              		.loc 1 1008 0
 3554 02e2 2846     		mov	r0, r5
 3555 02e4 FFF7FEFF 		bl	Asc2Bin
 3556              	.LVL498:
 3557 02e8 2246     		mov	r2, r4
 3558 02ea 0146     		mov	r1, r0
 3559 02ec 0C48     		ldr	r0, .L231+44
 3560 02ee FFF7FEFF 		bl	Printf
 3561              	.LVL499:
ARM GAS  /tmp/cco5PJAb.s 			page 114


 3562 02f2 6AE7     		b	.L152
 3563              	.L232:
 3564              		.align	2
 3565              	.L231:
 3566 02f4 00000000 		.word	argv
 3567 02f8 00000000 		.word	.LC22
 3568 02fc 00000000 		.word	.LANCHOR4
 3569 0300 04000000 		.word	.LC23
 3570 0304 00000000 		.word	MonIndex
 3571 0308 00000000 		.word	MonWdata
 3572 030c 00000000 		.word	.LC4
 3573 0310 24000000 		.word	.LC5
 3574 0314 48000000 		.word	.LC6
 3575 0318 6C000000 		.word	.LC7
 3576 031c 00000000 		.word	gHDMI_Index
 3577 0320 90000000 		.word	.LC8
 3578 0324 18000000 		.word	.LC24
 3579 0328 1C000000 		.word	.LC25
 3580 032c 20000000 		.word	.LC26
 3581 0330 44000000 		.word	.LC27
 3582 0334 68000000 		.word	.LC28
 3583              	.LVL500:
 3584              	.L157:
1029:VS4210/monitor.c **** 			//MonReadI2C();
 3585              		.loc 1 1029 0
 3586 0338 FC49     		ldr	r1, .L233
 3587 033a 2046     		mov	r0, r4
 3588 033c FFF7FEFF 		bl	stricmp
 3589              	.LVL501:
 3590 0340 0028     		cmp	r0, #0
 3591 0342 40F06F82 		bne	.L163
1034:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x03));
 3592              		.loc 1 1034 0
 3593 0346 0220     		movs	r0, #2
 3594 0348 FFF7FEFF 		bl	VXISI2CRead
 3595              	.LVL502:
 3596 034c F84C     		ldr	r4, .L233+4
 3597 034e 0146     		mov	r1, r0
 3598 0350 2046     		mov	r0, r4
 3599 0352 FFF7FEFF 		bl	Printf
 3600              	.LVL503:
1035:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x04));
 3601              		.loc 1 1035 0
 3602 0356 0320     		movs	r0, #3
 3603 0358 FFF7FEFF 		bl	VXISI2CRead
 3604              	.LVL504:
 3605 035c 0146     		mov	r1, r0
 3606 035e 2046     		mov	r0, r4
 3607 0360 FFF7FEFF 		bl	Printf
 3608              	.LVL505:
1036:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x05));
 3609              		.loc 1 1036 0
 3610 0364 0420     		movs	r0, #4
 3611 0366 FFF7FEFF 		bl	VXISI2CRead
 3612              	.LVL506:
 3613 036a 0146     		mov	r1, r0
 3614 036c 2046     		mov	r0, r4
ARM GAS  /tmp/cco5PJAb.s 			page 115


 3615 036e FFF7FEFF 		bl	Printf
 3616              	.LVL507:
1037:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x06));
 3617              		.loc 1 1037 0
 3618 0372 0520     		movs	r0, #5
 3619 0374 FFF7FEFF 		bl	VXISI2CRead
 3620              	.LVL508:
 3621 0378 0146     		mov	r1, r0
 3622 037a 2046     		mov	r0, r4
 3623 037c FFF7FEFF 		bl	Printf
 3624              	.LVL509:
1038:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x07));
 3625              		.loc 1 1038 0
 3626 0380 0620     		movs	r0, #6
 3627 0382 FFF7FEFF 		bl	VXISI2CRead
 3628              	.LVL510:
 3629 0386 0146     		mov	r1, r0
 3630 0388 2046     		mov	r0, r4
 3631 038a FFF7FEFF 		bl	Printf
 3632              	.LVL511:
1039:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x08));
 3633              		.loc 1 1039 0
 3634 038e 0720     		movs	r0, #7
 3635 0390 FFF7FEFF 		bl	VXISI2CRead
 3636              	.LVL512:
 3637 0394 0146     		mov	r1, r0
 3638 0396 2046     		mov	r0, r4
 3639 0398 FFF7FEFF 		bl	Printf
 3640              	.LVL513:
1040:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x09));
 3641              		.loc 1 1040 0
 3642 039c 0820     		movs	r0, #8
 3643 039e FFF7FEFF 		bl	VXISI2CRead
 3644              	.LVL514:
 3645 03a2 0146     		mov	r1, r0
 3646 03a4 2046     		mov	r0, r4
 3647 03a6 FFF7FEFF 		bl	Printf
 3648              	.LVL515:
1041:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0A));
 3649              		.loc 1 1041 0
 3650 03aa 0920     		movs	r0, #9
 3651 03ac FFF7FEFF 		bl	VXISI2CRead
 3652              	.LVL516:
 3653 03b0 0146     		mov	r1, r0
 3654 03b2 2046     		mov	r0, r4
 3655 03b4 FFF7FEFF 		bl	Printf
 3656              	.LVL517:
1042:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0B));
 3657              		.loc 1 1042 0
 3658 03b8 0A20     		movs	r0, #10
 3659 03ba FFF7FEFF 		bl	VXISI2CRead
 3660              	.LVL518:
 3661 03be 0146     		mov	r1, r0
 3662 03c0 2046     		mov	r0, r4
 3663 03c2 FFF7FEFF 		bl	Printf
 3664              	.LVL519:
1043:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0C));
ARM GAS  /tmp/cco5PJAb.s 			page 116


 3665              		.loc 1 1043 0
 3666 03c6 0B20     		movs	r0, #11
 3667 03c8 FFF7FEFF 		bl	VXISI2CRead
 3668              	.LVL520:
 3669 03cc 0146     		mov	r1, r0
 3670 03ce 2046     		mov	r0, r4
 3671 03d0 FFF7FEFF 		bl	Printf
 3672              	.LVL521:
1044:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x0D));
 3673              		.loc 1 1044 0
 3674 03d4 0C20     		movs	r0, #12
 3675 03d6 FFF7FEFF 		bl	VXISI2CRead
 3676              	.LVL522:
 3677 03da 0146     		mov	r1, r0
 3678 03dc 2046     		mov	r0, r4
 3679 03de FFF7FEFF 		bl	Printf
 3680              	.LVL523:
1045:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x10));
 3681              		.loc 1 1045 0
 3682 03e2 0D20     		movs	r0, #13
 3683 03e4 FFF7FEFF 		bl	VXISI2CRead
 3684              	.LVL524:
 3685 03e8 0146     		mov	r1, r0
 3686 03ea 2046     		mov	r0, r4
 3687 03ec FFF7FEFF 		bl	Printf
 3688              	.LVL525:
1046:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x11));
 3689              		.loc 1 1046 0
 3690 03f0 1020     		movs	r0, #16
 3691 03f2 FFF7FEFF 		bl	VXISI2CRead
 3692              	.LVL526:
 3693 03f6 0146     		mov	r1, r0
 3694 03f8 2046     		mov	r0, r4
 3695 03fa FFF7FEFF 		bl	Printf
 3696              	.LVL527:
1047:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x15));
 3697              		.loc 1 1047 0
 3698 03fe 1120     		movs	r0, #17
 3699 0400 FFF7FEFF 		bl	VXISI2CRead
 3700              	.LVL528:
 3701 0404 0146     		mov	r1, r0
 3702 0406 2046     		mov	r0, r4
 3703 0408 FFF7FEFF 		bl	Printf
 3704              	.LVL529:
1048:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x16));
 3705              		.loc 1 1048 0
 3706 040c 1520     		movs	r0, #21
 3707 040e FFF7FEFF 		bl	VXISI2CRead
 3708              	.LVL530:
 3709 0412 0146     		mov	r1, r0
 3710 0414 2046     		mov	r0, r4
 3711 0416 FFF7FEFF 		bl	Printf
 3712              	.LVL531:
1049:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x17));
 3713              		.loc 1 1049 0
 3714 041a 1620     		movs	r0, #22
 3715 041c FFF7FEFF 		bl	VXISI2CRead
ARM GAS  /tmp/cco5PJAb.s 			page 117


 3716              	.LVL532:
 3717 0420 0146     		mov	r1, r0
 3718 0422 2046     		mov	r0, r4
 3719 0424 FFF7FEFF 		bl	Printf
 3720              	.LVL533:
1050:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x18));
 3721              		.loc 1 1050 0
 3722 0428 1720     		movs	r0, #23
 3723 042a FFF7FEFF 		bl	VXISI2CRead
 3724              	.LVL534:
 3725 042e 0146     		mov	r1, r0
 3726 0430 2046     		mov	r0, r4
 3727 0432 FFF7FEFF 		bl	Printf
 3728              	.LVL535:
1051:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x19));
 3729              		.loc 1 1051 0
 3730 0436 1820     		movs	r0, #24
 3731 0438 FFF7FEFF 		bl	VXISI2CRead
 3732              	.LVL536:
 3733 043c 0146     		mov	r1, r0
 3734 043e 2046     		mov	r0, r4
 3735 0440 FFF7FEFF 		bl	Printf
 3736              	.LVL537:
1052:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1A));
 3737              		.loc 1 1052 0
 3738 0444 1920     		movs	r0, #25
 3739 0446 FFF7FEFF 		bl	VXISI2CRead
 3740              	.LVL538:
 3741 044a 0146     		mov	r1, r0
 3742 044c 2046     		mov	r0, r4
 3743 044e FFF7FEFF 		bl	Printf
 3744              	.LVL539:
1053:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1C));
 3745              		.loc 1 1053 0
 3746 0452 1A20     		movs	r0, #26
 3747 0454 FFF7FEFF 		bl	VXISI2CRead
 3748              	.LVL540:
 3749 0458 0146     		mov	r1, r0
 3750 045a 2046     		mov	r0, r4
 3751 045c FFF7FEFF 		bl	Printf
 3752              	.LVL541:
1054:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1D));
 3753              		.loc 1 1054 0
 3754 0460 1C20     		movs	r0, #28
 3755 0462 FFF7FEFF 		bl	VXISI2CRead
 3756              	.LVL542:
 3757 0466 0146     		mov	r1, r0
 3758 0468 2046     		mov	r0, r4
 3759 046a FFF7FEFF 		bl	Printf
 3760              	.LVL543:
1055:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x1E));
 3761              		.loc 1 1055 0
 3762 046e 1D20     		movs	r0, #29
 3763 0470 FFF7FEFF 		bl	VXISI2CRead
 3764              	.LVL544:
 3765 0474 0146     		mov	r1, r0
 3766 0476 2046     		mov	r0, r4
ARM GAS  /tmp/cco5PJAb.s 			page 118


 3767 0478 FFF7FEFF 		bl	Printf
 3768              	.LVL545:
1056:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x28));
 3769              		.loc 1 1056 0
 3770 047c 1E20     		movs	r0, #30
 3771 047e FFF7FEFF 		bl	VXISI2CRead
 3772              	.LVL546:
 3773 0482 0146     		mov	r1, r0
 3774 0484 2046     		mov	r0, r4
 3775 0486 FFF7FEFF 		bl	Printf
 3776              	.LVL547:
1057:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x29));
 3777              		.loc 1 1057 0
 3778 048a 2820     		movs	r0, #40
 3779 048c FFF7FEFF 		bl	VXISI2CRead
 3780              	.LVL548:
 3781 0490 0146     		mov	r1, r0
 3782 0492 2046     		mov	r0, r4
 3783 0494 FFF7FEFF 		bl	Printf
 3784              	.LVL549:
1058:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2A));
 3785              		.loc 1 1058 0
 3786 0498 2920     		movs	r0, #41
 3787 049a FFF7FEFF 		bl	VXISI2CRead
 3788              	.LVL550:
 3789 049e 0146     		mov	r1, r0
 3790 04a0 2046     		mov	r0, r4
 3791 04a2 FFF7FEFF 		bl	Printf
 3792              	.LVL551:
1059:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2B));
 3793              		.loc 1 1059 0
 3794 04a6 2A20     		movs	r0, #42
 3795 04a8 FFF7FEFF 		bl	VXISI2CRead
 3796              	.LVL552:
 3797 04ac 0146     		mov	r1, r0
 3798 04ae 2046     		mov	r0, r4
 3799 04b0 FFF7FEFF 		bl	Printf
 3800              	.LVL553:
1060:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2C));
 3801              		.loc 1 1060 0
 3802 04b4 2B20     		movs	r0, #43
 3803 04b6 FFF7FEFF 		bl	VXISI2CRead
 3804              	.LVL554:
 3805 04ba 0146     		mov	r1, r0
 3806 04bc 2046     		mov	r0, r4
 3807 04be FFF7FEFF 		bl	Printf
 3808              	.LVL555:
1061:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x2D));
 3809              		.loc 1 1061 0
 3810 04c2 2C20     		movs	r0, #44
 3811 04c4 FFF7FEFF 		bl	VXISI2CRead
 3812              	.LVL556:
 3813 04c8 0146     		mov	r1, r0
 3814 04ca 2046     		mov	r0, r4
 3815 04cc FFF7FEFF 		bl	Printf
 3816              	.LVL557:
1062:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x74));
ARM GAS  /tmp/cco5PJAb.s 			page 119


 3817              		.loc 1 1062 0
 3818 04d0 2D20     		movs	r0, #45
 3819 04d2 FFF7FEFF 		bl	VXISI2CRead
 3820              	.LVL558:
 3821 04d6 0146     		mov	r1, r0
 3822 04d8 2046     		mov	r0, r4
 3823 04da FFF7FEFF 		bl	Printf
 3824              	.LVL559:
1063:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x7E));
 3825              		.loc 1 1063 0
 3826 04de 7420     		movs	r0, #116
 3827 04e0 FFF7FEFF 		bl	VXISI2CRead
 3828              	.LVL560:
 3829 04e4 0146     		mov	r1, r0
 3830 04e6 2046     		mov	r0, r4
 3831 04e8 FFF7FEFF 		bl	Printf
 3832              	.LVL561:
1064:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x7F));
 3833              		.loc 1 1064 0
 3834 04ec 7E20     		movs	r0, #126
 3835 04ee FFF7FEFF 		bl	VXISI2CRead
 3836              	.LVL562:
 3837 04f2 0146     		mov	r1, r0
 3838 04f4 2046     		mov	r0, r4
 3839 04f6 FFF7FEFF 		bl	Printf
 3840              	.LVL563:
1065:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x80));
 3841              		.loc 1 1065 0
 3842 04fa 7F20     		movs	r0, #127
 3843 04fc FFF7FEFF 		bl	VXISI2CRead
 3844              	.LVL564:
 3845 0500 0146     		mov	r1, r0
 3846 0502 2046     		mov	r0, r4
 3847 0504 FFF7FEFF 		bl	Printf
 3848              	.LVL565:
1066:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x81));
 3849              		.loc 1 1066 0
 3850 0508 8020     		movs	r0, #128
 3851 050a FFF7FEFF 		bl	VXISI2CRead
 3852              	.LVL566:
 3853 050e 0146     		mov	r1, r0
 3854 0510 2046     		mov	r0, r4
 3855 0512 FFF7FEFF 		bl	Printf
 3856              	.LVL567:
1067:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x82));
 3857              		.loc 1 1067 0
 3858 0516 8120     		movs	r0, #129
 3859 0518 FFF7FEFF 		bl	VXISI2CRead
 3860              	.LVL568:
 3861 051c 0146     		mov	r1, r0
 3862 051e 2046     		mov	r0, r4
 3863 0520 FFF7FEFF 		bl	Printf
 3864              	.LVL569:
1068:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x83));
 3865              		.loc 1 1068 0
 3866 0524 8220     		movs	r0, #130
 3867 0526 FFF7FEFF 		bl	VXISI2CRead
ARM GAS  /tmp/cco5PJAb.s 			page 120


 3868              	.LVL570:
 3869 052a 0146     		mov	r1, r0
 3870 052c 2046     		mov	r0, r4
 3871 052e FFF7FEFF 		bl	Printf
 3872              	.LVL571:
1069:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x84));
 3873              		.loc 1 1069 0
 3874 0532 8320     		movs	r0, #131
 3875 0534 FFF7FEFF 		bl	VXISI2CRead
 3876              	.LVL572:
 3877 0538 0146     		mov	r1, r0
 3878 053a 2046     		mov	r0, r4
 3879 053c FFF7FEFF 		bl	Printf
 3880              	.LVL573:
1070:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x85));
 3881              		.loc 1 1070 0
 3882 0540 8420     		movs	r0, #132
 3883 0542 FFF7FEFF 		bl	VXISI2CRead
 3884              	.LVL574:
 3885 0546 0146     		mov	r1, r0
 3886 0548 2046     		mov	r0, r4
 3887 054a FFF7FEFF 		bl	Printf
 3888              	.LVL575:
1071:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x86));
 3889              		.loc 1 1071 0
 3890 054e 8520     		movs	r0, #133
 3891 0550 FFF7FEFF 		bl	VXISI2CRead
 3892              	.LVL576:
 3893 0554 0146     		mov	r1, r0
 3894 0556 2046     		mov	r0, r4
 3895 0558 FFF7FEFF 		bl	Printf
 3896              	.LVL577:
1072:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x87));
 3897              		.loc 1 1072 0
 3898 055c 8620     		movs	r0, #134
 3899 055e FFF7FEFF 		bl	VXISI2CRead
 3900              	.LVL578:
 3901 0562 0146     		mov	r1, r0
 3902 0564 2046     		mov	r0, r4
 3903 0566 FFF7FEFF 		bl	Printf
 3904              	.LVL579:
1073:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x88));
 3905              		.loc 1 1073 0
 3906 056a 8720     		movs	r0, #135
 3907 056c FFF7FEFF 		bl	VXISI2CRead
 3908              	.LVL580:
 3909 0570 0146     		mov	r1, r0
 3910 0572 2046     		mov	r0, r4
 3911 0574 FFF7FEFF 		bl	Printf
 3912              	.LVL581:
1074:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x89));
 3913              		.loc 1 1074 0
 3914 0578 8820     		movs	r0, #136
 3915 057a FFF7FEFF 		bl	VXISI2CRead
 3916              	.LVL582:
 3917 057e 0146     		mov	r1, r0
 3918 0580 2046     		mov	r0, r4
ARM GAS  /tmp/cco5PJAb.s 			page 121


 3919 0582 FFF7FEFF 		bl	Printf
 3920              	.LVL583:
1075:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8A));
 3921              		.loc 1 1075 0
 3922 0586 8920     		movs	r0, #137
 3923 0588 FFF7FEFF 		bl	VXISI2CRead
 3924              	.LVL584:
 3925 058c 0146     		mov	r1, r0
 3926 058e 2046     		mov	r0, r4
 3927 0590 FFF7FEFF 		bl	Printf
 3928              	.LVL585:
1076:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8B));
 3929              		.loc 1 1076 0
 3930 0594 8A20     		movs	r0, #138
 3931 0596 FFF7FEFF 		bl	VXISI2CRead
 3932              	.LVL586:
 3933 059a 0146     		mov	r1, r0
 3934 059c 2046     		mov	r0, r4
 3935 059e FFF7FEFF 		bl	Printf
 3936              	.LVL587:
1077:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8C));
 3937              		.loc 1 1077 0
 3938 05a2 8B20     		movs	r0, #139
 3939 05a4 FFF7FEFF 		bl	VXISI2CRead
 3940              	.LVL588:
 3941 05a8 0146     		mov	r1, r0
 3942 05aa 2046     		mov	r0, r4
 3943 05ac FFF7FEFF 		bl	Printf
 3944              	.LVL589:
1078:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8D));
 3945              		.loc 1 1078 0
 3946 05b0 8C20     		movs	r0, #140
 3947 05b2 FFF7FEFF 		bl	VXISI2CRead
 3948              	.LVL590:
 3949 05b6 0146     		mov	r1, r0
 3950 05b8 2046     		mov	r0, r4
 3951 05ba FFF7FEFF 		bl	Printf
 3952              	.LVL591:
1079:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8E));
 3953              		.loc 1 1079 0
 3954 05be 8D20     		movs	r0, #141
 3955 05c0 FFF7FEFF 		bl	VXISI2CRead
 3956              	.LVL592:
 3957 05c4 0146     		mov	r1, r0
 3958 05c6 2046     		mov	r0, r4
 3959 05c8 FFF7FEFF 		bl	Printf
 3960              	.LVL593:
1080:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x8F));
 3961              		.loc 1 1080 0
 3962 05cc 8E20     		movs	r0, #142
 3963 05ce FFF7FEFF 		bl	VXISI2CRead
 3964              	.LVL594:
 3965 05d2 0146     		mov	r1, r0
 3966 05d4 2046     		mov	r0, r4
 3967 05d6 FFF7FEFF 		bl	Printf
 3968              	.LVL595:
1081:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x90));
ARM GAS  /tmp/cco5PJAb.s 			page 122


 3969              		.loc 1 1081 0
 3970 05da 8F20     		movs	r0, #143
 3971 05dc FFF7FEFF 		bl	VXISI2CRead
 3972              	.LVL596:
 3973 05e0 0146     		mov	r1, r0
 3974 05e2 2046     		mov	r0, r4
 3975 05e4 FFF7FEFF 		bl	Printf
 3976              	.LVL597:
1082:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x91));
 3977              		.loc 1 1082 0
 3978 05e8 9020     		movs	r0, #144
 3979 05ea FFF7FEFF 		bl	VXISI2CRead
 3980              	.LVL598:
 3981 05ee 0146     		mov	r1, r0
 3982 05f0 2046     		mov	r0, r4
 3983 05f2 FFF7FEFF 		bl	Printf
 3984              	.LVL599:
1083:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x92));
 3985              		.loc 1 1083 0
 3986 05f6 9120     		movs	r0, #145
 3987 05f8 FFF7FEFF 		bl	VXISI2CRead
 3988              	.LVL600:
 3989 05fc 0146     		mov	r1, r0
 3990 05fe 2046     		mov	r0, r4
 3991 0600 FFF7FEFF 		bl	Printf
 3992              	.LVL601:
1084:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x93));
 3993              		.loc 1 1084 0
 3994 0604 9220     		movs	r0, #146
 3995 0606 FFF7FEFF 		bl	VXISI2CRead
 3996              	.LVL602:
 3997 060a 0146     		mov	r1, r0
 3998 060c 2046     		mov	r0, r4
 3999 060e FFF7FEFF 		bl	Printf
 4000              	.LVL603:
1085:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x94));
 4001              		.loc 1 1085 0
 4002 0612 9320     		movs	r0, #147
 4003 0614 FFF7FEFF 		bl	VXISI2CRead
 4004              	.LVL604:
 4005 0618 0146     		mov	r1, r0
 4006 061a 2046     		mov	r0, r4
 4007 061c FFF7FEFF 		bl	Printf
 4008              	.LVL605:
1086:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x95));
 4009              		.loc 1 1086 0
 4010 0620 9420     		movs	r0, #148
 4011 0622 FFF7FEFF 		bl	VXISI2CRead
 4012              	.LVL606:
 4013 0626 0146     		mov	r1, r0
 4014 0628 2046     		mov	r0, r4
 4015 062a FFF7FEFF 		bl	Printf
 4016              	.LVL607:
1087:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x97));
 4017              		.loc 1 1087 0
 4018 062e 9520     		movs	r0, #149
 4019 0630 FFF7FEFF 		bl	VXISI2CRead
ARM GAS  /tmp/cco5PJAb.s 			page 123


 4020              	.LVL608:
 4021 0634 0146     		mov	r1, r0
 4022 0636 2046     		mov	r0, r4
 4023 0638 FFF7FEFF 		bl	Printf
 4024              	.LVL609:
1088:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x98));
 4025              		.loc 1 1088 0
 4026 063c 9720     		movs	r0, #151
 4027 063e FFF7FEFF 		bl	VXISI2CRead
 4028              	.LVL610:
 4029 0642 0146     		mov	r1, r0
 4030 0644 2046     		mov	r0, r4
 4031 0646 FFF7FEFF 		bl	Printf
 4032              	.LVL611:
1089:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x99));
 4033              		.loc 1 1089 0
 4034 064a 9820     		movs	r0, #152
 4035 064c FFF7FEFF 		bl	VXISI2CRead
 4036              	.LVL612:
 4037 0650 0146     		mov	r1, r0
 4038 0652 2046     		mov	r0, r4
 4039 0654 FFF7FEFF 		bl	Printf
 4040              	.LVL613:
1090:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9B));
 4041              		.loc 1 1090 0
 4042 0658 9920     		movs	r0, #153
 4043 065a FFF7FEFF 		bl	VXISI2CRead
 4044              	.LVL614:
 4045 065e 0146     		mov	r1, r0
 4046 0660 2046     		mov	r0, r4
 4047 0662 FFF7FEFF 		bl	Printf
 4048              	.LVL615:
1091:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9C));
 4049              		.loc 1 1091 0
 4050 0666 9B20     		movs	r0, #155
 4051 0668 FFF7FEFF 		bl	VXISI2CRead
 4052              	.LVL616:
 4053 066c 0146     		mov	r1, r0
 4054 066e 2046     		mov	r0, r4
 4055 0670 FFF7FEFF 		bl	Printf
 4056              	.LVL617:
1092:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9D));
 4057              		.loc 1 1092 0
 4058 0674 9C20     		movs	r0, #156
 4059 0676 FFF7FEFF 		bl	VXISI2CRead
 4060              	.LVL618:
 4061 067a 0146     		mov	r1, r0
 4062 067c 2046     		mov	r0, r4
 4063 067e FFF7FEFF 		bl	Printf
 4064              	.LVL619:
1093:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9E));
 4065              		.loc 1 1093 0
 4066 0682 9D20     		movs	r0, #157
 4067 0684 FFF7FEFF 		bl	VXISI2CRead
 4068              	.LVL620:
 4069 0688 0146     		mov	r1, r0
 4070 068a 2046     		mov	r0, r4
ARM GAS  /tmp/cco5PJAb.s 			page 124


 4071 068c FFF7FEFF 		bl	Printf
 4072              	.LVL621:
1094:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0x9F));
 4073              		.loc 1 1094 0
 4074 0690 9E20     		movs	r0, #158
 4075 0692 FFF7FEFF 		bl	VXISI2CRead
 4076              	.LVL622:
 4077 0696 0146     		mov	r1, r0
 4078 0698 2046     		mov	r0, r4
 4079 069a FFF7FEFF 		bl	Printf
 4080              	.LVL623:
1095:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA0));
 4081              		.loc 1 1095 0
 4082 069e 9F20     		movs	r0, #159
 4083 06a0 FFF7FEFF 		bl	VXISI2CRead
 4084              	.LVL624:
 4085 06a4 0146     		mov	r1, r0
 4086 06a6 2046     		mov	r0, r4
 4087 06a8 FFF7FEFF 		bl	Printf
 4088              	.LVL625:
1096:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA1));
 4089              		.loc 1 1096 0
 4090 06ac A020     		movs	r0, #160
 4091 06ae FFF7FEFF 		bl	VXISI2CRead
 4092              	.LVL626:
 4093 06b2 0146     		mov	r1, r0
 4094 06b4 2046     		mov	r0, r4
 4095 06b6 FFF7FEFF 		bl	Printf
 4096              	.LVL627:
1097:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA2));
 4097              		.loc 1 1097 0
 4098 06ba A120     		movs	r0, #161
 4099 06bc FFF7FEFF 		bl	VXISI2CRead
 4100              	.LVL628:
 4101 06c0 0146     		mov	r1, r0
 4102 06c2 2046     		mov	r0, r4
 4103 06c4 FFF7FEFF 		bl	Printf
 4104              	.LVL629:
1098:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA3));
 4105              		.loc 1 1098 0
 4106 06c8 A220     		movs	r0, #162
 4107 06ca FFF7FEFF 		bl	VXISI2CRead
 4108              	.LVL630:
 4109 06ce 0146     		mov	r1, r0
 4110 06d0 2046     		mov	r0, r4
 4111 06d2 FFF7FEFF 		bl	Printf
 4112              	.LVL631:
1099:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA4));
 4113              		.loc 1 1099 0
 4114 06d6 A320     		movs	r0, #163
 4115 06d8 FFF7FEFF 		bl	VXISI2CRead
 4116              	.LVL632:
 4117 06dc 0146     		mov	r1, r0
 4118 06de 2046     		mov	r0, r4
 4119 06e0 FFF7FEFF 		bl	Printf
 4120              	.LVL633:
1100:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA5));
ARM GAS  /tmp/cco5PJAb.s 			page 125


 4121              		.loc 1 1100 0
 4122 06e4 A420     		movs	r0, #164
 4123 06e6 FFF7FEFF 		bl	VXISI2CRead
 4124              	.LVL634:
 4125 06ea 0146     		mov	r1, r0
 4126 06ec 2046     		mov	r0, r4
 4127 06ee FFF7FEFF 		bl	Printf
 4128              	.LVL635:
1101:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA6));
 4129              		.loc 1 1101 0
 4130 06f2 A520     		movs	r0, #165
 4131 06f4 FFF7FEFF 		bl	VXISI2CRead
 4132              	.LVL636:
 4133 06f8 0146     		mov	r1, r0
 4134 06fa 2046     		mov	r0, r4
 4135 06fc FFF7FEFF 		bl	Printf
 4136              	.LVL637:
1102:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA7));
 4137              		.loc 1 1102 0
 4138 0700 A620     		movs	r0, #166
 4139 0702 FFF7FEFF 		bl	VXISI2CRead
 4140              	.LVL638:
 4141 0706 0146     		mov	r1, r0
 4142 0708 2046     		mov	r0, r4
 4143 070a FFF7FEFF 		bl	Printf
 4144              	.LVL639:
1103:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA8));
 4145              		.loc 1 1103 0
 4146 070e A720     		movs	r0, #167
 4147 0710 FFF7FEFF 		bl	VXISI2CRead
 4148              	.LVL640:
 4149 0714 0146     		mov	r1, r0
 4150 0716 2046     		mov	r0, r4
 4151 0718 FFF7FEFF 		bl	Printf
 4152              	.LVL641:
1104:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xA9));
 4153              		.loc 1 1104 0
 4154 071c A820     		movs	r0, #168
 4155 071e FFF7FEFF 		bl	VXISI2CRead
 4156              	.LVL642:
 4157 0722 0146     		mov	r1, r0
 4158 0724 2046     		mov	r0, r4
 4159 0726 FFF7FEFF 		bl	Printf
 4160              	.LVL643:
 4161 072a 03E0     		b	.L234
 4162              	.L235:
 4163              		.align	2
 4164              	.L233:
 4165 072c 8C000000 		.word	.LC29
 4166 0730 90000000 		.word	.LC30
 4167              	.L234:
1105:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAA));
 4168              		.loc 1 1105 0
 4169 0734 A920     		movs	r0, #169
 4170 0736 FFF7FEFF 		bl	VXISI2CRead
 4171              	.LVL644:
 4172 073a 0146     		mov	r1, r0
ARM GAS  /tmp/cco5PJAb.s 			page 126


 4173 073c 2046     		mov	r0, r4
 4174 073e FFF7FEFF 		bl	Printf
 4175              	.LVL645:
1106:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAB));
 4176              		.loc 1 1106 0
 4177 0742 AA20     		movs	r0, #170
 4178 0744 FFF7FEFF 		bl	VXISI2CRead
 4179              	.LVL646:
 4180 0748 0146     		mov	r1, r0
 4181 074a 2046     		mov	r0, r4
 4182 074c FFF7FEFF 		bl	Printf
 4183              	.LVL647:
1107:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xAF));
 4184              		.loc 1 1107 0
 4185 0750 AB20     		movs	r0, #171
 4186 0752 FFF7FEFF 		bl	VXISI2CRead
 4187              	.LVL648:
 4188 0756 0146     		mov	r1, r0
 4189 0758 2046     		mov	r0, r4
 4190 075a FFF7FEFF 		bl	Printf
 4191              	.LVL649:
1108:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xC0));
 4192              		.loc 1 1108 0
 4193 075e AF20     		movs	r0, #175
 4194 0760 FFF7FEFF 		bl	VXISI2CRead
 4195              	.LVL650:
 4196 0764 0146     		mov	r1, r0
 4197 0766 2046     		mov	r0, r4
 4198 0768 FFF7FEFF 		bl	Printf
 4199              	.LVL651:
1109:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD6));
 4200              		.loc 1 1109 0
 4201 076c C020     		movs	r0, #192
 4202 076e FFF7FEFF 		bl	VXISI2CRead
 4203              	.LVL652:
 4204 0772 0146     		mov	r1, r0
 4205 0774 2046     		mov	r0, r4
 4206 0776 FFF7FEFF 		bl	Printf
 4207              	.LVL653:
1110:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD7));
 4208              		.loc 1 1110 0
 4209 077a D620     		movs	r0, #214
 4210 077c FFF7FEFF 		bl	VXISI2CRead
 4211              	.LVL654:
 4212 0780 0146     		mov	r1, r0
 4213 0782 2046     		mov	r0, r4
 4214 0784 FFF7FEFF 		bl	Printf
 4215              	.LVL655:
1111:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xD8));
 4216              		.loc 1 1111 0
 4217 0788 D720     		movs	r0, #215
 4218 078a FFF7FEFF 		bl	VXISI2CRead
 4219              	.LVL656:
 4220 078e 0146     		mov	r1, r0
 4221 0790 2046     		mov	r0, r4
 4222 0792 FFF7FEFF 		bl	Printf
 4223              	.LVL657:
ARM GAS  /tmp/cco5PJAb.s 			page 127


1112:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE6));
 4224              		.loc 1 1112 0
 4225 0796 D820     		movs	r0, #216
 4226 0798 FFF7FEFF 		bl	VXISI2CRead
 4227              	.LVL658:
 4228 079c 0146     		mov	r1, r0
 4229 079e 2046     		mov	r0, r4
 4230 07a0 FFF7FEFF 		bl	Printf
 4231              	.LVL659:
1113:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE7));
 4232              		.loc 1 1113 0
 4233 07a4 E620     		movs	r0, #230
 4234 07a6 FFF7FEFF 		bl	VXISI2CRead
 4235              	.LVL660:
 4236 07aa 0146     		mov	r1, r0
 4237 07ac 2046     		mov	r0, r4
 4238 07ae FFF7FEFF 		bl	Printf
 4239              	.LVL661:
1114:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE8));
 4240              		.loc 1 1114 0
 4241 07b2 E720     		movs	r0, #231
 4242 07b4 FFF7FEFF 		bl	VXISI2CRead
 4243              	.LVL662:
 4244 07b8 0146     		mov	r1, r0
 4245 07ba 2046     		mov	r0, r4
 4246 07bc FFF7FEFF 		bl	Printf
 4247              	.LVL663:
1115:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xE9));
 4248              		.loc 1 1115 0
 4249 07c0 E820     		movs	r0, #232
 4250 07c2 FFF7FEFF 		bl	VXISI2CRead
 4251              	.LVL664:
 4252 07c6 0146     		mov	r1, r0
 4253 07c8 2046     		mov	r0, r4
 4254 07ca FFF7FEFF 		bl	Printf
 4255              	.LVL665:
1116:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEA));
 4256              		.loc 1 1116 0
 4257 07ce E920     		movs	r0, #233
 4258 07d0 FFF7FEFF 		bl	VXISI2CRead
 4259              	.LVL666:
 4260 07d4 0146     		mov	r1, r0
 4261 07d6 2046     		mov	r0, r4
 4262 07d8 FFF7FEFF 		bl	Printf
 4263              	.LVL667:
1117:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEB));
 4264              		.loc 1 1117 0
 4265 07dc EA20     		movs	r0, #234
 4266 07de FFF7FEFF 		bl	VXISI2CRead
 4267              	.LVL668:
 4268 07e2 0146     		mov	r1, r0
 4269 07e4 2046     		mov	r0, r4
 4270 07e6 FFF7FEFF 		bl	Printf
 4271              	.LVL669:
1118:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEC));
 4272              		.loc 1 1118 0
 4273 07ea EB20     		movs	r0, #235
ARM GAS  /tmp/cco5PJAb.s 			page 128


 4274 07ec FFF7FEFF 		bl	VXISI2CRead
 4275              	.LVL670:
 4276 07f0 0146     		mov	r1, r0
 4277 07f2 2046     		mov	r0, r4
 4278 07f4 FFF7FEFF 		bl	Printf
 4279              	.LVL671:
1119:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xED));
 4280              		.loc 1 1119 0
 4281 07f8 EC20     		movs	r0, #236
 4282 07fa FFF7FEFF 		bl	VXISI2CRead
 4283              	.LVL672:
 4284 07fe 0146     		mov	r1, r0
 4285 0800 2046     		mov	r0, r4
 4286 0802 FFF7FEFF 		bl	Printf
 4287              	.LVL673:
1120:VS4210/monitor.c **** 			Printf("\r\n40,%02x,%02x",(WORD)VXISI2CRead(0xEE));
 4288              		.loc 1 1120 0
 4289 0806 ED20     		movs	r0, #237
 4290 0808 FFF7FEFF 		bl	VXISI2CRead
 4291              	.LVL674:
 4292 080c 0146     		mov	r1, r0
 4293 080e 2046     		mov	r0, r4
 4294 0810 FFF7FEFF 		bl	Printf
 4295              	.LVL675:
1121:VS4210/monitor.c **** 
 4296              		.loc 1 1121 0
 4297 0814 EE20     		movs	r0, #238
 4298 0816 FFF7FEFF 		bl	VXISI2CRead
 4299              	.LVL676:
 4300 081a 0146     		mov	r1, r0
 4301 081c 2046     		mov	r0, r4
 4302 081e FFF7FEFF 		bl	Printf
 4303              	.LVL677:
 4304 0822 D2E4     		b	.L152
 4305              	.L163:
1124:VS4210/monitor.c **** 		    VXISI2CWrite(Asc2Bin(argv[1]), Asc2Bin(argv[2]));   
 4306              		.loc 1 1124 0
 4307 0824 AF49     		ldr	r1, .L236
 4308 0826 2046     		mov	r0, r4
 4309 0828 FFF7FEFF 		bl	stricmp
 4310              	.LVL678:
 4311 082c D0B9     		cbnz	r0, .L164
1125:VS4210/monitor.c **** 	  ret= VXISI2CRead(Asc2Bin(argv[1]));   
 4312              		.loc 1 1125 0
 4313 082e AE4C     		ldr	r4, .L236+4
 4314 0830 6068     		ldr	r0, [r4, #4]
 4315 0832 FFF7FEFF 		bl	Asc2Bin
 4316              	.LVL679:
 4317 0836 0546     		mov	r5, r0
 4318 0838 A068     		ldr	r0, [r4, #8]
 4319 083a FFF7FEFF 		bl	Asc2Bin
 4320              	.LVL680:
 4321 083e 0146     		mov	r1, r0
 4322 0840 2846     		mov	r0, r5
 4323 0842 FFF7FEFF 		bl	VXISI2CWrite
 4324              	.LVL681:
1126:VS4210/monitor.c **** 	Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);				
ARM GAS  /tmp/cco5PJAb.s 			page 129


 4325              		.loc 1 1126 0
 4326 0846 6068     		ldr	r0, [r4, #4]
 4327 0848 FFF7FEFF 		bl	Asc2Bin
 4328              	.LVL682:
 4329 084c FFF7FEFF 		bl	VXISI2CRead
 4330              	.LVL683:
 4331 0850 0546     		mov	r5, r0
 4332              	.LVL684:
1127:VS4210/monitor.c **** 		}
 4333              		.loc 1 1127 0
 4334 0852 6068     		ldr	r0, [r4, #4]
 4335 0854 FFF7FEFF 		bl	Asc2Bin
 4336              	.LVL685:
 4337 0858 2A46     		mov	r2, r5
 4338 085a 0146     		mov	r1, r0
 4339 085c A348     		ldr	r0, .L236+8
 4340 085e FFF7FEFF 		bl	Printf
 4341              	.LVL686:
 4342 0862 B2E4     		b	.L152
 4343              	.LVL687:
 4344              	.L164:
1129:VS4210/monitor.c **** 		indirect=0;
 4345              		.loc 1 1129 0
 4346 0864 A249     		ldr	r1, .L236+12
 4347 0866 2046     		mov	r0, r4
 4348 0868 FFF7FEFF 		bl	stricmp
 4349              	.LVL688:
 4350 086c 0028     		cmp	r0, #0
 4351 086e 3FF4ACAC 		beq	.L152
1133:VS4210/monitor.c **** 		 ret=Asc2Bin(argv[1]); 
 4352              		.loc 1 1133 0
 4353 0872 A049     		ldr	r1, .L236+16
 4354 0874 2046     		mov	r0, r4
 4355 0876 FFF7FEFF 		bl	stricmp
 4356              	.LVL689:
 4357 087a 60B9     		cbnz	r0, .L165
1134:VS4210/monitor.c **** 		Printf("\r\nChange I2C addr. from %02x to %02x",(WORD)Monitor_I2C,(WORD)ret);		
 4358              		.loc 1 1134 0
 4359 087c 9A4B     		ldr	r3, .L236+4
 4360 087e 5868     		ldr	r0, [r3, #4]
 4361 0880 FFF7FEFF 		bl	Asc2Bin
 4362              	.LVL690:
 4363 0884 0546     		mov	r5, r0
 4364              	.LVL691:
1135:VS4210/monitor.c **** 		Monitor_I2C=ret;
 4365              		.loc 1 1135 0
 4366 0886 9C4C     		ldr	r4, .L236+20
 4367 0888 0246     		mov	r2, r0
 4368 088a 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4369 088c 9B48     		ldr	r0, .L236+24
 4370              	.LVL692:
 4371 088e FFF7FEFF 		bl	Printf
 4372              	.LVL693:
1136:VS4210/monitor.c **** 		}
 4373              		.loc 1 1136 0
 4374 0892 2570     		strb	r5, [r4]
 4375 0894 99E4     		b	.L152
ARM GAS  /tmp/cco5PJAb.s 			page 130


 4376              	.L165:
1138:VS4210/monitor.c **** 		Monitor_flag=_FALSE;
 4377              		.loc 1 1138 0
 4378 0896 9A49     		ldr	r1, .L236+28
 4379 0898 2046     		mov	r0, r4
 4380 089a FFF7FEFF 		bl	stricmp
 4381              	.LVL694:
 4382 089e 18B9     		cbnz	r0, .L166
1139:VS4210/monitor.c **** 		}
 4383              		.loc 1 1139 0
 4384 08a0 984B     		ldr	r3, .L236+32
 4385 08a2 0022     		movs	r2, #0
 4386 08a4 1A70     		strb	r2, [r3]
 4387 08a6 90E4     		b	.L152
 4388              	.L166:
1141:VS4210/monitor.c **** 		WORD s,e;	//20201211-03
 4389              		.loc 1 1141 0
 4390 08a8 9749     		ldr	r1, .L236+36
 4391 08aa 2046     		mov	r0, r4
 4392 08ac FFF7FEFF 		bl	stricmp
 4393              	.LVL695:
 4394 08b0 0028     		cmp	r0, #0
 4395 08b2 65D1     		bne	.L167
 4396              	.LBB2:
1144:VS4210/monitor.c **** 		 e=Asc2Bin(argv[2]); 
 4397              		.loc 1 1144 0
 4398 08b4 8C4D     		ldr	r5, .L236+4
 4399 08b6 6868     		ldr	r0, [r5, #4]
 4400 08b8 FFF7FEFF 		bl	Asc2Bin
 4401              	.LVL696:
 4402 08bc 0446     		mov	r4, r0
 4403              	.LVL697:
1145:VS4210/monitor.c **** 
 4404              		.loc 1 1145 0
 4405 08be A868     		ldr	r0, [r5, #8]
 4406              	.LVL698:
 4407 08c0 FFF7FEFF 		bl	Asc2Bin
 4408              	.LVL699:
 4409 08c4 0546     		mov	r5, r0
 4410              	.LVL700:
1148:VS4210/monitor.c **** 			 {
 4411              		.loc 1 1148 0
 4412 08c6 8C4B     		ldr	r3, .L236+20
 4413 08c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4414 08ca A02B     		cmp	r3, #160
 4415 08cc 09D0     		beq	.L224
1152:VS4210/monitor.c **** 			 {
 4416              		.loc 1 1152 0
 4417 08ce 402B     		cmp	r3, #64
 4418 08d0 0BD0     		beq	.L225
1156:VS4210/monitor.c **** 			 {
 4419              		.loc 1 1156 0
 4420 08d2 122B     		cmp	r3, #18
 4421 08d4 0DD0     		beq	.L226
1160:VS4210/monitor.c **** 			 {
 4422              		.loc 1 1160 0
 4423 08d6 902B     		cmp	r3, #144
ARM GAS  /tmp/cco5PJAb.s 			page 131


 4424 08d8 18D1     		bne	.L178
1162:VS4210/monitor.c **** 			 }		 
 4425              		.loc 1 1162 0
 4426 08da 8C48     		ldr	r0, .L236+40
 4427              	.LVL701:
 4428 08dc FFF7FEFF 		bl	Printf
 4429              	.LVL702:
 4430 08e0 14E0     		b	.L178
 4431              	.LVL703:
 4432              	.L224:
1150:VS4210/monitor.c **** 			 }
 4433              		.loc 1 1150 0
 4434 08e2 8B48     		ldr	r0, .L236+44
 4435              	.LVL704:
 4436 08e4 FFF7FEFF 		bl	Printf
 4437              	.LVL705:
 4438 08e8 10E0     		b	.L178
 4439              	.LVL706:
 4440              	.L225:
1154:VS4210/monitor.c **** 			 }
 4441              		.loc 1 1154 0
 4442 08ea 8A48     		ldr	r0, .L236+48
 4443              	.LVL707:
 4444 08ec FFF7FEFF 		bl	Printf
 4445              	.LVL708:
 4446 08f0 0CE0     		b	.L178
 4447              	.LVL709:
 4448              	.L226:
1158:VS4210/monitor.c **** 			 }
 4449              		.loc 1 1158 0
 4450 08f2 8948     		ldr	r0, .L236+52
 4451              	.LVL710:
 4452 08f4 FFF7FEFF 		bl	Printf
 4453              	.LVL711:
 4454 08f8 08E0     		b	.L178
 4455              	.L227:
1169:VS4210/monitor.c **** 			 Printf("\r\nEEPROM  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
 4456              		.loc 1 1169 0
 4457 08fa 2046     		mov	r0, r4
 4458 08fc FFF7FEFF 		bl	ReadEEP
 4459              	.LVL712:
1170:VS4210/monitor.c **** 			 }
 4460              		.loc 1 1170 0
 4461 0900 0246     		mov	r2, r0
 4462 0902 2146     		mov	r1, r4
 4463 0904 8548     		ldr	r0, .L236+56
 4464              	.LVL713:
 4465 0906 FFF7FEFF 		bl	Printf
 4466              	.LVL714:
 4467              	.L173:
1165:VS4210/monitor.c **** {
 4468              		.loc 1 1165 0
 4469 090a 0134     		adds	r4, r4, #1
 4470              	.LVL715:
 4471              	.L178:
1165:VS4210/monitor.c **** {
 4472              		.loc 1 1165 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cco5PJAb.s 			page 132


 4473 090c AC42     		cmp	r4, r5
 4474 090e 3FF65CAC 		bhi	.L152
1167:VS4210/monitor.c **** 			 {
 4475              		.loc 1 1167 0 is_stmt 1
 4476 0912 794B     		ldr	r3, .L236+20
 4477 0914 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4478 0916 A02B     		cmp	r3, #160
 4479 0918 EFD0     		beq	.L227
1172:VS4210/monitor.c **** 			 {
 4480              		.loc 1 1172 0
 4481 091a 402B     		cmp	r3, #64
 4482 091c 11D0     		beq	.L228
1178:VS4210/monitor.c **** 			 {
 4483              		.loc 1 1178 0
 4484 091e 122B     		cmp	r3, #18
 4485 0920 18D0     		beq	.L229
1184:VS4210/monitor.c **** 					  {
 4486              		.loc 1 1184 0
 4487 0922 882B     		cmp	r3, #136
 4488 0924 1FD0     		beq	.L230
1190:VS4210/monitor.c **** 								{
 4489              		.loc 1 1190 0
 4490 0926 902B     		cmp	r3, #144
 4491 0928 26D1     		bne	.L177
1192:VS4210/monitor.c **** 							ret= HDMIRX_ReadI2C_Byte(s);	  
 4492              		.loc 1 1192 0
 4493 092a 7D4B     		ldr	r3, .L236+60
 4494 092c 0022     		movs	r2, #0
 4495 092e 1A70     		strb	r2, [r3]
1193:VS4210/monitor.c **** 								 Printf("\r\nIT66021,%02x,%02x",(WORD)s,(WORD)ret);
 4496              		.loc 1 1193 0
 4497 0930 E0B2     		uxtb	r0, r4
 4498 0932 FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 4499              	.LVL716:
1194:VS4210/monitor.c **** 								} 
 4500              		.loc 1 1194 0
 4501 0936 0246     		mov	r2, r0
 4502 0938 2146     		mov	r1, r4
 4503 093a 7A48     		ldr	r0, .L236+64
 4504              	.LVL717:
 4505 093c FFF7FEFF 		bl	Printf
 4506              	.LVL718:
 4507 0940 E3E7     		b	.L173
 4508              	.L228:
1174:VS4210/monitor.c **** 			 // Printf("\r\nVXISI2CWrite(0x%02x,0x%02x);",(WORD)s,(WORD)ret);
 4509              		.loc 1 1174 0
 4510 0942 E0B2     		uxtb	r0, r4
 4511 0944 FFF7FEFF 		bl	VXISI2CRead
 4512              	.LVL719:
1176:VS4210/monitor.c **** 			 }
 4513              		.loc 1 1176 0
 4514 0948 0246     		mov	r2, r0
 4515 094a 2146     		mov	r1, r4
 4516 094c 7648     		ldr	r0, .L236+68
 4517              	.LVL720:
 4518 094e FFF7FEFF 		bl	Printf
 4519              	.LVL721:
ARM GAS  /tmp/cco5PJAb.s 			page 133


 4520 0952 DAE7     		b	.L173
 4521              	.L229:
1180:VS4210/monitor.c **** //			  Printf("\r\nVS8812  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
 4522              		.loc 1 1180 0
 4523 0954 E0B2     		uxtb	r0, r4
 4524 0956 FFF7FEFF 		bl	VS8812Read
 4525              	.LVL722:
1182:VS4210/monitor.c **** 			 }
 4526              		.loc 1 1182 0
 4527 095a 0246     		mov	r2, r0
 4528 095c 2146     		mov	r1, r4
 4529 095e 7348     		ldr	r0, .L236+72
 4530              	.LVL723:
 4531 0960 FFF7FEFF 		bl	Printf
 4532              	.LVL724:
 4533 0964 D1E7     		b	.L173
 4534              	.L230:
1186:VS4210/monitor.c **** 					 // Printf("\r\ntp28xx,%02x,%02x",(WORD)s,(WORD)ret);
 4535              		.loc 1 1186 0
 4536 0966 E0B2     		uxtb	r0, r4
 4537 0968 FFF7FEFF 		bl	tp28xx_byte_read
 4538              	.LVL725:
1188:VS4210/monitor.c **** 					  } 
 4539              		.loc 1 1188 0
 4540 096c 0246     		mov	r2, r0
 4541 096e 2146     		mov	r1, r4
 4542 0970 6F48     		ldr	r0, .L236+76
 4543              	.LVL726:
 4544 0972 FFF7FEFF 		bl	Printf
 4545              	.LVL727:
 4546 0976 C8E7     		b	.L173
 4547              	.L177:
1211:VS4210/monitor.c **** 			 }
 4548              		.loc 1 1211 0
 4549 0978 6E48     		ldr	r0, .L236+80
 4550 097a FFF7FEFF 		bl	Printf
 4551              	.LVL728:
 4552 097e C4E7     		b	.L173
 4553              	.LVL729:
 4554              	.L167:
 4555              	.LBE2:
1371:VS4210/monitor.c **** 		MonHelp();
 4556              		.loc 1 1371 0
 4557 0980 6D49     		ldr	r1, .L236+84
 4558 0982 2046     		mov	r0, r4
 4559 0984 FFF7FEFF 		bl	stricmp
 4560              	.LVL730:
 4561 0988 48B1     		cbz	r0, .L180
1371:VS4210/monitor.c **** 		MonHelp();
 4562              		.loc 1 1371 0 is_stmt 0 discriminator 1
 4563 098a 6C49     		ldr	r1, .L236+88
 4564 098c 2046     		mov	r0, r4
 4565 098e FFF7FEFF 		bl	stricmp
 4566              	.LVL731:
 4567 0992 20B1     		cbz	r0, .L180
1371:VS4210/monitor.c **** 		MonHelp();
 4568              		.loc 1 1371 0 discriminator 2
ARM GAS  /tmp/cco5PJAb.s 			page 134


 4569 0994 6A49     		ldr	r1, .L236+92
 4570 0996 2046     		mov	r0, r4
 4571 0998 FFF7FEFF 		bl	stricmp
 4572              	.LVL732:
 4573 099c 10B9     		cbnz	r0, .L181
 4574              	.L180:
1372:VS4210/monitor.c **** 	}
 4575              		.loc 1 1372 0 is_stmt 1
 4576 099e FFF7FEFF 		bl	MonHelp
 4577              	.LVL733:
 4578 09a2 12E4     		b	.L152
 4579              	.L181:
1374:VS4210/monitor.c **** 
 4580              		.loc 1 1374 0
 4581 09a4 6749     		ldr	r1, .L236+96
 4582 09a6 2046     		mov	r0, r4
 4583 09a8 FFF7FEFF 		bl	stricmp
 4584              	.LVL734:
 4585 09ac 90B9     		cbnz	r0, .L182
1376:VS4210/monitor.c **** 
 4586              		.loc 1 1376 0
 4587 09ae 4E4C     		ldr	r4, .L236+4
 4588 09b0 6068     		ldr	r0, [r4, #4]
 4589 09b2 FFF7FEFF 		bl	Asc2Bin
 4590              	.LVL735:
 4591 09b6 C0EB0010 		rsb	r0, r0, r0, lsl #4
 4592 09ba 80B2     		uxth	r0, r0
 4593 09bc FFF7FEFF 		bl	user_pwm_setvalue
 4594              	.LVL736:
1378:VS4210/monitor.c **** 	}
 4595              		.loc 1 1378 0
 4596 09c0 6068     		ldr	r0, [r4, #4]
 4597 09c2 FFF7FEFF 		bl	Asc2Bin
 4598              	.LVL737:
 4599 09c6 C0EB0011 		rsb	r1, r0, r0, lsl #4
 4600 09ca 5F48     		ldr	r0, .L236+100
 4601 09cc FFF7FEFF 		bl	Printf
 4602              	.LVL738:
 4603 09d0 FFF7FBBB 		b	.L152
 4604              	.L182:
1380:VS4210/monitor.c **** 
 4605              		.loc 1 1380 0
 4606 09d4 5D49     		ldr	r1, .L236+104
 4607 09d6 2046     		mov	r0, r4
 4608 09d8 FFF7FEFF 		bl	stricmp
 4609              	.LVL739:
 4610 09dc 40B9     		cbnz	r0, .L183
1382:VS4210/monitor.c **** 
 4611              		.loc 1 1382 0
 4612 09de 0220     		movs	r0, #2
 4613 09e0 FFF7FEFF 		bl	GET_ALC122
 4614              	.LVL740:
 4615 09e4 0146     		mov	r1, r0
 4616 09e6 5A48     		ldr	r0, .L236+108
 4617 09e8 FFF7FEFF 		bl	Printf
 4618              	.LVL741:
 4619 09ec FFF7EDBB 		b	.L152
ARM GAS  /tmp/cco5PJAb.s 			page 135


 4620              	.L183:
1385:VS4210/monitor.c **** 		WORD val=0;
 4621              		.loc 1 1385 0
 4622 09f0 5849     		ldr	r1, .L236+112
 4623 09f2 2046     		mov	r0, r4
 4624 09f4 FFF7FEFF 		bl	stricmp
 4625              	.LVL742:
 4626 09f8 88B9     		cbnz	r0, .L184
 4627              	.LVL743:
 4628              	.LBB3:
1387:VS4210/monitor.c **** 		val<<=8;
 4629              		.loc 1 1387 0
 4630 09fa 3B4B     		ldr	r3, .L236+4
 4631 09fc 5868     		ldr	r0, [r3, #4]
 4632 09fe FFF7FEFF 		bl	Asc2Bin
 4633              	.LVL744:
1391:VS4210/monitor.c **** 
 4634              		.loc 1 1391 0
 4635 0a02 40EA0021 		orr	r1, r0, r0, lsl #8
 4636              	.LVL745:
 4637 0a06 0220     		movs	r0, #2
 4638 0a08 FFF7FEFF 		bl	SET_ALC122
 4639              	.LVL746:
1393:VS4210/monitor.c **** 	}
 4640              		.loc 1 1393 0
 4641 0a0c 0220     		movs	r0, #2
 4642 0a0e FFF7FEFF 		bl	GET_ALC122
 4643              	.LVL747:
 4644 0a12 0146     		mov	r1, r0
 4645 0a14 4E48     		ldr	r0, .L236+108
 4646 0a16 FFF7FEFF 		bl	Printf
 4647              	.LVL748:
 4648              	.LBE3:
 4649 0a1a FFF7D6BB 		b	.L152
 4650              	.L184:
1402:VS4210/monitor.c **** 		//if( argc==2 ) {
 4651              		.loc 1 1402 0
 4652 0a1e 4E49     		ldr	r1, .L236+116
 4653 0a20 2046     		mov	r0, r4
 4654 0a22 FFF7FEFF 		bl	stricmp
 4655              	.LVL749:
 4656 0a26 58B9     		cbnz	r0, .L185
1404:VS4210/monitor.c **** 		//}
 4657              		.loc 1 1404 0
 4658 0a28 2F4B     		ldr	r3, .L236+4
 4659 0a2a 5868     		ldr	r0, [r3, #4]
 4660 0a2c FFF7FEFF 		bl	Asc2Bin
 4661              	.LVL750:
 4662 0a30 0146     		mov	r1, r0
 4663 0a32 4A4B     		ldr	r3, .L236+120
 4664 0a34 1860     		str	r0, [r3]
1406:VS4210/monitor.c **** 	}
 4665              		.loc 1 1406 0
 4666 0a36 4A48     		ldr	r0, .L236+124
 4667 0a38 FFF7FEFF 		bl	Printf
 4668              	.LVL751:
 4669 0a3c FFF7C5BB 		b	.L152
ARM GAS  /tmp/cco5PJAb.s 			page 136


 4670              	.L185:
1408:VS4210/monitor.c **** 
 4671              		.loc 1 1408 0
 4672 0a40 4849     		ldr	r1, .L236+128
 4673 0a42 2046     		mov	r0, r4
 4674 0a44 FFF7FEFF 		bl	stricmp
 4675              	.LVL752:
 4676 0a48 38BB     		cbnz	r0, .L186
 4677              	.LBB4:
1411:VS4210/monitor.c **** 		
 4678              		.loc 1 1411 0
 4679 0a4a 274B     		ldr	r3, .L236+4
 4680 0a4c 5868     		ldr	r0, [r3, #4]
 4681 0a4e FFF7FEFF 		bl	Asc2Bin
 4682              	.LVL753:
 4683 0a52 0446     		mov	r4, r0
 4684              	.LVL754:
1413:VS4210/monitor.c **** 		
 4685              		.loc 1 1413 0
 4686 0a54 FFF7FEFF 		bl	HS_Select_Win
 4687              	.LVL755:
1416:VS4210/monitor.c **** 		{
 4688              		.loc 1 1416 0
 4689 0a58 012C     		cmp	r4, #1
 4690 0a5a 7FF4B6AB 		bne	.L152
1418:VS4210/monitor.c **** 		
 4691              		.loc 1 1418 0
 4692 0a5e 424C     		ldr	r4, .L236+132
 4693              	.LVL756:
 4694 0a60 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4695 0a62 4248     		ldr	r0, .L236+136
 4696 0a64 FFF7FEFF 		bl	Printf
 4697              	.LVL757:
1420:VS4210/monitor.c **** 			TP_bt1120_720P_1080P_mode0_w0();
 4698              		.loc 1 1420 0
 4699 0a68 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4700 0a6a 052B     		cmp	r3, #5
 4701 0a6c 03D1     		bne	.L187
1421:VS4210/monitor.c **** 			else if(TP_InputMode==6)
 4702              		.loc 1 1421 0
 4703 0a6e FFF7FEFF 		bl	TP_bt1120_720P_1080P_mode0_w0
 4704              	.LVL758:
 4705 0a72 FFF7AABB 		b	.L152
 4706              	.L187:
1422:VS4210/monitor.c **** 				TP_bt1120_1080P_1080P_mode0_w0();
 4707              		.loc 1 1422 0
 4708 0a76 062B     		cmp	r3, #6
 4709 0a78 03D1     		bne	.L188
1423:VS4210/monitor.c **** 			else if(TP_InputMode==0)
 4710              		.loc 1 1423 0
 4711 0a7a FFF7FEFF 		bl	TP_bt1120_1080P_1080P_mode0_w0
 4712              	.LVL759:
 4713 0a7e FFF7A4BB 		b	.L152
 4714              	.L188:
1424:VS4210/monitor.c **** 				TP_bt1120_NTSC_1080P_mode0_w0();
 4715              		.loc 1 1424 0
 4716 0a82 1BB9     		cbnz	r3, .L189
ARM GAS  /tmp/cco5PJAb.s 			page 137


1425:VS4210/monitor.c **** 			else if(TP_InputMode==1)
 4717              		.loc 1 1425 0
 4718 0a84 FFF7FEFF 		bl	TP_bt1120_NTSC_1080P_mode0_w0
 4719              	.LVL760:
 4720 0a88 FFF79FBB 		b	.L152
 4721              	.L189:
1426:VS4210/monitor.c **** 				TP_bt1120_PAL_1080P_mode0_w0();
 4722              		.loc 1 1426 0
 4723 0a8c 012B     		cmp	r3, #1
 4724 0a8e 7FF49CAB 		bne	.L152
1427:VS4210/monitor.c **** 							
 4725              		.loc 1 1427 0
 4726 0a92 FFF7FEFF 		bl	TP_bt1120_PAL_1080P_mode0_w0
 4727              	.LVL761:
 4728 0a96 FFF798BB 		b	.L152
 4729              	.L186:
 4730              	.LBE4:
1431:VS4210/monitor.c **** 		TP_bt1120_720P_1080P_mode0_w0();
 4731              		.loc 1 1431 0
 4732 0a9a 3549     		ldr	r1, .L236+140
 4733 0a9c 2046     		mov	r0, r4
 4734 0a9e FFF7FEFF 		bl	stricmp
 4735              	.LVL762:
 4736 0aa2 18B9     		cbnz	r0, .L190
1432:VS4210/monitor.c **** 	}	
 4737              		.loc 1 1432 0
 4738 0aa4 FFF7FEFF 		bl	TP_bt1120_720P_1080P_mode0_w0
 4739              	.LVL763:
 4740 0aa8 FFF78FBB 		b	.L152
 4741              	.L190:
1434:VS4210/monitor.c **** 		TP_bt1120_1080P_1080P_mode0_w0();
 4742              		.loc 1 1434 0
 4743 0aac 3149     		ldr	r1, .L236+144
 4744 0aae 2046     		mov	r0, r4
 4745 0ab0 FFF7FEFF 		bl	stricmp
 4746              	.LVL764:
 4747 0ab4 18B9     		cbnz	r0, .L191
1435:VS4210/monitor.c **** 	}	
 4748              		.loc 1 1435 0
 4749 0ab6 FFF7FEFF 		bl	TP_bt1120_1080P_1080P_mode0_w0
 4750              	.LVL765:
 4751 0aba FFF786BB 		b	.L152
 4752              	.L191:
1437:VS4210/monitor.c **** 		TP_bt1120_NTSC_1080P_mode0_w0();
 4753              		.loc 1 1437 0
 4754 0abe 2E49     		ldr	r1, .L236+148
 4755 0ac0 2046     		mov	r0, r4
 4756 0ac2 FFF7FEFF 		bl	stricmp
 4757              	.LVL766:
 4758 0ac6 18B9     		cbnz	r0, .L192
1438:VS4210/monitor.c **** 	}	
 4759              		.loc 1 1438 0
 4760 0ac8 FFF7FEFF 		bl	TP_bt1120_NTSC_1080P_mode0_w0
 4761              	.LVL767:
 4762 0acc FFF77DBB 		b	.L152
 4763              	.L192:
1440:VS4210/monitor.c **** 		TP_bt1120_PAL_1080P_mode0_w0();
ARM GAS  /tmp/cco5PJAb.s 			page 138


 4764              		.loc 1 1440 0
 4765 0ad0 2A49     		ldr	r1, .L236+152
 4766 0ad2 2046     		mov	r0, r4
 4767 0ad4 FFF7FEFF 		bl	stricmp
 4768              	.LVL768:
 4769 0ad8 0028     		cmp	r0, #0
 4770 0ada 51D1     		bne	.L193
1441:VS4210/monitor.c **** 	}	
 4771              		.loc 1 1441 0
 4772 0adc FFF7FEFF 		bl	TP_bt1120_PAL_1080P_mode0_w0
 4773              	.LVL769:
 4774 0ae0 FFF773BB 		b	.L152
 4775              	.L237:
 4776              		.align	2
 4777              	.L236:
 4778 0ae4 A0000000 		.word	.LC31
 4779 0ae8 00000000 		.word	argv
 4780 0aec 24000000 		.word	.LC5
 4781 0af0 A4000000 		.word	.LC32
 4782 0af4 A8000000 		.word	.LC33
 4783 0af8 00000000 		.word	.LANCHOR4
 4784 0afc AC000000 		.word	.LC34
 4785 0b00 D4000000 		.word	.LC35
 4786 0b04 00000000 		.word	.LANCHOR5
 4787 0b08 D8000000 		.word	.LC36
 4788 0b0c 1C010000 		.word	.LC40
 4789 0b10 E0000000 		.word	.LC37
 4790 0b14 F4000000 		.word	.LC38
 4791 0b18 08010000 		.word	.LC39
 4792 0b1c 20000000 		.word	.LC26
 4793 0b20 00000000 		.word	gHDMI_Index
 4794 0b24 58010000 		.word	.LC43
 4795 0b28 90000000 		.word	.LC30
 4796 0b2c 34010000 		.word	.LC41
 4797 0b30 48010000 		.word	.LC42
 4798 0b34 04000000 		.word	.LC23
 4799 0b38 6C010000 		.word	.LC44
 4800 0b3c 70010000 		.word	.LC45
 4801 0b40 78010000 		.word	.LC46
 4802 0b44 7C010000 		.word	.LC47
 4803 0b48 80010000 		.word	.LC48
 4804 0b4c 8C010000 		.word	.LC49
 4805 0b50 94010000 		.word	.LC50
 4806 0b54 A0010000 		.word	.LC51
 4807 0b58 A8010000 		.word	.LC52
 4808 0b5c 00000000 		.word	.LANCHOR10
 4809 0b60 B0010000 		.word	.LC53
 4810 0b64 CC010000 		.word	.LC54
 4811 0b68 00000000 		.word	TP_InputMode
 4812 0b6c D0010000 		.word	.LC55
 4813 0b70 E4010000 		.word	.LC56
 4814 0b74 E8010000 		.word	.LC57
 4815 0b78 EC010000 		.word	.LC58
 4816 0b7c F0010000 		.word	.LC59
 4817              	.L193:
1443:VS4210/monitor.c **** 
 4818              		.loc 1 1443 0
ARM GAS  /tmp/cco5PJAb.s 			page 139


 4819 0b80 8E49     		ldr	r1, .L238
 4820 0b82 2046     		mov	r0, r4
 4821 0b84 FFF7FEFF 		bl	stricmp
 4822              	.LVL770:
 4823 0b88 38B9     		cbnz	r0, .L194
1445:VS4210/monitor.c **** 		
 4824              		.loc 1 1445 0
 4825 0b8a 8D4B     		ldr	r3, .L238+4
 4826 0b8c 1870     		strb	r0, [r3]
1447:VS4210/monitor.c **** 		HS_Select_Win(0);
 4827              		.loc 1 1447 0
 4828 0b8e 8D4B     		ldr	r3, .L238+8
 4829 0b90 1870     		strb	r0, [r3]
1448:VS4210/monitor.c **** 	}
 4830              		.loc 1 1448 0
 4831 0b92 FFF7FEFF 		bl	HS_Select_Win
 4832              	.LVL771:
 4833 0b96 FFF718BB 		b	.L152
 4834              	.L194:
1450:VS4210/monitor.c **** 
 4835              		.loc 1 1450 0
 4836 0b9a 8B49     		ldr	r1, .L238+12
 4837 0b9c 2046     		mov	r0, r4
 4838 0b9e FFF7FEFF 		bl	stricmp
 4839              	.LVL772:
 4840 0ba2 28BB     		cbnz	r0, .L195
1452:VS4210/monitor.c **** 	
 4841              		.loc 1 1452 0
 4842 0ba4 864B     		ldr	r3, .L238+4
 4843 0ba6 0022     		movs	r2, #0
 4844 0ba8 1A70     		strb	r2, [r3]
1454:VS4210/monitor.c **** 		HS_Select_Win(1);
 4845              		.loc 1 1454 0
 4846 0baa 0120     		movs	r0, #1
 4847 0bac 854B     		ldr	r3, .L238+8
 4848 0bae 1870     		strb	r0, [r3]
1455:VS4210/monitor.c **** 		Printf("\r\nTP_InputMode = %d", (WORD)TP_InputMode);
 4849              		.loc 1 1455 0
 4850 0bb0 FFF7FEFF 		bl	HS_Select_Win
 4851              	.LVL773:
1456:VS4210/monitor.c **** 		
 4852              		.loc 1 1456 0
 4853 0bb4 854C     		ldr	r4, .L238+16
 4854 0bb6 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4855 0bb8 8548     		ldr	r0, .L238+20
 4856 0bba FFF7FEFF 		bl	Printf
 4857              	.LVL774:
1458:VS4210/monitor.c **** 			TP_bt1120_720P_1080P_mode0_w0();
 4858              		.loc 1 1458 0
 4859 0bbe 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4860 0bc0 052B     		cmp	r3, #5
 4861 0bc2 03D1     		bne	.L196
1459:VS4210/monitor.c **** 			else if(TP_InputMode==6)
 4862              		.loc 1 1459 0
 4863 0bc4 FFF7FEFF 		bl	TP_bt1120_720P_1080P_mode0_w0
 4864              	.LVL775:
 4865 0bc8 FFF7FFBA 		b	.L152
ARM GAS  /tmp/cco5PJAb.s 			page 140


 4866              	.L196:
1460:VS4210/monitor.c **** 				TP_bt1120_1080P_1080P_mode0_w0();
 4867              		.loc 1 1460 0
 4868 0bcc 062B     		cmp	r3, #6
 4869 0bce 03D1     		bne	.L197
1461:VS4210/monitor.c **** 			else if(TP_InputMode==0)
 4870              		.loc 1 1461 0
 4871 0bd0 FFF7FEFF 		bl	TP_bt1120_1080P_1080P_mode0_w0
 4872              	.LVL776:
 4873 0bd4 FFF7F9BA 		b	.L152
 4874              	.L197:
1462:VS4210/monitor.c **** 				TP_bt1120_NTSC_1080P_mode0_w0();
 4875              		.loc 1 1462 0
 4876 0bd8 1BB9     		cbnz	r3, .L198
1463:VS4210/monitor.c **** 			else if(TP_InputMode==1)
 4877              		.loc 1 1463 0
 4878 0bda FFF7FEFF 		bl	TP_bt1120_NTSC_1080P_mode0_w0
 4879              	.LVL777:
 4880 0bde FFF7F4BA 		b	.L152
 4881              	.L198:
1464:VS4210/monitor.c **** 				TP_bt1120_PAL_1080P_mode0_w0();
 4882              		.loc 1 1464 0
 4883 0be2 012B     		cmp	r3, #1
 4884 0be4 7FF4F1AA 		bne	.L152
1465:VS4210/monitor.c **** 			
 4885              		.loc 1 1465 0
 4886 0be8 FFF7FEFF 		bl	TP_bt1120_PAL_1080P_mode0_w0
 4887              	.LVL778:
 4888 0bec FFF7EDBA 		b	.L152
 4889              	.L195:
1469:VS4210/monitor.c **** 		extern tByte bSignal[4] ;
 4890              		.loc 1 1469 0
 4891 0bf0 7849     		ldr	r1, .L238+24
 4892 0bf2 2046     		mov	r0, r4
 4893 0bf4 FFF7FEFF 		bl	stricmp
 4894              	.LVL779:
 4895 0bf8 A8B9     		cbnz	r0, .L199
 4896              	.LBB5:
1471:VS4210/monitor.c **** 		Printf("\r\nbSignal[1] = %d", (WORD) bSignal[1]);
 4897              		.loc 1 1471 0
 4898 0bfa 774C     		ldr	r4, .L238+28
 4899 0bfc 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 4900 0bfe 7748     		ldr	r0, .L238+32
 4901 0c00 FFF7FEFF 		bl	Printf
 4902              	.LVL780:
1472:VS4210/monitor.c **** 		Printf("\r\nbSignal[2] = %d", (WORD) bSignal[2]);
 4903              		.loc 1 1472 0
 4904 0c04 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 4905 0c06 7648     		ldr	r0, .L238+36
 4906 0c08 FFF7FEFF 		bl	Printf
 4907              	.LVL781:
1473:VS4210/monitor.c **** 		Printf("\r\nbSignal[3] = %d", (WORD) bSignal[3]);
 4908              		.loc 1 1473 0
 4909 0c0c A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 4910 0c0e 7548     		ldr	r0, .L238+40
 4911 0c10 FFF7FEFF 		bl	Printf
 4912              	.LVL782:
ARM GAS  /tmp/cco5PJAb.s 			page 141


1474:VS4210/monitor.c **** 
 4913              		.loc 1 1474 0
 4914 0c14 E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 4915 0c16 7448     		ldr	r0, .L238+44
 4916 0c18 FFF7FEFF 		bl	Printf
 4917              	.LVL783:
1476:VS4210/monitor.c **** 							
 4918              		.loc 1 1476 0
 4919 0c1c 684B     		ldr	r3, .L238+4
 4920 0c1e 0022     		movs	r2, #0
 4921 0c20 1A70     		strb	r2, [r3]
 4922              	.LBE5:
 4923 0c22 FFF7D2BA 		b	.L152
 4924              	.L199:
1479:VS4210/monitor.c **** 
 4925              		.loc 1 1479 0
 4926 0c26 7149     		ldr	r1, .L238+48
 4927 0c28 2046     		mov	r0, r4
 4928 0c2a FFF7FEFF 		bl	stricmp
 4929              	.LVL784:
 4930 0c2e 30B9     		cbnz	r0, .L200
1481:VS4210/monitor.c **** 		SET_HDMI_SYNC_PARA();
 4931              		.loc 1 1481 0
 4932 0c30 634B     		ldr	r3, .L238+4
 4933 0c32 0022     		movs	r2, #0
 4934 0c34 1A70     		strb	r2, [r3]
1482:VS4210/monitor.c **** 
 4935              		.loc 1 1482 0
 4936 0c36 FFF7FEFF 		bl	SET_HDMI_SYNC_PARA
 4937              	.LVL785:
 4938 0c3a FFF7C6BA 		b	.L152
 4939              	.L200:
1485:VS4210/monitor.c **** 
 4940              		.loc 1 1485 0
 4941 0c3e 6C49     		ldr	r1, .L238+52
 4942 0c40 2046     		mov	r0, r4
 4943 0c42 FFF7FEFF 		bl	stricmp
 4944              	.LVL786:
 4945 0c46 30B9     		cbnz	r0, .L201
1487:VS4210/monitor.c **** 		SET_AHD_SYNC_PARA();
 4946              		.loc 1 1487 0
 4947 0c48 5D4B     		ldr	r3, .L238+4
 4948 0c4a 0022     		movs	r2, #0
 4949 0c4c 1A70     		strb	r2, [r3]
1488:VS4210/monitor.c **** 
 4950              		.loc 1 1488 0
 4951 0c4e FFF7FEFF 		bl	SET_AHD_SYNC_PARA
 4952              	.LVL787:
 4953 0c52 FFF7BABA 		b	.L152
 4954              	.L201:
1491:VS4210/monitor.c **** 
 4955              		.loc 1 1491 0
 4956 0c56 6749     		ldr	r1, .L238+56
 4957 0c58 2046     		mov	r0, r4
 4958 0c5a FFF7FEFF 		bl	stricmp
 4959              	.LVL788:
 4960 0c5e 18B9     		cbnz	r0, .L202
ARM GAS  /tmp/cco5PJAb.s 			page 142


1493:VS4210/monitor.c **** 
 4961              		.loc 1 1493 0
 4962 0c60 FFF7FEFF 		bl	Init_TP280x_RegSet
 4963              	.LVL789:
 4964 0c64 FFF7B1BA 		b	.L152
 4965              	.L202:
1496:VS4210/monitor.c **** 
 4966              		.loc 1 1496 0
 4967 0c68 6349     		ldr	r1, .L238+60
 4968 0c6a 2046     		mov	r0, r4
 4969 0c6c FFF7FEFF 		bl	stricmp
 4970              	.LVL790:
 4971 0c70 30B9     		cbnz	r0, .L203
1498:VS4210/monitor.c **** 		SET_HDMI_640_480P_PARA();
 4972              		.loc 1 1498 0
 4973 0c72 534B     		ldr	r3, .L238+4
 4974 0c74 0022     		movs	r2, #0
 4975 0c76 1A70     		strb	r2, [r3]
1499:VS4210/monitor.c **** 
 4976              		.loc 1 1499 0
 4977 0c78 FFF7FEFF 		bl	SET_HDMI_640_480P_PARA
 4978              	.LVL791:
 4979 0c7c FFF7A5BA 		b	.L152
 4980              	.L203:
1502:VS4210/monitor.c **** 
 4981              		.loc 1 1502 0
 4982 0c80 5E49     		ldr	r1, .L238+64
 4983 0c82 2046     		mov	r0, r4
 4984 0c84 FFF7FEFF 		bl	stricmp
 4985              	.LVL792:
 4986 0c88 30B9     		cbnz	r0, .L204
1504:VS4210/monitor.c **** 		SET_VS4210_720_480_out();
 4987              		.loc 1 1504 0
 4988 0c8a 4D4B     		ldr	r3, .L238+4
 4989 0c8c 0022     		movs	r2, #0
 4990 0c8e 1A70     		strb	r2, [r3]
1505:VS4210/monitor.c **** 		
 4991              		.loc 1 1505 0
 4992 0c90 FFF7FEFF 		bl	SET_VS4210_720_480_out
 4993              	.LVL793:
 4994 0c94 FFF799BA 		b	.L152
 4995              	.L204:
1508:VS4210/monitor.c **** 
 4996              		.loc 1 1508 0
 4997 0c98 5949     		ldr	r1, .L238+68
 4998 0c9a 2046     		mov	r0, r4
 4999 0c9c FFF7FEFF 		bl	stricmp
 5000              	.LVL794:
 5001 0ca0 88B9     		cbnz	r0, .L205
1510:VS4210/monitor.c **** 		TVI_Command=0x0F;
 5002              		.loc 1 1510 0
 5003 0ca2 0023     		movs	r3, #0
 5004 0ca4 464A     		ldr	r2, .L238+4
 5005 0ca6 1370     		strb	r3, [r2]
1511:VS4210/monitor.c **** 		presetNum=0;
 5006              		.loc 1 1511 0
 5007 0ca8 564A     		ldr	r2, .L238+72
ARM GAS  /tmp/cco5PJAb.s 			page 143


 5008 0caa 0F21     		movs	r1, #15
 5009 0cac 1170     		strb	r1, [r2]
1512:VS4210/monitor.c **** 		TVI_speed=0;
 5010              		.loc 1 1512 0
 5011 0cae 564A     		ldr	r2, .L238+76
 5012 0cb0 1370     		strb	r3, [r2]
1513:VS4210/monitor.c **** 		TVI_Chksum=0xC5;
 5013              		.loc 1 1513 0
 5014 0cb2 564A     		ldr	r2, .L238+80
 5015 0cb4 1370     		strb	r3, [r2]
1514:VS4210/monitor.c **** 		ptztxflag=1;
 5016              		.loc 1 1514 0
 5017 0cb6 564B     		ldr	r3, .L238+84
 5018 0cb8 C522     		movs	r2, #197
 5019 0cba 1A70     		strb	r2, [r3]
1515:VS4210/monitor.c **** 		
 5020              		.loc 1 1515 0
 5021 0cbc 554B     		ldr	r3, .L238+88
 5022 0cbe 0122     		movs	r2, #1
 5023 0cc0 1A60     		str	r2, [r3]
 5024 0cc2 FFF782BA 		b	.L152
 5025              	.L205:
1518:VS4210/monitor.c **** 
 5026              		.loc 1 1518 0
 5027 0cc6 5449     		ldr	r1, .L238+92
 5028 0cc8 2046     		mov	r0, r4
 5029 0cca FFF7FEFF 		bl	stricmp
 5030              	.LVL795:
 5031 0cce 90B9     		cbnz	r0, .L206
1520:VS4210/monitor.c **** 		TVI_Command=0x06;
 5032              		.loc 1 1520 0
 5033 0cd0 0023     		movs	r3, #0
 5034 0cd2 3B4A     		ldr	r2, .L238+4
 5035 0cd4 1370     		strb	r3, [r2]
1521:VS4210/monitor.c **** 		presetNum=0x1F;
 5036              		.loc 1 1521 0
 5037 0cd6 4B4A     		ldr	r2, .L238+72
 5038 0cd8 0621     		movs	r1, #6
 5039 0cda 1170     		strb	r1, [r2]
1522:VS4210/monitor.c **** 		TVI_speed=0;
 5040              		.loc 1 1522 0
 5041 0cdc 4A4A     		ldr	r2, .L238+76
 5042 0cde 1F21     		movs	r1, #31
 5043 0ce0 1170     		strb	r1, [r2]
1523:VS4210/monitor.c **** 		TVI_Chksum=0xDB;
 5044              		.loc 1 1523 0
 5045 0ce2 4A4A     		ldr	r2, .L238+80
 5046 0ce4 1370     		strb	r3, [r2]
1524:VS4210/monitor.c **** 		ptztxflag=1;
 5047              		.loc 1 1524 0
 5048 0ce6 4A4B     		ldr	r3, .L238+84
 5049 0ce8 DB22     		movs	r2, #219
 5050 0cea 1A70     		strb	r2, [r3]
1525:VS4210/monitor.c **** 		
 5051              		.loc 1 1525 0
 5052 0cec 494B     		ldr	r3, .L238+88
 5053 0cee 0122     		movs	r2, #1
ARM GAS  /tmp/cco5PJAb.s 			page 144


 5054 0cf0 1A60     		str	r2, [r3]
 5055 0cf2 FFF76ABA 		b	.L152
 5056              	.L206:
1528:VS4210/monitor.c **** 
 5057              		.loc 1 1528 0
 5058 0cf6 4949     		ldr	r1, .L238+96
 5059 0cf8 2046     		mov	r0, r4
 5060 0cfa FFF7FEFF 		bl	stricmp
 5061              	.LVL796:
 5062 0cfe 90B9     		cbnz	r0, .L207
1530:VS4210/monitor.c **** 		TVI_Command=0x07;
 5063              		.loc 1 1530 0
 5064 0d00 0023     		movs	r3, #0
 5065 0d02 2F4A     		ldr	r2, .L238+4
 5066 0d04 1370     		strb	r3, [r2]
1531:VS4210/monitor.c **** 		presetNum=0x1F;
 5067              		.loc 1 1531 0
 5068 0d06 3F4A     		ldr	r2, .L238+72
 5069 0d08 0721     		movs	r1, #7
 5070 0d0a 1170     		strb	r1, [r2]
1532:VS4210/monitor.c **** 		TVI_speed=0;
 5071              		.loc 1 1532 0
 5072 0d0c 3E4A     		ldr	r2, .L238+76
 5073 0d0e 1F21     		movs	r1, #31
 5074 0d10 1170     		strb	r1, [r2]
1533:VS4210/monitor.c **** 		TVI_Chksum=0xDC;
 5075              		.loc 1 1533 0
 5076 0d12 3E4A     		ldr	r2, .L238+80
 5077 0d14 1370     		strb	r3, [r2]
1534:VS4210/monitor.c **** 		ptztxflag=1;
 5078              		.loc 1 1534 0
 5079 0d16 3E4B     		ldr	r3, .L238+84
 5080 0d18 DC22     		movs	r2, #220
 5081 0d1a 1A70     		strb	r2, [r3]
1535:VS4210/monitor.c **** 
 5082              		.loc 1 1535 0
 5083 0d1c 3D4B     		ldr	r3, .L238+88
 5084 0d1e 0122     		movs	r2, #1
 5085 0d20 1A60     		str	r2, [r3]
 5086 0d22 FFF752BA 		b	.L152
 5087              	.L207:
1537:VS4210/monitor.c **** 
 5088              		.loc 1 1537 0
 5089 0d26 3E49     		ldr	r1, .L238+100
 5090 0d28 2046     		mov	r0, r4
 5091 0d2a FFF7FEFF 		bl	stricmp
 5092              	.LVL797:
 5093 0d2e 90B9     		cbnz	r0, .L208
1539:VS4210/monitor.c **** 		TVI_Command=0x09;
 5094              		.loc 1 1539 0
 5095 0d30 0023     		movs	r3, #0
 5096 0d32 234A     		ldr	r2, .L238+4
 5097 0d34 1370     		strb	r3, [r2]
1540:VS4210/monitor.c **** 		presetNum=0;
 5098              		.loc 1 1540 0
 5099 0d36 334A     		ldr	r2, .L238+72
 5100 0d38 0921     		movs	r1, #9
ARM GAS  /tmp/cco5PJAb.s 			page 145


 5101 0d3a 1170     		strb	r1, [r2]
1541:VS4210/monitor.c **** 		TVI_speed=0x1F;
 5102              		.loc 1 1541 0
 5103 0d3c 324A     		ldr	r2, .L238+76
 5104 0d3e 1370     		strb	r3, [r2]
1542:VS4210/monitor.c **** 		TVI_Chksum=0xDE;
 5105              		.loc 1 1542 0
 5106 0d40 324B     		ldr	r3, .L238+80
 5107 0d42 1F22     		movs	r2, #31
 5108 0d44 1A70     		strb	r2, [r3]
1543:VS4210/monitor.c **** 		ptztxflag=1;
 5109              		.loc 1 1543 0
 5110 0d46 324B     		ldr	r3, .L238+84
 5111 0d48 DE22     		movs	r2, #222
 5112 0d4a 1A70     		strb	r2, [r3]
1544:VS4210/monitor.c **** 
 5113              		.loc 1 1544 0
 5114 0d4c 314B     		ldr	r3, .L238+88
 5115 0d4e 0122     		movs	r2, #1
 5116 0d50 1A60     		str	r2, [r3]
 5117 0d52 FFF73ABA 		b	.L152
 5118              	.L208:
1546:VS4210/monitor.c **** 
 5119              		.loc 1 1546 0
 5120 0d56 3349     		ldr	r1, .L238+104
 5121 0d58 2046     		mov	r0, r4
 5122 0d5a FFF7FEFF 		bl	stricmp
 5123              	.LVL798:
 5124 0d5e 90B9     		cbnz	r0, .L209
1548:VS4210/monitor.c **** 		TVI_Command=0x08;
 5125              		.loc 1 1548 0
 5126 0d60 0023     		movs	r3, #0
 5127 0d62 174A     		ldr	r2, .L238+4
 5128 0d64 1370     		strb	r3, [r2]
1549:VS4210/monitor.c **** 		presetNum=0;
 5129              		.loc 1 1549 0
 5130 0d66 274A     		ldr	r2, .L238+72
 5131 0d68 0821     		movs	r1, #8
 5132 0d6a 1170     		strb	r1, [r2]
1550:VS4210/monitor.c **** 		TVI_speed=0x1F;
 5133              		.loc 1 1550 0
 5134 0d6c 264A     		ldr	r2, .L238+76
 5135 0d6e 1370     		strb	r3, [r2]
1551:VS4210/monitor.c **** 		TVI_Chksum=0xDD;
 5136              		.loc 1 1551 0
 5137 0d70 264B     		ldr	r3, .L238+80
 5138 0d72 1F22     		movs	r2, #31
 5139 0d74 1A70     		strb	r2, [r3]
1552:VS4210/monitor.c **** 		ptztxflag=1;
 5140              		.loc 1 1552 0
 5141 0d76 264B     		ldr	r3, .L238+84
 5142 0d78 DD22     		movs	r2, #221
 5143 0d7a 1A70     		strb	r2, [r3]
1553:VS4210/monitor.c **** 		
 5144              		.loc 1 1553 0
 5145 0d7c 254B     		ldr	r3, .L238+88
 5146 0d7e 0122     		movs	r2, #1
ARM GAS  /tmp/cco5PJAb.s 			page 146


 5147 0d80 1A60     		str	r2, [r3]
 5148 0d82 FFF722BA 		b	.L152
 5149              	.L209:
1556:VS4210/monitor.c **** 			Monitor_flag=_FALSE;
 5150              		.loc 1 1556 0
 5151 0d86 2849     		ldr	r1, .L238+108
 5152 0d88 2046     		mov	r0, r4
 5153 0d8a FFF7FEFF 		bl	stricmp
 5154              	.LVL799:
 5155 0d8e 80B9     		cbnz	r0, .L210
1557:VS4210/monitor.c **** 		TVI_Command=0x14;
 5156              		.loc 1 1557 0
 5157 0d90 0023     		movs	r3, #0
 5158 0d92 0B4A     		ldr	r2, .L238+4
 5159 0d94 1370     		strb	r3, [r2]
1558:VS4210/monitor.c **** 			presetNum=0;
 5160              		.loc 1 1558 0
 5161 0d96 1B4A     		ldr	r2, .L238+72
 5162 0d98 1421     		movs	r1, #20
 5163 0d9a 1170     		strb	r1, [r2]
1559:VS4210/monitor.c **** 			TVI_speed=0;
 5164              		.loc 1 1559 0
 5165 0d9c 1A4A     		ldr	r2, .L238+76
 5166 0d9e 1370     		strb	r3, [r2]
1560:VS4210/monitor.c **** 			TVI_Chksum=0;
 5167              		.loc 1 1560 0
 5168 0da0 1A4A     		ldr	r2, .L238+80
 5169 0da2 1370     		strb	r3, [r2]
1561:VS4210/monitor.c **** 				ptztxflag=1;	
 5170              		.loc 1 1561 0
 5171 0da4 1A4A     		ldr	r2, .L238+84
 5172 0da6 1370     		strb	r3, [r2]
1562:VS4210/monitor.c **** 			}
 5173              		.loc 1 1562 0
 5174 0da8 1A4B     		ldr	r3, .L238+88
 5175 0daa 0122     		movs	r2, #1
 5176 0dac 1A60     		str	r2, [r3]
 5177 0dae FFF70CBA 		b	.L152
 5178              	.L210:
1949:VS4210/monitor.c **** 	}
 5179              		.loc 1 1949 0
 5180 0db2 1E48     		ldr	r0, .L238+112
 5181 0db4 FFF7FEFF 		bl	Printf
 5182              	.LVL800:
 5183 0db8 FFF707BA 		b	.L152
 5184              	.L239:
 5185              		.align	2
 5186              	.L238:
 5187 0dbc F4010000 		.word	.LC60
 5188 0dc0 00000000 		.word	.LANCHOR5
 5189 0dc4 00000000 		.word	SelectInputMode
 5190 0dc8 FC010000 		.word	.LC61
 5191 0dcc 00000000 		.word	TP_InputMode
 5192 0dd0 D0010000 		.word	.LC55
 5193 0dd4 00020000 		.word	.LC62
 5194 0dd8 00000000 		.word	bSignal
 5195 0ddc 04020000 		.word	.LC63
ARM GAS  /tmp/cco5PJAb.s 			page 147


 5196 0de0 18020000 		.word	.LC64
 5197 0de4 2C020000 		.word	.LC65
 5198 0de8 40020000 		.word	.LC66
 5199 0dec 54020000 		.word	.LC67
 5200 0df0 5C020000 		.word	.LC68
 5201 0df4 64020000 		.word	.LC69
 5202 0df8 6C020000 		.word	.LC70
 5203 0dfc 74020000 		.word	.LC71
 5204 0e00 7C020000 		.word	.LC72
 5205 0e04 00000000 		.word	TVI_Command
 5206 0e08 00000000 		.word	presetNum
 5207 0e0c 00000000 		.word	TVI_speed
 5208 0e10 00000000 		.word	TVI_Chksum
 5209 0e14 00000000 		.word	ptztxflag
 5210 0e18 80020000 		.word	.LC73
 5211 0e1c 84020000 		.word	.LC74
 5212 0e20 88020000 		.word	.LC75
 5213 0e24 8C020000 		.word	.LC76
 5214 0e28 90020000 		.word	.LC77
 5215 0e2c 94020000 		.word	.LC78
 5216              		.cfi_endproc
 5217              	.LFE92:
 5219              		.global	AccessEnable
 5220              		.global	RS2_Xbusy
 5221              		.global	RS_Xbusy
 5222              		.global	RS2_out
 5223              		.global	RS2_in
 5224              		.global	RS_out
 5225              		.global	RS_in
 5226              		.comm	DVR_buf,30,4
 5227              		.comm	RS2_buf,200,4
 5228              		.comm	RS_buf,30,4
 5229              		.global	Monitor_I2C
 5230              		.global	Monitor_flag
 5231              		.global	echo
 5232              		.global	argc
 5233              		.comm	argv,28,4
 5234              		.comm	monstr,30,4
 5235              		.comm	MonWdata,1,1
 5236              		.comm	MonRdata,1,1
 5237              		.comm	MonIndex,1,1
 5238              		.global	MonAddress
 5239              		.comm	newInRes,4,4
 5240              		.section	.bss.Monitor_flag,"aw",%nobits
 5241              		.set	.LANCHOR5,. + 0
 5244              	Monitor_flag:
 5245 0000 00       		.space	1
 5246              		.section	.bss.RS2_Xbusy,"aw",%nobits
 5247              		.align	2
 5250              	RS2_Xbusy:
 5251 0000 00000000 		.space	4
 5252              		.section	.bss.RS2_in,"aw",%nobits
 5253              		.set	.LANCHOR2,. + 0
 5256              	RS2_in:
 5257 0000 00       		.space	1
 5258              		.section	.bss.RS2_out,"aw",%nobits
 5259              		.set	.LANCHOR3,. + 0
ARM GAS  /tmp/cco5PJAb.s 			page 148


 5262              	RS2_out:
 5263 0000 00       		.space	1
 5264              		.section	.bss.RS_Xbusy,"aw",%nobits
 5265              		.align	2
 5268              	RS_Xbusy:
 5269 0000 00000000 		.space	4
 5270              		.section	.bss.RS_in,"aw",%nobits
 5271              		.set	.LANCHOR0,. + 0
 5274              	RS_in:
 5275 0000 00       		.space	1
 5276              		.section	.bss.RS_out,"aw",%nobits
 5277              		.set	.LANCHOR1,. + 0
 5280              	RS_out:
 5281 0000 00       		.space	1
 5282              		.section	.bss.argc,"aw",%nobits
 5283              		.set	.LANCHOR7,. + 0
 5286              	argc:
 5287 0000 00       		.space	1
 5288              		.section	.bss.comment.8582,"aw",%nobits
 5289              		.set	.LANCHOR6,. + 0
 5292              	comment.8582:
 5293 0000 00       		.space	1
 5294              		.section	.bss.incnt.8583,"aw",%nobits
 5295              		.set	.LANCHOR8,. + 0
 5298              	incnt.8583:
 5299 0000 00       		.space	1
 5300              		.section	.bss.last_argc.8584,"aw",%nobits
 5301              		.set	.LANCHOR9,. + 0
 5304              	last_argc.8584:
 5305 0000 00       		.space	1
 5306              		.section	.data.AccessEnable,"aw",%progbits
 5307              		.align	2
 5308              		.set	.LANCHOR10,. + 0
 5311              	AccessEnable:
 5312 0000 01000000 		.word	1
 5313              		.section	.data.MonAddress,"aw",%progbits
 5316              	MonAddress:
 5317 0000 8A       		.byte	-118
 5318              		.section	.data.Monitor_I2C,"aw",%progbits
 5319              		.set	.LANCHOR4,. + 0
 5322              	Monitor_I2C:
 5323 0000 40       		.byte	64
 5324              		.section	.data.echo,"aw",%progbits
 5325              		.align	2
 5328              	echo:
 5329 0000 01000000 		.word	1
 5330              		.section	.rodata.MonHelp.str1.4,"aMS",%progbits,1
 5331              		.align	2
 5332              	.LC9:
 5333 0000 0D0A3D3D 		.ascii	"\015\012==========================================="
 5333      3D3D3D3D 
 5333      3D3D3D3D 
 5333      3D3D3D3D 
 5333      3D3D3D3D 
 5334 002d 3D3D3D3D 		.ascii	"============\000"
 5334      3D3D3D3D 
 5334      3D3D3D3D 
ARM GAS  /tmp/cco5PJAb.s 			page 149


 5334      00
 5335 003a 0000     		.space	2
 5336              	.LC10:
 5337 003c 0D0A3E3E 		.ascii	"\015\012>>>   Welcome to TOA TAAH02 console\011 Rev"
 5337      3E202020 
 5337      57656C63 
 5337      6F6D6520 
 5337      746F2054 
 5338 0066 20312E30 		.ascii	" 1.00   <<<\000"
 5338      30202020 
 5338      3C3C3C00 
 5339 0072 0000     		.space	2
 5340              	.LC11:
 5341 0074 0D0A2052 		.ascii	"\015\012 R [ii] \011\011   ; Read Register data\000"
 5341      205B6969 
 5341      5D200909 
 5341      2020203B 
 5341      20526561 
 5342              	.LC12:
 5343 0098 0D0A2057 		.ascii	"\015\012 W [ii] [dd]\011\011   ; Write Register dat"
 5343      205B6969 
 5343      5D205B64 
 5343      645D0909 
 5343      2020203B 
 5344 00bf 6100     		.ascii	"a\000"
 5345 00c1 000000   		.space	3
 5346              	.LC13:
 5347 00c4 0D0A2044 		.ascii	"\015\012 Dump [ii] [cc] \011   ; Dump [first][end] "
 5347      756D7020 
 5347      5B69695D 
 5347      205B6363 
 5347      5D200920 
 5348 00ee 5265672E 		.ascii	"Reg.\000"
 5348      00
 5349 00f3 00       		.space	1
 5350              	.LC14:
 5351 00f4 0D0A2049 		.ascii	"\015\012 I2C [aa]\011\011   ; Change I2C address\000"
 5351      3243205B 
 5351      61615D09 
 5351      09202020 
 5351      3B204368 
 5352 0119 000000   		.space	3
 5353              	.LC15:
 5354 011c 0D0A203C 		.ascii	"\015\012 < VS4210:40 TP2824:88 EEPROM:0xA0 HDMI:90 "
 5354      20565334 
 5354      3231303A 
 5354      34302054 
 5354      50323832 
 5355 0149 3E00     		.ascii	">\000"
 5356 014b 00       		.space	1
 5357              	.LC16:
 5358 014c 0D0A2057 		.ascii	"\015\012 WIN [ii] \011           ; Change Input Sou"
 5358      494E205B 
 5358      69695D20 
 5358      09202020 
 5358      20202020 
 5359 0176 72636500 		.ascii	"rce\000"
ARM GAS  /tmp/cco5PJAb.s 			page 150


 5360 017a 0000     		.space	2
 5361              	.LC17:
 5362 017c 0D0A2041 		.ascii	"\015\012 Access [0,1]\011\011   ; TP2824 Access OFF"
 5362      63636573 
 5362      73205B30 
 5362      2C315D09 
 5362      09202020 
 5363 01a3 2F4F4E00 		.ascii	"/ON\000"
 5364 01a7 00       		.space	1
 5365              	.LC18:
 5366 01a8 0D0A00   		.ascii	"\015\012\000"
 5367              		.section	.rodata.MonIncDecI2C.str1.4,"aMS",%progbits,1
 5368              		.align	2
 5369              	.LC4:
 5370 0000 0D0A4545 		.ascii	"\015\012EEPROM Write addr=%02x  data=%02x\000"
 5370      50524F4D 
 5370      20577269 
 5370      74652061 
 5370      6464723D 
 5371              	.LC5:
 5372 0024 0D0A5653 		.ascii	"\015\012VS4210 Write addr=%02x  data=%02x\000"
 5372      34323130 
 5372      20577269 
 5372      74652061 
 5372      6464723D 
 5373              	.LC6:
 5374 0048 0D0A5653 		.ascii	"\015\012VS8812 Write addr=%02x  data=%02x\000"
 5374      38383132 
 5374      20577269 
 5374      74652061 
 5374      6464723D 
 5375              	.LC7:
 5376 006c 0D0A5450 		.ascii	"\015\012TP2824  Read addr=%02x  data=%02x\000"
 5376      32383234 
 5376      20205265 
 5376      61642061 
 5376      6464723D 
 5377              	.LC8:
 5378 0090 0D0A4954 		.ascii	"\015\012IT66021  Read addr=%02x  data=%02x\000"
 5378      36363032 
 5378      31202052 
 5378      65616420 
 5378      61646472 
 5379              		.section	.rodata.Monitor.str1.4,"aMS",%progbits,1
 5380              		.align	2
 5381              	.LC22:
 5382 0000 5700     		.ascii	"W\000"
 5383 0002 0000     		.space	2
 5384              	.LC23:
 5385 0004 0D0A4932 		.ascii	"\015\012I2C addr. error\000"
 5385      43206164 
 5385      64722E20 
 5385      6572726F 
 5385      7200
 5386 0016 0000     		.space	2
 5387              	.LC24:
 5388 0018 2900     		.ascii	")\000"
ARM GAS  /tmp/cco5PJAb.s 			page 151


 5389 001a 0000     		.space	2
 5390              	.LC25:
 5391 001c 5200     		.ascii	"R\000"
 5392 001e 0000     		.space	2
 5393              	.LC26:
 5394 0020 0D0A4545 		.ascii	"\015\012EEPROM  Read addr=%02x  data=%02x\000"
 5394      50524F4D 
 5394      20205265 
 5394      61642061 
 5394      6464723D 
 5395              	.LC27:
 5396 0044 0D0A5653 		.ascii	"\015\012VS4210  Read addr=%02x  data=%02x\000"
 5396      34323130 
 5396      20205265 
 5396      61642061 
 5396      6464723D 
 5397              	.LC28:
 5398 0068 0D0A5653 		.ascii	"\015\012VS8812  Read addr=%02x  data=%02x\000"
 5398      38383132 
 5398      20205265 
 5398      61642061 
 5398      6464723D 
 5399              	.LC29:
 5400 008c 565200   		.ascii	"VR\000"
 5401 008f 00       		.space	1
 5402              	.LC30:
 5403 0090 0D0A3430 		.ascii	"\015\01240,%02x,%02x\000"
 5403      2C253032 
 5403      782C2530 
 5403      327800
 5404 009f 00       		.space	1
 5405              	.LC31:
 5406 00a0 565700   		.ascii	"VW\000"
 5407 00a3 00       		.space	1
 5408              	.LC32:
 5409 00a4 2800     		.ascii	"(\000"
 5410 00a6 0000     		.space	2
 5411              	.LC33:
 5412 00a8 49324300 		.ascii	"I2C\000"
 5413              	.LC34:
 5414 00ac 0D0A4368 		.ascii	"\015\012Change I2C addr. from %02x to %02x\000"
 5414      616E6765 
 5414      20493243 
 5414      20616464 
 5414      722E2066 
 5415 00d1 000000   		.space	3
 5416              	.LC35:
 5417 00d4 5100     		.ascii	"Q\000"
 5418 00d6 0000     		.space	2
 5419              	.LC36:
 5420 00d8 44554D50 		.ascii	"DUMP\000"
 5420      00
 5421 00dd 000000   		.space	3
 5422              	.LC37:
 5423 00e0 0D0A4455 		.ascii	"\015\012DUMP EEPROM Reg..\000"
 5423      4D502045 
 5423      4550524F 
ARM GAS  /tmp/cco5PJAb.s 			page 152


 5423      4D205265 
 5423      672E2E00 
 5424              	.LC38:
 5425 00f4 0D0A4455 		.ascii	"\015\012DUMP VS4210 Reg..\000"
 5425      4D502056 
 5425      53343231 
 5425      30205265 
 5425      672E2E00 
 5426              	.LC39:
 5427 0108 0D0A4455 		.ascii	"\015\012DUMP VS8812 Reg..\000"
 5427      4D502056 
 5427      53383831 
 5427      32205265 
 5427      672E2E00 
 5428              	.LC40:
 5429 011c 0D0A4455 		.ascii	"\015\012DUMP IT66021 Reg..\000"
 5429      4D502049 
 5429      54363630 
 5429      32312052 
 5429      65672E2E 
 5430 0131 000000   		.space	3
 5431              	.LC41:
 5432 0134 0D0A5653 		.ascii	"\015\012VS8812,%02x,%02x\000"
 5432      38383132 
 5432      2C253032 
 5432      782C2530 
 5432      327800
 5433 0147 00       		.space	1
 5434              	.LC42:
 5435 0148 0D0A5220 		.ascii	"\015\012R %02x %02x\000"
 5435      25303278 
 5435      20253032 
 5435      7800
 5436 0156 0000     		.space	2
 5437              	.LC43:
 5438 0158 0D0A4954 		.ascii	"\015\012IT66021,%02x,%02x\000"
 5438      36363032 
 5438      312C2530 
 5438      32782C25 
 5438      30327800 
 5439              	.LC44:
 5440 016c 4800     		.ascii	"H\000"
 5441 016e 0000     		.space	2
 5442              	.LC45:
 5443 0170 48454C50 		.ascii	"HELP\000"
 5443      00
 5444 0175 000000   		.space	3
 5445              	.LC46:
 5446 0178 3F00     		.ascii	"?\000"
 5447 017a 0000     		.space	2
 5448              	.LC47:
 5449 017c 50574D00 		.ascii	"PWM\000"
 5450              	.LC48:
 5451 0180 0D0A5057 		.ascii	"\015\012PWM=%d\000"
 5451      4D3D2564 
 5451      00
 5452 0189 000000   		.space	3
ARM GAS  /tmp/cco5PJAb.s 			page 153


 5453              	.LC49:
 5454 018c 414C4352 		.ascii	"ALCR\000"
 5454      00
 5455 0191 000000   		.space	3
 5456              	.LC50:
 5457 0194 0D0A414C 		.ascii	"\015\012ALCR=%04x\000"
 5457      43523D25 
 5457      30347800 
 5458              	.LC51:
 5459 01a0 414C4357 		.ascii	"ALCW\000"
 5459      00
 5460 01a5 000000   		.space	3
 5461              	.LC52:
 5462 01a8 41434345 		.ascii	"ACCESS\000"
 5462      535300
 5463 01af 00       		.space	1
 5464              	.LC53:
 5465 01b0 0D0A5653 		.ascii	"\015\012VS4210 AUTO ACCESS = %d\000"
 5465      34323130 
 5465      20415554 
 5465      4F204143 
 5465      43455353 
 5466 01ca 0000     		.space	2
 5467              	.LC54:
 5468 01cc 57696E00 		.ascii	"Win\000"
 5469              	.LC55:
 5470 01d0 0D0A5450 		.ascii	"\015\012TP_InputMode = %d\000"
 5470      5F496E70 
 5470      75744D6F 
 5470      6465203D 
 5470      20256400 
 5471              	.LC56:
 5472 01e4 54503000 		.ascii	"TP0\000"
 5473              	.LC57:
 5474 01e8 54503100 		.ascii	"TP1\000"
 5475              	.LC58:
 5476 01ec 54503200 		.ascii	"TP2\000"
 5477              	.LC59:
 5478 01f0 54503300 		.ascii	"TP3\000"
 5479              	.LC60:
 5480 01f4 48444D49 		.ascii	"HDMI\000"
 5480      00
 5481 01f9 000000   		.space	3
 5482              	.LC61:
 5483 01fc 41484400 		.ascii	"AHD\000"
 5484              	.LC62:
 5485 0200 425300   		.ascii	"BS\000"
 5486 0203 00       		.space	1
 5487              	.LC63:
 5488 0204 0D0A6253 		.ascii	"\015\012bSignal[0] = %d\000"
 5488      69676E61 
 5488      6C5B305D 
 5488      203D2025 
 5488      6400
 5489 0216 0000     		.space	2
 5490              	.LC64:
 5491 0218 0D0A6253 		.ascii	"\015\012bSignal[1] = %d\000"
ARM GAS  /tmp/cco5PJAb.s 			page 154


 5491      69676E61 
 5491      6C5B315D 
 5491      203D2025 
 5491      6400
 5492 022a 0000     		.space	2
 5493              	.LC65:
 5494 022c 0D0A6253 		.ascii	"\015\012bSignal[2] = %d\000"
 5494      69676E61 
 5494      6C5B325D 
 5494      203D2025 
 5494      6400
 5495 023e 0000     		.space	2
 5496              	.LC66:
 5497 0240 0D0A6253 		.ascii	"\015\012bSignal[3] = %d\000"
 5497      69676E61 
 5497      6C5B335D 
 5497      203D2025 
 5497      6400
 5498 0252 0000     		.space	2
 5499              	.LC67:
 5500 0254 53455448 		.ascii	"SETHDMI\000"
 5500      444D4900 
 5501              	.LC68:
 5502 025c 53455441 		.ascii	"SETAHD\000"
 5502      484400
 5503 0263 00       		.space	1
 5504              	.LC69:
 5505 0264 54505253 		.ascii	"TPRST\000"
 5505      5400
 5506 026a 0000     		.space	2
 5507              	.LC70:
 5508 026c 48444D49 		.ascii	"HDMI6\000"
 5508      3600
 5509 0272 0000     		.space	2
 5510              	.LC71:
 5511 0274 56373230 		.ascii	"V720\000"
 5511      00
 5512 0279 000000   		.space	3
 5513              	.LC72:
 5514 027c 6F6D00   		.ascii	"om\000"
 5515 027f 00       		.space	1
 5516              	.LC73:
 5517 0280 6F7500   		.ascii	"ou\000"
 5518 0283 00       		.space	1
 5519              	.LC74:
 5520 0284 6F6400   		.ascii	"od\000"
 5521 0287 00       		.space	1
 5522              	.LC75:
 5523 0288 6F6C00   		.ascii	"ol\000"
 5524 028b 00       		.space	1
 5525              	.LC76:
 5526 028c 6F7200   		.ascii	"or\000"
 5527 028f 00       		.space	1
 5528              	.LC77:
 5529 0290 6F7000   		.ascii	"op\000"
 5530 0293 00       		.space	1
 5531              	.LC78:
ARM GAS  /tmp/cco5PJAb.s 			page 155


 5532 0294 0D0A496E 		.ascii	"\015\012Invalid command...\000"
 5532      76616C69 
 5532      6420636F 
 5532      6D6D616E 
 5532      642E2E2E 
 5533              		.section	.rodata.Prompt.str1.4,"aMS",%progbits,1
 5534              		.align	2
 5535              	.LC0:
 5536 0000 0D0A4D43 		.ascii	"\015\012MCU_I2C[%02x][%d:%d:%d:%d]>\000"
 5536      555F4932 
 5536      435B2530 
 5536      32785D5B 
 5536      25643A25 
 5537 001e 0000     		.space	2
 5538              	.LC1:
 5539 0020 0D0A4D43 		.ascii	"\015\012MCU_I2C[%02x][%d:%d:%d]>\000"
 5539      555F4932 
 5539      435B2530 
 5539      32785D5B 
 5539      25643A25 
 5540 003b 00       		.space	1
 5541              	.LC2:
 5542 003c 0D0A4D43 		.ascii	"\015\012MCU_I2C[%02x][%d:%d]>\000"
 5542      555F4932 
 5542      435B2530 
 5542      32785D5B 
 5542      25643A25 
 5543              	.LC3:
 5544 0054 0D0A4D43 		.ascii	"\015\012MCU_I2C[%02x][%d]>\000"
 5544      555F4932 
 5544      435B2530 
 5544      32785D5B 
 5544      25645D3E 
 5545              		.section	.rodata.SET_AHD_SYNC_PARA.str1.4,"aMS",%progbits,1
 5546              		.align	2
 5547              	.LC19:
 5548 0000 0D0A4C6F 		.ascii	"\015\012Loading AHD Embedded Sync para.... \000"
 5548      6164696E 
 5548      67204148 
 5548      4420456D 
 5548      62656464 
 5549              		.section	.rodata.SET_HDMI_640_480P_PARA.str1.4,"aMS",%progbits,1
 5550              		.align	2
 5551              	.LC20:
 5552 0000 0D0A4C6F 		.ascii	"\015\012Loading HDMI 640X480P Embedded Sync para..."
 5552      6164696E 
 5552      67204844 
 5552      4D492036 
 5552      34305834 
 5553 002d 2E2000   		.ascii	". \000"
 5554              		.section	.rodata.SET_HDMI_SYNC_PARA.str1.4,"aMS",%progbits,1
 5555              		.align	2
 5556              	.LC21:
 5557 0000 0D0A4C6F 		.ascii	"\015\012Loading HDMI Embedded Sync para.... \000"
 5557      6164696E 
 5557      67204844 
 5557      4D492045 
ARM GAS  /tmp/cco5PJAb.s 			page 156


 5557      6D626564 
 5558              		.text
 5559              	.Letext0:
 5560              		.file 2 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_
 5561              		.file 3 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 5562              		.file 4 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 5563              		.file 5 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 5564              		.file 6 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 5565              		.file 7 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 5566              		.file 8 "VS4210/VXIS_Extern_Define.h"
 5567              		.file 9 "TP2824/tpinc/TP2802.h"
 5568              		.file 10 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 5569              		.file 11 "sw_i2c/VX_swi2c.h"
 5570              		.file 12 "VS4210/VS4210.h"
 5571              		.file 13 "Drivers/CMSIS/Include/core_cm3.h"
 5572              		.file 14 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 5573              		.file 15 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 5574              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 5575              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 5576              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 5577              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 5578              		.file 20 "VS4210/printf.h"
 5579              		.file 21 "VS4210/monitor.h"
 5580              		.file 22 "Inc/main.h"
ARM GAS  /tmp/cco5PJAb.s 			page 157


DEFINED SYMBOLS
                            *ABS*:0000000000000000 monitor.c
     /tmp/cco5PJAb.s:16     .text.RS_ready:0000000000000000 $t
     /tmp/cco5PJAb.s:23     .text.RS_ready:0000000000000000 RS_ready
     /tmp/cco5PJAb.s:49     .text.RS_ready:0000000000000014 $d
     /tmp/cco5PJAb.s:55     .text.RS2_ready:0000000000000000 $t
     /tmp/cco5PJAb.s:62     .text.RS2_ready:0000000000000000 RS2_ready
     /tmp/cco5PJAb.s:87     .text.RS2_ready:0000000000000014 $d
     /tmp/cco5PJAb.s:93     .text.RS_rx:0000000000000000 $t
     /tmp/cco5PJAb.s:100    .text.RS_rx:0000000000000000 RS_rx
     /tmp/cco5PJAb.s:130    .text.RS_rx:000000000000001c $d
                            *COM*:000000000000001e RS_buf
     /tmp/cco5PJAb.s:136    .text.RS2_rx:0000000000000000 $t
     /tmp/cco5PJAb.s:143    .text.RS2_rx:0000000000000000 RS2_rx
     /tmp/cco5PJAb.s:173    .text.RS2_rx:000000000000001c $d
                            *COM*:00000000000000c8 RS2_buf
     /tmp/cco5PJAb.s:179    .text.RS_tx:0000000000000000 $t
     /tmp/cco5PJAb.s:186    .text.RS_tx:0000000000000000 RS_tx
     /tmp/cco5PJAb.s:218    .text.RS_tx:000000000000001c $d
     /tmp/cco5PJAb.s:223    .text.RS2_tx:0000000000000000 $t
     /tmp/cco5PJAb.s:230    .text.RS2_tx:0000000000000000 RS2_tx
     /tmp/cco5PJAb.s:262    .text.RS2_tx:000000000000001c $d
     /tmp/cco5PJAb.s:267    .text.Prompt:0000000000000000 $t
     /tmp/cco5PJAb.s:274    .text.Prompt:0000000000000000 Prompt
     /tmp/cco5PJAb.s:360    .text.Prompt:000000000000006c $d
     /tmp/cco5PJAb.s:373    .text.Mon_tx:0000000000000000 $t
     /tmp/cco5PJAb.s:380    .text.Mon_tx:0000000000000000 Mon_tx
     /tmp/cco5PJAb.s:401    .text.a2i:0000000000000000 $t
     /tmp/cco5PJAb.s:408    .text.a2i:0000000000000000 a2i
     /tmp/cco5PJAb.s:447    .text.Asc1Bin:0000000000000000 $t
     /tmp/cco5PJAb.s:454    .text.Asc1Bin:0000000000000000 Asc1Bin
     /tmp/cco5PJAb.s:498    .text.Asc2Bin:0000000000000000 $t
     /tmp/cco5PJAb.s:505    .text.Asc2Bin:0000000000000000 Asc2Bin
     /tmp/cco5PJAb.s:553    .text.hs_toupper:0000000000000000 $t
     /tmp/cco5PJAb.s:560    .text.hs_toupper:0000000000000000 hs_toupper
     /tmp/cco5PJAb.s:584    .text.stricmp:0000000000000000 $t
     /tmp/cco5PJAb.s:591    .text.stricmp:0000000000000000 stricmp
     /tmp/cco5PJAb.s:640    .text.MonReadI2C:0000000000000000 $t
     /tmp/cco5PJAb.s:647    .text.MonReadI2C:0000000000000000 MonReadI2C
     /tmp/cco5PJAb.s:660    .text.MonWriteI2C:0000000000000000 $t
     /tmp/cco5PJAb.s:667    .text.MonWriteI2C:0000000000000000 MonWriteI2C
     /tmp/cco5PJAb.s:680    .text.MonIncDecI2C:0000000000000000 $t
     /tmp/cco5PJAb.s:687    .text.MonIncDecI2C:0000000000000000 MonIncDecI2C
     /tmp/cco5PJAb.s:704    .text.MonIncDecI2C:000000000000000a $d
     /tmp/cco5PJAb.s:716    .text.MonIncDecI2C:0000000000000016 $t
     /tmp/cco5PJAb.s:891    .text.MonIncDecI2C:0000000000000100 $d
                            *COM*:0000000000000001 MonWdata
                            *COM*:0000000000000001 MonIndex
                            *COM*:000000000000001c argv
     /tmp/cco5PJAb.s:905    .text.MonDumpI2C:0000000000000000 $t
     /tmp/cco5PJAb.s:912    .text.MonDumpI2C:0000000000000000 MonDumpI2C
     /tmp/cco5PJAb.s:925    .text.MonNewReadI2C:0000000000000000 $t
     /tmp/cco5PJAb.s:932    .text.MonNewReadI2C:0000000000000000 MonNewReadI2C
     /tmp/cco5PJAb.s:945    .text.MonNewWriteI2C:0000000000000000 $t
     /tmp/cco5PJAb.s:952    .text.MonNewWriteI2C:0000000000000000 MonNewWriteI2C
     /tmp/cco5PJAb.s:965    .text.MonNewDumpI2C:0000000000000000 $t
     /tmp/cco5PJAb.s:972    .text.MonNewDumpI2C:0000000000000000 MonNewDumpI2C
ARM GAS  /tmp/cco5PJAb.s 			page 158


     /tmp/cco5PJAb.s:985    .text.MonWriteBit:0000000000000000 $t
     /tmp/cco5PJAb.s:992    .text.MonWriteBit:0000000000000000 MonWriteBit
     /tmp/cco5PJAb.s:1005   .text.MonTxDump:0000000000000000 $t
     /tmp/cco5PJAb.s:1012   .text.MonTxDump:0000000000000000 MonTxDump
     /tmp/cco5PJAb.s:1025   .text.MonHelp:0000000000000000 $t
     /tmp/cco5PJAb.s:1032   .text.MonHelp:0000000000000000 MonHelp
     /tmp/cco5PJAb.s:1104   .text.MonHelp:0000000000000058 $d
     /tmp/cco5PJAb.s:1118   .text.MonGetCommand:0000000000000000 $t
     /tmp/cco5PJAb.s:1125   .text.MonGetCommand:0000000000000000 MonGetCommand
     /tmp/cco5PJAb.s:1200   .text.MonGetCommand:0000000000000056 $d
     /tmp/cco5PJAb.s:1255   .text.MonGetCommand:00000000000000c4 $t
     /tmp/cco5PJAb.s:1566   .text.MonGetCommand:0000000000000268 $d
                            *COM*:000000000000001e monstr
     /tmp/cco5PJAb.s:1577   .text.SET_AHD_SYNC_PARA:0000000000000000 $t
     /tmp/cco5PJAb.s:1584   .text.SET_AHD_SYNC_PARA:0000000000000000 SET_AHD_SYNC_PARA
     /tmp/cco5PJAb.s:1809   .text.SET_AHD_SYNC_PARA:0000000000000154 $d
     /tmp/cco5PJAb.s:1814   .text.SET_HDMI_640_480P_PARA:0000000000000000 $t
     /tmp/cco5PJAb.s:1821   .text.SET_HDMI_640_480P_PARA:0000000000000000 SET_HDMI_640_480P_PARA
     /tmp/cco5PJAb.s:2470   .text.SET_HDMI_640_480P_PARA:00000000000003fc $d
     /tmp/cco5PJAb.s:2473   .text.SET_HDMI_640_480P_PARA:0000000000000400 $t
     /tmp/cco5PJAb.s:3038   .text.SET_HDMI_SYNC_PARA:0000000000000000 $t
     /tmp/cco5PJAb.s:3045   .text.SET_HDMI_SYNC_PARA:0000000000000000 SET_HDMI_SYNC_PARA
     /tmp/cco5PJAb.s:3065   .text.SET_HDMI_SYNC_PARA:000000000000000c $d
     /tmp/cco5PJAb.s:3070   .text.Monitor:0000000000000000 $t
     /tmp/cco5PJAb.s:3077   .text.Monitor:0000000000000000 Monitor
     /tmp/cco5PJAb.s:3566   .text.Monitor:00000000000002f4 $d
     /tmp/cco5PJAb.s:3586   .text.Monitor:0000000000000338 $t
     /tmp/cco5PJAb.s:4165   .text.Monitor:000000000000072c $d
     /tmp/cco5PJAb.s:4169   .text.Monitor:0000000000000734 $t
     /tmp/cco5PJAb.s:4778   .text.Monitor:0000000000000ae4 $d
     /tmp/cco5PJAb.s:4819   .text.Monitor:0000000000000b80 $t
     /tmp/cco5PJAb.s:5187   .text.Monitor:0000000000000dbc $d
     /tmp/cco5PJAb.s:5311   .data.AccessEnable:0000000000000000 AccessEnable
     /tmp/cco5PJAb.s:5250   .bss.RS2_Xbusy:0000000000000000 RS2_Xbusy
     /tmp/cco5PJAb.s:5268   .bss.RS_Xbusy:0000000000000000 RS_Xbusy
     /tmp/cco5PJAb.s:5262   .bss.RS2_out:0000000000000000 RS2_out
     /tmp/cco5PJAb.s:5256   .bss.RS2_in:0000000000000000 RS2_in
     /tmp/cco5PJAb.s:5280   .bss.RS_out:0000000000000000 RS_out
     /tmp/cco5PJAb.s:5274   .bss.RS_in:0000000000000000 RS_in
                            *COM*:000000000000001e DVR_buf
     /tmp/cco5PJAb.s:5322   .data.Monitor_I2C:0000000000000000 Monitor_I2C
     /tmp/cco5PJAb.s:5244   .bss.Monitor_flag:0000000000000000 Monitor_flag
     /tmp/cco5PJAb.s:5328   .data.echo:0000000000000000 echo
     /tmp/cco5PJAb.s:5286   .bss.argc:0000000000000000 argc
                            *COM*:0000000000000001 MonRdata
     /tmp/cco5PJAb.s:5316   .data.MonAddress:0000000000000000 MonAddress
                            *COM*:0000000000000004 newInRes
     /tmp/cco5PJAb.s:5245   .bss.Monitor_flag:0000000000000000 $d
     /tmp/cco5PJAb.s:5247   .bss.RS2_Xbusy:0000000000000000 $d
     /tmp/cco5PJAb.s:5257   .bss.RS2_in:0000000000000000 $d
     /tmp/cco5PJAb.s:5263   .bss.RS2_out:0000000000000000 $d
     /tmp/cco5PJAb.s:5265   .bss.RS_Xbusy:0000000000000000 $d
     /tmp/cco5PJAb.s:5275   .bss.RS_in:0000000000000000 $d
     /tmp/cco5PJAb.s:5281   .bss.RS_out:0000000000000000 $d
     /tmp/cco5PJAb.s:5287   .bss.argc:0000000000000000 $d
     /tmp/cco5PJAb.s:5292   .bss.comment.8582:0000000000000000 comment.8582
     /tmp/cco5PJAb.s:5293   .bss.comment.8582:0000000000000000 $d
ARM GAS  /tmp/cco5PJAb.s 			page 159


     /tmp/cco5PJAb.s:5298   .bss.incnt.8583:0000000000000000 incnt.8583
     /tmp/cco5PJAb.s:5299   .bss.incnt.8583:0000000000000000 $d
     /tmp/cco5PJAb.s:5304   .bss.last_argc.8584:0000000000000000 last_argc.8584
     /tmp/cco5PJAb.s:5305   .bss.last_argc.8584:0000000000000000 $d
     /tmp/cco5PJAb.s:5307   .data.AccessEnable:0000000000000000 $d
     /tmp/cco5PJAb.s:5325   .data.echo:0000000000000000 $d
     /tmp/cco5PJAb.s:5331   .rodata.MonHelp.str1.4:0000000000000000 $d
     /tmp/cco5PJAb.s:5368   .rodata.MonIncDecI2C.str1.4:0000000000000000 $d
     /tmp/cco5PJAb.s:5380   .rodata.Monitor.str1.4:0000000000000000 $d
     /tmp/cco5PJAb.s:5534   .rodata.Prompt.str1.4:0000000000000000 $d
     /tmp/cco5PJAb.s:5546   .rodata.SET_AHD_SYNC_PARA.str1.4:0000000000000000 $d
     /tmp/cco5PJAb.s:5550   .rodata.SET_HDMI_640_480P_PARA.str1.4:0000000000000000 $d
     /tmp/cco5PJAb.s:5555   .rodata.SET_HDMI_SYNC_PARA.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
huart2
Printf
day
hour
minute
second
WriteEEP
ReadEEP
VXISI2CWrite
VXISI2CRead
VS8812Write
VS8812Read
tp28xx_byte_write
tp28xx_byte_read
HDMIRX_WriteI2C_Byte
HDMIRX_ReadI2C_Byte
gHDMI_Index
MCUTimerReactiveTimerEvent
user_pwm_setvalue
GET_ALC122
SET_ALC122
HS_Select_Win
TP_bt1120_720P_1080P_mode0_w0
TP_bt1120_1080P_1080P_mode0_w0
TP_bt1120_NTSC_1080P_mode0_w0
TP_bt1120_PAL_1080P_mode0_w0
TP_InputMode
Init_TP280x_RegSet
SET_VS4210_720_480_out
SelectInputMode
bSignal
TVI_Command
presetNum
TVI_speed
TVI_Chksum
ptztxflag
