ARM GAS  /tmp/ccxsI2YD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB96:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include <stdio.h>
  27:Src/main.c    **** #include <stdlib.h>
  28:Src/main.c    **** #include <ctype.h>
  29:Src/main.c    **** #include <errno.h>
  30:Src/main.c    **** #ifdef __GNUC__
  31:Src/main.c    ****     #include <sys/unistd.h>
  32:Src/main.c    **** #endif
  33:Src/main.c    **** 
ARM GAS  /tmp/ccxsI2YD.s 			page 2


  34:Src/main.c    **** #include "VXIS_Extern_Define.h"
  35:Src/main.c    **** #include "sw_i2c0.h"  //TP2824
  36:Src/main.c    **** #include "sw_i2c1.h"  //VS4210
  37:Src/main.c    **** #include "sw_i2c2.h"  //IT66121
  38:Src/main.c    **** #include "VX_swi2c.h"
  39:Src/main.c    **** #include "ite66121.h"
  40:Src/main.c    **** #include "HDMI_RX_lib.h"
  41:Src/main.c    **** #include "VS4210.h"
  42:Src/main.c    **** #include "IRdef.h"
  43:Src/main.c    **** #include "TP2802.h"
  44:Src/main.c    **** #include "VX_OSD_Simple.h"
  45:Src/main.c    **** #include "monitor.h"
  46:Src/main.c    **** #include "Printf.h"
  47:Src/main.c    **** #include "Etc_eep.h"
  48:Src/main.c    **** #include 	"audio.h"
  49:Src/main.c    **** #include "keyremo.h"
  50:Src/main.c    **** #include "VX8812.h"
  51:Src/main.c    **** #include "HDMI_RX_lib.h"
  52:Src/main.c    **** 
  53:Src/main.c    **** #include "TOA_Protocol.h"
  54:Src/main.c    **** 
  55:Src/main.c    **** //#include "VS4210_param_Mode88.h"
  56:Src/main.c    **** //#include "VS4210_param_Modex26.h"
  57:Src/main.c    **** 
  58:Src/main.c    **** #include "GT911.h"
  59:Src/main.c    **** //#include "exOSDfont.h"
  60:Src/main.c    **** 
  61:Src/main.c    **** //#include "it660x.h"
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END Includes */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  66:Src/main.c    **** /* USER CODE BEGIN PTD */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END PTD */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  71:Src/main.c    **** /* USER CODE BEGIN PD */
  72:Src/main.c    **** #define RXBUFMAX 50
  73:Src/main.c    **** #define IR_Vendor_Code_ 0xFF00
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE END PD */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  78:Src/main.c    **** /* USER CODE BEGIN PM */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE END PM */
  81:Src/main.c    **** 
  82:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  83:Src/main.c    **** TIM_HandleTypeDef htim3;
  84:Src/main.c    **** 
  85:Src/main.c    **** UART_HandleTypeDef huart1;
  86:Src/main.c    **** UART_HandleTypeDef huart2;
  87:Src/main.c    **** 
  88:Src/main.c    **** ADC_HandleTypeDef hadc1;
  89:Src/main.c    **** TIM_HandleTypeDef htim2;
  90:Src/main.c    **** 
ARM GAS  /tmp/ccxsI2YD.s 			page 3


  91:Src/main.c    **** /* USER CODE BEGIN PV */
  92:Src/main.c    **** volatile tByte VS4210_ADDR = 0x40 ;
  93:Src/main.c    **** volatile tByte VS8812_ADDR = 0x12 ;
  94:Src/main.c    **** #define OSD_OFF_SEC 10
  95:Src/main.c    **** 
  96:Src/main.c    **** //RX
  97:Src/main.c    **** tByte	ManVidRes;
  98:Src/main.c    **** tByte	half_scaler = 0;
  99:Src/main.c    **** tByte	DebugLevel;
 100:Src/main.c    **** tByte	DayNightLevel=0;
 101:Src/main.c    **** tWord LightSensor_ADC=0;
 102:Src/main.c    **** BYTE AutoDayNightDelay=0;
 103:Src/main.c    **** DATA BYTE PWMLevel=0x80;
 104:Src/main.c    **** BYTE TimeStep;
 105:Src/main.c    **** BYTE	PowerFlag=1;
 106:Src/main.c    **** DATA BYTE keytic=0,tptic=0;
 107:Src/main.c    **** BYTE	SelectModeType;
 108:Src/main.c    **** BYTE	Priority;
 109:Src/main.c    **** BYTE CAMA_M;	
 110:Src/main.c    **** BYTE CAMB_M;	
 111:Src/main.c    **** BYTE CAMC_M;	
 112:Src/main.c    **** BYTE CAMR_M;
 113:Src/main.c    **** BYTE OSD_MIRROR[4]={0,0,0,0};
 114:Src/main.c    **** BYTE OSD_SPEAKER[4]={0,0,0,0};
 115:Src/main.c    **** BYTE BOOT_ISSUE=1;
 116:Src/main.c    **** BYTE CURRENT_CH=0;
 117:Src/main.c    **** tByte ExOsdContent[256] ;
 118:Src/main.c    **** tByte PrebVXIS_InputMode[4]= {250,250,250,250} ;
 119:Src/main.c    **** 
 120:Src/main.c    **** int OSDPreSecCount =-1 ;
 121:Src/main.c    **** BYTE SelectInputMode=0;///0=HDMI , 1=AHD
 122:Src/main.c    **** BYTE CheckSelectInputMode=0;///0=HDMI , 1=AHD
 123:Src/main.c    **** 
 124:Src/main.c    **** //audio
 125:Src/main.c    **** tByte gPreAudioSampleFreq ;
 126:Src/main.c    **** tByte gPrebAUDO_INDEX  ;
 127:Src/main.c    **** tByte gbAUDO_INDEX = 0  ;
 128:Src/main.c    **** static tByte gAudioSampleFreq[4] ;
 129:Src/main.c    **** 
 130:Src/main.c    **** tWord gMode0LoopCount = 0 ;
 131:Src/main.c    **** tByte gMode0LoopFlg = 0 ;
 132:Src/main.c    **** tByte gMode0LoopSecCount = 0 ;
 133:Src/main.c    **** tByte gMode0LoopSecCmpVal = 10 ;
 134:Src/main.c    **** 
 135:Src/main.c    **** //Rx
 136:Src/main.c    **** static tByte bOldSignal[4] ;
 137:Src/main.c    **** tByte bSignal[4]= {0,0,0,0} ;
 138:Src/main.c    **** extern tByte PreVState[4] ;
 139:Src/main.c    **** extern tByte VState[4] ;
 140:Src/main.c    **** extern tByte AState[4] ;
 141:Src/main.c    **** 
 142:Src/main.c    **** //Tx
 143:Src/main.c    **** tByte TxCount = 0 ;
 144:Src/main.c    **** 
 145:Src/main.c    **** T_VS4210_MutiWindows pVS4210_MutiWindows1 ;
 146:Src/main.c    **** unsigned int volatile Tim1_count=0;
 147:Src/main.c    **** bit OSD_Show_Flg = 0 ;
ARM GAS  /tmp/ccxsI2YD.s 			page 4


 148:Src/main.c    **** 
 149:Src/main.c    **** static int TimeOutCount ;
 150:Src/main.c    **** 
 151:Src/main.c    **** extern DATA BYTE keytic;
 152:Src/main.c    **** extern 	DATA BYTE Key;
 153:Src/main.c    **** extern 	bit KeyReady, RepeatKey;
 154:Src/main.c    **** 
 155:Src/main.c    **** extern BYTE  updn_reg[4];
 156:Src/main.c    **** extern BYTE Time5ms;
 157:Src/main.c    **** extern bit ChangeKey;
 158:Src/main.c    **** extern tByte RS_buf[BUF_MAX];
 159:Src/main.c    **** extern  tByte RS2_buf[TOA_BUF_MAX];
 160:Src/main.c    **** extern  tByte	 RS_in, RS2_in;
 161:Src/main.c    **** extern BYTE tic02;
 162:Src/main.c    **** extern WORD tic03,tic04,tic05;
 163:Src/main.c    **** extern volatile WORD  g_usTimerCounter;
 164:Src/main.c    **** extern volatile bit g_bNotifyTimer0Int;
 165:Src/main.c    **** extern BYTE	AudioVol;
 166:Src/main.c    **** extern BYTE NowModeState;
 167:Src/main.c    **** extern BYTE Disp_Input;
 168:Src/main.c    **** extern BYTE OSD_LOCKF;
 169:Src/main.c    **** extern BYTE TriggerFlag;
 170:Src/main.c    **** 
 171:Src/main.c    **** extern BYTE	MainSetSelectMode[13];
 172:Src/main.c    **** /*extern*/ tByte gabVXIS_Input_mirrorH[4];
 173:Src/main.c    **** extern tByte gWindowNum ;
 174:Src/main.c    **** 
 175:Src/main.c    **** extern BYTE TP_ACTION;
 176:Src/main.c    **** extern BYTE TP_PRES_DOWN;
 177:Src/main.c    **** extern BYTE TouchP;
 178:Src/main.c    **** extern USHORT ucTickCount;
 179:Src/main.c    **** extern bit   AccessEnable;
 180:Src/main.c    **** extern tByte TP_InputMode;
 181:Src/main.c    **** extern tByte mode[0];
 182:Src/main.c    **** 
 183:Src/main.c    **** extern tcByte VS4210_TP_bt1120_1080P_1080P_mode0_w0_88param[VS4210_INIT_NUMBER] ;
 184:Src/main.c    **** extern tcByte VS4210_TP_bt1120_720P_1080P_mode0_w0_88param[VS4210_INIT_NUMBER] ;
 185:Src/main.c    **** extern tcByte VS4210_TP_bt1120_NTSC_1080P_mode0_w0_88param[VS4210_INIT_NUMBER] ;
 186:Src/main.c    **** extern tcByte VS4210_TP_bt1120_PAL_1080P_mode0_w0_88param[VS4210_INIT_NUMBER] ;
 187:Src/main.c    **** 
 188:Src/main.c    **** //Extern OSD 20200110-01
 189:Src/main.c    **** extern const unsigned char UserDefineFont1[40*(4+23+1)] ; //extern OSD
 190:Src/main.c    **** 
 191:Src/main.c    **** extern tcByte VS4210_hdmi1080P_1080P_mode0_w0_88param[VS4210_INIT_NUMBER];
 192:Src/main.c    **** extern tcByte VS4210_Addr_88param[VS4210_INIT_NUMBER];
 193:Src/main.c    **** 
 194:Src/main.c    **** tByte volatile gRxLoopFlg = 1 ;
 195:Src/main.c    **** T_VS4210_MutiWindows pVS4210_JointKind1 ;
 196:Src/main.c    **** 
 197:Src/main.c    **** static volatile tByte  u8PowerFlg  = 0 ;
 198:Src/main.c    **** /*static volatile */tByte  OSDSecCount = 0 ;
 199:Src/main.c    **** //static volatile 
 200:Src/main.c    **** 	tByte  OSDStateFlg = 1 ;
 201:Src/main.c    **** static volatile tByte  IR_ShiftCount = 0 ;
 202:Src/main.c    **** static volatile tDWord IR_4BYTE = 0 ;
 203:Src/main.c    **** static volatile tWord  u16Vendor ;
 204:Src/main.c    **** static volatile tByte  u8IRcode ;
ARM GAS  /tmp/ccxsI2YD.s 			page 5


 205:Src/main.c    **** static volatile tByte  u8IRCheckcode ;
 206:Src/main.c    **** static volatile tByte  PreIR_Code = 0 ;
 207:Src/main.c    **** static volatile tByte  IR_Code = 0 ;
 208:Src/main.c    **** static volatile tByte  IR_StartFlg = 0 ;
 209:Src/main.c    **** static volatile tByte  IR_END_Flg = 0 ;
 210:Src/main.c    **** static volatile tByte  IR_IRQFlg = 0 ;
 211:Src/main.c    **** static volatile tByte  PreIR_IRQ_Index = 0 ;
 212:Src/main.c    **** static volatile tByte  IR_IRQ_Index = 0 ;
 213:Src/main.c    **** static volatile tWord  IR_PlusTimeVal = 0 ;
 214:Src/main.c    **** static volatile tDWord tim3count = 0 ; //10us
 215:Src/main.c    **** 
 216:Src/main.c    **** static volatile tDWord TxiCount = 0 ;
 217:Src/main.c    **** static volatile tDWord RxiCount = 0 ;
 218:Src/main.c    **** 
 219:Src/main.c    **** static char Rx_data[2],Rx2_data[2]/*, Rx_Buffer[RXBUFMAX]*/, Transfer_cplt;
 220:Src/main.c    **** static volatile int Rx_indx = 0 ;
 221:Src/main.c    **** static volatile int RxBufIndex= 0 ;
 222:Src/main.c    **** static char gRxbuf[RXBUFMAX] ;
 223:Src/main.c    **** 
 224:Src/main.c    **** static volatile int DebugFlg = 0 ;
 225:Src/main.c    **** 
 226:Src/main.c    **** //static int OutMapLoopModeIndex = VS4210_LOOP_MODE_NUMBER ;
 227:Src/main.c    **** //static tByte OutMapLoopOutSizeIndex ;
 228:Src/main.c    **** 
 229:Src/main.c    **** /* USER CODE END PV */
 230:Src/main.c    **** 
 231:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 232:Src/main.c    **** void SystemClock_Config(void);
 233:Src/main.c    **** //static void MX_ADC1_Init(void);
 234:Src/main.c    **** //static void MX_TIM2_Init(void);
 235:Src/main.c    **** static void MX_GPIO_Init(void);
 236:Src/main.c    **** static void MX_TIM3_Init(void);
 237:Src/main.c    **** static void MX_USART1_UART_Init(void);
 238:Src/main.c    **** static void MX_USART2_UART_Init(void);
 239:Src/main.c    **** 
 240:Src/main.c    **** extern void MCUTimerInitialTimerEvent(void);
 241:Src/main.c    **** extern void MCUTimerActiveTimerEvent(WORD usTime, BYTE ucEventID);
 242:Src/main.c    **** extern BYTE RS_ready(void);
 243:Src/main.c    **** extern BYTE RS2_ready(void);
 244:Src/main.c    **** 
 245:Src/main.c    **** extern void SysTimerHandler(void);
 246:Src/main.c    **** 
 247:Src/main.c    **** 
 248:Src/main.c    **** /* USER CODE BEGIN PFP */
 249:Src/main.c    **** #ifdef __GNUC__
 250:Src/main.c    **** 
 251:Src/main.c    **** // With GCC/RAISONANCE, small printf (option LD Linker->Libraries->Small printf
 252:Src/main.c    **** 
 253:Src/main.c    **** //   set to 'Yes') calls __io_putchar()
 254:Src/main.c    **** 
 255:Src/main.c    **** int _write(int file, char *data, int len)
 256:Src/main.c    **** {
 257:Src/main.c    ****     if ((file != STDOUT_FILENO) && (file != STDERR_FILENO))
 258:Src/main.c    ****     {
 259:Src/main.c    ****         errno = EBADF;
 260:Src/main.c    ****         return -1;
 261:Src/main.c    ****     }
ARM GAS  /tmp/ccxsI2YD.s 			page 6


 262:Src/main.c    ****     // arbitrary timeout 1000
 263:Src/main.c    ****     HAL_StatusTypeDef status =
 264:Src/main.c    ****         HAL_UART_Transmit(&huart1, (uint8_t*)data, (uint16_t)len, 1000);
 265:Src/main.c    ****     // return # of bytes written - as best we can tell
 266:Src/main.c    ****     return (status == HAL_OK ? len : 0);
 267:Src/main.c    **** }
 268:Src/main.c    **** #else
 269:Src/main.c    **** int fputc(int ch, FILE *f)
 270:Src/main.c    **** {
 271:Src/main.c    ****     /* Place your implementation of fputc here */
 272:Src/main.c    ****     /* e.g. write a character to the USART */
 273:Src/main.c    ****     HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 100);
 274:Src/main.c    ****     return ch;
 275:Src/main.c    **** }
 276:Src/main.c    **** #endif
 277:Src/main.c    **** 
 278:Src/main.c    **** void Audio_Sel(unsigned char mode )
 279:Src/main.c    **** {
 280:Src/main.c    ****     gbAUDO_INDEX = mode ;
 281:Src/main.c    ****     switch(mode)
 282:Src/main.c    ****     {
 283:Src/main.c    ****     case HDMI_AUDIO_NONE:
 284:Src/main.c    **** //        A_AUDIO = 1 ;
 285:Src/main.c    **** //        B_AUDIO = 1 ;
 286:Src/main.c    **** //        H1_AUDIO= 1 ;
 287:Src/main.c    **** //        H2_AUDIO= 1 ;
 288:Src/main.c    **** //        H3_AUDIO= 1 ;
 289:Src/main.c    **** //        H4_AUDIO= 1 ;
 290:Src/main.c    ****   //mask by ryan@20210126             HAL_GPIO_WritePin(A_AUDIO_GPIO_Port, A_AUDIO_Pin, GPIO_PIN_SE
 291:Src/main.c    ****         HAL_GPIO_WritePin(B_AUDIO_GPIO_Port, B_AUDIO_Pin, GPIO_PIN_SET);
 292:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 293:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 294:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 295:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 296:Src/main.c    ****         break ;
 297:Src/main.c    **** 
 298:Src/main.c    ****     case HDMI_AUDIO_1:
 299:Src/main.c    **** //        A_AUDIO = 0 ;
 300:Src/main.c    **** //        B_AUDIO = 1 ;
 301:Src/main.c    **** //        H1_AUDIO= 0 ;
 302:Src/main.c    **** //        H2_AUDIO= 1 ;
 303:Src/main.c    **** //        H3_AUDIO= 1 ;
 304:Src/main.c    **** //        H4_AUDIO= 1 ;
 305:Src/main.c    **** 
 306:Src/main.c    ****   //mask by ryan@20210126      HAL_GPIO_WritePin(A_AUDIO_GPIO_Port, A_AUDIO_Pin, GPIO_PIN_RESET);
 307:Src/main.c    ****         HAL_GPIO_WritePin(B_AUDIO_GPIO_Port, B_AUDIO_Pin, GPIO_PIN_SET);
 308:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_RESET);
 309:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 310:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 311:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 312:Src/main.c    **** 
 313:Src/main.c    ****         HDMI_Tx_SetAudioFs(gAudioSampleFreq[0])  ;
 314:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[0] ;
 315:Src/main.c    ****         break ;
 316:Src/main.c    **** 
 317:Src/main.c    ****     case HDMI_AUDIO_2:
 318:Src/main.c    **** //        A_AUDIO = 0 ;
ARM GAS  /tmp/ccxsI2YD.s 			page 7


 319:Src/main.c    **** //        B_AUDIO = 1 ;
 320:Src/main.c    **** //        H1_AUDIO= 1 ;
 321:Src/main.c    **** //        H2_AUDIO= 0 ;
 322:Src/main.c    **** //        H3_AUDIO= 1 ;
 323:Src/main.c    **** //        H4_AUDIO= 1 ;
 324:Src/main.c    **** 
 325:Src/main.c    ****   //mask by ryan@20210126             HAL_GPIO_WritePin(A_AUDIO_GPIO_Port, A_AUDIO_Pin, GPIO_PIN_RE
 326:Src/main.c    ****         HAL_GPIO_WritePin(B_AUDIO_GPIO_Port, B_AUDIO_Pin, GPIO_PIN_SET);
 327:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 328:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_RESET);
 329:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 330:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 331:Src/main.c    **** 
 332:Src/main.c    ****         HDMI_Tx_SetAudioFs(gAudioSampleFreq[1])  ;
 333:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[1] ;
 334:Src/main.c    ****         break ;
 335:Src/main.c    **** 
 336:Src/main.c    ****     case HDMI_AUDIO_3:
 337:Src/main.c    **** //        A_AUDIO = 1 ;
 338:Src/main.c    **** //        B_AUDIO = 0 ;
 339:Src/main.c    **** //        H1_AUDIO= 1 ;
 340:Src/main.c    **** //        H2_AUDIO= 1 ;
 341:Src/main.c    **** //        H3_AUDIO= 0 ;
 342:Src/main.c    **** //        H4_AUDIO= 1 ;
 343:Src/main.c    ****    //mask by ryan@20210126            HAL_GPIO_WritePin(A_AUDIO_GPIO_Port, A_AUDIO_Pin, GPIO_PIN_SE
 344:Src/main.c    ****         HAL_GPIO_WritePin(B_AUDIO_GPIO_Port, B_AUDIO_Pin, GPIO_PIN_RESET);
 345:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 346:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 347:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_RESET);
 348:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 349:Src/main.c    **** 
 350:Src/main.c    ****         HDMI_Tx_SetAudioFs(gAudioSampleFreq[2])  ;
 351:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[2] ;
 352:Src/main.c    ****         break ;
 353:Src/main.c    **** 
 354:Src/main.c    ****     case HDMI_AUDIO_4:
 355:Src/main.c    **** //        A_AUDIO = 1 ;
 356:Src/main.c    **** //        B_AUDIO = 0 ;
 357:Src/main.c    **** //        H1_AUDIO= 1 ;
 358:Src/main.c    **** //        H2_AUDIO= 1 ;
 359:Src/main.c    **** //        H3_AUDIO= 1 ;
 360:Src/main.c    **** //        H4_AUDIO= 0 ;
 361:Src/main.c    ****   //mask by ryan@20210126             HAL_GPIO_WritePin(A_AUDIO_GPIO_Port, A_AUDIO_Pin, GPIO_PIN_SE
 362:Src/main.c    ****         HAL_GPIO_WritePin(B_AUDIO_GPIO_Port, B_AUDIO_Pin, GPIO_PIN_RESET);
 363:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 364:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 365:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 366:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_RESET);
 367:Src/main.c    **** 
 368:Src/main.c    ****         HDMI_Tx_SetAudioFs(gAudioSampleFreq[3])  ;
 369:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[3] ;
 370:Src/main.c    ****         break ;
 371:Src/main.c    ****     }
 372:Src/main.c    **** }
 373:Src/main.c    **** 
 374:Src/main.c    **** void SET_Audio_Mute(unsigned char mode )
 375:Src/main.c    **** {
ARM GAS  /tmp/ccxsI2YD.s 			page 8


 376:Src/main.c    **** 
 377:Src/main.c    **** if(mode==ON)
 378:Src/main.c    **** 	HAL_GPIO_WritePin(AUD_I2C_MUTE_Port,AUD_I2C_MUTE_Pin, GPIO_PIN_RESET);
 379:Src/main.c    **** else
 380:Src/main.c    **** 	HAL_GPIO_WritePin(AUD_I2C_MUTE_Port,AUD_I2C_MUTE_Pin, GPIO_PIN_SET);
 381:Src/main.c    **** 
 382:Src/main.c    **** Printf("(*SET_Audio_Mute=%d)",(WORD)mode);
 383:Src/main.c    **** 
 384:Src/main.c    **** }
 385:Src/main.c    **** 
 386:Src/main.c    **** //Sleep
 387:Src/main.c    **** /*
 388:Src/main.c    **** void msleep(unsigned int i )
 389:Src/main.c    **** {
 390:Src/main.c    ****     HAL_Delay(i);
 391:Src/main.c    **** }
 392:Src/main.c    **** */
 393:Src/main.c    **** 
 394:Src/main.c    **** /* USER CODE END PFP */
 395:Src/main.c    **** 
 396:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 397:Src/main.c    **** /* USER CODE BEGIN 0 */
 398:Src/main.c    **** 
 399:Src/main.c    **** void InitialTimerEvent(void)
 400:Src/main.c    **** {
 401:Src/main.c    **** 	MCUTimerInitialTimerEvent();  //clear all of timer event	
 402:Src/main.c    **** 
 403:Src/main.c    **** 		#if (_DEBUG_MESSAGE_SysTimerEvent==ON)
 404:Src/main.c    ****   		//MCUTimerActiveTimerEvent(SEC(10), _SYSTEM_TIMER_EVENT_SHOW_WORKING_TIMER);//for timer
 405:Src/main.c    **** 
 406:Src/main.c    **** 
 407:Src/main.c    **** 
 408:Src/main.c    **** 		   //	MCUTimerActiveTimerEvent(SEC(6), _SYSTEM_TIMER_EVENT_BOOT_VIDEO_DETECT);//for timer
 409:Src/main.c    ****   		//MCUTimerActiveTimerEvent(SEC(5), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);//for timer
 410:Src/main.c    **** 
 411:Src/main.c    **** //	MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_UART2_CHECK);//for test
 412:Src/main.c    **** 		
 413:Src/main.c    ****      		#endif
 414:Src/main.c    **** //MCUTimerActiveTimerEvent(SEC(5), _SYSTEM_TIMER_EVENT_VIDEO_RESET);			
 415:Src/main.c    **** 	/*		
 416:Src/main.c    ****      	MCUTimerActiveTimerEvent(SEC(5-2), _SYSTEM_TIMER_EVENT_BOOT_VIDEO_DETECT);//for timer
 417:Src/main.c    **** 	MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_LIGHT_SENSOR_CHECK);//for timer
 418:Src/main.c    **** 	MCUTimerActiveTimerEvent(100, _SYSTEM_TIMER_EVENT_GRN_ON);
 419:Src/main.c    **** 	MCUTimerActiveTimerEvent(SEC(1),  _SYSTEM_TIMER_EVENT_ADC_CHECK);
 420:Src/main.c    **** 	*/
 421:Src/main.c    **** }
 422:Src/main.c    **** 
 423:Src/main.c    **** void GetRS232_CMD(void)
 424:Src/main.c    **** {
 425:Src/main.c    ****     char achstr[3] ;
 426:Src/main.c    ****     char *endptr ;
 427:Src/main.c    ****     long IrNum  ;
 428:Src/main.c    ****     if (Transfer_cplt == 1)
 429:Src/main.c    ****     {
 430:Src/main.c    ****         Transfer_cplt = 0 ;
 431:Src/main.c    ****         printf("RxBufIndex=%d,str=%s\r\n",RxBufIndex, gRxbuf);
 432:Src/main.c    ****         if ( RxBufIndex >= 4 )
ARM GAS  /tmp/ccxsI2YD.s 			page 9


 433:Src/main.c    ****         {
 434:Src/main.c    ****             if ((gRxbuf[0] =='G') && (gRxbuf[3]=='g'))
 435:Src/main.c    ****             {
 436:Src/main.c    ****                 achstr[2] = '\0' ;
 437:Src/main.c    ****                 memcpy(&achstr[0], &gRxbuf[1], 2 ) ;
 438:Src/main.c    ****                 IrNum = strtol(achstr, &endptr, 16) ;
 439:Src/main.c    ****                 printf("IrNum=0x%02x\r\n",(int)IrNum);
 440:Src/main.c    ****             }
 441:Src/main.c    ****             else if ((gRxbuf[0] =='S') && (gRxbuf[5]=='s'))
 442:Src/main.c    ****             {                
 443:Src/main.c    ****             }
 444:Src/main.c    ****         }
 445:Src/main.c    ****     }
 446:Src/main.c    **** }
 447:Src/main.c    **** 
 448:Src/main.c    **** //static
 449:Src/main.c    **** 	void setloopoutmode(int index)
 450:Src/main.c    **** {
 451:Src/main.c    **** /*
 452:Src/main.c    **** 	pVS4210_JointKind1.AudioChannel = HDMI_AUDIO_NONE ;
 453:Src/main.c    **** 	  pVS4210_JointKind1.DrawBoxFlg =1 ;
 454:Src/main.c    **** 	  pVS4210_JointKind1.DrawOSDFlg =0x03 ; //bits 0 ,1
 455:Src/main.c    **** //	pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE1 ;
 456:Src/main.c    **** 	  pVS4210_JointKind1.OutputSize = _OUTPUT_800x480;//_OUTPUT_1080P60 ;
 457:Src/main.c    **** */
 458:Src/main.c    ****     switch(index)
 459:Src/main.c    ****     {
 460:Src/main.c    ****     case VS4210_LOOP_MODE0_w0:
 461:Src/main.c    ****     {
 462:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE0_w0 ;
 463:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 464:Src/main.c    **** 	 OSD_MIRROR[0]=CAMA_M;
 465:Src/main.c    **** 	 gabVXIS_Input_mirrorH[0]=CAMA_M;
 466:Src/main.c    ****         printf("VS4210_MODE0_w0\r\n") ;
 467:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 468:Src/main.c    ****         break ;
 469:Src/main.c    ****     }
 470:Src/main.c    ****     case VS4210_LOOP_MODE0_w1:
 471:Src/main.c    ****     {
 472:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE0_w1 ;
 473:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 474:Src/main.c    ****    	 OSD_MIRROR[0]=CAMB_M;
 475:Src/main.c    **** 	 gabVXIS_Input_mirrorH[1]=CAMB_M; 
 476:Src/main.c    **** 	 OSD_SPEAKER[0]=ON;
 477:Src/main.c    ****         printf("VS4210_MODE0_w1\r\n") ;
 478:Src/main.c    ****         break ;
 479:Src/main.c    ****     }
 480:Src/main.c    ****     case VS4210_LOOP_MODE0_w2:
 481:Src/main.c    ****     {
 482:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE0_w2 ;
 483:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 484:Src/main.c    **** 	 OSD_MIRROR[0]=CAMC_M;	
 485:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 	 
 486:Src/main.c    **** 	 OSD_SPEAKER[0]=ON;
 487:Src/main.c    ****         printf("VS4210_MODE0_w2\r\n") ;
 488:Src/main.c    ****         break ;
 489:Src/main.c    ****     }
ARM GAS  /tmp/ccxsI2YD.s 			page 10


 490:Src/main.c    ****     case VS4210_LOOP_MODE0_w3:
 491:Src/main.c    ****     {
 492:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE0_w3 ;
 493:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 494:Src/main.c    ****    	OSD_MIRROR[0]=CAMR_M;	
 495:Src/main.c    **** 	gabVXIS_Input_mirrorH[3]=CAMR_M; 		
 496:Src/main.c    ****   	OSD_SPEAKER[0]=ON;
 497:Src/main.c    ****         printf("VS4210_MODE0_w3\r\n") ;
 498:Src/main.c    ****         break ;
 499:Src/main.c    ****     }
 500:Src/main.c    ****     case VS4210_LOOP_MODE1:
 501:Src/main.c    ****     {
 502:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE1 ;
 503:Src/main.c    **** 	
 504:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 505:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 506:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 507:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 508:Src/main.c    ****    	  OSD_MIRROR[0]=CAMA_M;	
 509:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 510:Src/main.c    ****    	  OSD_MIRROR[2]=CAMC_M;	
 511:Src/main.c    ****    	  OSD_MIRROR[3]=CAMR_M;	
 512:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
 513:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 514:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 		  
 515:Src/main.c    **** 	gabVXIS_Input_mirrorH[3]=CAMR_M; 		  
 516:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
 517:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;
 518:Src/main.c    **** 	  OSD_SPEAKER[2]=OFF;
 519:Src/main.c    **** 	  OSD_SPEAKER[3]=ON;
 520:Src/main.c    **** 
 521:Src/main.c    ****         printf("VS4210_MODE1\r\n") ;
 522:Src/main.c    ****         break ;
 523:Src/main.c    ****     }
 524:Src/main.c    **** 	
 525:Src/main.c    ****     case VS4210_LOOP_MODE2:
 526:Src/main.c    ****     {
 527:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE2 ;
 528:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 529:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 530:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 531:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 532:Src/main.c    ****         printf("VS4210_MODE2\r\n") ;
 533:Src/main.c    ****         break ;
 534:Src/main.c    ****     }
 535:Src/main.c    **** 	#if 0
 536:Src/main.c    ****     case VS4210_LOOP_MODE8:
 537:Src/main.c    ****     {
 538:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 539:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 540:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 541:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 542:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 543:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 544:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 545:Src/main.c    ****    	  OSD_MIRROR[2]=CAMC_M;	
 546:Src/main.c    ****    	  OSD_MIRROR[3]=CAMR_M;	
ARM GAS  /tmp/ccxsI2YD.s 			page 11


 547:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
 548:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 549:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 		  
 550:Src/main.c    **** 	gabVXIS_Input_mirrorH[3]=CAMR_M;	  
 551:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 552:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;
 553:Src/main.c    **** 	  OSD_SPEAKER[2]=OFF;
 554:Src/main.c    ****         printf("VS4210_MODE8 ch1 ch2 ch3\r\n") ;
 555:Src/main.c    ****         break ;
 556:Src/main.c    ****     }
 557:Src/main.c    **** 	    case VS4210_LOOP_MODE8_412:
 558:Src/main.c    ****     {
 559:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 560:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 561:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 562:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =2 ;
 563:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =0 ;
 564:Src/main.c    **** 	  OSD_MIRROR[0]=CAMR_M;	
 565:Src/main.c    ****    	  OSD_MIRROR[1]=CAMA_M;	
 566:Src/main.c    ****    	  OSD_MIRROR[2]=CAMB_M;	
 567:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMR_M; 		  
 568:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 569:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMB_M; 		  
 570:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 571:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;
 572:Src/main.c    **** 	  OSD_SPEAKER[2]=OFF;
 573:Src/main.c    **** 	  
 574:Src/main.c    ****       //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 575:Src/main.c    ****         printf("VS4210_MODE8 ch4 ch1 ch2\r\n") ;
 576:Src/main.c    ****         break ;
 577:Src/main.c    ****     }
 578:Src/main.c    ****      case VS4210_LOOP_MODE8_123:
 579:Src/main.c    **** 	 {
 580:Src/main.c    **** 			 pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 581:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 582:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 583:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 584:Src/main.c    **** 		   OSD_MIRROR[0]=CAMA_M; 
 585:Src/main.c    **** 		   OSD_MIRROR[1]=CAMB_M; 
 586:Src/main.c    **** 		   OSD_MIRROR[2]=CAMC_M; 
 587:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
 588:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 589:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 		   
 590:Src/main.c    **** 		   OSD_SPEAKER[0]=ON;
 591:Src/main.c    **** 		   OSD_SPEAKER[1]=OFF;
 592:Src/main.c    **** 		   OSD_SPEAKER[2]=OFF;
 593:Src/main.c    **** 		   
 594:Src/main.c    **** 		   //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 595:Src/main.c    **** 			 printf("VS4210_MODE8 ch1 ch2 ch3\r\n") ;
 596:Src/main.c    **** 			 break ;
 597:Src/main.c    **** 		 }
 598:Src/main.c    ****   case VS4210_LOOP_MODE8_124:
 599:Src/main.c    **** 	 {
 600:Src/main.c    **** 			 pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 601:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 602:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 603:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap2 =4 ;
ARM GAS  /tmp/ccxsI2YD.s 			page 12


 604:Src/main.c    **** 		   OSD_MIRROR[0]=CAMA_M; 
 605:Src/main.c    **** 		   OSD_MIRROR[1]=CAMB_M; 
 606:Src/main.c    **** 		   OSD_MIRROR[2]=CAMR_M; 
 607:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
 608:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 609:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMR_M; 		   
 610:Src/main.c    **** 		   OSD_SPEAKER[0]=OFF;
 611:Src/main.c    **** 		   OSD_SPEAKER[1]=OFF;
 612:Src/main.c    **** 		   OSD_SPEAKER[2]=ON;
 613:Src/main.c    **** 		   
 614:Src/main.c    **** 		   //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 615:Src/main.c    **** 			 printf("VS4210_MODE8 ch1 ch2 ch4\r\n") ;
 616:Src/main.c    **** 			 break ;
 617:Src/main.c    **** 		 }	 
 618:Src/main.c    ****   case VS4210_LOOP_MODE8_134:
 619:Src/main.c    **** 	 {
 620:Src/main.c    **** 			 pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 621:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 622:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 623:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap2 =4 ;
 624:Src/main.c    **** 		   OSD_MIRROR[0]=CAMA_M; 
 625:Src/main.c    **** 		   OSD_MIRROR[1]=CAMC_M; 
 626:Src/main.c    **** 		   OSD_MIRROR[2]=CAMR_M; 
 627:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
 628:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 		  
 629:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMR_M; 		   
 630:Src/main.c    **** 		   OSD_SPEAKER[0]=OFF;
 631:Src/main.c    **** 		   OSD_SPEAKER[1]=OFF;
 632:Src/main.c    **** 		   OSD_SPEAKER[2]=ON;
 633:Src/main.c    **** 		   //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 634:Src/main.c    **** 			 printf("VS4210_MODE8 ch1 ch3 ch4\r\n") ;
 635:Src/main.c    **** 			 break ;
 636:Src/main.c    **** 		 }	 
 637:Src/main.c    **** //=============
 638:Src/main.c    **** case VS4210_LOOP_MODE8_213:
 639:Src/main.c    ****    {
 640:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 641:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 642:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 643:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 644:Src/main.c    **** 		 OSD_MIRROR[0]=CAMB_M; 
 645:Src/main.c    **** 		 OSD_MIRROR[1]=CAMA_M; 
 646:Src/main.c    **** 		 OSD_MIRROR[2]=CAMC_M; 
 647:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMB_M; 		  
 648:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 649:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 			 
 650:Src/main.c    **** 		 OSD_SPEAKER[0]=ON;
 651:Src/main.c    **** 		 OSD_SPEAKER[1]=OFF;
 652:Src/main.c    **** 		 OSD_SPEAKER[2]=OFF;
 653:Src/main.c    **** 		 
 654:Src/main.c    **** 		 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 655:Src/main.c    **** 		   printf("VS4210_MODE8 ch2 ch1 ch3\r\n") ;
 656:Src/main.c    **** 		   break ;
 657:Src/main.c    **** 	   }   
 658:Src/main.c    **** case VS4210_LOOP_MODE8_214:
 659:Src/main.c    ****    {
 660:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
ARM GAS  /tmp/ccxsI2YD.s 			page 13


 661:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 662:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 663:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =4 ;
 664:Src/main.c    **** 		 OSD_MIRROR[0]=CAMB_M; 
 665:Src/main.c    **** 		 OSD_MIRROR[1]=CAMA_M; 
 666:Src/main.c    **** 		 OSD_MIRROR[2]=CAMR_M; 
 667:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMB_M; 		  
 668:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 669:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMR_M; 			 
 670:Src/main.c    **** 		 OSD_SPEAKER[0]=OFF;
 671:Src/main.c    **** 		 OSD_SPEAKER[1]=OFF;
 672:Src/main.c    **** 		 OSD_SPEAKER[2]=ON;
 673:Src/main.c    **** 		 
 674:Src/main.c    **** 		 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 675:Src/main.c    **** 		   printf("VS4210_MODE8 ch2 ch1 ch4\r\n") ;
 676:Src/main.c    **** 		   break ;
 677:Src/main.c    **** 	   }   
 678:Src/main.c    **** case VS4210_LOOP_MODE8_234:
 679:Src/main.c    ****    {
 680:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 681:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 682:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 683:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =4 ;
 684:Src/main.c    **** 		 OSD_MIRROR[0]=CAMA_M; 
 685:Src/main.c    **** 		 OSD_MIRROR[1]=CAMC_M; 
 686:Src/main.c    **** 		 OSD_MIRROR[2]=CAMR_M; 
 687:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
 688:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 		  
 689:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMR_M; 			 
 690:Src/main.c    **** 		 OSD_SPEAKER[0]=OFF;
 691:Src/main.c    **** 		 OSD_SPEAKER[1]=OFF;
 692:Src/main.c    **** 		 OSD_SPEAKER[2]=ON;
 693:Src/main.c    **** 		 
 694:Src/main.c    **** 		 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 695:Src/main.c    **** 		   printf("VS4210_MODE8 ch2 ch3 ch4\r\n") ;
 696:Src/main.c    **** 		   break ;
 697:Src/main.c    **** 	   }   
 698:Src/main.c    **** 
 699:Src/main.c    **** //=============
 700:Src/main.c    **** case VS4210_LOOP_MODE8_312:
 701:Src/main.c    ****    {
 702:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 703:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 704:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 705:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =2 ;
 706:Src/main.c    **** 		 OSD_MIRROR[0]=CAMC_M; 
 707:Src/main.c    **** 		 OSD_MIRROR[1]=CAMA_M; 
 708:Src/main.c    **** 		 OSD_MIRROR[2]=CAMB_M; 
 709:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMC_M; 		  
 710:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 711:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMB_M; 		 
 712:Src/main.c    **** 		 OSD_SPEAKER[0]=ON;
 713:Src/main.c    **** 		 OSD_SPEAKER[1]=OFF;
 714:Src/main.c    **** 		 OSD_SPEAKER[2]=OFF;	 
 715:Src/main.c    **** 		 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 716:Src/main.c    **** 		   printf("VS4210_MODE8 ch3 ch1 ch2\r\n") ;
 717:Src/main.c    **** 		   break ;
ARM GAS  /tmp/ccxsI2YD.s 			page 14


 718:Src/main.c    **** 	   }   
 719:Src/main.c    **** case VS4210_LOOP_MODE8_314:
 720:Src/main.c    ****    {
 721:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 722:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 723:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 724:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =4 ;
 725:Src/main.c    **** 		 OSD_MIRROR[0]=CAMC_M; 
 726:Src/main.c    **** 		 OSD_MIRROR[1]=CAMA_M; 
 727:Src/main.c    **** 		 OSD_MIRROR[2]=CAMR_M; 
 728:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMC_M; 		  
 729:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 730:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMR_M; 		 
 731:Src/main.c    **** 		 OSD_SPEAKER[0]=OFF;
 732:Src/main.c    **** 		 OSD_SPEAKER[1]=OFF;
 733:Src/main.c    **** 		 OSD_SPEAKER[2]=ON;	 
 734:Src/main.c    **** 		 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 735:Src/main.c    **** 		   printf("VS4210_MODE8 ch3 ch1 ch4\r\n") ;
 736:Src/main.c    **** 		   break ;
 737:Src/main.c    **** 	   }   
 738:Src/main.c    **** case VS4210_LOOP_MODE8_324:
 739:Src/main.c    ****    {
 740:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 741:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 742:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 743:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =4 ;
 744:Src/main.c    **** 		 OSD_MIRROR[0]=CAMC_M; 
 745:Src/main.c    **** 		 OSD_MIRROR[1]=CAMB_M; 
 746:Src/main.c    **** 		 OSD_MIRROR[2]=CAMR_M; 
 747:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMC_M; 		  
 748:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 749:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMR_M; 			 
 750:Src/main.c    **** 		 OSD_SPEAKER[0]=OFF;
 751:Src/main.c    **** 		 OSD_SPEAKER[1]=OFF;
 752:Src/main.c    **** 		 OSD_SPEAKER[2]=ON;	 
 753:Src/main.c    **** 		 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 754:Src/main.c    **** 		   printf("VS4210_MODE8 ch3 ch2 ch4\r\n") ;
 755:Src/main.c    **** 		   break ;
 756:Src/main.c    **** 	   }   
 757:Src/main.c    **** //=============
 758:Src/main.c    **** 
 759:Src/main.c    **** 		case VS4210_LOOP_MODE8_413:
 760:Src/main.c    **** 		   {
 761:Src/main.c    **** 				   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 762:Src/main.c    **** 				   pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 763:Src/main.c    **** 				   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 764:Src/main.c    **** 				   pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 765:Src/main.c    **** 				 OSD_MIRROR[0]=CAMR_M; 
 766:Src/main.c    **** 				 OSD_MIRROR[1]=CAMA_M; 
 767:Src/main.c    **** 				 OSD_MIRROR[2]=CAMC_M; 
 768:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMR_M; 		  
 769:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 770:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 				 
 771:Src/main.c    **** 				 OSD_SPEAKER[0]=ON;
 772:Src/main.c    **** 				 OSD_SPEAKER[1]=OFF;
 773:Src/main.c    **** 				 OSD_SPEAKER[2]=OFF;  
 774:Src/main.c    **** 				 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
ARM GAS  /tmp/ccxsI2YD.s 			page 15


 775:Src/main.c    **** 				   printf("VS4210_MODE8 ch4 ch1 ch3\r\n") ;
 776:Src/main.c    **** 				   break ;
 777:Src/main.c    **** 			   }   
 778:Src/main.c    **** 		case VS4210_LOOP_MODE8_423:
 779:Src/main.c    **** 		   {
 780:Src/main.c    **** 				   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 781:Src/main.c    **** 				   pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 782:Src/main.c    **** 				   pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 783:Src/main.c    **** 				   pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 784:Src/main.c    **** 				 OSD_MIRROR[0]=CAMR_M; 
 785:Src/main.c    **** 				 OSD_MIRROR[1]=CAMB_M; 
 786:Src/main.c    **** 				 OSD_MIRROR[2]=CAMC_M; 
 787:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMR_M; 		  
 788:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 789:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 					 
 790:Src/main.c    **** 				 OSD_SPEAKER[0]=ON;
 791:Src/main.c    **** 				 OSD_SPEAKER[1]=OFF;
 792:Src/main.c    **** 				 OSD_SPEAKER[2]=OFF;  
 793:Src/main.c    **** 				 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 794:Src/main.c    **** 				   printf("VS4210_MODE8 ch4 ch2 ch3\r\n") ;
 795:Src/main.c    **** 				   break ;
 796:Src/main.c    **** 			   }   
 797:Src/main.c    **** 
 798:Src/main.c    **** 		//=============
 799:Src/main.c    **** 	    case VS4210_LOOP_MODE10_123:
 800:Src/main.c    ****     {
 801:Src/main.c    ****   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE10 ;
 802:Src/main.c    **** 
 803:Src/main.c    **** pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 804:Src/main.c    **** pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 805:Src/main.c    **** pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 806:Src/main.c    **** 	pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 807:Src/main.c    **** 
 808:Src/main.c    **** 	OSD_MIRROR[0]=CAMR_M; 
 809:Src/main.c    **** 	OSD_MIRROR[1]=CAMA_M; 
 810:Src/main.c    **** 	OSD_MIRROR[2]=CAMB_M; 
 811:Src/main.c    **** 	OSD_MIRROR[3]=CAMC_M; 
 812:Src/main.c    **** 
 813:Src/main.c    **** gabVXIS_Input_mirrorH[0]=CAMR_M;		  
 814:Src/main.c    **** gabVXIS_Input_mirrorH[1]=CAMA_M;		  
 815:Src/main.c    **** gabVXIS_Input_mirrorH[2]=CAMB_M;		
 816:Src/main.c    **** gabVXIS_Input_mirrorH[3]=CAMC_M;		  
 817:Src/main.c    **** 
 818:Src/main.c    **** 	OSD_SPEAKER[0]=ON;
 819:Src/main.c    **** 	OSD_SPEAKER[1]=OFF;
 820:Src/main.c    **** 	OSD_SPEAKER[2]=OFF;
 821:Src/main.c    **** 	OSD_SPEAKER[3]=OFF;
 822:Src/main.c    **** 
 823:Src/main.c    **** 
 824:Src/main.c    ****      //   pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 825:Src/main.c    ****         printf("VS4210_MODE10 ch1 ch2 ch3\r\n") ;
 826:Src/main.c    ****         break ;
 827:Src/main.c    ****     }
 828:Src/main.c    **** case VS4210_LOOP_MODE10_412:
 829:Src/main.c    **** 	{
 830:Src/main.c    **** 	   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE10 ;
 831:Src/main.c    **** 	   pVS4210_JointKind1.WindowMap.WMap0 =4 ;
ARM GAS  /tmp/ccxsI2YD.s 			page 16


 832:Src/main.c    **** 	   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 833:Src/main.c    **** 	   pVS4210_JointKind1.WindowMap.WMap2 =2 ;
 834:Src/main.c    **** 	    pVS4210_JointKind1.WindowMap.WMap3 =0 ;
 835:Src/main.c    **** 	  OSD_MIRROR[0]=CAMR_M;	
 836:Src/main.c    ****    	  OSD_MIRROR[1]=CAMA_M;	
 837:Src/main.c    ****    	  OSD_MIRROR[2]=CAMB_M;	
 838:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMR_M; 		  
 839:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 840:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMB_M; 	  
 841:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 842:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;
 843:Src/main.c    **** 	  OSD_SPEAKER[2]=OFF;
 844:Src/main.c    **** 	//	 pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 845:Src/main.c    **** 	   printf("VS4210_MODE10 ch4 ch1 ch2\r\n") ;
 846:Src/main.c    **** 		break;
 847:Src/main.c    ****     	}
 848:Src/main.c    **** 	case VS4210_LOOP_MODE10_413:
 849:Src/main.c    **** 		{
 850:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE10 ;
 851:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 852:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 853:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 854:Src/main.c    **** 		  OSD_MIRROR[0]=CAMR_M; 
 855:Src/main.c    **** 		  OSD_MIRROR[1]=CAMA_M; 
 856:Src/main.c    **** 		  OSD_MIRROR[2]=CAMC_M; 
 857:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMR_M; 		  
 858:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 859:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 			  
 860:Src/main.c    **** 		  OSD_SPEAKER[0]=ON;
 861:Src/main.c    **** 		  OSD_SPEAKER[1]=OFF;
 862:Src/main.c    **** 		  OSD_SPEAKER[2]=OFF;
 863:Src/main.c    **** 		//	 pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 864:Src/main.c    **** 		   printf("VS4210_MODE10 ch4 ch1 ch3\r\n") ;
 865:Src/main.c    **** 			break;
 866:Src/main.c    **** 			}
 867:Src/main.c    **** 	case VS4210_LOOP_MODE10_423:
 868:Src/main.c    **** 		{
 869:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE10 ;
 870:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 871:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 872:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 873:Src/main.c    **** 		  OSD_MIRROR[0]=CAMR_M; 
 874:Src/main.c    **** 		  OSD_MIRROR[1]=CAMB_M; 
 875:Src/main.c    **** 		  OSD_MIRROR[2]=CAMC_M; 
 876:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMR_M; 		  
 877:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 878:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 			  
 879:Src/main.c    **** 		  OSD_SPEAKER[0]=ON;
 880:Src/main.c    **** 		  OSD_SPEAKER[1]=OFF;
 881:Src/main.c    **** 		  OSD_SPEAKER[2]=OFF;
 882:Src/main.c    **** 		//	 pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 883:Src/main.c    **** 		   printf("VS4210_MODE10 ch4 ch2 ch3\r\n") ;
 884:Src/main.c    **** 			break;
 885:Src/main.c    **** 			}
 886:Src/main.c    **** 
 887:Src/main.c    ****     case VS4210_LOOP_MODE9:
 888:Src/main.c    ****     {
ARM GAS  /tmp/ccxsI2YD.s 			page 17


 889:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE9 ;
 890:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 891:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 892:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 893:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 894:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 895:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 896:Src/main.c    ****    	  OSD_MIRROR[2]=CAMC_M;	
 897:Src/main.c    ****    	  OSD_MIRROR[3]=CAMR_M;	
 898:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
 899:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 900:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 		  
 901:Src/main.c    **** 	gabVXIS_Input_mirrorH[3]=CAMR_M; 	  
 902:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
 903:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;
 904:Src/main.c    **** 	  OSD_SPEAKER[2]=OFF;
 905:Src/main.c    **** 	  OSD_SPEAKER[3]=ON;	  
 906:Src/main.c    ****         printf("VS4210_MODE9\r\n") ;
 907:Src/main.c    ****         break ;
 908:Src/main.c    ****     }
 909:Src/main.c    **** 	#endif
 910:Src/main.c    ****     case VS4210_LOOP_MODE12_12:
 911:Src/main.c    ****     {
 912:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 913:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 914:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 915:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 916:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 917:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
 918:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
 919:Src/main.c    ****   	OSD_SPEAKER[0]=ON;
 920:Src/main.c    ****   	OSD_SPEAKER[1]=OFF;
 921:Src/main.c    ****         printf("VS4210_MODE12 ch1 ch2\r\n") ;
 922:Src/main.c    ****         break ;
 923:Src/main.c    ****     }
 924:Src/main.c    **** 	case VS4210_LOOP_MODE12_14:
 925:Src/main.c    ****       {
 926:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 927:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 928:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =4 ;
 929:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 930:Src/main.c    ****    	  OSD_MIRROR[1]=CAMR_M;
 931:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
 932:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
 933:Src/main.c    ****   	OSD_SPEAKER[0]=OFF;
 934:Src/main.c    ****   	OSD_SPEAKER[1]=ON;	  
 935:Src/main.c    ****         printf("VS4210_MODE12 ch1 ch4\r\n") ;	
 936:Src/main.c    **** 	break;
 937:Src/main.c    ****     	}
 938:Src/main.c    **** 	case VS4210_LOOP_MODE12_42:
 939:Src/main.c    ****       {
 940:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 941:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 942:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 943:Src/main.c    **** 	  OSD_MIRROR[0]=CAMR_M;	
 944:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 945:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMR_M;			  
ARM GAS  /tmp/ccxsI2YD.s 			page 18


 946:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
 947:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 948:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 949:Src/main.c    ****         printf("VS4210_MODE12 ch4 ch2\r\n") ;	
 950:Src/main.c    **** 	break;
 951:Src/main.c    ****     	}
 952:Src/main.c    **** 	case VS4210_LOOP_MODE12_43:
 953:Src/main.c    ****       {
 954:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 955:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 956:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 957:Src/main.c    **** 	  OSD_MIRROR[0]=CAMR_M;	
 958:Src/main.c    ****    	  OSD_MIRROR[1]=CAMC_M;	
 959:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMR_M;			  
 960:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 	  
 961:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 962:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 963:Src/main.c    ****         printf("VS4210_MODE12 ch4 ch3\r\n") ;	
 964:Src/main.c    **** 	break;
 965:Src/main.c    ****     	}
 966:Src/main.c    **** 	//==============
 967:Src/main.c    **** 	case VS4210_LOOP_MODE12_21:
 968:Src/main.c    ****       {
 969:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 970:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 971:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 972:Src/main.c    **** 	  OSD_MIRROR[0]=CAMB_M;	
 973:Src/main.c    ****    	  OSD_MIRROR[1]=CAMA_M;	
 974:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMB_M;			  
 975:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
 976:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 977:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 978:Src/main.c    ****         printf("VS4210_MODE12 ch2 ch1\r\n") ;	
 979:Src/main.c    **** 	break;
 980:Src/main.c    ****     	}
 981:Src/main.c    **** 	case VS4210_LOOP_MODE12_23:
 982:Src/main.c    ****       {
 983:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 984:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 985:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 986:Src/main.c    **** 	  OSD_MIRROR[0]=CAMB_M;	
 987:Src/main.c    ****    	  OSD_MIRROR[1]=CAMC_M;	
 988:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMB_M;			  
 989:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 	  
 990:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 991:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 992:Src/main.c    ****         printf("VS4210_MODE12 ch2 ch3\r\n") ;	
 993:Src/main.c    **** 	break;
 994:Src/main.c    ****     	}
 995:Src/main.c    **** 	case VS4210_LOOP_MODE12_24:
 996:Src/main.c    ****       {
 997:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 998:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2;
 999:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =4 ;
1000:Src/main.c    **** 	  OSD_MIRROR[0]=CAMB_M;	
1001:Src/main.c    ****    	  OSD_MIRROR[1]=CAMR_M;	
1002:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMB_M;			  
ARM GAS  /tmp/ccxsI2YD.s 			page 19


1003:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
1004:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
1005:Src/main.c    **** 	  OSD_SPEAKER[1]=ON;		  
1006:Src/main.c    ****         printf("VS4210_MODE12 ch2 ch4\r\n") ;	
1007:Src/main.c    **** 	break;
1008:Src/main.c    ****     	}
1009:Src/main.c    **** 
1010:Src/main.c    **** 	//==============
1011:Src/main.c    **** 	case VS4210_LOOP_MODE12_13:
1012:Src/main.c    ****       {
1013:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
1014:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
1015:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =3 ;
1016:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
1017:Src/main.c    ****    	  OSD_MIRROR[1]=CAMC_M;	
1018:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
1019:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 	  
1020:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
1021:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;	
1022:Src/main.c    **** 	  
1023:Src/main.c    ****         printf("VS4210_MODE12 ch1 ch3\r\n") ;	
1024:Src/main.c    **** 	break;
1025:Src/main.c    ****     	}
1026:Src/main.c    **** 	case VS4210_LOOP_MODE12_32:
1027:Src/main.c    ****       {
1028:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
1029:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =3 ;
1030:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
1031:Src/main.c    **** 	  OSD_MIRROR[0]=CAMC_M;	
1032:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
1033:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMC_M;			  
1034:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
1035:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
1036:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;	
1037:Src/main.c    **** 	  
1038:Src/main.c    ****         printf("VS4210_MODE12 ch3 ch2\r\n") ;	
1039:Src/main.c    **** 	break;
1040:Src/main.c    ****     	}
1041:Src/main.c    **** 
1042:Src/main.c    ****     case VS4210_LOOP_MODE12_34:
1043:Src/main.c    ****     {
1044:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
1045:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =3 ;
1046:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =4 ;
1047:Src/main.c    **** 	  OSD_MIRROR[0]=CAMC_M;	
1048:Src/main.c    ****    	  OSD_MIRROR[1]=CAMR_M;	
1049:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMC_M;			  
1050:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
1051:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
1052:Src/main.c    **** 	  OSD_SPEAKER[1]=ON;	
1053:Src/main.c    **** 	  
1054:Src/main.c    ****         printf("VS4210_MODE12 ch3 ch4\r\n") ;
1055:Src/main.c    ****         break ;
1056:Src/main.c    ****     }
1057:Src/main.c    **** //========================
1058:Src/main.c    **** 
1059:Src/main.c    **** case VS4210_LOOP_MODE12_31:
ARM GAS  /tmp/ccxsI2YD.s 			page 20


1060:Src/main.c    ****   {
1061:Src/main.c    ****    pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
1062:Src/main.c    **** 	pVS4210_JointKind1.WindowMap.WMap0 =3 ;
1063:Src/main.c    **** 	pVS4210_JointKind1.WindowMap.WMap1 =1 ;
1064:Src/main.c    ****   OSD_MIRROR[0]=CAMC_M; 
1065:Src/main.c    ****   OSD_MIRROR[1]=CAMA_M; 
1066:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMC_M;			  
1067:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M;   
1068:Src/main.c    ****   OSD_SPEAKER[0]=ON;
1069:Src/main.c    ****   OSD_SPEAKER[1]=OFF;	
1070:Src/main.c    ****   
1071:Src/main.c    **** 	printf("VS4210_MODE12 ch3 ch1\r\n") ;	
1072:Src/main.c    **** break;
1073:Src/main.c    **** 	}
1074:Src/main.c    **** 
1075:Src/main.c    **** //=======================
1076:Src/main.c    **** #if 0
1077:Src/main.c    ****     case VS4210_LOOP_MODE14:
1078:Src/main.c    ****     {
1079:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE14 ;
1080:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
1081:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
1082:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
1083:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
1084:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
1085:Src/main.c    ****    	  OSD_MIRROR[2]=CAMC_M;	
1086:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
1087:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
1088:Src/main.c    **** 	  gabVXIS_Input_mirrorH[2]=CAMC_M;		
1089:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
1090:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;	
1091:Src/main.c    **** 	  OSD_SPEAKER[3]=OFF;	
1092:Src/main.c    **** 	  
1093:Src/main.c    ****         printf("VS4210_MODE14 ch1 ch2\r\n") ;
1094:Src/main.c    ****         break ;
1095:Src/main.c    ****     }
1096:Src/main.c    **** #endif
1097:Src/main.c    ****     }
1098:Src/main.c    **** 
1099:Src/main.c    **** 	
1100:Src/main.c    **** VS4210_SetMutiWindows(&pVS4210_JointKind1) ;
1101:Src/main.c    **** 
1102:Src/main.c    **** //AUDIO_SELECT(index);
1103:Src/main.c    **** AudioMute(ON);
1104:Src/main.c    **** 
1105:Src/main.c    **** MCUTimerCancelTimerEvent( _SYSTEM_TIMER_EVENT_AUDIO_CHANNEL_SELECT);
1106:Src/main.c    **** MCUTimerActiveTimerEvent(SEC(1),  _SYSTEM_TIMER_EVENT_AUDIO_CHANNEL_SELECT);
1107:Src/main.c    **** AUDIO_SELECT(index);
1108:Src/main.c    **** 
1109:Src/main.c    **** CURRENT_CH=index;
1110:Src/main.c    **** 
1111:Src/main.c    **** //ChangeVol(0);
1112:Src/main.c    **** 
1113:Src/main.c    **** }
1114:Src/main.c    **** 
1115:Src/main.c    **** /*
1116:Src/main.c    **** static int GetKet_State(void)
ARM GAS  /tmp/ccxsI2YD.s 			page 21


1117:Src/main.c    **** {
1118:Src/main.c    ****     int re = 0  ;
1119:Src/main.c    **** 
1120:Src/main.c    **** 	#if 0
1121:Src/main.c    ****     if (HAL_GPIO_ReadPin(SW1_GPIO_Port, SW1_Pin ) == 0)
1122:Src/main.c    ****     {
1123:Src/main.c    ****         re =1 ;
1124:Src/main.c    **** 		  re =0 ;
1125:Src/main.c    ****      //   printf("SW1 Key\r\n") ;
1126:Src/main.c    ****     }
1127:Src/main.c    ****     else if (HAL_GPIO_ReadPin(SW2_GPIO_Port, SW2_Pin ) == 0)
1128:Src/main.c    ****     {
1129:Src/main.c    ****         re =2 ;
1130:Src/main.c    **** 		 re =0 ;
1131:Src/main.c    ****     //    printf("SW2 Key\r\n") ;
1132:Src/main.c    ****     }
1133:Src/main.c    ****     else if (HAL_GPIO_ReadPin(SW3_GPIO_Port, SW3_Pin ) == 0)
1134:Src/main.c    ****     {
1135:Src/main.c    ****         re =3 ;
1136:Src/main.c    ****         printf("SW3 Key\r\n") ;
1137:Src/main.c    ****     }
1138:Src/main.c    ****     else if (HAL_GPIO_ReadPin(SW4_GPIO_Port, SW4_Pin ) == 0)
1139:Src/main.c    ****     {
1140:Src/main.c    ****         re =4 ;
1141:Src/main.c    ****         printf("SW4 Key\r\n") ;
1142:Src/main.c    ****     }
1143:Src/main.c    ****     else if (HAL_GPIO_ReadPin(SW5_GPIO_Port, SW5_Pin ) == 0)
1144:Src/main.c    ****     {
1145:Src/main.c    ****        // re =5 ;
1146:Src/main.c    ****       //  printf("SW5 Key\r\n") ;
1147:Src/main.c    ****       Monitor(); 
1148:Src/main.c    ****     }
1149:Src/main.c    ****     else if (HAL_GPIO_ReadPin(SW6_GPIO_Port, SW6_Pin ) == 0)
1150:Src/main.c    ****     {
1151:Src/main.c    ****         re =6 ;
1152:Src/main.c    ****         printf("SW6 Key\r\n") ;
1153:Src/main.c    ****     }
1154:Src/main.c    ****     else if (HAL_GPIO_ReadPin(SW7_GPIO_Port, SW7_Pin ) == 0)
1155:Src/main.c    ****     {
1156:Src/main.c    ****         re =7 ;
1157:Src/main.c    ****         printf("SW7 Key\r\n") ;
1158:Src/main.c    ****     }
1159:Src/main.c    **** #endif
1160:Src/main.c    **** 
1161:Src/main.c    ****     return re ;
1162:Src/main.c    **** }
1163:Src/main.c    **** */
1164:Src/main.c    **** 
1165:Src/main.c    **** BYTE CHECK_HDMI720P50(void)
1166:Src/main.c    **** {
1167:Src/main.c    **** 	tByte REG9C,REG9D,REGA1,REGA2 ;
1168:Src/main.c    **** 	tByte ret=0,i=0;
1169:Src/main.c    **** 	gHDMI_Index=0;	
1170:Src/main.c    **** 				REG9C=HDMIRX_ReadI2C_Byte(0x9c);			
1171:Src/main.c    **** 				REG9D=HDMIRX_ReadI2C_Byte(0x9d);
1172:Src/main.c    **** 				REGA1=HDMIRX_ReadI2C_Byte(0xa1);
1173:Src/main.c    **** 				REGA2=HDMIRX_ReadI2C_Byte(0xa2);
ARM GAS  /tmp/ccxsI2YD.s 			page 22


1174:Src/main.c    **** 				
1175:Src/main.c    **** 				if((REG9C==0xbc)&&(REG9D==0x07)&&(REGA1==0x10)&&(REGA2==0xB8))
1176:Src/main.c    **** 					{
1177:Src/main.c    **** 					dbg_Printf("ch%d, InputMode=%d \r\n", (int)(i+1),(int) gbVXIS_InputMode[i] ) ;
1178:Src/main.c    **** 					//dbg_Printf("ch%d, REG 0xA2=%x \r\n", (int)(i+1),(int) HDMIRX_ReadI2C_Byte(0xa2) ) ;
1179:Src/main.c    **** 					//dbg_Printf("ch%d, REG 0x9C=%x \r\n", (int)(i+1),(int) HDMIRX_ReadI2C_Byte(0x9c) ) ;
1180:Src/main.c    **** 					//dbg_Printf("ch%d, REG 0x9D=%x \r\n", (int)(i+1),(int) HDMIRX_ReadI2C_Byte(0x9d) ) ;
1181:Src/main.c    **** 					//dbg_Printf("ch%d, REG 0xA1=%x \r\n", (int)(i+1),(int) HDMIRX_ReadI2C_Byte(0xa1) ) ;
1182:Src/main.c    **** 					//dbg_Printf("ch%d, InputMode=720P50\r\n",(int)(i+1)) ;
1183:Src/main.c    **** 					ret=1;
1184:Src/main.c    **** 					}
1185:Src/main.c    **** 
1186:Src/main.c    **** return ret;
1187:Src/main.c    **** }
1188:Src/main.c    **** 	static void HDMI_VideoModeDetect(void)
1189:Src/main.c    **** 	{
1190:Src/main.c    **** 		tByte i  ;
1191:Src/main.c    **** 	
1192:Src/main.c    **** 		for(i = 0 ; i< 2/*4*/ ; i++ )
1193:Src/main.c    **** 		{
1194:Src/main.c    **** 			gHDMI_Index = i ;
1195:Src/main.c    **** 			//--- Start --- 20201214-01
1196:Src/main.c    **** 			if( i == 1 )
1197:Src/main.c    **** 			{
1198:Src/main.c    **** 				if( newInRes[0] == _OSD_No_Signal )
1199:Src/main.c    **** 					bSignal[gHDMI_Index] = 0;
1200:Src/main.c    **** 				else
1201:Src/main.c    **** 					bSignal[gHDMI_Index] = 1;
1202:Src/main.c    **** 			}
1203:Src/main.c    **** 			else
1204:Src/main.c    **** 			//--- End ---
1205:Src/main.c    **** 			bSignal[gHDMI_Index] = CheckHDMIRX();
1206:Src/main.c    **** 
1207:Src/main.c    **** 			//if( (i == 1 )&&(bSignal[1]==1))
1208:Src/main.c    **** 			//{
1209:Src/main.c    **** 			//dbg_Printf("ch%d, InputMode=%d \r\n", (int)(i+1),(int) gbVXIS_InputMode[i] ) ;
1210:Src/main.c    **** 			//}
1211:Src/main.c    **** 			
1212:Src/main.c    **** 			if (PreVState[gHDMI_Index] != VState[gHDMI_Index]  )
1213:Src/main.c    **** 			{
1214:Src/main.c    **** 				PreVState[gHDMI_Index]	= VState[gHDMI_Index] ;
1215:Src/main.c    **** 			}
1216:Src/main.c    **** 	
1217:Src/main.c    **** 			if(bSignal[gHDMI_Index] != bOldSignal[gHDMI_Index] )
1218:Src/main.c    **** 			{
1219:Src/main.c    **** 				bOldSignal[gHDMI_Index] = bSignal[gHDMI_Index] ;
1220:Src/main.c    **** 	
1221:Src/main.c    **** 				if(bSignal[gHDMI_Index] == 0 )
1222:Src/main.c    **** 				{
1223:Src/main.c    **** 					VS4210_Rx_NoSignal(i) ;
1224:Src/main.c    **** 					dbg_Printf("##ch%d, VS4210_Rx_NoSignal\r\n", (int)(i+1) ) ;
1225:Src/main.c    **** 					if (pVS4210_MutiWindows1.DrawOSDFlg != 0)
1226:Src/main.c    **** 					{
1227:Src/main.c    **** 						OSD_Show_Flg = 1 ;
1228:Src/main.c    **** 						Tim1_count = 0 ;
1229:Src/main.c    **** 						OSDStateFlg = 1 ;
1230:Src/main.c    **** 						OSDSecCount = 0 ;
ARM GAS  /tmp/ccxsI2YD.s 			page 23


1231:Src/main.c    **** 					}
1232:Src/main.c    **** 					gbVXIS_InputMode[gHDMI_Index] =_OSD_No_Signal ;
1233:Src/main.c    **** 					PrebVXIS_InputMode[gHDMI_Index] = _OSD_No_Signal ;
1234:Src/main.c    **** 
1235:Src/main.c    **** 					if((SelectInputMode==_HDMI_Input)&&(gHDMI_Index==0))
1236:Src/main.c    **** 						Set_Video_Loss_OSD(0,ON);
1237:Src/main.c    **** 					//MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);	
1238:Src/main.c    **** 					//VXISI2CWrite(0x9C,0x0A);
1239:Src/main.c    **** 						SET_Audio_Mute(ON);
1240:Src/main.c    **** 				}
1241:Src/main.c    **** 			}
1242:Src/main.c    **** 	
1243:Src/main.c    **** 			if( bSignal[gHDMI_Index] == 1  )
1244:Src/main.c    **** 			{
1245:Src/main.c    **** 				//--- Start --- 20201214-01
1246:Src/main.c    **** 				if( i == 1 )
1247:Src/main.c    **** 					gbVXIS_InputMode[gHDMI_Index] = newInRes[0];
1248:Src/main.c    **** 				else
1249:Src/main.c    **** 				//--- End ---
1250:Src/main.c    **** 				gbVXIS_InputMode[gHDMI_Index] = GetHDMI_InputMode(gHDMI_Index ) ;
1251:Src/main.c    **** 
1252:Src/main.c    **** 			}
1253:Src/main.c    **** 	
1254:Src/main.c    **** 			if (gbVXIS_InputMode[gHDMI_Index] != PrebVXIS_InputMode[gHDMI_Index] )
1255:Src/main.c    **** 			{
1256:Src/main.c    **** 				PrebVXIS_InputMode[gHDMI_Index] = gbVXIS_InputMode[gHDMI_Index] ;
1257:Src/main.c    **** 
1258:Src/main.c    **** 					if(CHECK_HDMI720P50())
1259:Src/main.c    **** 					{
1260:Src/main.c    **** 					dbg_Printf("ch%d, HDMI=720P50 no support\r\n",(int)(i+1)) ;
1261:Src/main.c    **** 					}
1262:Src/main.c    **** 				else if (gbVXIS_InputMode[gHDMI_Index] != _OSD_No_Signal)
1263:Src/main.c    **** 				{
1264:Src/main.c    **** 					VS4210_SetInModeOutMode(i , gbVXIS_InputMode[i] , pVS4210_MutiWindows1.OutputMode );
1265:Src/main.c    **** 
1266:Src/main.c    **** 					if((SelectInputMode==_AHD_Input)&&(gHDMI_Index==1))			
1267:Src/main.c    **** 					VXISI2CWrite( 0x19, 0x01 );
1268:Src/main.c    **** 							
1269:Src/main.c    **** 							
1270:Src/main.c    **** 					VS4210_SetInputSizeHV(i ,gHActive[i], gVActive[i], gHTotal[i] ,gVTotal[i] ) ;
1271:Src/main.c    **** 
1272:Src/main.c    **** 					dbg_Printf("ch%d, InputMode=%d \r\n", (int)(i+1),(int) gbVXIS_InputMode[i] ) ;
1273:Src/main.c    **** 
1274:Src/main.c    **** 						#if 0
1275:Src/main.c    **** 						if(gbVXIS_InputMode[i]==6)
1276:Src/main.c    **** 						{
1277:Src/main.c    **** 						printf("(set reg.)");
1278:Src/main.c    **** 						 VXISI2CWrite(0x08,0x21);
1279:Src/main.c    **** 						 VXISI2CWrite(0x0A,0x21);
1280:Src/main.c    **** 						 VXISI2CWrite(0x74,0x02);
1281:Src/main.c    **** 						 VXISI2CWrite(0x82,0x40);
1282:Src/main.c    **** 						}
1283:Src/main.c    **** 						#endif
1284:Src/main.c    **** 					if (pVS4210_MutiWindows1.DrawOSDFlg != 0)
1285:Src/main.c    **** 					{
1286:Src/main.c    **** 						OSD_Show_Flg = 1 ;
1287:Src/main.c    **** 						Tim1_count = 0 ;
ARM GAS  /tmp/ccxsI2YD.s 			page 24


1288:Src/main.c    **** 						OSDStateFlg = 1 ;
1289:Src/main.c    **** 						OSDSecCount = 0 ;
1290:Src/main.c    **** 					}
1291:Src/main.c    **** 
1292:Src/main.c    **** 						if((SelectInputMode==_HDMI_Input)&&(gHDMI_Index==0))
1293:Src/main.c    **** 						Set_Video_Loss_OSD(0,OFF);	
1294:Src/main.c    **** 
1295:Src/main.c    **** 						if((SelectInputMode==_AHD_Input)&&(gHDMI_Index==1))
1296:Src/main.c    **** 							{
1297:Src/main.c    **** 							MCUTimerActiveTimerEvent(SEC(1), _SYSTEM_TIMER_EVENT_VIDEO_RESET);
1298:Src/main.c    **** 							}
1299:Src/main.c    **** 						
1300:Src/main.c    **** 						if(gHDMI_Index==0)
1301:Src/main.c    **** 						SET_Audio_Mute(OFF);	
1302:Src/main.c    **** 						//MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);
1303:Src/main.c    **** 				}
1304:Src/main.c    **** 			}
1305:Src/main.c    **** 		}
1306:Src/main.c    **** 	}
1307:Src/main.c    **** 
1308:Src/main.c    **** static void HDMI_AudioModeDetect(void)
1309:Src/main.c    **** {
1310:Src/main.c    ****     tByte pbAudioSampleFreq, pbValidCh ;
1311:Src/main.c    ****     pbAudioSampleFreq = 0 ;
1312:Src/main.c    **** 
1313:Src/main.c    ****     getHDMIRXAudioInfo(&pbAudioSampleFreq , &pbValidCh ) ;
1314:Src/main.c    **** 
1315:Src/main.c    ****     if (gbAUDO_INDEX != HDMI_AUDIO_NONE )
1316:Src/main.c    ****     {
1317:Src/main.c    ****         if (gbAUDO_INDEX  == gHDMI_Index )
1318:Src/main.c    ****         {
1319:Src/main.c    ****             if (gPreAudioSampleFreq != pbAudioSampleFreq)
1320:Src/main.c    ****             {
1321:Src/main.c    ****                 gPreAudioSampleFreq = pbAudioSampleFreq ;
1322:Src/main.c    ****                 HDMI_Tx_SetAudioFs(gPreAudioSampleFreq )  ;
1323:Src/main.c    ****             }
1324:Src/main.c    ****         }
1325:Src/main.c    ****     }
1326:Src/main.c    ****     gAudioSampleFreq[gHDMI_Index] = pbAudioSampleFreq ;
1327:Src/main.c    **** }
1328:Src/main.c    **** 
1329:Src/main.c    **** //=============================================================================
1330:Src/main.c    **** //    Main Initialize Routine
1331:Src/main.c    **** //=============================================================================
1332:Src/main.c    **** void main_init (void)
1333:Src/main.c    **** {
1334:Src/main.c    **** 
1335:Src/main.c    **** 	WORD	rev;
1336:Src/main.c    **** 
1337:Src/main.c    **** 		rev = GetFWRevEE();
1338:Src/main.c    **** 		Printf("\r\nPrev.FW:%04x\r\n", rev);
1339:Src/main.c    **** 		
1340:Src/main.c    **** 		if( GetFWRevEE()!=FWVER )	// exist EEPROM
1341:Src/main.c    **** 		{					
1342:Src/main.c    **** 			Printf("\r\nCurr.FW:%04x", (WORD)FWVER);
1343:Src/main.c    **** 			SaveFWRevEE(FWVER);
1344:Src/main.c    **** 			Printf("\r\nCurr.FW:%04x", (WORD)GetFWRevEE());
ARM GAS  /tmp/ccxsI2YD.s 			page 25


1345:Src/main.c    **** 		}
1346:Src/main.c    **** 
1347:Src/main.c    **** 		if( GetFWRevEE()==FWVER )
1348:Src/main.c    **** 		{					// exist EEPROM
1349:Src/main.c    **** 			if( rev != FWVER ) 
1350:Src/main.c    **** 				{
1351:Src/main.c    **** 				ClearBasicEE();
1352:Src/main.c    **** 			
1353:Src/main.c    **** 			Printf("\r\n[MSG]main_init()=> rev != FWVER & call ClearBasicEE()\r\n");  //pinchi test
1354:Src/main.c    **** 				}
1355:Src/main.c    **** 			else
1356:Src/main.c    **** 				{
1357:Src/main.c    **** 				;//DebugLevel = GetDebugLevelEE();
1358:Src/main.c    **** 
1359:Src/main.c    **** 				}
1360:Src/main.c    **** 		}
1361:Src/main.c    **** 		else 
1362:Src/main.c    **** 		{
1363:Src/main.c    **** 			Printf("\r\nCannot access EEPROM!!!!");
1364:Src/main.c    **** 			Printf("\r\nNo initialize");
1365:Src/main.c    **** 			DebugLevel = 0xff;
1366:Src/main.c    **** 			return;
1367:Src/main.c    **** 		}
1368:Src/main.c    **** 
1369:Src/main.c    **** 
1370:Src/main.c    **** 	delay(100);
1371:Src/main.c    **** 	
1372:Src/main.c    **** 
1373:Src/main.c    **** //	SET_POWER_STATUS(_POWER_STATUS_OFF);
1374:Src/main.c    **** //	SET_TARGET_POWER_STATUS(_POWER_STATUS_NORMAL);
1375:Src/main.c    **** 
1376:Src/main.c    **** }
1377:Src/main.c    **** 
1378:Src/main.c    **** 
1379:Src/main.c    **** void AdjustAutoDayNight(BYTE val)
1380:Src/main.c    **** {
1381:Src/main.c    **** //	BYTE page;
1382:Src/main.c    **** 	BYTE PWMLevelTemp=0;
1383:Src/main.c    **** 	val=0xff-val;
1384:Src/main.c    **** 
1385:Src/main.c    **** 	#if 1//ryan@20170928
1386:Src/main.c    **** 	if(val>=0&&val<100)
1387:Src/main.c    **** 		PWMLevelTemp=0+70;
1388:Src/main.c    **** 	else if(val>=100&&val<140)
1389:Src/main.c    **** 		PWMLevelTemp=20+70;//20;
1390:Src/main.c    **** 	else if(val>=140&&val<180)
1391:Src/main.c    **** 		PWMLevelTemp=40+70;//50;
1392:Src/main.c    **** 	else if(val>=180&&val<220)
1393:Src/main.c    **** 		PWMLevelTemp=60+70;//65;
1394:Src/main.c    **** 	else if(val>=220&&val<=255)//andy 20110414
1395:Src/main.c    **** 	{
1396:Src/main.c    **** 		//#ifdef AWT
1397:Src/main.c    **** 		PWMLevelTemp=75+70;//80;
1398:Src/main.c    **** 		//#else
1399:Src/main.c    **** 		//PWMLevelTemp=115;
1400:Src/main.c    **** 		//#endif
1401:Src/main.c    **** 		//	PWMLevelTemp=128;
ARM GAS  /tmp/ccxsI2YD.s 			page 26


1402:Src/main.c    **** 	}
1403:Src/main.c    **** 
1404:Src/main.c    **** 	#else
1405:Src/main.c    **** 	if(val>=0&&val<100)
1406:Src/main.c    **** 		PWMLevelTemp=0;
1407:Src/main.c    **** 	else if(val>=100&&val<140)
1408:Src/main.c    **** 		PWMLevelTemp=30;//20;
1409:Src/main.c    **** 	else if(val>=140&&val<180)
1410:Src/main.c    **** 		PWMLevelTemp=60;//50;
1411:Src/main.c    **** 	else if(val>=180&&val<220)
1412:Src/main.c    **** 		PWMLevelTemp=80;//65;
1413:Src/main.c    **** 	else if(val>=220&&val<=255)//andy 20110414
1414:Src/main.c    **** 	{
1415:Src/main.c    **** 		//#ifdef AWT
1416:Src/main.c    **** 		PWMLevelTemp=110;//80;
1417:Src/main.c    **** 		//#else
1418:Src/main.c    **** 		//PWMLevelTemp=115;
1419:Src/main.c    **** 		//#endif
1420:Src/main.c    **** 	}
1421:Src/main.c    **** 	#endif
1422:Src/main.c    **** 	//else
1423:Src/main.c    **** 	//	PWMLevelTemp=0;
1424:Src/main.c    **** 
1425:Src/main.c    **** 
1426:Src/main.c    **** 	if(DayNightLevel==1)
1427:Src/main.c    **** 	{
1428:Src/main.c    **** 		//if(AutoDayNightDelay<(5+5+5))
1429:Src/main.c    **** 	//		AutoDayNightDelay++;
1430:Src/main.c    **** 		//else
1431:Src/main.c    **** 		{
1432:Src/main.c    **** 			if(PWMLevel > PWMLevelTemp)
1433:Src/main.c    **** 				PWMLevel-=1;
1434:Src/main.c    **** 			else if(PWMLevel < PWMLevelTemp)
1435:Src/main.c    **** 				PWMLevel+=1;
1436:Src/main.c    **** 
1437:Src/main.c    **** 			AutoDayNightDelay=0;
1438:Src/main.c    **** 		}
1439:Src/main.c    **** 
1440:Src/main.c    **** 	//	PWMLevel=PWMLevelTemp;
1441:Src/main.c    **** 
1442:Src/main.c    **** 		
1443:Src/main.c    **** 	//	Printf("(PWMLevel1=%02x %02x)",(WORD)PWMLevel,(WORD)PWMLevelTemp);
1444:Src/main.c    **** 
1445:Src/main.c    **** 	user_pwm_setvalue(PWMLevel*15);
1446:Src/main.c    **** 
1447:Src/main.c    **** 	}
1448:Src/main.c    **** 	else
1449:Src/main.c    **** 	{
1450:Src/main.c    **** 	//	PWMLevel=PWMLevelTemp;
1451:Src/main.c    **** 		PWMLevel=255/*0x80*/;
1452:Src/main.c    **** 	//		Printf("(PWMLevel2=%02x)",(WORD)PWMLevel);
1453:Src/main.c    **** 	user_pwm_setvalue(_PWMLevelMax);
1454:Src/main.c    **** 	}
1455:Src/main.c    **** 	
1456:Src/main.c    **** #if 0
1457:Src/main.c    **** 
1458:Src/main.c    **** 	//Printf("\r\nLADC0=%02x",(WORD)val);
ARM GAS  /tmp/ccxsI2YD.s 			page 27


1459:Src/main.c    **** 	page = ReadTW88( 0xff );
1460:Src/main.c    **** 	WriteTW88( 0xff, 0x00 );		// set page 0
1461:Src/main.c    **** 	WriteTW88( 0xbe, ((ReadTW88(0xbe) & 0xcf) | 0x10) );	// set active Low control, if want active hig
1462:Src/main.c    **** 	//WriteTW88( 0xc4, ((ReadTW88(0xc4) & 0x80)|(val>>2)) );	// set pwm number
1463:Src/main.c    **** 	WriteTW88( 0xc4, ((ReadTW88(0xc4) & 0x80)|(PWMLevel)) );	// set pwm number
1464:Src/main.c    **** 	WriteTW88( 0xff, page );
1465:Src/main.c    **** 	
1466:Src/main.c    **** 	#endif
1467:Src/main.c    **** 	/*
1468:Src/main.c    **** 	if(DayNightLevel==0)
1469:Src/main.c    **** 	user_pwm_setvalue(4000);
1470:Src/main.c    **** 	else
1471:Src/main.c    **** 	user_pwm_setvalue(PWMLevel*15);
1472:Src/main.c    **** */		
1473:Src/main.c    **** }
1474:Src/main.c    **** void LCDPowerON(void)
1475:Src/main.c    **** {
1476:Src/main.c    **** /*
1477:Src/main.c    **** 	Printf("(LCDPowerON)");
1478:Src/main.c    **** 
1479:Src/main.c    **** 	TTLI1_RES(OFF);
1480:Src/main.c    **** 	PANEL_EN(ON);
1481:Src/main.c    **** 	msleep(50) ;
1482:Src/main.c    **** 	msleep(100) ;///for new 7in panel  	LCM : TH070800480NYR40S1-L
1483:Src/main.c    **** //	MCUTimerDelayXms(50);
1484:Src/main.c    **** 	LCD_PWR(ON);
1485:Src/main.c    **** 
1486:Src/main.c    **** 	msleep(50) ;
1487:Src/main.c    **** 
1488:Src/main.c    **** //	MCUTimerDelayXms(50);
1489:Src/main.c    **** 	BL_ENABLE(ON);
1490:Src/main.c    **** HAL_GPIO_WritePin(PA7_GPIO_Port, PA7_Pin, 0);
1491:Src/main.c    **** 
1492:Src/main.c    **** //	BL_PWM(ON);
1493:Src/main.c    **** 
1494:Src/main.c    **** AudioMute(OFF);
1495:Src/main.c    **** */
1496:Src/main.c    **** 
1497:Src/main.c    **** }
1498:Src/main.c    **** 
1499:Src/main.c    **** void LCDPowerOFF(void)
1500:Src/main.c    **** {
1501:Src/main.c    **** /*
1502:Src/main.c    **** 	Printf("(LCDPowerOFF)");
1503:Src/main.c    **** 
1504:Src/main.c    **** #if 0
1505:Src/main.c    **** 
1506:Src/main.c    **** 	TTLI1_RES(OFF);
1507:Src/main.c    **** 	PANEL_EN(ON);
1508:Src/main.c    **** 	msleep(50) ;
1509:Src/main.c    **** //	MCUTimerDelayXms(50);
1510:Src/main.c    **** 	LCD_PWR(ON);
1511:Src/main.c    **** 
1512:Src/main.c    **** 	msleep(50) ;
1513:Src/main.c    **** 
1514:Src/main.c    **** //	MCUTimerDelayXms(50);
1515:Src/main.c    **** 	BL_ENABLE(ON);
ARM GAS  /tmp/ccxsI2YD.s 			page 28


1516:Src/main.c    **** //	BL_PWM(ON);
1517:Src/main.c    **** 
1518:Src/main.c    **** #else
1519:Src/main.c    **** 	BL_ENABLE(OFF);
1520:Src/main.c    **** HAL_GPIO_WritePin(PA7_GPIO_Port, PA7_Pin, 1); 
1521:Src/main.c    **** 
1522:Src/main.c    **** //	BL_PWM(OFF);
1523:Src/main.c    **** //	msleep(50) ;
1524:Src/main.c    **** //	MCUTimerDelayXms(50);
1525:Src/main.c    **** 	TTLI1_RES(ON);
1526:Src/main.c    **** 	PANEL_EN(OFF);
1527:Src/main.c    **** //	MCUTimerDelayXms(50);
1528:Src/main.c    **** //	msleep(50) ;
1529:Src/main.c    **** 
1530:Src/main.c    **** 	LCD_PWR(OFF);
1531:Src/main.c    **** #endif
1532:Src/main.c    **** 
1533:Src/main.c    **** AudioMute(ON);
1534:Src/main.c    **** */
1535:Src/main.c    **** }
1536:Src/main.c    **** 
1537:Src/main.c    **** 
1538:Src/main.c    **** /* USER CODE END 0 */
1539:Src/main.c    **** 
1540:Src/main.c    **** /**
1541:Src/main.c    ****   * @brief  The application entry point.
1542:Src/main.c    ****   * @retval int
1543:Src/main.c    ****   */
1544:Src/main.c    **** 
1545:Src/main.c    **** void uComOnChipInitial(void)
1546:Src/main.c    **** {
1547:Src/main.c    **** 
1548:Src/main.c    **** //power reset
1549:Src/main.c    **** 
1550:Src/main.c    **** //power
1551:Src/main.c    **** PCON3V3_TP(ON);      
1552:Src/main.c    **** PCON1V2_TP(ON);      
1553:Src/main.c    **** 
1554:Src/main.c    **** VS4210_RST(OFF);   
1555:Src/main.c    **** 
1556:Src/main.c    **** #if 0
1557:Src/main.c    **** 
1558:Src/main.c    **** 	Set_USART1();
1559:Src/main.c    **** 
1560:Src/main.c    **** 
1561:Src/main.c    **** 	//Set_USART2();
1562:Src/main.c    **** 	//Set_USB();
1563:Src/main.c    **** 	//USB_Interrupts_Config();
1564:Src/main.c    **** 	Set_GPIO_Port();
1565:Src/main.c    **** 
1566:Src/main.c    **** 	//AUDIO_OUT_Flag=ReadEEP(0xae);
1567:Src/main.c    **** 	MUTE_OUT(1);
1568:Src/main.c    **** 
1569:Src/main.c    **** 
1570:Src/main.c    **** 
1571:Src/main.c    **** 	Set_Timer();
1572:Src/main.c    **** 	Set_Init_GPIO();
ARM GAS  /tmp/ccxsI2YD.s 			page 29


1573:Src/main.c    **** 
1574:Src/main.c    **** 	TIM4_PWM(0);
1575:Src/main.c    **** 	Set_Battery_ADC();
1576:Src/main.c    **** 
1577:Src/main.c    **** 	EXTI_Configuration();
1578:Src/main.c    **** 
1579:Src/main.c    **** 	//Set_I2C_Port();
1580:Src/main.c    **** 	//Set_IR_Port();
1581:Src/main.c    **** 	//Set_ADC_Port();
1582:Src/main.c    **** 	
1583:Src/main.c    **** GPIO_SetBits(GPIOA, GPIO_Pin_1);//TW8816 reset
1584:Src/main.c    **** GPIO_ResetBits(GPIOA, GPIO_Pin_0);//TW8816 reset
1585:Src/main.c    **** 
1586:Src/main.c    **** GPIO_SetBits(GPIOA, GPIO_Pin_12);//ryan@20150525
1587:Src/main.c    **** GPIO_SetBits(GPIOA, GPIO_Pin_13);//ryan@20150525
1588:Src/main.c    **** GPIO_SetBits(GPIOA, GPIO_Pin_14);//ryan@20150525
1589:Src/main.c    **** 
1590:Src/main.c    **** GPIO_SetBits(GPIOC, GPIO_Pin_9);//ryan@20150525
1591:Src/main.c    **** GPIO_SetBits(GPIOC, GPIO_Pin_13);//ryan@20150525
1592:Src/main.c    **** GPIO_SetBits(GPIOC, GPIO_Pin_14);//ryan@20150525
1593:Src/main.c    **** GPIO_SetBits(GPIOC, GPIO_Pin_15);//ryan@20150525
1594:Src/main.c    **** 
1595:Src/main.c    **** GPIO_SetBits(GPIOC, GPIO_Pin_7);//ryan@20150525
1596:Src/main.c    **** 
1597:Src/main.c    **** //GPIO_ResetBits(GPIOC, GPIO_Pin_8);//ryan@20150525
1598:Src/main.c    **** PC_SW(1);//MP board
1599:Src/main.c    **** DC_OUT(0);//MP board
1600:Src/main.c    **** 	
1601:Src/main.c    **** 
1602:Src/main.c    **** #if __USE_SPI_FLASH__ == 1
1603:Src/main.c    **** 	Reset_SPI();
1604:Src/main.c    **** 	Set_SPI();
1605:Src/main.c    **** #endif
1606:Src/main.c    **** 
1607:Src/main.c    **** 	//Set_USBClock();
1608:Src/main.c    **** 	//USB_Interrupts_Config();
1609:Src/main.c    **** 	//USB_Init();
1610:Src/main.c    **** 
1611:Src/main.c    **** #endif
1612:Src/main.c    **** 
1613:Src/main.c    **** }
1614:Src/main.c    **** 
1615:Src/main.c    **** void user_pwm_setvalue(uint16_t value)
1616:Src/main.c    **** {
1617:Src/main.c    ****     TIM_OC_InitTypeDef sConfigOC;
1618:Src/main.c    ****   
1619:Src/main.c    ****     sConfigOC.OCMode = TIM_OCMODE_PWM1;
1620:Src/main.c    ****     sConfigOC.Pulse = value;
1621:Src/main.c    ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1622:Src/main.c    ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1623:Src/main.c    ****     HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3);
1624:Src/main.c    ****     HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);  
1625:Src/main.c    **** }
1626:Src/main.c    **** 
1627:Src/main.c    **** void LoadEEPROM (void)
1628:Src/main.c    **** {
1629:Src/main.c    **** #if 0
ARM GAS  /tmp/ccxsI2YD.s 			page 30


1630:Src/main.c    **** 	 PowerFlag = ReadEEP(EEP_Powerflag);
1631:Src/main.c    **** 	 SelectModeType = ReadEEP(EEP_SelectMode);
1632:Src/main.c    **** 
1633:Src/main.c    **** 	OSD_LOCKF= ReadEEP(EEP_ONOFFChoice);
1634:Src/main.c    **** 	Disp_Input = ReadEEP(EEP_COSDMode); 
1635:Src/main.c    **** 		
1636:Src/main.c    **** 	 TimeStep = ReadEEP(EEP_TimeStep);
1637:Src/main.c    **** 	 Priority=ReadEEP(EEP_PRIORITY);
1638:Src/main.c    **** 	 DayNightLevel= ReadEEP(EEP_AutoMode);
1639:Src/main.c    **** 	 NowModeState = ReadEEP(EEP_NowModeState);
1640:Src/main.c    **** 	
1641:Src/main.c    **** 	AudioVol = GetAudioVolEE();
1642:Src/main.c    **** 	CAMA_M= ReadEEP(EEP_CAMAMode);
1643:Src/main.c    **** 	CAMB_M= ReadEEP(EEP_CAMBMode);
1644:Src/main.c    **** 	CAMC_M= ReadEEP(EEP_CAMCMode);
1645:Src/main.c    **** 	CAMR_M= ReadEEP(EEP_CAMRMode);
1646:Src/main.c    **** 
1647:Src/main.c    **** 	AudioVol = GetAudioVolEE();
1648:Src/main.c    **** 
1649:Src/main.c    **** #endif
1650:Src/main.c    **** }
1651:Src/main.c    **** 
1652:Src/main.c    **** void WaitPowerOn(void)
1653:Src/main.c    **** {
1654:Src/main.c    **** BYTE val;
1655:Src/main.c    **** 	PowerLED(_SYSTEM_TIMER_EVENT_RED_ON);
1656:Src/main.c    **** 
1657:Src/main.c    **** 	LCDPowerOFF();
1658:Src/main.c    **** 	
1659:Src/main.c    **** 	MCUTimerCancelTimerEvent( _USER_TIMER_EVENT_PANEL_BACKLIGHT_ON);
1660:Src/main.c    **** 
1661:Src/main.c    **** 	Printf("\r\n(Power off..)");
1662:Src/main.c    **** 		
1663:Src/main.c    **** 	while(1) 
1664:Src/main.c    **** 	{	
1665:Src/main.c    **** 
1666:Src/main.c    **** 			CheckKeyIn();
1667:Src/main.c    **** 			if(PowerFlag==ON)
1668:Src/main.c    **** 			{
1669:Src/main.c    **** 				//PowerFlag=ON;
1670:Src/main.c    **** 				WriteEEP(EEP_Powerflag,PowerFlag);//2007.3.28 Justin
1671:Src/main.c    **** 				break;		//poweron
1672:Src/main.c    **** 			}
1673:Src/main.c    **** 			
1674:Src/main.c    **** 		  val=CheckTrigger();
1675:Src/main.c    **** 		 
1676:Src/main.c    **** //		  TriggerHandler(val);
1677:Src/main.c    **** 
1678:Src/main.c    **** 		if(val!=0)
1679:Src/main.c    **** 		{	
1680:Src/main.c    **** 			  PowerLED(_SYSTEM_TIMER_EVENT_GRN_ON);
1681:Src/main.c    **** 			TriggerHandler(val);
1682:Src/main.c    **** 			//	AudioMute(OFF);
1683:Src/main.c    **** 			//DisplayInput();		//william v0.2 20120223
1684:Src/main.c    **** 			/*
1685:Src/main.c    **** 			if(!(TriggerMode==0x08))
1686:Src/main.c    **** 			{
ARM GAS  /tmp/ccxsI2YD.s 			page 31


1687:Src/main.c    **** 				//Printf("\r\n(**PowerFlag=%02x)",(WORD)PowerFlag);
1688:Src/main.c    **** 				LCDPowerON(1);//修正power on時顯示太慢問題
1689:Src/main.c    **** 				AudioMute(1);
1690:Src/main.c    **** 			}
1691:Src/main.c    **** 			*/
1692:Src/main.c    **** 			
1693:Src/main.c    **** 		}
1694:Src/main.c    **** 		else
1695:Src/main.c    **** 		{
1696:Src/main.c    **** 			//Printf("\r\n(*NO-TRIG)");
1697:Src/main.c    **** 			TriggerHandler(val);  //Pinchi 20140922 add for AWT ML072Q
1698:Src/main.c    **** 
1699:Src/main.c    **** 
1700:Src/main.c    **** 				if(TriggerFlag==0)
1701:Src/main.c    **** 				{
1702:Src/main.c    **** 				//PowerOff();
1703:Src/main.c    **** 			//	AudioMute(ON);
1704:Src/main.c    **** 				
1705:Src/main.c    **** 				//PowerLED(_SYSTEM_TIMER_EVENT_RED_ON);
1706:Src/main.c    **** 				/*
1707:Src/main.c    **** 				if(live_out_state==1)	////live out issue 
1708:Src/main.c    **** 				{
1709:Src/main.c    **** 				live_out_state=0;
1710:Src/main.c    **** 				SetNowMode();
1711:Src/main.c    **** 				Panel_power=0;
1712:Src/main.c    **** 				}
1713:Src/main.c    **** 				*/
1714:Src/main.c    **** 				}
1715:Src/main.c    **** 			
1716:Src/main.c    **** 		//	TriggerHandler(val);  //Pinchi 20140922 move to above for AWT ML072Q	
1717:Src/main.c    **** 		}		  
1718:Src/main.c    **** 
1719:Src/main.c    **** 		   SysTimerHandler();
1720:Src/main.c    **** 		   	  EQ_Detect();	 
1721:Src/main.c    **** 			  
1722:Src/main.c    **** //			  	if((GT9147_Scan(1)>=_TOUCH_COUNT_1)&&(TP_ACTION==ON))
1723:Src/main.c    **** 					if(GT9147_Scan(1)>=_TOUCH_COUNT_1)
1724:Src/main.c    **** 
1725:Src/main.c    **** 					PowerFlag=ON;
1726:Src/main.c    **** 					
1727:Src/main.c    ****    	}
1728:Src/main.c    **** 
1729:Src/main.c    **** 	PowerLED(_SYSTEM_TIMER_EVENT_GRN_ON);
1730:Src/main.c    **** //	SHOWOSDINFO();	
1731:Src/main.c    **** 	
1732:Src/main.c    **** //		if((NowModeState==JumpMode)&&(TriggerFlag==0))
1733:Src/main.c    **** //			 ShowJUMPOSD();
1734:Src/main.c    **** 		
1735:Src/main.c    **** 	MCUTimerCancelTimerEvent(_USER_TIMER_EVENT_DISPLAY_DISABLE);
1736:Src/main.c    **** 	MCUTimerActiveTimerEvent(SEC(2),_USER_TIMER_EVENT_DISPLAY_DISABLE);
1737:Src/main.c    **** 
1738:Src/main.c    **** 	
1739:Src/main.c    **** 
1740:Src/main.c    **** MCUTimerActiveTimerEvent(SEC(1),  _USER_TIMER_EVENT_PANEL_BACKLIGHT_ON);
1741:Src/main.c    **** //LCDPowerON();
1742:Src/main.c    **** Printf("\r\n(Power ON..)");		
1743:Src/main.c    **** 
ARM GAS  /tmp/ccxsI2YD.s 			page 32


1744:Src/main.c    **** 
1745:Src/main.c    **** }
1746:Src/main.c    **** 
1747:Src/main.c    **** 
1748:Src/main.c    **** int main(void)
1749:Src/main.c    **** {
1750:Src/main.c    ****   /* USER CODE BEGIN 1 */
1751:Src/main.c    ****   TimeOutCount = 0 ;
1752:Src/main.c    **** 
1753:Src/main.c    ****     tByte i ;
1754:Src/main.c    ****     tByte j ;
1755:Src/main.c    ****     tByte exosdLen ;
1756:Src/main.c    ****     tByte exosdStart ;
1757:Src/main.c    **** #ifdef VICTOR_DEBUG
1758:Src/main.c    ****     tByte val ;
1759:Src/main.c    **** #endif
1760:Src/main.c    ****   //  int keystate ;
1761:Src/main.c    **** 
1762:Src/main.c    ****   /* USER CODE END 1 */
1763:Src/main.c    **** 
1764:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
1765:Src/main.c    **** 
1766:Src/main.c    ****   /* Reset of all peripherals, Initializes the F
1767:Src/main.c    ****    sh interface and the Systick. */
1768:Src/main.c    ****   HAL_Init();
1769:Src/main.c    ****   
1770:Src/main.c    ****   /* USER CODE BEGIN Init */
1771:Src/main.c    **** 
1772:Src/main.c    ****   /* USER CODE END Init */
1773:Src/main.c    **** 
1774:Src/main.c    ****   /* Configure the system clock */
1775:Src/main.c    ****   SystemClock_Config();
1776:Src/main.c    **** 
1777:Src/main.c    ****   
1778:Src/main.c    ****   /* USER CODE BEGIN SysInit */
1779:Src/main.c    ****   InitialTimerEvent();
1780:Src/main.c    **** 
1781:Src/main.c    ****   /* USER CODE END SysInit */
1782:Src/main.c    **** 
1783:Src/main.c    ****   /* Initialize all configured peripherals */
1784:Src/main.c    ****   MX_GPIO_Init();
1785:Src/main.c    ****  // LCDPowerOFF();
1786:Src/main.c    **** // AudioMute(ON);
1787:Src/main.c    **** 
1788:Src/main.c    **** //SET_PCA9554PW(_Shutter_SW,OFF);
1789:Src/main.c    ****  // SET_PCA9554PW(_CCD12_SW,ON);
1790:Src/main.c    **** //SET_PCA9554PW(_PCON5V_AUDIO,ON);
1791:Src/main.c    ****  //SET_PCA9554PW(_COL_PW_5V,OFF);
1792:Src/main.c    **** 
1793:Src/main.c    **** //  HAL_GPIO_WritePin(GREEN_LED_GPIO_Port, GREEN_LED_Pin , GPIO_PIN_SET);
1794:Src/main.c    **** //  HAL_GPIO_WritePin(RED_LED_GPIO_Port, RED_LED_Pin , GPIO_PIN_SET); 
1795:Src/main.c    **** 
1796:Src/main.c    ****  // PowerLED(_SYSTEM_TIMER_EVENT_GRN_ON);
1797:Src/main.c    **** 
1798:Src/main.c    **** //  MX_TIM2_Init();
1799:Src/main.c    ****   MX_TIM3_Init();
1800:Src/main.c    ****   MX_USART1_UART_Init();
ARM GAS  /tmp/ccxsI2YD.s 			page 33


1801:Src/main.c    ****   MX_USART2_UART_Init();
1802:Src/main.c    **** //  MX_ADC1_Init();
1803:Src/main.c    ****   
1804:Src/main.c    ****   /* USER CODE BEGIN 2 */
1805:Src/main.c    **** 
1806:Src/main.c    **** //HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_3);	
1807:Src/main.c    ****   
1808:Src/main.c    ****  SW_I2C0_Init() ;
1809:Src/main.c    ****  SW_I2C1_Init() ;
1810:Src/main.c    ****  SW_I2C2_Init() ;
1811:Src/main.c    ****  SW_I2C3_Init() ;
1812:Src/main.c    **** 
1813:Src/main.c    **** //user_pwm_setvalue(2000);
1814:Src/main.c    **** 
1815:Src/main.c    ****   //uComOnChipInitial();
1816:Src/main.c    ****   
1817:Src/main.c    **** // if((SelectInputMode==_HDMI_Input)&&(gHDMI_Index==0))
1818:Src/main.c    **** Set_Video_Loss_OSD(0,ON);
1819:Src/main.c    **** SET_Audio_Mute(ON);
1820:Src/main.c    **** 
1821:Src/main.c    **** 
1822:Src/main.c    ****  // GT9147_Init();
1823:Src/main.c    **** #if 1
1824:Src/main.c    ****   msleep(50) ;
1825:Src/main.c    ****   HAL_UART_Receive_IT(&huart1,(uint8_t*)Rx_data, 1);	//activate UART receive interrupt every time
1826:Src/main.c    ****   HAL_UART_Receive_IT(&huart2,(uint8_t*)Rx2_data, 1);	//activate UART receive interrupt every time
1827:Src/main.c    **** 
1828:Src/main.c    ****  // HAL_GPIO_WritePin(TP2824_RST_GPIO_Port, VS_RST_Pin, 0); //RX RST
1829:Src/main.c    ****  //HAL_GPIO_WritePin(TX_RST_GPIO_Port, VS_RST_Pin, 0); //TX RST
1830:Src/main.c    ****   HAL_GPIO_WritePin(VS_RST_GPIO_Port, VS_RST_Pin, 0); //VS4210 RST
1831:Src/main.c    ****  TP2824_SET_REST(0);
1832:Src/main.c    **** 
1833:Src/main.c    ****   msleep(100) ;
1834:Src/main.c    ****   //HAL_GPIO_WritePin(TP2824_RST_GPIO_Port, VS_RST_Pin, 1); //VS4210 RST
1835:Src/main.c    **** // HAL_GPIO_WritePin(TX_RST_GPIO_Port, VS_RST_Pin, 1); //TX RST
1836:Src/main.c    ****   HAL_GPIO_WritePin(VS_RST_GPIO_Port, VS_RST_Pin, 1); //VS4210 RST
1837:Src/main.c    ****  TP2824_SET_REST(1);
1838:Src/main.c    **** 
1839:Src/main.c    **** #endif
1840:Src/main.c    **** //LCDPowerON();
1841:Src/main.c    **** // SET_PCA9554PW(_COL_PW_5V,ON); 
1842:Src/main.c    **** 
1843:Src/main.c    ****   //I2CWrite(VS9988_ADDR, 0x01, 0x5A);  //reset
1844:Src/main.c    **** //  printf("\r\nVS4210 sdk2.0 Compiled %s %s !\r\n",__DATE__ , __TIME__);
1845:Src/main.c    **** // val = VXISI2CRead(0x00) ;
1846:Src/main.c    **** //  printf("VS4210 ID = 0x%02X !\r\n", (int)val );
1847:Src/main.c    **** 
1848:Src/main.c    ****   //Init_TP280x_RegSet();
1849:Src/main.c    **** 
1850:Src/main.c    ****   // RX Init
1851:Src/main.c    ****   for (i = 0 ; i < HDMI_IN_NUMBER ; i++ )
1852:Src/main.c    ****   {
1853:Src/main.c    ****       gHDMI_Index = i ;
1854:Src/main.c    ****       dbg_Printf("Init HDMI RX,Chip(%d)....\r\n",(int)i ) ;
1855:Src/main.c    ****       InitHDMIRX(0);
1856:Src/main.c    ****       HDMIRX_WriteI2C_Byte(0x89 ,0x80);
1857:Src/main.c    **** 
ARM GAS  /tmp/ccxsI2YD.s 			page 34


1858:Src/main.c    **** #ifdef VICTOR_DEBUG
1859:Src/main.c    ****       val = HDMIRX_ReadI2C_Byte(0x02) ;
1860:Src/main.c    ****       dbg_Printf("IT66021 chip num=%d , 02reg=0x%02x\r\n", (int )i , (int)val ) ;
1861:Src/main.c    **** #endif
1862:Src/main.c    ****   }
1863:Src/main.c    ****   
1864:Src/main.c    **** //  dbg_Printf("Init HDMI Tx....\r\n") ;
1865:Src/main.c    ****  //  HDMI_Tx_Init();
1866:Src/main.c    **** 
1867:Src/main.c    ****    if (HDMI_IN_NUMBER == 4 )
1868:Src/main.c    ****     pVS4210_MutiWindows1.OutputMode = VS4210_1080P_MODE1 ;  // 4windows
1869:Src/main.c    ****   else
1870:Src/main.c    **** 	  #ifdef VS4210_SELECT_WIN1	//20201211-02
1871:Src/main.c    **** 	  pVS4210_MutiWindows1.OutputMode =VS4210_1080P_MODE0_w1;
1872:Src/main.c    **** 	  #else
1873:Src/main.c    ****       pVS4210_MutiWindows1.OutputMode =VS4210_1080P_MODE0_w0;/// VS4210_1080P_MODE12 ;  
1874:Src/main.c    **** 	  #endif
1875:Src/main.c    **** 
1876:Src/main.c    ****   pVS4210_MutiWindows1.AudioChannel = HDMI_AUDIO_1 ;
1877:Src/main.c    ****   pVS4210_MutiWindows1.OutputSize = _OUTPUT_1080P60 ;
1878:Src/main.c    **** 	#ifdef VS4210_SELECT_WIN1	//20201211-02
1879:Src/main.c    **** 	pVS4210_MutiWindows1.WindowMap.WMap0 = 2 ;
1880:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap1 = 1 ; //set ch2 = video2
1881:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap2 = 3 ; //set ch3 = video3
1882:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap3 = 4 ; //set ch4 = video4
1883:Src/main.c    **** 	#else
1884:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap0 = 1 ; //set ch1 = video1
1885:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap1 = 2 ; //set ch2 = video2
1886:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap2 = 3 ; //set ch3 = video3
1887:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap3 = 4 ; //set ch4 = video4
1888:Src/main.c    **** 	#endif
1889:Src/main.c    **** #if 1
1890:Src/main.c    **** //Extern OSD 20200110-01
1891:Src/main.c    **** VXOSD_UseFont_init(EXTERNOSDNUMBER ,&UserDefineFont1[0] ) ;
1892:Src/main.c    **** 
1893:Src/main.c    **** main_init();
1894:Src/main.c    **** #endif
1895:Src/main.c    **** 
1896:Src/main.c    **** #ifdef  _SUPPORT_EDID_RAM_
1897:Src/main.c    **** //interval EDID ryan@20200917
1898:Src/main.c    **** //SETIT66021EDID();
1899:Src/main.c    **** #endif
1900:Src/main.c    **** 
1901:Src/main.c    ****    Init_TP280x_RegSet();
1902:Src/main.c    **** 
1903:Src/main.c    ****    //test@start
1904:Src/main.c    **** #ifdef VICTOR_DEBUG
1905:Src/main.c    ****    val = VXISI2CRead(0x00) ;
1906:Src/main.c    ****    dbg_Printf("VS4210 chip ID = 0x%02x\r\n",(int)val) ;
1907:Src/main.c    ****    dbg_Printf("VS4210 Init. (Startting...)\r\n") ;
1908:Src/main.c    **** #endif
1909:Src/main.c    **** 
1910:Src/main.c    ****  pVS4210_MutiWindows1.DrawOSDFlg = 0x03 ;  //Enable OSD, bit1=Title, bit0 = bar
1911:Src/main.c    ****   //pVS4210_MutiWindows1.DrawOSDFlg = 0x00 ;  //Enable OSD, bit1=Title, bit0 = bar
1912:Src/main.c    ****   //pVS4210_MutiWindows1.OutputMode = VS4210_1080P_MODE1 ;  // 4windows
1913:Src/main.c    ****   //pVS4210_MutiWindows1.OutputMode = VS4210_1080P_MODE6 ;  // 1_3 windows
1914:Src/main.c    ****   //pVS4210_MutiWindows1.OutputMode = VS4210_1080P_MODE12 ;  // 4windows
ARM GAS  /tmp/ccxsI2YD.s 			page 35


1915:Src/main.c    **** //  pVS4210_MutiWindows1.WindowMap.WMap0 = 1 ; //set ch1 = video1
1916:Src/main.c    **** //  pVS4210_MutiWindows1.WindowMap.WMap1 = 2 ; //set ch2 = video2
1917:Src/main.c    **** //  pVS4210_MutiWindows1.WindowMap.WMap2 = 3 ; //set ch3 = video3
1918:Src/main.c    **** //  pVS4210_MutiWindows1.WindowMap.WMap3 = 4 ; //set ch4 = video4
1919:Src/main.c    ****   //pVS4210_MutiWindows1.AudioChannel = HDMI_AUDIO_1 ;
1920:Src/main.c    ****   pVS4210_MutiWindows1.OutputSize = _OUTPUT_1080P60 ;
1921:Src/main.c    ****   //pVS4210_MutiWindows1.OutputSize = _OUTPUT_720P60 ;
1922:Src/main.c    ****   //pVS4210_MutiWindows1.DrawBoxFlg =1 ;
1923:Src/main.c    ****   pVS4210_MutiWindows1.DrawBoxFlg =0 ;
1924:Src/main.c    ****   pVS4210_MutiWindows1.DrawBoxColor= _EN_DRAWBOX_COLOR_White ;
1925:Src/main.c    ****   VXIS_fSetOsdx2(0) ;
1926:Src/main.c    **** 
1927:Src/main.c    ****   VS4210_SetMutiWindows(&pVS4210_MutiWindows1) ;
1928:Src/main.c    **** 
1929:Src/main.c    ****   if (pVS4210_MutiWindows1.DrawOSDFlg != 0)
1930:Src/main.c    ****   {
1931:Src/main.c    ****         OSD_Show_Flg = 1 ;
1932:Src/main.c    ****         Tim1_count = 0 ;
1933:Src/main.c    ****         OSDStateFlg = 1 ;
1934:Src/main.c    ****         OSDSecCount = 0 ;
1935:Src/main.c    ****   }  
1936:Src/main.c    **** 
1937:Src/main.c    **** ExOsdContent[0] = 3*  ((EXTERNOSDNUMBER *2) +1) ;
1938:Src/main.c    **** memset(&ExOsdContent[1] ,_spc , (EXTERNOSDNUMBER+1) *2 ) ;
1939:Src/main.c    **** exosdLen = 4*EXTERNOSDNUMBER + 4  ;
1940:Src/main.c    **** exosdStart = (EXTERNOSDNUMBER +1) *2 +1 ;
1941:Src/main.c    **** j = 1 ;
1942:Src/main.c    **** for (i = exosdStart ; i <= exosdLen ;i = i+2 )
1943:Src/main.c    **** {
1944:Src/main.c    **** 	ExOsdContent[i] = 0x7F + j ;
1945:Src/main.c    **** 	ExOsdContent[i+1] = _spc ;
1946:Src/main.c    **** 	j++ ;
1947:Src/main.c    **** }
1948:Src/main.c    **** memset(&ExOsdContent[4*EXTERNOSDNUMBER +3] ,_spc ,EXTERNOSDNUMBER *2 +1   ) ;
1949:Src/main.c    ****   exosdLen = EXTERNOSDNUMBER *2  ;
1950:Src/main.c    **** 
1951:Src/main.c    **** Audio_Sel(HDMI_AUDIO_1) ;
1952:Src/main.c    **** //test@end
1953:Src/main.c    **** 
1954:Src/main.c    **** /*
1955:Src/main.c    **** //xxxxx 2013-0801
1956:Src/main.c    **** IT6602HPDCtrl(1,0);	// HDMI port , set HPD = 0
1957:Src/main.c    **** //xxxxx
1958:Src/main.c    **** 
1959:Src/main.c    ****     delay1ms(1000);	//for power sequence
1960:Src/main.c    **** 
1961:Src/main.c    **** IT6602_fsm_init();
1962:Src/main.c    **** */
1963:Src/main.c    **** 
1964:Src/main.c    **** 
1965:Src/main.c    **** #if 0
1966:Src/main.c    **** //PowerLED(_SYSTEM_TIMER_EVENT_GRN_ON);
1967:Src/main.c    **** 
1968:Src/main.c    **** //load eeprom data
1969:Src/main.c    **** //LoadEEPROM();
1970:Src/main.c    **** 
1971:Src/main.c    **** //RX
ARM GAS  /tmp/ccxsI2YD.s 			page 36


1972:Src/main.c    ****   ManVidRes = RES1920X1080 ; //0x01
1973:Src/main.c    **** //Init_TP280x_RegSet();
1974:Src/main.c    **** 
1975:Src/main.c    **** //TX
1976:Src/main.c    ****   //VS9988_Set_Format(gbVXIS_InputMode, gbVXIS_OuputModeflg, gbVXIS_OuputChannel  )	;
1977:Src/main.c    ****   //gbVXIS_InputMode = _OSD_NO_SINGLE ;
1978:Src/main.c    ****   //VS9988_BlueScreen() ;
1979:Src/main.c    ****   //VXOSD_SetOnOff(0) ;
1980:Src/main.c    **** 
1981:Src/main.c    ****   //HDMI_Tx_Init() ;
1982:Src/main.c    **** 
1983:Src/main.c    ****   //VS4210 SW Reset@start
1984:Src/main.c    ****     VXISI2CWrite( 0x01 , 0x5A); //Reset
1985:Src/main.c    **** 
1986:Src/main.c    **** 
1987:Src/main.c    ****   //VS4210 SW Reset@end
1988:Src/main.c    ****   //VS4210_SwitchChip(0x40, 0 ) ;c8 cc8
1989:Src/main.c    ****   pVS4210_JointKind1.AudioChannel = HDMI_AUDIO_NONE ;
1990:Src/main.c    ****   pVS4210_JointKind1.DrawBoxFlg =1 ;
1991:Src/main.c    ****   pVS4210_JointKind1.DrawOSDFlg =0x03 ; //bits 0 ,1
1992:Src/main.c    ****   //pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE0_w0 ;
1993:Src/main.c    ****  // pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE1 ;
1994:Src/main.c    **** pVS4210_JointKind1.OutputMode =VS4210_1080P_MODE0_w0;/* VS4210_1080P_MODE1 ;*/
1995:Src/main.c    ****   pVS4210_JointKind1.OutputSize = _OUTPUT_1080P60 ;///*_OUTPUT_800x480;*/
1996:Src/main.c    **** 
1997:Src/main.c    **** //LCDPowerON();
1998:Src/main.c    **** 
1999:Src/main.c    **** //VS4210_Rx_NoSignal(3) ;
2000:Src/main.c    **** 
2001:Src/main.c    ****  setloopoutmode(0) ;
2002:Src/main.c    **** // SetNowMode();	
2003:Src/main.c    **** 
2004:Src/main.c    ****     VS4210_Rx_NoSignal(0) ;
2005:Src/main.c    ****   VS4210_Rx_NoSignal(1) ;
2006:Src/main.c    ****   VS4210_Rx_NoSignal(2) ;
2007:Src/main.c    ****   VS4210_Rx_NoSignal(3) ;
2008:Src/main.c    ****   
2009:Src/main.c    ****   #endif
2010:Src/main.c    **** // LCDPowerON();
2011:Src/main.c    **** // SetNowMode();  
2012:Src/main.c    ****   //void VS4210_Rx_NoSignal(tByte ch )
2013:Src/main.c    **** 
2014:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim3) ;
2015:Src/main.c    ****   /* USER CODE END 2 */
2016:Src/main.c    ****  
2017:Src/main.c    ****   /* Infinite loop */
2018:Src/main.c    ****   /* USER CODE BEGIN WHILE */
2019:Src/main.c    **** 
2020:Src/main.c    **** //SetNowMode();  
2021:Src/main.c    **** 
2022:Src/main.c    ****  // 	LoadVideoData();
2023:Src/main.c    **** 
2024:Src/main.c    **** //	  AudioMute(OFF);
2025:Src/main.c    **** 	//  LCDPowerON();
2026:Src/main.c    **** 
2027:Src/main.c    **** //	SET_VX8812_SD_Video_Out(_NTSC);
2028:Src/main.c    **** //	SET_VX8812_SD_Video_Out(_PAL);
ARM GAS  /tmp/ccxsI2YD.s 			page 37


2029:Src/main.c    **** 
2030:Src/main.c    **** //  Printf("\r\nMain Loop...");
2031:Src/main.c    ****   printf("\r\nMain Loop...");
2032:Src/main.c    **** 
2033:Src/main.c    ****   //VXISI2CWrite(0x08,0x21);
2034:Src/main.c    ****   //VXISI2CWrite(0x0A,0x21);
2035:Src/main.c    ****   //VXISI2CWrite(0x74,0x02);
2036:Src/main.c    ****   //VXISI2CWrite(0x82,0x40);
2037:Src/main.c    **** //  VS4210_FULL88init2(VS4210_hdmi1080P_1080P_mode0_w0_88param);
2038:Src/main.c    **** 
2039:Src/main.c    ****   while (1)
2040:Src/main.c    ****   {
2041:Src/main.c    ****     /* USER CODE END WHILE */
2042:Src/main.c    **** 
2043:Src/main.c    **** //	if(PowerFlag==ON)///power offf
2044:Src/main.c    **** 	 main_loop();
2045:Src/main.c    **** 	
2046:Src/main.c    **** //	WaitPowerOn();
2047:Src/main.c    **** 
2048:Src/main.c    **** 	//user_pwm_setvalue(500);
2049:Src/main.c    **** 
2050:Src/main.c    ****     /* USER CODE BEGIN 3 */
2051:Src/main.c    **** 
2052:Src/main.c    **** 
2053:Src/main.c    **** 
2054:Src/main.c    **** 
2055:Src/main.c    ****   }
2056:Src/main.c    ****   /* USER CODE END 3 */
2057:Src/main.c    **** }
2058:Src/main.c    **** 
2059:Src/main.c    **** void main_loop(void)
2060:Src/main.c    **** {
2061:Src/main.c    **** 
2062:Src/main.c    **** //BYTE val;
2063:Src/main.c    **** //USHORT loopinterval;
2064:Src/main.c    **** 
2065:Src/main.c    **** //VXISI2CWrite(0xf0,0xb5);
2066:Src/main.c    **** 
2067:Src/main.c    **** while(1)
2068:Src/main.c    **** {
2069:Src/main.c    **** 
2070:Src/main.c    **** #if (_DEBUG_MESSAGE_Monitor==ON)
2071:Src/main.c    **** 	if(AccessEnable==1)
2072:Src/main.c    **** 	#endif
2073:Src/main.c    **** {
2074:Src/main.c    **** 	HDMI_VideoModeDetect() ;
2075:Src/main.c    **** 	HDMI_AudioModeDetect() ;
2076:Src/main.c    **** 
2077:Src/main.c    **** 	TxCount++ ;
2078:Src/main.c    **** 	if (TxCount > 10 )
2079:Src/main.c    **** 	{
2080:Src/main.c    **** 		TxCount = 0 ;
2081:Src/main.c    **** 		HDMITX_DevLoopProc() ;
2082:Src/main.c    **** 	}
2083:Src/main.c    **** 	
2084:Src/main.c    **** //	GetRS232_CMD();
2085:Src/main.c    **** 	//getmcukeystate() ;
ARM GAS  /tmp/ccxsI2YD.s 			page 38


2086:Src/main.c    **** 	/*
2087:Src/main.c    **** 	if (IR_END_Flg ==1 )
2088:Src/main.c    **** 	{
2089:Src/main.c    **** 		IR_END_Flg = 0 ;
2090:Src/main.c    **** 		if (u8IRcode == u8IRCheckcode )
2091:Src/main.c    **** 		{
2092:Src/main.c    **** 			dbg_Printf("Vendor=0x%04x,IR=0x%02x\r\n",(int) u16Vendor,(int) u8IRcode) ;
2093:Src/main.c    **** 			if (u16Vendor == IR_Vendor_Code_)
2094:Src/main.c    **** 			{
2095:Src/main.c    **** 				ir_process(u8IRcode) ;
2096:Src/main.c    **** 				u16Vendor =0 ;
2097:Src/main.c    **** 			}
2098:Src/main.c    **** 		}
2099:Src/main.c    **** 	}
2100:Src/main.c    **** 	*/
2101:Src/main.c    **** 
2102:Src/main.c    **** 	msleep(10) ;
2103:Src/main.c    **** 
2104:Src/main.c    **** 	   gMode0LoopCount++ ;
2105:Src/main.c    **** 	   if (gMode0LoopCount > 100 )
2106:Src/main.c    **** 	   {
2107:Src/main.c    **** 		   gMode0LoopCount = 0 ;
2108:Src/main.c    **** 		   OSDSecCount = OSDSecCount +1 ;
2109:Src/main.c    **** 	   }
2110:Src/main.c    **** 	
2111:Src/main.c    **** 	   if (OSDPreSecCount != OSDSecCount)
2112:Src/main.c    **** 	   {
2113:Src/main.c    **** 		   OSDPreSecCount = OSDSecCount ;
2114:Src/main.c    **** 		   if (gMode0LoopFlg == 1)
2115:Src/main.c    **** 		   {
2116:Src/main.c    **** 			   gMode0LoopSecCount ++ ;
2117:Src/main.c    **** 			   if (gMode0LoopSecCount > gMode0LoopSecCmpVal)
2118:Src/main.c    **** 			   {
2119:Src/main.c    **** 				   gMode0LoopSecCount = 0 ;
2120:Src/main.c    **** 				   pVS4210_MutiWindows1.OutputMode = VS4210_FULL_MODE0 ;
2121:Src/main.c    **** 				   if (pVS4210_MutiWindows1.WindowMap.WMap0 < 4)
2122:Src/main.c    **** 				   {
2123:Src/main.c    **** 					   pVS4210_MutiWindows1.WindowMap.WMap0 = pVS4210_MutiWindows1.WindowMap.WMap0 +1 ;
2124:Src/main.c    **** 				   }
2125:Src/main.c    **** 				   else {
2126:Src/main.c    **** 					   pVS4210_MutiWindows1.WindowMap.WMap0 = 1 ;
2127:Src/main.c    **** 				   }
2128:Src/main.c    **** 				   dbg_Printf("LOOP CH=%d,SMP Sec=%d\r\n",pVS4210_MutiWindows1.WindowMap.WMap0, gMode0LoopSecCm
2129:Src/main.c    **** 				   VS4210_SetMutiWindows(&pVS4210_MutiWindows1) ;
2130:Src/main.c    **** 				   OSDSecCount = 0 ;
2131:Src/main.c    **** 			   }
2132:Src/main.c    **** 		   }
2133:Src/main.c    **** 	
2134:Src/main.c    **** 		   if (gMode0LoopFlg == 1)
2135:Src/main.c    **** 		   {
2136:Src/main.c    **** 		    dbg_Printf("Loop CH=%d,SecCount=%d\r\n",pVS4210_MutiWindows1.WindowMap.WMap0, OSDSecCount)  ;
2137:Src/main.c    **** 		   }
2138:Src/main.c    **** 		   else
2139:Src/main.c    **** 		   {
2140:Src/main.c    **** 		  //dbg_Printf("OSDSecCount=%d\r\n", OSDSecCount)  ;
2141:Src/main.c    **** 		   }
2142:Src/main.c    **** 	
ARM GAS  /tmp/ccxsI2YD.s 			page 39


2143:Src/main.c    **** 		   if (OSDStateFlg == 1 )
2144:Src/main.c    **** 		   {
2145:Src/main.c    **** 			   if (OSDSecCount >= OSD_OFF_SEC )
2146:Src/main.c    **** 			   {
2147:Src/main.c    **** 				   OSDSecCount = 0 ;
2148:Src/main.c    **** 				   OSDStateFlg = 0 ;
2149:Src/main.c    **** 				   OSD_Clear_All();
2150:Src/main.c    **** 				   ////VXIS_fSetContentOsdOnOff(0) ;
2151:Src/main.c    **** 			   }
2152:Src/main.c    **** 		   }
2153:Src/main.c    **** 
2154:Src/main.c    **** 		if(VXISI2CRead(0x32)==0 )///CONTRAST
2155:Src/main.c    **** 			VXISI2CWrite(0x32,0x80);
2156:Src/main.c    **** 		   
2157:Src/main.c    **** 	   }
2158:Src/main.c    **** 
2159:Src/main.c    **** 
2160:Src/main.c    **** 	EQ_Detect();
2161:Src/main.c    **** 	
2162:Src/main.c    **** #if (_Source_Switch==ON)
2163:Src/main.c    **** 
2164:Src/main.c    **** 	#if (_Only_AHD_Mode==ON)
2165:Src/main.c    **** 		if((SelectInputMode!=1))
2166:Src/main.c    **** 		{
2167:Src/main.c    **** 			msleep(50) ;
2168:Src/main.c    **** 
2169:Src/main.c    **** 			if((SelectInputMode!=1))
2170:Src/main.c    **** 				{
2171:Src/main.c    **** 				SelectInputMode=1;
2172:Src/main.c    **** 
2173:Src/main.c    **** 					HS_Select_Win(1);
2174:Src/main.c    **** 				}
2175:Src/main.c    **** 		}	
2176:Src/main.c    **** 
2177:Src/main.c    **** 	#else
2178:Src/main.c    **** 	CheckSelectInputMode=HDMI_SELECT_GET();
2179:Src/main.c    **** 		if((CheckSelectInputMode!=SelectInputMode)/*&&(BOOT_ISSUE==0)*/)
2180:Src/main.c    **** 		{
2181:Src/main.c    **** 			msleep(50) ;
2182:Src/main.c    **** 			CheckSelectInputMode=HDMI_SELECT_GET();
2183:Src/main.c    **** 
2184:Src/main.c    **** 			if((CheckSelectInputMode!=SelectInputMode)/*&&(BOOT_ISSUE==0)*/)
2185:Src/main.c    **** 				{
2186:Src/main.c    **** 				SelectInputMode=CheckSelectInputMode;
2187:Src/main.c    **** 
2188:Src/main.c    **** 			//	HS_Select_Win(HDMI_SELECT_GET());
2189:Src/main.c    **** 
2190:Src/main.c    **** 				if(SelectInputMode==1)
2191:Src/main.c    **** 					HS_Select_Win(1);
2192:Src/main.c    **** 				else
2193:Src/main.c    **** 				HS_Select_Win(0);
2194:Src/main.c    **** 				}
2195:Src/main.c    **** 		}	
2196:Src/main.c    **** 
2197:Src/main.c    **** 		
2198:Src/main.c    **** 	#endif
2199:Src/main.c    **** 
ARM GAS  /tmp/ccxsI2YD.s 			page 40


2200:Src/main.c    **** #endif
2201:Src/main.c    **** }
2202:Src/main.c    **** 
2203:Src/main.c    **** 	#if (_DEBUG_MESSAGE_Monitor==ON)
2204:Src/main.c    **** 	do {	//20201211-04
2205:Src/main.c    **** 	while( RS_ready())	Monitor();	
2206:Src/main.c    **** 	}while(AccessEnable == 0);
2207:Src/main.c    **** 	#endif
2208:Src/main.c    **** 
2209:Src/main.c    **** while( RS2_ready())     TOAReceivePaser();
2210:Src/main.c    **** 		
2211:Src/main.c    **** 	      SysTimerHandler();
2212:Src/main.c    **** 
2213:Src/main.c    **** 		Get_2824cIrq();//check tp2824 COC
2214:Src/main.c    **** 
2215:Src/main.c    **** 
2216:Src/main.c    **** 
2217:Src/main.c    **** #if 0
2218:Src/main.c    **** 		  loopinterval += getloopTicCount();
2219:Src/main.c    **** 		  
2220:Src/main.c    **** 					  ///////////////////////////
2221:Src/main.c    **** 					  // sys main flow
2222:Src/main.c    **** 					  ///////////////////////////
2223:Src/main.c    **** 					  if( loopinterval >=MS_LOOP) //execute once each 50m second
2224:Src/main.c    **** 					  {
2225:Src/main.c    **** 				    //printf("loopinterval\n");
2226:Src/main.c    **** 		  
2227:Src/main.c    **** 					   loopinterval =0;
2228:Src/main.c    **** 				//	 IT6602_fsm();
2229:Src/main.c    **** 					 }
2230:Src/main.c    **** #endif	
2231:Src/main.c    **** 	/*
2232:Src/main.c    **** 		CheckKeyIn();
2233:Src/main.c    **** 
2234:Src/main.c    **** 	CheckTouchP();
2235:Src/main.c    **** 	
2236:Src/main.c    **** 	  EQ_Detect();	 
2237:Src/main.c    **** 
2238:Src/main.c    **** 	if( GT9147_Scan(1)==_TOUCH_COUNT_4 ) break;		
2239:Src/main.c    **** 	
2240:Src/main.c    **** 		  val=CheckTrigger();
2241:Src/main.c    **** 		  TriggerHandler(val);
2242:Src/main.c    **** 
2243:Src/main.c    **** 	if( !CheckKeyIn() ) break;			// POWEROFF
2244:Src/main.c    **** 	*/
2245:Src/main.c    **** 	
2246:Src/main.c    **** 	}
2247:Src/main.c    **** 
2248:Src/main.c    **** }
2249:Src/main.c    **** 
2250:Src/main.c    **** /* static*/ void VS4210_FULL88init2( tcByte *Valn )
2251:Src/main.c    ****  {
2252:Src/main.c    **** 	 tByte i ;
2253:Src/main.c    **** 	 tByte addr ;
2254:Src/main.c    **** 	 tByte i2cVal ;
2255:Src/main.c    **** 	 tcByte *Addrn ; 
2256:Src/main.c    **** 	 Addrn = &VS4210_Addr_88param[0] ; 
ARM GAS  /tmp/ccxsI2YD.s 			page 41


2257:Src/main.c    ****  
2258:Src/main.c    **** 	 for (i=0 ; i< VS4210_INIT_NUMBER ; i++)
2259:Src/main.c    **** 	 {
2260:Src/main.c    **** 		 addr	= Addrn[i] ;
2261:Src/main.c    **** 		 i2cVal = Valn[i];
2262:Src/main.c    **** 		 VXISI2CWrite( addr,i2cVal);
2263:Src/main.c    **** 	 }
2264:Src/main.c    ****  }
2265:Src/main.c    **** 
2266:Src/main.c    **** void TP_bt1120_1080P_1080P_mode0_w0(void)
2267:Src/main.c    **** {
2268:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table 1080P... ");
2269:Src/main.c    **** #if 1
2270:Src/main.c    **** 
2271:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_1080P_1080P_mode0_w0_88param);
2272:Src/main.c    **** #else
2273:Src/main.c    **** 
2274:Src/main.c    **** VXISI2CWrite(0x00,0x42); 
2275:Src/main.c    **** VXISI2CWrite(0x01,0x00); 
2276:Src/main.c    **** VXISI2CWrite(0x02,0x00); 
2277:Src/main.c    **** VXISI2CWrite(0x03,0x75); 
2278:Src/main.c    **** VXISI2CWrite(0x04,0x18); 
2279:Src/main.c    **** VXISI2CWrite(0x05,0x80); 
2280:Src/main.c    **** VXISI2CWrite(0x06,0x20); 
2281:Src/main.c    **** VXISI2CWrite(0x07,0x0C); 
2282:Src/main.c    **** VXISI2CWrite(0x08,0x40); 
2283:Src/main.c    **** VXISI2CWrite(0x09,0x0A); 
2284:Src/main.c    **** VXISI2CWrite(0x0A,0x40); 
2285:Src/main.c    **** VXISI2CWrite(0x0B,0x0A); 
2286:Src/main.c    **** VXISI2CWrite(0x0C,0x00); 
2287:Src/main.c    **** VXISI2CWrite(0x0D,0x20); 
2288:Src/main.c    **** VXISI2CWrite(0x0E,0x10); 
2289:Src/main.c    **** VXISI2CWrite(0x0F,0x00); 
2290:Src/main.c    **** VXISI2CWrite(0x10,0x81); 
2291:Src/main.c    **** VXISI2CWrite(0x11,0x82); 
2292:Src/main.c    **** VXISI2CWrite(0x12,0x74); 
2293:Src/main.c    **** VXISI2CWrite(0x13,0x80); 
2294:Src/main.c    **** VXISI2CWrite(0x14,0x38); 
2295:Src/main.c    **** VXISI2CWrite(0x15,0x78); 
2296:Src/main.c    **** VXISI2CWrite(0x16,0xFE); 
2297:Src/main.c    **** VXISI2CWrite(0x17,0x00); 
2298:Src/main.c    **** VXISI2CWrite(0x18,0xC0); 
2299:Src/main.c    **** VXISI2CWrite(0x19,0x01); 
2300:Src/main.c    **** VXISI2CWrite(0x1A,0x20); 
2301:Src/main.c    **** VXISI2CWrite(0x1B,0x30); 
2302:Src/main.c    **** VXISI2CWrite(0x1C,0x00); 
2303:Src/main.c    **** VXISI2CWrite(0x1D,0x00); 
2304:Src/main.c    **** VXISI2CWrite(0x1E,0x20); 
2305:Src/main.c    **** VXISI2CWrite(0x1F,0xA4); 
2306:Src/main.c    **** VXISI2CWrite(0x20,0x50); 
2307:Src/main.c    **** VXISI2CWrite(0x21,0xE2); 
2308:Src/main.c    **** VXISI2CWrite(0x22,0x87); 
2309:Src/main.c    **** VXISI2CWrite(0x23,0x98); 
2310:Src/main.c    **** VXISI2CWrite(0x24,0x80); 
2311:Src/main.c    **** VXISI2CWrite(0x25,0x44); 
2312:Src/main.c    **** VXISI2CWrite(0x26,0x65); 
2313:Src/main.c    **** VXISI2CWrite(0x27,0x38); 
ARM GAS  /tmp/ccxsI2YD.s 			page 42


2314:Src/main.c    **** VXISI2CWrite(0x28,0xF0); 
2315:Src/main.c    **** VXISI2CWrite(0x29,0x00); 
2316:Src/main.c    **** VXISI2CWrite(0x2A,0x00); 
2317:Src/main.c    **** VXISI2CWrite(0x2B,0x11); 
2318:Src/main.c    **** VXISI2CWrite(0x2C,0x00); 
2319:Src/main.c    **** VXISI2CWrite(0x2D,0x00); 
2320:Src/main.c    **** VXISI2CWrite(0x2E,0x47); 
2321:Src/main.c    **** VXISI2CWrite(0x2F,0x80); 
2322:Src/main.c    **** VXISI2CWrite(0x30,0x38); 
2323:Src/main.c    **** VXISI2CWrite(0x31,0x80); 
2324:Src/main.c    **** VXISI2CWrite(0x32,0x80); 
2325:Src/main.c    **** VXISI2CWrite(0x33,0x80); 
2326:Src/main.c    **** VXISI2CWrite(0x34,0xA0); 
2327:Src/main.c    **** VXISI2CWrite(0x35,0x18); 
2328:Src/main.c    **** VXISI2CWrite(0x36,0x46); 
2329:Src/main.c    **** VXISI2CWrite(0x37,0x64); 
2330:Src/main.c    **** VXISI2CWrite(0x38,0x00); 
2331:Src/main.c    **** VXISI2CWrite(0x39,0xFF); 
2332:Src/main.c    **** VXISI2CWrite(0x3A,0x00); 
2333:Src/main.c    **** VXISI2CWrite(0x3B,0x80); 
2334:Src/main.c    **** VXISI2CWrite(0x3C,0x80); 
2335:Src/main.c    **** VXISI2CWrite(0x3D,0x80); 
2336:Src/main.c    **** VXISI2CWrite(0x3E,0x80); 
2337:Src/main.c    **** VXISI2CWrite(0x3F,0x80); 
2338:Src/main.c    **** //VXISI2CWrite(0xVXISI2C)
2339:Src/main.c    **** VXISI2CWrite(0x41,0x60); 
2340:Src/main.c    **** VXISI2CWrite(0x42,0x5F); 
2341:Src/main.c    **** VXISI2CWrite(0x43,0x37); 
2342:Src/main.c    **** VXISI2CWrite(0x44,0x14); 
2343:Src/main.c    **** VXISI2CWrite(0x45,0x00); 
2344:Src/main.c    **** VXISI2CWrite(0x46,0x00); 
2345:Src/main.c    **** VXISI2CWrite(0x47,0x00); 
2346:Src/main.c    **** VXISI2CWrite(0x48,0x00); 
2347:Src/main.c    **** VXISI2CWrite(0x49,0x00); 
2348:Src/main.c    **** VXISI2CWrite(0x4A,0x00); 
2349:Src/main.c    **** VXISI2CWrite(0x4B,0x20); 
2350:Src/main.c    **** VXISI2CWrite(0x4C,0x00); 
2351:Src/main.c    **** VXISI2CWrite(0x4D,0x00); 
2352:Src/main.c    **** VXISI2CWrite(0x4E,0x00); 
2353:Src/main.c    **** VXISI2CWrite(0x4F,0x7F); 
2354:Src/main.c    **** VXISI2CWrite(0x50,0x20); 
2355:Src/main.c    **** VXISI2CWrite(0x51,0x05); 
2356:Src/main.c    **** VXISI2CWrite(0x52,0x00); 
2357:Src/main.c    **** VXISI2CWrite(0x53,0x06); 
2358:Src/main.c    **** VXISI2CWrite(0x54,0x00); 
2359:Src/main.c    **** VXISI2CWrite(0x55,0xB4); 
2360:Src/main.c    **** VXISI2CWrite(0x56,0x3D); 
2361:Src/main.c    **** VXISI2CWrite(0x57,0x04); 
2362:Src/main.c    **** VXISI2CWrite(0x58,0x00); 
2363:Src/main.c    **** VXISI2CWrite(0x59,0x08); 
2364:Src/main.c    **** VXISI2CWrite(0x5A,0x10); 
2365:Src/main.c    **** VXISI2CWrite(0x5B,0x00); 
2366:Src/main.c    **** VXISI2CWrite(0x5C,0x68); 
2367:Src/main.c    **** VXISI2CWrite(0x5D,0x40); 
2368:Src/main.c    **** VXISI2CWrite(0x5E,0x0A); 
2369:Src/main.c    **** VXISI2CWrite(0x5F,0x00); 
2370:Src/main.c    **** VXISI2CWrite(0x60,0xB4); 
ARM GAS  /tmp/ccxsI2YD.s 			page 43


2371:Src/main.c    **** VXISI2CWrite(0x61,0x51); 
2372:Src/main.c    **** VXISI2CWrite(0x62,0x33); 
2373:Src/main.c    **** VXISI2CWrite(0x63,0x01); 
2374:Src/main.c    **** VXISI2CWrite(0x64,0xFF); 
2375:Src/main.c    **** VXISI2CWrite(0x65,0x01); 
2376:Src/main.c    **** VXISI2CWrite(0x66,0xFF); 
2377:Src/main.c    **** VXISI2CWrite(0x67,0x89); 
2378:Src/main.c    **** VXISI2CWrite(0x68,0xAB); 
2379:Src/main.c    **** VXISI2CWrite(0x69,0x88); 
2380:Src/main.c    **** VXISI2CWrite(0x6A,0x6E); 
2381:Src/main.c    **** VXISI2CWrite(0x6B,0x6E); 
2382:Src/main.c    **** VXISI2CWrite(0x6C,0x6E); 
2383:Src/main.c    **** VXISI2CWrite(0x6D,0x00); 
2384:Src/main.c    **** VXISI2CWrite(0x6E,0x00); 
2385:Src/main.c    **** VXISI2CWrite(0x6F,0x00); 
2386:Src/main.c    **** VXISI2CWrite(0x70,0x00); 
2387:Src/main.c    **** VXISI2CWrite(0x71,0x00); 
2388:Src/main.c    **** VXISI2CWrite(0x72,0x00); 
2389:Src/main.c    **** VXISI2CWrite(0x73,0x00); 
2390:Src/main.c    **** VXISI2CWrite(0x74,0x06); 
2391:Src/main.c    **** VXISI2CWrite(0x75,0xFF); 
2392:Src/main.c    **** VXISI2CWrite(0x76,0xFF); 
2393:Src/main.c    **** VXISI2CWrite(0x77,0xFF); 
2394:Src/main.c    **** VXISI2CWrite(0x78,0xFF); 
2395:Src/main.c    **** VXISI2CWrite(0x79,0xFF); 
2396:Src/main.c    **** VXISI2CWrite(0x7A,0xFF); 
2397:Src/main.c    **** VXISI2CWrite(0x7B,0xFF); 
2398:Src/main.c    **** VXISI2CWrite(0x7C,0xFF); 
2399:Src/main.c    **** VXISI2CWrite(0x7D,0xF0); 
2400:Src/main.c    **** VXISI2CWrite(0x7E,0x80); 
2401:Src/main.c    **** VXISI2CWrite(0x7F,0x00); 
2402:Src/main.c    **** VXISI2CWrite(0x80,0x01); 
2403:Src/main.c    **** VXISI2CWrite(0x81,0x15); 
2404:Src/main.c    **** VXISI2CWrite(0x82,0x40); 
2405:Src/main.c    **** VXISI2CWrite(0x83,0x2D); 
2406:Src/main.c    **** VXISI2CWrite(0x84,0x57); 
2407:Src/main.c    **** VXISI2CWrite(0x85,0xFD); 
2408:Src/main.c    **** VXISI2CWrite(0x86,0x00); 
2409:Src/main.c    **** VXISI2CWrite(0x87,0x00); 
2410:Src/main.c    **** VXISI2CWrite(0x88,0x00); 
2411:Src/main.c    **** VXISI2CWrite(0x89,0x00); 
2412:Src/main.c    **** VXISI2CWrite(0x8A,0x00); 
2413:Src/main.c    **** VXISI2CWrite(0x8B,0x7E); 
2414:Src/main.c    **** VXISI2CWrite(0x8C,0x03); 
2415:Src/main.c    **** VXISI2CWrite(0x8D,0x17); 
2416:Src/main.c    **** VXISI2CWrite(0x8E,0x8C); 
2417:Src/main.c    **** VXISI2CWrite(0x8F,0x00); 
2418:Src/main.c    **** VXISI2CWrite(0x90,0xCC); 
2419:Src/main.c    **** VXISI2CWrite(0x91,0x41); 
2420:Src/main.c    **** VXISI2CWrite(0x92,0xC4); 
2421:Src/main.c    **** VXISI2CWrite(0x93,0x84); 
2422:Src/main.c    **** VXISI2CWrite(0x94,0x98); 
2423:Src/main.c    **** VXISI2CWrite(0x95,0x80); 
2424:Src/main.c    **** VXISI2CWrite(0x96,0x65); 
2425:Src/main.c    **** VXISI2CWrite(0x97,0x70); 
2426:Src/main.c    **** VXISI2CWrite(0x98,0x29); 
2427:Src/main.c    **** VXISI2CWrite(0x99,0x90); 
ARM GAS  /tmp/ccxsI2YD.s 			page 44


2428:Src/main.c    **** VXISI2CWrite(0x9A,0x80); 
2429:Src/main.c    **** VXISI2CWrite(0x9B,0x04); 
2430:Src/main.c    **** VXISI2CWrite(0x9C,0x00); 
2431:Src/main.c    **** VXISI2CWrite(0x9D,0x00); 
2432:Src/main.c    **** VXISI2CWrite(0x9E,0x04); 
2433:Src/main.c    **** VXISI2CWrite(0x9F,0x65); 
2434:Src/main.c    **** VXISI2CWrite(0xA0,0x80); 
2435:Src/main.c    **** VXISI2CWrite(0xA1,0xD8); 
2436:Src/main.c    **** VXISI2CWrite(0xA2,0x98); 
2437:Src/main.c    **** VXISI2CWrite(0xA3,0x87); 
2438:Src/main.c    **** VXISI2CWrite(0xA4,0x00); 
2439:Src/main.c    **** VXISI2CWrite(0xA5,0x80); 
2440:Src/main.c    **** VXISI2CWrite(0xA6,0x00); 
2441:Src/main.c    **** VXISI2CWrite(0xA7,0x70); 
2442:Src/main.c    **** VXISI2CWrite(0xA8,0x40); 
2443:Src/main.c    **** VXISI2CWrite(0xA9,0x1E); 
2444:Src/main.c    **** VXISI2CWrite(0xAA,0x2C); 
2445:Src/main.c    **** VXISI2CWrite(0xAB,0x00); 
2446:Src/main.c    **** VXISI2CWrite(0xAC,0x90); 
2447:Src/main.c    **** VXISI2CWrite(0xAD,0x65); 
2448:Src/main.c    **** VXISI2CWrite(0xAE,0x65); 
2449:Src/main.c    **** VXISI2CWrite(0xAF,0x99); 
2450:Src/main.c    **** VXISI2CWrite(0xB0,0x00); 
2451:Src/main.c    **** VXISI2CWrite(0xB1,0x00); 
2452:Src/main.c    **** VXISI2CWrite(0xB2,0x00); 
2453:Src/main.c    **** VXISI2CWrite(0xB3,0x00); 
2454:Src/main.c    **** VXISI2CWrite(0xB4,0x00); 
2455:Src/main.c    **** VXISI2CWrite(0xB5,0x00); 
2456:Src/main.c    **** VXISI2CWrite(0xB6,0x00); 
2457:Src/main.c    **** VXISI2CWrite(0xB7,0x00); 
2458:Src/main.c    **** VXISI2CWrite(0xB8,0x80); 
2459:Src/main.c    **** VXISI2CWrite(0xB9,0x00); 
2460:Src/main.c    **** VXISI2CWrite(0xBA,0x01); 
2461:Src/main.c    **** VXISI2CWrite(0xBB,0x00); 
2462:Src/main.c    **** VXISI2CWrite(0xBC,0x90); 
2463:Src/main.c    **** VXISI2CWrite(0xBD,0x01); 
2464:Src/main.c    **** VXISI2CWrite(0xBE,0x2C); 
2465:Src/main.c    **** VXISI2CWrite(0xBF,0x00); 
2466:Src/main.c    **** VXISI2CWrite(0xC0,0x00); 
2467:Src/main.c    **** VXISI2CWrite(0xC1,0x20); 
2468:Src/main.c    **** VXISI2CWrite(0xC2,0x20); 
2469:Src/main.c    **** VXISI2CWrite(0xC3,0x20); 
2470:Src/main.c    **** VXISI2CWrite(0xC4,0x20); 
2471:Src/main.c    **** VXISI2CWrite(0xC5,0x20); 
2472:Src/main.c    **** VXISI2CWrite(0xC6,0x00); 
2473:Src/main.c    **** VXISI2CWrite(0xC7,0x00); 
2474:Src/main.c    **** VXISI2CWrite(0xC8,0x00); 
2475:Src/main.c    **** VXISI2CWrite(0xC9,0x00); 
2476:Src/main.c    **** VXISI2CWrite(0xCA,0x00); 
2477:Src/main.c    **** VXISI2CWrite(0xCB,0x00); 
2478:Src/main.c    **** VXISI2CWrite(0xCC,0x00); 
2479:Src/main.c    **** VXISI2CWrite(0xCD,0x00); 
2480:Src/main.c    **** VXISI2CWrite(0xCE,0x00); 
2481:Src/main.c    **** VXISI2CWrite(0xCF,0x00); 
2482:Src/main.c    **** VXISI2CWrite(0xD0,0xFF); 
2483:Src/main.c    **** VXISI2CWrite(0xD1,0x3F); 
2484:Src/main.c    **** VXISI2CWrite(0xD2,0xC2); 
ARM GAS  /tmp/ccxsI2YD.s 			page 45


2485:Src/main.c    **** VXISI2CWrite(0xD3,0x3F); 
2486:Src/main.c    **** VXISI2CWrite(0xD4,0x00); 
2487:Src/main.c    **** VXISI2CWrite(0xD5,0x00); 
2488:Src/main.c    **** VXISI2CWrite(0xD6,0x00); 
2489:Src/main.c    **** VXISI2CWrite(0xD7,0x0F); 
2490:Src/main.c    **** VXISI2CWrite(0xD8,0x00); 
2491:Src/main.c    **** VXISI2CWrite(0xD9,0x00); 
2492:Src/main.c    **** VXISI2CWrite(0xDA,0x00); 
2493:Src/main.c    **** VXISI2CWrite(0xDB,0x00); 
2494:Src/main.c    **** VXISI2CWrite(0xDC,0x77); 
2495:Src/main.c    **** VXISI2CWrite(0xDD,0x01); 
2496:Src/main.c    **** VXISI2CWrite(0xDE,0x5F); 
2497:Src/main.c    **** VXISI2CWrite(0xDF,0x96); 
2498:Src/main.c    **** VXISI2CWrite(0xE0,0x00); 
2499:Src/main.c    **** VXISI2CWrite(0xE1,0x00); 
2500:Src/main.c    **** VXISI2CWrite(0xE2,0x00); 
2501:Src/main.c    **** VXISI2CWrite(0xE3,0x47); 
2502:Src/main.c    **** VXISI2CWrite(0xE4,0x3C); 
2503:Src/main.c    **** VXISI2CWrite(0xE5,0x80); 
2504:Src/main.c    **** VXISI2CWrite(0xE6,0x00); 
2505:Src/main.c    **** VXISI2CWrite(0xE7,0x00); 
2506:Src/main.c    **** VXISI2CWrite(0xE8,0x00); 
2507:Src/main.c    **** VXISI2CWrite(0xE9,0x00); 
2508:Src/main.c    **** VXISI2CWrite(0xEA,0x00); 
2509:Src/main.c    **** VXISI2CWrite(0xEB,0x00); 
2510:Src/main.c    **** VXISI2CWrite(0xEC,0x88); 
2511:Src/main.c    **** VXISI2CWrite(0xED,0x00); 
2512:Src/main.c    **** VXISI2CWrite(0xEE,0x00); 
2513:Src/main.c    **** VXISI2CWrite(0xEF,0x00); 
2514:Src/main.c    **** VXISI2CWrite(0xF0,0x30); 
2515:Src/main.c    **** VXISI2CWrite(0xF1,0x43); 
2516:Src/main.c    **** VXISI2CWrite(0xF2,0x1F); 
2517:Src/main.c    **** VXISI2CWrite(0xF3,0x1F); 
2518:Src/main.c    **** VXISI2CWrite(0xF4,0x22); 
2519:Src/main.c    **** VXISI2CWrite(0xF5,0x73); 
2520:Src/main.c    **** VXISI2CWrite(0xF6,0x53); 
2521:Src/main.c    **** VXISI2CWrite(0xF7,0x80); 
2522:Src/main.c    **** VXISI2CWrite(0xF8,0x01); 
2523:Src/main.c    **** VXISI2CWrite(0xF9,0x01); 
2524:Src/main.c    **** VXISI2CWrite(0xFA,0x00); 
2525:Src/main.c    **** VXISI2CWrite(0xFB,0x00); 
2526:Src/main.c    **** VXISI2CWrite(0xFC,0x00); 
2527:Src/main.c    **** VXISI2CWrite(0xFD,0x70); 
2528:Src/main.c    **** VXISI2CWrite(0xFE,0x18); 
2529:Src/main.c    **** VXISI2CWrite(0xFF,0x07); 
2530:Src/main.c    **** 
2531:Src/main.c    **** 
2532:Src/main.c    **** /*
2533:Src/main.c    **** VXISI2CWrite(0x01,0x00);
2534:Src/main.c    **** VXISI2CWrite(0x02,0x00);
2535:Src/main.c    **** VXISI2CWrite(0x03,0x75);
2536:Src/main.c    **** VXISI2CWrite(0x04,0x18);
2537:Src/main.c    **** VXISI2CWrite(0x05,0x80);
2538:Src/main.c    **** VXISI2CWrite(0x06,0x20);
2539:Src/main.c    **** VXISI2CWrite(0x07,0x0C);
2540:Src/main.c    **** VXISI2CWrite(0x08,0x21);
2541:Src/main.c    **** VXISI2CWrite(0x09,0x0A);
ARM GAS  /tmp/ccxsI2YD.s 			page 46


2542:Src/main.c    **** VXISI2CWrite(0x0A,0x21);
2543:Src/main.c    **** VXISI2CWrite(0x0B,0x0A);
2544:Src/main.c    **** VXISI2CWrite(0x0C,0x00);
2545:Src/main.c    **** VXISI2CWrite(0x0D,0x20);
2546:Src/main.c    **** VXISI2CWrite(0x0E,0x10);
2547:Src/main.c    **** VXISI2CWrite(0x0F,0x00);
2548:Src/main.c    **** VXISI2CWrite(0x10,0x81);
2549:Src/main.c    **** VXISI2CWrite(0x11,0x82);
2550:Src/main.c    **** VXISI2CWrite(0x12,0x00);
2551:Src/main.c    **** VXISI2CWrite(0x13,0x00);
2552:Src/main.c    **** VXISI2CWrite(0x14,0x00);
2553:Src/main.c    **** VXISI2CWrite(0x15,0x78);
2554:Src/main.c    **** VXISI2CWrite(0x16,0xFE);
2555:Src/main.c    **** VXISI2CWrite(0x17,0x00);
2556:Src/main.c    **** VXISI2CWrite(0x18,0xC0);
2557:Src/main.c    **** VXISI2CWrite(0x19,0x01);
2558:Src/main.c    **** VXISI2CWrite(0x1A,0x36);
2559:Src/main.c    **** VXISI2CWrite(0x1B,0x30);
2560:Src/main.c    **** VXISI2CWrite(0x1C,0x00);
2561:Src/main.c    **** VXISI2CWrite(0x1D,0x00);
2562:Src/main.c    **** VXISI2CWrite(0x1E,0x20);
2563:Src/main.c    **** VXISI2CWrite(0x1F,0x00);
2564:Src/main.c    **** VXISI2CWrite(0x20,0x00);
2565:Src/main.c    **** VXISI2CWrite(0x21,0x00);
2566:Src/main.c    **** VXISI2CWrite(0x22,0xA7);
2567:Src/main.c    **** VXISI2CWrite(0x23,0x50);
2568:Src/main.c    **** VXISI2CWrite(0x24,0x80);
2569:Src/main.c    **** VXISI2CWrite(0x25,0x44);
2570:Src/main.c    **** VXISI2CWrite(0x26,0x65);
2571:Src/main.c    **** VXISI2CWrite(0x27,0x38);
2572:Src/main.c    **** VXISI2CWrite(0x28,0xF0);
2573:Src/main.c    **** VXISI2CWrite(0x29,0x00);
2574:Src/main.c    **** VXISI2CWrite(0x2A,0x00);
2575:Src/main.c    **** VXISI2CWrite(0x2B,0x11);
2576:Src/main.c    **** VXISI2CWrite(0x2C,0x00);
2577:Src/main.c    **** VXISI2CWrite(0x2D,0x00);
2578:Src/main.c    **** VXISI2CWrite(0x2E,0x47);
2579:Src/main.c    **** VXISI2CWrite(0x2F,0x80);
2580:Src/main.c    **** VXISI2CWrite(0x30,0x38);
2581:Src/main.c    **** VXISI2CWrite(0x31,0x80);
2582:Src/main.c    **** //VXISI2CWrite(0x32,0x80);
2583:Src/main.c    **** VXISI2CWrite(0x33,0x80);
2584:Src/main.c    **** VXISI2CWrite(0x34,0xA0);
2585:Src/main.c    **** VXISI2CWrite(0x35,0x18);
2586:Src/main.c    **** VXISI2CWrite(0x36,0x46);
2587:Src/main.c    **** VXISI2CWrite(0x37,0x64);
2588:Src/main.c    **** VXISI2CWrite(0x38,0x00);
2589:Src/main.c    **** VXISI2CWrite(0x39,0xFF);
2590:Src/main.c    **** VXISI2CWrite(0x3A,0x1B);
2591:Src/main.c    **** VXISI2CWrite(0x3B,0x80);
2592:Src/main.c    **** VXISI2CWrite(0x3C,0x80);
2593:Src/main.c    **** VXISI2CWrite(0x3D,0x80);
2594:Src/main.c    **** VXISI2CWrite(0x3E,0x80);
2595:Src/main.c    **** VXISI2CWrite(0x3F,0x80);
2596:Src/main.c    **** VXISI2CWrite(0x40,0x80);
2597:Src/main.c    **** VXISI2CWrite(0x41,0x60);
2598:Src/main.c    **** VXISI2CWrite(0x42,0x5F);
ARM GAS  /tmp/ccxsI2YD.s 			page 47


2599:Src/main.c    **** VXISI2CWrite(0x43,0x37);
2600:Src/main.c    **** VXISI2CWrite(0x44,0x14);
2601:Src/main.c    **** VXISI2CWrite(0x45,0x06);
2602:Src/main.c    **** VXISI2CWrite(0x46,0x00);
2603:Src/main.c    **** VXISI2CWrite(0x47,0x00);
2604:Src/main.c    **** VXISI2CWrite(0x48,0x00);
2605:Src/main.c    **** VXISI2CWrite(0x49,0x00);
2606:Src/main.c    **** VXISI2CWrite(0x4B,0x20);
2607:Src/main.c    **** VXISI2CWrite(0x4C,0x00);
2608:Src/main.c    **** VXISI2CWrite(0x4D,0x00);
2609:Src/main.c    **** VXISI2CWrite(0x4E,0x00);
2610:Src/main.c    **** VXISI2CWrite(0x4F,0x7F);
2611:Src/main.c    **** VXISI2CWrite(0x50,0x20);
2612:Src/main.c    **** VXISI2CWrite(0x51,0x20);
2613:Src/main.c    **** VXISI2CWrite(0x52,0x00);
2614:Src/main.c    **** VXISI2CWrite(0x53,0x04);
2615:Src/main.c    **** VXISI2CWrite(0x54,0x00);
2616:Src/main.c    **** VXISI2CWrite(0x55,0xA0);
2617:Src/main.c    **** VXISI2CWrite(0x56,0x40);
2618:Src/main.c    **** VXISI2CWrite(0x57,0x04);
2619:Src/main.c    **** VXISI2CWrite(0x58,0x10);
2620:Src/main.c    **** VXISI2CWrite(0x59,0x08);
2621:Src/main.c    **** VXISI2CWrite(0x5A,0x10);
2622:Src/main.c    **** VXISI2CWrite(0x5B,0x00);
2623:Src/main.c    **** VXISI2CWrite(0x5C,0x68);
2624:Src/main.c    **** VXISI2CWrite(0x5D,0x84);
2625:Src/main.c    **** VXISI2CWrite(0x5E,0x08);
2626:Src/main.c    **** VXISI2CWrite(0x5F,0x21);
2627:Src/main.c    **** VXISI2CWrite(0x60,0x20);
2628:Src/main.c    **** VXISI2CWrite(0x61,0xB0);
2629:Src/main.c    **** VXISI2CWrite(0x62,0x33);
2630:Src/main.c    **** VXISI2CWrite(0x63,0x01);
2631:Src/main.c    **** VXISI2CWrite(0x64,0xFF);
2632:Src/main.c    **** VXISI2CWrite(0x65,0x01);
2633:Src/main.c    **** VXISI2CWrite(0x66,0xFF);
2634:Src/main.c    **** VXISI2CWrite(0x67,0x89);
2635:Src/main.c    **** VXISI2CWrite(0x68,0xAB);
2636:Src/main.c    **** VXISI2CWrite(0x69,0x28);
2637:Src/main.c    **** VXISI2CWrite(0x6A,0x6E);
2638:Src/main.c    **** VXISI2CWrite(0x6B,0x6E);
2639:Src/main.c    **** VXISI2CWrite(0x6C,0x6E);
2640:Src/main.c    **** VXISI2CWrite(0x6D,0x00);
2641:Src/main.c    **** VXISI2CWrite(0x6E,0x00);
2642:Src/main.c    **** VXISI2CWrite(0x6F,0x00);
2643:Src/main.c    **** VXISI2CWrite(0x70,0x00);
2644:Src/main.c    **** VXISI2CWrite(0x71,0x00);
2645:Src/main.c    **** VXISI2CWrite(0x72,0x00);
2646:Src/main.c    **** VXISI2CWrite(0x73,0x00);
2647:Src/main.c    **** VXISI2CWrite(0x74,0x00);
2648:Src/main.c    **** VXISI2CWrite(0x75,0xFF);
2649:Src/main.c    **** VXISI2CWrite(0x76,0xFF);
2650:Src/main.c    **** VXISI2CWrite(0x77,0xFF);
2651:Src/main.c    **** VXISI2CWrite(0x78,0xFF);
2652:Src/main.c    **** VXISI2CWrite(0x79,0xFF);
2653:Src/main.c    **** VXISI2CWrite(0x7A,0xFF);
2654:Src/main.c    **** VXISI2CWrite(0x7B,0xFF);
2655:Src/main.c    **** VXISI2CWrite(0x7C,0xFF);
ARM GAS  /tmp/ccxsI2YD.s 			page 48


2656:Src/main.c    **** VXISI2CWrite(0x7D,0xF0);
2657:Src/main.c    **** VXISI2CWrite(0x7E,0x80);
2658:Src/main.c    **** VXISI2CWrite(0x7F,0x00);
2659:Src/main.c    **** VXISI2CWrite(0x80,0x00);
2660:Src/main.c    **** VXISI2CWrite(0x81,0x34);
2661:Src/main.c    **** VXISI2CWrite(0x82,0x40);
2662:Src/main.c    **** VXISI2CWrite(0x83,0x05);
2663:Src/main.c    **** VXISI2CWrite(0x84,0x57);
2664:Src/main.c    **** VXISI2CWrite(0x85,0xFD);
2665:Src/main.c    **** VXISI2CWrite(0x86,0x04);
2666:Src/main.c    **** VXISI2CWrite(0x87,0x24);
2667:Src/main.c    **** VXISI2CWrite(0x88,0x94);
2668:Src/main.c    **** VXISI2CWrite(0x89,0x58);
2669:Src/main.c    **** VXISI2CWrite(0x8A,0x00);
2670:Src/main.c    **** VXISI2CWrite(0x8B,0x7E);
2671:Src/main.c    **** VXISI2CWrite(0x8C,0x03);
2672:Src/main.c    **** VXISI2CWrite(0x8D,0x2C);
2673:Src/main.c    **** VXISI2CWrite(0x8E,0x8C);
2674:Src/main.c    **** VXISI2CWrite(0x8F,0x00);
2675:Src/main.c    **** VXISI2CWrite(0x90,0xCC);
2676:Src/main.c    **** VXISI2CWrite(0x91,0x41);
2677:Src/main.c    **** VXISI2CWrite(0x92,0xC4);
2678:Src/main.c    **** VXISI2CWrite(0x93,0x84);
2679:Src/main.c    **** VXISI2CWrite(0x94,0x98);
2680:Src/main.c    **** VXISI2CWrite(0x95,0x80);
2681:Src/main.c    **** VXISI2CWrite(0x96,0x65);
2682:Src/main.c    **** VXISI2CWrite(0x97,0x70);
2683:Src/main.c    **** VXISI2CWrite(0x98,0x29);
2684:Src/main.c    **** VXISI2CWrite(0x99,0x90);
2685:Src/main.c    **** VXISI2CWrite(0x9A,0x00);
2686:Src/main.c    **** VXISI2CWrite(0x9B,0x04);
2687:Src/main.c    **** //VXISI2CWrite(0x9C,0x0A);
2688:Src/main.c    **** VXISI2CWrite(0x9D,0x00);
2689:Src/main.c    **** VXISI2CWrite(0x9E,0x04);
2690:Src/main.c    **** VXISI2CWrite(0x9F,0x65);
2691:Src/main.c    **** VXISI2CWrite(0xA0,0x80);
2692:Src/main.c    **** VXISI2CWrite(0xA1,0xD8);
2693:Src/main.c    **** VXISI2CWrite(0xA2,0x98);
2694:Src/main.c    **** VXISI2CWrite(0xA3,0x87);
2695:Src/main.c    **** VXISI2CWrite(0xA4,0x00);
2696:Src/main.c    **** VXISI2CWrite(0xA5,0x80);
2697:Src/main.c    **** VXISI2CWrite(0xA6,0x00);
2698:Src/main.c    **** VXISI2CWrite(0xA7,0x70);
2699:Src/main.c    **** VXISI2CWrite(0xA8,0x40);
2700:Src/main.c    **** VXISI2CWrite(0xA9,0x1E);
2701:Src/main.c    **** VXISI2CWrite(0xAA,0x2C);
2702:Src/main.c    **** VXISI2CWrite(0xAB,0x00);
2703:Src/main.c    **** VXISI2CWrite(0xAC,0x90);
2704:Src/main.c    **** VXISI2CWrite(0xAD,0x65);
2705:Src/main.c    **** VXISI2CWrite(0xAE,0x65);
2706:Src/main.c    **** VXISI2CWrite(0xAF,0x99);
2707:Src/main.c    **** VXISI2CWrite(0xB0,0x00);
2708:Src/main.c    **** VXISI2CWrite(0xB1,0x00);
2709:Src/main.c    **** VXISI2CWrite(0xB2,0x00);
2710:Src/main.c    **** VXISI2CWrite(0xB3,0x00);
2711:Src/main.c    **** VXISI2CWrite(0xB4,0x00);
2712:Src/main.c    **** VXISI2CWrite(0xB5,0x00);
ARM GAS  /tmp/ccxsI2YD.s 			page 49


2713:Src/main.c    **** VXISI2CWrite(0xB6,0x00);
2714:Src/main.c    **** VXISI2CWrite(0xB8,0x00);
2715:Src/main.c    **** VXISI2CWrite(0xB9,0x00);
2716:Src/main.c    **** VXISI2CWrite(0xBA,0x00);
2717:Src/main.c    **** VXISI2CWrite(0xBB,0x00);
2718:Src/main.c    **** VXISI2CWrite(0xBC,0x90);
2719:Src/main.c    **** VXISI2CWrite(0xBD,0x01);
2720:Src/main.c    **** VXISI2CWrite(0xBE,0xA5);
2721:Src/main.c    **** VXISI2CWrite(0xC0,0x00);
2722:Src/main.c    **** VXISI2CWrite(0xC1,0x20);
2723:Src/main.c    **** VXISI2CWrite(0xC2,0x20);
2724:Src/main.c    **** VXISI2CWrite(0xC3,0x20);
2725:Src/main.c    **** VXISI2CWrite(0xC4,0x20);
2726:Src/main.c    **** VXISI2CWrite(0xC5,0x20);
2727:Src/main.c    **** VXISI2CWrite(0xD0,0xFF);
2728:Src/main.c    **** VXISI2CWrite(0xD1,0x3F);
2729:Src/main.c    **** VXISI2CWrite(0xD2,0xC2);
2730:Src/main.c    **** VXISI2CWrite(0xD3,0x3F);
2731:Src/main.c    **** VXISI2CWrite(0xD4,0x00);
2732:Src/main.c    **** VXISI2CWrite(0xD5,0x00);
2733:Src/main.c    **** VXISI2CWrite(0xD6,0x00);
2734:Src/main.c    **** VXISI2CWrite(0xD7,0x00);
2735:Src/main.c    **** VXISI2CWrite(0xD8,0x00);
2736:Src/main.c    **** VXISI2CWrite(0xDC,0x77);
2737:Src/main.c    **** VXISI2CWrite(0xDD,0x01);
2738:Src/main.c    **** VXISI2CWrite(0xDE,0xA5);
2739:Src/main.c    **** VXISI2CWrite(0xDF,0xE5);
2740:Src/main.c    **** VXISI2CWrite(0xE0,0x00);
2741:Src/main.c    **** VXISI2CWrite(0xE1,0x00);
2742:Src/main.c    **** VXISI2CWrite(0xE2,0x00);
2743:Src/main.c    **** VXISI2CWrite(0xE3,0x47);
2744:Src/main.c    **** VXISI2CWrite(0xE4,0x3C);
2745:Src/main.c    **** VXISI2CWrite(0xE5,0x80);
2746:Src/main.c    **** VXISI2CWrite(0xE6,0x00);
2747:Src/main.c    **** VXISI2CWrite(0xE7,0x00);
2748:Src/main.c    **** VXISI2CWrite(0xE8,0x00);
2749:Src/main.c    **** VXISI2CWrite(0xE9,0x00);
2750:Src/main.c    **** VXISI2CWrite(0xEA,0x00);
2751:Src/main.c    **** VXISI2CWrite(0xEB,0x00);
2752:Src/main.c    **** VXISI2CWrite(0xEC,0x88);
2753:Src/main.c    **** VXISI2CWrite(0xED,0x00);
2754:Src/main.c    **** VXISI2CWrite(0xEE,0x00);
2755:Src/main.c    **** VXISI2CWrite(0xEF,0x00);
2756:Src/main.c    **** VXISI2CWrite(0xF0,0x35);
2757:Src/main.c    **** VXISI2CWrite(0xF1,0x43);
2758:Src/main.c    **** VXISI2CWrite(0xF2,0x1F);
2759:Src/main.c    **** VXISI2CWrite(0xF3,0x1F);
2760:Src/main.c    **** VXISI2CWrite(0xF4,0x22);
2761:Src/main.c    **** VXISI2CWrite(0xF5,0x73);
2762:Src/main.c    **** VXISI2CWrite(0xF6,0x53);
2763:Src/main.c    **** VXISI2CWrite(0xF7,0x80);
2764:Src/main.c    **** VXISI2CWrite(0xF8,0x01);
2765:Src/main.c    **** VXISI2CWrite(0xF9,0x01);
2766:Src/main.c    **** VXISI2CWrite(0xFA,0x00);
2767:Src/main.c    **** VXISI2CWrite(0xFB,0x00);
2768:Src/main.c    **** VXISI2CWrite(0xFC,0x00);
2769:Src/main.c    **** VXISI2CWrite(0xFD,0x00);
ARM GAS  /tmp/ccxsI2YD.s 			page 50


2770:Src/main.c    **** VXISI2CWrite(0xFE,0x00);
2771:Src/main.c    **** VXISI2CWrite(0xFF,0x00);
2772:Src/main.c    **** */
2773:Src/main.c    **** #endif
2774:Src/main.c    **** 
2775:Src/main.c    **** }
2776:Src/main.c    **** 
2777:Src/main.c    **** void TP_bt1120_720P_1080P_mode0_w0(void)
2778:Src/main.c    **** {
2779:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table 720P... ");
2780:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_720P_1080P_mode0_w0_88param);
2781:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);
2782:Src/main.c    **** 
2783:Src/main.c    **** }
2784:Src/main.c    **** 
2785:Src/main.c    **** void TP_bt1120_NTSC_1080P_mode0_w0(void)
2786:Src/main.c    **** {
2787:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table NTSC... ");
2788:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_NTSC_1080P_mode0_w0_88param);
2789:Src/main.c    **** }
2790:Src/main.c    **** 
2791:Src/main.c    **** void TP_bt1120_PAL_1080P_mode0_w0(void)
2792:Src/main.c    **** {
2793:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table PAL... ");
2794:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_PAL_1080P_mode0_w0_88param);
2795:Src/main.c    **** 	#if 0
2796:Src/main.c    **** 	VXISI2CWrite(0x01,0x00);	
2797:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);	
2798:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);	
2799:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);	
2800:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);	
2801:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);	
2802:Src/main.c    **** 	VXISI2CWrite(0x07,0x08);	
2803:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);	
2804:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);	
2805:Src/main.c    **** 	VXISI2CWrite(0x0A,0x40);	
2806:Src/main.c    **** 	VXISI2CWrite(0x0B,0x09);	
2807:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);	
2808:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);	
2809:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);	
2810:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);	
2811:Src/main.c    **** 	VXISI2CWrite(0x10,0xA1);	
2812:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);	
2813:Src/main.c    **** 	VXISI2CWrite(0x12,0x21);	
2814:Src/main.c    **** 	VXISI2CWrite(0x13,0xD0);	
2815:Src/main.c    **** 	VXISI2CWrite(0x14,0x20);	
2816:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);	
2817:Src/main.c    **** 	VXISI2CWrite(0x16,0xFF);	
2818:Src/main.c    **** 	VXISI2CWrite(0x17,0x01);	
2819:Src/main.c    **** 	VXISI2CWrite(0x18,0xC0);	
2820:Src/main.c    **** 	VXISI2CWrite(0x19,0x01);	
2821:Src/main.c    **** 	VXISI2CWrite(0x1A,0x26);	
2822:Src/main.c    **** 	VXISI2CWrite(0x1B,0x14);	
2823:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);	
2824:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);	
2825:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);	
2826:Src/main.c    **** 	VXISI2CWrite(0x1F,0x31);	
ARM GAS  /tmp/ccxsI2YD.s 			page 51


2827:Src/main.c    **** 	VXISI2CWrite(0x20,0x60);	
2828:Src/main.c    **** 	VXISI2CWrite(0x21,0x39);	
2829:Src/main.c    **** 	VXISI2CWrite(0x22,0x97);	
2830:Src/main.c    **** 	VXISI2CWrite(0x23,0x48);	
2831:Src/main.c    **** 	VXISI2CWrite(0x24,0xBC);	
2832:Src/main.c    **** 	VXISI2CWrite(0x25,0x11);	
2833:Src/main.c    **** 	VXISI2CWrite(0x26,0x38);	
2834:Src/main.c    **** 	VXISI2CWrite(0x27,0x20);	
2835:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);	
2836:Src/main.c    **** 	VXISI2CWrite(0x29,0x40);	
2837:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);	
2838:Src/main.c    **** 	VXISI2CWrite(0x2B,0x00);	
2839:Src/main.c    **** 	VXISI2CWrite(0x2C,0xFF);	
2840:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);	
2841:Src/main.c    **** 	VXISI2CWrite(0x2E,0x17);	
2842:Src/main.c    **** 	VXISI2CWrite(0x2F,0xBC);	
2843:Src/main.c    **** 	VXISI2CWrite(0x30,0x20);	
2844:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);	
2845:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);	
2846:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);	
2847:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);	
2848:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);	
2849:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);	
2850:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);	
2851:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);	
2852:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);	
2853:Src/main.c    **** 	VXISI2CWrite(0x3A,0x15);	
2854:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);	
2855:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);	
2856:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);	
2857:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);	
2858:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);	
2859:Src/main.c    **** 	//VXISI2CWrite(0xVXI);SI2CWr
2860:Src/main.c    **** 	VXISI2CWrite(0x41,0x60);	
2861:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);	
2862:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);	
2863:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);	
2864:Src/main.c    **** 	VXISI2CWrite(0x45,0x05);	
2865:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);	
2866:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);	
2867:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);	
2868:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);	
2869:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);	
2870:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);	
2871:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);	
2872:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);	
2873:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);	
2874:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);	
2875:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);	
2876:Src/main.c    **** 	VXISI2CWrite(0x52,0x00);	
2877:Src/main.c    **** 	VXISI2CWrite(0x53,0x04);	
2878:Src/main.c    **** 	VXISI2CWrite(0x54,0x00);	
2879:Src/main.c    **** 	VXISI2CWrite(0x55,0xE0);	
2880:Src/main.c    **** 	VXISI2CWrite(0x56,0x40);	
2881:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);	
2882:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);	
2883:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);	
ARM GAS  /tmp/ccxsI2YD.s 			page 52


2884:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);	
2885:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);	
2886:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);	
2887:Src/main.c    **** 	VXISI2CWrite(0x5D,0x40);	
2888:Src/main.c    **** 	VXISI2CWrite(0x5E,0x08);	
2889:Src/main.c    **** 	VXISI2CWrite(0x5F,0x00);	
2890:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);	
2891:Src/main.c    **** 	VXISI2CWrite(0x61,0x54);	
2892:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);	
2893:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);	
2894:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);	
2895:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);	
2896:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);	
2897:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);	
2898:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);	
2899:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);	
2900:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);	
2901:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);	
2902:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);	
2903:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);	
2904:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);	
2905:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);	
2906:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);	
2907:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);	
2908:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);	
2909:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);	
2910:Src/main.c    **** 	VXISI2CWrite(0x74,0x06);	
2911:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);	
2912:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);	
2913:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);	
2914:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);	
2915:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);	
2916:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);	
2917:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);	
2918:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);	
2919:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);	
2920:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);	
2921:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);	
2922:Src/main.c    **** 	VXISI2CWrite(0x80,0x01);	
2923:Src/main.c    **** 	VXISI2CWrite(0x81,0x34);	
2924:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);	
2925:Src/main.c    **** 	VXISI2CWrite(0x83,0x2D);	
2926:Src/main.c    **** 	VXISI2CWrite(0x84,0x6F);	
2927:Src/main.c    **** 	VXISI2CWrite(0x85,0x00);	
2928:Src/main.c    **** 	VXISI2CWrite(0x86,0x00);	
2929:Src/main.c    **** 	VXISI2CWrite(0x87,0x00);	
2930:Src/main.c    **** 	VXISI2CWrite(0x88,0x13);	
2931:Src/main.c    **** 	VXISI2CWrite(0x89,0x1B);	
2932:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);	
2933:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);	
2934:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);	
2935:Src/main.c    **** 	VXISI2CWrite(0x8D,0x17);	
2936:Src/main.c    **** 	VXISI2CWrite(0x8E,0xB0);	
2937:Src/main.c    **** 	VXISI2CWrite(0x8F,0x14);	
2938:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);	
2939:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);	
2940:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);	
ARM GAS  /tmp/ccxsI2YD.s 			page 53


2941:Src/main.c    **** 	VXISI2CWrite(0x93,0x81);	
2942:Src/main.c    **** 	VXISI2CWrite(0x94,0xC9);	
2943:Src/main.c    **** 	VXISI2CWrite(0x95,0xBC);	
2944:Src/main.c    **** 	VXISI2CWrite(0x96,0xF5);	
2945:Src/main.c    **** 	VXISI2CWrite(0x97,0x70);	
2946:Src/main.c    **** 	VXISI2CWrite(0x98,0x15);	
2947:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);	
2948:Src/main.c    **** 	VXISI2CWrite(0x9A,0x80);	
2949:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);	
2950:Src/main.c    **** 	VXISI2CWrite(0x9C,0x00);	
2951:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);	
2952:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);	
2953:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);	
2954:Src/main.c    **** 	VXISI2CWrite(0xA0,0x3B);	
2955:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD0);	
2956:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);	
2957:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);	
2958:Src/main.c    **** 	VXISI2CWrite(0xA4,0x20);	
2959:Src/main.c    **** 	VXISI2CWrite(0xA5,0x38);	
2960:Src/main.c    **** 	VXISI2CWrite(0xA6,0xFD);	
2961:Src/main.c    **** 	VXISI2CWrite(0xA7,0x50);	
2962:Src/main.c    **** 	VXISI2CWrite(0xA8,0x40);	
2963:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);	
2964:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2E);	
2965:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);	
2966:Src/main.c    **** 	VXISI2CWrite(0xAC,0x84);	
2967:Src/main.c    **** 	VXISI2CWrite(0xAD,0xF5);	
2968:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);	
2969:Src/main.c    **** 	VXISI2CWrite(0xAF,0x9B);	
2970:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);	
2971:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);	
2972:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);	
2973:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);	
2974:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);	
2975:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);	
2976:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);	
2977:Src/main.c    **** 	VXISI2CWrite(0xB8,0x01);	
2978:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);	
2979:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);	
2980:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);	
2981:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);	
2982:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);	
2983:Src/main.c    **** 	VXISI2CWrite(0xBE,0x1D);	
2984:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);	
2985:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);	
2986:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);	
2987:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);	
2988:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);	
2989:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);	
2990:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);	
2991:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);	
2992:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);	
2993:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);	
2994:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);	
2995:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);	
2996:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);	
2997:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);	
ARM GAS  /tmp/ccxsI2YD.s 			page 54


2998:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);	
2999:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);	
3000:Src/main.c    **** 	VXISI2CWrite(0xDD,0x00);	
3001:Src/main.c    **** 	VXISI2CWrite(0xDE,0xD3);	
3002:Src/main.c    **** 	VXISI2CWrite(0xDF,0x49);	
3003:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);	
3004:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);	
3005:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);	
3006:Src/main.c    **** 	VXISI2CWrite(0xE3,0x17);	
3007:Src/main.c    **** 	VXISI2CWrite(0xE4,0xE0);	
3008:Src/main.c    **** 	VXISI2CWrite(0xE5,0xBC);	
3009:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);	
3010:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);	
3011:Src/main.c    **** 	VXISI2CWrite(0xE8,0x00);	
3012:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);	
3013:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);	
3014:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);	
3015:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);	
3016:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);	
3017:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);	
3018:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);	
3019:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);	
3020:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);	
3021:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);	
3022:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);	
3023:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);	
3024:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);	
3025:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);	
3026:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);	
3027:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);	
3028:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);	
3029:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);	
3030:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);	
3031:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);	
3032:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);	
3033:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);	
3034:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);	
3035:Src/main.c    **** #endif
3036:Src/main.c    **** 
3037:Src/main.c    **** }
3038:Src/main.c    **** void SET_VS4210_720_480_out(void)
3039:Src/main.c    **** {
3040:Src/main.c    **** 	Printf("\r\nSET_VS4210_720_480_out ");
3041:Src/main.c    **** 
3042:Src/main.c    **** 	VXISI2CWrite(0x01,0x00);
3043:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);
3044:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);
3045:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);
3046:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);
3047:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);
3048:Src/main.c    **** 	VXISI2CWrite(0x07,0x08);
3049:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);
3050:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);
3051:Src/main.c    **** 	VXISI2CWrite(0x0A,0x41);
3052:Src/main.c    **** 	VXISI2CWrite(0x0B,0x07);
3053:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);
3054:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);
ARM GAS  /tmp/ccxsI2YD.s 			page 55


3055:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);
3056:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);
3057:Src/main.c    **** 	VXISI2CWrite(0x10,0x80);
3058:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);
3059:Src/main.c    **** 	VXISI2CWrite(0x12,0x21);
3060:Src/main.c    **** 	VXISI2CWrite(0x13,0xD0);
3061:Src/main.c    **** 	VXISI2CWrite(0x14,0xE0);
3062:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);
3063:Src/main.c    **** 	VXISI2CWrite(0x16,0xFE);
3064:Src/main.c    **** 	VXISI2CWrite(0x17,0x00);
3065:Src/main.c    **** 	VXISI2CWrite(0x18,0xC8);
3066:Src/main.c    **** 	VXISI2CWrite(0x19,0x00);
3067:Src/main.c    **** 	VXISI2CWrite(0x1A,0x23);
3068:Src/main.c    **** 	VXISI2CWrite(0x1B,0x00);
3069:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);
3070:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);
3071:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);
3072:Src/main.c    **** 	VXISI2CWrite(0x1F,0x32);
3073:Src/main.c    **** 	VXISI2CWrite(0x20,0x5A);
3074:Src/main.c    **** 	VXISI2CWrite(0x21,0x0D);
3075:Src/main.c    **** 	VXISI2CWrite(0x22,0x32);
3076:Src/main.c    **** 	VXISI2CWrite(0x23,0x5A);
3077:Src/main.c    **** 	VXISI2CWrite(0x24,0xD0);
3078:Src/main.c    **** 	VXISI2CWrite(0x25,0x21);
3079:Src/main.c    **** 	VXISI2CWrite(0x26,0x0D);
3080:Src/main.c    **** 	VXISI2CWrite(0x27,0xE0);
3081:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);
3082:Src/main.c    **** 	VXISI2CWrite(0x29,0x00);
3083:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);
3084:Src/main.c    **** 	VXISI2CWrite(0x2B,0x01);
3085:Src/main.c    **** 	VXISI2CWrite(0x2C,0xFF);
3086:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);
3087:Src/main.c    **** 	VXISI2CWrite(0x2E,0x12);
3088:Src/main.c    **** 	VXISI2CWrite(0x2F,0xD0);
3089:Src/main.c    **** 	VXISI2CWrite(0x30,0xE0);
3090:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);
3091:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);
3092:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);
3093:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);
3094:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);
3095:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);
3096:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);
3097:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);
3098:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);
3099:Src/main.c    **** 	VXISI2CWrite(0x3A,0x03);
3100:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);
3101:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);
3102:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);
3103:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);
3104:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);
3105:Src/main.c    **** 	//VXISI2CWrite(0xVXISI);2CWrite(0x80
3106:Src/main.c    **** 	VXISI2CWrite(0x41,0x60);
3107:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);
3108:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);
3109:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);
3110:Src/main.c    **** 	VXISI2CWrite(0x45,0x04);
3111:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);
ARM GAS  /tmp/ccxsI2YD.s 			page 56


3112:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);
3113:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);
3114:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);
3115:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);
3116:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);
3117:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);
3118:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);
3119:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);
3120:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);
3121:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);
3122:Src/main.c    **** 	VXISI2CWrite(0x52,0x00);
3123:Src/main.c    **** 	VXISI2CWrite(0x53,0x04);
3124:Src/main.c    **** 	VXISI2CWrite(0x54,0x00);
3125:Src/main.c    **** 	VXISI2CWrite(0x55,0xE0);
3126:Src/main.c    **** 	VXISI2CWrite(0x56,0x40);
3127:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);
3128:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);
3129:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);
3130:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);
3131:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);
3132:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);
3133:Src/main.c    **** 	VXISI2CWrite(0x5D,0x40);
3134:Src/main.c    **** 	VXISI2CWrite(0x5E,0x08);
3135:Src/main.c    **** 	VXISI2CWrite(0x5F,0x00);
3136:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);
3137:Src/main.c    **** 	VXISI2CWrite(0x61,0x54);
3138:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);
3139:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);
3140:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);
3141:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);
3142:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);
3143:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);
3144:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);
3145:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);
3146:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);
3147:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);
3148:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);
3149:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);
3150:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);
3151:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);
3152:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);
3153:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);
3154:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);
3155:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);
3156:Src/main.c    **** 	VXISI2CWrite(0x74,0x00);
3157:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);
3158:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);
3159:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);
3160:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);
3161:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);
3162:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);
3163:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);
3164:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);
3165:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);
3166:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);
3167:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);
3168:Src/main.c    **** 	VXISI2CWrite(0x80,0x00);
ARM GAS  /tmp/ccxsI2YD.s 			page 57


3169:Src/main.c    **** 	VXISI2CWrite(0x81,0x34);
3170:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);
3171:Src/main.c    **** 	VXISI2CWrite(0x83,0x05);
3172:Src/main.c    **** 	VXISI2CWrite(0x84,0x59);
3173:Src/main.c    **** 	VXISI2CWrite(0x85,0xFD);
3174:Src/main.c    **** 	VXISI2CWrite(0x86,0x04);
3175:Src/main.c    **** 	VXISI2CWrite(0x87,0x24);
3176:Src/main.c    **** 	VXISI2CWrite(0x88,0x94);
3177:Src/main.c    **** 	VXISI2CWrite(0x89,0x58);
3178:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);
3179:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);
3180:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);
3181:Src/main.c    **** 	VXISI2CWrite(0x8D,0x2C);
3182:Src/main.c    **** 	VXISI2CWrite(0x8E,0x8C);
3183:Src/main.c    **** 	VXISI2CWrite(0x8F,0x00);
3184:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);
3185:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);
3186:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);
3187:Src/main.c    **** 	VXISI2CWrite(0x93,0x31);
3188:Src/main.c    **** 	VXISI2CWrite(0x94,0x87);
3189:Src/main.c    **** 	VXISI2CWrite(0x95,0xD0);
3190:Src/main.c    **** 	VXISI2CWrite(0x96,0xF3);
3191:Src/main.c    **** 	VXISI2CWrite(0x97,0x20);
3192:Src/main.c    **** 	VXISI2CWrite(0x98,0x11);
3193:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);
3194:Src/main.c    **** 	VXISI2CWrite(0x9A,0xFF);
3195:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);
3196:Src/main.c    **** 	VXISI2CWrite(0x9C,0x0A);
3197:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);
3198:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);
3199:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);
3200:Src/main.c    **** 	VXISI2CWrite(0xA0,0x2F);
3201:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD9);
3202:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);
3203:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);
3204:Src/main.c    **** 	VXISI2CWrite(0xA4,0xE1);
3205:Src/main.c    **** 	VXISI2CWrite(0xA5,0x38);
3206:Src/main.c    **** 	VXISI2CWrite(0xA6,0xC2);
3207:Src/main.c    **** 	VXISI2CWrite(0xA7,0x70);
3208:Src/main.c    **** 	VXISI2CWrite(0xA8,0x00);
3209:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);
3210:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2E);
3211:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);
3212:Src/main.c    **** 	VXISI2CWrite(0xAC,0x84);
3213:Src/main.c    **** 	VXISI2CWrite(0xAD,0xF3);
3214:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);
3215:Src/main.c    **** 	VXISI2CWrite(0xAF,0x99);
3216:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);
3217:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);
3218:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);
3219:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);
3220:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);
3221:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);
3222:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);
3223:Src/main.c    **** 	VXISI2CWrite(0xB8,0x80);
3224:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);
3225:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);
ARM GAS  /tmp/ccxsI2YD.s 			page 58


3226:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);
3227:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);
3228:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);
3229:Src/main.c    **** 	VXISI2CWrite(0xBE,0x2C);
3230:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);
3231:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);
3232:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);
3233:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);
3234:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);
3235:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);
3236:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);
3237:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);
3238:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);
3239:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);
3240:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);
3241:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);
3242:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);
3243:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);
3244:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);
3245:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);
3246:Src/main.c    **** 	VXISI2CWrite(0xDD,0x00);
3247:Src/main.c    **** 	VXISI2CWrite(0xDE,0xAF);
3248:Src/main.c    **** 	VXISI2CWrite(0xDF,0xEF);
3249:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);
3250:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);
3251:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);
3252:Src/main.c    **** 	VXISI2CWrite(0xE3,0x12);
3253:Src/main.c    **** 	VXISI2CWrite(0xE4,0xE2);
3254:Src/main.c    **** 	VXISI2CWrite(0xE5,0xD0);
3255:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);
3256:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);
3257:Src/main.c    **** 	VXISI2CWrite(0xE8,0x0F);
3258:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);
3259:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);
3260:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);
3261:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);
3262:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);
3263:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);
3264:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);
3265:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);
3266:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);
3267:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);
3268:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);
3269:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);
3270:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);
3271:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);
3272:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);
3273:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);
3274:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);
3275:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);
3276:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);
3277:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);
3278:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);
3279:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);
3280:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);
3281:Src/main.c    **** 					 
3282:Src/main.c    **** 
ARM GAS  /tmp/ccxsI2YD.s 			page 59


3283:Src/main.c    **** 
3284:Src/main.c    **** }
3285:Src/main.c    **** 
3286:Src/main.c    **** void SET_VS4210_1280_720_out(void)
3287:Src/main.c    **** {
3288:Src/main.c    **** 	Printf("\r\nSET_VS4210_1280_720_out");
3289:Src/main.c    **** 
3290:Src/main.c    **** 	VXISI2CWrite(0x01,0x00);
3291:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);
3292:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);
3293:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);
3294:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);
3295:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);
3296:Src/main.c    **** 	VXISI2CWrite(0x07,0x08);
3297:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);
3298:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);
3299:Src/main.c    **** 	VXISI2CWrite(0x0A,0x41);
3300:Src/main.c    **** 	VXISI2CWrite(0x0B,0x07);
3301:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);
3302:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);
3303:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);
3304:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);
3305:Src/main.c    **** 	VXISI2CWrite(0x10,0x80);
3306:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);
3307:Src/main.c    **** 	VXISI2CWrite(0x12,0x21);
3308:Src/main.c    **** 	VXISI2CWrite(0x13,0xD0);
3309:Src/main.c    **** 	VXISI2CWrite(0x14,0xE0);
3310:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);
3311:Src/main.c    **** 	VXISI2CWrite(0x16,0xFE);
3312:Src/main.c    **** 	VXISI2CWrite(0x17,0x00);
3313:Src/main.c    **** 	VXISI2CWrite(0x18,0xC8);
3314:Src/main.c    **** 	VXISI2CWrite(0x19,0x00);
3315:Src/main.c    **** 	VXISI2CWrite(0x1A,0x23);
3316:Src/main.c    **** 	VXISI2CWrite(0x1B,0x00);
3317:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);
3318:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);
3319:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);
3320:Src/main.c    **** 	VXISI2CWrite(0x1F,0x32);
3321:Src/main.c    **** 	VXISI2CWrite(0x20,0x5A);
3322:Src/main.c    **** 	VXISI2CWrite(0x21,0x0D);
3323:Src/main.c    **** 	VXISI2CWrite(0x22,0x32);
3324:Src/main.c    **** 	VXISI2CWrite(0x23,0x5A);
3325:Src/main.c    **** 	VXISI2CWrite(0x24,0xD0);
3326:Src/main.c    **** 	VXISI2CWrite(0x25,0x21);
3327:Src/main.c    **** 	VXISI2CWrite(0x26,0x0D);
3328:Src/main.c    **** 	VXISI2CWrite(0x27,0xE0);
3329:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);
3330:Src/main.c    **** 	VXISI2CWrite(0x29,0x00);
3331:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);
3332:Src/main.c    **** 	VXISI2CWrite(0x2B,0x01);
3333:Src/main.c    **** 	VXISI2CWrite(0x2C,0xFF);
3334:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);
3335:Src/main.c    **** 	VXISI2CWrite(0x2E,0x12);
3336:Src/main.c    **** 	VXISI2CWrite(0x2F,0xD0);
3337:Src/main.c    **** 	VXISI2CWrite(0x30,0xE0);
3338:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);
3339:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);
ARM GAS  /tmp/ccxsI2YD.s 			page 60


3340:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);
3341:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);
3342:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);
3343:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);
3344:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);
3345:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);
3346:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);
3347:Src/main.c    **** 	VXISI2CWrite(0x3A,0x03);
3348:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);
3349:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);
3350:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);
3351:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);
3352:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);
3353:Src/main.c    **** 	//VXISI2CWrite(0xVXISI);2CWrite(0x80
3354:Src/main.c    **** 	VXISI2CWrite(0x41,0x60);
3355:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);
3356:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);
3357:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);
3358:Src/main.c    **** 	VXISI2CWrite(0x45,0x04);
3359:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);
3360:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);
3361:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);
3362:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);
3363:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);
3364:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);
3365:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);
3366:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);
3367:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);
3368:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);
3369:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);
3370:Src/main.c    **** 	VXISI2CWrite(0x52,0x00);
3371:Src/main.c    **** 	VXISI2CWrite(0x53,0x04);
3372:Src/main.c    **** 	VXISI2CWrite(0x54,0x00);
3373:Src/main.c    **** 	VXISI2CWrite(0x55,0xE0);
3374:Src/main.c    **** 	VXISI2CWrite(0x56,0x40);
3375:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);
3376:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);
3377:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);
3378:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);
3379:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);
3380:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);
3381:Src/main.c    **** 	VXISI2CWrite(0x5D,0x40);
3382:Src/main.c    **** 	VXISI2CWrite(0x5E,0x08);
3383:Src/main.c    **** 	VXISI2CWrite(0x5F,0x00);
3384:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);
3385:Src/main.c    **** 	VXISI2CWrite(0x61,0x54);
3386:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);
3387:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);
3388:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);
3389:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);
3390:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);
3391:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);
3392:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);
3393:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);
3394:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);
3395:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);
3396:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);
ARM GAS  /tmp/ccxsI2YD.s 			page 61


3397:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);
3398:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);
3399:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);
3400:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);
3401:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);
3402:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);
3403:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);
3404:Src/main.c    **** 	VXISI2CWrite(0x74,0x00);
3405:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);
3406:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);
3407:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);
3408:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);
3409:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);
3410:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);
3411:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);
3412:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);
3413:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);
3414:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);
3415:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);
3416:Src/main.c    **** 	VXISI2CWrite(0x80,0x00);
3417:Src/main.c    **** 	VXISI2CWrite(0x81,0x34);
3418:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);
3419:Src/main.c    **** 	VXISI2CWrite(0x83,0x05);
3420:Src/main.c    **** 	VXISI2CWrite(0x84,0x59);
3421:Src/main.c    **** 	VXISI2CWrite(0x85,0xFD);
3422:Src/main.c    **** 	VXISI2CWrite(0x86,0x04);
3423:Src/main.c    **** 	VXISI2CWrite(0x87,0x24);
3424:Src/main.c    **** 	VXISI2CWrite(0x88,0x94);
3425:Src/main.c    **** 	VXISI2CWrite(0x89,0x58);
3426:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);
3427:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);
3428:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);
3429:Src/main.c    **** 	VXISI2CWrite(0x8D,0x2C);
3430:Src/main.c    **** 	VXISI2CWrite(0x8E,0x8C);
3431:Src/main.c    **** 	VXISI2CWrite(0x8F,0x00);
3432:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);
3433:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);
3434:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);
3435:Src/main.c    **** 	VXISI2CWrite(0x93,0x31);
3436:Src/main.c    **** 	VXISI2CWrite(0x94,0x87);
3437:Src/main.c    **** 	VXISI2CWrite(0x95,0xD0);
3438:Src/main.c    **** 	VXISI2CWrite(0x96,0xF3);
3439:Src/main.c    **** 	VXISI2CWrite(0x97,0x20);
3440:Src/main.c    **** 	VXISI2CWrite(0x98,0x11);
3441:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);
3442:Src/main.c    **** 	VXISI2CWrite(0x9A,0xFF);
3443:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);
3444:Src/main.c    **** 	VXISI2CWrite(0x9C,0x0A);
3445:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);
3446:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);
3447:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);
3448:Src/main.c    **** 	VXISI2CWrite(0xA0,0x2F);
3449:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD9);
3450:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);
3451:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);
3452:Src/main.c    **** 	VXISI2CWrite(0xA4,0xE1);
3453:Src/main.c    **** 	VXISI2CWrite(0xA5,0x38);
ARM GAS  /tmp/ccxsI2YD.s 			page 62


3454:Src/main.c    **** 	VXISI2CWrite(0xA6,0xC2);
3455:Src/main.c    **** 	VXISI2CWrite(0xA7,0x70);
3456:Src/main.c    **** 	VXISI2CWrite(0xA8,0x00);
3457:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);
3458:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2E);
3459:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);
3460:Src/main.c    **** 	VXISI2CWrite(0xAC,0x84);
3461:Src/main.c    **** 	VXISI2CWrite(0xAD,0xF3);
3462:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);
3463:Src/main.c    **** 	VXISI2CWrite(0xAF,0x99);
3464:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);
3465:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);
3466:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);
3467:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);
3468:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);
3469:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);
3470:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);
3471:Src/main.c    **** 	VXISI2CWrite(0xB8,0x80);
3472:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);
3473:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);
3474:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);
3475:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);
3476:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);
3477:Src/main.c    **** 	VXISI2CWrite(0xBE,0x2C);
3478:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);
3479:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);
3480:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);
3481:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);
3482:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);
3483:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);
3484:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);
3485:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);
3486:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);
3487:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);
3488:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);
3489:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);
3490:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);
3491:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);
3492:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);
3493:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);
3494:Src/main.c    **** 	VXISI2CWrite(0xDD,0x00);
3495:Src/main.c    **** 	VXISI2CWrite(0xDE,0xAF);
3496:Src/main.c    **** 	VXISI2CWrite(0xDF,0xEF);
3497:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);
3498:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);
3499:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);
3500:Src/main.c    **** 	VXISI2CWrite(0xE3,0x12);
3501:Src/main.c    **** 	VXISI2CWrite(0xE4,0xE2);
3502:Src/main.c    **** 	VXISI2CWrite(0xE5,0xD0);
3503:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);
3504:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);
3505:Src/main.c    **** 	VXISI2CWrite(0xE8,0x0F);
3506:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);
3507:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);
3508:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);
3509:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);
3510:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);
ARM GAS  /tmp/ccxsI2YD.s 			page 63


3511:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);
3512:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);
3513:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);
3514:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);
3515:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);
3516:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);
3517:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);
3518:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);
3519:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);
3520:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);
3521:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);
3522:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);
3523:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);
3524:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);
3525:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);
3526:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);
3527:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);
3528:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);
3529:Src/main.c    **** 			 
3530:Src/main.c    **** }
3531:Src/main.c    **** 
3532:Src/main.c    **** void SET_AHD_MDOE(void)
3533:Src/main.c    **** {
3534:Src/main.c    **** 	Printf("\r\nSET_AHD_MDOE...");
3535:Src/main.c    **** 
3536:Src/main.c    **** 	VXISI2CWrite(0x00,0x42);
3537:Src/main.c    **** 	VXISI2CWrite(0x01,0x00);
3538:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);
3539:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);
3540:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);
3541:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);
3542:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);
3543:Src/main.c    **** 	VXISI2CWrite(0x07,0x0C);
3544:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);
3545:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);
3546:Src/main.c    **** 	VXISI2CWrite(0x0A,0x40);
3547:Src/main.c    **** 	VXISI2CWrite(0x0B,0x0A);
3548:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);
3549:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);
3550:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);
3551:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);
3552:Src/main.c    **** 	VXISI2CWrite(0x10,0x81);
3553:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);
3554:Src/main.c    **** 	VXISI2CWrite(0x12,0x74);
3555:Src/main.c    **** 	VXISI2CWrite(0x13,0x80);
3556:Src/main.c    **** 	VXISI2CWrite(0x14,0x38);
3557:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);
3558:Src/main.c    **** 	VXISI2CWrite(0x16,0xFE);
3559:Src/main.c    **** 	VXISI2CWrite(0x17,0x00);
3560:Src/main.c    **** 	VXISI2CWrite(0x18,0xC0);
3561:Src/main.c    **** 	VXISI2CWrite(0x19,0x01);
3562:Src/main.c    **** 	VXISI2CWrite(0x1A,0x20);
3563:Src/main.c    **** 	VXISI2CWrite(0x1B,0x30);
3564:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);
3565:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);
3566:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);
3567:Src/main.c    **** 	VXISI2CWrite(0x1F,0xA4);
ARM GAS  /tmp/ccxsI2YD.s 			page 64


3568:Src/main.c    **** 	VXISI2CWrite(0x20,0x50);
3569:Src/main.c    **** 	VXISI2CWrite(0x21,0xE2);
3570:Src/main.c    **** 	VXISI2CWrite(0x22,0x87);
3571:Src/main.c    **** 	VXISI2CWrite(0x23,0x98);
3572:Src/main.c    **** 	VXISI2CWrite(0x24,0x80);
3573:Src/main.c    **** 	VXISI2CWrite(0x25,0x44);
3574:Src/main.c    **** 	VXISI2CWrite(0x26,0x65);
3575:Src/main.c    **** 	VXISI2CWrite(0x27,0x38);
3576:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);
3577:Src/main.c    **** 	VXISI2CWrite(0x29,0x00);
3578:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);
3579:Src/main.c    **** 	VXISI2CWrite(0x2B,0x11);
3580:Src/main.c    **** 	VXISI2CWrite(0x2C,0x00);
3581:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);
3582:Src/main.c    **** 	VXISI2CWrite(0x2E,0x47);
3583:Src/main.c    **** 	VXISI2CWrite(0x2F,0x80);
3584:Src/main.c    **** 	VXISI2CWrite(0x30,0x38);
3585:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);
3586:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);
3587:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);
3588:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);
3589:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);
3590:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);
3591:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);
3592:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);
3593:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);
3594:Src/main.c    **** 	VXISI2CWrite(0x3A,0x73);
3595:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);
3596:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);
3597:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);
3598:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);
3599:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);
3600:Src/main.c    **** 	VXISI2CWrite(0x40,0x80);
3601:Src/main.c    **** 	VXISI2CWrite(0x41,0x60);
3602:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);
3603:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);
3604:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);
3605:Src/main.c    **** 	VXISI2CWrite(0x45,0x00);
3606:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);
3607:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);
3608:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);
3609:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);
3610:Src/main.c    **** 	VXISI2CWrite(0x4A,0x00);
3611:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);
3612:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);
3613:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);
3614:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);
3615:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);
3616:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);
3617:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);
3618:Src/main.c    **** 	VXISI2CWrite(0x52,0xA4);
3619:Src/main.c    **** 	VXISI2CWrite(0x53,0xC0);
3620:Src/main.c    **** 	VXISI2CWrite(0x54,0x42);
3621:Src/main.c    **** 	VXISI2CWrite(0x55,0x60);
3622:Src/main.c    **** 	VXISI2CWrite(0x56,0x5C);
3623:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);
3624:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);
ARM GAS  /tmp/ccxsI2YD.s 			page 65


3625:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);
3626:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);
3627:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);
3628:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);
3629:Src/main.c    **** 	VXISI2CWrite(0x5D,0xA8);
3630:Src/main.c    **** 	VXISI2CWrite(0x5E,0xC0);
3631:Src/main.c    **** 	VXISI2CWrite(0x5F,0x53);
3632:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);
3633:Src/main.c    **** 	VXISI2CWrite(0x61,0xCC);
3634:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);
3635:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);
3636:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);
3637:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);
3638:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);
3639:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);
3640:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);
3641:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);
3642:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);
3643:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);
3644:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);
3645:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);
3646:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);
3647:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);
3648:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);
3649:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);
3650:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);
3651:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);
3652:Src/main.c    **** 	VXISI2CWrite(0x74,0x06);
3653:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);
3654:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);
3655:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);
3656:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);
3657:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);
3658:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);
3659:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);
3660:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);
3661:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);
3662:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);
3663:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);
3664:Src/main.c    **** 	VXISI2CWrite(0x80,0x01);
3665:Src/main.c    **** 	VXISI2CWrite(0x81,0x15);
3666:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);
3667:Src/main.c    **** 	VXISI2CWrite(0x83,0x2D);
3668:Src/main.c    **** 	VXISI2CWrite(0x84,0x57);
3669:Src/main.c    **** 	VXISI2CWrite(0x85,0xFD);
3670:Src/main.c    **** 	VXISI2CWrite(0x86,0x00);
3671:Src/main.c    **** 	VXISI2CWrite(0x87,0x00);
3672:Src/main.c    **** 	VXISI2CWrite(0x88,0x00);
3673:Src/main.c    **** 	VXISI2CWrite(0x89,0x00);
3674:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);
3675:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);
3676:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);
3677:Src/main.c    **** 	VXISI2CWrite(0x8D,0x17);
3678:Src/main.c    **** 	VXISI2CWrite(0x8E,0x8C);
3679:Src/main.c    **** 	VXISI2CWrite(0x8F,0x00);
3680:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);
3681:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);
ARM GAS  /tmp/ccxsI2YD.s 			page 66


3682:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);
3683:Src/main.c    **** 	VXISI2CWrite(0x93,0x84);
3684:Src/main.c    **** 	VXISI2CWrite(0x94,0x98);
3685:Src/main.c    **** 	VXISI2CWrite(0x95,0x80);
3686:Src/main.c    **** 	VXISI2CWrite(0x96,0x65);
3687:Src/main.c    **** 	VXISI2CWrite(0x97,0x70);
3688:Src/main.c    **** 	VXISI2CWrite(0x98,0x29);
3689:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);
3690:Src/main.c    **** 	VXISI2CWrite(0x9A,0x00);
3691:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);
3692:Src/main.c    **** 	VXISI2CWrite(0x9C,0x00);
3693:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);
3694:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);
3695:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);
3696:Src/main.c    **** 	VXISI2CWrite(0xA0,0x80);
3697:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD8);
3698:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);
3699:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);
3700:Src/main.c    **** 	VXISI2CWrite(0xA4,0x00);
3701:Src/main.c    **** 	VXISI2CWrite(0xA5,0x80);
3702:Src/main.c    **** 	VXISI2CWrite(0xA6,0x00);
3703:Src/main.c    **** 	VXISI2CWrite(0xA7,0x70);
3704:Src/main.c    **** 	VXISI2CWrite(0xA8,0x40);
3705:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);
3706:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2C);
3707:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);
3708:Src/main.c    **** 	VXISI2CWrite(0xAC,0x90);
3709:Src/main.c    **** 	VXISI2CWrite(0xAD,0x65);
3710:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);
3711:Src/main.c    **** 	VXISI2CWrite(0xAF,0x99);
3712:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);
3713:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);
3714:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);
3715:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);
3716:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);
3717:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);
3718:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);
3719:Src/main.c    **** 	VXISI2CWrite(0xB7,0x00);
3720:Src/main.c    **** 	VXISI2CWrite(0xB8,0x80);
3721:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);
3722:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);
3723:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);
3724:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);
3725:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);
3726:Src/main.c    **** 	VXISI2CWrite(0xBE,0x2C);
3727:Src/main.c    **** 	VXISI2CWrite(0xBF,0x00);
3728:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);
3729:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);
3730:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);
3731:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);
3732:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);
3733:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);
3734:Src/main.c    **** 	VXISI2CWrite(0xC6,0x00);
3735:Src/main.c    **** 	VXISI2CWrite(0xC7,0x00);
3736:Src/main.c    **** 	VXISI2CWrite(0xC8,0x00);
3737:Src/main.c    **** 	VXISI2CWrite(0xC9,0x00);
3738:Src/main.c    **** 	VXISI2CWrite(0xCA,0x00);
ARM GAS  /tmp/ccxsI2YD.s 			page 67


3739:Src/main.c    **** 	VXISI2CWrite(0xCB,0x00);
3740:Src/main.c    **** 	VXISI2CWrite(0xCC,0x00);
3741:Src/main.c    **** 	VXISI2CWrite(0xCD,0x00);
3742:Src/main.c    **** 	VXISI2CWrite(0xCE,0x00);
3743:Src/main.c    **** 	VXISI2CWrite(0xCF,0x00);
3744:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);
3745:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);
3746:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);
3747:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);
3748:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);
3749:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);
3750:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);
3751:Src/main.c    **** 	VXISI2CWrite(0xD7,0x0F);
3752:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);
3753:Src/main.c    **** 	VXISI2CWrite(0xD9,0x00);
3754:Src/main.c    **** 	VXISI2CWrite(0xDA,0x00);
3755:Src/main.c    **** 	VXISI2CWrite(0xDB,0x00);
3756:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);
3757:Src/main.c    **** 	VXISI2CWrite(0xDD,0x01);
3758:Src/main.c    **** 	VXISI2CWrite(0xDE,0x5F);
3759:Src/main.c    **** 	VXISI2CWrite(0xDF,0x96);
3760:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);
3761:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);
3762:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);
3763:Src/main.c    **** 	VXISI2CWrite(0xE3,0x47);
3764:Src/main.c    **** 	VXISI2CWrite(0xE4,0x3C);
3765:Src/main.c    **** 	VXISI2CWrite(0xE5,0x80);
3766:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);
3767:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);
3768:Src/main.c    **** 	VXISI2CWrite(0xE8,0x00);
3769:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);
3770:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);
3771:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);
3772:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);
3773:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);
3774:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);
3775:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);
3776:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);
3777:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);
3778:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);
3779:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);
3780:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);
3781:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);
3782:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);
3783:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);
3784:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);
3785:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);
3786:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);
3787:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);
3788:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);
3789:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);
3790:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);
3791:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);
3792:Src/main.c    **** 
3793:Src/main.c    **** }
3794:Src/main.c    **** /**
3795:Src/main.c    ****   * @brief System Clock Configuration
ARM GAS  /tmp/ccxsI2YD.s 			page 68


3796:Src/main.c    ****   * @retval None
3797:Src/main.c    ****   */
3798:Src/main.c    ****   #if 0//crystal
3799:Src/main.c    **** 
3800:Src/main.c    ****   void SystemClock_Config(void)
3801:Src/main.c    ****   {
3802:Src/main.c    **** 	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
3803:Src/main.c    **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
3804:Src/main.c    ****   
3805:Src/main.c    **** 	/** Initializes the CPU, AHB and APB busses clocks 
3806:Src/main.c    **** 	*/
3807:Src/main.c    **** 	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
3808:Src/main.c    **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
3809:Src/main.c    **** 	RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
3810:Src/main.c    **** 	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
3811:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
3812:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
3813:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
3814:Src/main.c    **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
3815:Src/main.c    **** 	{
3816:Src/main.c    **** 	  Error_Handler();
3817:Src/main.c    **** 	}
3818:Src/main.c    **** 	/** Initializes the CPU, AHB and APB busses clocks 
3819:Src/main.c    **** 	*/
3820:Src/main.c    **** 	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
3821:Src/main.c    **** 								|RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
3822:Src/main.c    **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
3823:Src/main.c    **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
3824:Src/main.c    **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
3825:Src/main.c    **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
3826:Src/main.c    ****   
3827:Src/main.c    **** 	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
3828:Src/main.c    **** 	{
3829:Src/main.c    **** 	  Error_Handler();
3830:Src/main.c    **** 	}
3831:Src/main.c    ****   }
3832:Src/main.c    **** 
3833:Src/main.c    ****   #else
3834:Src/main.c    **** void SystemClock_Config(void)
3835:Src/main.c    **** {
3836:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
3837:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
3838:Src/main.c    **** 
3839:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
3840:Src/main.c    ****   */
3841:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
3842:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
3843:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
3844:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
3845:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
3846:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
3847:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
3848:Src/main.c    ****   {
3849:Src/main.c    ****     Error_Handler();
3850:Src/main.c    ****   }
3851:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
3852:Src/main.c    ****   */
ARM GAS  /tmp/ccxsI2YD.s 			page 69


3853:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
3854:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
3855:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
3856:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
3857:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
3858:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
3859:Src/main.c    **** 
3860:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
3861:Src/main.c    ****   {
3862:Src/main.c    ****     Error_Handler();
3863:Src/main.c    ****   }
3864:Src/main.c    **** }
3865:Src/main.c    **** #endif
3866:Src/main.c    **** /**
3867:Src/main.c    ****   * @brief ADC1 Initialization Function.
3868:Src/main.c    ****   * @param None
3869:Src/main.c    ****   * @retval None
3870:Src/main.c    ****   */
3871:Src/main.c    ****   #if 0
3872:Src/main.c    **** static void MX_ADC1_Init(void)
3873:Src/main.c    **** {
3874:Src/main.c    **** 
3875:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
3876:Src/main.c    **** 
3877:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
3878:Src/main.c    **** 
3879:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
3880:Src/main.c    **** 
3881:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
3882:Src/main.c    **** 
3883:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
3884:Src/main.c    ****   /** Common config 
3885:Src/main.c    ****   */
3886:Src/main.c    ****   hadc1.Instance = ADC1;
3887:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
3888:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
3889:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
3890:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
3891:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
3892:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
3893:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
3894:Src/main.c    ****   {
3895:Src/main.c    ****     Error_Handler();
3896:Src/main.c    ****   }
3897:Src/main.c    ****   /** Configure Regular Channel 
3898:Src/main.c    ****   */
3899:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_13;
3900:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
3901:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
3902:Src/main.c    ****   /*
3903:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
3904:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
3905:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
3906:Src/main.c    ****   sConfig.Offset = 0;
3907:Src/main.c    ****   */
3908:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
3909:Src/main.c    ****   {
ARM GAS  /tmp/ccxsI2YD.s 			page 70


3910:Src/main.c    ****     Error_Handler();
3911:Src/main.c    ****   }
3912:Src/main.c    **** 
3913:Src/main.c    **** 
3914:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
3915:Src/main.c    **** HAL_ADC_MspInit(&hadc1);
3916:Src/main.c    **** 
3917:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
3918:Src/main.c    **** 
3919:Src/main.c    **** }
3920:Src/main.c    **** #endif
3921:Src/main.c    **** /**
3922:Src/main.c    ****   * @brief TIM2 Initialization Function
3923:Src/main.c    ****   * @param None
3924:Src/main.c    ****   * @retval None
3925:Src/main.c    ****   */
3926:Src/main.c    ****   #if 0
3927:Src/main.c    **** static void MX_TIM2_Init(void)
3928:Src/main.c    **** {
3929:Src/main.c    **** 
3930:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
3931:Src/main.c    **** 
3932:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
3933:Src/main.c    ****   ///TIM_ClockConfigTypeDef sClockSourceConfig = {0};
3934:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
3935:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
3936:Src/main.c    **** 
3937:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
3938:Src/main.c    **** 
3939:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
3940:Src/main.c    ****   htim2.Instance = TIM2;
3941:Src/main.c    ****   htim2.Init.Prescaler = (35/4);
3942:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
3943:Src/main.c    ****   htim2.Init.Period = 4000;
3944:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
3945:Src/main.c    ****  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE; 
3946:Src/main.c    **** /*
3947:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
3948:Src/main.c    **** 	{
3949:Src/main.c    **** 	  Error_Handler();
3950:Src/main.c    **** 	}
3951:Src/main.c    **** 	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
3952:Src/main.c    **** 	if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
3953:Src/main.c    **** 	{
3954:Src/main.c    **** 	  Error_Handler();
3955:Src/main.c    **** 	}
3956:Src/main.c    **** */
3957:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
3958:Src/main.c    ****   {
3959:Src/main.c    ****    Error_Handler();
3960:Src/main.c    ****   }
3961:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
3962:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
3963:Src/main.c    **** 
3964:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
3965:Src/main.c    ****   {
3966:Src/main.c    ****    Error_Handler();
ARM GAS  /tmp/ccxsI2YD.s 			page 71


3967:Src/main.c    ****   }
3968:Src/main.c    ****   
3969:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
3970:Src/main.c    **** //  sConfigOC.Pulse = 4000;
3971:Src/main.c    ****   sConfigOC.Pulse = 0;
3972:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
3973:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
3974:Src/main.c    **** 
3975:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
3976:Src/main.c    ****   {
3977:Src/main.c    ****    Error_Handler();
3978:Src/main.c    ****   }
3979:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
3980:Src/main.c    **** 
3981:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
3982:Src/main.c    ****   HAL_TIM_MspPostInit(&htim2);
3983:Src/main.c    **** 
3984:Src/main.c    **** //TIMOCInitStructure.TIM_Pulse =(period); 						   
3985:Src/main.c    **** 
3986:Src/main.c    **** //TIMOCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;	   
3987:Src/main.c    **** //TIMOCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
3988:Src/main.c    **** //TIM_OC3Init(TIM3, &TIMOCInitStructure); 				   
3989:Src/main.c    **** 				   
3990:Src/main.c    **** 
3991:Src/main.c    **** //TIM_Cmd(TIM3, ENABLE);
3992:Src/main.c    **** 
3993:Src/main.c    **** }
3994:Src/main.c    **** #endif
3995:Src/main.c    **** /**
3996:Src/main.c    ****   * @brief TIM3 Initialization Function
3997:Src/main.c    ****   * @param None
3998:Src/main.c    ****   * @retval None
3999:Src/main.c    ****   */
4000:Src/main.c    **** static void MX_TIM3_Init(void)
4001:Src/main.c    **** {
4002:Src/main.c    **** 
4003:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 0 */
4004:Src/main.c    **** 
4005:Src/main.c    ****   /* USER CODE END TIM3_Init 0 */
4006:Src/main.c    **** 
4007:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
4008:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
4009:Src/main.c    **** 
4010:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 1 */
4011:Src/main.c    **** 
4012:Src/main.c    ****   /* USER CODE END TIM3_Init 1 */
4013:Src/main.c    ****   htim3.Instance = TIM3;
4014:Src/main.c    ****   htim3.Init.Prescaler = 35;
4015:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
4016:Src/main.c    ****   htim3.Init.Period = 9;
4017:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
4018:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
4019:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
4020:Src/main.c    ****   {
4021:Src/main.c    ****     Error_Handler();
4022:Src/main.c    ****   }
4023:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
ARM GAS  /tmp/ccxsI2YD.s 			page 72


4024:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
4025:Src/main.c    ****   {
4026:Src/main.c    ****     Error_Handler();
4027:Src/main.c    ****   }
4028:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
4029:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
4030:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
4031:Src/main.c    ****   {
4032:Src/main.c    ****     Error_Handler();
4033:Src/main.c    ****   }
4034:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 2 */
4035:Src/main.c    **** 
4036:Src/main.c    ****   /* USER CODE END TIM3_Init 2 */
4037:Src/main.c    **** 
4038:Src/main.c    **** }
4039:Src/main.c    **** 
4040:Src/main.c    **** /**
4041:Src/main.c    ****   * @brief USART1 Initialization Function
4042:Src/main.c    ****   * @param None
4043:Src/main.c    ****   * @retval None
4044:Src/main.c    ****   */
4045:Src/main.c    **** static void MX_USART1_UART_Init(void)
4046:Src/main.c    **** {
4047:Src/main.c    **** 
4048:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
4049:Src/main.c    **** 
4050:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
4051:Src/main.c    **** 
4052:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
4053:Src/main.c    **** 
4054:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
4055:Src/main.c    ****   huart1.Instance = USART1;
4056:Src/main.c    **** //  huart1.Init.BaudRate = 9600;
4057:Src/main.c    ****   huart1.Init.BaudRate = 115200;
4058:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
4059:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
4060:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
4061:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
4062:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
4063:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
4064:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
4065:Src/main.c    ****   {
4066:Src/main.c    ****     Error_Handler();
4067:Src/main.c    ****   }
4068:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
4069:Src/main.c    **** 
4070:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
4071:Src/main.c    **** 
4072:Src/main.c    **** }
4073:Src/main.c    **** 
4074:Src/main.c    **** /**
4075:Src/main.c    ****   * @brief USART2 Initialization Function
4076:Src/main.c    ****   * @param None
4077:Src/main.c    ****   * @retval None
4078:Src/main.c    ****   */
4079:Src/main.c    **** static void MX_USART2_UART_Init(void)
4080:Src/main.c    **** {
ARM GAS  /tmp/ccxsI2YD.s 			page 73


4081:Src/main.c    **** 
4082:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
4083:Src/main.c    **** 
4084:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
4085:Src/main.c    **** 
4086:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
4087:Src/main.c    **** 
4088:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
4089:Src/main.c    ****   huart2.Instance = USART2;
4090:Src/main.c    ****   huart2.Init.BaudRate = 38400;
4091:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
4092:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
4093:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
4094:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
4095:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
4096:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
4097:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
4098:Src/main.c    ****   {
4099:Src/main.c    ****     Error_Handler();
4100:Src/main.c    ****   }
4101:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
4102:Src/main.c    **** 
4103:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
4104:Src/main.c    **** 
4105:Src/main.c    **** }
4106:Src/main.c    **** 
4107:Src/main.c    **** /**
4108:Src/main.c    ****   * @brief GPIO Initialization Function
4109:Src/main.c    ****   * @param None
4110:Src/main.c    ****   * @retval None
4111:Src/main.c    ****   */
4112:Src/main.c    **** static void MX_GPIO_Init(void)
4113:Src/main.c    **** {
  26              		.loc 1 4113 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 20
  33              		.cfi_offset 4, -20
  34              		.cfi_offset 5, -16
  35              		.cfi_offset 6, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
4114:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 4114 0
  42 0004 0025     		movs	r5, #0
  43 0006 0495     		str	r5, [sp, #16]
  44 0008 0595     		str	r5, [sp, #20]
  45 000a 0695     		str	r5, [sp, #24]
  46 000c 0795     		str	r5, [sp, #28]
  47              	.LBB2:
4115:Src/main.c    **** 
ARM GAS  /tmp/ccxsI2YD.s 			page 74


4116:Src/main.c    ****   /* GPIO Ports Clock Enable */
4117:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  48              		.loc 1 4117 0
  49 000e 2E4B     		ldr	r3, .L3
  50 0010 9A69     		ldr	r2, [r3, #24]
  51 0012 42F00402 		orr	r2, r2, #4
  52 0016 9A61     		str	r2, [r3, #24]
  53 0018 9A69     		ldr	r2, [r3, #24]
  54 001a 02F00402 		and	r2, r2, #4
  55 001e 0092     		str	r2, [sp]
  56 0020 009A     		ldr	r2, [sp]
  57              	.LBE2:
  58              	.LBB3:
4118:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  59              		.loc 1 4118 0
  60 0022 9A69     		ldr	r2, [r3, #24]
  61 0024 42F00802 		orr	r2, r2, #8
  62 0028 9A61     		str	r2, [r3, #24]
  63 002a 9A69     		ldr	r2, [r3, #24]
  64 002c 02F00802 		and	r2, r2, #8
  65 0030 0192     		str	r2, [sp, #4]
  66 0032 019A     		ldr	r2, [sp, #4]
  67              	.LBE3:
  68              	.LBB4:
4119:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  69              		.loc 1 4119 0
  70 0034 9A69     		ldr	r2, [r3, #24]
  71 0036 42F01002 		orr	r2, r2, #16
  72 003a 9A61     		str	r2, [r3, #24]
  73 003c 9A69     		ldr	r2, [r3, #24]
  74 003e 02F01002 		and	r2, r2, #16
  75 0042 0292     		str	r2, [sp, #8]
  76 0044 029A     		ldr	r2, [sp, #8]
  77              	.LBE4:
  78              	.LBB5:
4120:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  79              		.loc 1 4120 0
  80 0046 9A69     		ldr	r2, [r3, #24]
  81 0048 42F02002 		orr	r2, r2, #32
  82 004c 9A61     		str	r2, [r3, #24]
  83 004e 9B69     		ldr	r3, [r3, #24]
  84 0050 03F02003 		and	r3, r3, #32
  85 0054 0393     		str	r3, [sp, #12]
  86 0056 039B     		ldr	r3, [sp, #12]
  87              	.LBE5:
4121:Src/main.c    **** 
4122:Src/main.c    ****   /*Configure GPIO pin Output Level */
4123:Src/main.c    **** HAL_GPIO_WritePin(GPIOA, /*TX_RST_Pin|TP2824_RST_Pin|*/VS_RST_Pin, GPIO_PIN_SET);
  88              		.loc 1 4123 0
  89 0058 1C4F     		ldr	r7, .L3+4
  90 005a 3846     		mov	r0, r7
  91 005c 4FF48051 		mov	r1, #4096
  92 0060 0122     		movs	r2, #1
  93 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
  94              	.LVL0:
4124:Src/main.c    **** 
4125:Src/main.c    ****   /*Configure GPIO pins : TX_RST_Pin TP2824_RST_Pin VS_RST_Pin */
ARM GAS  /tmp/ccxsI2YD.s 			page 75


4126:Src/main.c    ****   GPIO_InitStruct.Pin = VIDEO_LOSS;
  95              		.loc 1 4126 0
  96 0066 2023     		movs	r3, #32
  97 0068 0493     		str	r3, [sp, #16]
4127:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  98              		.loc 1 4127 0
  99 006a 0124     		movs	r4, #1
 100 006c 0594     		str	r4, [sp, #20]
4128:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 101              		.loc 1 4128 0
 102 006e 0694     		str	r4, [sp, #24]
4129:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 103              		.loc 1 4129 0
 104 0070 0226     		movs	r6, #2
 105 0072 0796     		str	r6, [sp, #28]
4130:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 106              		.loc 1 4130 0
 107 0074 3846     		mov	r0, r7
 108 0076 04A9     		add	r1, sp, #16
 109 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 110              	.LVL1:
4131:Src/main.c    **** 
4132:Src/main.c    ****   GPIO_InitStruct.Pin = HDMI_SELECT;
 111              		.loc 1 4132 0
 112 007c 1023     		movs	r3, #16
 113 007e 0493     		str	r3, [sp, #16]
4133:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 114              		.loc 1 4133 0
 115 0080 0595     		str	r5, [sp, #20]
4134:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 116              		.loc 1 4134 0
 117 0082 0694     		str	r4, [sp, #24]
4135:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 118              		.loc 1 4135 0
 119 0084 3846     		mov	r0, r7
 120 0086 0DEB0301 		add	r1, sp, r3
 121 008a FFF7FEFF 		bl	HAL_GPIO_Init
 122              	.LVL2:
4136:Src/main.c    **** 
4137:Src/main.c    **** 
4138:Src/main.c    ****   /*Configure GPIO pin : IR_IN_Pin */
4139:Src/main.c    **** /*
4140:Src/main.c    ****   GPIO_InitStruct.Pin = IR_IN_Pin;
4141:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
4142:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
4143:Src/main.c    ****   HAL_GPIO_Init(IR_IN_GPIO_Port, &GPIO_InitStruct);
4144:Src/main.c    **** */
4145:Src/main.c    ****   /*Configure GPIO pin : RX1_Pin */
4146:Src/main.c    ****   /*
4147:Src/main.c    ****   GPIO_InitStruct.Pin = RX1_Pin;
4148:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
4149:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
4150:Src/main.c    ****   HAL_GPIO_Init(RX1_GPIO_Port, &GPIO_InitStruct);
4151:Src/main.c    **** */
4152:Src/main.c    **** #if 0
4153:Src/main.c    ****    GPIO_InitStruct.Pin =DOWN_KEY_Pin|UP_KEY_Pin|MENU_KEY_Pin|POWER_KEY_Pin/*|TOUCH_INT*/;
4154:Src/main.c    ****   // GPIO_InitStruct.Pin =MENU_KEY_Pin|POWER_KEY_Pin;
ARM GAS  /tmp/ccxsI2YD.s 			page 76


4155:Src/main.c    ****    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
4156:Src/main.c    ****    GPIO_InitStruct.Pull = GPIO_PULLUP;
4157:Src/main.c    ****    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
4158:Src/main.c    **** #endif
4159:Src/main.c    **** 
4160:Src/main.c    ****   GPIO_InitStruct.Pin =(/*PANEL_EN_Pin|*//*TOUCH_RESET|*/VS_RST_Pin|STM_SCL_Pin|STM_SDA_Pin);
 123              		.loc 1 4160 0
 124 008e 4FF4E053 		mov	r3, #7168
 125 0092 0493     		str	r3, [sp, #16]
4161:Src/main.c    **** //  GPIO_InitStruct.Pin =(PANEL_EN_Pin|TOUCH_RESET);
4162:Src/main.c    **** //  GPIO_InitStruct.Pin =(PANEL_EN_Pin|BL_PWM_Pin);
4163:Src/main.c    ****    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;//GPIO_MODE_OUTPUT_PP;///GPIO_MODE_OUTPUT_OD;
 126              		.loc 1 4163 0
 127 0094 0594     		str	r4, [sp, #20]
4164:Src/main.c    ****    GPIO_InitStruct.Pull =GPIO_PULLUP;// GPIO_PULLUP;
 128              		.loc 1 4164 0
 129 0096 0694     		str	r4, [sp, #24]
4165:Src/main.c    ****    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 130              		.loc 1 4165 0
 131 0098 0796     		str	r6, [sp, #28]
4166:Src/main.c    ****    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 132              		.loc 1 4166 0
 133 009a 0D48     		ldr	r0, .L3+8
 134 009c 04A9     		add	r1, sp, #16
 135 009e FFF7FEFF 		bl	HAL_GPIO_Init
 136              	.LVL3:
4167:Src/main.c    ****   /*Configure GPIO pins : SW1_Pin SW2_Pin SW3_Pin SW4_Pin 
4168:Src/main.c    ****                            SW5_Pin SW6_Pin SW7_Pin */
4169:Src/main.c    **** //  GPIO_InitStruct.Pin = SW1_Pin|SW2_Pin|SW3_Pin|SW4_Pin 
4170:Src/main.c    ****    //                      |SW5_Pin|SW6_Pin|SW7_Pin|DOWN_KEY_Pin|UP_KEY_Pin|MENU_KEY_Pin|POWER_KEY_
4171:Src/main.c    ****   /*
4172:Src/main.c    **** 
4173:Src/main.c    ****   GPIO_InitStruct.Pin =DOWN_KEY_Pin|UP_KEY_Pin|MENU_KEY_Pin|POWER_KEY_Pin|TOUCH_INT;
4174:Src/main.c    ****  // GPIO_InitStruct.Pin =MENU_KEY_Pin|POWER_KEY_Pin;
4175:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
4176:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
4177:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
4178:Src/main.c    **** */
4179:Src/main.c    **** /*
4180:Src/main.c    ****   GPIO_InitStruct.Pin =DOWN_KEY_Pin|UP_KEY_Pin;
4181:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
4182:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
4183:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
4184:Src/main.c    **** */
4185:Src/main.c    ****   GPIO_InitStruct.Pin =TP2824_REST/*LCD_PWR_Pin|TTLI1_RES_Pin|AUD_SEL2_Pin|GREEN_LED_Pin |RED_LED_P
 137              		.loc 1 4185 0
 138 00a2 0496     		str	r6, [sp, #16]
4186:Src/main.c    **** //  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
4187:Src/main.c    **** //   GPIO_InitStruct.Pull = GPIO_PULLUP;
4188:Src/main.c    ****    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 139              		.loc 1 4188 0
 140 00a4 0594     		str	r4, [sp, #20]
4189:Src/main.c    ****    GPIO_InitStruct.Pull = GPIO_PULLUP;
 141              		.loc 1 4189 0
 142 00a6 0694     		str	r4, [sp, #24]
4190:Src/main.c    **** 
4191:Src/main.c    ****    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  /tmp/ccxsI2YD.s 			page 77


 143              		.loc 1 4191 0
 144 00a8 0796     		str	r6, [sp, #28]
4192:Src/main.c    ****    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 145              		.loc 1 4192 0
 146 00aa 0A4E     		ldr	r6, .L3+12
 147 00ac 3046     		mov	r0, r6
 148 00ae 04A9     		add	r1, sp, #16
 149 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 150              	.LVL4:
4193:Src/main.c    **** 
4194:Src/main.c    **** 
4195:Src/main.c    **** //  GPIO_InitStruct.Pin =GREEN_LED_Pin|RED_LED_Pin;
4196:Src/main.c    ****   // GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
4197:Src/main.c    ****    //GPIO_InitStruct.Pull = GPIO_NOPULL;
4198:Src/main.c    ****    //GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
4199:Src/main.c    ****    //HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
4200:Src/main.c    **** 
4201:Src/main.c    ****   GPIO_InitStruct.Pin = TP2824_IRQ|MCU_WAKEUP|AUD_I2C_MUTE_Pin/*| JUMP_KEY_Pin*/;
 151              		.loc 1 4201 0
 152 00b4 4923     		movs	r3, #73
 153 00b6 0493     		str	r3, [sp, #16]
4202:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 154              		.loc 1 4202 0
 155 00b8 0595     		str	r5, [sp, #20]
4203:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 156              		.loc 1 4203 0
 157 00ba 0694     		str	r4, [sp, #24]
4204:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 158              		.loc 1 4204 0
 159 00bc 3046     		mov	r0, r6
 160 00be 04A9     		add	r1, sp, #16
 161 00c0 FFF7FEFF 		bl	HAL_GPIO_Init
 162              	.LVL5:
4205:Src/main.c    **** 
4206:Src/main.c    **** /*
4207:Src/main.c    ****   GPIO_InitStruct.Pin =AUD_SEL1_Pin;
4208:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
4209:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
4210:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
4211:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
4212:Src/main.c    ****   */
4213:Src/main.c    **** 
4214:Src/main.c    **** 
4215:Src/main.c    **** 	
4216:Src/main.c    **** 
4217:Src/main.c    ****   /* EXTI interrupt init*/
4218:Src/main.c    **** /*
4219:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI2_IRQn, 0, 0);
4220:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI2_IRQn);
4221:Src/main.c    **** */
4222:Src/main.c    **** }
 163              		.loc 1 4222 0
 164 00c4 09B0     		add	sp, sp, #36
 165              	.LCFI2:
 166              		.cfi_def_cfa_offset 20
 167              		@ sp needed
 168 00c6 F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  /tmp/ccxsI2YD.s 			page 78


 169              	.L4:
 170              		.align	2
 171              	.L3:
 172 00c8 00100240 		.word	1073876992
 173 00cc 00080140 		.word	1073809408
 174 00d0 000C0140 		.word	1073810432
 175 00d4 00100140 		.word	1073811456
 176              		.cfi_endproc
 177              	.LFE96:
 179              		.section	.text.MX_TIM3_Init,"ax",%progbits
 180              		.align	2
 181              		.thumb
 182              		.thumb_func
 184              	MX_TIM3_Init:
 185              	.LFB93:
4001:Src/main.c    **** 
 186              		.loc 1 4001 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 24
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190 0000 30B5     		push	{r4, r5, lr}
 191              	.LCFI3:
 192              		.cfi_def_cfa_offset 12
 193              		.cfi_offset 4, -12
 194              		.cfi_offset 5, -8
 195              		.cfi_offset 14, -4
 196 0002 87B0     		sub	sp, sp, #28
 197              	.LCFI4:
 198              		.cfi_def_cfa_offset 40
4007:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 199              		.loc 1 4007 0
 200 0004 0024     		movs	r4, #0
 201 0006 0294     		str	r4, [sp, #8]
 202 0008 0394     		str	r4, [sp, #12]
 203 000a 0494     		str	r4, [sp, #16]
 204 000c 0594     		str	r4, [sp, #20]
4008:Src/main.c    **** 
 205              		.loc 1 4008 0
 206 000e 0094     		str	r4, [sp]
 207 0010 0194     		str	r4, [sp, #4]
4013:Src/main.c    ****   htim3.Init.Prescaler = 35;
 208              		.loc 1 4013 0
 209 0012 0F4D     		ldr	r5, .L7
 210 0014 0F4B     		ldr	r3, .L7+4
 211 0016 2B60     		str	r3, [r5]
4014:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 212              		.loc 1 4014 0
 213 0018 2323     		movs	r3, #35
 214 001a 6B60     		str	r3, [r5, #4]
4015:Src/main.c    ****   htim3.Init.Period = 9;
 215              		.loc 1 4015 0
 216 001c AC60     		str	r4, [r5, #8]
4016:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 217              		.loc 1 4016 0
 218 001e 0923     		movs	r3, #9
 219 0020 EB60     		str	r3, [r5, #12]
4017:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
ARM GAS  /tmp/ccxsI2YD.s 			page 79


 220              		.loc 1 4017 0
 221 0022 2C61     		str	r4, [r5, #16]
4018:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 222              		.loc 1 4018 0
 223 0024 8023     		movs	r3, #128
 224 0026 AB61     		str	r3, [r5, #24]
4019:Src/main.c    ****   {
 225              		.loc 1 4019 0
 226 0028 2846     		mov	r0, r5
 227 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 228              	.LVL6:
4023:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 229              		.loc 1 4023 0
 230 002e 06A9     		add	r1, sp, #24
 231 0030 4FF48053 		mov	r3, #4096
 232 0034 41F8103D 		str	r3, [r1, #-16]!
4024:Src/main.c    ****   {
 233              		.loc 1 4024 0
 234 0038 2846     		mov	r0, r5
 235 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 236              	.LVL7:
4028:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 237              		.loc 1 4028 0
 238 003e 0094     		str	r4, [sp]
4029:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 239              		.loc 1 4029 0
 240 0040 0194     		str	r4, [sp, #4]
4030:Src/main.c    ****   {
 241              		.loc 1 4030 0
 242 0042 2846     		mov	r0, r5
 243 0044 6946     		mov	r1, sp
 244 0046 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 245              	.LVL8:
4038:Src/main.c    **** 
 246              		.loc 1 4038 0
 247 004a 07B0     		add	sp, sp, #28
 248              	.LCFI5:
 249              		.cfi_def_cfa_offset 12
 250              		@ sp needed
 251 004c 30BD     		pop	{r4, r5, pc}
 252              	.L8:
 253 004e 00BF     		.align	2
 254              	.L7:
 255 0050 00000000 		.word	htim3
 256 0054 00040040 		.word	1073742848
 257              		.cfi_endproc
 258              	.LFE93:
 260              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 261              		.align	2
 262              		.thumb
 263              		.thumb_func
 265              	MX_USART1_UART_Init:
 266              	.LFB94:
4046:Src/main.c    **** 
 267              		.loc 1 4046 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccxsI2YD.s 			page 80


 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271 0000 08B5     		push	{r3, lr}
 272              	.LCFI6:
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 3, -8
 275              		.cfi_offset 14, -4
4055:Src/main.c    **** //  huart1.Init.BaudRate = 9600;
 276              		.loc 1 4055 0
 277 0002 0848     		ldr	r0, .L11
 278 0004 084B     		ldr	r3, .L11+4
 279 0006 0360     		str	r3, [r0]
4057:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 280              		.loc 1 4057 0
 281 0008 4FF4E133 		mov	r3, #115200
 282 000c 4360     		str	r3, [r0, #4]
4058:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 283              		.loc 1 4058 0
 284 000e 0023     		movs	r3, #0
 285 0010 8360     		str	r3, [r0, #8]
4059:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 286              		.loc 1 4059 0
 287 0012 C360     		str	r3, [r0, #12]
4060:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 288              		.loc 1 4060 0
 289 0014 0361     		str	r3, [r0, #16]
4061:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 290              		.loc 1 4061 0
 291 0016 0C22     		movs	r2, #12
 292 0018 4261     		str	r2, [r0, #20]
4062:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 293              		.loc 1 4062 0
 294 001a 8361     		str	r3, [r0, #24]
4063:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 295              		.loc 1 4063 0
 296 001c C361     		str	r3, [r0, #28]
4064:Src/main.c    ****   {
 297              		.loc 1 4064 0
 298 001e FFF7FEFF 		bl	HAL_UART_Init
 299              	.LVL9:
 300 0022 08BD     		pop	{r3, pc}
 301              	.L12:
 302              		.align	2
 303              	.L11:
 304 0024 00000000 		.word	huart1
 305 0028 00380140 		.word	1073821696
 306              		.cfi_endproc
 307              	.LFE94:
 309              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 310              		.align	2
 311              		.thumb
 312              		.thumb_func
 314              	MX_USART2_UART_Init:
 315              	.LFB95:
4080:Src/main.c    **** 
 316              		.loc 1 4080 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccxsI2YD.s 			page 81


 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320 0000 08B5     		push	{r3, lr}
 321              	.LCFI7:
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 3, -8
 324              		.cfi_offset 14, -4
4089:Src/main.c    ****   huart2.Init.BaudRate = 38400;
 325              		.loc 1 4089 0
 326 0002 0848     		ldr	r0, .L15
 327 0004 084B     		ldr	r3, .L15+4
 328 0006 0360     		str	r3, [r0]
4090:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 329              		.loc 1 4090 0
 330 0008 4FF41643 		mov	r3, #38400
 331 000c 4360     		str	r3, [r0, #4]
4091:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 332              		.loc 1 4091 0
 333 000e 0023     		movs	r3, #0
 334 0010 8360     		str	r3, [r0, #8]
4092:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 335              		.loc 1 4092 0
 336 0012 C360     		str	r3, [r0, #12]
4093:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 337              		.loc 1 4093 0
 338 0014 0361     		str	r3, [r0, #16]
4094:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 339              		.loc 1 4094 0
 340 0016 0C22     		movs	r2, #12
 341 0018 4261     		str	r2, [r0, #20]
4095:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 342              		.loc 1 4095 0
 343 001a 8361     		str	r3, [r0, #24]
4096:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 344              		.loc 1 4096 0
 345 001c C361     		str	r3, [r0, #28]
4097:Src/main.c    ****   {
 346              		.loc 1 4097 0
 347 001e FFF7FEFF 		bl	HAL_UART_Init
 348              	.LVL10:
 349 0022 08BD     		pop	{r3, pc}
 350              	.L16:
 351              		.align	2
 352              	.L15:
 353 0024 00000000 		.word	huart2
 354 0028 00440040 		.word	1073759232
 355              		.cfi_endproc
 356              	.LFE95:
 358              		.section	.text.HDMI_AudioModeDetect,"ax",%progbits
 359              		.align	2
 360              		.thumb
 361              		.thumb_func
 363              	HDMI_AudioModeDetect:
 364              	.LFB73:
1309:Src/main.c    ****     tByte pbAudioSampleFreq, pbValidCh ;
 365              		.loc 1 1309 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccxsI2YD.s 			page 82


 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369 0000 00B5     		push	{lr}
 370              	.LCFI8:
 371              		.cfi_def_cfa_offset 4
 372              		.cfi_offset 14, -4
 373 0002 83B0     		sub	sp, sp, #12
 374              	.LCFI9:
 375              		.cfi_def_cfa_offset 16
1311:Src/main.c    **** 
 376              		.loc 1 1311 0
 377 0004 02A8     		add	r0, sp, #8
 378 0006 0023     		movs	r3, #0
 379 0008 00F8013D 		strb	r3, [r0, #-1]!
1313:Src/main.c    **** 
 380              		.loc 1 1313 0
 381 000c 0DF10601 		add	r1, sp, #6
 382 0010 FFF7FEFF 		bl	getHDMIRXAudioInfo
 383              	.LVL11:
1315:Src/main.c    ****     {
 384              		.loc 1 1315 0
 385 0014 0D4B     		ldr	r3, .L20
 386 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 387 0018 042B     		cmp	r3, #4
 388 001a 0DD0     		beq	.L18
1317:Src/main.c    ****         {
 389              		.loc 1 1317 0
 390 001c 0C4A     		ldr	r2, .L20+4
 391 001e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 392 0020 9342     		cmp	r3, r2
 393 0022 09D1     		bne	.L18
1319:Src/main.c    ****             {
 394              		.loc 1 1319 0
 395 0024 0B4B     		ldr	r3, .L20+8
 396 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 397 0028 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 398 002c 8342     		cmp	r3, r0
 399 002e 03D0     		beq	.L18
1321:Src/main.c    ****                 HDMI_Tx_SetAudioFs(gPreAudioSampleFreq )  ;
 400              		.loc 1 1321 0
 401 0030 084B     		ldr	r3, .L20+8
 402 0032 1870     		strb	r0, [r3]
1322:Src/main.c    ****             }
 403              		.loc 1 1322 0
 404 0034 FFF7FEFF 		bl	HDMI_Tx_SetAudioFs
 405              	.LVL12:
 406              	.L18:
1326:Src/main.c    **** }
 407              		.loc 1 1326 0
 408 0038 054B     		ldr	r3, .L20+4
 409 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 410 003c 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 411 0040 054A     		ldr	r2, .L20+12
 412 0042 D154     		strb	r1, [r2, r3]
1327:Src/main.c    **** 
 413              		.loc 1 1327 0
 414 0044 03B0     		add	sp, sp, #12
 415              	.LCFI10:
ARM GAS  /tmp/ccxsI2YD.s 			page 83


 416              		.cfi_def_cfa_offset 4
 417              		@ sp needed
 418 0046 5DF804FB 		ldr	pc, [sp], #4
 419              	.L21:
 420 004a 00BF     		.align	2
 421              	.L20:
 422 004c 00000000 		.word	.LANCHOR0
 423 0050 00000000 		.word	gHDMI_Index
 424 0054 00000000 		.word	gPreAudioSampleFreq
 425 0058 00000000 		.word	.LANCHOR1
 426              		.cfi_endproc
 427              	.LFE73:
 429              		.section	.text._write,"ax",%progbits
 430              		.align	2
 431              		.global	_write
 432              		.thumb
 433              		.thumb_func
 435              	_write:
 436              	.LFB65:
 256:Src/main.c    ****     if ((file != STDOUT_FILENO) && (file != STDERR_FILENO))
 437              		.loc 1 256 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              	.LVL13:
 442 0000 10B5     		push	{r4, lr}
 443              	.LCFI11:
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 4, -8
 446              		.cfi_offset 14, -4
 257:Src/main.c    ****     {
 447              		.loc 1 257 0
 448 0002 0138     		subs	r0, r0, #1
 449              	.LVL14:
 450 0004 0128     		cmp	r0, #1
 451 0006 06D9     		bls	.L23
 259:Src/main.c    ****         return -1;
 452              		.loc 1 259 0
 453 0008 FFF7FEFF 		bl	__errno
 454              	.LVL15:
 455 000c 0923     		movs	r3, #9
 456 000e 0360     		str	r3, [r0]
 260:Src/main.c    ****     }
 457              		.loc 1 260 0
 458 0010 4FF0FF30 		mov	r0, #-1
 459 0014 10BD     		pop	{r4, pc}
 460              	.LVL16:
 461              	.L23:
 462 0016 1446     		mov	r4, r2
 263:Src/main.c    ****         HAL_UART_Transmit(&huart1, (uint8_t*)data, (uint16_t)len, 1000);
 463              		.loc 1 263 0
 464 0018 0548     		ldr	r0, .L28
 465 001a 92B2     		uxth	r2, r2
 466              	.LVL17:
 467 001c 4FF47A73 		mov	r3, #1000
 468 0020 FFF7FEFF 		bl	HAL_UART_Transmit
 469              	.LVL18:
ARM GAS  /tmp/ccxsI2YD.s 			page 84


 266:Src/main.c    **** }
 470              		.loc 1 266 0
 471 0024 08B1     		cbz	r0, .L26
 472 0026 0020     		movs	r0, #0
 473              	.LVL19:
 474 0028 10BD     		pop	{r4, pc}
 475              	.LVL20:
 476              	.L26:
 477 002a 2046     		mov	r0, r4
 478              	.LVL21:
 267:Src/main.c    **** #else
 479              		.loc 1 267 0
 480 002c 10BD     		pop	{r4, pc}
 481              	.LVL22:
 482              	.L29:
 483 002e 00BF     		.align	2
 484              	.L28:
 485 0030 00000000 		.word	huart1
 486              		.cfi_endproc
 487              	.LFE65:
 489              		.section	.text.Audio_Sel,"ax",%progbits
 490              		.align	2
 491              		.global	Audio_Sel
 492              		.thumb
 493              		.thumb_func
 495              	Audio_Sel:
 496              	.LFB66:
 279:Src/main.c    ****     gbAUDO_INDEX = mode ;
 497              		.loc 1 279 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              	.LVL23:
 502 0000 38B5     		push	{r3, r4, r5, lr}
 503              	.LCFI12:
 504              		.cfi_def_cfa_offset 16
 505              		.cfi_offset 3, -16
 506              		.cfi_offset 4, -12
 507              		.cfi_offset 5, -8
 508              		.cfi_offset 14, -4
 280:Src/main.c    ****     switch(mode)
 509              		.loc 1 280 0
 510 0002 5B4B     		ldr	r3, .L39
 511 0004 1870     		strb	r0, [r3]
 281:Src/main.c    ****     {
 512              		.loc 1 281 0
 513 0006 0428     		cmp	r0, #4
 514 0008 00F2B180 		bhi	.L30
 515 000c DFE800F0 		tbb	[pc, r0]
 516              	.L33:
 517 0010 20       		.byte	(.L32-.L33)/2
 518 0011 44       		.byte	(.L34-.L33)/2
 519 0012 68       		.byte	(.L35-.L33)/2
 520 0013 8C       		.byte	(.L36-.L33)/2
 521 0014 03       		.byte	(.L37-.L33)/2
 522 0015 00       		.p2align 1
 523              	.L37:
ARM GAS  /tmp/ccxsI2YD.s 			page 85


 291:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 524              		.loc 1 291 0
 525 0016 574D     		ldr	r5, .L39+4
 526 0018 2846     		mov	r0, r5
 527              	.LVL24:
 528 001a 4021     		movs	r1, #64
 529 001c 0122     		movs	r2, #1
 530 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 531              	.LVL25:
 292:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 532              		.loc 1 292 0
 533 0022 554C     		ldr	r4, .L39+8
 534 0024 2046     		mov	r0, r4
 535 0026 2021     		movs	r1, #32
 536 0028 0122     		movs	r2, #1
 537 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 538              	.LVL26:
 293:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 539              		.loc 1 293 0
 540 002e 2046     		mov	r0, r4
 541 0030 1021     		movs	r1, #16
 542 0032 0122     		movs	r2, #1
 543 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 544              	.LVL27:
 294:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 545              		.loc 1 294 0
 546 0038 2046     		mov	r0, r4
 547 003a 0821     		movs	r1, #8
 548 003c 0122     		movs	r2, #1
 549 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 550              	.LVL28:
 295:Src/main.c    ****         break ;
 551              		.loc 1 295 0
 552 0042 2846     		mov	r0, r5
 553 0044 4FF40041 		mov	r1, #32768
 554 0048 0122     		movs	r2, #1
 555 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 556              	.LVL29:
 296:Src/main.c    **** 
 557              		.loc 1 296 0
 558 004e 38BD     		pop	{r3, r4, r5, pc}
 559              	.LVL30:
 560              	.L32:
 307:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_RESET);
 561              		.loc 1 307 0
 562 0050 484D     		ldr	r5, .L39+4
 563 0052 2846     		mov	r0, r5
 564              	.LVL31:
 565 0054 4021     		movs	r1, #64
 566 0056 0122     		movs	r2, #1
 567 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 568              	.LVL32:
 308:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 569              		.loc 1 308 0
 570 005c 464C     		ldr	r4, .L39+8
 571 005e 2046     		mov	r0, r4
 572 0060 2021     		movs	r1, #32
ARM GAS  /tmp/ccxsI2YD.s 			page 86


 573 0062 0022     		movs	r2, #0
 574 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 575              	.LVL33:
 309:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 576              		.loc 1 309 0
 577 0068 2046     		mov	r0, r4
 578 006a 1021     		movs	r1, #16
 579 006c 0122     		movs	r2, #1
 580 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 581              	.LVL34:
 310:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 582              		.loc 1 310 0
 583 0072 2046     		mov	r0, r4
 584 0074 0821     		movs	r1, #8
 585 0076 0122     		movs	r2, #1
 586 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 587              	.LVL35:
 311:Src/main.c    **** 
 588              		.loc 1 311 0
 589 007c 2846     		mov	r0, r5
 590 007e 4FF40041 		mov	r1, #32768
 591 0082 0122     		movs	r2, #1
 592 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 593              	.LVL36:
 313:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[0] ;
 594              		.loc 1 313 0
 595 0088 3C4C     		ldr	r4, .L39+12
 596 008a 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 597 008c FFF7FEFF 		bl	HDMI_Tx_SetAudioFs
 598              	.LVL37:
 314:Src/main.c    ****         break ;
 599              		.loc 1 314 0
 600 0090 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 601 0092 3B4B     		ldr	r3, .L39+16
 602 0094 1A70     		strb	r2, [r3]
 315:Src/main.c    **** 
 603              		.loc 1 315 0
 604 0096 38BD     		pop	{r3, r4, r5, pc}
 605              	.LVL38:
 606              	.L34:
 326:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 607              		.loc 1 326 0
 608 0098 364D     		ldr	r5, .L39+4
 609 009a 2846     		mov	r0, r5
 610              	.LVL39:
 611 009c 4021     		movs	r1, #64
 612 009e 0122     		movs	r2, #1
 613 00a0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 614              	.LVL40:
 327:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_RESET);
 615              		.loc 1 327 0
 616 00a4 344C     		ldr	r4, .L39+8
 617 00a6 2046     		mov	r0, r4
 618 00a8 2021     		movs	r1, #32
 619 00aa 0122     		movs	r2, #1
 620 00ac FFF7FEFF 		bl	HAL_GPIO_WritePin
 621              	.LVL41:
ARM GAS  /tmp/ccxsI2YD.s 			page 87


 328:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 622              		.loc 1 328 0
 623 00b0 2046     		mov	r0, r4
 624 00b2 1021     		movs	r1, #16
 625 00b4 0022     		movs	r2, #0
 626 00b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 627              	.LVL42:
 329:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 628              		.loc 1 329 0
 629 00ba 2046     		mov	r0, r4
 630 00bc 0821     		movs	r1, #8
 631 00be 0122     		movs	r2, #1
 632 00c0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 633              	.LVL43:
 330:Src/main.c    **** 
 634              		.loc 1 330 0
 635 00c4 2846     		mov	r0, r5
 636 00c6 4FF40041 		mov	r1, #32768
 637 00ca 0122     		movs	r2, #1
 638 00cc FFF7FEFF 		bl	HAL_GPIO_WritePin
 639              	.LVL44:
 332:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[1] ;
 640              		.loc 1 332 0
 641 00d0 2A4C     		ldr	r4, .L39+12
 642 00d2 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 643 00d4 FFF7FEFF 		bl	HDMI_Tx_SetAudioFs
 644              	.LVL45:
 333:Src/main.c    ****         break ;
 645              		.loc 1 333 0
 646 00d8 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 647 00da 294B     		ldr	r3, .L39+16
 648 00dc 1A70     		strb	r2, [r3]
 334:Src/main.c    **** 
 649              		.loc 1 334 0
 650 00de 38BD     		pop	{r3, r4, r5, pc}
 651              	.LVL46:
 652              	.L35:
 344:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 653              		.loc 1 344 0
 654 00e0 244D     		ldr	r5, .L39+4
 655 00e2 2846     		mov	r0, r5
 656              	.LVL47:
 657 00e4 4021     		movs	r1, #64
 658 00e6 0022     		movs	r2, #0
 659 00e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 660              	.LVL48:
 345:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 661              		.loc 1 345 0
 662 00ec 224C     		ldr	r4, .L39+8
 663 00ee 2046     		mov	r0, r4
 664 00f0 2021     		movs	r1, #32
 665 00f2 0122     		movs	r2, #1
 666 00f4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 667              	.LVL49:
 346:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_RESET);
 668              		.loc 1 346 0
 669 00f8 2046     		mov	r0, r4
ARM GAS  /tmp/ccxsI2YD.s 			page 88


 670 00fa 1021     		movs	r1, #16
 671 00fc 0122     		movs	r2, #1
 672 00fe FFF7FEFF 		bl	HAL_GPIO_WritePin
 673              	.LVL50:
 347:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 674              		.loc 1 347 0
 675 0102 2046     		mov	r0, r4
 676 0104 0821     		movs	r1, #8
 677 0106 0022     		movs	r2, #0
 678 0108 FFF7FEFF 		bl	HAL_GPIO_WritePin
 679              	.LVL51:
 348:Src/main.c    **** 
 680              		.loc 1 348 0
 681 010c 2846     		mov	r0, r5
 682 010e 4FF40041 		mov	r1, #32768
 683 0112 0122     		movs	r2, #1
 684 0114 FFF7FEFF 		bl	HAL_GPIO_WritePin
 685              	.LVL52:
 350:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[2] ;
 686              		.loc 1 350 0
 687 0118 184C     		ldr	r4, .L39+12
 688 011a A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 689 011c FFF7FEFF 		bl	HDMI_Tx_SetAudioFs
 690              	.LVL53:
 351:Src/main.c    ****         break ;
 691              		.loc 1 351 0
 692 0120 A278     		ldrb	r2, [r4, #2]	@ zero_extendqisi2
 693 0122 174B     		ldr	r3, .L39+16
 694 0124 1A70     		strb	r2, [r3]
 352:Src/main.c    **** 
 695              		.loc 1 352 0
 696 0126 38BD     		pop	{r3, r4, r5, pc}
 697              	.LVL54:
 698              	.L36:
 362:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 699              		.loc 1 362 0
 700 0128 124D     		ldr	r5, .L39+4
 701 012a 2846     		mov	r0, r5
 702              	.LVL55:
 703 012c 4021     		movs	r1, #64
 704 012e 0022     		movs	r2, #0
 705 0130 FFF7FEFF 		bl	HAL_GPIO_WritePin
 706              	.LVL56:
 363:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 707              		.loc 1 363 0
 708 0134 104C     		ldr	r4, .L39+8
 709 0136 2046     		mov	r0, r4
 710 0138 2021     		movs	r1, #32
 711 013a 0122     		movs	r2, #1
 712 013c FFF7FEFF 		bl	HAL_GPIO_WritePin
 713              	.LVL57:
 364:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 714              		.loc 1 364 0
 715 0140 2046     		mov	r0, r4
 716 0142 1021     		movs	r1, #16
 717 0144 0122     		movs	r2, #1
 718 0146 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccxsI2YD.s 			page 89


 719              	.LVL58:
 365:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_RESET);
 720              		.loc 1 365 0
 721 014a 2046     		mov	r0, r4
 722 014c 0821     		movs	r1, #8
 723 014e 0122     		movs	r2, #1
 724 0150 FFF7FEFF 		bl	HAL_GPIO_WritePin
 725              	.LVL59:
 366:Src/main.c    **** 
 726              		.loc 1 366 0
 727 0154 2846     		mov	r0, r5
 728 0156 4FF40041 		mov	r1, #32768
 729 015a 0022     		movs	r2, #0
 730 015c FFF7FEFF 		bl	HAL_GPIO_WritePin
 731              	.LVL60:
 368:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[3] ;
 732              		.loc 1 368 0
 733 0160 064C     		ldr	r4, .L39+12
 734 0162 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 735 0164 FFF7FEFF 		bl	HDMI_Tx_SetAudioFs
 736              	.LVL61:
 369:Src/main.c    ****         break ;
 737              		.loc 1 369 0
 738 0168 E278     		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 739 016a 054B     		ldr	r3, .L39+16
 740 016c 1A70     		strb	r2, [r3]
 741              	.L30:
 742 016e 38BD     		pop	{r3, r4, r5, pc}
 743              	.L40:
 744              		.align	2
 745              	.L39:
 746 0170 00000000 		.word	.LANCHOR0
 747 0174 00080140 		.word	1073809408
 748 0178 000C0140 		.word	1073810432
 749 017c 00000000 		.word	.LANCHOR1
 750 0180 00000000 		.word	gPreAudioSampleFreq
 751              		.cfi_endproc
 752              	.LFE66:
 754              		.section	.text.SET_Audio_Mute,"ax",%progbits
 755              		.align	2
 756              		.global	SET_Audio_Mute
 757              		.thumb
 758              		.thumb_func
 760              	SET_Audio_Mute:
 761              	.LFB67:
 375:Src/main.c    **** 
 762              		.loc 1 375 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 0
 765              		@ frame_needed = 0, uses_anonymous_args = 0
 766              	.LVL62:
 767 0000 10B5     		push	{r4, lr}
 768              	.LCFI13:
 769              		.cfi_def_cfa_offset 8
 770              		.cfi_offset 4, -8
 771              		.cfi_offset 14, -4
 772 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccxsI2YD.s 			page 90


 377:Src/main.c    **** 	HAL_GPIO_WritePin(AUD_I2C_MUTE_Port,AUD_I2C_MUTE_Pin, GPIO_PIN_RESET);
 773              		.loc 1 377 0
 774 0004 0128     		cmp	r0, #1
 775 0006 05D1     		bne	.L42
 378:Src/main.c    **** else
 776              		.loc 1 378 0
 777 0008 0748     		ldr	r0, .L45
 778              	.LVL63:
 779 000a 0821     		movs	r1, #8
 780 000c 0022     		movs	r2, #0
 781 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 782              	.LVL64:
 783 0012 04E0     		b	.L43
 784              	.LVL65:
 785              	.L42:
 380:Src/main.c    **** 
 786              		.loc 1 380 0
 787 0014 0448     		ldr	r0, .L45
 788              	.LVL66:
 789 0016 0821     		movs	r1, #8
 790 0018 0122     		movs	r2, #1
 791 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 792              	.LVL67:
 793              	.L43:
 382:Src/main.c    **** 
 794              		.loc 1 382 0
 795 001e 0348     		ldr	r0, .L45+4
 796 0020 2146     		mov	r1, r4
 797 0022 FFF7FEFF 		bl	Printf
 798              	.LVL68:
 799 0026 10BD     		pop	{r4, pc}
 800              	.L46:
 801              		.align	2
 802              	.L45:
 803 0028 00100140 		.word	1073811456
 804 002c 00000000 		.word	.LC0
 805              		.cfi_endproc
 806              	.LFE67:
 808              		.section	.text.InitialTimerEvent,"ax",%progbits
 809              		.align	2
 810              		.global	InitialTimerEvent
 811              		.thumb
 812              		.thumb_func
 814              	InitialTimerEvent:
 815              	.LFB68:
 400:Src/main.c    **** 	MCUTimerInitialTimerEvent();  //clear all of timer event	
 816              		.loc 1 400 0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 0, uses_anonymous_args = 0
 820 0000 08B5     		push	{r3, lr}
 821              	.LCFI14:
 822              		.cfi_def_cfa_offset 8
 823              		.cfi_offset 3, -8
 824              		.cfi_offset 14, -4
 401:Src/main.c    **** 
 825              		.loc 1 401 0
ARM GAS  /tmp/ccxsI2YD.s 			page 91


 826 0002 FFF7FEFF 		bl	MCUTimerInitialTimerEvent
 827              	.LVL69:
 828 0006 08BD     		pop	{r3, pc}
 829              		.cfi_endproc
 830              	.LFE68:
 832              		.section	.text.GetRS232_CMD,"ax",%progbits
 833              		.align	2
 834              		.global	GetRS232_CMD
 835              		.thumb
 836              		.thumb_func
 838              	GetRS232_CMD:
 839              	.LFB69:
 424:Src/main.c    ****     char achstr[3] ;
 840              		.loc 1 424 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 8
 843              		@ frame_needed = 0, uses_anonymous_args = 0
 428:Src/main.c    ****     {
 844              		.loc 1 428 0
 845 0000 164B     		ldr	r3, .L53
 846 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 847 0004 012B     		cmp	r3, #1
 848 0006 27D1     		bne	.L52
 424:Src/main.c    ****     char achstr[3] ;
 849              		.loc 1 424 0
 850 0008 10B5     		push	{r4, lr}
 851              	.LCFI15:
 852              		.cfi_def_cfa_offset 8
 853              		.cfi_offset 4, -8
 854              		.cfi_offset 14, -4
 855 000a 82B0     		sub	sp, sp, #8
 856              	.LCFI16:
 857              		.cfi_def_cfa_offset 16
 430:Src/main.c    ****         printf("RxBufIndex=%d,str=%s\r\n",RxBufIndex, gRxbuf);
 858              		.loc 1 430 0
 859 000c 0022     		movs	r2, #0
 860 000e 134B     		ldr	r3, .L53
 861 0010 1A70     		strb	r2, [r3]
 431:Src/main.c    ****         if ( RxBufIndex >= 4 )
 862              		.loc 1 431 0
 863 0012 134C     		ldr	r4, .L53+4
 864 0014 2168     		ldr	r1, [r4]
 865 0016 1348     		ldr	r0, .L53+8
 866 0018 134A     		ldr	r2, .L53+12
 867 001a FFF7FEFF 		bl	printf
 868              	.LVL70:
 432:Src/main.c    ****         {
 869              		.loc 1 432 0
 870 001e 2368     		ldr	r3, [r4]
 871 0020 032B     		cmp	r3, #3
 872 0022 17DD     		ble	.L49
 434:Src/main.c    ****             {
 873              		.loc 1 434 0
 874 0024 104B     		ldr	r3, .L53+12
 875 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 876 0028 472B     		cmp	r3, #71
 877 002a 13D1     		bne	.L49
ARM GAS  /tmp/ccxsI2YD.s 			page 92


 434:Src/main.c    ****             {
 878              		.loc 1 434 0 is_stmt 0 discriminator 1
 879 002c 0E4B     		ldr	r3, .L53+12
 880 002e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 881 0030 672B     		cmp	r3, #103
 882 0032 0FD1     		bne	.L49
 436:Src/main.c    ****                 memcpy(&achstr[0], &gRxbuf[1], 2 ) ;
 883              		.loc 1 436 0 is_stmt 1
 884 0034 0023     		movs	r3, #0
 885 0036 8DF80630 		strb	r3, [sp, #6]
 437:Src/main.c    ****                 IrNum = strtol(achstr, &endptr, 16) ;
 886              		.loc 1 437 0
 887 003a 0C4B     		ldr	r3, .L53+16
 888 003c 1B88     		ldrh	r3, [r3]	@ unaligned
 889 003e ADF80430 		strh	r3, [sp, #4]	@ unaligned
 438:Src/main.c    ****                 printf("IrNum=0x%02x\r\n",(int)IrNum);
 890              		.loc 1 438 0
 891 0042 01A8     		add	r0, sp, #4
 892 0044 6946     		mov	r1, sp
 893 0046 1022     		movs	r2, #16
 894 0048 FFF7FEFF 		bl	strtol
 895              	.LVL71:
 896 004c 0146     		mov	r1, r0
 897              	.LVL72:
 439:Src/main.c    ****             }
 898              		.loc 1 439 0
 899 004e 0848     		ldr	r0, .L53+20
 900              	.LVL73:
 901 0050 FFF7FEFF 		bl	printf
 902              	.LVL74:
 903              	.L49:
 446:Src/main.c    **** 
 904              		.loc 1 446 0
 905 0054 02B0     		add	sp, sp, #8
 906              	.LCFI17:
 907              		.cfi_def_cfa_offset 8
 908              		@ sp needed
 909 0056 10BD     		pop	{r4, pc}
 910              	.L52:
 911              	.LCFI18:
 912              		.cfi_def_cfa_offset 0
 913              		.cfi_restore 4
 914              		.cfi_restore 14
 915 0058 7047     		bx	lr
 916              	.L54:
 917 005a 00BF     		.align	2
 918              	.L53:
 919 005c 00000000 		.word	.LANCHOR2
 920 0060 00000000 		.word	.LANCHOR3
 921 0064 18000000 		.word	.LC1
 922 0068 00000000 		.word	.LANCHOR4
 923 006c 01000000 		.word	.LANCHOR4+1
 924 0070 30000000 		.word	.LC2
 925              		.cfi_endproc
 926              	.LFE69:
 928              		.section	.text.setloopoutmode,"ax",%progbits
 929              		.align	2
ARM GAS  /tmp/ccxsI2YD.s 			page 93


 930              		.global	setloopoutmode
 931              		.thumb
 932              		.thumb_func
 934              	setloopoutmode:
 935              	.LFB70:
 450:Src/main.c    **** /*
 936              		.loc 1 450 0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940              	.LVL75:
 941 0000 70B5     		push	{r4, r5, r6, lr}
 942              	.LCFI19:
 943              		.cfi_def_cfa_offset 16
 944              		.cfi_offset 4, -16
 945              		.cfi_offset 5, -12
 946              		.cfi_offset 6, -8
 947              		.cfi_offset 14, -4
 948 0002 0446     		mov	r4, r0
 458:Src/main.c    ****     {
 949              		.loc 1 458 0
 950 0004 1328     		cmp	r0, #19
 951 0006 00F2DB81 		bhi	.L56
 952 000a DFE810F0 		tbh	[pc, r0, lsl #1]
 953              	.L58:
 954 000e 1400     		.2byte	(.L57-.L58)/2
 955 0010 2500     		.2byte	(.L59-.L58)/2
 956 0012 3600     		.2byte	(.L60-.L58)/2
 957 0014 4800     		.2byte	(.L61-.L58)/2
 958 0016 5A00     		.2byte	(.L62-.L58)/2
 959 0018 8100     		.2byte	(.L63-.L58)/2
 960 001a D901     		.2byte	(.L56-.L58)/2
 961 001c D901     		.2byte	(.L56-.L58)/2
 962 001e D901     		.2byte	(.L56-.L58)/2
 963 0020 9000     		.2byte	(.L64-.L58)/2
 964 0022 A701     		.2byte	(.L65-.L58)/2
 965 0024 A900     		.2byte	(.L66-.L58)/2
 966 0026 C200     		.2byte	(.L67-.L58)/2
 967 0028 DC00     		.2byte	(.L68-.L58)/2
 968 002a F600     		.2byte	(.L69-.L58)/2
 969 002c 1101     		.2byte	(.L70-.L58)/2
 970 002e 2B01     		.2byte	(.L71-.L58)/2
 971 0030 4501     		.2byte	(.L72-.L58)/2
 972 0032 C101     		.2byte	(.L73-.L58)/2
 973 0034 5E01     		.2byte	(.L74-.L58)/2
 974              		.p2align 1
 975              	.L57:
 462:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 976              		.loc 1 462 0
 977 0036 B24B     		ldr	r3, .L76
 978 0038 0022     		movs	r2, #0
 979 003a 1A70     		strb	r2, [r3]
 463:Src/main.c    **** 	 OSD_MIRROR[0]=CAMA_M;
 980              		.loc 1 463 0
 981 003c 0125     		movs	r5, #1
 982 003e 5D70     		strb	r5, [r3, #1]
 464:Src/main.c    **** 	 gabVXIS_Input_mirrorH[0]=CAMA_M;
ARM GAS  /tmp/ccxsI2YD.s 			page 94


 983              		.loc 1 464 0
 984 0040 B04B     		ldr	r3, .L76+4
 985 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 986 0044 B04A     		ldr	r2, .L76+8
 987 0046 1370     		strb	r3, [r2]
 465:Src/main.c    ****         printf("VS4210_MODE0_w0\r\n") ;
 988              		.loc 1 465 0
 989 0048 B04A     		ldr	r2, .L76+12
 990 004a 1370     		strb	r3, [r2]
 466:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 991              		.loc 1 466 0
 992 004c B048     		ldr	r0, .L76+16
 993              	.LVL76:
 994 004e FFF7FEFF 		bl	puts
 995              	.LVL77:
 467:Src/main.c    ****         break ;
 996              		.loc 1 467 0
 997 0052 B04B     		ldr	r3, .L76+20
 998 0054 1D70     		strb	r5, [r3]
 468:Src/main.c    ****     }
 999              		.loc 1 468 0
 1000 0056 B3E1     		b	.L56
 1001              	.LVL78:
 1002              	.L59:
 472:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 1003              		.loc 1 472 0
 1004 0058 A94A     		ldr	r2, .L76
 1005 005a 0123     		movs	r3, #1
 1006 005c 1370     		strb	r3, [r2]
 473:Src/main.c    ****    	 OSD_MIRROR[0]=CAMB_M;
 1007              		.loc 1 473 0
 1008 005e 0221     		movs	r1, #2
 1009 0060 5170     		strb	r1, [r2, #1]
 474:Src/main.c    **** 	 gabVXIS_Input_mirrorH[1]=CAMB_M; 
 1010              		.loc 1 474 0
 1011 0062 AD4A     		ldr	r2, .L76+24
 1012 0064 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1013 0066 A849     		ldr	r1, .L76+8
 1014 0068 0A70     		strb	r2, [r1]
 475:Src/main.c    **** 	 OSD_SPEAKER[0]=ON;
 1015              		.loc 1 475 0
 1016 006a A849     		ldr	r1, .L76+12
 1017 006c 4A70     		strb	r2, [r1, #1]
 476:Src/main.c    ****         printf("VS4210_MODE0_w1\r\n") ;
 1018              		.loc 1 476 0
 1019 006e A94A     		ldr	r2, .L76+20
 1020 0070 1370     		strb	r3, [r2]
 477:Src/main.c    ****         break ;
 1021              		.loc 1 477 0
 1022 0072 AA48     		ldr	r0, .L76+28
 1023              	.LVL79:
 1024 0074 FFF7FEFF 		bl	puts
 1025              	.LVL80:
 478:Src/main.c    ****     }
 1026              		.loc 1 478 0
 1027 0078 A2E1     		b	.L56
 1028              	.LVL81:
ARM GAS  /tmp/ccxsI2YD.s 			page 95


 1029              	.L60:
 482:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 1030              		.loc 1 482 0
 1031 007a A14B     		ldr	r3, .L76
 1032 007c 0222     		movs	r2, #2
 1033 007e 1A70     		strb	r2, [r3]
 483:Src/main.c    **** 	 OSD_MIRROR[0]=CAMC_M;	
 1034              		.loc 1 483 0
 1035 0080 0322     		movs	r2, #3
 1036 0082 5A70     		strb	r2, [r3, #1]
 484:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 	 
 1037              		.loc 1 484 0
 1038 0084 A64B     		ldr	r3, .L76+32
 1039 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1040 0088 9F4A     		ldr	r2, .L76+8
 1041 008a 1370     		strb	r3, [r2]
 485:Src/main.c    **** 	 OSD_SPEAKER[0]=ON;
 1042              		.loc 1 485 0
 1043 008c 9F4A     		ldr	r2, .L76+12
 1044 008e 9370     		strb	r3, [r2, #2]
 486:Src/main.c    ****         printf("VS4210_MODE0_w2\r\n") ;
 1045              		.loc 1 486 0
 1046 0090 0122     		movs	r2, #1
 1047 0092 A04B     		ldr	r3, .L76+20
 1048 0094 1A70     		strb	r2, [r3]
 487:Src/main.c    ****         break ;
 1049              		.loc 1 487 0
 1050 0096 A348     		ldr	r0, .L76+36
 1051              	.LVL82:
 1052 0098 FFF7FEFF 		bl	puts
 1053              	.LVL83:
 488:Src/main.c    ****     }
 1054              		.loc 1 488 0
 1055 009c 90E1     		b	.L56
 1056              	.LVL84:
 1057              	.L61:
 492:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 1058              		.loc 1 492 0
 1059 009e 984B     		ldr	r3, .L76
 1060 00a0 0322     		movs	r2, #3
 1061 00a2 1A70     		strb	r2, [r3]
 493:Src/main.c    ****    	OSD_MIRROR[0]=CAMR_M;	
 1062              		.loc 1 493 0
 1063 00a4 0422     		movs	r2, #4
 1064 00a6 5A70     		strb	r2, [r3, #1]
 494:Src/main.c    **** 	gabVXIS_Input_mirrorH[3]=CAMR_M; 		
 1065              		.loc 1 494 0
 1066 00a8 9F4B     		ldr	r3, .L76+40
 1067 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1068 00ac 964A     		ldr	r2, .L76+8
 1069 00ae 1370     		strb	r3, [r2]
 495:Src/main.c    ****   	OSD_SPEAKER[0]=ON;
 1070              		.loc 1 495 0
 1071 00b0 964A     		ldr	r2, .L76+12
 1072 00b2 D370     		strb	r3, [r2, #3]
 496:Src/main.c    ****         printf("VS4210_MODE0_w3\r\n") ;
 1073              		.loc 1 496 0
ARM GAS  /tmp/ccxsI2YD.s 			page 96


 1074 00b4 0122     		movs	r2, #1
 1075 00b6 974B     		ldr	r3, .L76+20
 1076 00b8 1A70     		strb	r2, [r3]
 497:Src/main.c    ****         break ;
 1077              		.loc 1 497 0
 1078 00ba 9C48     		ldr	r0, .L76+44
 1079              	.LVL85:
 1080 00bc FFF7FEFF 		bl	puts
 1081              	.LVL86:
 498:Src/main.c    ****     }
 1082              		.loc 1 498 0
 1083 00c0 7EE1     		b	.L56
 1084              	.LVL87:
 1085              	.L62:
 502:Src/main.c    **** 	
 1086              		.loc 1 502 0
 1087 00c2 8F4B     		ldr	r3, .L76
 1088 00c4 1022     		movs	r2, #16
 1089 00c6 1A70     		strb	r2, [r3]
 504:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 1090              		.loc 1 504 0
 1091 00c8 0121     		movs	r1, #1
 1092 00ca 5970     		strb	r1, [r3, #1]
 505:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 1093              		.loc 1 505 0
 1094 00cc 0222     		movs	r2, #2
 1095 00ce 9A70     		strb	r2, [r3, #2]
 506:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 1096              		.loc 1 506 0
 1097 00d0 0322     		movs	r2, #3
 1098 00d2 DA70     		strb	r2, [r3, #3]
 507:Src/main.c    ****    	  OSD_MIRROR[0]=CAMA_M;	
 1099              		.loc 1 507 0
 1100 00d4 0422     		movs	r2, #4
 1101 00d6 1A71     		strb	r2, [r3, #4]
 508:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 1102              		.loc 1 508 0
 1103 00d8 8A4B     		ldr	r3, .L76+4
 1104 00da 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 1105 00dc 8A4B     		ldr	r3, .L76+8
 1106 00de 1E70     		strb	r6, [r3]
 509:Src/main.c    ****    	  OSD_MIRROR[2]=CAMC_M;	
 1107              		.loc 1 509 0
 1108 00e0 8D4A     		ldr	r2, .L76+24
 1109 00e2 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 1110 00e4 5D70     		strb	r5, [r3, #1]
 510:Src/main.c    ****    	  OSD_MIRROR[3]=CAMR_M;	
 1111              		.loc 1 510 0
 1112 00e6 8E4A     		ldr	r2, .L76+32
 1113 00e8 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1114              	.LVL88:
 1115 00ea 9870     		strb	r0, [r3, #2]
 511:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
 1116              		.loc 1 511 0
 1117 00ec 8E4A     		ldr	r2, .L76+40
 1118 00ee 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1119 00f0 DA70     		strb	r2, [r3, #3]
ARM GAS  /tmp/ccxsI2YD.s 			page 97


 512:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 1120              		.loc 1 512 0
 1121 00f2 864B     		ldr	r3, .L76+12
 1122 00f4 1E70     		strb	r6, [r3]
 513:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 		  
 1123              		.loc 1 513 0
 1124 00f6 5D70     		strb	r5, [r3, #1]
 514:Src/main.c    **** 	gabVXIS_Input_mirrorH[3]=CAMR_M; 		  
 1125              		.loc 1 514 0
 1126 00f8 9870     		strb	r0, [r3, #2]
 515:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
 1127              		.loc 1 515 0
 1128 00fa DA70     		strb	r2, [r3, #3]
 516:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;
 1129              		.loc 1 516 0
 1130 00fc 854B     		ldr	r3, .L76+20
 1131 00fe 0022     		movs	r2, #0
 1132 0100 1A70     		strb	r2, [r3]
 517:Src/main.c    **** 	  OSD_SPEAKER[2]=OFF;
 1133              		.loc 1 517 0
 1134 0102 5A70     		strb	r2, [r3, #1]
 518:Src/main.c    **** 	  OSD_SPEAKER[3]=ON;
 1135              		.loc 1 518 0
 1136 0104 9A70     		strb	r2, [r3, #2]
 519:Src/main.c    **** 
 1137              		.loc 1 519 0
 1138 0106 D970     		strb	r1, [r3, #3]
 521:Src/main.c    ****         break ;
 1139              		.loc 1 521 0
 1140 0108 8948     		ldr	r0, .L76+48
 1141 010a FFF7FEFF 		bl	puts
 1142              	.LVL89:
 522:Src/main.c    ****     }
 1143              		.loc 1 522 0
 1144 010e 57E1     		b	.L56
 1145              	.LVL90:
 1146              	.L63:
 527:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 1147              		.loc 1 527 0
 1148 0110 7B4B     		ldr	r3, .L76
 1149 0112 2022     		movs	r2, #32
 1150 0114 1A70     		strb	r2, [r3]
 528:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 1151              		.loc 1 528 0
 1152 0116 0122     		movs	r2, #1
 1153 0118 5A70     		strb	r2, [r3, #1]
 529:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 1154              		.loc 1 529 0
 1155 011a 0222     		movs	r2, #2
 1156 011c 9A70     		strb	r2, [r3, #2]
 530:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 1157              		.loc 1 530 0
 1158 011e 0322     		movs	r2, #3
 1159 0120 DA70     		strb	r2, [r3, #3]
 531:Src/main.c    ****         printf("VS4210_MODE2\r\n") ;
 1160              		.loc 1 531 0
 1161 0122 0422     		movs	r2, #4
ARM GAS  /tmp/ccxsI2YD.s 			page 98


 1162 0124 1A71     		strb	r2, [r3, #4]
 532:Src/main.c    ****         break ;
 1163              		.loc 1 532 0
 1164 0126 8348     		ldr	r0, .L76+52
 1165              	.LVL91:
 1166 0128 FFF7FEFF 		bl	puts
 1167              	.LVL92:
 533:Src/main.c    ****     }
 1168              		.loc 1 533 0
 1169 012c 48E1     		b	.L56
 1170              	.LVL93:
 1171              	.L64:
 912:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 1172              		.loc 1 912 0
 1173 012e 744B     		ldr	r3, .L76
 1174 0130 4022     		movs	r2, #64
 1175 0132 1A70     		strb	r2, [r3]
 913:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 1176              		.loc 1 913 0
 1177 0134 0122     		movs	r2, #1
 1178 0136 5A70     		strb	r2, [r3, #1]
 914:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 1179              		.loc 1 914 0
 1180 0138 0221     		movs	r1, #2
 1181 013a 9970     		strb	r1, [r3, #2]
 915:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 1182              		.loc 1 915 0
 1183 013c 714B     		ldr	r3, .L76+4
 1184 013e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1185              	.LVL94:
 1186 0140 714B     		ldr	r3, .L76+8
 1187 0142 1870     		strb	r0, [r3]
 916:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
 1188              		.loc 1 916 0
 1189 0144 7449     		ldr	r1, .L76+24
 1190 0146 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1191 0148 5970     		strb	r1, [r3, #1]
 917:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
 1192              		.loc 1 917 0
 1193 014a 704B     		ldr	r3, .L76+12
 1194 014c 1870     		strb	r0, [r3]
 918:Src/main.c    ****   	OSD_SPEAKER[0]=ON;
 1195              		.loc 1 918 0
 1196 014e 5970     		strb	r1, [r3, #1]
 919:Src/main.c    ****   	OSD_SPEAKER[1]=OFF;
 1197              		.loc 1 919 0
 1198 0150 704B     		ldr	r3, .L76+20
 1199 0152 1A70     		strb	r2, [r3]
 920:Src/main.c    ****         printf("VS4210_MODE12 ch1 ch2\r\n") ;
 1200              		.loc 1 920 0
 1201 0154 0022     		movs	r2, #0
 1202 0156 5A70     		strb	r2, [r3, #1]
 921:Src/main.c    ****         break ;
 1203              		.loc 1 921 0
 1204 0158 7748     		ldr	r0, .L76+56
 1205 015a FFF7FEFF 		bl	puts
 1206              	.LVL95:
ARM GAS  /tmp/ccxsI2YD.s 			page 99


 922:Src/main.c    ****     }
 1207              		.loc 1 922 0
 1208 015e 2FE1     		b	.L56
 1209              	.LVL96:
 1210              	.L66:
 926:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 1211              		.loc 1 926 0
 1212 0160 674B     		ldr	r3, .L76
 1213 0162 4022     		movs	r2, #64
 1214 0164 1A70     		strb	r2, [r3]
 927:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =4 ;
 1215              		.loc 1 927 0
 1216 0166 0122     		movs	r2, #1
 1217 0168 5A70     		strb	r2, [r3, #1]
 928:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 1218              		.loc 1 928 0
 1219 016a 0421     		movs	r1, #4
 1220 016c 9970     		strb	r1, [r3, #2]
 929:Src/main.c    ****    	  OSD_MIRROR[1]=CAMR_M;
 1221              		.loc 1 929 0
 1222 016e 654B     		ldr	r3, .L76+4
 1223 0170 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1224              	.LVL97:
 1225 0172 654B     		ldr	r3, .L76+8
 1226 0174 1870     		strb	r0, [r3]
 930:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
 1227              		.loc 1 930 0
 1228 0176 6C49     		ldr	r1, .L76+40
 1229 0178 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1230 017a 5970     		strb	r1, [r3, #1]
 931:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
 1231              		.loc 1 931 0
 1232 017c 634B     		ldr	r3, .L76+12
 1233 017e 1870     		strb	r0, [r3]
 932:Src/main.c    ****   	OSD_SPEAKER[0]=OFF;
 1234              		.loc 1 932 0
 1235 0180 5970     		strb	r1, [r3, #1]
 933:Src/main.c    ****   	OSD_SPEAKER[1]=ON;	  
 1236              		.loc 1 933 0
 1237 0182 644B     		ldr	r3, .L76+20
 1238 0184 0021     		movs	r1, #0
 1239 0186 1970     		strb	r1, [r3]
 934:Src/main.c    ****         printf("VS4210_MODE12 ch1 ch4\r\n") ;	
 1240              		.loc 1 934 0
 1241 0188 5A70     		strb	r2, [r3, #1]
 935:Src/main.c    **** 	break;
 1242              		.loc 1 935 0
 1243 018a 6C48     		ldr	r0, .L76+60
 1244 018c FFF7FEFF 		bl	puts
 1245              	.LVL98:
 936:Src/main.c    ****     	}
 1246              		.loc 1 936 0
 1247 0190 16E1     		b	.L56
 1248              	.LVL99:
 1249              	.L67:
 940:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 1250              		.loc 1 940 0
ARM GAS  /tmp/ccxsI2YD.s 			page 100


 1251 0192 5B4B     		ldr	r3, .L76
 1252 0194 4022     		movs	r2, #64
 1253 0196 1A70     		strb	r2, [r3]
 941:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 1254              		.loc 1 941 0
 1255 0198 0422     		movs	r2, #4
 1256 019a 5A70     		strb	r2, [r3, #1]
 942:Src/main.c    **** 	  OSD_MIRROR[0]=CAMR_M;	
 1257              		.loc 1 942 0
 1258 019c 0222     		movs	r2, #2
 1259 019e 9A70     		strb	r2, [r3, #2]
 943:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 1260              		.loc 1 943 0
 1261 01a0 614B     		ldr	r3, .L76+40
 1262 01a2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1263 01a4 584B     		ldr	r3, .L76+8
 1264 01a6 1970     		strb	r1, [r3]
 944:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMR_M;			  
 1265              		.loc 1 944 0
 1266 01a8 5B4A     		ldr	r2, .L76+24
 1267 01aa 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1268 01ac 5A70     		strb	r2, [r3, #1]
 945:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
 1269              		.loc 1 945 0
 1270 01ae 574B     		ldr	r3, .L76+12
 1271 01b0 1970     		strb	r1, [r3]
 946:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 1272              		.loc 1 946 0
 1273 01b2 5A70     		strb	r2, [r3, #1]
 947:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 1274              		.loc 1 947 0
 1275 01b4 574B     		ldr	r3, .L76+20
 1276 01b6 0122     		movs	r2, #1
 1277 01b8 1A70     		strb	r2, [r3]
 948:Src/main.c    ****         printf("VS4210_MODE12 ch4 ch2\r\n") ;	
 1278              		.loc 1 948 0
 1279 01ba 0022     		movs	r2, #0
 1280 01bc 5A70     		strb	r2, [r3, #1]
 949:Src/main.c    **** 	break;
 1281              		.loc 1 949 0
 1282 01be 6048     		ldr	r0, .L76+64
 1283              	.LVL100:
 1284 01c0 FFF7FEFF 		bl	puts
 1285              	.LVL101:
 950:Src/main.c    ****     	}
 1286              		.loc 1 950 0
 1287 01c4 FCE0     		b	.L56
 1288              	.LVL102:
 1289              	.L68:
 954:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 1290              		.loc 1 954 0
 1291 01c6 4E4B     		ldr	r3, .L76
 1292 01c8 4022     		movs	r2, #64
 1293 01ca 1A70     		strb	r2, [r3]
 955:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 1294              		.loc 1 955 0
 1295 01cc 0422     		movs	r2, #4
ARM GAS  /tmp/ccxsI2YD.s 			page 101


 1296 01ce 5A70     		strb	r2, [r3, #1]
 956:Src/main.c    **** 	  OSD_MIRROR[0]=CAMR_M;	
 1297              		.loc 1 956 0
 1298 01d0 0322     		movs	r2, #3
 1299 01d2 9A70     		strb	r2, [r3, #2]
 957:Src/main.c    ****    	  OSD_MIRROR[1]=CAMC_M;	
 1300              		.loc 1 957 0
 1301 01d4 544B     		ldr	r3, .L76+40
 1302 01d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1303 01d8 4B4B     		ldr	r3, .L76+8
 1304 01da 1970     		strb	r1, [r3]
 958:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMR_M;			  
 1305              		.loc 1 958 0
 1306 01dc 504A     		ldr	r2, .L76+32
 1307 01de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1308 01e0 5A70     		strb	r2, [r3, #1]
 959:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 	  
 1309              		.loc 1 959 0
 1310 01e2 4A4B     		ldr	r3, .L76+12
 1311 01e4 1970     		strb	r1, [r3]
 960:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 1312              		.loc 1 960 0
 1313 01e6 5A70     		strb	r2, [r3, #1]
 961:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 1314              		.loc 1 961 0
 1315 01e8 4A4B     		ldr	r3, .L76+20
 1316 01ea 0122     		movs	r2, #1
 1317 01ec 1A70     		strb	r2, [r3]
 962:Src/main.c    ****         printf("VS4210_MODE12 ch4 ch3\r\n") ;	
 1318              		.loc 1 962 0
 1319 01ee 0022     		movs	r2, #0
 1320 01f0 5A70     		strb	r2, [r3, #1]
 963:Src/main.c    **** 	break;
 1321              		.loc 1 963 0
 1322 01f2 5448     		ldr	r0, .L76+68
 1323              	.LVL103:
 1324 01f4 FFF7FEFF 		bl	puts
 1325              	.LVL104:
 964:Src/main.c    ****     	}
 1326              		.loc 1 964 0
 1327 01f8 E2E0     		b	.L56
 1328              	.LVL105:
 1329              	.L69:
 969:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 1330              		.loc 1 969 0
 1331 01fa 414B     		ldr	r3, .L76
 1332 01fc 4022     		movs	r2, #64
 1333 01fe 1A70     		strb	r2, [r3]
 970:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 1334              		.loc 1 970 0
 1335 0200 0222     		movs	r2, #2
 1336 0202 5A70     		strb	r2, [r3, #1]
 971:Src/main.c    **** 	  OSD_MIRROR[0]=CAMB_M;	
 1337              		.loc 1 971 0
 1338 0204 0122     		movs	r2, #1
 1339 0206 9A70     		strb	r2, [r3, #2]
 972:Src/main.c    ****    	  OSD_MIRROR[1]=CAMA_M;	
ARM GAS  /tmp/ccxsI2YD.s 			page 102


 1340              		.loc 1 972 0
 1341 0208 434B     		ldr	r3, .L76+24
 1342 020a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1343 020c 3E4B     		ldr	r3, .L76+8
 1344 020e 1970     		strb	r1, [r3]
 973:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMB_M;			  
 1345              		.loc 1 973 0
 1346 0210 3C48     		ldr	r0, .L76+4
 1347              	.LVL106:
 1348 0212 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1349 0214 5870     		strb	r0, [r3, #1]
 974:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
 1350              		.loc 1 974 0
 1351 0216 3D4B     		ldr	r3, .L76+12
 1352 0218 1970     		strb	r1, [r3]
 975:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 1353              		.loc 1 975 0
 1354 021a 4349     		ldr	r1, .L76+40
 1355 021c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1356 021e 5970     		strb	r1, [r3, #1]
 976:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 1357              		.loc 1 976 0
 1358 0220 3C4B     		ldr	r3, .L76+20
 1359 0222 1A70     		strb	r2, [r3]
 977:Src/main.c    ****         printf("VS4210_MODE12 ch2 ch1\r\n") ;	
 1360              		.loc 1 977 0
 1361 0224 0022     		movs	r2, #0
 1362 0226 5A70     		strb	r2, [r3, #1]
 978:Src/main.c    **** 	break;
 1363              		.loc 1 978 0
 1364 0228 4748     		ldr	r0, .L76+72
 1365 022a FFF7FEFF 		bl	puts
 1366              	.LVL107:
 979:Src/main.c    ****     	}
 1367              		.loc 1 979 0
 1368 022e C7E0     		b	.L56
 1369              	.LVL108:
 1370              	.L70:
 983:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 1371              		.loc 1 983 0
 1372 0230 334B     		ldr	r3, .L76
 1373 0232 4022     		movs	r2, #64
 1374 0234 1A70     		strb	r2, [r3]
 984:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 1375              		.loc 1 984 0
 1376 0236 0222     		movs	r2, #2
 1377 0238 5A70     		strb	r2, [r3, #1]
 985:Src/main.c    **** 	  OSD_MIRROR[0]=CAMB_M;	
 1378              		.loc 1 985 0
 1379 023a 0322     		movs	r2, #3
 1380 023c 9A70     		strb	r2, [r3, #2]
 986:Src/main.c    ****    	  OSD_MIRROR[1]=CAMC_M;	
 1381              		.loc 1 986 0
 1382 023e 364B     		ldr	r3, .L76+24
 1383 0240 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1384 0242 314B     		ldr	r3, .L76+8
 1385 0244 1970     		strb	r1, [r3]
ARM GAS  /tmp/ccxsI2YD.s 			page 103


 987:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMB_M;			  
 1386              		.loc 1 987 0
 1387 0246 364A     		ldr	r2, .L76+32
 1388 0248 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1389 024a 5A70     		strb	r2, [r3, #1]
 988:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 	  
 1390              		.loc 1 988 0
 1391 024c 2F4B     		ldr	r3, .L76+12
 1392 024e 1970     		strb	r1, [r3]
 989:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 1393              		.loc 1 989 0
 1394 0250 5A70     		strb	r2, [r3, #1]
 990:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 1395              		.loc 1 990 0
 1396 0252 304B     		ldr	r3, .L76+20
 1397 0254 0122     		movs	r2, #1
 1398 0256 1A70     		strb	r2, [r3]
 991:Src/main.c    ****         printf("VS4210_MODE12 ch2 ch3\r\n") ;	
 1399              		.loc 1 991 0
 1400 0258 0022     		movs	r2, #0
 1401 025a 5A70     		strb	r2, [r3, #1]
 992:Src/main.c    **** 	break;
 1402              		.loc 1 992 0
 1403 025c 3B48     		ldr	r0, .L76+76
 1404              	.LVL109:
 1405 025e FFF7FEFF 		bl	puts
 1406              	.LVL110:
 993:Src/main.c    ****     	}
 1407              		.loc 1 993 0
 1408 0262 ADE0     		b	.L56
 1409              	.LVL111:
 1410              	.L71:
 997:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2;
 1411              		.loc 1 997 0
 1412 0264 264B     		ldr	r3, .L76
 1413 0266 4022     		movs	r2, #64
 1414 0268 1A70     		strb	r2, [r3]
 998:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =4 ;
 1415              		.loc 1 998 0
 1416 026a 0222     		movs	r2, #2
 1417 026c 5A70     		strb	r2, [r3, #1]
 999:Src/main.c    **** 	  OSD_MIRROR[0]=CAMB_M;	
 1418              		.loc 1 999 0
 1419 026e 0422     		movs	r2, #4
 1420 0270 9A70     		strb	r2, [r3, #2]
1000:Src/main.c    ****    	  OSD_MIRROR[1]=CAMR_M;	
 1421              		.loc 1 1000 0
 1422 0272 294B     		ldr	r3, .L76+24
 1423 0274 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1424 0276 244B     		ldr	r3, .L76+8
 1425 0278 1970     		strb	r1, [r3]
1001:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMB_M;			  
 1426              		.loc 1 1001 0
 1427 027a 2B4A     		ldr	r2, .L76+40
 1428 027c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1429 027e 5A70     		strb	r2, [r3, #1]
1002:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
ARM GAS  /tmp/ccxsI2YD.s 			page 104


 1430              		.loc 1 1002 0
 1431 0280 224B     		ldr	r3, .L76+12
 1432 0282 1970     		strb	r1, [r3]
1003:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
 1433              		.loc 1 1003 0
 1434 0284 5A70     		strb	r2, [r3, #1]
1004:Src/main.c    **** 	  OSD_SPEAKER[1]=ON;		  
 1435              		.loc 1 1004 0
 1436 0286 234B     		ldr	r3, .L76+20
 1437 0288 0022     		movs	r2, #0
 1438 028a 1A70     		strb	r2, [r3]
1005:Src/main.c    ****         printf("VS4210_MODE12 ch2 ch4\r\n") ;	
 1439              		.loc 1 1005 0
 1440 028c 0122     		movs	r2, #1
 1441 028e 5A70     		strb	r2, [r3, #1]
1006:Src/main.c    **** 	break;
 1442              		.loc 1 1006 0
 1443 0290 2F48     		ldr	r0, .L76+80
 1444              	.LVL112:
 1445 0292 FFF7FEFF 		bl	puts
 1446              	.LVL113:
1007:Src/main.c    ****     	}
 1447              		.loc 1 1007 0
 1448 0296 93E0     		b	.L56
 1449              	.LVL114:
 1450              	.L72:
1013:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 1451              		.loc 1 1013 0
 1452 0298 194B     		ldr	r3, .L76
 1453 029a 4022     		movs	r2, #64
 1454 029c 1A70     		strb	r2, [r3]
1014:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 1455              		.loc 1 1014 0
 1456 029e 0122     		movs	r2, #1
 1457 02a0 5A70     		strb	r2, [r3, #1]
1015:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 1458              		.loc 1 1015 0
 1459 02a2 0321     		movs	r1, #3
 1460 02a4 9970     		strb	r1, [r3, #2]
1016:Src/main.c    ****    	  OSD_MIRROR[1]=CAMC_M;	
 1461              		.loc 1 1016 0
 1462 02a6 174B     		ldr	r3, .L76+4
 1463 02a8 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1464              	.LVL115:
 1465 02aa 174B     		ldr	r3, .L76+8
 1466 02ac 1870     		strb	r0, [r3]
1017:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
 1467              		.loc 1 1017 0
 1468 02ae 1C49     		ldr	r1, .L76+32
 1469 02b0 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1470 02b2 5970     		strb	r1, [r3, #1]
1018:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 	  
 1471              		.loc 1 1018 0
 1472 02b4 154B     		ldr	r3, .L76+12
 1473 02b6 1870     		strb	r0, [r3]
1019:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 1474              		.loc 1 1019 0
ARM GAS  /tmp/ccxsI2YD.s 			page 105


 1475 02b8 5970     		strb	r1, [r3, #1]
1020:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;	
 1476              		.loc 1 1020 0
 1477 02ba 164B     		ldr	r3, .L76+20
 1478 02bc 1A70     		strb	r2, [r3]
1021:Src/main.c    **** 	  
 1479              		.loc 1 1021 0
 1480 02be 0022     		movs	r2, #0
 1481 02c0 5A70     		strb	r2, [r3, #1]
1023:Src/main.c    **** 	break;
 1482              		.loc 1 1023 0
 1483 02c2 2448     		ldr	r0, .L76+84
 1484 02c4 FFF7FEFF 		bl	puts
 1485              	.LVL116:
1024:Src/main.c    ****     	}
 1486              		.loc 1 1024 0
 1487 02c8 7AE0     		b	.L56
 1488              	.LVL117:
 1489              	.L74:
1028:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 1490              		.loc 1 1028 0
 1491 02ca 0D4B     		ldr	r3, .L76
 1492 02cc 4022     		movs	r2, #64
 1493 02ce 1A70     		strb	r2, [r3]
1029:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 1494              		.loc 1 1029 0
 1495 02d0 0322     		movs	r2, #3
 1496 02d2 5A70     		strb	r2, [r3, #1]
1030:Src/main.c    **** 	  OSD_MIRROR[0]=CAMC_M;	
 1497              		.loc 1 1030 0
 1498 02d4 0222     		movs	r2, #2
 1499 02d6 9A70     		strb	r2, [r3, #2]
1031:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 1500              		.loc 1 1031 0
 1501 02d8 114B     		ldr	r3, .L76+32
 1502 02da 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1503 02dc 0A4B     		ldr	r3, .L76+8
 1504 02de 1970     		strb	r1, [r3]
1032:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMC_M;			  
 1505              		.loc 1 1032 0
 1506 02e0 0D4A     		ldr	r2, .L76+24
 1507 02e2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1508 02e4 5A70     		strb	r2, [r3, #1]
1033:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
 1509              		.loc 1 1033 0
 1510 02e6 094B     		ldr	r3, .L76+12
 1511 02e8 1970     		strb	r1, [r3]
1034:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 1512              		.loc 1 1034 0
 1513 02ea 5A70     		strb	r2, [r3, #1]
1035:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;	
 1514              		.loc 1 1035 0
 1515 02ec 094B     		ldr	r3, .L76+20
 1516 02ee 0122     		movs	r2, #1
 1517 02f0 1A70     		strb	r2, [r3]
1036:Src/main.c    **** 	  
 1518              		.loc 1 1036 0
ARM GAS  /tmp/ccxsI2YD.s 			page 106


 1519 02f2 0022     		movs	r2, #0
 1520 02f4 5A70     		strb	r2, [r3, #1]
1038:Src/main.c    **** 	break;
 1521              		.loc 1 1038 0
 1522 02f6 1848     		ldr	r0, .L76+88
 1523              	.LVL118:
 1524 02f8 FFF7FEFF 		bl	puts
 1525              	.LVL119:
1039:Src/main.c    ****     	}
 1526              		.loc 1 1039 0
 1527 02fc 60E0     		b	.L56
 1528              	.L77:
 1529 02fe 00BF     		.align	2
 1530              	.L76:
 1531 0300 00000000 		.word	pVS4210_JointKind1
 1532 0304 00000000 		.word	CAMA_M
 1533 0308 00000000 		.word	.LANCHOR5
 1534 030c 00000000 		.word	gabVXIS_Input_mirrorH
 1535 0310 40000000 		.word	.LC3
 1536 0314 00000000 		.word	.LANCHOR6
 1537 0318 00000000 		.word	CAMB_M
 1538 031c 54000000 		.word	.LC4
 1539 0320 00000000 		.word	CAMC_M
 1540 0324 68000000 		.word	.LC5
 1541 0328 00000000 		.word	CAMR_M
 1542 032c 7C000000 		.word	.LC6
 1543 0330 90000000 		.word	.LC7
 1544 0334 A0000000 		.word	.LC8
 1545 0338 B0000000 		.word	.LC9
 1546 033c C8000000 		.word	.LC10
 1547 0340 E0000000 		.word	.LC11
 1548 0344 F8000000 		.word	.LC12
 1549 0348 10010000 		.word	.LC13
 1550 034c 28010000 		.word	.LC14
 1551 0350 40010000 		.word	.LC15
 1552 0354 58010000 		.word	.LC16
 1553 0358 70010000 		.word	.LC17
 1554              	.LVL120:
 1555              	.L65:
1044:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 1556              		.loc 1 1044 0
 1557 035c 234B     		ldr	r3, .L78
 1558 035e 4022     		movs	r2, #64
 1559 0360 1A70     		strb	r2, [r3]
1045:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =4 ;
 1560              		.loc 1 1045 0
 1561 0362 0322     		movs	r2, #3
 1562 0364 5A70     		strb	r2, [r3, #1]
1046:Src/main.c    **** 	  OSD_MIRROR[0]=CAMC_M;	
 1563              		.loc 1 1046 0
 1564 0366 0422     		movs	r2, #4
 1565 0368 9A70     		strb	r2, [r3, #2]
1047:Src/main.c    ****    	  OSD_MIRROR[1]=CAMR_M;	
 1566              		.loc 1 1047 0
 1567 036a 214B     		ldr	r3, .L78+4
 1568 036c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1569 036e 214B     		ldr	r3, .L78+8
ARM GAS  /tmp/ccxsI2YD.s 			page 107


 1570 0370 1970     		strb	r1, [r3]
1048:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMC_M;			  
 1571              		.loc 1 1048 0
 1572 0372 214A     		ldr	r2, .L78+12
 1573 0374 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1574 0376 5A70     		strb	r2, [r3, #1]
1049:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
 1575              		.loc 1 1049 0
 1576 0378 204B     		ldr	r3, .L78+16
 1577 037a 1970     		strb	r1, [r3]
1050:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
 1578              		.loc 1 1050 0
 1579 037c 5A70     		strb	r2, [r3, #1]
1051:Src/main.c    **** 	  OSD_SPEAKER[1]=ON;	
 1580              		.loc 1 1051 0
 1581 037e 204B     		ldr	r3, .L78+20
 1582 0380 0022     		movs	r2, #0
 1583 0382 1A70     		strb	r2, [r3]
1052:Src/main.c    **** 	  
 1584              		.loc 1 1052 0
 1585 0384 0122     		movs	r2, #1
 1586 0386 5A70     		strb	r2, [r3, #1]
1054:Src/main.c    ****         break ;
 1587              		.loc 1 1054 0
 1588 0388 1E48     		ldr	r0, .L78+24
 1589              	.LVL121:
 1590 038a FFF7FEFF 		bl	puts
 1591              	.LVL122:
1055:Src/main.c    ****     }
 1592              		.loc 1 1055 0
 1593 038e 17E0     		b	.L56
 1594              	.LVL123:
 1595              	.L73:
1061:Src/main.c    **** 	pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 1596              		.loc 1 1061 0
 1597 0390 164B     		ldr	r3, .L78
 1598 0392 4022     		movs	r2, #64
 1599 0394 1A70     		strb	r2, [r3]
1062:Src/main.c    **** 	pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 1600              		.loc 1 1062 0
 1601 0396 0322     		movs	r2, #3
 1602 0398 5A70     		strb	r2, [r3, #1]
1063:Src/main.c    ****   OSD_MIRROR[0]=CAMC_M; 
 1603              		.loc 1 1063 0
 1604 039a 0122     		movs	r2, #1
 1605 039c 9A70     		strb	r2, [r3, #2]
1064:Src/main.c    ****   OSD_MIRROR[1]=CAMA_M; 
 1606              		.loc 1 1064 0
 1607 039e 144B     		ldr	r3, .L78+4
 1608 03a0 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1609              	.LVL124:
 1610 03a2 144B     		ldr	r3, .L78+8
 1611 03a4 1870     		strb	r0, [r3]
1065:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMC_M;			  
 1612              		.loc 1 1065 0
 1613 03a6 1849     		ldr	r1, .L78+28
 1614 03a8 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
ARM GAS  /tmp/ccxsI2YD.s 			page 108


 1615 03aa 5970     		strb	r1, [r3, #1]
1066:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M;   
 1616              		.loc 1 1066 0
 1617 03ac 134B     		ldr	r3, .L78+16
 1618 03ae 1870     		strb	r0, [r3]
1067:Src/main.c    ****   OSD_SPEAKER[0]=ON;
 1619              		.loc 1 1067 0
 1620 03b0 5970     		strb	r1, [r3, #1]
1068:Src/main.c    ****   OSD_SPEAKER[1]=OFF;	
 1621              		.loc 1 1068 0
 1622 03b2 134B     		ldr	r3, .L78+20
 1623 03b4 1A70     		strb	r2, [r3]
1069:Src/main.c    ****   
 1624              		.loc 1 1069 0
 1625 03b6 0022     		movs	r2, #0
 1626 03b8 5A70     		strb	r2, [r3, #1]
1071:Src/main.c    **** break;
 1627              		.loc 1 1071 0
 1628 03ba 1448     		ldr	r0, .L78+32
 1629 03bc FFF7FEFF 		bl	puts
 1630              	.LVL125:
 1631              	.L56:
1100:Src/main.c    **** 
 1632              		.loc 1 1100 0
 1633 03c0 0A48     		ldr	r0, .L78
 1634 03c2 FFF7FEFF 		bl	VS4210_SetMutiWindows
 1635              	.LVL126:
1103:Src/main.c    **** 
 1636              		.loc 1 1103 0
 1637 03c6 0120     		movs	r0, #1
 1638 03c8 FFF7FEFF 		bl	AudioMute
 1639              	.LVL127:
1105:Src/main.c    **** MCUTimerActiveTimerEvent(SEC(1),  _SYSTEM_TIMER_EVENT_AUDIO_CHANNEL_SELECT);
 1640              		.loc 1 1105 0
 1641 03cc 3B20     		movs	r0, #59
 1642 03ce FFF7FEFF 		bl	MCUTimerCancelTimerEvent
 1643              	.LVL128:
1106:Src/main.c    **** AUDIO_SELECT(index);
 1644              		.loc 1 1106 0
 1645 03d2 4FF47A70 		mov	r0, #1000
 1646 03d6 3B21     		movs	r1, #59
 1647 03d8 FFF7FEFF 		bl	MCUTimerActiveTimerEvent
 1648              	.LVL129:
1107:Src/main.c    **** 
 1649              		.loc 1 1107 0
 1650 03dc E4B2     		uxtb	r4, r4
 1651              	.LVL130:
 1652 03de 2046     		mov	r0, r4
 1653 03e0 FFF7FEFF 		bl	AUDIO_SELECT
 1654              	.LVL131:
1109:Src/main.c    **** 
 1655              		.loc 1 1109 0
 1656 03e4 0A4B     		ldr	r3, .L78+36
 1657 03e6 1C70     		strb	r4, [r3]
 1658 03e8 70BD     		pop	{r4, r5, r6, pc}
 1659              	.L79:
 1660 03ea 00BF     		.align	2
ARM GAS  /tmp/ccxsI2YD.s 			page 109


 1661              	.L78:
 1662 03ec 00000000 		.word	pVS4210_JointKind1
 1663 03f0 00000000 		.word	CAMC_M
 1664 03f4 00000000 		.word	.LANCHOR5
 1665 03f8 00000000 		.word	CAMR_M
 1666 03fc 00000000 		.word	gabVXIS_Input_mirrorH
 1667 0400 00000000 		.word	.LANCHOR6
 1668 0404 88010000 		.word	.LC18
 1669 0408 00000000 		.word	CAMA_M
 1670 040c A0010000 		.word	.LC19
 1671 0410 00000000 		.word	.LANCHOR7
 1672              		.cfi_endproc
 1673              	.LFE70:
 1675              		.section	.text.CHECK_HDMI720P50,"ax",%progbits
 1676              		.align	2
 1677              		.global	CHECK_HDMI720P50
 1678              		.thumb
 1679              		.thumb_func
 1681              	CHECK_HDMI720P50:
 1682              	.LFB71:
1166:Src/main.c    **** 	tByte REG9C,REG9D,REGA1,REGA2 ;
 1683              		.loc 1 1166 0
 1684              		.cfi_startproc
 1685              		@ args = 0, pretend = 0, frame = 0
 1686              		@ frame_needed = 0, uses_anonymous_args = 0
 1687 0000 70B5     		push	{r4, r5, r6, lr}
 1688              	.LCFI20:
 1689              		.cfi_def_cfa_offset 16
 1690              		.cfi_offset 4, -16
 1691              		.cfi_offset 5, -12
 1692              		.cfi_offset 6, -8
 1693              		.cfi_offset 14, -4
 1694 0002 82B0     		sub	sp, sp, #8
 1695              	.LCFI21:
 1696              		.cfi_def_cfa_offset 24
 1697              	.LVL132:
1169:Src/main.c    **** 				REG9C=HDMIRX_ReadI2C_Byte(0x9c);			
 1698              		.loc 1 1169 0
 1699 0004 0022     		movs	r2, #0
 1700 0006 184B     		ldr	r3, .L87
 1701 0008 1A70     		strb	r2, [r3]
1170:Src/main.c    **** 				REG9D=HDMIRX_ReadI2C_Byte(0x9d);
 1702              		.loc 1 1170 0
 1703 000a 9C20     		movs	r0, #156
 1704 000c FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 1705              	.LVL133:
 1706 0010 0446     		mov	r4, r0
 1707              	.LVL134:
1171:Src/main.c    **** 				REGA1=HDMIRX_ReadI2C_Byte(0xa1);
 1708              		.loc 1 1171 0
 1709 0012 9D20     		movs	r0, #157
 1710 0014 FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 1711              	.LVL135:
 1712 0018 0546     		mov	r5, r0
 1713              	.LVL136:
1172:Src/main.c    **** 				REGA2=HDMIRX_ReadI2C_Byte(0xa2);
 1714              		.loc 1 1172 0
ARM GAS  /tmp/ccxsI2YD.s 			page 110


 1715 001a A120     		movs	r0, #161
 1716 001c FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 1717              	.LVL137:
 1718 0020 0646     		mov	r6, r0
 1719              	.LVL138:
1173:Src/main.c    **** 				
 1720              		.loc 1 1173 0
 1721 0022 A220     		movs	r0, #162
 1722 0024 FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 1723              	.LVL139:
1175:Src/main.c    **** 					{
 1724              		.loc 1 1175 0
 1725 0028 BC2C     		cmp	r4, #188
 1726 002a 13D1     		bne	.L82
1175:Src/main.c    **** 					{
 1727              		.loc 1 1175 0 is_stmt 0 discriminator 1
 1728 002c 072D     		cmp	r5, #7
 1729 002e 13D1     		bne	.L83
1175:Src/main.c    **** 					{
 1730              		.loc 1 1175 0 discriminator 2
 1731 0030 102E     		cmp	r6, #16
 1732 0032 13D1     		bne	.L84
1175:Src/main.c    **** 					{
 1733              		.loc 1 1175 0 discriminator 3
 1734 0034 B828     		cmp	r0, #184
 1735 0036 13D1     		bne	.L85
1177:Src/main.c    **** 					//dbg_Printf("ch%d, REG 0xA2=%x \r\n", (int)(i+1),(int) HDMIRX_ReadI2C_Byte(0xa2) ) ;
 1736              		.loc 1 1177 0 is_stmt 1
 1737 0038 0C4B     		ldr	r3, .L87+4
 1738 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1739 003c 0124     		movs	r4, #1
 1740              	.LVL140:
 1741 003e 0094     		str	r4, [sp]
 1742 0040 0193     		str	r3, [sp, #4]
 1743 0042 0B48     		ldr	r0, .L87+8
 1744              	.LVL141:
 1745 0044 0B49     		ldr	r1, .L87+12
 1746 0046 0C4A     		ldr	r2, .L87+16
 1747 0048 40F29943 		movw	r3, #1177
 1748 004c FFF7FEFF 		bl	printf
 1749              	.LVL142:
1183:Src/main.c    **** 					}
 1750              		.loc 1 1183 0
 1751 0050 2046     		mov	r0, r4
 1752 0052 06E0     		b	.L81
 1753              	.LVL143:
 1754              	.L82:
1168:Src/main.c    **** 	gHDMI_Index=0;	
 1755              		.loc 1 1168 0
 1756 0054 0020     		movs	r0, #0
 1757              	.LVL144:
 1758 0056 04E0     		b	.L81
 1759              	.LVL145:
 1760              	.L83:
 1761 0058 0020     		movs	r0, #0
 1762              	.LVL146:
 1763 005a 02E0     		b	.L81
ARM GAS  /tmp/ccxsI2YD.s 			page 111


 1764              	.LVL147:
 1765              	.L84:
 1766 005c 0020     		movs	r0, #0
 1767              	.LVL148:
 1768 005e 00E0     		b	.L81
 1769              	.LVL149:
 1770              	.L85:
 1771 0060 0020     		movs	r0, #0
 1772              	.LVL150:
 1773              	.L81:
1187:Src/main.c    **** 	static void HDMI_VideoModeDetect(void)
 1774              		.loc 1 1187 0
 1775 0062 02B0     		add	sp, sp, #8
 1776              	.LCFI22:
 1777              		.cfi_def_cfa_offset 16
 1778              		@ sp needed
 1779 0064 70BD     		pop	{r4, r5, r6, pc}
 1780              	.LVL151:
 1781              	.L88:
 1782 0066 00BF     		.align	2
 1783              	.L87:
 1784 0068 00000000 		.word	gHDMI_Index
 1785 006c 00000000 		.word	gbVXIS_InputMode
 1786 0070 B8010000 		.word	.LC20
 1787 0074 D8010000 		.word	.LC21
 1788 0078 00000000 		.word	.LANCHOR8
 1789              		.cfi_endproc
 1790              	.LFE71:
 1792              		.section	.text.HDMI_VideoModeDetect,"ax",%progbits
 1793              		.align	2
 1794              		.thumb
 1795              		.thumb_func
 1797              	HDMI_VideoModeDetect:
 1798              	.LFB72:
1189:Src/main.c    **** 		tByte i  ;
 1799              		.loc 1 1189 0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 0
 1802              		@ frame_needed = 0, uses_anonymous_args = 0
 1803 0000 30B5     		push	{r4, r5, lr}
 1804              	.LCFI23:
 1805              		.cfi_def_cfa_offset 12
 1806              		.cfi_offset 4, -12
 1807              		.cfi_offset 5, -8
 1808              		.cfi_offset 14, -4
 1809 0002 83B0     		sub	sp, sp, #12
 1810              	.LCFI24:
 1811              		.cfi_def_cfa_offset 24
 1812              	.LVL152:
1192:Src/main.c    **** 		{
 1813              		.loc 1 1192 0
 1814 0004 0024     		movs	r4, #0
 1815 0006 DBE0     		b	.L90
 1816              	.LVL153:
 1817              	.L106:
1194:Src/main.c    **** 			//--- Start --- 20201214-01
 1818              		.loc 1 1194 0
ARM GAS  /tmp/ccxsI2YD.s 			page 112


 1819 0008 704B     		ldr	r3, .L108
 1820 000a 1C70     		strb	r4, [r3]
1196:Src/main.c    **** 			{
 1821              		.loc 1 1196 0
 1822 000c 012C     		cmp	r4, #1
 1823 000e 0BD1     		bne	.L91
1198:Src/main.c    **** 					bSignal[gHDMI_Index] = 0;
 1824              		.loc 1 1198 0
 1825 0010 6F4B     		ldr	r3, .L108+4
 1826 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1827 0014 142B     		cmp	r3, #20
 1828 0016 03D1     		bne	.L92
1199:Src/main.c    **** 				else
 1829              		.loc 1 1199 0
 1830 0018 0022     		movs	r2, #0
 1831 001a 6E4B     		ldr	r3, .L108+8
 1832 001c 1A55     		strb	r2, [r3, r4]
 1833 001e 07E0     		b	.L93
 1834              	.L92:
1201:Src/main.c    **** 			}
 1835              		.loc 1 1201 0
 1836 0020 0122     		movs	r2, #1
 1837 0022 6C4B     		ldr	r3, .L108+8
 1838 0024 1A55     		strb	r2, [r3, r4]
 1839 0026 03E0     		b	.L93
 1840              	.L91:
1205:Src/main.c    **** 
 1841              		.loc 1 1205 0
 1842 0028 FFF7FEFF 		bl	CheckHDMIRX
 1843              	.LVL154:
 1844 002c 694B     		ldr	r3, .L108+8
 1845 002e 1855     		strb	r0, [r3, r4]
 1846              	.L93:
1212:Src/main.c    **** 			{
 1847              		.loc 1 1212 0
 1848 0030 664B     		ldr	r3, .L108
 1849 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1850 0034 684A     		ldr	r2, .L108+12
 1851 0036 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 1852 0038 684A     		ldr	r2, .L108+16
 1853 003a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1854 003c 9142     		cmp	r1, r2
 1855 003e 01D0     		beq	.L94
1214:Src/main.c    **** 			}
 1856              		.loc 1 1214 0
 1857 0040 6549     		ldr	r1, .L108+12
 1858 0042 CA54     		strb	r2, [r1, r3]
 1859              	.L94:
1217:Src/main.c    **** 			{
 1860              		.loc 1 1217 0
 1861 0044 634A     		ldr	r2, .L108+8
 1862 0046 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1863 0048 6549     		ldr	r1, .L108+20
 1864 004a C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1865 004c 8A42     		cmp	r2, r1
 1866 004e 2DD0     		beq	.L95
1219:Src/main.c    **** 	
ARM GAS  /tmp/ccxsI2YD.s 			page 113


 1867              		.loc 1 1219 0
 1868 0050 6349     		ldr	r1, .L108+20
 1869 0052 CA54     		strb	r2, [r1, r3]
1221:Src/main.c    **** 				{
 1870              		.loc 1 1221 0
 1871 0054 52BB     		cbnz	r2, .L95
1223:Src/main.c    **** 					dbg_Printf("##ch%d, VS4210_Rx_NoSignal\r\n", (int)(i+1) ) ;
 1872              		.loc 1 1223 0
 1873 0056 2046     		mov	r0, r4
 1874 0058 FFF7FEFF 		bl	VS4210_Rx_NoSignal
 1875              	.LVL155:
1224:Src/main.c    **** 					if (pVS4210_MutiWindows1.DrawOSDFlg != 0)
 1876              		.loc 1 1224 0
 1877 005c 631C     		adds	r3, r4, #1
 1878 005e 0093     		str	r3, [sp]
 1879 0060 6048     		ldr	r0, .L108+24
 1880 0062 6149     		ldr	r1, .L108+28
 1881 0064 614A     		ldr	r2, .L108+32
 1882 0066 4FF49963 		mov	r3, #1224
 1883 006a FFF7FEFF 		bl	printf
 1884              	.LVL156:
1225:Src/main.c    **** 					{
 1885              		.loc 1 1225 0
 1886 006e 604B     		ldr	r3, .L108+36
 1887 0070 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 1888 0072 4BB1     		cbz	r3, .L96
1227:Src/main.c    **** 						Tim1_count = 0 ;
 1889              		.loc 1 1227 0
 1890 0074 0122     		movs	r2, #1
 1891 0076 5F4B     		ldr	r3, .L108+40
 1892 0078 1A60     		str	r2, [r3]
1228:Src/main.c    **** 						OSDStateFlg = 1 ;
 1893              		.loc 1 1228 0
 1894 007a 0023     		movs	r3, #0
 1895 007c 5E49     		ldr	r1, .L108+44
 1896 007e 0B60     		str	r3, [r1]
1229:Src/main.c    **** 						OSDSecCount = 0 ;
 1897              		.loc 1 1229 0
 1898 0080 5E49     		ldr	r1, .L108+48
 1899 0082 0A70     		strb	r2, [r1]
1230:Src/main.c    **** 					}
 1900              		.loc 1 1230 0
 1901 0084 5E4A     		ldr	r2, .L108+52
 1902 0086 1370     		strb	r3, [r2]
 1903              	.L96:
1232:Src/main.c    **** 					PrebVXIS_InputMode[gHDMI_Index] = _OSD_No_Signal ;
 1904              		.loc 1 1232 0
 1905 0088 504B     		ldr	r3, .L108
 1906 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1907 008c 1422     		movs	r2, #20
 1908 008e 5D49     		ldr	r1, .L108+56
 1909 0090 CA54     		strb	r2, [r1, r3]
1233:Src/main.c    **** 
 1910              		.loc 1 1233 0
 1911 0092 5D49     		ldr	r1, .L108+60
 1912 0094 CA54     		strb	r2, [r1, r3]
1235:Src/main.c    **** 						Set_Video_Loss_OSD(0,ON);
ARM GAS  /tmp/ccxsI2YD.s 			page 114


 1913              		.loc 1 1235 0
 1914 0096 5D4A     		ldr	r2, .L108+64
 1915 0098 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1916 009a 22B9     		cbnz	r2, .L97
1235:Src/main.c    **** 						Set_Video_Loss_OSD(0,ON);
 1917              		.loc 1 1235 0 is_stmt 0 discriminator 1
 1918 009c 1BB9     		cbnz	r3, .L97
1236:Src/main.c    **** 					//MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);	
 1919              		.loc 1 1236 0 is_stmt 1
 1920 009e 0020     		movs	r0, #0
 1921 00a0 0121     		movs	r1, #1
 1922 00a2 FFF7FEFF 		bl	Set_Video_Loss_OSD
 1923              	.LVL157:
 1924              	.L97:
1239:Src/main.c    **** 				}
 1925              		.loc 1 1239 0
 1926 00a6 0120     		movs	r0, #1
 1927 00a8 FFF7FEFF 		bl	SET_Audio_Mute
 1928              	.LVL158:
 1929              	.L95:
1243:Src/main.c    **** 			{
 1930              		.loc 1 1243 0
 1931 00ac 474B     		ldr	r3, .L108
 1932 00ae 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 1933 00b0 484B     		ldr	r3, .L108+8
 1934 00b2 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 1935 00b4 012B     		cmp	r3, #1
 1936 00b6 0BD1     		bne	.L98
1246:Src/main.c    **** 					gbVXIS_InputMode[gHDMI_Index] = newInRes[0];
 1937              		.loc 1 1246 0
 1938 00b8 012C     		cmp	r4, #1
 1939 00ba 04D1     		bne	.L99
1247:Src/main.c    **** 				else
 1940              		.loc 1 1247 0
 1941 00bc 444B     		ldr	r3, .L108+4
 1942 00be 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1943 00c0 504B     		ldr	r3, .L108+56
 1944 00c2 5A55     		strb	r2, [r3, r5]
 1945 00c4 04E0     		b	.L98
 1946              	.L99:
1250:Src/main.c    **** 
 1947              		.loc 1 1250 0
 1948 00c6 2846     		mov	r0, r5
 1949 00c8 FFF7FEFF 		bl	GetHDMI_InputMode
 1950              	.LVL159:
 1951 00cc 4D4B     		ldr	r3, .L108+56
 1952 00ce 5855     		strb	r0, [r3, r5]
 1953              	.L98:
1254:Src/main.c    **** 			{
 1954              		.loc 1 1254 0
 1955 00d0 3E4B     		ldr	r3, .L108
 1956 00d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1957 00d4 4B4A     		ldr	r2, .L108+56
 1958 00d6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1959 00d8 4B49     		ldr	r1, .L108+60
 1960 00da C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1961 00dc 8A42     		cmp	r2, r1
ARM GAS  /tmp/ccxsI2YD.s 			page 115


 1962 00de 6DD0     		beq	.L100
1256:Src/main.c    **** 
 1963              		.loc 1 1256 0
 1964 00e0 4949     		ldr	r1, .L108+60
 1965 00e2 CA54     		strb	r2, [r1, r3]
1258:Src/main.c    **** 					{
 1966              		.loc 1 1258 0
 1967 00e4 FFF7FEFF 		bl	CHECK_HDMI720P50
 1968              	.LVL160:
 1969 00e8 48B1     		cbz	r0, .L101
1260:Src/main.c    **** 					}
 1970              		.loc 1 1260 0
 1971 00ea 631C     		adds	r3, r4, #1
 1972 00ec 0093     		str	r3, [sp]
 1973 00ee 4848     		ldr	r0, .L108+68
 1974 00f0 3D49     		ldr	r1, .L108+28
 1975 00f2 3E4A     		ldr	r2, .L108+32
 1976 00f4 40F2EC43 		movw	r3, #1260
 1977 00f8 FFF7FEFF 		bl	printf
 1978              	.LVL161:
 1979 00fc 5EE0     		b	.L100
 1980              	.L101:
1262:Src/main.c    **** 				{
 1981              		.loc 1 1262 0
 1982 00fe 334B     		ldr	r3, .L108
 1983 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1984 0102 404A     		ldr	r2, .L108+56
 1985 0104 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1986 0106 142B     		cmp	r3, #20
 1987 0108 58D0     		beq	.L100
1264:Src/main.c    **** 
 1988              		.loc 1 1264 0
 1989 010a 2546     		mov	r5, r4
 1990 010c 2046     		mov	r0, r4
 1991 010e 115D     		ldrb	r1, [r2, r4]	@ zero_extendqisi2
 1992 0110 374B     		ldr	r3, .L108+36
 1993 0112 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1994 0114 FFF7FEFF 		bl	VS4210_SetInModeOutMode
 1995              	.LVL162:
1266:Src/main.c    **** 					VXISI2CWrite( 0x19, 0x01 );
 1996              		.loc 1 1266 0
 1997 0118 3C4B     		ldr	r3, .L108+64
 1998 011a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1999 011c 012B     		cmp	r3, #1
 2000 011e 07D1     		bne	.L102
1266:Src/main.c    **** 					VXISI2CWrite( 0x19, 0x01 );
 2001              		.loc 1 1266 0 is_stmt 0 discriminator 1
 2002 0120 2A4B     		ldr	r3, .L108
 2003 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2004 0124 012B     		cmp	r3, #1
 2005 0126 03D1     		bne	.L102
1267:Src/main.c    **** 							
 2006              		.loc 1 1267 0 is_stmt 1
 2007 0128 1920     		movs	r0, #25
 2008 012a 0121     		movs	r1, #1
 2009 012c FFF7FEFF 		bl	VXISI2CWrite
 2010              	.LVL163:
ARM GAS  /tmp/ccxsI2YD.s 			page 116


 2011              	.L102:
1270:Src/main.c    **** 
 2012              		.loc 1 1270 0
 2013 0130 384B     		ldr	r3, .L108+72
 2014 0132 33F81510 		ldrh	r1, [r3, r5, lsl #1]
 2015 0136 384B     		ldr	r3, .L108+76
 2016 0138 33F81520 		ldrh	r2, [r3, r5, lsl #1]
 2017 013c 374B     		ldr	r3, .L108+80
 2018 013e 33F81530 		ldrh	r3, [r3, r5, lsl #1]
 2019 0142 3748     		ldr	r0, .L108+84
 2020 0144 30F81500 		ldrh	r0, [r0, r5, lsl #1]
 2021 0148 0090     		str	r0, [sp]
 2022 014a 2046     		mov	r0, r4
 2023 014c FFF7FEFF 		bl	VS4210_SetInputSizeHV
 2024              	.LVL164:
1272:Src/main.c    **** 
 2025              		.loc 1 1272 0
 2026 0150 2C4B     		ldr	r3, .L108+56
 2027 0152 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 2028 0154 0135     		adds	r5, r5, #1
 2029 0156 0095     		str	r5, [sp]
 2030 0158 0193     		str	r3, [sp, #4]
 2031 015a 3248     		ldr	r0, .L108+88
 2032 015c 2249     		ldr	r1, .L108+28
 2033 015e 234A     		ldr	r2, .L108+32
 2034 0160 4FF49F63 		mov	r3, #1272
 2035 0164 FFF7FEFF 		bl	printf
 2036              	.LVL165:
1284:Src/main.c    **** 					{
 2037              		.loc 1 1284 0
 2038 0168 214B     		ldr	r3, .L108+36
 2039 016a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 2040 016c 4BB1     		cbz	r3, .L103
1286:Src/main.c    **** 						Tim1_count = 0 ;
 2041              		.loc 1 1286 0
 2042 016e 0122     		movs	r2, #1
 2043 0170 204B     		ldr	r3, .L108+40
 2044 0172 1A60     		str	r2, [r3]
1287:Src/main.c    **** 						OSDStateFlg = 1 ;
 2045              		.loc 1 1287 0
 2046 0174 0023     		movs	r3, #0
 2047 0176 2049     		ldr	r1, .L108+44
 2048 0178 0B60     		str	r3, [r1]
1288:Src/main.c    **** 						OSDSecCount = 0 ;
 2049              		.loc 1 1288 0
 2050 017a 2049     		ldr	r1, .L108+48
 2051 017c 0A70     		strb	r2, [r1]
1289:Src/main.c    **** 					}
 2052              		.loc 1 1289 0
 2053 017e 204A     		ldr	r2, .L108+52
 2054 0180 1370     		strb	r3, [r2]
 2055              	.L103:
1292:Src/main.c    **** 						Set_Video_Loss_OSD(0,OFF);	
 2056              		.loc 1 1292 0
 2057 0182 224B     		ldr	r3, .L108+64
 2058 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2059 0186 33B9     		cbnz	r3, .L104
ARM GAS  /tmp/ccxsI2YD.s 			page 117


1292:Src/main.c    **** 						Set_Video_Loss_OSD(0,OFF);	
 2060              		.loc 1 1292 0 is_stmt 0 discriminator 1
 2061 0188 104B     		ldr	r3, .L108
 2062 018a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2063 018c 1BB9     		cbnz	r3, .L104
1293:Src/main.c    **** 
 2064              		.loc 1 1293 0 is_stmt 1
 2065 018e 0020     		movs	r0, #0
 2066 0190 0146     		mov	r1, r0
 2067 0192 FFF7FEFF 		bl	Set_Video_Loss_OSD
 2068              	.LVL166:
 2069              	.L104:
1295:Src/main.c    **** 							{
 2070              		.loc 1 1295 0
 2071 0196 1D4B     		ldr	r3, .L108+64
 2072 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2073 019a 012B     		cmp	r3, #1
 2074 019c 08D1     		bne	.L105
1295:Src/main.c    **** 							{
 2075              		.loc 1 1295 0 is_stmt 0 discriminator 1
 2076 019e 0B4B     		ldr	r3, .L108
 2077 01a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2078 01a2 012B     		cmp	r3, #1
 2079 01a4 04D1     		bne	.L105
1297:Src/main.c    **** 							}
 2080              		.loc 1 1297 0 is_stmt 1
 2081 01a6 4FF47A70 		mov	r0, #1000
 2082 01aa 4021     		movs	r1, #64
 2083 01ac FFF7FEFF 		bl	MCUTimerActiveTimerEvent
 2084              	.LVL167:
 2085              	.L105:
1300:Src/main.c    **** 						SET_Audio_Mute(OFF);	
 2086              		.loc 1 1300 0
 2087 01b0 064B     		ldr	r3, .L108
 2088 01b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2089 01b4 13B9     		cbnz	r3, .L100
1301:Src/main.c    **** 						//MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);
 2090              		.loc 1 1301 0
 2091 01b6 0020     		movs	r0, #0
 2092 01b8 FFF7FEFF 		bl	SET_Audio_Mute
 2093              	.LVL168:
 2094              	.L100:
1192:Src/main.c    **** 		{
 2095              		.loc 1 1192 0 discriminator 2
 2096 01bc 0134     		adds	r4, r4, #1
 2097              	.LVL169:
 2098 01be E4B2     		uxtb	r4, r4
 2099              	.LVL170:
 2100              	.L90:
1192:Src/main.c    **** 		{
 2101              		.loc 1 1192 0 is_stmt 0 discriminator 1
 2102 01c0 012C     		cmp	r4, #1
 2103 01c2 7FF621AF 		bls	.L106
1306:Src/main.c    **** 
 2104              		.loc 1 1306 0 is_stmt 1
 2105 01c6 03B0     		add	sp, sp, #12
 2106              	.LCFI25:
ARM GAS  /tmp/ccxsI2YD.s 			page 118


 2107              		.cfi_def_cfa_offset 12
 2108              		@ sp needed
 2109 01c8 30BD     		pop	{r4, r5, pc}
 2110              	.LVL171:
 2111              	.L109:
 2112 01ca 00BF     		.align	2
 2113              	.L108:
 2114 01cc 00000000 		.word	gHDMI_Index
 2115 01d0 00000000 		.word	newInRes
 2116 01d4 00000000 		.word	.LANCHOR9
 2117 01d8 00000000 		.word	PreVState
 2118 01dc 00000000 		.word	VState
 2119 01e0 00000000 		.word	.LANCHOR10
 2120 01e4 E4010000 		.word	.LC22
 2121 01e8 D8010000 		.word	.LC21
 2122 01ec 00000000 		.word	.LANCHOR11
 2123 01f0 00000000 		.word	pVS4210_MutiWindows1
 2124 01f4 00000000 		.word	.LANCHOR12
 2125 01f8 00000000 		.word	.LANCHOR13
 2126 01fc 00000000 		.word	.LANCHOR14
 2127 0200 00000000 		.word	.LANCHOR15
 2128 0204 00000000 		.word	gbVXIS_InputMode
 2129 0208 00000000 		.word	.LANCHOR16
 2130 020c 00000000 		.word	.LANCHOR17
 2131 0210 0C020000 		.word	.LC23
 2132 0214 00000000 		.word	gHActive
 2133 0218 00000000 		.word	gVActive
 2134 021c 00000000 		.word	gHTotal
 2135 0220 00000000 		.word	gVTotal
 2136 0224 B8010000 		.word	.LC20
 2137              		.cfi_endproc
 2138              	.LFE72:
 2140              		.section	.text.main_init,"ax",%progbits
 2141              		.align	2
 2142              		.global	main_init
 2143              		.thumb
 2144              		.thumb_func
 2146              	main_init:
 2147              	.LFB74:
1333:Src/main.c    **** 
 2148              		.loc 1 1333 0
 2149              		.cfi_startproc
 2150              		@ args = 0, pretend = 0, frame = 0
 2151              		@ frame_needed = 0, uses_anonymous_args = 0
 2152 0000 38B5     		push	{r3, r4, r5, lr}
 2153              	.LCFI26:
 2154              		.cfi_def_cfa_offset 16
 2155              		.cfi_offset 3, -16
 2156              		.cfi_offset 4, -12
 2157              		.cfi_offset 5, -8
 2158              		.cfi_offset 14, -4
1337:Src/main.c    **** 		Printf("\r\nPrev.FW:%04x\r\n", rev);
 2159              		.loc 1 1337 0
 2160 0002 FFF7FEFF 		bl	GetFWRevEE
 2161              	.LVL172:
 2162 0006 0446     		mov	r4, r0
 2163              	.LVL173:
ARM GAS  /tmp/ccxsI2YD.s 			page 119


1338:Src/main.c    **** 		
 2164              		.loc 1 1338 0
 2165 0008 1A48     		ldr	r0, .L116
 2166              	.LVL174:
 2167 000a 2146     		mov	r1, r4
 2168 000c FFF7FEFF 		bl	Printf
 2169              	.LVL175:
1340:Src/main.c    **** 		{					
 2170              		.loc 1 1340 0
 2171 0010 FFF7FEFF 		bl	GetFWRevEE
 2172              	.LVL176:
 2173 0014 41F20703 		movw	r3, #4103
 2174 0018 9842     		cmp	r0, r3
 2175 001a 0ED0     		beq	.L111
1342:Src/main.c    **** 			SaveFWRevEE(FWVER);
 2176              		.loc 1 1342 0
 2177 001c 164D     		ldr	r5, .L116+4
 2178 001e 2846     		mov	r0, r5
 2179 0020 1946     		mov	r1, r3
 2180 0022 FFF7FEFF 		bl	Printf
 2181              	.LVL177:
1343:Src/main.c    **** 			Printf("\r\nCurr.FW:%04x", (WORD)GetFWRevEE());
 2182              		.loc 1 1343 0
 2183 0026 41F20700 		movw	r0, #4103
 2184 002a FFF7FEFF 		bl	SaveFWRevEE
 2185              	.LVL178:
1344:Src/main.c    **** 		}
 2186              		.loc 1 1344 0
 2187 002e FFF7FEFF 		bl	GetFWRevEE
 2188              	.LVL179:
 2189 0032 0146     		mov	r1, r0
 2190 0034 2846     		mov	r0, r5
 2191 0036 FFF7FEFF 		bl	Printf
 2192              	.LVL180:
 2193              	.L111:
1347:Src/main.c    **** 		{					// exist EEPROM
 2194              		.loc 1 1347 0
 2195 003a FFF7FEFF 		bl	GetFWRevEE
 2196              	.LVL181:
 2197 003e 41F20703 		movw	r3, #4103
 2198 0042 9842     		cmp	r0, r3
 2199 0044 07D1     		bne	.L112
1349:Src/main.c    **** 				{
 2200              		.loc 1 1349 0
 2201 0046 9C42     		cmp	r4, r3
 2202 0048 0FD0     		beq	.L113
1351:Src/main.c    **** 			
 2203              		.loc 1 1351 0
 2204 004a FFF7FEFF 		bl	ClearBasicEE
 2205              	.LVL182:
1353:Src/main.c    **** 				}
 2206              		.loc 1 1353 0
 2207 004e 0B48     		ldr	r0, .L116+8
 2208 0050 FFF7FEFF 		bl	Printf
 2209              	.LVL183:
 2210 0054 09E0     		b	.L113
 2211              	.L112:
ARM GAS  /tmp/ccxsI2YD.s 			page 120


1363:Src/main.c    **** 			Printf("\r\nNo initialize");
 2212              		.loc 1 1363 0
 2213 0056 0A48     		ldr	r0, .L116+12
 2214 0058 FFF7FEFF 		bl	Printf
 2215              	.LVL184:
1364:Src/main.c    **** 			DebugLevel = 0xff;
 2216              		.loc 1 1364 0
 2217 005c 0948     		ldr	r0, .L116+16
 2218 005e FFF7FEFF 		bl	Printf
 2219              	.LVL185:
1365:Src/main.c    **** 			return;
 2220              		.loc 1 1365 0
 2221 0062 FF22     		movs	r2, #255
 2222 0064 084B     		ldr	r3, .L116+20
 2223 0066 1A70     		strb	r2, [r3]
1366:Src/main.c    **** 		}
 2224              		.loc 1 1366 0
 2225 0068 38BD     		pop	{r3, r4, r5, pc}
 2226              	.LVL186:
 2227              	.L113:
1370:Src/main.c    **** 	
 2228              		.loc 1 1370 0
 2229 006a 6420     		movs	r0, #100
 2230 006c FFF7FEFF 		bl	delay
 2231              	.LVL187:
 2232 0070 38BD     		pop	{r3, r4, r5, pc}
 2233              	.LVL188:
 2234              	.L117:
 2235 0072 00BF     		.align	2
 2236              	.L116:
 2237 0074 34020000 		.word	.LC24
 2238 0078 48020000 		.word	.LC25
 2239 007c 58020000 		.word	.LC26
 2240 0080 94020000 		.word	.LC27
 2241 0084 B0020000 		.word	.LC28
 2242 0088 00000000 		.word	DebugLevel
 2243              		.cfi_endproc
 2244              	.LFE74:
 2246              		.section	.text.LCDPowerON,"ax",%progbits
 2247              		.align	2
 2248              		.global	LCDPowerON
 2249              		.thumb
 2250              		.thumb_func
 2252              	LCDPowerON:
 2253              	.LFB76:
1475:Src/main.c    **** /*
 2254              		.loc 1 1475 0
 2255              		.cfi_startproc
 2256              		@ args = 0, pretend = 0, frame = 0
 2257              		@ frame_needed = 0, uses_anonymous_args = 0
 2258              		@ link register save eliminated.
 2259 0000 7047     		bx	lr
 2260              		.cfi_endproc
 2261              	.LFE76:
 2263 0002 00BF     		.section	.text.LCDPowerOFF,"ax",%progbits
 2264              		.align	2
 2265              		.global	LCDPowerOFF
ARM GAS  /tmp/ccxsI2YD.s 			page 121


 2266              		.thumb
 2267              		.thumb_func
 2269              	LCDPowerOFF:
 2270              	.LFB77:
1500:Src/main.c    **** /*
 2271              		.loc 1 1500 0
 2272              		.cfi_startproc
 2273              		@ args = 0, pretend = 0, frame = 0
 2274              		@ frame_needed = 0, uses_anonymous_args = 0
 2275              		@ link register save eliminated.
 2276 0000 7047     		bx	lr
 2277              		.cfi_endproc
 2278              	.LFE77:
 2280 0002 00BF     		.section	.text.uComOnChipInitial,"ax",%progbits
 2281              		.align	2
 2282              		.global	uComOnChipInitial
 2283              		.thumb
 2284              		.thumb_func
 2286              	uComOnChipInitial:
 2287              	.LFB78:
1546:Src/main.c    **** 
 2288              		.loc 1 1546 0
 2289              		.cfi_startproc
 2290              		@ args = 0, pretend = 0, frame = 0
 2291              		@ frame_needed = 0, uses_anonymous_args = 0
1546:Src/main.c    **** 
 2292              		.loc 1 1546 0
 2293 0000 10B5     		push	{r4, lr}
 2294              	.LCFI27:
 2295              		.cfi_def_cfa_offset 8
 2296              		.cfi_offset 4, -8
 2297              		.cfi_offset 14, -4
1551:Src/main.c    **** PCON1V2_TP(ON);      
 2298              		.loc 1 1551 0
 2299 0002 084C     		ldr	r4, .L122
 2300 0004 2046     		mov	r0, r4
 2301 0006 4021     		movs	r1, #64
 2302 0008 0022     		movs	r2, #0
 2303 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 2304              	.LVL189:
1552:Src/main.c    **** 
 2305              		.loc 1 1552 0
 2306 000e 2046     		mov	r0, r4
 2307 0010 2021     		movs	r1, #32
 2308 0012 0022     		movs	r2, #0
 2309 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2310              	.LVL190:
1554:Src/main.c    **** 
 2311              		.loc 1 1554 0
 2312 0018 2046     		mov	r0, r4
 2313 001a 1021     		movs	r1, #16
 2314 001c 0122     		movs	r2, #1
 2315 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 2316              	.LVL191:
 2317 0022 10BD     		pop	{r4, pc}
 2318              	.L123:
 2319              		.align	2
ARM GAS  /tmp/ccxsI2YD.s 			page 122


 2320              	.L122:
 2321 0024 00080140 		.word	1073809408
 2322              		.cfi_endproc
 2323              	.LFE78:
 2325              		.section	.text.user_pwm_setvalue,"ax",%progbits
 2326              		.align	2
 2327              		.global	user_pwm_setvalue
 2328              		.thumb
 2329              		.thumb_func
 2331              	user_pwm_setvalue:
 2332              	.LFB79:
1616:Src/main.c    ****     TIM_OC_InitTypeDef sConfigOC;
 2333              		.loc 1 1616 0
 2334              		.cfi_startproc
 2335              		@ args = 0, pretend = 0, frame = 32
 2336              		@ frame_needed = 0, uses_anonymous_args = 0
 2337              	.LVL192:
 2338 0000 10B5     		push	{r4, lr}
 2339              	.LCFI28:
 2340              		.cfi_def_cfa_offset 8
 2341              		.cfi_offset 4, -8
 2342              		.cfi_offset 14, -4
 2343 0002 88B0     		sub	sp, sp, #32
 2344              	.LCFI29:
 2345              		.cfi_def_cfa_offset 40
1619:Src/main.c    ****     sConfigOC.Pulse = value;
 2346              		.loc 1 1619 0
 2347 0004 6023     		movs	r3, #96
 2348 0006 0193     		str	r3, [sp, #4]
1620:Src/main.c    ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2349              		.loc 1 1620 0
 2350 0008 0290     		str	r0, [sp, #8]
1621:Src/main.c    ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2351              		.loc 1 1621 0
 2352 000a 0023     		movs	r3, #0
 2353 000c 0393     		str	r3, [sp, #12]
1622:Src/main.c    ****     HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3);
 2354              		.loc 1 1622 0
 2355 000e 0593     		str	r3, [sp, #20]
1623:Src/main.c    ****     HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);  
 2356              		.loc 1 1623 0
 2357 0010 054C     		ldr	r4, .L126
 2358 0012 2046     		mov	r0, r4
 2359              	.LVL193:
 2360 0014 01A9     		add	r1, sp, #4
 2361 0016 0822     		movs	r2, #8
 2362 0018 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2363              	.LVL194:
1624:Src/main.c    **** }
 2364              		.loc 1 1624 0
 2365 001c 2046     		mov	r0, r4
 2366 001e 0821     		movs	r1, #8
 2367 0020 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 2368              	.LVL195:
1625:Src/main.c    **** 
 2369              		.loc 1 1625 0
 2370 0024 08B0     		add	sp, sp, #32
ARM GAS  /tmp/ccxsI2YD.s 			page 123


 2371              	.LCFI30:
 2372              		.cfi_def_cfa_offset 8
 2373              		@ sp needed
 2374 0026 10BD     		pop	{r4, pc}
 2375              	.L127:
 2376              		.align	2
 2377              	.L126:
 2378 0028 00000000 		.word	htim2
 2379              		.cfi_endproc
 2380              	.LFE79:
 2382              		.section	.text.AdjustAutoDayNight,"ax",%progbits
 2383              		.align	2
 2384              		.global	AdjustAutoDayNight
 2385              		.thumb
 2386              		.thumb_func
 2388              	AdjustAutoDayNight:
 2389              	.LFB75:
1380:Src/main.c    **** //	BYTE page;
 2390              		.loc 1 1380 0
 2391              		.cfi_startproc
 2392              		@ args = 0, pretend = 0, frame = 0
 2393              		@ frame_needed = 0, uses_anonymous_args = 0
 2394              	.LVL196:
 2395 0000 08B5     		push	{r3, lr}
 2396              	.LCFI31:
 2397              		.cfi_def_cfa_offset 8
 2398              		.cfi_offset 3, -8
 2399              		.cfi_offset 14, -4
 2400              	.LVL197:
1383:Src/main.c    **** 
 2401              		.loc 1 1383 0
 2402 0002 C043     		mvns	r0, r0
 2403              	.LVL198:
 2404 0004 C0B2     		uxtb	r0, r0
 2405              	.LVL199:
1386:Src/main.c    **** 		PWMLevelTemp=0+70;
 2406              		.loc 1 1386 0
 2407 0006 6328     		cmp	r0, #99
 2408 0008 12D9     		bls	.L134
1388:Src/main.c    **** 		PWMLevelTemp=20+70;//20;
 2409              		.loc 1 1388 0
 2410 000a A0F16403 		sub	r3, r0, #100
 2411 000e DBB2     		uxtb	r3, r3
 2412 0010 272B     		cmp	r3, #39
 2413 0012 0FD9     		bls	.L135
1390:Src/main.c    **** 		PWMLevelTemp=40+70;//50;
 2414              		.loc 1 1390 0
 2415 0014 00F17403 		add	r3, r0, #116
 2416 0018 DBB2     		uxtb	r3, r3
 2417 001a 272B     		cmp	r3, #39
 2418 001c 0CD9     		bls	.L136
1392:Src/main.c    **** 		PWMLevelTemp=60+70;//65;
 2419              		.loc 1 1392 0
 2420 001e 00F14C03 		add	r3, r0, #76
 2421 0022 DBB2     		uxtb	r3, r3
 2422 0024 272B     		cmp	r3, #39
 2423 0026 09D9     		bls	.L137
ARM GAS  /tmp/ccxsI2YD.s 			page 124


1394:Src/main.c    **** 	{
 2424              		.loc 1 1394 0
 2425 0028 DB28     		cmp	r0, #219
 2426 002a 09D8     		bhi	.L138
1382:Src/main.c    **** 	val=0xff-val;
 2427              		.loc 1 1382 0
 2428 002c 0022     		movs	r2, #0
 2429 002e 08E0     		b	.L129
 2430              	.L134:
1387:Src/main.c    **** 	else if(val>=100&&val<140)
 2431              		.loc 1 1387 0
 2432 0030 4622     		movs	r2, #70
 2433 0032 06E0     		b	.L129
 2434              	.L135:
1389:Src/main.c    **** 	else if(val>=140&&val<180)
 2435              		.loc 1 1389 0
 2436 0034 5A22     		movs	r2, #90
 2437 0036 04E0     		b	.L129
 2438              	.L136:
1391:Src/main.c    **** 	else if(val>=180&&val<220)
 2439              		.loc 1 1391 0
 2440 0038 6E22     		movs	r2, #110
 2441 003a 02E0     		b	.L129
 2442              	.L137:
1393:Src/main.c    **** 	else if(val>=220&&val<=255)//andy 20110414
 2443              		.loc 1 1393 0
 2444 003c 8222     		movs	r2, #130
 2445 003e 00E0     		b	.L129
 2446              	.L138:
1397:Src/main.c    **** 		//#else
 2447              		.loc 1 1397 0
 2448 0040 9122     		movs	r2, #145
 2449              	.L129:
 2450              	.LVL200:
1426:Src/main.c    **** 	{
 2451              		.loc 1 1426 0
 2452 0042 124B     		ldr	r3, .L140
 2453 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2454 0046 012B     		cmp	r3, #1
 2455 0048 17D1     		bne	.L130
1432:Src/main.c    **** 				PWMLevel-=1;
 2456              		.loc 1 1432 0
 2457 004a 114B     		ldr	r3, .L140+4
 2458 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2459 004e 9342     		cmp	r3, r2
 2460 0050 03D9     		bls	.L131
1433:Src/main.c    **** 			else if(PWMLevel < PWMLevelTemp)
 2461              		.loc 1 1433 0
 2462 0052 013B     		subs	r3, r3, #1
 2463 0054 0E4A     		ldr	r2, .L140+4
 2464              	.LVL201:
 2465 0056 1370     		strb	r3, [r2]
 2466 0058 04E0     		b	.L132
 2467              	.LVL202:
 2468              	.L131:
1434:Src/main.c    **** 				PWMLevel+=1;
 2469              		.loc 1 1434 0
ARM GAS  /tmp/ccxsI2YD.s 			page 125


 2470 005a 9A42     		cmp	r2, r3
 2471 005c 02D9     		bls	.L132
1435:Src/main.c    **** 
 2472              		.loc 1 1435 0
 2473 005e 0133     		adds	r3, r3, #1
 2474 0060 0B4A     		ldr	r2, .L140+4
 2475              	.LVL203:
 2476 0062 1370     		strb	r3, [r2]
 2477              	.L132:
1437:Src/main.c    **** 		}
 2478              		.loc 1 1437 0
 2479 0064 0022     		movs	r2, #0
 2480 0066 0B4B     		ldr	r3, .L140+8
 2481 0068 1A70     		strb	r2, [r3]
1445:Src/main.c    **** 
 2482              		.loc 1 1445 0
 2483 006a 094B     		ldr	r3, .L140+4
 2484 006c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2485              	.LVL204:
 2486 006e C0EB0010 		rsb	r0, r0, r0, lsl #4
 2487 0072 80B2     		uxth	r0, r0
 2488 0074 FFF7FEFF 		bl	user_pwm_setvalue
 2489              	.LVL205:
 2490 0078 08BD     		pop	{r3, pc}
 2491              	.LVL206:
 2492              	.L130:
1451:Src/main.c    **** 	//		Printf("(PWMLevel2=%02x)",(WORD)PWMLevel);
 2493              		.loc 1 1451 0
 2494 007a FF22     		movs	r2, #255
 2495              	.LVL207:
 2496 007c 044B     		ldr	r3, .L140+4
 2497 007e 1A70     		strb	r2, [r3]
1453:Src/main.c    **** 	}
 2498              		.loc 1 1453 0
 2499 0080 4FF47A60 		mov	r0, #4000
 2500              	.LVL208:
 2501 0084 FFF7FEFF 		bl	user_pwm_setvalue
 2502              	.LVL209:
 2503 0088 08BD     		pop	{r3, pc}
 2504              	.L141:
 2505 008a 00BF     		.align	2
 2506              	.L140:
 2507 008c 00000000 		.word	.LANCHOR18
 2508 0090 00000000 		.word	.LANCHOR19
 2509 0094 00000000 		.word	.LANCHOR20
 2510              		.cfi_endproc
 2511              	.LFE75:
 2513              		.section	.text.LoadEEPROM,"ax",%progbits
 2514              		.align	2
 2515              		.global	LoadEEPROM
 2516              		.thumb
 2517              		.thumb_func
 2519              	LoadEEPROM:
 2520              	.LFB80:
1628:Src/main.c    **** #if 0
 2521              		.loc 1 1628 0
 2522              		.cfi_startproc
ARM GAS  /tmp/ccxsI2YD.s 			page 126


 2523              		@ args = 0, pretend = 0, frame = 0
 2524              		@ frame_needed = 0, uses_anonymous_args = 0
 2525              		@ link register save eliminated.
 2526 0000 7047     		bx	lr
 2527              		.cfi_endproc
 2528              	.LFE80:
 2530 0002 00BF     		.section	.text.WaitPowerOn,"ax",%progbits
 2531              		.align	2
 2532              		.global	WaitPowerOn
 2533              		.thumb
 2534              		.thumb_func
 2536              	WaitPowerOn:
 2537              	.LFB81:
1653:Src/main.c    **** BYTE val;
 2538              		.loc 1 1653 0
 2539              		.cfi_startproc
 2540              		@ args = 0, pretend = 0, frame = 0
 2541              		@ frame_needed = 0, uses_anonymous_args = 0
1653:Src/main.c    **** BYTE val;
 2542              		.loc 1 1653 0
 2543 0000 10B5     		push	{r4, lr}
 2544              	.LCFI32:
 2545              		.cfi_def_cfa_offset 8
 2546              		.cfi_offset 4, -8
 2547              		.cfi_offset 14, -4
1655:Src/main.c    **** 
 2548              		.loc 1 1655 0
 2549 0002 2C20     		movs	r0, #44
 2550 0004 FFF7FEFF 		bl	PowerLED
 2551              	.LVL210:
1659:Src/main.c    **** 
 2552              		.loc 1 1659 0
 2553 0008 1120     		movs	r0, #17
 2554 000a FFF7FEFF 		bl	MCUTimerCancelTimerEvent
 2555              	.LVL211:
1661:Src/main.c    **** 		
 2556              		.loc 1 1661 0
 2557 000e 1D48     		ldr	r0, .L151
 2558 0010 FFF7FEFF 		bl	Printf
 2559              	.LVL212:
 2560              	.L147:
1666:Src/main.c    **** 			if(PowerFlag==ON)
 2561              		.loc 1 1666 0
 2562 0014 FFF7FEFF 		bl	CheckKeyIn
 2563              	.LVL213:
1667:Src/main.c    **** 			{
 2564              		.loc 1 1667 0
 2565 0018 1B4B     		ldr	r3, .L151+4
 2566 001a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2567 001c 0129     		cmp	r1, #1
 2568 001e 16D1     		bne	.L144
1670:Src/main.c    **** 				break;		//poweron
 2569              		.loc 1 1670 0
 2570 0020 AB20     		movs	r0, #171
 2571 0022 FFF7FEFF 		bl	WriteEEP
 2572              	.LVL214:
1729:Src/main.c    **** //	SHOWOSDINFO();	
ARM GAS  /tmp/ccxsI2YD.s 			page 127


 2573              		.loc 1 1729 0
 2574 0026 2A20     		movs	r0, #42
 2575 0028 FFF7FEFF 		bl	PowerLED
 2576              	.LVL215:
1735:Src/main.c    **** 	MCUTimerActiveTimerEvent(SEC(2),_USER_TIMER_EVENT_DISPLAY_DISABLE);
 2577              		.loc 1 1735 0
 2578 002c 0F20     		movs	r0, #15
 2579 002e FFF7FEFF 		bl	MCUTimerCancelTimerEvent
 2580              	.LVL216:
1736:Src/main.c    **** 
 2581              		.loc 1 1736 0
 2582 0032 4FF4FA60 		mov	r0, #2000
 2583 0036 0F21     		movs	r1, #15
 2584 0038 FFF7FEFF 		bl	MCUTimerActiveTimerEvent
 2585              	.LVL217:
1740:Src/main.c    **** //LCDPowerON();
 2586              		.loc 1 1740 0
 2587 003c 4FF47A70 		mov	r0, #1000
 2588 0040 1121     		movs	r1, #17
 2589 0042 FFF7FEFF 		bl	MCUTimerActiveTimerEvent
 2590              	.LVL218:
1742:Src/main.c    **** 
 2591              		.loc 1 1742 0
 2592 0046 1148     		ldr	r0, .L151+8
 2593 0048 FFF7FEFF 		bl	Printf
 2594              	.LVL219:
 2595 004c 10BD     		pop	{r4, pc}
 2596              	.L144:
1674:Src/main.c    **** 		 
 2597              		.loc 1 1674 0
 2598 004e FFF7FEFF 		bl	CheckTrigger
 2599              	.LVL220:
1678:Src/main.c    **** 		{	
 2600              		.loc 1 1678 0
 2601 0052 0446     		mov	r4, r0
 2602 0054 30B1     		cbz	r0, .L145
1680:Src/main.c    **** 			TriggerHandler(val);
 2603              		.loc 1 1680 0
 2604 0056 2A20     		movs	r0, #42
 2605              	.LVL221:
 2606 0058 FFF7FEFF 		bl	PowerLED
 2607              	.LVL222:
1681:Src/main.c    **** 			//	AudioMute(OFF);
 2608              		.loc 1 1681 0
 2609 005c 2046     		mov	r0, r4
 2610 005e FFF7FEFF 		bl	TriggerHandler
 2611              	.LVL223:
 2612 0062 01E0     		b	.L146
 2613              	.LVL224:
 2614              	.L145:
1697:Src/main.c    **** 
 2615              		.loc 1 1697 0
 2616 0064 FFF7FEFF 		bl	TriggerHandler
 2617              	.LVL225:
 2618              	.L146:
1719:Src/main.c    **** 		   	  EQ_Detect();	 
 2619              		.loc 1 1719 0
ARM GAS  /tmp/ccxsI2YD.s 			page 128


 2620 0068 FFF7FEFF 		bl	SysTimerHandler
 2621              	.LVL226:
1720:Src/main.c    **** 			  
 2622              		.loc 1 1720 0
 2623 006c FFF7FEFF 		bl	EQ_Detect
 2624              	.LVL227:
1723:Src/main.c    **** 
 2625              		.loc 1 1723 0
 2626 0070 0120     		movs	r0, #1
 2627 0072 FFF7FEFF 		bl	GT9147_Scan
 2628              	.LVL228:
 2629 0076 0028     		cmp	r0, #0
 2630 0078 CCD0     		beq	.L147
1725:Src/main.c    **** 					
 2631              		.loc 1 1725 0
 2632 007a 0122     		movs	r2, #1
 2633 007c 024B     		ldr	r3, .L151+4
 2634 007e 1A70     		strb	r2, [r3]
 2635 0080 C8E7     		b	.L147
 2636              	.L152:
 2637 0082 00BF     		.align	2
 2638              	.L151:
 2639 0084 C0020000 		.word	.LC29
 2640 0088 00000000 		.word	.LANCHOR21
 2641 008c D0020000 		.word	.LC30
 2642              		.cfi_endproc
 2643              	.LFE81:
 2645              		.section	.text.VS4210_FULL88init2,"ax",%progbits
 2646              		.align	2
 2647              		.global	VS4210_FULL88init2
 2648              		.thumb
 2649              		.thumb_func
 2651              	VS4210_FULL88init2:
 2652              	.LFB84:
2251:Src/main.c    **** 	 tByte i ;
 2653              		.loc 1 2251 0
 2654              		.cfi_startproc
 2655              		@ args = 0, pretend = 0, frame = 0
 2656              		@ frame_needed = 0, uses_anonymous_args = 0
 2657              	.LVL229:
 2658 0000 38B5     		push	{r3, r4, r5, lr}
 2659              	.LCFI33:
 2660              		.cfi_def_cfa_offset 16
 2661              		.cfi_offset 3, -16
 2662              		.cfi_offset 4, -12
 2663              		.cfi_offset 5, -8
 2664              		.cfi_offset 14, -4
 2665 0002 0546     		mov	r5, r0
 2666              	.LVL230:
2258:Src/main.c    **** 	 {
 2667              		.loc 1 2258 0
 2668 0004 0024     		movs	r4, #0
 2669 0006 06E0     		b	.L154
 2670              	.LVL231:
 2671              	.L155:
2262:Src/main.c    **** 	 }
 2672              		.loc 1 2262 0 discriminator 3
ARM GAS  /tmp/ccxsI2YD.s 			page 129


 2673 0008 044B     		ldr	r3, .L157
 2674 000a 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 2675 000c 295D     		ldrb	r1, [r5, r4]	@ zero_extendqisi2
 2676 000e FFF7FEFF 		bl	VXISI2CWrite
 2677              	.LVL232:
2258:Src/main.c    **** 	 {
 2678              		.loc 1 2258 0 discriminator 3
 2679 0012 0134     		adds	r4, r4, #1
 2680              	.LVL233:
 2681 0014 E4B2     		uxtb	r4, r4
 2682              	.LVL234:
 2683              	.L154:
2258:Src/main.c    **** 	 {
 2684              		.loc 1 2258 0 is_stmt 0 discriminator 1
 2685 0016 572C     		cmp	r4, #87
 2686 0018 F6D9     		bls	.L155
2264:Src/main.c    **** 
 2687              		.loc 1 2264 0 is_stmt 1
 2688 001a 38BD     		pop	{r3, r4, r5, pc}
 2689              	.LVL235:
 2690              	.L158:
 2691              		.align	2
 2692              	.L157:
 2693 001c 00000000 		.word	VS4210_Addr_88param
 2694              		.cfi_endproc
 2695              	.LFE84:
 2697              		.section	.text.TP_bt1120_1080P_1080P_mode0_w0,"ax",%progbits
 2698              		.align	2
 2699              		.global	TP_bt1120_1080P_1080P_mode0_w0
 2700              		.thumb
 2701              		.thumb_func
 2703              	TP_bt1120_1080P_1080P_mode0_w0:
 2704              	.LFB85:
2267:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table 1080P... ");
 2705              		.loc 1 2267 0
 2706              		.cfi_startproc
 2707              		@ args = 0, pretend = 0, frame = 0
 2708              		@ frame_needed = 0, uses_anonymous_args = 0
 2709 0000 08B5     		push	{r3, lr}
 2710              	.LCFI34:
 2711              		.cfi_def_cfa_offset 8
 2712              		.cfi_offset 3, -8
 2713              		.cfi_offset 14, -4
2268:Src/main.c    **** #if 1
 2714              		.loc 1 2268 0
 2715 0002 0348     		ldr	r0, .L161
 2716 0004 FFF7FEFF 		bl	Printf
 2717              	.LVL236:
2271:Src/main.c    **** #else
 2718              		.loc 1 2271 0
 2719 0008 0248     		ldr	r0, .L161+4
 2720 000a FFF7FEFF 		bl	VS4210_FULL88init2
 2721              	.LVL237:
 2722 000e 08BD     		pop	{r3, pc}
 2723              	.L162:
 2724              		.align	2
 2725              	.L161:
ARM GAS  /tmp/ccxsI2YD.s 			page 130


 2726 0010 E0020000 		.word	.LC31
 2727 0014 00000000 		.word	VS4210_TP_bt1120_1080P_1080P_mode0_w0_88param
 2728              		.cfi_endproc
 2729              	.LFE85:
 2731              		.section	.text.TP_bt1120_720P_1080P_mode0_w0,"ax",%progbits
 2732              		.align	2
 2733              		.global	TP_bt1120_720P_1080P_mode0_w0
 2734              		.thumb
 2735              		.thumb_func
 2737              	TP_bt1120_720P_1080P_mode0_w0:
 2738              	.LFB86:
2778:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table 720P... ");
 2739              		.loc 1 2778 0
 2740              		.cfi_startproc
 2741              		@ args = 0, pretend = 0, frame = 0
 2742              		@ frame_needed = 0, uses_anonymous_args = 0
 2743 0000 08B5     		push	{r3, lr}
 2744              	.LCFI35:
 2745              		.cfi_def_cfa_offset 8
 2746              		.cfi_offset 3, -8
 2747              		.cfi_offset 14, -4
2779:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_720P_1080P_mode0_w0_88param);
 2748              		.loc 1 2779 0
 2749 0002 0548     		ldr	r0, .L165
 2750 0004 FFF7FEFF 		bl	Printf
 2751              	.LVL238:
2780:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);
 2752              		.loc 1 2780 0
 2753 0008 0448     		ldr	r0, .L165+4
 2754 000a FFF7FEFF 		bl	VS4210_FULL88init2
 2755              	.LVL239:
2781:Src/main.c    **** 
 2756              		.loc 1 2781 0
 2757 000e D720     		movs	r0, #215
 2758 0010 1021     		movs	r1, #16
 2759 0012 FFF7FEFF 		bl	VXISI2CWrite
 2760              	.LVL240:
 2761 0016 08BD     		pop	{r3, pc}
 2762              	.L166:
 2763              		.align	2
 2764              	.L165:
 2765 0018 08030000 		.word	.LC32
 2766 001c 00000000 		.word	VS4210_TP_bt1120_720P_1080P_mode0_w0_88param
 2767              		.cfi_endproc
 2768              	.LFE86:
 2770              		.section	.text.TP_bt1120_NTSC_1080P_mode0_w0,"ax",%progbits
 2771              		.align	2
 2772              		.global	TP_bt1120_NTSC_1080P_mode0_w0
 2773              		.thumb
 2774              		.thumb_func
 2776              	TP_bt1120_NTSC_1080P_mode0_w0:
 2777              	.LFB87:
2786:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table NTSC... ");
 2778              		.loc 1 2786 0
 2779              		.cfi_startproc
 2780              		@ args = 0, pretend = 0, frame = 0
 2781              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccxsI2YD.s 			page 131


 2782 0000 08B5     		push	{r3, lr}
 2783              	.LCFI36:
 2784              		.cfi_def_cfa_offset 8
 2785              		.cfi_offset 3, -8
 2786              		.cfi_offset 14, -4
2787:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_NTSC_1080P_mode0_w0_88param);
 2787              		.loc 1 2787 0
 2788 0002 0348     		ldr	r0, .L169
 2789 0004 FFF7FEFF 		bl	Printf
 2790              	.LVL241:
2788:Src/main.c    **** }
 2791              		.loc 1 2788 0
 2792 0008 0248     		ldr	r0, .L169+4
 2793 000a FFF7FEFF 		bl	VS4210_FULL88init2
 2794              	.LVL242:
 2795 000e 08BD     		pop	{r3, pc}
 2796              	.L170:
 2797              		.align	2
 2798              	.L169:
 2799 0010 2C030000 		.word	.LC33
 2800 0014 00000000 		.word	VS4210_TP_bt1120_NTSC_1080P_mode0_w0_88param
 2801              		.cfi_endproc
 2802              	.LFE87:
 2804              		.section	.text.TP_bt1120_PAL_1080P_mode0_w0,"ax",%progbits
 2805              		.align	2
 2806              		.global	TP_bt1120_PAL_1080P_mode0_w0
 2807              		.thumb
 2808              		.thumb_func
 2810              	TP_bt1120_PAL_1080P_mode0_w0:
 2811              	.LFB88:
2792:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table PAL... ");
 2812              		.loc 1 2792 0
 2813              		.cfi_startproc
 2814              		@ args = 0, pretend = 0, frame = 0
 2815              		@ frame_needed = 0, uses_anonymous_args = 0
 2816 0000 08B5     		push	{r3, lr}
 2817              	.LCFI37:
 2818              		.cfi_def_cfa_offset 8
 2819              		.cfi_offset 3, -8
 2820              		.cfi_offset 14, -4
2793:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_PAL_1080P_mode0_w0_88param);
 2821              		.loc 1 2793 0
 2822 0002 0348     		ldr	r0, .L173
 2823 0004 FFF7FEFF 		bl	Printf
 2824              	.LVL243:
2794:Src/main.c    **** 	#if 0
 2825              		.loc 1 2794 0
 2826 0008 0248     		ldr	r0, .L173+4
 2827 000a FFF7FEFF 		bl	VS4210_FULL88init2
 2828              	.LVL244:
 2829 000e 08BD     		pop	{r3, pc}
 2830              	.L174:
 2831              		.align	2
 2832              	.L173:
 2833 0010 50030000 		.word	.LC34
 2834 0014 00000000 		.word	VS4210_TP_bt1120_PAL_1080P_mode0_w0_88param
 2835              		.cfi_endproc
ARM GAS  /tmp/ccxsI2YD.s 			page 132


 2836              	.LFE88:
 2838              		.section	.text.SET_VS4210_720_480_out,"ax",%progbits
 2839              		.align	2
 2840              		.global	SET_VS4210_720_480_out
 2841              		.thumb
 2842              		.thumb_func
 2844              	SET_VS4210_720_480_out:
 2845              	.LFB89:
3039:Src/main.c    **** 	Printf("\r\nSET_VS4210_720_480_out ");
 2846              		.loc 1 3039 0
 2847              		.cfi_startproc
 2848              		@ args = 0, pretend = 0, frame = 0
 2849              		@ frame_needed = 0, uses_anonymous_args = 0
 2850 0000 08B5     		push	{r3, lr}
 2851              	.LCFI38:
 2852              		.cfi_def_cfa_offset 8
 2853              		.cfi_offset 3, -8
 2854              		.cfi_offset 14, -4
3040:Src/main.c    **** 
 2855              		.loc 1 3040 0
 2856 0002 FE48     		ldr	r0, .L177
 2857 0004 FFF7FEFF 		bl	Printf
 2858              	.LVL245:
3042:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);
 2859              		.loc 1 3042 0
 2860 0008 0120     		movs	r0, #1
 2861 000a 0021     		movs	r1, #0
 2862 000c FFF7FEFF 		bl	VXISI2CWrite
 2863              	.LVL246:
3043:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);
 2864              		.loc 1 3043 0
 2865 0010 0220     		movs	r0, #2
 2866 0012 0021     		movs	r1, #0
 2867 0014 FFF7FEFF 		bl	VXISI2CWrite
 2868              	.LVL247:
3044:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);
 2869              		.loc 1 3044 0
 2870 0018 0320     		movs	r0, #3
 2871 001a 7521     		movs	r1, #117
 2872 001c FFF7FEFF 		bl	VXISI2CWrite
 2873              	.LVL248:
3045:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);
 2874              		.loc 1 3045 0
 2875 0020 0420     		movs	r0, #4
 2876 0022 1821     		movs	r1, #24
 2877 0024 FFF7FEFF 		bl	VXISI2CWrite
 2878              	.LVL249:
3046:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);
 2879              		.loc 1 3046 0
 2880 0028 0520     		movs	r0, #5
 2881 002a 8021     		movs	r1, #128
 2882 002c FFF7FEFF 		bl	VXISI2CWrite
 2883              	.LVL250:
3047:Src/main.c    **** 	VXISI2CWrite(0x07,0x08);
 2884              		.loc 1 3047 0
 2885 0030 0620     		movs	r0, #6
 2886 0032 2021     		movs	r1, #32
ARM GAS  /tmp/ccxsI2YD.s 			page 133


 2887 0034 FFF7FEFF 		bl	VXISI2CWrite
 2888              	.LVL251:
3048:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);
 2889              		.loc 1 3048 0
 2890 0038 0720     		movs	r0, #7
 2891 003a 0821     		movs	r1, #8
 2892 003c FFF7FEFF 		bl	VXISI2CWrite
 2893              	.LVL252:
3049:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);
 2894              		.loc 1 3049 0
 2895 0040 0820     		movs	r0, #8
 2896 0042 4021     		movs	r1, #64
 2897 0044 FFF7FEFF 		bl	VXISI2CWrite
 2898              	.LVL253:
3050:Src/main.c    **** 	VXISI2CWrite(0x0A,0x41);
 2899              		.loc 1 3050 0
 2900 0048 0920     		movs	r0, #9
 2901 004a 0A21     		movs	r1, #10
 2902 004c FFF7FEFF 		bl	VXISI2CWrite
 2903              	.LVL254:
3051:Src/main.c    **** 	VXISI2CWrite(0x0B,0x07);
 2904              		.loc 1 3051 0
 2905 0050 0A20     		movs	r0, #10
 2906 0052 4121     		movs	r1, #65
 2907 0054 FFF7FEFF 		bl	VXISI2CWrite
 2908              	.LVL255:
3052:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);
 2909              		.loc 1 3052 0
 2910 0058 0B20     		movs	r0, #11
 2911 005a 0721     		movs	r1, #7
 2912 005c FFF7FEFF 		bl	VXISI2CWrite
 2913              	.LVL256:
3053:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);
 2914              		.loc 1 3053 0
 2915 0060 0C20     		movs	r0, #12
 2916 0062 0021     		movs	r1, #0
 2917 0064 FFF7FEFF 		bl	VXISI2CWrite
 2918              	.LVL257:
3054:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);
 2919              		.loc 1 3054 0
 2920 0068 0D20     		movs	r0, #13
 2921 006a 2021     		movs	r1, #32
 2922 006c FFF7FEFF 		bl	VXISI2CWrite
 2923              	.LVL258:
3055:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);
 2924              		.loc 1 3055 0
 2925 0070 0E20     		movs	r0, #14
 2926 0072 1021     		movs	r1, #16
 2927 0074 FFF7FEFF 		bl	VXISI2CWrite
 2928              	.LVL259:
3056:Src/main.c    **** 	VXISI2CWrite(0x10,0x80);
 2929              		.loc 1 3056 0
 2930 0078 0F20     		movs	r0, #15
 2931 007a 0021     		movs	r1, #0
 2932 007c FFF7FEFF 		bl	VXISI2CWrite
 2933              	.LVL260:
3057:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);
ARM GAS  /tmp/ccxsI2YD.s 			page 134


 2934              		.loc 1 3057 0
 2935 0080 1020     		movs	r0, #16
 2936 0082 8021     		movs	r1, #128
 2937 0084 FFF7FEFF 		bl	VXISI2CWrite
 2938              	.LVL261:
3058:Src/main.c    **** 	VXISI2CWrite(0x12,0x21);
 2939              		.loc 1 3058 0
 2940 0088 1120     		movs	r0, #17
 2941 008a 8221     		movs	r1, #130
 2942 008c FFF7FEFF 		bl	VXISI2CWrite
 2943              	.LVL262:
3059:Src/main.c    **** 	VXISI2CWrite(0x13,0xD0);
 2944              		.loc 1 3059 0
 2945 0090 1220     		movs	r0, #18
 2946 0092 2121     		movs	r1, #33
 2947 0094 FFF7FEFF 		bl	VXISI2CWrite
 2948              	.LVL263:
3060:Src/main.c    **** 	VXISI2CWrite(0x14,0xE0);
 2949              		.loc 1 3060 0
 2950 0098 1320     		movs	r0, #19
 2951 009a D021     		movs	r1, #208
 2952 009c FFF7FEFF 		bl	VXISI2CWrite
 2953              	.LVL264:
3061:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);
 2954              		.loc 1 3061 0
 2955 00a0 1420     		movs	r0, #20
 2956 00a2 E021     		movs	r1, #224
 2957 00a4 FFF7FEFF 		bl	VXISI2CWrite
 2958              	.LVL265:
3062:Src/main.c    **** 	VXISI2CWrite(0x16,0xFE);
 2959              		.loc 1 3062 0
 2960 00a8 1520     		movs	r0, #21
 2961 00aa 7821     		movs	r1, #120
 2962 00ac FFF7FEFF 		bl	VXISI2CWrite
 2963              	.LVL266:
3063:Src/main.c    **** 	VXISI2CWrite(0x17,0x00);
 2964              		.loc 1 3063 0
 2965 00b0 1620     		movs	r0, #22
 2966 00b2 FE21     		movs	r1, #254
 2967 00b4 FFF7FEFF 		bl	VXISI2CWrite
 2968              	.LVL267:
3064:Src/main.c    **** 	VXISI2CWrite(0x18,0xC8);
 2969              		.loc 1 3064 0
 2970 00b8 1720     		movs	r0, #23
 2971 00ba 0021     		movs	r1, #0
 2972 00bc FFF7FEFF 		bl	VXISI2CWrite
 2973              	.LVL268:
3065:Src/main.c    **** 	VXISI2CWrite(0x19,0x00);
 2974              		.loc 1 3065 0
 2975 00c0 1820     		movs	r0, #24
 2976 00c2 C821     		movs	r1, #200
 2977 00c4 FFF7FEFF 		bl	VXISI2CWrite
 2978              	.LVL269:
3066:Src/main.c    **** 	VXISI2CWrite(0x1A,0x23);
 2979              		.loc 1 3066 0
 2980 00c8 1920     		movs	r0, #25
 2981 00ca 0021     		movs	r1, #0
ARM GAS  /tmp/ccxsI2YD.s 			page 135


 2982 00cc FFF7FEFF 		bl	VXISI2CWrite
 2983              	.LVL270:
3067:Src/main.c    **** 	VXISI2CWrite(0x1B,0x00);
 2984              		.loc 1 3067 0
 2985 00d0 1A20     		movs	r0, #26
 2986 00d2 2321     		movs	r1, #35
 2987 00d4 FFF7FEFF 		bl	VXISI2CWrite
 2988              	.LVL271:
3068:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);
 2989              		.loc 1 3068 0
 2990 00d8 1B20     		movs	r0, #27
 2991 00da 0021     		movs	r1, #0
 2992 00dc FFF7FEFF 		bl	VXISI2CWrite
 2993              	.LVL272:
3069:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);
 2994              		.loc 1 3069 0
 2995 00e0 1C20     		movs	r0, #28
 2996 00e2 0021     		movs	r1, #0
 2997 00e4 FFF7FEFF 		bl	VXISI2CWrite
 2998              	.LVL273:
3070:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);
 2999              		.loc 1 3070 0
 3000 00e8 1D20     		movs	r0, #29
 3001 00ea 0021     		movs	r1, #0
 3002 00ec FFF7FEFF 		bl	VXISI2CWrite
 3003              	.LVL274:
3071:Src/main.c    **** 	VXISI2CWrite(0x1F,0x32);
 3004              		.loc 1 3071 0
 3005 00f0 1E20     		movs	r0, #30
 3006 00f2 2021     		movs	r1, #32
 3007 00f4 FFF7FEFF 		bl	VXISI2CWrite
 3008              	.LVL275:
3072:Src/main.c    **** 	VXISI2CWrite(0x20,0x5A);
 3009              		.loc 1 3072 0
 3010 00f8 1F20     		movs	r0, #31
 3011 00fa 3221     		movs	r1, #50
 3012 00fc FFF7FEFF 		bl	VXISI2CWrite
 3013              	.LVL276:
3073:Src/main.c    **** 	VXISI2CWrite(0x21,0x0D);
 3014              		.loc 1 3073 0
 3015 0100 2020     		movs	r0, #32
 3016 0102 5A21     		movs	r1, #90
 3017 0104 FFF7FEFF 		bl	VXISI2CWrite
 3018              	.LVL277:
3074:Src/main.c    **** 	VXISI2CWrite(0x22,0x32);
 3019              		.loc 1 3074 0
 3020 0108 2120     		movs	r0, #33
 3021 010a 0D21     		movs	r1, #13
 3022 010c FFF7FEFF 		bl	VXISI2CWrite
 3023              	.LVL278:
3075:Src/main.c    **** 	VXISI2CWrite(0x23,0x5A);
 3024              		.loc 1 3075 0
 3025 0110 2220     		movs	r0, #34
 3026 0112 3221     		movs	r1, #50
 3027 0114 FFF7FEFF 		bl	VXISI2CWrite
 3028              	.LVL279:
3076:Src/main.c    **** 	VXISI2CWrite(0x24,0xD0);
ARM GAS  /tmp/ccxsI2YD.s 			page 136


 3029              		.loc 1 3076 0
 3030 0118 2320     		movs	r0, #35
 3031 011a 5A21     		movs	r1, #90
 3032 011c FFF7FEFF 		bl	VXISI2CWrite
 3033              	.LVL280:
3077:Src/main.c    **** 	VXISI2CWrite(0x25,0x21);
 3034              		.loc 1 3077 0
 3035 0120 2420     		movs	r0, #36
 3036 0122 D021     		movs	r1, #208
 3037 0124 FFF7FEFF 		bl	VXISI2CWrite
 3038              	.LVL281:
3078:Src/main.c    **** 	VXISI2CWrite(0x26,0x0D);
 3039              		.loc 1 3078 0
 3040 0128 2520     		movs	r0, #37
 3041 012a 2121     		movs	r1, #33
 3042 012c FFF7FEFF 		bl	VXISI2CWrite
 3043              	.LVL282:
3079:Src/main.c    **** 	VXISI2CWrite(0x27,0xE0);
 3044              		.loc 1 3079 0
 3045 0130 2620     		movs	r0, #38
 3046 0132 0D21     		movs	r1, #13
 3047 0134 FFF7FEFF 		bl	VXISI2CWrite
 3048              	.LVL283:
3080:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);
 3049              		.loc 1 3080 0
 3050 0138 2720     		movs	r0, #39
 3051 013a E021     		movs	r1, #224
 3052 013c FFF7FEFF 		bl	VXISI2CWrite
 3053              	.LVL284:
3081:Src/main.c    **** 	VXISI2CWrite(0x29,0x00);
 3054              		.loc 1 3081 0
 3055 0140 2820     		movs	r0, #40
 3056 0142 F021     		movs	r1, #240
 3057 0144 FFF7FEFF 		bl	VXISI2CWrite
 3058              	.LVL285:
3082:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);
 3059              		.loc 1 3082 0
 3060 0148 2920     		movs	r0, #41
 3061 014a 0021     		movs	r1, #0
 3062 014c FFF7FEFF 		bl	VXISI2CWrite
 3063              	.LVL286:
3083:Src/main.c    **** 	VXISI2CWrite(0x2B,0x01);
 3064              		.loc 1 3083 0
 3065 0150 2A20     		movs	r0, #42
 3066 0152 0021     		movs	r1, #0
 3067 0154 FFF7FEFF 		bl	VXISI2CWrite
 3068              	.LVL287:
3084:Src/main.c    **** 	VXISI2CWrite(0x2C,0xFF);
 3069              		.loc 1 3084 0
 3070 0158 2B20     		movs	r0, #43
 3071 015a 0121     		movs	r1, #1
 3072 015c FFF7FEFF 		bl	VXISI2CWrite
 3073              	.LVL288:
3085:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);
 3074              		.loc 1 3085 0
 3075 0160 2C20     		movs	r0, #44
 3076 0162 FF21     		movs	r1, #255
ARM GAS  /tmp/ccxsI2YD.s 			page 137


 3077 0164 FFF7FEFF 		bl	VXISI2CWrite
 3078              	.LVL289:
3086:Src/main.c    **** 	VXISI2CWrite(0x2E,0x12);
 3079              		.loc 1 3086 0
 3080 0168 2D20     		movs	r0, #45
 3081 016a 0021     		movs	r1, #0
 3082 016c FFF7FEFF 		bl	VXISI2CWrite
 3083              	.LVL290:
3087:Src/main.c    **** 	VXISI2CWrite(0x2F,0xD0);
 3084              		.loc 1 3087 0
 3085 0170 2E20     		movs	r0, #46
 3086 0172 1221     		movs	r1, #18
 3087 0174 FFF7FEFF 		bl	VXISI2CWrite
 3088              	.LVL291:
3088:Src/main.c    **** 	VXISI2CWrite(0x30,0xE0);
 3089              		.loc 1 3088 0
 3090 0178 2F20     		movs	r0, #47
 3091 017a D021     		movs	r1, #208
 3092 017c FFF7FEFF 		bl	VXISI2CWrite
 3093              	.LVL292:
3089:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);
 3094              		.loc 1 3089 0
 3095 0180 3020     		movs	r0, #48
 3096 0182 E021     		movs	r1, #224
 3097 0184 FFF7FEFF 		bl	VXISI2CWrite
 3098              	.LVL293:
3090:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);
 3099              		.loc 1 3090 0
 3100 0188 3120     		movs	r0, #49
 3101 018a 8021     		movs	r1, #128
 3102 018c FFF7FEFF 		bl	VXISI2CWrite
 3103              	.LVL294:
3091:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);
 3104              		.loc 1 3091 0
 3105 0190 3220     		movs	r0, #50
 3106 0192 8021     		movs	r1, #128
 3107 0194 FFF7FEFF 		bl	VXISI2CWrite
 3108              	.LVL295:
3092:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);
 3109              		.loc 1 3092 0
 3110 0198 3320     		movs	r0, #51
 3111 019a 8021     		movs	r1, #128
 3112 019c FFF7FEFF 		bl	VXISI2CWrite
 3113              	.LVL296:
3093:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);
 3114              		.loc 1 3093 0
 3115 01a0 3420     		movs	r0, #52
 3116 01a2 A021     		movs	r1, #160
 3117 01a4 FFF7FEFF 		bl	VXISI2CWrite
 3118              	.LVL297:
3094:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);
 3119              		.loc 1 3094 0
 3120 01a8 3520     		movs	r0, #53
 3121 01aa 1821     		movs	r1, #24
 3122 01ac FFF7FEFF 		bl	VXISI2CWrite
 3123              	.LVL298:
3095:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);
ARM GAS  /tmp/ccxsI2YD.s 			page 138


 3124              		.loc 1 3095 0
 3125 01b0 3620     		movs	r0, #54
 3126 01b2 4621     		movs	r1, #70
 3127 01b4 FFF7FEFF 		bl	VXISI2CWrite
 3128              	.LVL299:
3096:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);
 3129              		.loc 1 3096 0
 3130 01b8 3720     		movs	r0, #55
 3131 01ba 6421     		movs	r1, #100
 3132 01bc FFF7FEFF 		bl	VXISI2CWrite
 3133              	.LVL300:
3097:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);
 3134              		.loc 1 3097 0
 3135 01c0 3820     		movs	r0, #56
 3136 01c2 0021     		movs	r1, #0
 3137 01c4 FFF7FEFF 		bl	VXISI2CWrite
 3138              	.LVL301:
3098:Src/main.c    **** 	VXISI2CWrite(0x3A,0x03);
 3139              		.loc 1 3098 0
 3140 01c8 3920     		movs	r0, #57
 3141 01ca FF21     		movs	r1, #255
 3142 01cc FFF7FEFF 		bl	VXISI2CWrite
 3143              	.LVL302:
3099:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);
 3144              		.loc 1 3099 0
 3145 01d0 3A20     		movs	r0, #58
 3146 01d2 0321     		movs	r1, #3
 3147 01d4 FFF7FEFF 		bl	VXISI2CWrite
 3148              	.LVL303:
3100:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);
 3149              		.loc 1 3100 0
 3150 01d8 3B20     		movs	r0, #59
 3151 01da 8021     		movs	r1, #128
 3152 01dc FFF7FEFF 		bl	VXISI2CWrite
 3153              	.LVL304:
3101:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);
 3154              		.loc 1 3101 0
 3155 01e0 3C20     		movs	r0, #60
 3156 01e2 8021     		movs	r1, #128
 3157 01e4 FFF7FEFF 		bl	VXISI2CWrite
 3158              	.LVL305:
3102:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);
 3159              		.loc 1 3102 0
 3160 01e8 3D20     		movs	r0, #61
 3161 01ea 8021     		movs	r1, #128
 3162 01ec FFF7FEFF 		bl	VXISI2CWrite
 3163              	.LVL306:
3103:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);
 3164              		.loc 1 3103 0
 3165 01f0 3E20     		movs	r0, #62
 3166 01f2 8021     		movs	r1, #128
 3167 01f4 FFF7FEFF 		bl	VXISI2CWrite
 3168              	.LVL307:
3104:Src/main.c    **** 	//VXISI2CWrite(0xVXISI);2CWrite(0x80
 3169              		.loc 1 3104 0
 3170 01f8 3F20     		movs	r0, #63
 3171 01fa 8021     		movs	r1, #128
ARM GAS  /tmp/ccxsI2YD.s 			page 139


 3172 01fc FFF7FEFF 		bl	VXISI2CWrite
 3173              	.LVL308:
3106:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);
 3174              		.loc 1 3106 0
 3175 0200 4120     		movs	r0, #65
 3176 0202 6021     		movs	r1, #96
 3177 0204 FFF7FEFF 		bl	VXISI2CWrite
 3178              	.LVL309:
3107:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);
 3179              		.loc 1 3107 0
 3180 0208 4220     		movs	r0, #66
 3181 020a 5F21     		movs	r1, #95
 3182 020c FFF7FEFF 		bl	VXISI2CWrite
 3183              	.LVL310:
3108:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);
 3184              		.loc 1 3108 0
 3185 0210 4320     		movs	r0, #67
 3186 0212 3721     		movs	r1, #55
 3187 0214 FFF7FEFF 		bl	VXISI2CWrite
 3188              	.LVL311:
3109:Src/main.c    **** 	VXISI2CWrite(0x45,0x04);
 3189              		.loc 1 3109 0
 3190 0218 4420     		movs	r0, #68
 3191 021a 1421     		movs	r1, #20
 3192 021c FFF7FEFF 		bl	VXISI2CWrite
 3193              	.LVL312:
3110:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);
 3194              		.loc 1 3110 0
 3195 0220 4520     		movs	r0, #69
 3196 0222 0421     		movs	r1, #4
 3197 0224 FFF7FEFF 		bl	VXISI2CWrite
 3198              	.LVL313:
3111:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);
 3199              		.loc 1 3111 0
 3200 0228 4620     		movs	r0, #70
 3201 022a 0021     		movs	r1, #0
 3202 022c FFF7FEFF 		bl	VXISI2CWrite
 3203              	.LVL314:
3112:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);
 3204              		.loc 1 3112 0
 3205 0230 4720     		movs	r0, #71
 3206 0232 0021     		movs	r1, #0
 3207 0234 FFF7FEFF 		bl	VXISI2CWrite
 3208              	.LVL315:
3113:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);
 3209              		.loc 1 3113 0
 3210 0238 4820     		movs	r0, #72
 3211 023a 0021     		movs	r1, #0
 3212 023c FFF7FEFF 		bl	VXISI2CWrite
 3213              	.LVL316:
3114:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);
 3214              		.loc 1 3114 0
 3215 0240 4920     		movs	r0, #73
 3216 0242 0021     		movs	r1, #0
 3217 0244 FFF7FEFF 		bl	VXISI2CWrite
 3218              	.LVL317:
3115:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);
ARM GAS  /tmp/ccxsI2YD.s 			page 140


 3219              		.loc 1 3115 0
 3220 0248 4B20     		movs	r0, #75
 3221 024a 2021     		movs	r1, #32
 3222 024c FFF7FEFF 		bl	VXISI2CWrite
 3223              	.LVL318:
3116:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);
 3224              		.loc 1 3116 0
 3225 0250 4C20     		movs	r0, #76
 3226 0252 0021     		movs	r1, #0
 3227 0254 FFF7FEFF 		bl	VXISI2CWrite
 3228              	.LVL319:
3117:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);
 3229              		.loc 1 3117 0
 3230 0258 4D20     		movs	r0, #77
 3231 025a 0021     		movs	r1, #0
 3232 025c FFF7FEFF 		bl	VXISI2CWrite
 3233              	.LVL320:
3118:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);
 3234              		.loc 1 3118 0
 3235 0260 4E20     		movs	r0, #78
 3236 0262 0021     		movs	r1, #0
 3237 0264 FFF7FEFF 		bl	VXISI2CWrite
 3238              	.LVL321:
3119:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);
 3239              		.loc 1 3119 0
 3240 0268 4F20     		movs	r0, #79
 3241 026a 7F21     		movs	r1, #127
 3242 026c FFF7FEFF 		bl	VXISI2CWrite
 3243              	.LVL322:
3120:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);
 3244              		.loc 1 3120 0
 3245 0270 5020     		movs	r0, #80
 3246 0272 2021     		movs	r1, #32
 3247 0274 FFF7FEFF 		bl	VXISI2CWrite
 3248              	.LVL323:
3121:Src/main.c    **** 	VXISI2CWrite(0x52,0x00);
 3249              		.loc 1 3121 0
 3250 0278 5120     		movs	r0, #81
 3251 027a 0021     		movs	r1, #0
 3252 027c FFF7FEFF 		bl	VXISI2CWrite
 3253              	.LVL324:
3122:Src/main.c    **** 	VXISI2CWrite(0x53,0x04);
 3254              		.loc 1 3122 0
 3255 0280 5220     		movs	r0, #82
 3256 0282 0021     		movs	r1, #0
 3257 0284 FFF7FEFF 		bl	VXISI2CWrite
 3258              	.LVL325:
3123:Src/main.c    **** 	VXISI2CWrite(0x54,0x00);
 3259              		.loc 1 3123 0
 3260 0288 5320     		movs	r0, #83
 3261 028a 0421     		movs	r1, #4
 3262 028c FFF7FEFF 		bl	VXISI2CWrite
 3263              	.LVL326:
3124:Src/main.c    **** 	VXISI2CWrite(0x55,0xE0);
 3264              		.loc 1 3124 0
 3265 0290 5420     		movs	r0, #84
 3266 0292 0021     		movs	r1, #0
ARM GAS  /tmp/ccxsI2YD.s 			page 141


 3267 0294 FFF7FEFF 		bl	VXISI2CWrite
 3268              	.LVL327:
3125:Src/main.c    **** 	VXISI2CWrite(0x56,0x40);
 3269              		.loc 1 3125 0
 3270 0298 5520     		movs	r0, #85
 3271 029a E021     		movs	r1, #224
 3272 029c FFF7FEFF 		bl	VXISI2CWrite
 3273              	.LVL328:
3126:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);
 3274              		.loc 1 3126 0
 3275 02a0 5620     		movs	r0, #86
 3276 02a2 4021     		movs	r1, #64
 3277 02a4 FFF7FEFF 		bl	VXISI2CWrite
 3278              	.LVL329:
3127:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);
 3279              		.loc 1 3127 0
 3280 02a8 5720     		movs	r0, #87
 3281 02aa 0421     		movs	r1, #4
 3282 02ac FFF7FEFF 		bl	VXISI2CWrite
 3283              	.LVL330:
3128:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);
 3284              		.loc 1 3128 0
 3285 02b0 5820     		movs	r0, #88
 3286 02b2 0021     		movs	r1, #0
 3287 02b4 FFF7FEFF 		bl	VXISI2CWrite
 3288              	.LVL331:
3129:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);
 3289              		.loc 1 3129 0
 3290 02b8 5920     		movs	r0, #89
 3291 02ba 0821     		movs	r1, #8
 3292 02bc FFF7FEFF 		bl	VXISI2CWrite
 3293              	.LVL332:
3130:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);
 3294              		.loc 1 3130 0
 3295 02c0 5A20     		movs	r0, #90
 3296 02c2 1021     		movs	r1, #16
 3297 02c4 FFF7FEFF 		bl	VXISI2CWrite
 3298              	.LVL333:
3131:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);
 3299              		.loc 1 3131 0
 3300 02c8 5B20     		movs	r0, #91
 3301 02ca 0021     		movs	r1, #0
 3302 02cc FFF7FEFF 		bl	VXISI2CWrite
 3303              	.LVL334:
3132:Src/main.c    **** 	VXISI2CWrite(0x5D,0x40);
 3304              		.loc 1 3132 0
 3305 02d0 5C20     		movs	r0, #92
 3306 02d2 6821     		movs	r1, #104
 3307 02d4 FFF7FEFF 		bl	VXISI2CWrite
 3308              	.LVL335:
3133:Src/main.c    **** 	VXISI2CWrite(0x5E,0x08);
 3309              		.loc 1 3133 0
 3310 02d8 5D20     		movs	r0, #93
 3311 02da 4021     		movs	r1, #64
 3312 02dc FFF7FEFF 		bl	VXISI2CWrite
 3313              	.LVL336:
3134:Src/main.c    **** 	VXISI2CWrite(0x5F,0x00);
ARM GAS  /tmp/ccxsI2YD.s 			page 142


 3314              		.loc 1 3134 0
 3315 02e0 5E20     		movs	r0, #94
 3316 02e2 0821     		movs	r1, #8
 3317 02e4 FFF7FEFF 		bl	VXISI2CWrite
 3318              	.LVL337:
3135:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);
 3319              		.loc 1 3135 0
 3320 02e8 5F20     		movs	r0, #95
 3321 02ea 0021     		movs	r1, #0
 3322 02ec FFF7FEFF 		bl	VXISI2CWrite
 3323              	.LVL338:
3136:Src/main.c    **** 	VXISI2CWrite(0x61,0x54);
 3324              		.loc 1 3136 0
 3325 02f0 6020     		movs	r0, #96
 3326 02f2 E021     		movs	r1, #224
 3327 02f4 FFF7FEFF 		bl	VXISI2CWrite
 3328              	.LVL339:
3137:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);
 3329              		.loc 1 3137 0
 3330 02f8 6120     		movs	r0, #97
 3331 02fa 5421     		movs	r1, #84
 3332 02fc FFF7FEFF 		bl	VXISI2CWrite
 3333              	.LVL340:
3138:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);
 3334              		.loc 1 3138 0
 3335 0300 6220     		movs	r0, #98
 3336 0302 3321     		movs	r1, #51
 3337 0304 FFF7FEFF 		bl	VXISI2CWrite
 3338              	.LVL341:
3139:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);
 3339              		.loc 1 3139 0
 3340 0308 6320     		movs	r0, #99
 3341 030a 0121     		movs	r1, #1
 3342 030c FFF7FEFF 		bl	VXISI2CWrite
 3343              	.LVL342:
3140:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);
 3344              		.loc 1 3140 0
 3345 0310 6420     		movs	r0, #100
 3346 0312 FF21     		movs	r1, #255
 3347 0314 FFF7FEFF 		bl	VXISI2CWrite
 3348              	.LVL343:
3141:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);
 3349              		.loc 1 3141 0
 3350 0318 6520     		movs	r0, #101
 3351 031a 0121     		movs	r1, #1
 3352 031c FFF7FEFF 		bl	VXISI2CWrite
 3353              	.LVL344:
3142:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);
 3354              		.loc 1 3142 0
 3355 0320 6620     		movs	r0, #102
 3356 0322 FF21     		movs	r1, #255
 3357 0324 FFF7FEFF 		bl	VXISI2CWrite
 3358              	.LVL345:
3143:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);
 3359              		.loc 1 3143 0
 3360 0328 6720     		movs	r0, #103
 3361 032a 8921     		movs	r1, #137
ARM GAS  /tmp/ccxsI2YD.s 			page 143


 3362 032c FFF7FEFF 		bl	VXISI2CWrite
 3363              	.LVL346:
3144:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);
 3364              		.loc 1 3144 0
 3365 0330 6820     		movs	r0, #104
 3366 0332 AB21     		movs	r1, #171
 3367 0334 FFF7FEFF 		bl	VXISI2CWrite
 3368              	.LVL347:
3145:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);
 3369              		.loc 1 3145 0
 3370 0338 6920     		movs	r0, #105
 3371 033a 8821     		movs	r1, #136
 3372 033c FFF7FEFF 		bl	VXISI2CWrite
 3373              	.LVL348:
3146:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);
 3374              		.loc 1 3146 0
 3375 0340 6A20     		movs	r0, #106
 3376 0342 6E21     		movs	r1, #110
 3377 0344 FFF7FEFF 		bl	VXISI2CWrite
 3378              	.LVL349:
3147:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);
 3379              		.loc 1 3147 0
 3380 0348 6B20     		movs	r0, #107
 3381 034a 6E21     		movs	r1, #110
 3382 034c FFF7FEFF 		bl	VXISI2CWrite
 3383              	.LVL350:
3148:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);
 3384              		.loc 1 3148 0
 3385 0350 6C20     		movs	r0, #108
 3386 0352 6E21     		movs	r1, #110
 3387 0354 FFF7FEFF 		bl	VXISI2CWrite
 3388              	.LVL351:
3149:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);
 3389              		.loc 1 3149 0
 3390 0358 6D20     		movs	r0, #109
 3391 035a 0021     		movs	r1, #0
 3392 035c FFF7FEFF 		bl	VXISI2CWrite
 3393              	.LVL352:
3150:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);
 3394              		.loc 1 3150 0
 3395 0360 6E20     		movs	r0, #110
 3396 0362 0021     		movs	r1, #0
 3397 0364 FFF7FEFF 		bl	VXISI2CWrite
 3398              	.LVL353:
3151:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);
 3399              		.loc 1 3151 0
 3400 0368 6F20     		movs	r0, #111
 3401 036a 0021     		movs	r1, #0
 3402 036c FFF7FEFF 		bl	VXISI2CWrite
 3403              	.LVL354:
3152:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);
 3404              		.loc 1 3152 0
 3405 0370 7020     		movs	r0, #112
 3406 0372 0021     		movs	r1, #0
 3407 0374 FFF7FEFF 		bl	VXISI2CWrite
 3408              	.LVL355:
3153:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);
ARM GAS  /tmp/ccxsI2YD.s 			page 144


 3409              		.loc 1 3153 0
 3410 0378 7120     		movs	r0, #113
 3411 037a 0021     		movs	r1, #0
 3412 037c FFF7FEFF 		bl	VXISI2CWrite
 3413              	.LVL356:
3154:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);
 3414              		.loc 1 3154 0
 3415 0380 7220     		movs	r0, #114
 3416 0382 0021     		movs	r1, #0
 3417 0384 FFF7FEFF 		bl	VXISI2CWrite
 3418              	.LVL357:
3155:Src/main.c    **** 	VXISI2CWrite(0x74,0x00);
 3419              		.loc 1 3155 0
 3420 0388 7320     		movs	r0, #115
 3421 038a 0021     		movs	r1, #0
 3422 038c FFF7FEFF 		bl	VXISI2CWrite
 3423              	.LVL358:
3156:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);
 3424              		.loc 1 3156 0
 3425 0390 7420     		movs	r0, #116
 3426 0392 0021     		movs	r1, #0
 3427 0394 FFF7FEFF 		bl	VXISI2CWrite
 3428              	.LVL359:
3157:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);
 3429              		.loc 1 3157 0
 3430 0398 7520     		movs	r0, #117
 3431 039a FF21     		movs	r1, #255
 3432 039c FFF7FEFF 		bl	VXISI2CWrite
 3433              	.LVL360:
3158:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);
 3434              		.loc 1 3158 0
 3435 03a0 7620     		movs	r0, #118
 3436 03a2 FF21     		movs	r1, #255
 3437 03a4 FFF7FEFF 		bl	VXISI2CWrite
 3438              	.LVL361:
3159:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);
 3439              		.loc 1 3159 0
 3440 03a8 7720     		movs	r0, #119
 3441 03aa FF21     		movs	r1, #255
 3442 03ac FFF7FEFF 		bl	VXISI2CWrite
 3443              	.LVL362:
3160:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);
 3444              		.loc 1 3160 0
 3445 03b0 7820     		movs	r0, #120
 3446 03b2 FF21     		movs	r1, #255
 3447 03b4 FFF7FEFF 		bl	VXISI2CWrite
 3448              	.LVL363:
3161:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);
 3449              		.loc 1 3161 0
 3450 03b8 7920     		movs	r0, #121
 3451 03ba FF21     		movs	r1, #255
 3452 03bc FFF7FEFF 		bl	VXISI2CWrite
 3453              	.LVL364:
3162:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);
 3454              		.loc 1 3162 0
 3455 03c0 7A20     		movs	r0, #122
 3456 03c2 FF21     		movs	r1, #255
ARM GAS  /tmp/ccxsI2YD.s 			page 145


 3457 03c4 FFF7FEFF 		bl	VXISI2CWrite
 3458              	.LVL365:
3163:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);
 3459              		.loc 1 3163 0
 3460 03c8 7B20     		movs	r0, #123
 3461 03ca FF21     		movs	r1, #255
 3462 03cc FFF7FEFF 		bl	VXISI2CWrite
 3463              	.LVL366:
3164:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);
 3464              		.loc 1 3164 0
 3465 03d0 7C20     		movs	r0, #124
 3466 03d2 FF21     		movs	r1, #255
 3467 03d4 FFF7FEFF 		bl	VXISI2CWrite
 3468              	.LVL367:
3165:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);
 3469              		.loc 1 3165 0
 3470 03d8 7D20     		movs	r0, #125
 3471 03da F021     		movs	r1, #240
 3472 03dc FFF7FEFF 		bl	VXISI2CWrite
 3473              	.LVL368:
3166:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);
 3474              		.loc 1 3166 0
 3475 03e0 7E20     		movs	r0, #126
 3476 03e2 8021     		movs	r1, #128
 3477 03e4 FFF7FEFF 		bl	VXISI2CWrite
 3478              	.LVL369:
3167:Src/main.c    **** 	VXISI2CWrite(0x80,0x00);
 3479              		.loc 1 3167 0
 3480 03e8 7F20     		movs	r0, #127
 3481 03ea 0021     		movs	r1, #0
 3482 03ec FFF7FEFF 		bl	VXISI2CWrite
 3483              	.LVL370:
3168:Src/main.c    **** 	VXISI2CWrite(0x81,0x34);
 3484              		.loc 1 3168 0
 3485 03f0 8020     		movs	r0, #128
 3486 03f2 0021     		movs	r1, #0
 3487 03f4 FFF7FEFF 		bl	VXISI2CWrite
 3488              	.LVL371:
 3489 03f8 02E0     		b	.L178
 3490              	.L179:
 3491 03fa 00BF     		.align	2
 3492              	.L177:
 3493 03fc 74030000 		.word	.LC35
 3494              	.L178:
3169:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);
 3495              		.loc 1 3169 0
 3496 0400 8120     		movs	r0, #129
 3497 0402 3421     		movs	r1, #52
 3498 0404 FFF7FEFF 		bl	VXISI2CWrite
 3499              	.LVL372:
3170:Src/main.c    **** 	VXISI2CWrite(0x83,0x05);
 3500              		.loc 1 3170 0
 3501 0408 8220     		movs	r0, #130
 3502 040a 4021     		movs	r1, #64
 3503 040c FFF7FEFF 		bl	VXISI2CWrite
 3504              	.LVL373:
3171:Src/main.c    **** 	VXISI2CWrite(0x84,0x59);
ARM GAS  /tmp/ccxsI2YD.s 			page 146


 3505              		.loc 1 3171 0
 3506 0410 8320     		movs	r0, #131
 3507 0412 0521     		movs	r1, #5
 3508 0414 FFF7FEFF 		bl	VXISI2CWrite
 3509              	.LVL374:
3172:Src/main.c    **** 	VXISI2CWrite(0x85,0xFD);
 3510              		.loc 1 3172 0
 3511 0418 8420     		movs	r0, #132
 3512 041a 5921     		movs	r1, #89
 3513 041c FFF7FEFF 		bl	VXISI2CWrite
 3514              	.LVL375:
3173:Src/main.c    **** 	VXISI2CWrite(0x86,0x04);
 3515              		.loc 1 3173 0
 3516 0420 8520     		movs	r0, #133
 3517 0422 FD21     		movs	r1, #253
 3518 0424 FFF7FEFF 		bl	VXISI2CWrite
 3519              	.LVL376:
3174:Src/main.c    **** 	VXISI2CWrite(0x87,0x24);
 3520              		.loc 1 3174 0
 3521 0428 8620     		movs	r0, #134
 3522 042a 0421     		movs	r1, #4
 3523 042c FFF7FEFF 		bl	VXISI2CWrite
 3524              	.LVL377:
3175:Src/main.c    **** 	VXISI2CWrite(0x88,0x94);
 3525              		.loc 1 3175 0
 3526 0430 8720     		movs	r0, #135
 3527 0432 2421     		movs	r1, #36
 3528 0434 FFF7FEFF 		bl	VXISI2CWrite
 3529              	.LVL378:
3176:Src/main.c    **** 	VXISI2CWrite(0x89,0x58);
 3530              		.loc 1 3176 0
 3531 0438 8820     		movs	r0, #136
 3532 043a 9421     		movs	r1, #148
 3533 043c FFF7FEFF 		bl	VXISI2CWrite
 3534              	.LVL379:
3177:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);
 3535              		.loc 1 3177 0
 3536 0440 8920     		movs	r0, #137
 3537 0442 5821     		movs	r1, #88
 3538 0444 FFF7FEFF 		bl	VXISI2CWrite
 3539              	.LVL380:
3178:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);
 3540              		.loc 1 3178 0
 3541 0448 8A20     		movs	r0, #138
 3542 044a 0021     		movs	r1, #0
 3543 044c FFF7FEFF 		bl	VXISI2CWrite
 3544              	.LVL381:
3179:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);
 3545              		.loc 1 3179 0
 3546 0450 8B20     		movs	r0, #139
 3547 0452 7E21     		movs	r1, #126
 3548 0454 FFF7FEFF 		bl	VXISI2CWrite
 3549              	.LVL382:
3180:Src/main.c    **** 	VXISI2CWrite(0x8D,0x2C);
 3550              		.loc 1 3180 0
 3551 0458 8C20     		movs	r0, #140
 3552 045a 0321     		movs	r1, #3
ARM GAS  /tmp/ccxsI2YD.s 			page 147


 3553 045c FFF7FEFF 		bl	VXISI2CWrite
 3554              	.LVL383:
3181:Src/main.c    **** 	VXISI2CWrite(0x8E,0x8C);
 3555              		.loc 1 3181 0
 3556 0460 8D20     		movs	r0, #141
 3557 0462 2C21     		movs	r1, #44
 3558 0464 FFF7FEFF 		bl	VXISI2CWrite
 3559              	.LVL384:
3182:Src/main.c    **** 	VXISI2CWrite(0x8F,0x00);
 3560              		.loc 1 3182 0
 3561 0468 8E20     		movs	r0, #142
 3562 046a 8C21     		movs	r1, #140
 3563 046c FFF7FEFF 		bl	VXISI2CWrite
 3564              	.LVL385:
3183:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);
 3565              		.loc 1 3183 0
 3566 0470 8F20     		movs	r0, #143
 3567 0472 0021     		movs	r1, #0
 3568 0474 FFF7FEFF 		bl	VXISI2CWrite
 3569              	.LVL386:
3184:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);
 3570              		.loc 1 3184 0
 3571 0478 9020     		movs	r0, #144
 3572 047a CC21     		movs	r1, #204
 3573 047c FFF7FEFF 		bl	VXISI2CWrite
 3574              	.LVL387:
3185:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);
 3575              		.loc 1 3185 0
 3576 0480 9120     		movs	r0, #145
 3577 0482 4121     		movs	r1, #65
 3578 0484 FFF7FEFF 		bl	VXISI2CWrite
 3579              	.LVL388:
3186:Src/main.c    **** 	VXISI2CWrite(0x93,0x31);
 3580              		.loc 1 3186 0
 3581 0488 9220     		movs	r0, #146
 3582 048a C421     		movs	r1, #196
 3583 048c FFF7FEFF 		bl	VXISI2CWrite
 3584              	.LVL389:
3187:Src/main.c    **** 	VXISI2CWrite(0x94,0x87);
 3585              		.loc 1 3187 0
 3586 0490 9320     		movs	r0, #147
 3587 0492 3121     		movs	r1, #49
 3588 0494 FFF7FEFF 		bl	VXISI2CWrite
 3589              	.LVL390:
3188:Src/main.c    **** 	VXISI2CWrite(0x95,0xD0);
 3590              		.loc 1 3188 0
 3591 0498 9420     		movs	r0, #148
 3592 049a 8721     		movs	r1, #135
 3593 049c FFF7FEFF 		bl	VXISI2CWrite
 3594              	.LVL391:
3189:Src/main.c    **** 	VXISI2CWrite(0x96,0xF3);
 3595              		.loc 1 3189 0
 3596 04a0 9520     		movs	r0, #149
 3597 04a2 D021     		movs	r1, #208
 3598 04a4 FFF7FEFF 		bl	VXISI2CWrite
 3599              	.LVL392:
3190:Src/main.c    **** 	VXISI2CWrite(0x97,0x20);
ARM GAS  /tmp/ccxsI2YD.s 			page 148


 3600              		.loc 1 3190 0
 3601 04a8 9620     		movs	r0, #150
 3602 04aa F321     		movs	r1, #243
 3603 04ac FFF7FEFF 		bl	VXISI2CWrite
 3604              	.LVL393:
3191:Src/main.c    **** 	VXISI2CWrite(0x98,0x11);
 3605              		.loc 1 3191 0
 3606 04b0 9720     		movs	r0, #151
 3607 04b2 2021     		movs	r1, #32
 3608 04b4 FFF7FEFF 		bl	VXISI2CWrite
 3609              	.LVL394:
3192:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);
 3610              		.loc 1 3192 0
 3611 04b8 9820     		movs	r0, #152
 3612 04ba 1121     		movs	r1, #17
 3613 04bc FFF7FEFF 		bl	VXISI2CWrite
 3614              	.LVL395:
3193:Src/main.c    **** 	VXISI2CWrite(0x9A,0xFF);
 3615              		.loc 1 3193 0
 3616 04c0 9920     		movs	r0, #153
 3617 04c2 9021     		movs	r1, #144
 3618 04c4 FFF7FEFF 		bl	VXISI2CWrite
 3619              	.LVL396:
3194:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);
 3620              		.loc 1 3194 0
 3621 04c8 9A20     		movs	r0, #154
 3622 04ca FF21     		movs	r1, #255
 3623 04cc FFF7FEFF 		bl	VXISI2CWrite
 3624              	.LVL397:
3195:Src/main.c    **** 	VXISI2CWrite(0x9C,0x0A);
 3625              		.loc 1 3195 0
 3626 04d0 9B20     		movs	r0, #155
 3627 04d2 0421     		movs	r1, #4
 3628 04d4 FFF7FEFF 		bl	VXISI2CWrite
 3629              	.LVL398:
3196:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);
 3630              		.loc 1 3196 0
 3631 04d8 9C20     		movs	r0, #156
 3632 04da 0A21     		movs	r1, #10
 3633 04dc FFF7FEFF 		bl	VXISI2CWrite
 3634              	.LVL399:
3197:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);
 3635              		.loc 1 3197 0
 3636 04e0 9D20     		movs	r0, #157
 3637 04e2 0021     		movs	r1, #0
 3638 04e4 FFF7FEFF 		bl	VXISI2CWrite
 3639              	.LVL400:
3198:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);
 3640              		.loc 1 3198 0
 3641 04e8 9E20     		movs	r0, #158
 3642 04ea 0421     		movs	r1, #4
 3643 04ec FFF7FEFF 		bl	VXISI2CWrite
 3644              	.LVL401:
3199:Src/main.c    **** 	VXISI2CWrite(0xA0,0x2F);
 3645              		.loc 1 3199 0
 3646 04f0 9F20     		movs	r0, #159
 3647 04f2 6521     		movs	r1, #101
ARM GAS  /tmp/ccxsI2YD.s 			page 149


 3648 04f4 FFF7FEFF 		bl	VXISI2CWrite
 3649              	.LVL402:
3200:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD9);
 3650              		.loc 1 3200 0
 3651 04f8 A020     		movs	r0, #160
 3652 04fa 2F21     		movs	r1, #47
 3653 04fc FFF7FEFF 		bl	VXISI2CWrite
 3654              	.LVL403:
3201:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);
 3655              		.loc 1 3201 0
 3656 0500 A120     		movs	r0, #161
 3657 0502 D921     		movs	r1, #217
 3658 0504 FFF7FEFF 		bl	VXISI2CWrite
 3659              	.LVL404:
3202:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);
 3660              		.loc 1 3202 0
 3661 0508 A220     		movs	r0, #162
 3662 050a 9821     		movs	r1, #152
 3663 050c FFF7FEFF 		bl	VXISI2CWrite
 3664              	.LVL405:
3203:Src/main.c    **** 	VXISI2CWrite(0xA4,0xE1);
 3665              		.loc 1 3203 0
 3666 0510 A320     		movs	r0, #163
 3667 0512 8721     		movs	r1, #135
 3668 0514 FFF7FEFF 		bl	VXISI2CWrite
 3669              	.LVL406:
3204:Src/main.c    **** 	VXISI2CWrite(0xA5,0x38);
 3670              		.loc 1 3204 0
 3671 0518 A420     		movs	r0, #164
 3672 051a E121     		movs	r1, #225
 3673 051c FFF7FEFF 		bl	VXISI2CWrite
 3674              	.LVL407:
3205:Src/main.c    **** 	VXISI2CWrite(0xA6,0xC2);
 3675              		.loc 1 3205 0
 3676 0520 A520     		movs	r0, #165
 3677 0522 3821     		movs	r1, #56
 3678 0524 FFF7FEFF 		bl	VXISI2CWrite
 3679              	.LVL408:
3206:Src/main.c    **** 	VXISI2CWrite(0xA7,0x70);
 3680              		.loc 1 3206 0
 3681 0528 A620     		movs	r0, #166
 3682 052a C221     		movs	r1, #194
 3683 052c FFF7FEFF 		bl	VXISI2CWrite
 3684              	.LVL409:
3207:Src/main.c    **** 	VXISI2CWrite(0xA8,0x00);
 3685              		.loc 1 3207 0
 3686 0530 A720     		movs	r0, #167
 3687 0532 7021     		movs	r1, #112
 3688 0534 FFF7FEFF 		bl	VXISI2CWrite
 3689              	.LVL410:
3208:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);
 3690              		.loc 1 3208 0
 3691 0538 A820     		movs	r0, #168
 3692 053a 0021     		movs	r1, #0
 3693 053c FFF7FEFF 		bl	VXISI2CWrite
 3694              	.LVL411:
3209:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2E);
ARM GAS  /tmp/ccxsI2YD.s 			page 150


 3695              		.loc 1 3209 0
 3696 0540 A920     		movs	r0, #169
 3697 0542 1E21     		movs	r1, #30
 3698 0544 FFF7FEFF 		bl	VXISI2CWrite
 3699              	.LVL412:
3210:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);
 3700              		.loc 1 3210 0
 3701 0548 AA20     		movs	r0, #170
 3702 054a 2E21     		movs	r1, #46
 3703 054c FFF7FEFF 		bl	VXISI2CWrite
 3704              	.LVL413:
3211:Src/main.c    **** 	VXISI2CWrite(0xAC,0x84);
 3705              		.loc 1 3211 0
 3706 0550 AB20     		movs	r0, #171
 3707 0552 0021     		movs	r1, #0
 3708 0554 FFF7FEFF 		bl	VXISI2CWrite
 3709              	.LVL414:
3212:Src/main.c    **** 	VXISI2CWrite(0xAD,0xF3);
 3710              		.loc 1 3212 0
 3711 0558 AC20     		movs	r0, #172
 3712 055a 8421     		movs	r1, #132
 3713 055c FFF7FEFF 		bl	VXISI2CWrite
 3714              	.LVL415:
3213:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);
 3715              		.loc 1 3213 0
 3716 0560 AD20     		movs	r0, #173
 3717 0562 F321     		movs	r1, #243
 3718 0564 FFF7FEFF 		bl	VXISI2CWrite
 3719              	.LVL416:
3214:Src/main.c    **** 	VXISI2CWrite(0xAF,0x99);
 3720              		.loc 1 3214 0
 3721 0568 AE20     		movs	r0, #174
 3722 056a 6521     		movs	r1, #101
 3723 056c FFF7FEFF 		bl	VXISI2CWrite
 3724              	.LVL417:
3215:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);
 3725              		.loc 1 3215 0
 3726 0570 AF20     		movs	r0, #175
 3727 0572 9921     		movs	r1, #153
 3728 0574 FFF7FEFF 		bl	VXISI2CWrite
 3729              	.LVL418:
3216:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);
 3730              		.loc 1 3216 0
 3731 0578 B020     		movs	r0, #176
 3732 057a 0021     		movs	r1, #0
 3733 057c FFF7FEFF 		bl	VXISI2CWrite
 3734              	.LVL419:
3217:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);
 3735              		.loc 1 3217 0
 3736 0580 B120     		movs	r0, #177
 3737 0582 0021     		movs	r1, #0
 3738 0584 FFF7FEFF 		bl	VXISI2CWrite
 3739              	.LVL420:
3218:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);
 3740              		.loc 1 3218 0
 3741 0588 B220     		movs	r0, #178
 3742 058a 0021     		movs	r1, #0
ARM GAS  /tmp/ccxsI2YD.s 			page 151


 3743 058c FFF7FEFF 		bl	VXISI2CWrite
 3744              	.LVL421:
3219:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);
 3745              		.loc 1 3219 0
 3746 0590 B320     		movs	r0, #179
 3747 0592 0021     		movs	r1, #0
 3748 0594 FFF7FEFF 		bl	VXISI2CWrite
 3749              	.LVL422:
3220:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);
 3750              		.loc 1 3220 0
 3751 0598 B420     		movs	r0, #180
 3752 059a 0021     		movs	r1, #0
 3753 059c FFF7FEFF 		bl	VXISI2CWrite
 3754              	.LVL423:
3221:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);
 3755              		.loc 1 3221 0
 3756 05a0 B520     		movs	r0, #181
 3757 05a2 0021     		movs	r1, #0
 3758 05a4 FFF7FEFF 		bl	VXISI2CWrite
 3759              	.LVL424:
3222:Src/main.c    **** 	VXISI2CWrite(0xB8,0x80);
 3760              		.loc 1 3222 0
 3761 05a8 B620     		movs	r0, #182
 3762 05aa 0021     		movs	r1, #0
 3763 05ac FFF7FEFF 		bl	VXISI2CWrite
 3764              	.LVL425:
3223:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);
 3765              		.loc 1 3223 0
 3766 05b0 B820     		movs	r0, #184
 3767 05b2 8021     		movs	r1, #128
 3768 05b4 FFF7FEFF 		bl	VXISI2CWrite
 3769              	.LVL426:
3224:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);
 3770              		.loc 1 3224 0
 3771 05b8 B920     		movs	r0, #185
 3772 05ba 0021     		movs	r1, #0
 3773 05bc FFF7FEFF 		bl	VXISI2CWrite
 3774              	.LVL427:
3225:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);
 3775              		.loc 1 3225 0
 3776 05c0 BA20     		movs	r0, #186
 3777 05c2 0121     		movs	r1, #1
 3778 05c4 FFF7FEFF 		bl	VXISI2CWrite
 3779              	.LVL428:
3226:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);
 3780              		.loc 1 3226 0
 3781 05c8 BB20     		movs	r0, #187
 3782 05ca 0021     		movs	r1, #0
 3783 05cc FFF7FEFF 		bl	VXISI2CWrite
 3784              	.LVL429:
3227:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);
 3785              		.loc 1 3227 0
 3786 05d0 BC20     		movs	r0, #188
 3787 05d2 9021     		movs	r1, #144
 3788 05d4 FFF7FEFF 		bl	VXISI2CWrite
 3789              	.LVL430:
3228:Src/main.c    **** 	VXISI2CWrite(0xBE,0x2C);
ARM GAS  /tmp/ccxsI2YD.s 			page 152


 3790              		.loc 1 3228 0
 3791 05d8 BD20     		movs	r0, #189
 3792 05da 0121     		movs	r1, #1
 3793 05dc FFF7FEFF 		bl	VXISI2CWrite
 3794              	.LVL431:
3229:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);
 3795              		.loc 1 3229 0
 3796 05e0 BE20     		movs	r0, #190
 3797 05e2 2C21     		movs	r1, #44
 3798 05e4 FFF7FEFF 		bl	VXISI2CWrite
 3799              	.LVL432:
3230:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);
 3800              		.loc 1 3230 0
 3801 05e8 C020     		movs	r0, #192
 3802 05ea 0021     		movs	r1, #0
 3803 05ec FFF7FEFF 		bl	VXISI2CWrite
 3804              	.LVL433:
3231:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);
 3805              		.loc 1 3231 0
 3806 05f0 C120     		movs	r0, #193
 3807 05f2 2021     		movs	r1, #32
 3808 05f4 FFF7FEFF 		bl	VXISI2CWrite
 3809              	.LVL434:
3232:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);
 3810              		.loc 1 3232 0
 3811 05f8 C220     		movs	r0, #194
 3812 05fa 2021     		movs	r1, #32
 3813 05fc FFF7FEFF 		bl	VXISI2CWrite
 3814              	.LVL435:
3233:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);
 3815              		.loc 1 3233 0
 3816 0600 C320     		movs	r0, #195
 3817 0602 2021     		movs	r1, #32
 3818 0604 FFF7FEFF 		bl	VXISI2CWrite
 3819              	.LVL436:
3234:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);
 3820              		.loc 1 3234 0
 3821 0608 C420     		movs	r0, #196
 3822 060a 2021     		movs	r1, #32
 3823 060c FFF7FEFF 		bl	VXISI2CWrite
 3824              	.LVL437:
3235:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);
 3825              		.loc 1 3235 0
 3826 0610 C520     		movs	r0, #197
 3827 0612 2021     		movs	r1, #32
 3828 0614 FFF7FEFF 		bl	VXISI2CWrite
 3829              	.LVL438:
3236:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);
 3830              		.loc 1 3236 0
 3831 0618 D020     		movs	r0, #208
 3832 061a FF21     		movs	r1, #255
 3833 061c FFF7FEFF 		bl	VXISI2CWrite
 3834              	.LVL439:
3237:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);
 3835              		.loc 1 3237 0
 3836 0620 D120     		movs	r0, #209
 3837 0622 3F21     		movs	r1, #63
ARM GAS  /tmp/ccxsI2YD.s 			page 153


 3838 0624 FFF7FEFF 		bl	VXISI2CWrite
 3839              	.LVL440:
3238:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);
 3840              		.loc 1 3238 0
 3841 0628 D220     		movs	r0, #210
 3842 062a C221     		movs	r1, #194
 3843 062c FFF7FEFF 		bl	VXISI2CWrite
 3844              	.LVL441:
3239:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);
 3845              		.loc 1 3239 0
 3846 0630 D320     		movs	r0, #211
 3847 0632 3F21     		movs	r1, #63
 3848 0634 FFF7FEFF 		bl	VXISI2CWrite
 3849              	.LVL442:
3240:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);
 3850              		.loc 1 3240 0
 3851 0638 D420     		movs	r0, #212
 3852 063a 0021     		movs	r1, #0
 3853 063c FFF7FEFF 		bl	VXISI2CWrite
 3854              	.LVL443:
3241:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);
 3855              		.loc 1 3241 0
 3856 0640 D520     		movs	r0, #213
 3857 0642 0021     		movs	r1, #0
 3858 0644 FFF7FEFF 		bl	VXISI2CWrite
 3859              	.LVL444:
3242:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);
 3860              		.loc 1 3242 0
 3861 0648 D620     		movs	r0, #214
 3862 064a 0021     		movs	r1, #0
 3863 064c FFF7FEFF 		bl	VXISI2CWrite
 3864              	.LVL445:
3243:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);
 3865              		.loc 1 3243 0
 3866 0650 D720     		movs	r0, #215
 3867 0652 1021     		movs	r1, #16
 3868 0654 FFF7FEFF 		bl	VXISI2CWrite
 3869              	.LVL446:
3244:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);
 3870              		.loc 1 3244 0
 3871 0658 D820     		movs	r0, #216
 3872 065a 0021     		movs	r1, #0
 3873 065c FFF7FEFF 		bl	VXISI2CWrite
 3874              	.LVL447:
3245:Src/main.c    **** 	VXISI2CWrite(0xDD,0x00);
 3875              		.loc 1 3245 0
 3876 0660 DC20     		movs	r0, #220
 3877 0662 7721     		movs	r1, #119
 3878 0664 FFF7FEFF 		bl	VXISI2CWrite
 3879              	.LVL448:
3246:Src/main.c    **** 	VXISI2CWrite(0xDE,0xAF);
 3880              		.loc 1 3246 0
 3881 0668 DD20     		movs	r0, #221
 3882 066a 0021     		movs	r1, #0
 3883 066c FFF7FEFF 		bl	VXISI2CWrite
 3884              	.LVL449:
3247:Src/main.c    **** 	VXISI2CWrite(0xDF,0xEF);
ARM GAS  /tmp/ccxsI2YD.s 			page 154


 3885              		.loc 1 3247 0
 3886 0670 DE20     		movs	r0, #222
 3887 0672 AF21     		movs	r1, #175
 3888 0674 FFF7FEFF 		bl	VXISI2CWrite
 3889              	.LVL450:
3248:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);
 3890              		.loc 1 3248 0
 3891 0678 DF20     		movs	r0, #223
 3892 067a EF21     		movs	r1, #239
 3893 067c FFF7FEFF 		bl	VXISI2CWrite
 3894              	.LVL451:
3249:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);
 3895              		.loc 1 3249 0
 3896 0680 E020     		movs	r0, #224
 3897 0682 0021     		movs	r1, #0
 3898 0684 FFF7FEFF 		bl	VXISI2CWrite
 3899              	.LVL452:
3250:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);
 3900              		.loc 1 3250 0
 3901 0688 E120     		movs	r0, #225
 3902 068a 0021     		movs	r1, #0
 3903 068c FFF7FEFF 		bl	VXISI2CWrite
 3904              	.LVL453:
3251:Src/main.c    **** 	VXISI2CWrite(0xE3,0x12);
 3905              		.loc 1 3251 0
 3906 0690 E220     		movs	r0, #226
 3907 0692 0021     		movs	r1, #0
 3908 0694 FFF7FEFF 		bl	VXISI2CWrite
 3909              	.LVL454:
3252:Src/main.c    **** 	VXISI2CWrite(0xE4,0xE2);
 3910              		.loc 1 3252 0
 3911 0698 E320     		movs	r0, #227
 3912 069a 1221     		movs	r1, #18
 3913 069c FFF7FEFF 		bl	VXISI2CWrite
 3914              	.LVL455:
3253:Src/main.c    **** 	VXISI2CWrite(0xE5,0xD0);
 3915              		.loc 1 3253 0
 3916 06a0 E420     		movs	r0, #228
 3917 06a2 E221     		movs	r1, #226
 3918 06a4 FFF7FEFF 		bl	VXISI2CWrite
 3919              	.LVL456:
3254:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);
 3920              		.loc 1 3254 0
 3921 06a8 E520     		movs	r0, #229
 3922 06aa D021     		movs	r1, #208
 3923 06ac FFF7FEFF 		bl	VXISI2CWrite
 3924              	.LVL457:
3255:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);
 3925              		.loc 1 3255 0
 3926 06b0 E620     		movs	r0, #230
 3927 06b2 0021     		movs	r1, #0
 3928 06b4 FFF7FEFF 		bl	VXISI2CWrite
 3929              	.LVL458:
3256:Src/main.c    **** 	VXISI2CWrite(0xE8,0x0F);
 3930              		.loc 1 3256 0
 3931 06b8 E720     		movs	r0, #231
 3932 06ba 0021     		movs	r1, #0
ARM GAS  /tmp/ccxsI2YD.s 			page 155


 3933 06bc FFF7FEFF 		bl	VXISI2CWrite
 3934              	.LVL459:
3257:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);
 3935              		.loc 1 3257 0
 3936 06c0 E820     		movs	r0, #232
 3937 06c2 0F21     		movs	r1, #15
 3938 06c4 FFF7FEFF 		bl	VXISI2CWrite
 3939              	.LVL460:
3258:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);
 3940              		.loc 1 3258 0
 3941 06c8 E920     		movs	r0, #233
 3942 06ca 0021     		movs	r1, #0
 3943 06cc FFF7FEFF 		bl	VXISI2CWrite
 3944              	.LVL461:
3259:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);
 3945              		.loc 1 3259 0
 3946 06d0 EA20     		movs	r0, #234
 3947 06d2 0021     		movs	r1, #0
 3948 06d4 FFF7FEFF 		bl	VXISI2CWrite
 3949              	.LVL462:
3260:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);
 3950              		.loc 1 3260 0
 3951 06d8 EB20     		movs	r0, #235
 3952 06da 0021     		movs	r1, #0
 3953 06dc FFF7FEFF 		bl	VXISI2CWrite
 3954              	.LVL463:
3261:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);
 3955              		.loc 1 3261 0
 3956 06e0 EC20     		movs	r0, #236
 3957 06e2 8821     		movs	r1, #136
 3958 06e4 FFF7FEFF 		bl	VXISI2CWrite
 3959              	.LVL464:
3262:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);
 3960              		.loc 1 3262 0
 3961 06e8 ED20     		movs	r0, #237
 3962 06ea 0021     		movs	r1, #0
 3963 06ec FFF7FEFF 		bl	VXISI2CWrite
 3964              	.LVL465:
3263:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);
 3965              		.loc 1 3263 0
 3966 06f0 EE20     		movs	r0, #238
 3967 06f2 0021     		movs	r1, #0
 3968 06f4 FFF7FEFF 		bl	VXISI2CWrite
 3969              	.LVL466:
3264:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);
 3970              		.loc 1 3264 0
 3971 06f8 EF20     		movs	r0, #239
 3972 06fa 0021     		movs	r1, #0
 3973 06fc FFF7FEFF 		bl	VXISI2CWrite
 3974              	.LVL467:
3265:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);
 3975              		.loc 1 3265 0
 3976 0700 F020     		movs	r0, #240
 3977 0702 3021     		movs	r1, #48
 3978 0704 FFF7FEFF 		bl	VXISI2CWrite
 3979              	.LVL468:
3266:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);
ARM GAS  /tmp/ccxsI2YD.s 			page 156


 3980              		.loc 1 3266 0
 3981 0708 F120     		movs	r0, #241
 3982 070a 4321     		movs	r1, #67
 3983 070c FFF7FEFF 		bl	VXISI2CWrite
 3984              	.LVL469:
3267:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);
 3985              		.loc 1 3267 0
 3986 0710 F220     		movs	r0, #242
 3987 0712 1F21     		movs	r1, #31
 3988 0714 FFF7FEFF 		bl	VXISI2CWrite
 3989              	.LVL470:
3268:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);
 3990              		.loc 1 3268 0
 3991 0718 F320     		movs	r0, #243
 3992 071a 1F21     		movs	r1, #31
 3993 071c FFF7FEFF 		bl	VXISI2CWrite
 3994              	.LVL471:
3269:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);
 3995              		.loc 1 3269 0
 3996 0720 F420     		movs	r0, #244
 3997 0722 2221     		movs	r1, #34
 3998 0724 FFF7FEFF 		bl	VXISI2CWrite
 3999              	.LVL472:
3270:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);
 4000              		.loc 1 3270 0
 4001 0728 F520     		movs	r0, #245
 4002 072a 7321     		movs	r1, #115
 4003 072c FFF7FEFF 		bl	VXISI2CWrite
 4004              	.LVL473:
3271:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);
 4005              		.loc 1 3271 0
 4006 0730 F620     		movs	r0, #246
 4007 0732 5321     		movs	r1, #83
 4008 0734 FFF7FEFF 		bl	VXISI2CWrite
 4009              	.LVL474:
3272:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);
 4010              		.loc 1 3272 0
 4011 0738 F720     		movs	r0, #247
 4012 073a 8021     		movs	r1, #128
 4013 073c FFF7FEFF 		bl	VXISI2CWrite
 4014              	.LVL475:
3273:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);
 4015              		.loc 1 3273 0
 4016 0740 F820     		movs	r0, #248
 4017 0742 0121     		movs	r1, #1
 4018 0744 FFF7FEFF 		bl	VXISI2CWrite
 4019              	.LVL476:
3274:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);
 4020              		.loc 1 3274 0
 4021 0748 F920     		movs	r0, #249
 4022 074a 0121     		movs	r1, #1
 4023 074c FFF7FEFF 		bl	VXISI2CWrite
 4024              	.LVL477:
3275:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);
 4025              		.loc 1 3275 0
 4026 0750 FA20     		movs	r0, #250
 4027 0752 0021     		movs	r1, #0
ARM GAS  /tmp/ccxsI2YD.s 			page 157


 4028 0754 FFF7FEFF 		bl	VXISI2CWrite
 4029              	.LVL478:
3276:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);
 4030              		.loc 1 3276 0
 4031 0758 FB20     		movs	r0, #251
 4032 075a 0021     		movs	r1, #0
 4033 075c FFF7FEFF 		bl	VXISI2CWrite
 4034              	.LVL479:
3277:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);
 4035              		.loc 1 3277 0
 4036 0760 FC20     		movs	r0, #252
 4037 0762 0021     		movs	r1, #0
 4038 0764 FFF7FEFF 		bl	VXISI2CWrite
 4039              	.LVL480:
3278:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);
 4040              		.loc 1 3278 0
 4041 0768 FD20     		movs	r0, #253
 4042 076a 7021     		movs	r1, #112
 4043 076c FFF7FEFF 		bl	VXISI2CWrite
 4044              	.LVL481:
3279:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);
 4045              		.loc 1 3279 0
 4046 0770 FE20     		movs	r0, #254
 4047 0772 4021     		movs	r1, #64
 4048 0774 FFF7FEFF 		bl	VXISI2CWrite
 4049              	.LVL482:
3280:Src/main.c    **** 					 
 4050              		.loc 1 3280 0
 4051 0778 FF20     		movs	r0, #255
 4052 077a 0721     		movs	r1, #7
 4053 077c FFF7FEFF 		bl	VXISI2CWrite
 4054              	.LVL483:
 4055 0780 08BD     		pop	{r3, pc}
 4056              		.cfi_endproc
 4057              	.LFE89:
 4059 0782 00BF     		.section	.text.SET_VS4210_1280_720_out,"ax",%progbits
 4060              		.align	2
 4061              		.global	SET_VS4210_1280_720_out
 4062              		.thumb
 4063              		.thumb_func
 4065              	SET_VS4210_1280_720_out:
 4066              	.LFB90:
3287:Src/main.c    **** 	Printf("\r\nSET_VS4210_1280_720_out");
 4067              		.loc 1 3287 0
 4068              		.cfi_startproc
 4069              		@ args = 0, pretend = 0, frame = 0
 4070              		@ frame_needed = 0, uses_anonymous_args = 0
 4071 0000 08B5     		push	{r3, lr}
 4072              	.LCFI39:
 4073              		.cfi_def_cfa_offset 8
 4074              		.cfi_offset 3, -8
 4075              		.cfi_offset 14, -4
3288:Src/main.c    **** 
 4076              		.loc 1 3288 0
 4077 0002 FE48     		ldr	r0, .L182
 4078 0004 FFF7FEFF 		bl	Printf
 4079              	.LVL484:
ARM GAS  /tmp/ccxsI2YD.s 			page 158


3290:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);
 4080              		.loc 1 3290 0
 4081 0008 0120     		movs	r0, #1
 4082 000a 0021     		movs	r1, #0
 4083 000c FFF7FEFF 		bl	VXISI2CWrite
 4084              	.LVL485:
3291:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);
 4085              		.loc 1 3291 0
 4086 0010 0220     		movs	r0, #2
 4087 0012 0021     		movs	r1, #0
 4088 0014 FFF7FEFF 		bl	VXISI2CWrite
 4089              	.LVL486:
3292:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);
 4090              		.loc 1 3292 0
 4091 0018 0320     		movs	r0, #3
 4092 001a 7521     		movs	r1, #117
 4093 001c FFF7FEFF 		bl	VXISI2CWrite
 4094              	.LVL487:
3293:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);
 4095              		.loc 1 3293 0
 4096 0020 0420     		movs	r0, #4
 4097 0022 1821     		movs	r1, #24
 4098 0024 FFF7FEFF 		bl	VXISI2CWrite
 4099              	.LVL488:
3294:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);
 4100              		.loc 1 3294 0
 4101 0028 0520     		movs	r0, #5
 4102 002a 8021     		movs	r1, #128
 4103 002c FFF7FEFF 		bl	VXISI2CWrite
 4104              	.LVL489:
3295:Src/main.c    **** 	VXISI2CWrite(0x07,0x08);
 4105              		.loc 1 3295 0
 4106 0030 0620     		movs	r0, #6
 4107 0032 2021     		movs	r1, #32
 4108 0034 FFF7FEFF 		bl	VXISI2CWrite
 4109              	.LVL490:
3296:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);
 4110              		.loc 1 3296 0
 4111 0038 0720     		movs	r0, #7
 4112 003a 0821     		movs	r1, #8
 4113 003c FFF7FEFF 		bl	VXISI2CWrite
 4114              	.LVL491:
3297:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);
 4115              		.loc 1 3297 0
 4116 0040 0820     		movs	r0, #8
 4117 0042 4021     		movs	r1, #64
 4118 0044 FFF7FEFF 		bl	VXISI2CWrite
 4119              	.LVL492:
3298:Src/main.c    **** 	VXISI2CWrite(0x0A,0x41);
 4120              		.loc 1 3298 0
 4121 0048 0920     		movs	r0, #9
 4122 004a 0A21     		movs	r1, #10
 4123 004c FFF7FEFF 		bl	VXISI2CWrite
 4124              	.LVL493:
3299:Src/main.c    **** 	VXISI2CWrite(0x0B,0x07);
 4125              		.loc 1 3299 0
 4126 0050 0A20     		movs	r0, #10
ARM GAS  /tmp/ccxsI2YD.s 			page 159


 4127 0052 4121     		movs	r1, #65
 4128 0054 FFF7FEFF 		bl	VXISI2CWrite
 4129              	.LVL494:
3300:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);
 4130              		.loc 1 3300 0
 4131 0058 0B20     		movs	r0, #11
 4132 005a 0721     		movs	r1, #7
 4133 005c FFF7FEFF 		bl	VXISI2CWrite
 4134              	.LVL495:
3301:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);
 4135              		.loc 1 3301 0
 4136 0060 0C20     		movs	r0, #12
 4137 0062 0021     		movs	r1, #0
 4138 0064 FFF7FEFF 		bl	VXISI2CWrite
 4139              	.LVL496:
3302:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);
 4140              		.loc 1 3302 0
 4141 0068 0D20     		movs	r0, #13
 4142 006a 2021     		movs	r1, #32
 4143 006c FFF7FEFF 		bl	VXISI2CWrite
 4144              	.LVL497:
3303:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);
 4145              		.loc 1 3303 0
 4146 0070 0E20     		movs	r0, #14
 4147 0072 1021     		movs	r1, #16
 4148 0074 FFF7FEFF 		bl	VXISI2CWrite
 4149              	.LVL498:
3304:Src/main.c    **** 	VXISI2CWrite(0x10,0x80);
 4150              		.loc 1 3304 0
 4151 0078 0F20     		movs	r0, #15
 4152 007a 0021     		movs	r1, #0
 4153 007c FFF7FEFF 		bl	VXISI2CWrite
 4154              	.LVL499:
3305:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);
 4155              		.loc 1 3305 0
 4156 0080 1020     		movs	r0, #16
 4157 0082 8021     		movs	r1, #128
 4158 0084 FFF7FEFF 		bl	VXISI2CWrite
 4159              	.LVL500:
3306:Src/main.c    **** 	VXISI2CWrite(0x12,0x21);
 4160              		.loc 1 3306 0
 4161 0088 1120     		movs	r0, #17
 4162 008a 8221     		movs	r1, #130
 4163 008c FFF7FEFF 		bl	VXISI2CWrite
 4164              	.LVL501:
3307:Src/main.c    **** 	VXISI2CWrite(0x13,0xD0);
 4165              		.loc 1 3307 0
 4166 0090 1220     		movs	r0, #18
 4167 0092 2121     		movs	r1, #33
 4168 0094 FFF7FEFF 		bl	VXISI2CWrite
 4169              	.LVL502:
3308:Src/main.c    **** 	VXISI2CWrite(0x14,0xE0);
 4170              		.loc 1 3308 0
 4171 0098 1320     		movs	r0, #19
 4172 009a D021     		movs	r1, #208
 4173 009c FFF7FEFF 		bl	VXISI2CWrite
 4174              	.LVL503:
ARM GAS  /tmp/ccxsI2YD.s 			page 160


3309:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);
 4175              		.loc 1 3309 0
 4176 00a0 1420     		movs	r0, #20
 4177 00a2 E021     		movs	r1, #224
 4178 00a4 FFF7FEFF 		bl	VXISI2CWrite
 4179              	.LVL504:
3310:Src/main.c    **** 	VXISI2CWrite(0x16,0xFE);
 4180              		.loc 1 3310 0
 4181 00a8 1520     		movs	r0, #21
 4182 00aa 7821     		movs	r1, #120
 4183 00ac FFF7FEFF 		bl	VXISI2CWrite
 4184              	.LVL505:
3311:Src/main.c    **** 	VXISI2CWrite(0x17,0x00);
 4185              		.loc 1 3311 0
 4186 00b0 1620     		movs	r0, #22
 4187 00b2 FE21     		movs	r1, #254
 4188 00b4 FFF7FEFF 		bl	VXISI2CWrite
 4189              	.LVL506:
3312:Src/main.c    **** 	VXISI2CWrite(0x18,0xC8);
 4190              		.loc 1 3312 0
 4191 00b8 1720     		movs	r0, #23
 4192 00ba 0021     		movs	r1, #0
 4193 00bc FFF7FEFF 		bl	VXISI2CWrite
 4194              	.LVL507:
3313:Src/main.c    **** 	VXISI2CWrite(0x19,0x00);
 4195              		.loc 1 3313 0
 4196 00c0 1820     		movs	r0, #24
 4197 00c2 C821     		movs	r1, #200
 4198 00c4 FFF7FEFF 		bl	VXISI2CWrite
 4199              	.LVL508:
3314:Src/main.c    **** 	VXISI2CWrite(0x1A,0x23);
 4200              		.loc 1 3314 0
 4201 00c8 1920     		movs	r0, #25
 4202 00ca 0021     		movs	r1, #0
 4203 00cc FFF7FEFF 		bl	VXISI2CWrite
 4204              	.LVL509:
3315:Src/main.c    **** 	VXISI2CWrite(0x1B,0x00);
 4205              		.loc 1 3315 0
 4206 00d0 1A20     		movs	r0, #26
 4207 00d2 2321     		movs	r1, #35
 4208 00d4 FFF7FEFF 		bl	VXISI2CWrite
 4209              	.LVL510:
3316:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);
 4210              		.loc 1 3316 0
 4211 00d8 1B20     		movs	r0, #27
 4212 00da 0021     		movs	r1, #0
 4213 00dc FFF7FEFF 		bl	VXISI2CWrite
 4214              	.LVL511:
3317:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);
 4215              		.loc 1 3317 0
 4216 00e0 1C20     		movs	r0, #28
 4217 00e2 0021     		movs	r1, #0
 4218 00e4 FFF7FEFF 		bl	VXISI2CWrite
 4219              	.LVL512:
3318:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);
 4220              		.loc 1 3318 0
 4221 00e8 1D20     		movs	r0, #29
ARM GAS  /tmp/ccxsI2YD.s 			page 161


 4222 00ea 0021     		movs	r1, #0
 4223 00ec FFF7FEFF 		bl	VXISI2CWrite
 4224              	.LVL513:
3319:Src/main.c    **** 	VXISI2CWrite(0x1F,0x32);
 4225              		.loc 1 3319 0
 4226 00f0 1E20     		movs	r0, #30
 4227 00f2 2021     		movs	r1, #32
 4228 00f4 FFF7FEFF 		bl	VXISI2CWrite
 4229              	.LVL514:
3320:Src/main.c    **** 	VXISI2CWrite(0x20,0x5A);
 4230              		.loc 1 3320 0
 4231 00f8 1F20     		movs	r0, #31
 4232 00fa 3221     		movs	r1, #50
 4233 00fc FFF7FEFF 		bl	VXISI2CWrite
 4234              	.LVL515:
3321:Src/main.c    **** 	VXISI2CWrite(0x21,0x0D);
 4235              		.loc 1 3321 0
 4236 0100 2020     		movs	r0, #32
 4237 0102 5A21     		movs	r1, #90
 4238 0104 FFF7FEFF 		bl	VXISI2CWrite
 4239              	.LVL516:
3322:Src/main.c    **** 	VXISI2CWrite(0x22,0x32);
 4240              		.loc 1 3322 0
 4241 0108 2120     		movs	r0, #33
 4242 010a 0D21     		movs	r1, #13
 4243 010c FFF7FEFF 		bl	VXISI2CWrite
 4244              	.LVL517:
3323:Src/main.c    **** 	VXISI2CWrite(0x23,0x5A);
 4245              		.loc 1 3323 0
 4246 0110 2220     		movs	r0, #34
 4247 0112 3221     		movs	r1, #50
 4248 0114 FFF7FEFF 		bl	VXISI2CWrite
 4249              	.LVL518:
3324:Src/main.c    **** 	VXISI2CWrite(0x24,0xD0);
 4250              		.loc 1 3324 0
 4251 0118 2320     		movs	r0, #35
 4252 011a 5A21     		movs	r1, #90
 4253 011c FFF7FEFF 		bl	VXISI2CWrite
 4254              	.LVL519:
3325:Src/main.c    **** 	VXISI2CWrite(0x25,0x21);
 4255              		.loc 1 3325 0
 4256 0120 2420     		movs	r0, #36
 4257 0122 D021     		movs	r1, #208
 4258 0124 FFF7FEFF 		bl	VXISI2CWrite
 4259              	.LVL520:
3326:Src/main.c    **** 	VXISI2CWrite(0x26,0x0D);
 4260              		.loc 1 3326 0
 4261 0128 2520     		movs	r0, #37
 4262 012a 2121     		movs	r1, #33
 4263 012c FFF7FEFF 		bl	VXISI2CWrite
 4264              	.LVL521:
3327:Src/main.c    **** 	VXISI2CWrite(0x27,0xE0);
 4265              		.loc 1 3327 0
 4266 0130 2620     		movs	r0, #38
 4267 0132 0D21     		movs	r1, #13
 4268 0134 FFF7FEFF 		bl	VXISI2CWrite
 4269              	.LVL522:
ARM GAS  /tmp/ccxsI2YD.s 			page 162


3328:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);
 4270              		.loc 1 3328 0
 4271 0138 2720     		movs	r0, #39
 4272 013a E021     		movs	r1, #224
 4273 013c FFF7FEFF 		bl	VXISI2CWrite
 4274              	.LVL523:
3329:Src/main.c    **** 	VXISI2CWrite(0x29,0x00);
 4275              		.loc 1 3329 0
 4276 0140 2820     		movs	r0, #40
 4277 0142 F021     		movs	r1, #240
 4278 0144 FFF7FEFF 		bl	VXISI2CWrite
 4279              	.LVL524:
3330:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);
 4280              		.loc 1 3330 0
 4281 0148 2920     		movs	r0, #41
 4282 014a 0021     		movs	r1, #0
 4283 014c FFF7FEFF 		bl	VXISI2CWrite
 4284              	.LVL525:
3331:Src/main.c    **** 	VXISI2CWrite(0x2B,0x01);
 4285              		.loc 1 3331 0
 4286 0150 2A20     		movs	r0, #42
 4287 0152 0021     		movs	r1, #0
 4288 0154 FFF7FEFF 		bl	VXISI2CWrite
 4289              	.LVL526:
3332:Src/main.c    **** 	VXISI2CWrite(0x2C,0xFF);
 4290              		.loc 1 3332 0
 4291 0158 2B20     		movs	r0, #43
 4292 015a 0121     		movs	r1, #1
 4293 015c FFF7FEFF 		bl	VXISI2CWrite
 4294              	.LVL527:
3333:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);
 4295              		.loc 1 3333 0
 4296 0160 2C20     		movs	r0, #44
 4297 0162 FF21     		movs	r1, #255
 4298 0164 FFF7FEFF 		bl	VXISI2CWrite
 4299              	.LVL528:
3334:Src/main.c    **** 	VXISI2CWrite(0x2E,0x12);
 4300              		.loc 1 3334 0
 4301 0168 2D20     		movs	r0, #45
 4302 016a 0021     		movs	r1, #0
 4303 016c FFF7FEFF 		bl	VXISI2CWrite
 4304              	.LVL529:
3335:Src/main.c    **** 	VXISI2CWrite(0x2F,0xD0);
 4305              		.loc 1 3335 0
 4306 0170 2E20     		movs	r0, #46
 4307 0172 1221     		movs	r1, #18
 4308 0174 FFF7FEFF 		bl	VXISI2CWrite
 4309              	.LVL530:
3336:Src/main.c    **** 	VXISI2CWrite(0x30,0xE0);
 4310              		.loc 1 3336 0
 4311 0178 2F20     		movs	r0, #47
 4312 017a D021     		movs	r1, #208
 4313 017c FFF7FEFF 		bl	VXISI2CWrite
 4314              	.LVL531:
3337:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);
 4315              		.loc 1 3337 0
 4316 0180 3020     		movs	r0, #48
ARM GAS  /tmp/ccxsI2YD.s 			page 163


 4317 0182 E021     		movs	r1, #224
 4318 0184 FFF7FEFF 		bl	VXISI2CWrite
 4319              	.LVL532:
3338:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);
 4320              		.loc 1 3338 0
 4321 0188 3120     		movs	r0, #49
 4322 018a 8021     		movs	r1, #128
 4323 018c FFF7FEFF 		bl	VXISI2CWrite
 4324              	.LVL533:
3339:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);
 4325              		.loc 1 3339 0
 4326 0190 3220     		movs	r0, #50
 4327 0192 8021     		movs	r1, #128
 4328 0194 FFF7FEFF 		bl	VXISI2CWrite
 4329              	.LVL534:
3340:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);
 4330              		.loc 1 3340 0
 4331 0198 3320     		movs	r0, #51
 4332 019a 8021     		movs	r1, #128
 4333 019c FFF7FEFF 		bl	VXISI2CWrite
 4334              	.LVL535:
3341:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);
 4335              		.loc 1 3341 0
 4336 01a0 3420     		movs	r0, #52
 4337 01a2 A021     		movs	r1, #160
 4338 01a4 FFF7FEFF 		bl	VXISI2CWrite
 4339              	.LVL536:
3342:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);
 4340              		.loc 1 3342 0
 4341 01a8 3520     		movs	r0, #53
 4342 01aa 1821     		movs	r1, #24
 4343 01ac FFF7FEFF 		bl	VXISI2CWrite
 4344              	.LVL537:
3343:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);
 4345              		.loc 1 3343 0
 4346 01b0 3620     		movs	r0, #54
 4347 01b2 4621     		movs	r1, #70
 4348 01b4 FFF7FEFF 		bl	VXISI2CWrite
 4349              	.LVL538:
3344:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);
 4350              		.loc 1 3344 0
 4351 01b8 3720     		movs	r0, #55
 4352 01ba 6421     		movs	r1, #100
 4353 01bc FFF7FEFF 		bl	VXISI2CWrite
 4354              	.LVL539:
3345:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);
 4355              		.loc 1 3345 0
 4356 01c0 3820     		movs	r0, #56
 4357 01c2 0021     		movs	r1, #0
 4358 01c4 FFF7FEFF 		bl	VXISI2CWrite
 4359              	.LVL540:
3346:Src/main.c    **** 	VXISI2CWrite(0x3A,0x03);
 4360              		.loc 1 3346 0
 4361 01c8 3920     		movs	r0, #57
 4362 01ca FF21     		movs	r1, #255
 4363 01cc FFF7FEFF 		bl	VXISI2CWrite
 4364              	.LVL541:
ARM GAS  /tmp/ccxsI2YD.s 			page 164


3347:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);
 4365              		.loc 1 3347 0
 4366 01d0 3A20     		movs	r0, #58
 4367 01d2 0321     		movs	r1, #3
 4368 01d4 FFF7FEFF 		bl	VXISI2CWrite
 4369              	.LVL542:
3348:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);
 4370              		.loc 1 3348 0
 4371 01d8 3B20     		movs	r0, #59
 4372 01da 8021     		movs	r1, #128
 4373 01dc FFF7FEFF 		bl	VXISI2CWrite
 4374              	.LVL543:
3349:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);
 4375              		.loc 1 3349 0
 4376 01e0 3C20     		movs	r0, #60
 4377 01e2 8021     		movs	r1, #128
 4378 01e4 FFF7FEFF 		bl	VXISI2CWrite
 4379              	.LVL544:
3350:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);
 4380              		.loc 1 3350 0
 4381 01e8 3D20     		movs	r0, #61
 4382 01ea 8021     		movs	r1, #128
 4383 01ec FFF7FEFF 		bl	VXISI2CWrite
 4384              	.LVL545:
3351:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);
 4385              		.loc 1 3351 0
 4386 01f0 3E20     		movs	r0, #62
 4387 01f2 8021     		movs	r1, #128
 4388 01f4 FFF7FEFF 		bl	VXISI2CWrite
 4389              	.LVL546:
3352:Src/main.c    **** 	//VXISI2CWrite(0xVXISI);2CWrite(0x80
 4390              		.loc 1 3352 0
 4391 01f8 3F20     		movs	r0, #63
 4392 01fa 8021     		movs	r1, #128
 4393 01fc FFF7FEFF 		bl	VXISI2CWrite
 4394              	.LVL547:
3354:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);
 4395              		.loc 1 3354 0
 4396 0200 4120     		movs	r0, #65
 4397 0202 6021     		movs	r1, #96
 4398 0204 FFF7FEFF 		bl	VXISI2CWrite
 4399              	.LVL548:
3355:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);
 4400              		.loc 1 3355 0
 4401 0208 4220     		movs	r0, #66
 4402 020a 5F21     		movs	r1, #95
 4403 020c FFF7FEFF 		bl	VXISI2CWrite
 4404              	.LVL549:
3356:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);
 4405              		.loc 1 3356 0
 4406 0210 4320     		movs	r0, #67
 4407 0212 3721     		movs	r1, #55
 4408 0214 FFF7FEFF 		bl	VXISI2CWrite
 4409              	.LVL550:
3357:Src/main.c    **** 	VXISI2CWrite(0x45,0x04);
 4410              		.loc 1 3357 0
 4411 0218 4420     		movs	r0, #68
ARM GAS  /tmp/ccxsI2YD.s 			page 165


 4412 021a 1421     		movs	r1, #20
 4413 021c FFF7FEFF 		bl	VXISI2CWrite
 4414              	.LVL551:
3358:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);
 4415              		.loc 1 3358 0
 4416 0220 4520     		movs	r0, #69
 4417 0222 0421     		movs	r1, #4
 4418 0224 FFF7FEFF 		bl	VXISI2CWrite
 4419              	.LVL552:
3359:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);
 4420              		.loc 1 3359 0
 4421 0228 4620     		movs	r0, #70
 4422 022a 0021     		movs	r1, #0
 4423 022c FFF7FEFF 		bl	VXISI2CWrite
 4424              	.LVL553:
3360:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);
 4425              		.loc 1 3360 0
 4426 0230 4720     		movs	r0, #71
 4427 0232 0021     		movs	r1, #0
 4428 0234 FFF7FEFF 		bl	VXISI2CWrite
 4429              	.LVL554:
3361:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);
 4430              		.loc 1 3361 0
 4431 0238 4820     		movs	r0, #72
 4432 023a 0021     		movs	r1, #0
 4433 023c FFF7FEFF 		bl	VXISI2CWrite
 4434              	.LVL555:
3362:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);
 4435              		.loc 1 3362 0
 4436 0240 4920     		movs	r0, #73
 4437 0242 0021     		movs	r1, #0
 4438 0244 FFF7FEFF 		bl	VXISI2CWrite
 4439              	.LVL556:
3363:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);
 4440              		.loc 1 3363 0
 4441 0248 4B20     		movs	r0, #75
 4442 024a 2021     		movs	r1, #32
 4443 024c FFF7FEFF 		bl	VXISI2CWrite
 4444              	.LVL557:
3364:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);
 4445              		.loc 1 3364 0
 4446 0250 4C20     		movs	r0, #76
 4447 0252 0021     		movs	r1, #0
 4448 0254 FFF7FEFF 		bl	VXISI2CWrite
 4449              	.LVL558:
3365:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);
 4450              		.loc 1 3365 0
 4451 0258 4D20     		movs	r0, #77
 4452 025a 0021     		movs	r1, #0
 4453 025c FFF7FEFF 		bl	VXISI2CWrite
 4454              	.LVL559:
3366:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);
 4455              		.loc 1 3366 0
 4456 0260 4E20     		movs	r0, #78
 4457 0262 0021     		movs	r1, #0
 4458 0264 FFF7FEFF 		bl	VXISI2CWrite
 4459              	.LVL560:
ARM GAS  /tmp/ccxsI2YD.s 			page 166


3367:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);
 4460              		.loc 1 3367 0
 4461 0268 4F20     		movs	r0, #79
 4462 026a 7F21     		movs	r1, #127
 4463 026c FFF7FEFF 		bl	VXISI2CWrite
 4464              	.LVL561:
3368:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);
 4465              		.loc 1 3368 0
 4466 0270 5020     		movs	r0, #80
 4467 0272 2021     		movs	r1, #32
 4468 0274 FFF7FEFF 		bl	VXISI2CWrite
 4469              	.LVL562:
3369:Src/main.c    **** 	VXISI2CWrite(0x52,0x00);
 4470              		.loc 1 3369 0
 4471 0278 5120     		movs	r0, #81
 4472 027a 0021     		movs	r1, #0
 4473 027c FFF7FEFF 		bl	VXISI2CWrite
 4474              	.LVL563:
3370:Src/main.c    **** 	VXISI2CWrite(0x53,0x04);
 4475              		.loc 1 3370 0
 4476 0280 5220     		movs	r0, #82
 4477 0282 0021     		movs	r1, #0
 4478 0284 FFF7FEFF 		bl	VXISI2CWrite
 4479              	.LVL564:
3371:Src/main.c    **** 	VXISI2CWrite(0x54,0x00);
 4480              		.loc 1 3371 0
 4481 0288 5320     		movs	r0, #83
 4482 028a 0421     		movs	r1, #4
 4483 028c FFF7FEFF 		bl	VXISI2CWrite
 4484              	.LVL565:
3372:Src/main.c    **** 	VXISI2CWrite(0x55,0xE0);
 4485              		.loc 1 3372 0
 4486 0290 5420     		movs	r0, #84
 4487 0292 0021     		movs	r1, #0
 4488 0294 FFF7FEFF 		bl	VXISI2CWrite
 4489              	.LVL566:
3373:Src/main.c    **** 	VXISI2CWrite(0x56,0x40);
 4490              		.loc 1 3373 0
 4491 0298 5520     		movs	r0, #85
 4492 029a E021     		movs	r1, #224
 4493 029c FFF7FEFF 		bl	VXISI2CWrite
 4494              	.LVL567:
3374:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);
 4495              		.loc 1 3374 0
 4496 02a0 5620     		movs	r0, #86
 4497 02a2 4021     		movs	r1, #64
 4498 02a4 FFF7FEFF 		bl	VXISI2CWrite
 4499              	.LVL568:
3375:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);
 4500              		.loc 1 3375 0
 4501 02a8 5720     		movs	r0, #87
 4502 02aa 0421     		movs	r1, #4
 4503 02ac FFF7FEFF 		bl	VXISI2CWrite
 4504              	.LVL569:
3376:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);
 4505              		.loc 1 3376 0
 4506 02b0 5820     		movs	r0, #88
ARM GAS  /tmp/ccxsI2YD.s 			page 167


 4507 02b2 0021     		movs	r1, #0
 4508 02b4 FFF7FEFF 		bl	VXISI2CWrite
 4509              	.LVL570:
3377:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);
 4510              		.loc 1 3377 0
 4511 02b8 5920     		movs	r0, #89
 4512 02ba 0821     		movs	r1, #8
 4513 02bc FFF7FEFF 		bl	VXISI2CWrite
 4514              	.LVL571:
3378:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);
 4515              		.loc 1 3378 0
 4516 02c0 5A20     		movs	r0, #90
 4517 02c2 1021     		movs	r1, #16
 4518 02c4 FFF7FEFF 		bl	VXISI2CWrite
 4519              	.LVL572:
3379:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);
 4520              		.loc 1 3379 0
 4521 02c8 5B20     		movs	r0, #91
 4522 02ca 0021     		movs	r1, #0
 4523 02cc FFF7FEFF 		bl	VXISI2CWrite
 4524              	.LVL573:
3380:Src/main.c    **** 	VXISI2CWrite(0x5D,0x40);
 4525              		.loc 1 3380 0
 4526 02d0 5C20     		movs	r0, #92
 4527 02d2 6821     		movs	r1, #104
 4528 02d4 FFF7FEFF 		bl	VXISI2CWrite
 4529              	.LVL574:
3381:Src/main.c    **** 	VXISI2CWrite(0x5E,0x08);
 4530              		.loc 1 3381 0
 4531 02d8 5D20     		movs	r0, #93
 4532 02da 4021     		movs	r1, #64
 4533 02dc FFF7FEFF 		bl	VXISI2CWrite
 4534              	.LVL575:
3382:Src/main.c    **** 	VXISI2CWrite(0x5F,0x00);
 4535              		.loc 1 3382 0
 4536 02e0 5E20     		movs	r0, #94
 4537 02e2 0821     		movs	r1, #8
 4538 02e4 FFF7FEFF 		bl	VXISI2CWrite
 4539              	.LVL576:
3383:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);
 4540              		.loc 1 3383 0
 4541 02e8 5F20     		movs	r0, #95
 4542 02ea 0021     		movs	r1, #0
 4543 02ec FFF7FEFF 		bl	VXISI2CWrite
 4544              	.LVL577:
3384:Src/main.c    **** 	VXISI2CWrite(0x61,0x54);
 4545              		.loc 1 3384 0
 4546 02f0 6020     		movs	r0, #96
 4547 02f2 E021     		movs	r1, #224
 4548 02f4 FFF7FEFF 		bl	VXISI2CWrite
 4549              	.LVL578:
3385:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);
 4550              		.loc 1 3385 0
 4551 02f8 6120     		movs	r0, #97
 4552 02fa 5421     		movs	r1, #84
 4553 02fc FFF7FEFF 		bl	VXISI2CWrite
 4554              	.LVL579:
ARM GAS  /tmp/ccxsI2YD.s 			page 168


3386:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);
 4555              		.loc 1 3386 0
 4556 0300 6220     		movs	r0, #98
 4557 0302 3321     		movs	r1, #51
 4558 0304 FFF7FEFF 		bl	VXISI2CWrite
 4559              	.LVL580:
3387:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);
 4560              		.loc 1 3387 0
 4561 0308 6320     		movs	r0, #99
 4562 030a 0121     		movs	r1, #1
 4563 030c FFF7FEFF 		bl	VXISI2CWrite
 4564              	.LVL581:
3388:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);
 4565              		.loc 1 3388 0
 4566 0310 6420     		movs	r0, #100
 4567 0312 FF21     		movs	r1, #255
 4568 0314 FFF7FEFF 		bl	VXISI2CWrite
 4569              	.LVL582:
3389:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);
 4570              		.loc 1 3389 0
 4571 0318 6520     		movs	r0, #101
 4572 031a 0121     		movs	r1, #1
 4573 031c FFF7FEFF 		bl	VXISI2CWrite
 4574              	.LVL583:
3390:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);
 4575              		.loc 1 3390 0
 4576 0320 6620     		movs	r0, #102
 4577 0322 FF21     		movs	r1, #255
 4578 0324 FFF7FEFF 		bl	VXISI2CWrite
 4579              	.LVL584:
3391:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);
 4580              		.loc 1 3391 0
 4581 0328 6720     		movs	r0, #103
 4582 032a 8921     		movs	r1, #137
 4583 032c FFF7FEFF 		bl	VXISI2CWrite
 4584              	.LVL585:
3392:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);
 4585              		.loc 1 3392 0
 4586 0330 6820     		movs	r0, #104
 4587 0332 AB21     		movs	r1, #171
 4588 0334 FFF7FEFF 		bl	VXISI2CWrite
 4589              	.LVL586:
3393:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);
 4590              		.loc 1 3393 0
 4591 0338 6920     		movs	r0, #105
 4592 033a 8821     		movs	r1, #136
 4593 033c FFF7FEFF 		bl	VXISI2CWrite
 4594              	.LVL587:
3394:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);
 4595              		.loc 1 3394 0
 4596 0340 6A20     		movs	r0, #106
 4597 0342 6E21     		movs	r1, #110
 4598 0344 FFF7FEFF 		bl	VXISI2CWrite
 4599              	.LVL588:
3395:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);
 4600              		.loc 1 3395 0
 4601 0348 6B20     		movs	r0, #107
ARM GAS  /tmp/ccxsI2YD.s 			page 169


 4602 034a 6E21     		movs	r1, #110
 4603 034c FFF7FEFF 		bl	VXISI2CWrite
 4604              	.LVL589:
3396:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);
 4605              		.loc 1 3396 0
 4606 0350 6C20     		movs	r0, #108
 4607 0352 6E21     		movs	r1, #110
 4608 0354 FFF7FEFF 		bl	VXISI2CWrite
 4609              	.LVL590:
3397:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);
 4610              		.loc 1 3397 0
 4611 0358 6D20     		movs	r0, #109
 4612 035a 0021     		movs	r1, #0
 4613 035c FFF7FEFF 		bl	VXISI2CWrite
 4614              	.LVL591:
3398:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);
 4615              		.loc 1 3398 0
 4616 0360 6E20     		movs	r0, #110
 4617 0362 0021     		movs	r1, #0
 4618 0364 FFF7FEFF 		bl	VXISI2CWrite
 4619              	.LVL592:
3399:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);
 4620              		.loc 1 3399 0
 4621 0368 6F20     		movs	r0, #111
 4622 036a 0021     		movs	r1, #0
 4623 036c FFF7FEFF 		bl	VXISI2CWrite
 4624              	.LVL593:
3400:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);
 4625              		.loc 1 3400 0
 4626 0370 7020     		movs	r0, #112
 4627 0372 0021     		movs	r1, #0
 4628 0374 FFF7FEFF 		bl	VXISI2CWrite
 4629              	.LVL594:
3401:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);
 4630              		.loc 1 3401 0
 4631 0378 7120     		movs	r0, #113
 4632 037a 0021     		movs	r1, #0
 4633 037c FFF7FEFF 		bl	VXISI2CWrite
 4634              	.LVL595:
3402:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);
 4635              		.loc 1 3402 0
 4636 0380 7220     		movs	r0, #114
 4637 0382 0021     		movs	r1, #0
 4638 0384 FFF7FEFF 		bl	VXISI2CWrite
 4639              	.LVL596:
3403:Src/main.c    **** 	VXISI2CWrite(0x74,0x00);
 4640              		.loc 1 3403 0
 4641 0388 7320     		movs	r0, #115
 4642 038a 0021     		movs	r1, #0
 4643 038c FFF7FEFF 		bl	VXISI2CWrite
 4644              	.LVL597:
3404:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);
 4645              		.loc 1 3404 0
 4646 0390 7420     		movs	r0, #116
 4647 0392 0021     		movs	r1, #0
 4648 0394 FFF7FEFF 		bl	VXISI2CWrite
 4649              	.LVL598:
ARM GAS  /tmp/ccxsI2YD.s 			page 170


3405:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);
 4650              		.loc 1 3405 0
 4651 0398 7520     		movs	r0, #117
 4652 039a FF21     		movs	r1, #255
 4653 039c FFF7FEFF 		bl	VXISI2CWrite
 4654              	.LVL599:
3406:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);
 4655              		.loc 1 3406 0
 4656 03a0 7620     		movs	r0, #118
 4657 03a2 FF21     		movs	r1, #255
 4658 03a4 FFF7FEFF 		bl	VXISI2CWrite
 4659              	.LVL600:
3407:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);
 4660              		.loc 1 3407 0
 4661 03a8 7720     		movs	r0, #119
 4662 03aa FF21     		movs	r1, #255
 4663 03ac FFF7FEFF 		bl	VXISI2CWrite
 4664              	.LVL601:
3408:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);
 4665              		.loc 1 3408 0
 4666 03b0 7820     		movs	r0, #120
 4667 03b2 FF21     		movs	r1, #255
 4668 03b4 FFF7FEFF 		bl	VXISI2CWrite
 4669              	.LVL602:
3409:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);
 4670              		.loc 1 3409 0
 4671 03b8 7920     		movs	r0, #121
 4672 03ba FF21     		movs	r1, #255
 4673 03bc FFF7FEFF 		bl	VXISI2CWrite
 4674              	.LVL603:
3410:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);
 4675              		.loc 1 3410 0
 4676 03c0 7A20     		movs	r0, #122
 4677 03c2 FF21     		movs	r1, #255
 4678 03c4 FFF7FEFF 		bl	VXISI2CWrite
 4679              	.LVL604:
3411:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);
 4680              		.loc 1 3411 0
 4681 03c8 7B20     		movs	r0, #123
 4682 03ca FF21     		movs	r1, #255
 4683 03cc FFF7FEFF 		bl	VXISI2CWrite
 4684              	.LVL605:
3412:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);
 4685              		.loc 1 3412 0
 4686 03d0 7C20     		movs	r0, #124
 4687 03d2 FF21     		movs	r1, #255
 4688 03d4 FFF7FEFF 		bl	VXISI2CWrite
 4689              	.LVL606:
3413:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);
 4690              		.loc 1 3413 0
 4691 03d8 7D20     		movs	r0, #125
 4692 03da F021     		movs	r1, #240
 4693 03dc FFF7FEFF 		bl	VXISI2CWrite
 4694              	.LVL607:
3414:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);
 4695              		.loc 1 3414 0
 4696 03e0 7E20     		movs	r0, #126
ARM GAS  /tmp/ccxsI2YD.s 			page 171


 4697 03e2 8021     		movs	r1, #128
 4698 03e4 FFF7FEFF 		bl	VXISI2CWrite
 4699              	.LVL608:
3415:Src/main.c    **** 	VXISI2CWrite(0x80,0x00);
 4700              		.loc 1 3415 0
 4701 03e8 7F20     		movs	r0, #127
 4702 03ea 0021     		movs	r1, #0
 4703 03ec FFF7FEFF 		bl	VXISI2CWrite
 4704              	.LVL609:
3416:Src/main.c    **** 	VXISI2CWrite(0x81,0x34);
 4705              		.loc 1 3416 0
 4706 03f0 8020     		movs	r0, #128
 4707 03f2 0021     		movs	r1, #0
 4708 03f4 FFF7FEFF 		bl	VXISI2CWrite
 4709              	.LVL610:
 4710 03f8 02E0     		b	.L183
 4711              	.L184:
 4712 03fa 00BF     		.align	2
 4713              	.L182:
 4714 03fc 90030000 		.word	.LC36
 4715              	.L183:
3417:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);
 4716              		.loc 1 3417 0
 4717 0400 8120     		movs	r0, #129
 4718 0402 3421     		movs	r1, #52
 4719 0404 FFF7FEFF 		bl	VXISI2CWrite
 4720              	.LVL611:
3418:Src/main.c    **** 	VXISI2CWrite(0x83,0x05);
 4721              		.loc 1 3418 0
 4722 0408 8220     		movs	r0, #130
 4723 040a 4021     		movs	r1, #64
 4724 040c FFF7FEFF 		bl	VXISI2CWrite
 4725              	.LVL612:
3419:Src/main.c    **** 	VXISI2CWrite(0x84,0x59);
 4726              		.loc 1 3419 0
 4727 0410 8320     		movs	r0, #131
 4728 0412 0521     		movs	r1, #5
 4729 0414 FFF7FEFF 		bl	VXISI2CWrite
 4730              	.LVL613:
3420:Src/main.c    **** 	VXISI2CWrite(0x85,0xFD);
 4731              		.loc 1 3420 0
 4732 0418 8420     		movs	r0, #132
 4733 041a 5921     		movs	r1, #89
 4734 041c FFF7FEFF 		bl	VXISI2CWrite
 4735              	.LVL614:
3421:Src/main.c    **** 	VXISI2CWrite(0x86,0x04);
 4736              		.loc 1 3421 0
 4737 0420 8520     		movs	r0, #133
 4738 0422 FD21     		movs	r1, #253
 4739 0424 FFF7FEFF 		bl	VXISI2CWrite
 4740              	.LVL615:
3422:Src/main.c    **** 	VXISI2CWrite(0x87,0x24);
 4741              		.loc 1 3422 0
 4742 0428 8620     		movs	r0, #134
 4743 042a 0421     		movs	r1, #4
 4744 042c FFF7FEFF 		bl	VXISI2CWrite
 4745              	.LVL616:
ARM GAS  /tmp/ccxsI2YD.s 			page 172


3423:Src/main.c    **** 	VXISI2CWrite(0x88,0x94);
 4746              		.loc 1 3423 0
 4747 0430 8720     		movs	r0, #135
 4748 0432 2421     		movs	r1, #36
 4749 0434 FFF7FEFF 		bl	VXISI2CWrite
 4750              	.LVL617:
3424:Src/main.c    **** 	VXISI2CWrite(0x89,0x58);
 4751              		.loc 1 3424 0
 4752 0438 8820     		movs	r0, #136
 4753 043a 9421     		movs	r1, #148
 4754 043c FFF7FEFF 		bl	VXISI2CWrite
 4755              	.LVL618:
3425:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);
 4756              		.loc 1 3425 0
 4757 0440 8920     		movs	r0, #137
 4758 0442 5821     		movs	r1, #88
 4759 0444 FFF7FEFF 		bl	VXISI2CWrite
 4760              	.LVL619:
3426:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);
 4761              		.loc 1 3426 0
 4762 0448 8A20     		movs	r0, #138
 4763 044a 0021     		movs	r1, #0
 4764 044c FFF7FEFF 		bl	VXISI2CWrite
 4765              	.LVL620:
3427:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);
 4766              		.loc 1 3427 0
 4767 0450 8B20     		movs	r0, #139
 4768 0452 7E21     		movs	r1, #126
 4769 0454 FFF7FEFF 		bl	VXISI2CWrite
 4770              	.LVL621:
3428:Src/main.c    **** 	VXISI2CWrite(0x8D,0x2C);
 4771              		.loc 1 3428 0
 4772 0458 8C20     		movs	r0, #140
 4773 045a 0321     		movs	r1, #3
 4774 045c FFF7FEFF 		bl	VXISI2CWrite
 4775              	.LVL622:
3429:Src/main.c    **** 	VXISI2CWrite(0x8E,0x8C);
 4776              		.loc 1 3429 0
 4777 0460 8D20     		movs	r0, #141
 4778 0462 2C21     		movs	r1, #44
 4779 0464 FFF7FEFF 		bl	VXISI2CWrite
 4780              	.LVL623:
3430:Src/main.c    **** 	VXISI2CWrite(0x8F,0x00);
 4781              		.loc 1 3430 0
 4782 0468 8E20     		movs	r0, #142
 4783 046a 8C21     		movs	r1, #140
 4784 046c FFF7FEFF 		bl	VXISI2CWrite
 4785              	.LVL624:
3431:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);
 4786              		.loc 1 3431 0
 4787 0470 8F20     		movs	r0, #143
 4788 0472 0021     		movs	r1, #0
 4789 0474 FFF7FEFF 		bl	VXISI2CWrite
 4790              	.LVL625:
3432:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);
 4791              		.loc 1 3432 0
 4792 0478 9020     		movs	r0, #144
ARM GAS  /tmp/ccxsI2YD.s 			page 173


 4793 047a CC21     		movs	r1, #204
 4794 047c FFF7FEFF 		bl	VXISI2CWrite
 4795              	.LVL626:
3433:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);
 4796              		.loc 1 3433 0
 4797 0480 9120     		movs	r0, #145
 4798 0482 4121     		movs	r1, #65
 4799 0484 FFF7FEFF 		bl	VXISI2CWrite
 4800              	.LVL627:
3434:Src/main.c    **** 	VXISI2CWrite(0x93,0x31);
 4801              		.loc 1 3434 0
 4802 0488 9220     		movs	r0, #146
 4803 048a C421     		movs	r1, #196
 4804 048c FFF7FEFF 		bl	VXISI2CWrite
 4805              	.LVL628:
3435:Src/main.c    **** 	VXISI2CWrite(0x94,0x87);
 4806              		.loc 1 3435 0
 4807 0490 9320     		movs	r0, #147
 4808 0492 3121     		movs	r1, #49
 4809 0494 FFF7FEFF 		bl	VXISI2CWrite
 4810              	.LVL629:
3436:Src/main.c    **** 	VXISI2CWrite(0x95,0xD0);
 4811              		.loc 1 3436 0
 4812 0498 9420     		movs	r0, #148
 4813 049a 8721     		movs	r1, #135
 4814 049c FFF7FEFF 		bl	VXISI2CWrite
 4815              	.LVL630:
3437:Src/main.c    **** 	VXISI2CWrite(0x96,0xF3);
 4816              		.loc 1 3437 0
 4817 04a0 9520     		movs	r0, #149
 4818 04a2 D021     		movs	r1, #208
 4819 04a4 FFF7FEFF 		bl	VXISI2CWrite
 4820              	.LVL631:
3438:Src/main.c    **** 	VXISI2CWrite(0x97,0x20);
 4821              		.loc 1 3438 0
 4822 04a8 9620     		movs	r0, #150
 4823 04aa F321     		movs	r1, #243
 4824 04ac FFF7FEFF 		bl	VXISI2CWrite
 4825              	.LVL632:
3439:Src/main.c    **** 	VXISI2CWrite(0x98,0x11);
 4826              		.loc 1 3439 0
 4827 04b0 9720     		movs	r0, #151
 4828 04b2 2021     		movs	r1, #32
 4829 04b4 FFF7FEFF 		bl	VXISI2CWrite
 4830              	.LVL633:
3440:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);
 4831              		.loc 1 3440 0
 4832 04b8 9820     		movs	r0, #152
 4833 04ba 1121     		movs	r1, #17
 4834 04bc FFF7FEFF 		bl	VXISI2CWrite
 4835              	.LVL634:
3441:Src/main.c    **** 	VXISI2CWrite(0x9A,0xFF);
 4836              		.loc 1 3441 0
 4837 04c0 9920     		movs	r0, #153
 4838 04c2 9021     		movs	r1, #144
 4839 04c4 FFF7FEFF 		bl	VXISI2CWrite
 4840              	.LVL635:
ARM GAS  /tmp/ccxsI2YD.s 			page 174


3442:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);
 4841              		.loc 1 3442 0
 4842 04c8 9A20     		movs	r0, #154
 4843 04ca FF21     		movs	r1, #255
 4844 04cc FFF7FEFF 		bl	VXISI2CWrite
 4845              	.LVL636:
3443:Src/main.c    **** 	VXISI2CWrite(0x9C,0x0A);
 4846              		.loc 1 3443 0
 4847 04d0 9B20     		movs	r0, #155
 4848 04d2 0421     		movs	r1, #4
 4849 04d4 FFF7FEFF 		bl	VXISI2CWrite
 4850              	.LVL637:
3444:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);
 4851              		.loc 1 3444 0
 4852 04d8 9C20     		movs	r0, #156
 4853 04da 0A21     		movs	r1, #10
 4854 04dc FFF7FEFF 		bl	VXISI2CWrite
 4855              	.LVL638:
3445:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);
 4856              		.loc 1 3445 0
 4857 04e0 9D20     		movs	r0, #157
 4858 04e2 0021     		movs	r1, #0
 4859 04e4 FFF7FEFF 		bl	VXISI2CWrite
 4860              	.LVL639:
3446:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);
 4861              		.loc 1 3446 0
 4862 04e8 9E20     		movs	r0, #158
 4863 04ea 0421     		movs	r1, #4
 4864 04ec FFF7FEFF 		bl	VXISI2CWrite
 4865              	.LVL640:
3447:Src/main.c    **** 	VXISI2CWrite(0xA0,0x2F);
 4866              		.loc 1 3447 0
 4867 04f0 9F20     		movs	r0, #159
 4868 04f2 6521     		movs	r1, #101
 4869 04f4 FFF7FEFF 		bl	VXISI2CWrite
 4870              	.LVL641:
3448:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD9);
 4871              		.loc 1 3448 0
 4872 04f8 A020     		movs	r0, #160
 4873 04fa 2F21     		movs	r1, #47
 4874 04fc FFF7FEFF 		bl	VXISI2CWrite
 4875              	.LVL642:
3449:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);
 4876              		.loc 1 3449 0
 4877 0500 A120     		movs	r0, #161
 4878 0502 D921     		movs	r1, #217
 4879 0504 FFF7FEFF 		bl	VXISI2CWrite
 4880              	.LVL643:
3450:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);
 4881              		.loc 1 3450 0
 4882 0508 A220     		movs	r0, #162
 4883 050a 9821     		movs	r1, #152
 4884 050c FFF7FEFF 		bl	VXISI2CWrite
 4885              	.LVL644:
3451:Src/main.c    **** 	VXISI2CWrite(0xA4,0xE1);
 4886              		.loc 1 3451 0
 4887 0510 A320     		movs	r0, #163
ARM GAS  /tmp/ccxsI2YD.s 			page 175


 4888 0512 8721     		movs	r1, #135
 4889 0514 FFF7FEFF 		bl	VXISI2CWrite
 4890              	.LVL645:
3452:Src/main.c    **** 	VXISI2CWrite(0xA5,0x38);
 4891              		.loc 1 3452 0
 4892 0518 A420     		movs	r0, #164
 4893 051a E121     		movs	r1, #225
 4894 051c FFF7FEFF 		bl	VXISI2CWrite
 4895              	.LVL646:
3453:Src/main.c    **** 	VXISI2CWrite(0xA6,0xC2);
 4896              		.loc 1 3453 0
 4897 0520 A520     		movs	r0, #165
 4898 0522 3821     		movs	r1, #56
 4899 0524 FFF7FEFF 		bl	VXISI2CWrite
 4900              	.LVL647:
3454:Src/main.c    **** 	VXISI2CWrite(0xA7,0x70);
 4901              		.loc 1 3454 0
 4902 0528 A620     		movs	r0, #166
 4903 052a C221     		movs	r1, #194
 4904 052c FFF7FEFF 		bl	VXISI2CWrite
 4905              	.LVL648:
3455:Src/main.c    **** 	VXISI2CWrite(0xA8,0x00);
 4906              		.loc 1 3455 0
 4907 0530 A720     		movs	r0, #167
 4908 0532 7021     		movs	r1, #112
 4909 0534 FFF7FEFF 		bl	VXISI2CWrite
 4910              	.LVL649:
3456:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);
 4911              		.loc 1 3456 0
 4912 0538 A820     		movs	r0, #168
 4913 053a 0021     		movs	r1, #0
 4914 053c FFF7FEFF 		bl	VXISI2CWrite
 4915              	.LVL650:
3457:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2E);
 4916              		.loc 1 3457 0
 4917 0540 A920     		movs	r0, #169
 4918 0542 1E21     		movs	r1, #30
 4919 0544 FFF7FEFF 		bl	VXISI2CWrite
 4920              	.LVL651:
3458:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);
 4921              		.loc 1 3458 0
 4922 0548 AA20     		movs	r0, #170
 4923 054a 2E21     		movs	r1, #46
 4924 054c FFF7FEFF 		bl	VXISI2CWrite
 4925              	.LVL652:
3459:Src/main.c    **** 	VXISI2CWrite(0xAC,0x84);
 4926              		.loc 1 3459 0
 4927 0550 AB20     		movs	r0, #171
 4928 0552 0021     		movs	r1, #0
 4929 0554 FFF7FEFF 		bl	VXISI2CWrite
 4930              	.LVL653:
3460:Src/main.c    **** 	VXISI2CWrite(0xAD,0xF3);
 4931              		.loc 1 3460 0
 4932 0558 AC20     		movs	r0, #172
 4933 055a 8421     		movs	r1, #132
 4934 055c FFF7FEFF 		bl	VXISI2CWrite
 4935              	.LVL654:
ARM GAS  /tmp/ccxsI2YD.s 			page 176


3461:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);
 4936              		.loc 1 3461 0
 4937 0560 AD20     		movs	r0, #173
 4938 0562 F321     		movs	r1, #243
 4939 0564 FFF7FEFF 		bl	VXISI2CWrite
 4940              	.LVL655:
3462:Src/main.c    **** 	VXISI2CWrite(0xAF,0x99);
 4941              		.loc 1 3462 0
 4942 0568 AE20     		movs	r0, #174
 4943 056a 6521     		movs	r1, #101
 4944 056c FFF7FEFF 		bl	VXISI2CWrite
 4945              	.LVL656:
3463:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);
 4946              		.loc 1 3463 0
 4947 0570 AF20     		movs	r0, #175
 4948 0572 9921     		movs	r1, #153
 4949 0574 FFF7FEFF 		bl	VXISI2CWrite
 4950              	.LVL657:
3464:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);
 4951              		.loc 1 3464 0
 4952 0578 B020     		movs	r0, #176
 4953 057a 0021     		movs	r1, #0
 4954 057c FFF7FEFF 		bl	VXISI2CWrite
 4955              	.LVL658:
3465:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);
 4956              		.loc 1 3465 0
 4957 0580 B120     		movs	r0, #177
 4958 0582 0021     		movs	r1, #0
 4959 0584 FFF7FEFF 		bl	VXISI2CWrite
 4960              	.LVL659:
3466:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);
 4961              		.loc 1 3466 0
 4962 0588 B220     		movs	r0, #178
 4963 058a 0021     		movs	r1, #0
 4964 058c FFF7FEFF 		bl	VXISI2CWrite
 4965              	.LVL660:
3467:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);
 4966              		.loc 1 3467 0
 4967 0590 B320     		movs	r0, #179
 4968 0592 0021     		movs	r1, #0
 4969 0594 FFF7FEFF 		bl	VXISI2CWrite
 4970              	.LVL661:
3468:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);
 4971              		.loc 1 3468 0
 4972 0598 B420     		movs	r0, #180
 4973 059a 0021     		movs	r1, #0
 4974 059c FFF7FEFF 		bl	VXISI2CWrite
 4975              	.LVL662:
3469:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);
 4976              		.loc 1 3469 0
 4977 05a0 B520     		movs	r0, #181
 4978 05a2 0021     		movs	r1, #0
 4979 05a4 FFF7FEFF 		bl	VXISI2CWrite
 4980              	.LVL663:
3470:Src/main.c    **** 	VXISI2CWrite(0xB8,0x80);
 4981              		.loc 1 3470 0
 4982 05a8 B620     		movs	r0, #182
ARM GAS  /tmp/ccxsI2YD.s 			page 177


 4983 05aa 0021     		movs	r1, #0
 4984 05ac FFF7FEFF 		bl	VXISI2CWrite
 4985              	.LVL664:
3471:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);
 4986              		.loc 1 3471 0
 4987 05b0 B820     		movs	r0, #184
 4988 05b2 8021     		movs	r1, #128
 4989 05b4 FFF7FEFF 		bl	VXISI2CWrite
 4990              	.LVL665:
3472:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);
 4991              		.loc 1 3472 0
 4992 05b8 B920     		movs	r0, #185
 4993 05ba 0021     		movs	r1, #0
 4994 05bc FFF7FEFF 		bl	VXISI2CWrite
 4995              	.LVL666:
3473:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);
 4996              		.loc 1 3473 0
 4997 05c0 BA20     		movs	r0, #186
 4998 05c2 0121     		movs	r1, #1
 4999 05c4 FFF7FEFF 		bl	VXISI2CWrite
 5000              	.LVL667:
3474:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);
 5001              		.loc 1 3474 0
 5002 05c8 BB20     		movs	r0, #187
 5003 05ca 0021     		movs	r1, #0
 5004 05cc FFF7FEFF 		bl	VXISI2CWrite
 5005              	.LVL668:
3475:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);
 5006              		.loc 1 3475 0
 5007 05d0 BC20     		movs	r0, #188
 5008 05d2 9021     		movs	r1, #144
 5009 05d4 FFF7FEFF 		bl	VXISI2CWrite
 5010              	.LVL669:
3476:Src/main.c    **** 	VXISI2CWrite(0xBE,0x2C);
 5011              		.loc 1 3476 0
 5012 05d8 BD20     		movs	r0, #189
 5013 05da 0121     		movs	r1, #1
 5014 05dc FFF7FEFF 		bl	VXISI2CWrite
 5015              	.LVL670:
3477:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);
 5016              		.loc 1 3477 0
 5017 05e0 BE20     		movs	r0, #190
 5018 05e2 2C21     		movs	r1, #44
 5019 05e4 FFF7FEFF 		bl	VXISI2CWrite
 5020              	.LVL671:
3478:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);
 5021              		.loc 1 3478 0
 5022 05e8 C020     		movs	r0, #192
 5023 05ea 0021     		movs	r1, #0
 5024 05ec FFF7FEFF 		bl	VXISI2CWrite
 5025              	.LVL672:
3479:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);
 5026              		.loc 1 3479 0
 5027 05f0 C120     		movs	r0, #193
 5028 05f2 2021     		movs	r1, #32
 5029 05f4 FFF7FEFF 		bl	VXISI2CWrite
 5030              	.LVL673:
ARM GAS  /tmp/ccxsI2YD.s 			page 178


3480:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);
 5031              		.loc 1 3480 0
 5032 05f8 C220     		movs	r0, #194
 5033 05fa 2021     		movs	r1, #32
 5034 05fc FFF7FEFF 		bl	VXISI2CWrite
 5035              	.LVL674:
3481:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);
 5036              		.loc 1 3481 0
 5037 0600 C320     		movs	r0, #195
 5038 0602 2021     		movs	r1, #32
 5039 0604 FFF7FEFF 		bl	VXISI2CWrite
 5040              	.LVL675:
3482:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);
 5041              		.loc 1 3482 0
 5042 0608 C420     		movs	r0, #196
 5043 060a 2021     		movs	r1, #32
 5044 060c FFF7FEFF 		bl	VXISI2CWrite
 5045              	.LVL676:
3483:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);
 5046              		.loc 1 3483 0
 5047 0610 C520     		movs	r0, #197
 5048 0612 2021     		movs	r1, #32
 5049 0614 FFF7FEFF 		bl	VXISI2CWrite
 5050              	.LVL677:
3484:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);
 5051              		.loc 1 3484 0
 5052 0618 D020     		movs	r0, #208
 5053 061a FF21     		movs	r1, #255
 5054 061c FFF7FEFF 		bl	VXISI2CWrite
 5055              	.LVL678:
3485:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);
 5056              		.loc 1 3485 0
 5057 0620 D120     		movs	r0, #209
 5058 0622 3F21     		movs	r1, #63
 5059 0624 FFF7FEFF 		bl	VXISI2CWrite
 5060              	.LVL679:
3486:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);
 5061              		.loc 1 3486 0
 5062 0628 D220     		movs	r0, #210
 5063 062a C221     		movs	r1, #194
 5064 062c FFF7FEFF 		bl	VXISI2CWrite
 5065              	.LVL680:
3487:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);
 5066              		.loc 1 3487 0
 5067 0630 D320     		movs	r0, #211
 5068 0632 3F21     		movs	r1, #63
 5069 0634 FFF7FEFF 		bl	VXISI2CWrite
 5070              	.LVL681:
3488:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);
 5071              		.loc 1 3488 0
 5072 0638 D420     		movs	r0, #212
 5073 063a 0021     		movs	r1, #0
 5074 063c FFF7FEFF 		bl	VXISI2CWrite
 5075              	.LVL682:
3489:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);
 5076              		.loc 1 3489 0
 5077 0640 D520     		movs	r0, #213
ARM GAS  /tmp/ccxsI2YD.s 			page 179


 5078 0642 0021     		movs	r1, #0
 5079 0644 FFF7FEFF 		bl	VXISI2CWrite
 5080              	.LVL683:
3490:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);
 5081              		.loc 1 3490 0
 5082 0648 D620     		movs	r0, #214
 5083 064a 0021     		movs	r1, #0
 5084 064c FFF7FEFF 		bl	VXISI2CWrite
 5085              	.LVL684:
3491:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);
 5086              		.loc 1 3491 0
 5087 0650 D720     		movs	r0, #215
 5088 0652 1021     		movs	r1, #16
 5089 0654 FFF7FEFF 		bl	VXISI2CWrite
 5090              	.LVL685:
3492:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);
 5091              		.loc 1 3492 0
 5092 0658 D820     		movs	r0, #216
 5093 065a 0021     		movs	r1, #0
 5094 065c FFF7FEFF 		bl	VXISI2CWrite
 5095              	.LVL686:
3493:Src/main.c    **** 	VXISI2CWrite(0xDD,0x00);
 5096              		.loc 1 3493 0
 5097 0660 DC20     		movs	r0, #220
 5098 0662 7721     		movs	r1, #119
 5099 0664 FFF7FEFF 		bl	VXISI2CWrite
 5100              	.LVL687:
3494:Src/main.c    **** 	VXISI2CWrite(0xDE,0xAF);
 5101              		.loc 1 3494 0
 5102 0668 DD20     		movs	r0, #221
 5103 066a 0021     		movs	r1, #0
 5104 066c FFF7FEFF 		bl	VXISI2CWrite
 5105              	.LVL688:
3495:Src/main.c    **** 	VXISI2CWrite(0xDF,0xEF);
 5106              		.loc 1 3495 0
 5107 0670 DE20     		movs	r0, #222
 5108 0672 AF21     		movs	r1, #175
 5109 0674 FFF7FEFF 		bl	VXISI2CWrite
 5110              	.LVL689:
3496:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);
 5111              		.loc 1 3496 0
 5112 0678 DF20     		movs	r0, #223
 5113 067a EF21     		movs	r1, #239
 5114 067c FFF7FEFF 		bl	VXISI2CWrite
 5115              	.LVL690:
3497:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);
 5116              		.loc 1 3497 0
 5117 0680 E020     		movs	r0, #224
 5118 0682 0021     		movs	r1, #0
 5119 0684 FFF7FEFF 		bl	VXISI2CWrite
 5120              	.LVL691:
3498:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);
 5121              		.loc 1 3498 0
 5122 0688 E120     		movs	r0, #225
 5123 068a 0021     		movs	r1, #0
 5124 068c FFF7FEFF 		bl	VXISI2CWrite
 5125              	.LVL692:
ARM GAS  /tmp/ccxsI2YD.s 			page 180


3499:Src/main.c    **** 	VXISI2CWrite(0xE3,0x12);
 5126              		.loc 1 3499 0
 5127 0690 E220     		movs	r0, #226
 5128 0692 0021     		movs	r1, #0
 5129 0694 FFF7FEFF 		bl	VXISI2CWrite
 5130              	.LVL693:
3500:Src/main.c    **** 	VXISI2CWrite(0xE4,0xE2);
 5131              		.loc 1 3500 0
 5132 0698 E320     		movs	r0, #227
 5133 069a 1221     		movs	r1, #18
 5134 069c FFF7FEFF 		bl	VXISI2CWrite
 5135              	.LVL694:
3501:Src/main.c    **** 	VXISI2CWrite(0xE5,0xD0);
 5136              		.loc 1 3501 0
 5137 06a0 E420     		movs	r0, #228
 5138 06a2 E221     		movs	r1, #226
 5139 06a4 FFF7FEFF 		bl	VXISI2CWrite
 5140              	.LVL695:
3502:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);
 5141              		.loc 1 3502 0
 5142 06a8 E520     		movs	r0, #229
 5143 06aa D021     		movs	r1, #208
 5144 06ac FFF7FEFF 		bl	VXISI2CWrite
 5145              	.LVL696:
3503:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);
 5146              		.loc 1 3503 0
 5147 06b0 E620     		movs	r0, #230
 5148 06b2 0021     		movs	r1, #0
 5149 06b4 FFF7FEFF 		bl	VXISI2CWrite
 5150              	.LVL697:
3504:Src/main.c    **** 	VXISI2CWrite(0xE8,0x0F);
 5151              		.loc 1 3504 0
 5152 06b8 E720     		movs	r0, #231
 5153 06ba 0021     		movs	r1, #0
 5154 06bc FFF7FEFF 		bl	VXISI2CWrite
 5155              	.LVL698:
3505:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);
 5156              		.loc 1 3505 0
 5157 06c0 E820     		movs	r0, #232
 5158 06c2 0F21     		movs	r1, #15
 5159 06c4 FFF7FEFF 		bl	VXISI2CWrite
 5160              	.LVL699:
3506:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);
 5161              		.loc 1 3506 0
 5162 06c8 E920     		movs	r0, #233
 5163 06ca 0021     		movs	r1, #0
 5164 06cc FFF7FEFF 		bl	VXISI2CWrite
 5165              	.LVL700:
3507:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);
 5166              		.loc 1 3507 0
 5167 06d0 EA20     		movs	r0, #234
 5168 06d2 0021     		movs	r1, #0
 5169 06d4 FFF7FEFF 		bl	VXISI2CWrite
 5170              	.LVL701:
3508:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);
 5171              		.loc 1 3508 0
 5172 06d8 EB20     		movs	r0, #235
ARM GAS  /tmp/ccxsI2YD.s 			page 181


 5173 06da 0021     		movs	r1, #0
 5174 06dc FFF7FEFF 		bl	VXISI2CWrite
 5175              	.LVL702:
3509:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);
 5176              		.loc 1 3509 0
 5177 06e0 EC20     		movs	r0, #236
 5178 06e2 8821     		movs	r1, #136
 5179 06e4 FFF7FEFF 		bl	VXISI2CWrite
 5180              	.LVL703:
3510:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);
 5181              		.loc 1 3510 0
 5182 06e8 ED20     		movs	r0, #237
 5183 06ea 0021     		movs	r1, #0
 5184 06ec FFF7FEFF 		bl	VXISI2CWrite
 5185              	.LVL704:
3511:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);
 5186              		.loc 1 3511 0
 5187 06f0 EE20     		movs	r0, #238
 5188 06f2 0021     		movs	r1, #0
 5189 06f4 FFF7FEFF 		bl	VXISI2CWrite
 5190              	.LVL705:
3512:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);
 5191              		.loc 1 3512 0
 5192 06f8 EF20     		movs	r0, #239
 5193 06fa 0021     		movs	r1, #0
 5194 06fc FFF7FEFF 		bl	VXISI2CWrite
 5195              	.LVL706:
3513:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);
 5196              		.loc 1 3513 0
 5197 0700 F020     		movs	r0, #240
 5198 0702 3021     		movs	r1, #48
 5199 0704 FFF7FEFF 		bl	VXISI2CWrite
 5200              	.LVL707:
3514:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);
 5201              		.loc 1 3514 0
 5202 0708 F120     		movs	r0, #241
 5203 070a 4321     		movs	r1, #67
 5204 070c FFF7FEFF 		bl	VXISI2CWrite
 5205              	.LVL708:
3515:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);
 5206              		.loc 1 3515 0
 5207 0710 F220     		movs	r0, #242
 5208 0712 1F21     		movs	r1, #31
 5209 0714 FFF7FEFF 		bl	VXISI2CWrite
 5210              	.LVL709:
3516:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);
 5211              		.loc 1 3516 0
 5212 0718 F320     		movs	r0, #243
 5213 071a 1F21     		movs	r1, #31
 5214 071c FFF7FEFF 		bl	VXISI2CWrite
 5215              	.LVL710:
3517:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);
 5216              		.loc 1 3517 0
 5217 0720 F420     		movs	r0, #244
 5218 0722 2221     		movs	r1, #34
 5219 0724 FFF7FEFF 		bl	VXISI2CWrite
 5220              	.LVL711:
ARM GAS  /tmp/ccxsI2YD.s 			page 182


3518:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);
 5221              		.loc 1 3518 0
 5222 0728 F520     		movs	r0, #245
 5223 072a 7321     		movs	r1, #115
 5224 072c FFF7FEFF 		bl	VXISI2CWrite
 5225              	.LVL712:
3519:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);
 5226              		.loc 1 3519 0
 5227 0730 F620     		movs	r0, #246
 5228 0732 5321     		movs	r1, #83
 5229 0734 FFF7FEFF 		bl	VXISI2CWrite
 5230              	.LVL713:
3520:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);
 5231              		.loc 1 3520 0
 5232 0738 F720     		movs	r0, #247
 5233 073a 8021     		movs	r1, #128
 5234 073c FFF7FEFF 		bl	VXISI2CWrite
 5235              	.LVL714:
3521:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);
 5236              		.loc 1 3521 0
 5237 0740 F820     		movs	r0, #248
 5238 0742 0121     		movs	r1, #1
 5239 0744 FFF7FEFF 		bl	VXISI2CWrite
 5240              	.LVL715:
3522:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);
 5241              		.loc 1 3522 0
 5242 0748 F920     		movs	r0, #249
 5243 074a 0121     		movs	r1, #1
 5244 074c FFF7FEFF 		bl	VXISI2CWrite
 5245              	.LVL716:
3523:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);
 5246              		.loc 1 3523 0
 5247 0750 FA20     		movs	r0, #250
 5248 0752 0021     		movs	r1, #0
 5249 0754 FFF7FEFF 		bl	VXISI2CWrite
 5250              	.LVL717:
3524:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);
 5251              		.loc 1 3524 0
 5252 0758 FB20     		movs	r0, #251
 5253 075a 0021     		movs	r1, #0
 5254 075c FFF7FEFF 		bl	VXISI2CWrite
 5255              	.LVL718:
3525:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);
 5256              		.loc 1 3525 0
 5257 0760 FC20     		movs	r0, #252
 5258 0762 0021     		movs	r1, #0
 5259 0764 FFF7FEFF 		bl	VXISI2CWrite
 5260              	.LVL719:
3526:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);
 5261              		.loc 1 3526 0
 5262 0768 FD20     		movs	r0, #253
 5263 076a 7021     		movs	r1, #112
 5264 076c FFF7FEFF 		bl	VXISI2CWrite
 5265              	.LVL720:
3527:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);
 5266              		.loc 1 3527 0
 5267 0770 FE20     		movs	r0, #254
ARM GAS  /tmp/ccxsI2YD.s 			page 183


 5268 0772 4021     		movs	r1, #64
 5269 0774 FFF7FEFF 		bl	VXISI2CWrite
 5270              	.LVL721:
3528:Src/main.c    **** 			 
 5271              		.loc 1 3528 0
 5272 0778 FF20     		movs	r0, #255
 5273 077a 0721     		movs	r1, #7
 5274 077c FFF7FEFF 		bl	VXISI2CWrite
 5275              	.LVL722:
 5276 0780 08BD     		pop	{r3, pc}
 5277              		.cfi_endproc
 5278              	.LFE90:
 5280 0782 00BF     		.section	.text.SET_AHD_MDOE,"ax",%progbits
 5281              		.align	2
 5282              		.global	SET_AHD_MDOE
 5283              		.thumb
 5284              		.thumb_func
 5286              	SET_AHD_MDOE:
 5287              	.LFB91:
3533:Src/main.c    **** 	Printf("\r\nSET_AHD_MDOE...");
 5288              		.loc 1 3533 0
 5289              		.cfi_startproc
 5290              		@ args = 0, pretend = 0, frame = 0
 5291              		@ frame_needed = 0, uses_anonymous_args = 0
 5292 0000 08B5     		push	{r3, lr}
 5293              	.LCFI40:
 5294              		.cfi_def_cfa_offset 8
 5295              		.cfi_offset 3, -8
 5296              		.cfi_offset 14, -4
3534:Src/main.c    **** 
 5297              		.loc 1 3534 0
 5298 0002 FE48     		ldr	r0, .L187
 5299 0004 FFF7FEFF 		bl	Printf
 5300              	.LVL723:
3536:Src/main.c    **** 	VXISI2CWrite(0x01,0x00);
 5301              		.loc 1 3536 0
 5302 0008 0020     		movs	r0, #0
 5303 000a 4221     		movs	r1, #66
 5304 000c FFF7FEFF 		bl	VXISI2CWrite
 5305              	.LVL724:
3537:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);
 5306              		.loc 1 3537 0
 5307 0010 0120     		movs	r0, #1
 5308 0012 0021     		movs	r1, #0
 5309 0014 FFF7FEFF 		bl	VXISI2CWrite
 5310              	.LVL725:
3538:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);
 5311              		.loc 1 3538 0
 5312 0018 0220     		movs	r0, #2
 5313 001a 0021     		movs	r1, #0
 5314 001c FFF7FEFF 		bl	VXISI2CWrite
 5315              	.LVL726:
3539:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);
 5316              		.loc 1 3539 0
 5317 0020 0320     		movs	r0, #3
 5318 0022 7521     		movs	r1, #117
 5319 0024 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccxsI2YD.s 			page 184


 5320              	.LVL727:
3540:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);
 5321              		.loc 1 3540 0
 5322 0028 0420     		movs	r0, #4
 5323 002a 1821     		movs	r1, #24
 5324 002c FFF7FEFF 		bl	VXISI2CWrite
 5325              	.LVL728:
3541:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);
 5326              		.loc 1 3541 0
 5327 0030 0520     		movs	r0, #5
 5328 0032 8021     		movs	r1, #128
 5329 0034 FFF7FEFF 		bl	VXISI2CWrite
 5330              	.LVL729:
3542:Src/main.c    **** 	VXISI2CWrite(0x07,0x0C);
 5331              		.loc 1 3542 0
 5332 0038 0620     		movs	r0, #6
 5333 003a 2021     		movs	r1, #32
 5334 003c FFF7FEFF 		bl	VXISI2CWrite
 5335              	.LVL730:
3543:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);
 5336              		.loc 1 3543 0
 5337 0040 0720     		movs	r0, #7
 5338 0042 0C21     		movs	r1, #12
 5339 0044 FFF7FEFF 		bl	VXISI2CWrite
 5340              	.LVL731:
3544:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);
 5341              		.loc 1 3544 0
 5342 0048 0820     		movs	r0, #8
 5343 004a 4021     		movs	r1, #64
 5344 004c FFF7FEFF 		bl	VXISI2CWrite
 5345              	.LVL732:
3545:Src/main.c    **** 	VXISI2CWrite(0x0A,0x40);
 5346              		.loc 1 3545 0
 5347 0050 0920     		movs	r0, #9
 5348 0052 0A21     		movs	r1, #10
 5349 0054 FFF7FEFF 		bl	VXISI2CWrite
 5350              	.LVL733:
3546:Src/main.c    **** 	VXISI2CWrite(0x0B,0x0A);
 5351              		.loc 1 3546 0
 5352 0058 0A20     		movs	r0, #10
 5353 005a 4021     		movs	r1, #64
 5354 005c FFF7FEFF 		bl	VXISI2CWrite
 5355              	.LVL734:
3547:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);
 5356              		.loc 1 3547 0
 5357 0060 0B20     		movs	r0, #11
 5358 0062 0A21     		movs	r1, #10
 5359 0064 FFF7FEFF 		bl	VXISI2CWrite
 5360              	.LVL735:
3548:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);
 5361              		.loc 1 3548 0
 5362 0068 0C20     		movs	r0, #12
 5363 006a 0021     		movs	r1, #0
 5364 006c FFF7FEFF 		bl	VXISI2CWrite
 5365              	.LVL736:
3549:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);
 5366              		.loc 1 3549 0
ARM GAS  /tmp/ccxsI2YD.s 			page 185


 5367 0070 0D20     		movs	r0, #13
 5368 0072 2021     		movs	r1, #32
 5369 0074 FFF7FEFF 		bl	VXISI2CWrite
 5370              	.LVL737:
3550:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);
 5371              		.loc 1 3550 0
 5372 0078 0E20     		movs	r0, #14
 5373 007a 1021     		movs	r1, #16
 5374 007c FFF7FEFF 		bl	VXISI2CWrite
 5375              	.LVL738:
3551:Src/main.c    **** 	VXISI2CWrite(0x10,0x81);
 5376              		.loc 1 3551 0
 5377 0080 0F20     		movs	r0, #15
 5378 0082 0021     		movs	r1, #0
 5379 0084 FFF7FEFF 		bl	VXISI2CWrite
 5380              	.LVL739:
3552:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);
 5381              		.loc 1 3552 0
 5382 0088 1020     		movs	r0, #16
 5383 008a 8121     		movs	r1, #129
 5384 008c FFF7FEFF 		bl	VXISI2CWrite
 5385              	.LVL740:
3553:Src/main.c    **** 	VXISI2CWrite(0x12,0x74);
 5386              		.loc 1 3553 0
 5387 0090 1120     		movs	r0, #17
 5388 0092 8221     		movs	r1, #130
 5389 0094 FFF7FEFF 		bl	VXISI2CWrite
 5390              	.LVL741:
3554:Src/main.c    **** 	VXISI2CWrite(0x13,0x80);
 5391              		.loc 1 3554 0
 5392 0098 1220     		movs	r0, #18
 5393 009a 7421     		movs	r1, #116
 5394 009c FFF7FEFF 		bl	VXISI2CWrite
 5395              	.LVL742:
3555:Src/main.c    **** 	VXISI2CWrite(0x14,0x38);
 5396              		.loc 1 3555 0
 5397 00a0 1320     		movs	r0, #19
 5398 00a2 8021     		movs	r1, #128
 5399 00a4 FFF7FEFF 		bl	VXISI2CWrite
 5400              	.LVL743:
3556:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);
 5401              		.loc 1 3556 0
 5402 00a8 1420     		movs	r0, #20
 5403 00aa 3821     		movs	r1, #56
 5404 00ac FFF7FEFF 		bl	VXISI2CWrite
 5405              	.LVL744:
3557:Src/main.c    **** 	VXISI2CWrite(0x16,0xFE);
 5406              		.loc 1 3557 0
 5407 00b0 1520     		movs	r0, #21
 5408 00b2 7821     		movs	r1, #120
 5409 00b4 FFF7FEFF 		bl	VXISI2CWrite
 5410              	.LVL745:
3558:Src/main.c    **** 	VXISI2CWrite(0x17,0x00);
 5411              		.loc 1 3558 0
 5412 00b8 1620     		movs	r0, #22
 5413 00ba FE21     		movs	r1, #254
 5414 00bc FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccxsI2YD.s 			page 186


 5415              	.LVL746:
3559:Src/main.c    **** 	VXISI2CWrite(0x18,0xC0);
 5416              		.loc 1 3559 0
 5417 00c0 1720     		movs	r0, #23
 5418 00c2 0021     		movs	r1, #0
 5419 00c4 FFF7FEFF 		bl	VXISI2CWrite
 5420              	.LVL747:
3560:Src/main.c    **** 	VXISI2CWrite(0x19,0x01);
 5421              		.loc 1 3560 0
 5422 00c8 1820     		movs	r0, #24
 5423 00ca C021     		movs	r1, #192
 5424 00cc FFF7FEFF 		bl	VXISI2CWrite
 5425              	.LVL748:
3561:Src/main.c    **** 	VXISI2CWrite(0x1A,0x20);
 5426              		.loc 1 3561 0
 5427 00d0 1920     		movs	r0, #25
 5428 00d2 0121     		movs	r1, #1
 5429 00d4 FFF7FEFF 		bl	VXISI2CWrite
 5430              	.LVL749:
3562:Src/main.c    **** 	VXISI2CWrite(0x1B,0x30);
 5431              		.loc 1 3562 0
 5432 00d8 1A20     		movs	r0, #26
 5433 00da 2021     		movs	r1, #32
 5434 00dc FFF7FEFF 		bl	VXISI2CWrite
 5435              	.LVL750:
3563:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);
 5436              		.loc 1 3563 0
 5437 00e0 1B20     		movs	r0, #27
 5438 00e2 3021     		movs	r1, #48
 5439 00e4 FFF7FEFF 		bl	VXISI2CWrite
 5440              	.LVL751:
3564:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);
 5441              		.loc 1 3564 0
 5442 00e8 1C20     		movs	r0, #28
 5443 00ea 0021     		movs	r1, #0
 5444 00ec FFF7FEFF 		bl	VXISI2CWrite
 5445              	.LVL752:
3565:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);
 5446              		.loc 1 3565 0
 5447 00f0 1D20     		movs	r0, #29
 5448 00f2 0021     		movs	r1, #0
 5449 00f4 FFF7FEFF 		bl	VXISI2CWrite
 5450              	.LVL753:
3566:Src/main.c    **** 	VXISI2CWrite(0x1F,0xA4);
 5451              		.loc 1 3566 0
 5452 00f8 1E20     		movs	r0, #30
 5453 00fa 2021     		movs	r1, #32
 5454 00fc FFF7FEFF 		bl	VXISI2CWrite
 5455              	.LVL754:
3567:Src/main.c    **** 	VXISI2CWrite(0x20,0x50);
 5456              		.loc 1 3567 0
 5457 0100 1F20     		movs	r0, #31
 5458 0102 A421     		movs	r1, #164
 5459 0104 FFF7FEFF 		bl	VXISI2CWrite
 5460              	.LVL755:
3568:Src/main.c    **** 	VXISI2CWrite(0x21,0xE2);
 5461              		.loc 1 3568 0
ARM GAS  /tmp/ccxsI2YD.s 			page 187


 5462 0108 2020     		movs	r0, #32
 5463 010a 5021     		movs	r1, #80
 5464 010c FFF7FEFF 		bl	VXISI2CWrite
 5465              	.LVL756:
3569:Src/main.c    **** 	VXISI2CWrite(0x22,0x87);
 5466              		.loc 1 3569 0
 5467 0110 2120     		movs	r0, #33
 5468 0112 E221     		movs	r1, #226
 5469 0114 FFF7FEFF 		bl	VXISI2CWrite
 5470              	.LVL757:
3570:Src/main.c    **** 	VXISI2CWrite(0x23,0x98);
 5471              		.loc 1 3570 0
 5472 0118 2220     		movs	r0, #34
 5473 011a 8721     		movs	r1, #135
 5474 011c FFF7FEFF 		bl	VXISI2CWrite
 5475              	.LVL758:
3571:Src/main.c    **** 	VXISI2CWrite(0x24,0x80);
 5476              		.loc 1 3571 0
 5477 0120 2320     		movs	r0, #35
 5478 0122 9821     		movs	r1, #152
 5479 0124 FFF7FEFF 		bl	VXISI2CWrite
 5480              	.LVL759:
3572:Src/main.c    **** 	VXISI2CWrite(0x25,0x44);
 5481              		.loc 1 3572 0
 5482 0128 2420     		movs	r0, #36
 5483 012a 8021     		movs	r1, #128
 5484 012c FFF7FEFF 		bl	VXISI2CWrite
 5485              	.LVL760:
3573:Src/main.c    **** 	VXISI2CWrite(0x26,0x65);
 5486              		.loc 1 3573 0
 5487 0130 2520     		movs	r0, #37
 5488 0132 4421     		movs	r1, #68
 5489 0134 FFF7FEFF 		bl	VXISI2CWrite
 5490              	.LVL761:
3574:Src/main.c    **** 	VXISI2CWrite(0x27,0x38);
 5491              		.loc 1 3574 0
 5492 0138 2620     		movs	r0, #38
 5493 013a 6521     		movs	r1, #101
 5494 013c FFF7FEFF 		bl	VXISI2CWrite
 5495              	.LVL762:
3575:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);
 5496              		.loc 1 3575 0
 5497 0140 2720     		movs	r0, #39
 5498 0142 3821     		movs	r1, #56
 5499 0144 FFF7FEFF 		bl	VXISI2CWrite
 5500              	.LVL763:
3576:Src/main.c    **** 	VXISI2CWrite(0x29,0x00);
 5501              		.loc 1 3576 0
 5502 0148 2820     		movs	r0, #40
 5503 014a F021     		movs	r1, #240
 5504 014c FFF7FEFF 		bl	VXISI2CWrite
 5505              	.LVL764:
3577:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);
 5506              		.loc 1 3577 0
 5507 0150 2920     		movs	r0, #41
 5508 0152 0021     		movs	r1, #0
 5509 0154 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccxsI2YD.s 			page 188


 5510              	.LVL765:
3578:Src/main.c    **** 	VXISI2CWrite(0x2B,0x11);
 5511              		.loc 1 3578 0
 5512 0158 2A20     		movs	r0, #42
 5513 015a 0021     		movs	r1, #0
 5514 015c FFF7FEFF 		bl	VXISI2CWrite
 5515              	.LVL766:
3579:Src/main.c    **** 	VXISI2CWrite(0x2C,0x00);
 5516              		.loc 1 3579 0
 5517 0160 2B20     		movs	r0, #43
 5518 0162 1121     		movs	r1, #17
 5519 0164 FFF7FEFF 		bl	VXISI2CWrite
 5520              	.LVL767:
3580:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);
 5521              		.loc 1 3580 0
 5522 0168 2C20     		movs	r0, #44
 5523 016a 0021     		movs	r1, #0
 5524 016c FFF7FEFF 		bl	VXISI2CWrite
 5525              	.LVL768:
3581:Src/main.c    **** 	VXISI2CWrite(0x2E,0x47);
 5526              		.loc 1 3581 0
 5527 0170 2D20     		movs	r0, #45
 5528 0172 0021     		movs	r1, #0
 5529 0174 FFF7FEFF 		bl	VXISI2CWrite
 5530              	.LVL769:
3582:Src/main.c    **** 	VXISI2CWrite(0x2F,0x80);
 5531              		.loc 1 3582 0
 5532 0178 2E20     		movs	r0, #46
 5533 017a 4721     		movs	r1, #71
 5534 017c FFF7FEFF 		bl	VXISI2CWrite
 5535              	.LVL770:
3583:Src/main.c    **** 	VXISI2CWrite(0x30,0x38);
 5536              		.loc 1 3583 0
 5537 0180 2F20     		movs	r0, #47
 5538 0182 8021     		movs	r1, #128
 5539 0184 FFF7FEFF 		bl	VXISI2CWrite
 5540              	.LVL771:
3584:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);
 5541              		.loc 1 3584 0
 5542 0188 3020     		movs	r0, #48
 5543 018a 3821     		movs	r1, #56
 5544 018c FFF7FEFF 		bl	VXISI2CWrite
 5545              	.LVL772:
3585:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);
 5546              		.loc 1 3585 0
 5547 0190 3120     		movs	r0, #49
 5548 0192 8021     		movs	r1, #128
 5549 0194 FFF7FEFF 		bl	VXISI2CWrite
 5550              	.LVL773:
3586:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);
 5551              		.loc 1 3586 0
 5552 0198 3220     		movs	r0, #50
 5553 019a 8021     		movs	r1, #128
 5554 019c FFF7FEFF 		bl	VXISI2CWrite
 5555              	.LVL774:
3587:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);
 5556              		.loc 1 3587 0
ARM GAS  /tmp/ccxsI2YD.s 			page 189


 5557 01a0 3320     		movs	r0, #51
 5558 01a2 8021     		movs	r1, #128
 5559 01a4 FFF7FEFF 		bl	VXISI2CWrite
 5560              	.LVL775:
3588:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);
 5561              		.loc 1 3588 0
 5562 01a8 3420     		movs	r0, #52
 5563 01aa A021     		movs	r1, #160
 5564 01ac FFF7FEFF 		bl	VXISI2CWrite
 5565              	.LVL776:
3589:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);
 5566              		.loc 1 3589 0
 5567 01b0 3520     		movs	r0, #53
 5568 01b2 1821     		movs	r1, #24
 5569 01b4 FFF7FEFF 		bl	VXISI2CWrite
 5570              	.LVL777:
3590:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);
 5571              		.loc 1 3590 0
 5572 01b8 3620     		movs	r0, #54
 5573 01ba 4621     		movs	r1, #70
 5574 01bc FFF7FEFF 		bl	VXISI2CWrite
 5575              	.LVL778:
3591:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);
 5576              		.loc 1 3591 0
 5577 01c0 3720     		movs	r0, #55
 5578 01c2 6421     		movs	r1, #100
 5579 01c4 FFF7FEFF 		bl	VXISI2CWrite
 5580              	.LVL779:
3592:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);
 5581              		.loc 1 3592 0
 5582 01c8 3820     		movs	r0, #56
 5583 01ca 0021     		movs	r1, #0
 5584 01cc FFF7FEFF 		bl	VXISI2CWrite
 5585              	.LVL780:
3593:Src/main.c    **** 	VXISI2CWrite(0x3A,0x73);
 5586              		.loc 1 3593 0
 5587 01d0 3920     		movs	r0, #57
 5588 01d2 FF21     		movs	r1, #255
 5589 01d4 FFF7FEFF 		bl	VXISI2CWrite
 5590              	.LVL781:
3594:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);
 5591              		.loc 1 3594 0
 5592 01d8 3A20     		movs	r0, #58
 5593 01da 7321     		movs	r1, #115
 5594 01dc FFF7FEFF 		bl	VXISI2CWrite
 5595              	.LVL782:
3595:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);
 5596              		.loc 1 3595 0
 5597 01e0 3B20     		movs	r0, #59
 5598 01e2 8021     		movs	r1, #128
 5599 01e4 FFF7FEFF 		bl	VXISI2CWrite
 5600              	.LVL783:
3596:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);
 5601              		.loc 1 3596 0
 5602 01e8 3C20     		movs	r0, #60
 5603 01ea 8021     		movs	r1, #128
 5604 01ec FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccxsI2YD.s 			page 190


 5605              	.LVL784:
3597:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);
 5606              		.loc 1 3597 0
 5607 01f0 3D20     		movs	r0, #61
 5608 01f2 8021     		movs	r1, #128
 5609 01f4 FFF7FEFF 		bl	VXISI2CWrite
 5610              	.LVL785:
3598:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);
 5611              		.loc 1 3598 0
 5612 01f8 3E20     		movs	r0, #62
 5613 01fa 8021     		movs	r1, #128
 5614 01fc FFF7FEFF 		bl	VXISI2CWrite
 5615              	.LVL786:
3599:Src/main.c    **** 	VXISI2CWrite(0x40,0x80);
 5616              		.loc 1 3599 0
 5617 0200 3F20     		movs	r0, #63
 5618 0202 8021     		movs	r1, #128
 5619 0204 FFF7FEFF 		bl	VXISI2CWrite
 5620              	.LVL787:
3600:Src/main.c    **** 	VXISI2CWrite(0x41,0x60);
 5621              		.loc 1 3600 0
 5622 0208 4020     		movs	r0, #64
 5623 020a 8021     		movs	r1, #128
 5624 020c FFF7FEFF 		bl	VXISI2CWrite
 5625              	.LVL788:
3601:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);
 5626              		.loc 1 3601 0
 5627 0210 4120     		movs	r0, #65
 5628 0212 6021     		movs	r1, #96
 5629 0214 FFF7FEFF 		bl	VXISI2CWrite
 5630              	.LVL789:
3602:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);
 5631              		.loc 1 3602 0
 5632 0218 4220     		movs	r0, #66
 5633 021a 5F21     		movs	r1, #95
 5634 021c FFF7FEFF 		bl	VXISI2CWrite
 5635              	.LVL790:
3603:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);
 5636              		.loc 1 3603 0
 5637 0220 4320     		movs	r0, #67
 5638 0222 3721     		movs	r1, #55
 5639 0224 FFF7FEFF 		bl	VXISI2CWrite
 5640              	.LVL791:
3604:Src/main.c    **** 	VXISI2CWrite(0x45,0x00);
 5641              		.loc 1 3604 0
 5642 0228 4420     		movs	r0, #68
 5643 022a 1421     		movs	r1, #20
 5644 022c FFF7FEFF 		bl	VXISI2CWrite
 5645              	.LVL792:
3605:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);
 5646              		.loc 1 3605 0
 5647 0230 4520     		movs	r0, #69
 5648 0232 0021     		movs	r1, #0
 5649 0234 FFF7FEFF 		bl	VXISI2CWrite
 5650              	.LVL793:
3606:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);
 5651              		.loc 1 3606 0
ARM GAS  /tmp/ccxsI2YD.s 			page 191


 5652 0238 4620     		movs	r0, #70
 5653 023a 0021     		movs	r1, #0
 5654 023c FFF7FEFF 		bl	VXISI2CWrite
 5655              	.LVL794:
3607:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);
 5656              		.loc 1 3607 0
 5657 0240 4720     		movs	r0, #71
 5658 0242 0021     		movs	r1, #0
 5659 0244 FFF7FEFF 		bl	VXISI2CWrite
 5660              	.LVL795:
3608:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);
 5661              		.loc 1 3608 0
 5662 0248 4820     		movs	r0, #72
 5663 024a 0021     		movs	r1, #0
 5664 024c FFF7FEFF 		bl	VXISI2CWrite
 5665              	.LVL796:
3609:Src/main.c    **** 	VXISI2CWrite(0x4A,0x00);
 5666              		.loc 1 3609 0
 5667 0250 4920     		movs	r0, #73
 5668 0252 0021     		movs	r1, #0
 5669 0254 FFF7FEFF 		bl	VXISI2CWrite
 5670              	.LVL797:
3610:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);
 5671              		.loc 1 3610 0
 5672 0258 4A20     		movs	r0, #74
 5673 025a 0021     		movs	r1, #0
 5674 025c FFF7FEFF 		bl	VXISI2CWrite
 5675              	.LVL798:
3611:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);
 5676              		.loc 1 3611 0
 5677 0260 4B20     		movs	r0, #75
 5678 0262 2021     		movs	r1, #32
 5679 0264 FFF7FEFF 		bl	VXISI2CWrite
 5680              	.LVL799:
3612:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);
 5681              		.loc 1 3612 0
 5682 0268 4C20     		movs	r0, #76
 5683 026a 0021     		movs	r1, #0
 5684 026c FFF7FEFF 		bl	VXISI2CWrite
 5685              	.LVL800:
3613:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);
 5686              		.loc 1 3613 0
 5687 0270 4D20     		movs	r0, #77
 5688 0272 0021     		movs	r1, #0
 5689 0274 FFF7FEFF 		bl	VXISI2CWrite
 5690              	.LVL801:
3614:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);
 5691              		.loc 1 3614 0
 5692 0278 4E20     		movs	r0, #78
 5693 027a 0021     		movs	r1, #0
 5694 027c FFF7FEFF 		bl	VXISI2CWrite
 5695              	.LVL802:
3615:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);
 5696              		.loc 1 3615 0
 5697 0280 4F20     		movs	r0, #79
 5698 0282 7F21     		movs	r1, #127
 5699 0284 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccxsI2YD.s 			page 192


 5700              	.LVL803:
3616:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);
 5701              		.loc 1 3616 0
 5702 0288 5020     		movs	r0, #80
 5703 028a 2021     		movs	r1, #32
 5704 028c FFF7FEFF 		bl	VXISI2CWrite
 5705              	.LVL804:
3617:Src/main.c    **** 	VXISI2CWrite(0x52,0xA4);
 5706              		.loc 1 3617 0
 5707 0290 5120     		movs	r0, #81
 5708 0292 0021     		movs	r1, #0
 5709 0294 FFF7FEFF 		bl	VXISI2CWrite
 5710              	.LVL805:
3618:Src/main.c    **** 	VXISI2CWrite(0x53,0xC0);
 5711              		.loc 1 3618 0
 5712 0298 5220     		movs	r0, #82
 5713 029a A421     		movs	r1, #164
 5714 029c FFF7FEFF 		bl	VXISI2CWrite
 5715              	.LVL806:
3619:Src/main.c    **** 	VXISI2CWrite(0x54,0x42);
 5716              		.loc 1 3619 0
 5717 02a0 5320     		movs	r0, #83
 5718 02a2 C021     		movs	r1, #192
 5719 02a4 FFF7FEFF 		bl	VXISI2CWrite
 5720              	.LVL807:
3620:Src/main.c    **** 	VXISI2CWrite(0x55,0x60);
 5721              		.loc 1 3620 0
 5722 02a8 5420     		movs	r0, #84
 5723 02aa 4221     		movs	r1, #66
 5724 02ac FFF7FEFF 		bl	VXISI2CWrite
 5725              	.LVL808:
3621:Src/main.c    **** 	VXISI2CWrite(0x56,0x5C);
 5726              		.loc 1 3621 0
 5727 02b0 5520     		movs	r0, #85
 5728 02b2 6021     		movs	r1, #96
 5729 02b4 FFF7FEFF 		bl	VXISI2CWrite
 5730              	.LVL809:
3622:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);
 5731              		.loc 1 3622 0
 5732 02b8 5620     		movs	r0, #86
 5733 02ba 5C21     		movs	r1, #92
 5734 02bc FFF7FEFF 		bl	VXISI2CWrite
 5735              	.LVL810:
3623:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);
 5736              		.loc 1 3623 0
 5737 02c0 5720     		movs	r0, #87
 5738 02c2 0421     		movs	r1, #4
 5739 02c4 FFF7FEFF 		bl	VXISI2CWrite
 5740              	.LVL811:
3624:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);
 5741              		.loc 1 3624 0
 5742 02c8 5820     		movs	r0, #88
 5743 02ca 0021     		movs	r1, #0
 5744 02cc FFF7FEFF 		bl	VXISI2CWrite
 5745              	.LVL812:
3625:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);
 5746              		.loc 1 3625 0
ARM GAS  /tmp/ccxsI2YD.s 			page 193


 5747 02d0 5920     		movs	r0, #89
 5748 02d2 0821     		movs	r1, #8
 5749 02d4 FFF7FEFF 		bl	VXISI2CWrite
 5750              	.LVL813:
3626:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);
 5751              		.loc 1 3626 0
 5752 02d8 5A20     		movs	r0, #90
 5753 02da 1021     		movs	r1, #16
 5754 02dc FFF7FEFF 		bl	VXISI2CWrite
 5755              	.LVL814:
3627:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);
 5756              		.loc 1 3627 0
 5757 02e0 5B20     		movs	r0, #91
 5758 02e2 0021     		movs	r1, #0
 5759 02e4 FFF7FEFF 		bl	VXISI2CWrite
 5760              	.LVL815:
3628:Src/main.c    **** 	VXISI2CWrite(0x5D,0xA8);
 5761              		.loc 1 3628 0
 5762 02e8 5C20     		movs	r0, #92
 5763 02ea 6821     		movs	r1, #104
 5764 02ec FFF7FEFF 		bl	VXISI2CWrite
 5765              	.LVL816:
3629:Src/main.c    **** 	VXISI2CWrite(0x5E,0xC0);
 5766              		.loc 1 3629 0
 5767 02f0 5D20     		movs	r0, #93
 5768 02f2 A821     		movs	r1, #168
 5769 02f4 FFF7FEFF 		bl	VXISI2CWrite
 5770              	.LVL817:
3630:Src/main.c    **** 	VXISI2CWrite(0x5F,0x53);
 5771              		.loc 1 3630 0
 5772 02f8 5E20     		movs	r0, #94
 5773 02fa C021     		movs	r1, #192
 5774 02fc FFF7FEFF 		bl	VXISI2CWrite
 5775              	.LVL818:
3631:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);
 5776              		.loc 1 3631 0
 5777 0300 5F20     		movs	r0, #95
 5778 0302 5321     		movs	r1, #83
 5779 0304 FFF7FEFF 		bl	VXISI2CWrite
 5780              	.LVL819:
3632:Src/main.c    **** 	VXISI2CWrite(0x61,0xCC);
 5781              		.loc 1 3632 0
 5782 0308 6020     		movs	r0, #96
 5783 030a E021     		movs	r1, #224
 5784 030c FFF7FEFF 		bl	VXISI2CWrite
 5785              	.LVL820:
3633:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);
 5786              		.loc 1 3633 0
 5787 0310 6120     		movs	r0, #97
 5788 0312 CC21     		movs	r1, #204
 5789 0314 FFF7FEFF 		bl	VXISI2CWrite
 5790              	.LVL821:
3634:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);
 5791              		.loc 1 3634 0
 5792 0318 6220     		movs	r0, #98
 5793 031a 3321     		movs	r1, #51
 5794 031c FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccxsI2YD.s 			page 194


 5795              	.LVL822:
3635:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);
 5796              		.loc 1 3635 0
 5797 0320 6320     		movs	r0, #99
 5798 0322 0121     		movs	r1, #1
 5799 0324 FFF7FEFF 		bl	VXISI2CWrite
 5800              	.LVL823:
3636:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);
 5801              		.loc 1 3636 0
 5802 0328 6420     		movs	r0, #100
 5803 032a FF21     		movs	r1, #255
 5804 032c FFF7FEFF 		bl	VXISI2CWrite
 5805              	.LVL824:
3637:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);
 5806              		.loc 1 3637 0
 5807 0330 6520     		movs	r0, #101
 5808 0332 0121     		movs	r1, #1
 5809 0334 FFF7FEFF 		bl	VXISI2CWrite
 5810              	.LVL825:
3638:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);
 5811              		.loc 1 3638 0
 5812 0338 6620     		movs	r0, #102
 5813 033a FF21     		movs	r1, #255
 5814 033c FFF7FEFF 		bl	VXISI2CWrite
 5815              	.LVL826:
3639:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);
 5816              		.loc 1 3639 0
 5817 0340 6720     		movs	r0, #103
 5818 0342 8921     		movs	r1, #137
 5819 0344 FFF7FEFF 		bl	VXISI2CWrite
 5820              	.LVL827:
3640:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);
 5821              		.loc 1 3640 0
 5822 0348 6820     		movs	r0, #104
 5823 034a AB21     		movs	r1, #171
 5824 034c FFF7FEFF 		bl	VXISI2CWrite
 5825              	.LVL828:
3641:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);
 5826              		.loc 1 3641 0
 5827 0350 6920     		movs	r0, #105
 5828 0352 8821     		movs	r1, #136
 5829 0354 FFF7FEFF 		bl	VXISI2CWrite
 5830              	.LVL829:
3642:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);
 5831              		.loc 1 3642 0
 5832 0358 6A20     		movs	r0, #106
 5833 035a 6E21     		movs	r1, #110
 5834 035c FFF7FEFF 		bl	VXISI2CWrite
 5835              	.LVL830:
3643:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);
 5836              		.loc 1 3643 0
 5837 0360 6B20     		movs	r0, #107
 5838 0362 6E21     		movs	r1, #110
 5839 0364 FFF7FEFF 		bl	VXISI2CWrite
 5840              	.LVL831:
3644:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);
 5841              		.loc 1 3644 0
ARM GAS  /tmp/ccxsI2YD.s 			page 195


 5842 0368 6C20     		movs	r0, #108
 5843 036a 6E21     		movs	r1, #110
 5844 036c FFF7FEFF 		bl	VXISI2CWrite
 5845              	.LVL832:
3645:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);
 5846              		.loc 1 3645 0
 5847 0370 6D20     		movs	r0, #109
 5848 0372 0021     		movs	r1, #0
 5849 0374 FFF7FEFF 		bl	VXISI2CWrite
 5850              	.LVL833:
3646:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);
 5851              		.loc 1 3646 0
 5852 0378 6E20     		movs	r0, #110
 5853 037a 0021     		movs	r1, #0
 5854 037c FFF7FEFF 		bl	VXISI2CWrite
 5855              	.LVL834:
3647:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);
 5856              		.loc 1 3647 0
 5857 0380 6F20     		movs	r0, #111
 5858 0382 0021     		movs	r1, #0
 5859 0384 FFF7FEFF 		bl	VXISI2CWrite
 5860              	.LVL835:
3648:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);
 5861              		.loc 1 3648 0
 5862 0388 7020     		movs	r0, #112
 5863 038a 0021     		movs	r1, #0
 5864 038c FFF7FEFF 		bl	VXISI2CWrite
 5865              	.LVL836:
3649:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);
 5866              		.loc 1 3649 0
 5867 0390 7120     		movs	r0, #113
 5868 0392 0021     		movs	r1, #0
 5869 0394 FFF7FEFF 		bl	VXISI2CWrite
 5870              	.LVL837:
3650:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);
 5871              		.loc 1 3650 0
 5872 0398 7220     		movs	r0, #114
 5873 039a 0021     		movs	r1, #0
 5874 039c FFF7FEFF 		bl	VXISI2CWrite
 5875              	.LVL838:
3651:Src/main.c    **** 	VXISI2CWrite(0x74,0x06);
 5876              		.loc 1 3651 0
 5877 03a0 7320     		movs	r0, #115
 5878 03a2 0021     		movs	r1, #0
 5879 03a4 FFF7FEFF 		bl	VXISI2CWrite
 5880              	.LVL839:
3652:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);
 5881              		.loc 1 3652 0
 5882 03a8 7420     		movs	r0, #116
 5883 03aa 0621     		movs	r1, #6
 5884 03ac FFF7FEFF 		bl	VXISI2CWrite
 5885              	.LVL840:
3653:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);
 5886              		.loc 1 3653 0
 5887 03b0 7520     		movs	r0, #117
 5888 03b2 FF21     		movs	r1, #255
 5889 03b4 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccxsI2YD.s 			page 196


 5890              	.LVL841:
3654:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);
 5891              		.loc 1 3654 0
 5892 03b8 7620     		movs	r0, #118
 5893 03ba FF21     		movs	r1, #255
 5894 03bc FFF7FEFF 		bl	VXISI2CWrite
 5895              	.LVL842:
3655:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);
 5896              		.loc 1 3655 0
 5897 03c0 7720     		movs	r0, #119
 5898 03c2 FF21     		movs	r1, #255
 5899 03c4 FFF7FEFF 		bl	VXISI2CWrite
 5900              	.LVL843:
3656:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);
 5901              		.loc 1 3656 0
 5902 03c8 7820     		movs	r0, #120
 5903 03ca FF21     		movs	r1, #255
 5904 03cc FFF7FEFF 		bl	VXISI2CWrite
 5905              	.LVL844:
3657:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);
 5906              		.loc 1 3657 0
 5907 03d0 7920     		movs	r0, #121
 5908 03d2 FF21     		movs	r1, #255
 5909 03d4 FFF7FEFF 		bl	VXISI2CWrite
 5910              	.LVL845:
3658:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);
 5911              		.loc 1 3658 0
 5912 03d8 7A20     		movs	r0, #122
 5913 03da FF21     		movs	r1, #255
 5914 03dc FFF7FEFF 		bl	VXISI2CWrite
 5915              	.LVL846:
3659:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);
 5916              		.loc 1 3659 0
 5917 03e0 7B20     		movs	r0, #123
 5918 03e2 FF21     		movs	r1, #255
 5919 03e4 FFF7FEFF 		bl	VXISI2CWrite
 5920              	.LVL847:
3660:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);
 5921              		.loc 1 3660 0
 5922 03e8 7C20     		movs	r0, #124
 5923 03ea FF21     		movs	r1, #255
 5924 03ec FFF7FEFF 		bl	VXISI2CWrite
 5925              	.LVL848:
3661:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);
 5926              		.loc 1 3661 0
 5927 03f0 7D20     		movs	r0, #125
 5928 03f2 F021     		movs	r1, #240
 5929 03f4 FFF7FEFF 		bl	VXISI2CWrite
 5930              	.LVL849:
 5931 03f8 02E0     		b	.L188
 5932              	.L189:
 5933 03fa 00BF     		.align	2
 5934              	.L187:
 5935 03fc AC030000 		.word	.LC37
 5936              	.L188:
3662:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);
 5937              		.loc 1 3662 0
ARM GAS  /tmp/ccxsI2YD.s 			page 197


 5938 0400 7E20     		movs	r0, #126
 5939 0402 8021     		movs	r1, #128
 5940 0404 FFF7FEFF 		bl	VXISI2CWrite
 5941              	.LVL850:
3663:Src/main.c    **** 	VXISI2CWrite(0x80,0x01);
 5942              		.loc 1 3663 0
 5943 0408 7F20     		movs	r0, #127
 5944 040a 0021     		movs	r1, #0
 5945 040c FFF7FEFF 		bl	VXISI2CWrite
 5946              	.LVL851:
3664:Src/main.c    **** 	VXISI2CWrite(0x81,0x15);
 5947              		.loc 1 3664 0
 5948 0410 8020     		movs	r0, #128
 5949 0412 0121     		movs	r1, #1
 5950 0414 FFF7FEFF 		bl	VXISI2CWrite
 5951              	.LVL852:
3665:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);
 5952              		.loc 1 3665 0
 5953 0418 8120     		movs	r0, #129
 5954 041a 1521     		movs	r1, #21
 5955 041c FFF7FEFF 		bl	VXISI2CWrite
 5956              	.LVL853:
3666:Src/main.c    **** 	VXISI2CWrite(0x83,0x2D);
 5957              		.loc 1 3666 0
 5958 0420 8220     		movs	r0, #130
 5959 0422 4021     		movs	r1, #64
 5960 0424 FFF7FEFF 		bl	VXISI2CWrite
 5961              	.LVL854:
3667:Src/main.c    **** 	VXISI2CWrite(0x84,0x57);
 5962              		.loc 1 3667 0
 5963 0428 8320     		movs	r0, #131
 5964 042a 2D21     		movs	r1, #45
 5965 042c FFF7FEFF 		bl	VXISI2CWrite
 5966              	.LVL855:
3668:Src/main.c    **** 	VXISI2CWrite(0x85,0xFD);
 5967              		.loc 1 3668 0
 5968 0430 8420     		movs	r0, #132
 5969 0432 5721     		movs	r1, #87
 5970 0434 FFF7FEFF 		bl	VXISI2CWrite
 5971              	.LVL856:
3669:Src/main.c    **** 	VXISI2CWrite(0x86,0x00);
 5972              		.loc 1 3669 0
 5973 0438 8520     		movs	r0, #133
 5974 043a FD21     		movs	r1, #253
 5975 043c FFF7FEFF 		bl	VXISI2CWrite
 5976              	.LVL857:
3670:Src/main.c    **** 	VXISI2CWrite(0x87,0x00);
 5977              		.loc 1 3670 0
 5978 0440 8620     		movs	r0, #134
 5979 0442 0021     		movs	r1, #0
 5980 0444 FFF7FEFF 		bl	VXISI2CWrite
 5981              	.LVL858:
3671:Src/main.c    **** 	VXISI2CWrite(0x88,0x00);
 5982              		.loc 1 3671 0
 5983 0448 8720     		movs	r0, #135
 5984 044a 0021     		movs	r1, #0
 5985 044c FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccxsI2YD.s 			page 198


 5986              	.LVL859:
3672:Src/main.c    **** 	VXISI2CWrite(0x89,0x00);
 5987              		.loc 1 3672 0
 5988 0450 8820     		movs	r0, #136
 5989 0452 0021     		movs	r1, #0
 5990 0454 FFF7FEFF 		bl	VXISI2CWrite
 5991              	.LVL860:
3673:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);
 5992              		.loc 1 3673 0
 5993 0458 8920     		movs	r0, #137
 5994 045a 0021     		movs	r1, #0
 5995 045c FFF7FEFF 		bl	VXISI2CWrite
 5996              	.LVL861:
3674:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);
 5997              		.loc 1 3674 0
 5998 0460 8A20     		movs	r0, #138
 5999 0462 0021     		movs	r1, #0
 6000 0464 FFF7FEFF 		bl	VXISI2CWrite
 6001              	.LVL862:
3675:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);
 6002              		.loc 1 3675 0
 6003 0468 8B20     		movs	r0, #139
 6004 046a 7E21     		movs	r1, #126
 6005 046c FFF7FEFF 		bl	VXISI2CWrite
 6006              	.LVL863:
3676:Src/main.c    **** 	VXISI2CWrite(0x8D,0x17);
 6007              		.loc 1 3676 0
 6008 0470 8C20     		movs	r0, #140
 6009 0472 0321     		movs	r1, #3
 6010 0474 FFF7FEFF 		bl	VXISI2CWrite
 6011              	.LVL864:
3677:Src/main.c    **** 	VXISI2CWrite(0x8E,0x8C);
 6012              		.loc 1 3677 0
 6013 0478 8D20     		movs	r0, #141
 6014 047a 1721     		movs	r1, #23
 6015 047c FFF7FEFF 		bl	VXISI2CWrite
 6016              	.LVL865:
3678:Src/main.c    **** 	VXISI2CWrite(0x8F,0x00);
 6017              		.loc 1 3678 0
 6018 0480 8E20     		movs	r0, #142
 6019 0482 8C21     		movs	r1, #140
 6020 0484 FFF7FEFF 		bl	VXISI2CWrite
 6021              	.LVL866:
3679:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);
 6022              		.loc 1 3679 0
 6023 0488 8F20     		movs	r0, #143
 6024 048a 0021     		movs	r1, #0
 6025 048c FFF7FEFF 		bl	VXISI2CWrite
 6026              	.LVL867:
3680:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);
 6027              		.loc 1 3680 0
 6028 0490 9020     		movs	r0, #144
 6029 0492 CC21     		movs	r1, #204
 6030 0494 FFF7FEFF 		bl	VXISI2CWrite
 6031              	.LVL868:
3681:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);
 6032              		.loc 1 3681 0
ARM GAS  /tmp/ccxsI2YD.s 			page 199


 6033 0498 9120     		movs	r0, #145
 6034 049a 4121     		movs	r1, #65
 6035 049c FFF7FEFF 		bl	VXISI2CWrite
 6036              	.LVL869:
3682:Src/main.c    **** 	VXISI2CWrite(0x93,0x84);
 6037              		.loc 1 3682 0
 6038 04a0 9220     		movs	r0, #146
 6039 04a2 C421     		movs	r1, #196
 6040 04a4 FFF7FEFF 		bl	VXISI2CWrite
 6041              	.LVL870:
3683:Src/main.c    **** 	VXISI2CWrite(0x94,0x98);
 6042              		.loc 1 3683 0
 6043 04a8 9320     		movs	r0, #147
 6044 04aa 8421     		movs	r1, #132
 6045 04ac FFF7FEFF 		bl	VXISI2CWrite
 6046              	.LVL871:
3684:Src/main.c    **** 	VXISI2CWrite(0x95,0x80);
 6047              		.loc 1 3684 0
 6048 04b0 9420     		movs	r0, #148
 6049 04b2 9821     		movs	r1, #152
 6050 04b4 FFF7FEFF 		bl	VXISI2CWrite
 6051              	.LVL872:
3685:Src/main.c    **** 	VXISI2CWrite(0x96,0x65);
 6052              		.loc 1 3685 0
 6053 04b8 9520     		movs	r0, #149
 6054 04ba 8021     		movs	r1, #128
 6055 04bc FFF7FEFF 		bl	VXISI2CWrite
 6056              	.LVL873:
3686:Src/main.c    **** 	VXISI2CWrite(0x97,0x70);
 6057              		.loc 1 3686 0
 6058 04c0 9620     		movs	r0, #150
 6059 04c2 6521     		movs	r1, #101
 6060 04c4 FFF7FEFF 		bl	VXISI2CWrite
 6061              	.LVL874:
3687:Src/main.c    **** 	VXISI2CWrite(0x98,0x29);
 6062              		.loc 1 3687 0
 6063 04c8 9720     		movs	r0, #151
 6064 04ca 7021     		movs	r1, #112
 6065 04cc FFF7FEFF 		bl	VXISI2CWrite
 6066              	.LVL875:
3688:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);
 6067              		.loc 1 3688 0
 6068 04d0 9820     		movs	r0, #152
 6069 04d2 2921     		movs	r1, #41
 6070 04d4 FFF7FEFF 		bl	VXISI2CWrite
 6071              	.LVL876:
3689:Src/main.c    **** 	VXISI2CWrite(0x9A,0x00);
 6072              		.loc 1 3689 0
 6073 04d8 9920     		movs	r0, #153
 6074 04da 9021     		movs	r1, #144
 6075 04dc FFF7FEFF 		bl	VXISI2CWrite
 6076              	.LVL877:
3690:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);
 6077              		.loc 1 3690 0
 6078 04e0 9A20     		movs	r0, #154
 6079 04e2 0021     		movs	r1, #0
 6080 04e4 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccxsI2YD.s 			page 200


 6081              	.LVL878:
3691:Src/main.c    **** 	VXISI2CWrite(0x9C,0x00);
 6082              		.loc 1 3691 0
 6083 04e8 9B20     		movs	r0, #155
 6084 04ea 0421     		movs	r1, #4
 6085 04ec FFF7FEFF 		bl	VXISI2CWrite
 6086              	.LVL879:
3692:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);
 6087              		.loc 1 3692 0
 6088 04f0 9C20     		movs	r0, #156
 6089 04f2 0021     		movs	r1, #0
 6090 04f4 FFF7FEFF 		bl	VXISI2CWrite
 6091              	.LVL880:
3693:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);
 6092              		.loc 1 3693 0
 6093 04f8 9D20     		movs	r0, #157
 6094 04fa 0021     		movs	r1, #0
 6095 04fc FFF7FEFF 		bl	VXISI2CWrite
 6096              	.LVL881:
3694:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);
 6097              		.loc 1 3694 0
 6098 0500 9E20     		movs	r0, #158
 6099 0502 0421     		movs	r1, #4
 6100 0504 FFF7FEFF 		bl	VXISI2CWrite
 6101              	.LVL882:
3695:Src/main.c    **** 	VXISI2CWrite(0xA0,0x80);
 6102              		.loc 1 3695 0
 6103 0508 9F20     		movs	r0, #159
 6104 050a 6521     		movs	r1, #101
 6105 050c FFF7FEFF 		bl	VXISI2CWrite
 6106              	.LVL883:
3696:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD8);
 6107              		.loc 1 3696 0
 6108 0510 A020     		movs	r0, #160
 6109 0512 8021     		movs	r1, #128
 6110 0514 FFF7FEFF 		bl	VXISI2CWrite
 6111              	.LVL884:
3697:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);
 6112              		.loc 1 3697 0
 6113 0518 A120     		movs	r0, #161
 6114 051a D821     		movs	r1, #216
 6115 051c FFF7FEFF 		bl	VXISI2CWrite
 6116              	.LVL885:
3698:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);
 6117              		.loc 1 3698 0
 6118 0520 A220     		movs	r0, #162
 6119 0522 9821     		movs	r1, #152
 6120 0524 FFF7FEFF 		bl	VXISI2CWrite
 6121              	.LVL886:
3699:Src/main.c    **** 	VXISI2CWrite(0xA4,0x00);
 6122              		.loc 1 3699 0
 6123 0528 A320     		movs	r0, #163
 6124 052a 8721     		movs	r1, #135
 6125 052c FFF7FEFF 		bl	VXISI2CWrite
 6126              	.LVL887:
3700:Src/main.c    **** 	VXISI2CWrite(0xA5,0x80);
 6127              		.loc 1 3700 0
ARM GAS  /tmp/ccxsI2YD.s 			page 201


 6128 0530 A420     		movs	r0, #164
 6129 0532 0021     		movs	r1, #0
 6130 0534 FFF7FEFF 		bl	VXISI2CWrite
 6131              	.LVL888:
3701:Src/main.c    **** 	VXISI2CWrite(0xA6,0x00);
 6132              		.loc 1 3701 0
 6133 0538 A520     		movs	r0, #165
 6134 053a 8021     		movs	r1, #128
 6135 053c FFF7FEFF 		bl	VXISI2CWrite
 6136              	.LVL889:
3702:Src/main.c    **** 	VXISI2CWrite(0xA7,0x70);
 6137              		.loc 1 3702 0
 6138 0540 A620     		movs	r0, #166
 6139 0542 0021     		movs	r1, #0
 6140 0544 FFF7FEFF 		bl	VXISI2CWrite
 6141              	.LVL890:
3703:Src/main.c    **** 	VXISI2CWrite(0xA8,0x40);
 6142              		.loc 1 3703 0
 6143 0548 A720     		movs	r0, #167
 6144 054a 7021     		movs	r1, #112
 6145 054c FFF7FEFF 		bl	VXISI2CWrite
 6146              	.LVL891:
3704:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);
 6147              		.loc 1 3704 0
 6148 0550 A820     		movs	r0, #168
 6149 0552 4021     		movs	r1, #64
 6150 0554 FFF7FEFF 		bl	VXISI2CWrite
 6151              	.LVL892:
3705:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2C);
 6152              		.loc 1 3705 0
 6153 0558 A920     		movs	r0, #169
 6154 055a 1E21     		movs	r1, #30
 6155 055c FFF7FEFF 		bl	VXISI2CWrite
 6156              	.LVL893:
3706:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);
 6157              		.loc 1 3706 0
 6158 0560 AA20     		movs	r0, #170
 6159 0562 2C21     		movs	r1, #44
 6160 0564 FFF7FEFF 		bl	VXISI2CWrite
 6161              	.LVL894:
3707:Src/main.c    **** 	VXISI2CWrite(0xAC,0x90);
 6162              		.loc 1 3707 0
 6163 0568 AB20     		movs	r0, #171
 6164 056a 0021     		movs	r1, #0
 6165 056c FFF7FEFF 		bl	VXISI2CWrite
 6166              	.LVL895:
3708:Src/main.c    **** 	VXISI2CWrite(0xAD,0x65);
 6167              		.loc 1 3708 0
 6168 0570 AC20     		movs	r0, #172
 6169 0572 9021     		movs	r1, #144
 6170 0574 FFF7FEFF 		bl	VXISI2CWrite
 6171              	.LVL896:
3709:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);
 6172              		.loc 1 3709 0
 6173 0578 AD20     		movs	r0, #173
 6174 057a 6521     		movs	r1, #101
 6175 057c FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccxsI2YD.s 			page 202


 6176              	.LVL897:
3710:Src/main.c    **** 	VXISI2CWrite(0xAF,0x99);
 6177              		.loc 1 3710 0
 6178 0580 AE20     		movs	r0, #174
 6179 0582 6521     		movs	r1, #101
 6180 0584 FFF7FEFF 		bl	VXISI2CWrite
 6181              	.LVL898:
3711:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);
 6182              		.loc 1 3711 0
 6183 0588 AF20     		movs	r0, #175
 6184 058a 9921     		movs	r1, #153
 6185 058c FFF7FEFF 		bl	VXISI2CWrite
 6186              	.LVL899:
3712:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);
 6187              		.loc 1 3712 0
 6188 0590 B020     		movs	r0, #176
 6189 0592 0021     		movs	r1, #0
 6190 0594 FFF7FEFF 		bl	VXISI2CWrite
 6191              	.LVL900:
3713:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);
 6192              		.loc 1 3713 0
 6193 0598 B120     		movs	r0, #177
 6194 059a 0021     		movs	r1, #0
 6195 059c FFF7FEFF 		bl	VXISI2CWrite
 6196              	.LVL901:
3714:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);
 6197              		.loc 1 3714 0
 6198 05a0 B220     		movs	r0, #178
 6199 05a2 0021     		movs	r1, #0
 6200 05a4 FFF7FEFF 		bl	VXISI2CWrite
 6201              	.LVL902:
3715:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);
 6202              		.loc 1 3715 0
 6203 05a8 B320     		movs	r0, #179
 6204 05aa 0021     		movs	r1, #0
 6205 05ac FFF7FEFF 		bl	VXISI2CWrite
 6206              	.LVL903:
3716:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);
 6207              		.loc 1 3716 0
 6208 05b0 B420     		movs	r0, #180
 6209 05b2 0021     		movs	r1, #0
 6210 05b4 FFF7FEFF 		bl	VXISI2CWrite
 6211              	.LVL904:
3717:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);
 6212              		.loc 1 3717 0
 6213 05b8 B520     		movs	r0, #181
 6214 05ba 0021     		movs	r1, #0
 6215 05bc FFF7FEFF 		bl	VXISI2CWrite
 6216              	.LVL905:
3718:Src/main.c    **** 	VXISI2CWrite(0xB7,0x00);
 6217              		.loc 1 3718 0
 6218 05c0 B620     		movs	r0, #182
 6219 05c2 0021     		movs	r1, #0
 6220 05c4 FFF7FEFF 		bl	VXISI2CWrite
 6221              	.LVL906:
3719:Src/main.c    **** 	VXISI2CWrite(0xB8,0x80);
 6222              		.loc 1 3719 0
ARM GAS  /tmp/ccxsI2YD.s 			page 203


 6223 05c8 B720     		movs	r0, #183
 6224 05ca 0021     		movs	r1, #0
 6225 05cc FFF7FEFF 		bl	VXISI2CWrite
 6226              	.LVL907:
3720:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);
 6227              		.loc 1 3720 0
 6228 05d0 B820     		movs	r0, #184
 6229 05d2 8021     		movs	r1, #128
 6230 05d4 FFF7FEFF 		bl	VXISI2CWrite
 6231              	.LVL908:
3721:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);
 6232              		.loc 1 3721 0
 6233 05d8 B920     		movs	r0, #185
 6234 05da 0021     		movs	r1, #0
 6235 05dc FFF7FEFF 		bl	VXISI2CWrite
 6236              	.LVL909:
3722:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);
 6237              		.loc 1 3722 0
 6238 05e0 BA20     		movs	r0, #186
 6239 05e2 0121     		movs	r1, #1
 6240 05e4 FFF7FEFF 		bl	VXISI2CWrite
 6241              	.LVL910:
3723:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);
 6242              		.loc 1 3723 0
 6243 05e8 BB20     		movs	r0, #187
 6244 05ea 0021     		movs	r1, #0
 6245 05ec FFF7FEFF 		bl	VXISI2CWrite
 6246              	.LVL911:
3724:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);
 6247              		.loc 1 3724 0
 6248 05f0 BC20     		movs	r0, #188
 6249 05f2 9021     		movs	r1, #144
 6250 05f4 FFF7FEFF 		bl	VXISI2CWrite
 6251              	.LVL912:
3725:Src/main.c    **** 	VXISI2CWrite(0xBE,0x2C);
 6252              		.loc 1 3725 0
 6253 05f8 BD20     		movs	r0, #189
 6254 05fa 0121     		movs	r1, #1
 6255 05fc FFF7FEFF 		bl	VXISI2CWrite
 6256              	.LVL913:
3726:Src/main.c    **** 	VXISI2CWrite(0xBF,0x00);
 6257              		.loc 1 3726 0
 6258 0600 BE20     		movs	r0, #190
 6259 0602 2C21     		movs	r1, #44
 6260 0604 FFF7FEFF 		bl	VXISI2CWrite
 6261              	.LVL914:
3727:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);
 6262              		.loc 1 3727 0
 6263 0608 BF20     		movs	r0, #191
 6264 060a 0021     		movs	r1, #0
 6265 060c FFF7FEFF 		bl	VXISI2CWrite
 6266              	.LVL915:
3728:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);
 6267              		.loc 1 3728 0
 6268 0610 C020     		movs	r0, #192
 6269 0612 0021     		movs	r1, #0
 6270 0614 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccxsI2YD.s 			page 204


 6271              	.LVL916:
3729:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);
 6272              		.loc 1 3729 0
 6273 0618 C120     		movs	r0, #193
 6274 061a 2021     		movs	r1, #32
 6275 061c FFF7FEFF 		bl	VXISI2CWrite
 6276              	.LVL917:
3730:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);
 6277              		.loc 1 3730 0
 6278 0620 C220     		movs	r0, #194
 6279 0622 2021     		movs	r1, #32
 6280 0624 FFF7FEFF 		bl	VXISI2CWrite
 6281              	.LVL918:
3731:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);
 6282              		.loc 1 3731 0
 6283 0628 C320     		movs	r0, #195
 6284 062a 2021     		movs	r1, #32
 6285 062c FFF7FEFF 		bl	VXISI2CWrite
 6286              	.LVL919:
3732:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);
 6287              		.loc 1 3732 0
 6288 0630 C420     		movs	r0, #196
 6289 0632 2021     		movs	r1, #32
 6290 0634 FFF7FEFF 		bl	VXISI2CWrite
 6291              	.LVL920:
3733:Src/main.c    **** 	VXISI2CWrite(0xC6,0x00);
 6292              		.loc 1 3733 0
 6293 0638 C520     		movs	r0, #197
 6294 063a 2021     		movs	r1, #32
 6295 063c FFF7FEFF 		bl	VXISI2CWrite
 6296              	.LVL921:
3734:Src/main.c    **** 	VXISI2CWrite(0xC7,0x00);
 6297              		.loc 1 3734 0
 6298 0640 C620     		movs	r0, #198
 6299 0642 0021     		movs	r1, #0
 6300 0644 FFF7FEFF 		bl	VXISI2CWrite
 6301              	.LVL922:
3735:Src/main.c    **** 	VXISI2CWrite(0xC8,0x00);
 6302              		.loc 1 3735 0
 6303 0648 C720     		movs	r0, #199
 6304 064a 0021     		movs	r1, #0
 6305 064c FFF7FEFF 		bl	VXISI2CWrite
 6306              	.LVL923:
3736:Src/main.c    **** 	VXISI2CWrite(0xC9,0x00);
 6307              		.loc 1 3736 0
 6308 0650 C820     		movs	r0, #200
 6309 0652 0021     		movs	r1, #0
 6310 0654 FFF7FEFF 		bl	VXISI2CWrite
 6311              	.LVL924:
3737:Src/main.c    **** 	VXISI2CWrite(0xCA,0x00);
 6312              		.loc 1 3737 0
 6313 0658 C920     		movs	r0, #201
 6314 065a 0021     		movs	r1, #0
 6315 065c FFF7FEFF 		bl	VXISI2CWrite
 6316              	.LVL925:
3738:Src/main.c    **** 	VXISI2CWrite(0xCB,0x00);
 6317              		.loc 1 3738 0
ARM GAS  /tmp/ccxsI2YD.s 			page 205


 6318 0660 CA20     		movs	r0, #202
 6319 0662 0021     		movs	r1, #0
 6320 0664 FFF7FEFF 		bl	VXISI2CWrite
 6321              	.LVL926:
3739:Src/main.c    **** 	VXISI2CWrite(0xCC,0x00);
 6322              		.loc 1 3739 0
 6323 0668 CB20     		movs	r0, #203
 6324 066a 0021     		movs	r1, #0
 6325 066c FFF7FEFF 		bl	VXISI2CWrite
 6326              	.LVL927:
3740:Src/main.c    **** 	VXISI2CWrite(0xCD,0x00);
 6327              		.loc 1 3740 0
 6328 0670 CC20     		movs	r0, #204
 6329 0672 0021     		movs	r1, #0
 6330 0674 FFF7FEFF 		bl	VXISI2CWrite
 6331              	.LVL928:
3741:Src/main.c    **** 	VXISI2CWrite(0xCE,0x00);
 6332              		.loc 1 3741 0
 6333 0678 CD20     		movs	r0, #205
 6334 067a 0021     		movs	r1, #0
 6335 067c FFF7FEFF 		bl	VXISI2CWrite
 6336              	.LVL929:
3742:Src/main.c    **** 	VXISI2CWrite(0xCF,0x00);
 6337              		.loc 1 3742 0
 6338 0680 CE20     		movs	r0, #206
 6339 0682 0021     		movs	r1, #0
 6340 0684 FFF7FEFF 		bl	VXISI2CWrite
 6341              	.LVL930:
3743:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);
 6342              		.loc 1 3743 0
 6343 0688 CF20     		movs	r0, #207
 6344 068a 0021     		movs	r1, #0
 6345 068c FFF7FEFF 		bl	VXISI2CWrite
 6346              	.LVL931:
3744:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);
 6347              		.loc 1 3744 0
 6348 0690 D020     		movs	r0, #208
 6349 0692 FF21     		movs	r1, #255
 6350 0694 FFF7FEFF 		bl	VXISI2CWrite
 6351              	.LVL932:
3745:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);
 6352              		.loc 1 3745 0
 6353 0698 D120     		movs	r0, #209
 6354 069a 3F21     		movs	r1, #63
 6355 069c FFF7FEFF 		bl	VXISI2CWrite
 6356              	.LVL933:
3746:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);
 6357              		.loc 1 3746 0
 6358 06a0 D220     		movs	r0, #210
 6359 06a2 C221     		movs	r1, #194
 6360 06a4 FFF7FEFF 		bl	VXISI2CWrite
 6361              	.LVL934:
3747:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);
 6362              		.loc 1 3747 0
 6363 06a8 D320     		movs	r0, #211
 6364 06aa 3F21     		movs	r1, #63
 6365 06ac FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccxsI2YD.s 			page 206


 6366              	.LVL935:
3748:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);
 6367              		.loc 1 3748 0
 6368 06b0 D420     		movs	r0, #212
 6369 06b2 0021     		movs	r1, #0
 6370 06b4 FFF7FEFF 		bl	VXISI2CWrite
 6371              	.LVL936:
3749:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);
 6372              		.loc 1 3749 0
 6373 06b8 D520     		movs	r0, #213
 6374 06ba 0021     		movs	r1, #0
 6375 06bc FFF7FEFF 		bl	VXISI2CWrite
 6376              	.LVL937:
3750:Src/main.c    **** 	VXISI2CWrite(0xD7,0x0F);
 6377              		.loc 1 3750 0
 6378 06c0 D620     		movs	r0, #214
 6379 06c2 0021     		movs	r1, #0
 6380 06c4 FFF7FEFF 		bl	VXISI2CWrite
 6381              	.LVL938:
3751:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);
 6382              		.loc 1 3751 0
 6383 06c8 D720     		movs	r0, #215
 6384 06ca 0F21     		movs	r1, #15
 6385 06cc FFF7FEFF 		bl	VXISI2CWrite
 6386              	.LVL939:
3752:Src/main.c    **** 	VXISI2CWrite(0xD9,0x00);
 6387              		.loc 1 3752 0
 6388 06d0 D820     		movs	r0, #216
 6389 06d2 0021     		movs	r1, #0
 6390 06d4 FFF7FEFF 		bl	VXISI2CWrite
 6391              	.LVL940:
3753:Src/main.c    **** 	VXISI2CWrite(0xDA,0x00);
 6392              		.loc 1 3753 0
 6393 06d8 D920     		movs	r0, #217
 6394 06da 0021     		movs	r1, #0
 6395 06dc FFF7FEFF 		bl	VXISI2CWrite
 6396              	.LVL941:
3754:Src/main.c    **** 	VXISI2CWrite(0xDB,0x00);
 6397              		.loc 1 3754 0
 6398 06e0 DA20     		movs	r0, #218
 6399 06e2 0021     		movs	r1, #0
 6400 06e4 FFF7FEFF 		bl	VXISI2CWrite
 6401              	.LVL942:
3755:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);
 6402              		.loc 1 3755 0
 6403 06e8 DB20     		movs	r0, #219
 6404 06ea 0021     		movs	r1, #0
 6405 06ec FFF7FEFF 		bl	VXISI2CWrite
 6406              	.LVL943:
3756:Src/main.c    **** 	VXISI2CWrite(0xDD,0x01);
 6407              		.loc 1 3756 0
 6408 06f0 DC20     		movs	r0, #220
 6409 06f2 7721     		movs	r1, #119
 6410 06f4 FFF7FEFF 		bl	VXISI2CWrite
 6411              	.LVL944:
3757:Src/main.c    **** 	VXISI2CWrite(0xDE,0x5F);
 6412              		.loc 1 3757 0
ARM GAS  /tmp/ccxsI2YD.s 			page 207


 6413 06f8 DD20     		movs	r0, #221
 6414 06fa 0121     		movs	r1, #1
 6415 06fc FFF7FEFF 		bl	VXISI2CWrite
 6416              	.LVL945:
3758:Src/main.c    **** 	VXISI2CWrite(0xDF,0x96);
 6417              		.loc 1 3758 0
 6418 0700 DE20     		movs	r0, #222
 6419 0702 5F21     		movs	r1, #95
 6420 0704 FFF7FEFF 		bl	VXISI2CWrite
 6421              	.LVL946:
3759:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);
 6422              		.loc 1 3759 0
 6423 0708 DF20     		movs	r0, #223
 6424 070a 9621     		movs	r1, #150
 6425 070c FFF7FEFF 		bl	VXISI2CWrite
 6426              	.LVL947:
3760:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);
 6427              		.loc 1 3760 0
 6428 0710 E020     		movs	r0, #224
 6429 0712 0021     		movs	r1, #0
 6430 0714 FFF7FEFF 		bl	VXISI2CWrite
 6431              	.LVL948:
3761:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);
 6432              		.loc 1 3761 0
 6433 0718 E120     		movs	r0, #225
 6434 071a 0021     		movs	r1, #0
 6435 071c FFF7FEFF 		bl	VXISI2CWrite
 6436              	.LVL949:
3762:Src/main.c    **** 	VXISI2CWrite(0xE3,0x47);
 6437              		.loc 1 3762 0
 6438 0720 E220     		movs	r0, #226
 6439 0722 0021     		movs	r1, #0
 6440 0724 FFF7FEFF 		bl	VXISI2CWrite
 6441              	.LVL950:
3763:Src/main.c    **** 	VXISI2CWrite(0xE4,0x3C);
 6442              		.loc 1 3763 0
 6443 0728 E320     		movs	r0, #227
 6444 072a 4721     		movs	r1, #71
 6445 072c FFF7FEFF 		bl	VXISI2CWrite
 6446              	.LVL951:
3764:Src/main.c    **** 	VXISI2CWrite(0xE5,0x80);
 6447              		.loc 1 3764 0
 6448 0730 E420     		movs	r0, #228
 6449 0732 3C21     		movs	r1, #60
 6450 0734 FFF7FEFF 		bl	VXISI2CWrite
 6451              	.LVL952:
3765:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);
 6452              		.loc 1 3765 0
 6453 0738 E520     		movs	r0, #229
 6454 073a 8021     		movs	r1, #128
 6455 073c FFF7FEFF 		bl	VXISI2CWrite
 6456              	.LVL953:
3766:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);
 6457              		.loc 1 3766 0
 6458 0740 E620     		movs	r0, #230
 6459 0742 0021     		movs	r1, #0
 6460 0744 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccxsI2YD.s 			page 208


 6461              	.LVL954:
3767:Src/main.c    **** 	VXISI2CWrite(0xE8,0x00);
 6462              		.loc 1 3767 0
 6463 0748 E720     		movs	r0, #231
 6464 074a 0021     		movs	r1, #0
 6465 074c FFF7FEFF 		bl	VXISI2CWrite
 6466              	.LVL955:
3768:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);
 6467              		.loc 1 3768 0
 6468 0750 E820     		movs	r0, #232
 6469 0752 0021     		movs	r1, #0
 6470 0754 FFF7FEFF 		bl	VXISI2CWrite
 6471              	.LVL956:
3769:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);
 6472              		.loc 1 3769 0
 6473 0758 E920     		movs	r0, #233
 6474 075a 0021     		movs	r1, #0
 6475 075c FFF7FEFF 		bl	VXISI2CWrite
 6476              	.LVL957:
3770:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);
 6477              		.loc 1 3770 0
 6478 0760 EA20     		movs	r0, #234
 6479 0762 0021     		movs	r1, #0
 6480 0764 FFF7FEFF 		bl	VXISI2CWrite
 6481              	.LVL958:
3771:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);
 6482              		.loc 1 3771 0
 6483 0768 EB20     		movs	r0, #235
 6484 076a 0021     		movs	r1, #0
 6485 076c FFF7FEFF 		bl	VXISI2CWrite
 6486              	.LVL959:
3772:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);
 6487              		.loc 1 3772 0
 6488 0770 EC20     		movs	r0, #236
 6489 0772 8821     		movs	r1, #136
 6490 0774 FFF7FEFF 		bl	VXISI2CWrite
 6491              	.LVL960:
3773:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);
 6492              		.loc 1 3773 0
 6493 0778 ED20     		movs	r0, #237
 6494 077a 0021     		movs	r1, #0
 6495 077c FFF7FEFF 		bl	VXISI2CWrite
 6496              	.LVL961:
3774:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);
 6497              		.loc 1 3774 0
 6498 0780 EE20     		movs	r0, #238
 6499 0782 0021     		movs	r1, #0
 6500 0784 FFF7FEFF 		bl	VXISI2CWrite
 6501              	.LVL962:
3775:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);
 6502              		.loc 1 3775 0
 6503 0788 EF20     		movs	r0, #239
 6504 078a 0021     		movs	r1, #0
 6505 078c FFF7FEFF 		bl	VXISI2CWrite
 6506              	.LVL963:
3776:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);
 6507              		.loc 1 3776 0
ARM GAS  /tmp/ccxsI2YD.s 			page 209


 6508 0790 F020     		movs	r0, #240
 6509 0792 3021     		movs	r1, #48
 6510 0794 FFF7FEFF 		bl	VXISI2CWrite
 6511              	.LVL964:
3777:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);
 6512              		.loc 1 3777 0
 6513 0798 F120     		movs	r0, #241
 6514 079a 4321     		movs	r1, #67
 6515 079c FFF7FEFF 		bl	VXISI2CWrite
 6516              	.LVL965:
3778:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);
 6517              		.loc 1 3778 0
 6518 07a0 F220     		movs	r0, #242
 6519 07a2 1F21     		movs	r1, #31
 6520 07a4 FFF7FEFF 		bl	VXISI2CWrite
 6521              	.LVL966:
3779:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);
 6522              		.loc 1 3779 0
 6523 07a8 F320     		movs	r0, #243
 6524 07aa 1F21     		movs	r1, #31
 6525 07ac FFF7FEFF 		bl	VXISI2CWrite
 6526              	.LVL967:
3780:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);
 6527              		.loc 1 3780 0
 6528 07b0 F420     		movs	r0, #244
 6529 07b2 2221     		movs	r1, #34
 6530 07b4 FFF7FEFF 		bl	VXISI2CWrite
 6531              	.LVL968:
3781:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);
 6532              		.loc 1 3781 0
 6533 07b8 F520     		movs	r0, #245
 6534 07ba 7321     		movs	r1, #115
 6535 07bc FFF7FEFF 		bl	VXISI2CWrite
 6536              	.LVL969:
3782:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);
 6537              		.loc 1 3782 0
 6538 07c0 F620     		movs	r0, #246
 6539 07c2 5321     		movs	r1, #83
 6540 07c4 FFF7FEFF 		bl	VXISI2CWrite
 6541              	.LVL970:
3783:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);
 6542              		.loc 1 3783 0
 6543 07c8 F720     		movs	r0, #247
 6544 07ca 8021     		movs	r1, #128
 6545 07cc FFF7FEFF 		bl	VXISI2CWrite
 6546              	.LVL971:
3784:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);
 6547              		.loc 1 3784 0
 6548 07d0 F820     		movs	r0, #248
 6549 07d2 0121     		movs	r1, #1
 6550 07d4 FFF7FEFF 		bl	VXISI2CWrite
 6551              	.LVL972:
3785:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);
 6552              		.loc 1 3785 0
 6553 07d8 F920     		movs	r0, #249
 6554 07da 0121     		movs	r1, #1
 6555 07dc FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccxsI2YD.s 			page 210


 6556              	.LVL973:
3786:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);
 6557              		.loc 1 3786 0
 6558 07e0 FA20     		movs	r0, #250
 6559 07e2 0021     		movs	r1, #0
 6560 07e4 FFF7FEFF 		bl	VXISI2CWrite
 6561              	.LVL974:
3787:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);
 6562              		.loc 1 3787 0
 6563 07e8 FB20     		movs	r0, #251
 6564 07ea 0021     		movs	r1, #0
 6565 07ec FFF7FEFF 		bl	VXISI2CWrite
 6566              	.LVL975:
3788:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);
 6567              		.loc 1 3788 0
 6568 07f0 FC20     		movs	r0, #252
 6569 07f2 0021     		movs	r1, #0
 6570 07f4 FFF7FEFF 		bl	VXISI2CWrite
 6571              	.LVL976:
3789:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);
 6572              		.loc 1 3789 0
 6573 07f8 FD20     		movs	r0, #253
 6574 07fa 7021     		movs	r1, #112
 6575 07fc FFF7FEFF 		bl	VXISI2CWrite
 6576              	.LVL977:
3790:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);
 6577              		.loc 1 3790 0
 6578 0800 FE20     		movs	r0, #254
 6579 0802 4021     		movs	r1, #64
 6580 0804 FFF7FEFF 		bl	VXISI2CWrite
 6581              	.LVL978:
3791:Src/main.c    **** 
 6582              		.loc 1 3791 0
 6583 0808 FF20     		movs	r0, #255
 6584 080a 0721     		movs	r1, #7
 6585 080c FFF7FEFF 		bl	VXISI2CWrite
 6586              	.LVL979:
 6587 0810 08BD     		pop	{r3, pc}
 6588              		.cfi_endproc
 6589              	.LFE91:
 6591 0812 00BF     		.section	.text.SystemClock_Config,"ax",%progbits
 6592              		.align	2
 6593              		.global	SystemClock_Config
 6594              		.thumb
 6595              		.thumb_func
 6597              	SystemClock_Config:
 6598              	.LFB92:
3835:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 6599              		.loc 1 3835 0
 6600              		.cfi_startproc
 6601              		@ args = 0, pretend = 0, frame = 64
 6602              		@ frame_needed = 0, uses_anonymous_args = 0
 6603 0000 70B5     		push	{r4, r5, r6, lr}
 6604              	.LCFI41:
 6605              		.cfi_def_cfa_offset 16
 6606              		.cfi_offset 4, -16
 6607              		.cfi_offset 5, -12
ARM GAS  /tmp/ccxsI2YD.s 			page 211


 6608              		.cfi_offset 6, -8
 6609              		.cfi_offset 14, -4
 6610 0002 90B0     		sub	sp, sp, #64
 6611              	.LCFI42:
 6612              		.cfi_def_cfa_offset 80
3836:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 6613              		.loc 1 3836 0
 6614 0004 0024     		movs	r4, #0
 6615 0006 0794     		str	r4, [sp, #28]
 6616 0008 0894     		str	r4, [sp, #32]
 6617 000a 0994     		str	r4, [sp, #36]
 6618 000c 0C94     		str	r4, [sp, #48]
 6619 000e 0E94     		str	r4, [sp, #56]
3837:Src/main.c    **** 
 6620              		.loc 1 3837 0
 6621 0010 0194     		str	r4, [sp, #4]
 6622 0012 0294     		str	r4, [sp, #8]
 6623 0014 0394     		str	r4, [sp, #12]
 6624 0016 0494     		str	r4, [sp, #16]
 6625 0018 0594     		str	r4, [sp, #20]
3841:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 6626              		.loc 1 3841 0
 6627 001a 0225     		movs	r5, #2
 6628 001c 0695     		str	r5, [sp, #24]
3842:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 6629              		.loc 1 3842 0
 6630 001e 0126     		movs	r6, #1
 6631 0020 0A96     		str	r6, [sp, #40]
3843:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 6632              		.loc 1 3843 0
 6633 0022 1023     		movs	r3, #16
 6634 0024 0B93     		str	r3, [sp, #44]
3844:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 6635              		.loc 1 3844 0
 6636 0026 0D95     		str	r5, [sp, #52]
3846:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 6637              		.loc 1 3846 0
 6638 0028 4FF4E013 		mov	r3, #1835008
 6639 002c 0F93     		str	r3, [sp, #60]
3847:Src/main.c    ****   {
 6640              		.loc 1 3847 0
 6641 002e 06A8     		add	r0, sp, #24
 6642 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 6643              	.LVL980:
3853:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 6644              		.loc 1 3853 0
 6645 0034 0F23     		movs	r3, #15
 6646 0036 0193     		str	r3, [sp, #4]
3855:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 6647              		.loc 1 3855 0
 6648 0038 0295     		str	r5, [sp, #8]
3856:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 6649              		.loc 1 3856 0
 6650 003a 0394     		str	r4, [sp, #12]
3857:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 6651              		.loc 1 3857 0
 6652 003c 0494     		str	r4, [sp, #16]
ARM GAS  /tmp/ccxsI2YD.s 			page 212


3858:Src/main.c    **** 
 6653              		.loc 1 3858 0
 6654 003e 0594     		str	r4, [sp, #20]
3860:Src/main.c    ****   {
 6655              		.loc 1 3860 0
 6656 0040 01A8     		add	r0, sp, #4
 6657 0042 3146     		mov	r1, r6
 6658 0044 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 6659              	.LVL981:
3864:Src/main.c    **** #endif
 6660              		.loc 1 3864 0
 6661 0048 10B0     		add	sp, sp, #64
 6662              	.LCFI43:
 6663              		.cfi_def_cfa_offset 16
 6664              		@ sp needed
 6665 004a 70BD     		pop	{r4, r5, r6, pc}
 6666              		.cfi_endproc
 6667              	.LFE92:
 6669              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 6670              		.align	2
 6671              		.global	HAL_TIM_PeriodElapsedCallback
 6672              		.thumb
 6673              		.thumb_func
 6675              	HAL_TIM_PeriodElapsedCallback:
 6676              	.LFB97:
4223:Src/main.c    **** 
4224:Src/main.c    **** /* USER CODE BEGIN 4 */
4225:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
4226:Src/main.c    **** {
 6677              		.loc 1 4226 0
 6678              		.cfi_startproc
 6679              		@ args = 0, pretend = 0, frame = 0
 6680              		@ frame_needed = 0, uses_anonymous_args = 0
 6681              		@ link register save eliminated.
 6682              	.LVL982:
4227:Src/main.c    **** //	BYTE TempKey=0;
4228:Src/main.c    **** 
4229:Src/main.c    ****     //10us
4230:Src/main.c    ****     if (htim->Instance == TIM3)
 6683              		.loc 1 4230 0
 6684 0000 0268     		ldr	r2, [r0]
 6685 0002 184B     		ldr	r3, .L195
 6686 0004 9A42     		cmp	r2, r3
 6687 0006 2BD1     		bne	.L192
4231:Src/main.c    ****     {
4232:Src/main.c    **** 	
4233:Src/main.c    **** 	// Timer Counter 
4234:Src/main.c    **** 	tic02++;
 6688              		.loc 1 4234 0
 6689 0008 174A     		ldr	r2, .L195+4
 6690 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 6691 000c 0133     		adds	r3, r3, #1
 6692 000e DBB2     		uxtb	r3, r3
 6693 0010 1370     		strb	r3, [r2]
4235:Src/main.c    **** 	tic03++;
 6694              		.loc 1 4235 0
 6695 0012 1649     		ldr	r1, .L195+8
ARM GAS  /tmp/ccxsI2YD.s 			page 213


 6696 0014 0A68     		ldr	r2, [r1]
 6697 0016 0132     		adds	r2, r2, #1
 6698 0018 0A60     		str	r2, [r1]
4236:Src/main.c    **** 	tic04++;
 6699              		.loc 1 4236 0
 6700 001a 1549     		ldr	r1, .L195+12
 6701 001c 0A68     		ldr	r2, [r1]
 6702 001e 0132     		adds	r2, r2, #1
 6703 0020 0A60     		str	r2, [r1]
4237:Src/main.c    **** //	tic05++;
4238:Src/main.c    **** 	
4239:Src/main.c    **** 	if(tic02>=100)   
 6704              		.loc 1 4239 0
 6705 0022 632B     		cmp	r3, #99
 6706 0024 09D9     		bls	.L194
4240:Src/main.c    **** 	{
4241:Src/main.c    **** 	g_usTimerCounter += 1;     ///per 10us  interrupt
 6707              		.loc 1 4241 0
 6708 0026 134A     		ldr	r2, .L195+16
 6709 0028 1368     		ldr	r3, [r2]
 6710 002a 0133     		adds	r3, r3, #1
 6711 002c 1360     		str	r3, [r2]
4242:Src/main.c    **** 	tic02=0;
 6712              		.loc 1 4242 0
 6713 002e 0022     		movs	r2, #0
 6714 0030 0D4B     		ldr	r3, .L195+4
 6715 0032 1A70     		strb	r2, [r3]
4243:Src/main.c    **** 	g_bNotifyTimer0Int=_TRUE;
 6716              		.loc 1 4243 0
 6717 0034 0122     		movs	r2, #1
 6718 0036 104B     		ldr	r3, .L195+20
 6719 0038 1A60     		str	r2, [r3]
 6720              	.L194:
4244:Src/main.c    **** 	}	
4245:Src/main.c    **** /*
4246:Src/main.c    **** 	if(tic05>=100)////1ms
4247:Src/main.c    **** 	{
4248:Src/main.c    **** 	ucTickCount++;	//for IT66021
4249:Src/main.c    **** 	tic05=0;
4250:Src/main.c    **** 	}
4251:Src/main.c    **** 	*/
4252:Src/main.c    ****         tim3count++ ;
 6721              		.loc 1 4252 0
 6722 003a 104B     		ldr	r3, .L195+24
 6723 003c 1A68     		ldr	r2, [r3]
 6724 003e 0132     		adds	r2, r2, #1
 6725 0040 1A60     		str	r2, [r3]
4253:Src/main.c    ****         if (tim3count > 100000 )
 6726              		.loc 1 4253 0
 6727 0042 1A68     		ldr	r2, [r3]
 6728 0044 0E4B     		ldr	r3, .L195+28
 6729 0046 9A42     		cmp	r2, r3
 6730 0048 0AD9     		bls	.L192
4254:Src/main.c    ****         {
4255:Src/main.c    ****             tim3count = 0 ;
 6731              		.loc 1 4255 0
 6732 004a 0022     		movs	r2, #0
ARM GAS  /tmp/ccxsI2YD.s 			page 214


 6733 004c 0B4B     		ldr	r3, .L195+24
 6734 004e 1A60     		str	r2, [r3]
4256:Src/main.c    ****             //Test_tim3_printf_Flg  = 1;
4257:Src/main.c    ****             if (OSDStateFlg ==1 )
 6735              		.loc 1 4257 0
 6736 0050 0C4B     		ldr	r3, .L195+32
 6737 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6738 0054 012B     		cmp	r3, #1
 6739 0056 03D1     		bne	.L192
4258:Src/main.c    ****             {
4259:Src/main.c    ****                 //static tByte enOSD10secOff = 1;   //En16wNumberOSD=1
4260:Src/main.c    ****                 OSDSecCount++ ;
 6740              		.loc 1 4260 0
 6741 0058 0B4A     		ldr	r2, .L195+36
 6742 005a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 6743 005c 0133     		adds	r3, r3, #1
 6744 005e 1370     		strb	r3, [r2]
 6745              	.L192:
 6746 0060 7047     		bx	lr
 6747              	.L196:
 6748 0062 00BF     		.align	2
 6749              	.L195:
 6750 0064 00040040 		.word	1073742848
 6751 0068 00000000 		.word	tic02
 6752 006c 00000000 		.word	tic03
 6753 0070 00000000 		.word	tic04
 6754 0074 00000000 		.word	g_usTimerCounter
 6755 0078 00000000 		.word	g_bNotifyTimer0Int
 6756 007c 00000000 		.word	.LANCHOR22
 6757 0080 A0860100 		.word	100000
 6758 0084 00000000 		.word	.LANCHOR14
 6759 0088 00000000 		.word	.LANCHOR15
 6760              		.cfi_endproc
 6761              	.LFE97:
 6763              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 6764              		.align	2
 6765              		.global	HAL_UART_RxCpltCallback
 6766              		.thumb
 6767              		.thumb_func
 6769              	HAL_UART_RxCpltCallback:
 6770              	.LFB98:
4261:Src/main.c    ****             }
4262:Src/main.c    ****         }
4263:Src/main.c    **** #if 0
4264:Src/main.c    **** 
4265:Src/main.c    **** 		//Kane @HS 2007 0814 Ver1.31>>>>
4266:Src/main.c    **** 	//	if(Time5ms)
4267:Src/main.c    **** 	//	Time5ms--;
4268:Src/main.c    **** 		//if(Time5ms==0)
4269:Src/main.c    **** 		{
4270:Src/main.c    **** 			//if(HAL_GPIO_ReadPin(UP_KEY_GPIO_Port,UP_KEY_Pin)==_FALSE)
4271:Src/main.c    **** 			//	TempKey|=0x01;
4272:Src/main.c    **** 			//if(HAL_GPIO_ReadPin(DOWN_KEY_GPIO_Port,DOWN_KEY_Pin)==_FALSE)
4273:Src/main.c    **** 			//	TempKey|=0x02;
4274:Src/main.c    **** 			//TempKey=(( (P2&0x60) >> 5) & 0x03);
4275:Src/main.c    **** //			TempKey=((~GPIOB->IDR)&(UP_KEY_Pin|DOWN_KEY_Pin))>>14;
4276:Src/main.c    **** 			TempKey=(((~GPIOB->IDR)&(UP_KEY_Pin|DOWN_KEY_Pin))>>14)&0x03;
ARM GAS  /tmp/ccxsI2YD.s 			page 215


4277:Src/main.c    **** 
4278:Src/main.c    **** 			if(updn_reg[3] != TempKey )  // (( (P2&0x60) >> 5) & 0x03))    //Abel for HS SW key ......951102
4279:Src/main.c    **** 			{																						   
4280:Src/main.c    **** 				updn_reg[0] = updn_reg[1];																
4281:Src/main.c    **** 				updn_reg[1] = updn_reg[2];																
4282:Src/main.c    **** 				updn_reg[2] = updn_reg[3];																
4283:Src/main.c    **** 				updn_reg[3] = TempKey;// ( (P2&0x60) >> 5) & 0x03; 
4284:Src/main.c    **** 				ChangeKey = 1;		
4285:Src/main.c    **** 				//else			//william-v1.42-961130
4286:Src/main.c    **** 				//ChangeKey=0;	//william-v1.42-961130
4287:Src/main.c    **** 			//Time5ms = (48-8);
4288:Src/main.c    **** 			//Time5ms = (48+100);
4289:Src/main.c    **** 			
4290:Src/main.c    **** 				
4291:Src/main.c    **** 			}
4292:Src/main.c    **** 		}
4293:Src/main.c    **** 		#endif
4294:Src/main.c    **** #if 0
4295:Src/main.c    ****         if (IR_IRQFlg == 1)
4296:Src/main.c    ****         {
4297:Src/main.c    ****             if (PreIR_IRQ_Index == IR_IRQ_Index )
4298:Src/main.c    ****             {
4299:Src/main.c    ****                 IR_PlusTimeVal++ ;
4300:Src/main.c    **** 
4301:Src/main.c    ****                 //9.2xms + 4.5xms = 13.8ms
4302:Src/main.c    ****                 if (IR_PlusTimeVal > 15000)  //10us
4303:Src/main.c    ****                 {
4304:Src/main.c    **** //                    IR_PlusTimeVal = 0  ;
4305:Src/main.c    **** //                    PreIR_IRQ_Index = 0 ;
4306:Src/main.c    **** //                    IR_IRQ_Index = 0 ;
4307:Src/main.c    **** //                    IR_IRQFlg = 0 ;
4308:Src/main.c    **** 
4309:Src/main.c    ****                     if (IR_ShiftCount >= 32 )
4310:Src/main.c    ****                     {
4311:Src/main.c    ****                         u16Vendor = (tWord)(IR_4BYTE & 0x0000FFFF) ;
4312:Src/main.c    ****                         if (u16Vendor == IR_Vendor_Code_ )
4313:Src/main.c    ****                         {
4314:Src/main.c    ****                             u8IRcode = (tByte)((IR_4BYTE & 0x00FF0000 ) >> 16)  ;
4315:Src/main.c    ****                             u8IRCheckcode  = 0xFF - (tByte)((IR_4BYTE & 0xFF000000 ) >> 24)  ;
4316:Src/main.c    ****                             IR_END_Flg = 1 ;
4317:Src/main.c    ****                         }
4318:Src/main.c    ****                     }
4319:Src/main.c    **** 
4320:Src/main.c    ****                     IR_ShiftCount = 0 ;
4321:Src/main.c    ****                     IR_PlusTimeVal = 0  ;
4322:Src/main.c    ****                     PreIR_IRQ_Index = 0 ;
4323:Src/main.c    ****                     IR_IRQ_Index = 0 ;
4324:Src/main.c    ****                     IR_IRQFlg = 0 ;
4325:Src/main.c    ****                     //memset(aIR_PlusTime , 0 , 40 )  ;
4326:Src/main.c    ****                     IR_4BYTE = 0 ;
4327:Src/main.c    ****                     IR_StartFlg = 0 ;
4328:Src/main.c    ****                 }
4329:Src/main.c    ****             }
4330:Src/main.c    ****             else
4331:Src/main.c    ****             {
4332:Src/main.c    ****                 if (PreIR_IRQ_Index <= 33)
4333:Src/main.c    ****                 {
ARM GAS  /tmp/ccxsI2YD.s 			page 216


4334:Src/main.c    ****                     //aIR_PlusTime[PreIR_IRQ_Index] = IR_PlusTimeVal ;
4335:Src/main.c    ****                     if (IR_StartFlg == 1 )
4336:Src/main.c    ****                     {
4337:Src/main.c    ****                         if (IR_PlusTimeVal >90 )
4338:Src/main.c    ****                         {
4339:Src/main.c    ****                             //IR_4BYTE = IR_4BYTE << 1 ;
4340:Src/main.c    ****                             IR_4BYTE = IR_4BYTE >> 1 ;
4341:Src/main.c    **** 
4342:Src/main.c    ****                             if (IR_PlusTimeVal > 160 )
4343:Src/main.c    ****                             {
4344:Src/main.c    ****                                 //IR_4BYTE = IR_4BYTE | 0x01 ;
4345:Src/main.c    ****                                 IR_4BYTE = IR_4BYTE | 0x80000000 ;
4346:Src/main.c    ****                             }
4347:Src/main.c    ****                             else
4348:Src/main.c    ****                             {
4349:Src/main.c    ****                                 //IR_4BYTE = IR_4BYTE | 0x01 ;
4350:Src/main.c    ****                             }
4351:Src/main.c    ****                             IR_ShiftCount++ ;
4352:Src/main.c    ****                         }
4353:Src/main.c    ****                     }
4354:Src/main.c    **** 
4355:Src/main.c    ****                     if((IR_PlusTimeVal >1250 )&&(IR_PlusTimeVal < 1450))
4356:Src/main.c    ****                     {
4357:Src/main.c    ****                         IR_StartFlg =1 ;
4358:Src/main.c    ****                     }
4359:Src/main.c    ****                 }
4360:Src/main.c    ****                 IR_PlusTimeVal = 0 ;
4361:Src/main.c    ****                 PreIR_IRQ_Index = IR_IRQ_Index ;
4362:Src/main.c    ****             }
4363:Src/main.c    ****         }
4364:Src/main.c    **** #endif
4365:Src/main.c    **** 		///////////////////////////////////////////
4366:Src/main.c    **** 	/*
4367:Src/main.c    **** 		TempKey=0;
4368:Src/main.c    **** 		if(HAL_GPIO_ReadPin(MENU_KEY_GPIO_Port,MENU_KEY_Pin)==_FALSE)
4369:Src/main.c    **** 			TempKey|=0x08;
4370:Src/main.c    **** 		if(HAL_GPIO_ReadPin(POWER_KEY_GPIO_Port,POWER_KEY_Pin)==_FALSE)
4371:Src/main.c    **** 			TempKey|=0x04;
4372:Src/main.c    **** 		if(HAL_GPIO_ReadPin(POWER_KEY_GPIO_Port,POWER_KEY_Pin)==_FALSE)
4373:Src/main.c    **** 			TempKey|=0x04;
4374:Src/main.c    **** 		if(HAL_GPIO_ReadPin(JUMP_KEY_GPIO_Port,JUMP_KEY_Pin)==_FALSE)
4375:Src/main.c    **** 			TempKey|=0x10;
4376:Src/main.c    **** 		if(HAL_GPIO_ReadPin(SOURCE_KEY_GPIO_Port,SOURCE_KEY_Pin)==_FALSE)
4377:Src/main.c    **** 			Te			mpKey|=0x80;
4378:Src/main.c    **** */
4379:Src/main.c    **** #if 0
4380:Src/main.c    **** 	if(tic03==1000)
4381:Src/main.c    **** 		{
4382:Src/main.c    **** 		tic03=0;
4383:Src/main.c    **** 		if(_ReadKey() ) {
4384:Src/main.c    **** 			
4385:Src/main.c    **** 			if( keytic==3 ) {
4386:Src/main.c    **** 				Key = _ReadKey();
4387:Src/main.c    **** 				RepeatKey = 0;
4388:Src/main.c    **** 				KeyReady = 1;
4389:Src/main.c    **** 			}
4390:Src/main.c    **** 			else if( keytic==100 ) {
ARM GAS  /tmp/ccxsI2YD.s 			page 217


4391:Src/main.c    **** 				Key = _ReadKey();
4392:Src/main.c    **** 				KeyReady = 1;
4393:Src/main.c    **** 				keytic = 80-70;
4394:Src/main.c    **** 
4395:Src/main.c    **** 			}
4396:Src/main.c    **** 			keytic++;
4397:Src/main.c    **** 		
4398:Src/main.c    **** 		}
4399:Src/main.c    **** 		else 
4400:Src/main.c    **** 		{
4401:Src/main.c    **** 			keytic = 0;
4402:Src/main.c    **** 			Key=0;
4403:Src/main.c    **** 		}
4404:Src/main.c    **** 		}	
4405:Src/main.c    **** 
4406:Src/main.c    **** 	if(tic04==1000)
4407:Src/main.c    **** 		{
4408:Src/main.c    **** 		tic04=0;
4409:Src/main.c    **** 				if(TP_PRES_DOWN ) {
4410:Src/main.c    **** 					
4411:Src/main.c    **** 					if( tptic==3) {
4412:Src/main.c    **** 						TouchP=TP_PRES_DOWN;
4413:Src/main.c    **** 					}
4414:Src/main.c    **** 					else if(tptic==150)
4415:Src/main.c    **** 						{
4416:Src/main.c    **** 						TouchP=TP_PRES_DOWN;						
4417:Src/main.c    **** 						
4418:Src/main.c    **** 						tptic=4;						
4419:Src/main.c    **** 						}
4420:Src/main.c    **** 				tptic++;
4421:Src/main.c    **** 				}
4422:Src/main.c    **** 				else 
4423:Src/main.c    **** 				{
4424:Src/main.c    **** 					tptic = 0;
4425:Src/main.c    **** 					TouchP=0;
4426:Src/main.c    **** 				}
4427:Src/main.c    **** 
4428:Src/main.c    **** 		}
4429:Src/main.c    **** 	#endif
4430:Src/main.c    ****     }
4431:Src/main.c    **** }
4432:Src/main.c    **** 
4433:Src/main.c    **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
4434:Src/main.c    **** {
 6771              		.loc 1 4434 0
 6772              		.cfi_startproc
 6773              		@ args = 0, pretend = 0, frame = 0
 6774              		@ frame_needed = 0, uses_anonymous_args = 0
 6775              	.LVL983:
 6776 0000 10B5     		push	{r4, lr}
 6777              	.LCFI44:
 6778              		.cfi_def_cfa_offset 8
 6779              		.cfi_offset 4, -8
 6780              		.cfi_offset 14, -4
 6781 0002 0446     		mov	r4, r0
4435:Src/main.c    ****     if (huart->Instance == USART1)	//current UART
 6782              		.loc 1 4435 0
ARM GAS  /tmp/ccxsI2YD.s 			page 218


 6783 0004 0268     		ldr	r2, [r0]
 6784 0006 174B     		ldr	r3, .L203
 6785 0008 9A42     		cmp	r2, r3
 6786 000a 12D1     		bne	.L198
4436:Src/main.c    ****     {
4437:Src/main.c    **** 
4438:Src/main.c    **** /*
4439:Src/main.c    **** 		if (Rx_indx==0)
4440:Src/main.c    ****         {
4441:Src/main.c    ****             memset(Rx_Buffer , 0  , RXBUFMAX ) ;
4442:Src/main.c    ****         }
4443:Src/main.c    **** 
4444:Src/main.c    ****         if (Rx_data[0] >= 0x30)
4445:Src/main.c    ****         {
4446:Src/main.c    ****             Rx_Buffer[Rx_indx]=Rx_data[0];	//add data to Rx_Buffer
4447:Src/main.c    ****             Rx_indx++ ;
4448:Src/main.c    ****             if (Rx_indx >= RXBUFMAX )
4449:Src/main.c    ****                 Rx_indx = 0 ;
4450:Src/main.c    ****         }
4451:Src/main.c    ****         else if ((Rx_data[0] == 0x0d) || (Rx_data[0] == 0xa))//if received data = 13
4452:Src/main.c    ****         {
4453:Src/main.c    ****             RxBufIndex = Rx_indx ;
4454:Src/main.c    ****             memcpy(gRxbuf ,Rx_Buffer, Rx_indx ) ;
4455:Src/main.c    ****             Rx_indx=0;
4456:Src/main.c    ****             Transfer_cplt=1;//transfer complete, data is ready to read
4457:Src/main.c    ****         }
4458:Src/main.c    **** */
4459:Src/main.c    **** #if 1
4460:Src/main.c    ****        RS_buf [RS_in++] = Rx_data[0];//USART_ReceiveData(USART1);	
 6787              		.loc 1 4460 0
 6788 000c 1649     		ldr	r1, .L203+4
 6789 000e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 6790 0010 531C     		adds	r3, r2, #1
 6791 0012 DBB2     		uxtb	r3, r3
 6792 0014 0B70     		strb	r3, [r1]
 6793 0016 1549     		ldr	r1, .L203+8
 6794 0018 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 6795              	.LVL984:
 6796 001a 1549     		ldr	r1, .L203+12
 6797 001c 8854     		strb	r0, [r1, r2]
4461:Src/main.c    ****     if( RS_in >= BUF_MAX)  RS_in = 0;
 6798              		.loc 1 4461 0
 6799 001e 1D2B     		cmp	r3, #29
 6800 0020 02D9     		bls	.L199
 6801              		.loc 1 4461 0 is_stmt 0 discriminator 1
 6802 0022 0022     		movs	r2, #0
 6803 0024 104B     		ldr	r3, .L203+4
 6804 0026 1A70     		strb	r2, [r3]
 6805              	.L199:
4462:Src/main.c    **** 		
4463:Src/main.c    **** 		//RS_tx(Rx_data[0]);
4464:Src/main.c    **** 
4465:Src/main.c    **** 
4466:Src/main.c    **** //HAL_UART_Receive_IT(&huart1,(uint8_t*)Rx_data, 1);	//activate UART receive interrupt every time
4467:Src/main.c    **** 	HAL_UART_Receive_IT(&huart1,(uint8_t*)Rx_data, 1);	 //activate UART receive interrupt every time
 6806              		.loc 1 4467 0 is_stmt 1
 6807 0028 1248     		ldr	r0, .L203+16
ARM GAS  /tmp/ccxsI2YD.s 			page 219


 6808 002a 1049     		ldr	r1, .L203+8
 6809 002c 0122     		movs	r2, #1
 6810 002e FFF7FEFF 		bl	HAL_UART_Receive_IT
 6811              	.LVL985:
 6812              	.L198:
4468:Src/main.c    **** 	#endif
4469:Src/main.c    ****     }
4470:Src/main.c    **** #if 1
4471:Src/main.c    **** if (huart->Instance == USART2)	//current UART2
 6813              		.loc 1 4471 0
 6814 0032 2268     		ldr	r2, [r4]
 6815 0034 104B     		ldr	r3, .L203+20
 6816 0036 9A42     		cmp	r2, r3
 6817 0038 12D1     		bne	.L197
4472:Src/main.c    ****     {
4473:Src/main.c    **** 
4474:Src/main.c    ****        RS2_buf [RS2_in++] = Rx2_data[0];//USART_ReceiveData(USART1);	
 6818              		.loc 1 4474 0
 6819 003a 1049     		ldr	r1, .L203+24
 6820 003c 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 6821 003e 531C     		adds	r3, r2, #1
 6822 0040 DBB2     		uxtb	r3, r3
 6823 0042 0B70     		strb	r3, [r1]
 6824 0044 0E49     		ldr	r1, .L203+28
 6825 0046 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 6826 0048 0E49     		ldr	r1, .L203+32
 6827 004a 8854     		strb	r0, [r1, r2]
4475:Src/main.c    ****     if( RS2_in >= TOA_BUF_MAX)  RS2_in = 0;
 6828              		.loc 1 4475 0
 6829 004c C72B     		cmp	r3, #199
 6830 004e 02D9     		bls	.L201
 6831              		.loc 1 4475 0 is_stmt 0 discriminator 1
 6832 0050 0022     		movs	r2, #0
 6833 0052 0A4B     		ldr	r3, .L203+24
 6834 0054 1A70     		strb	r2, [r3]
 6835              	.L201:
4476:Src/main.c    **** 	HAL_UART_Receive_IT(&huart2,(uint8_t*)Rx2_data, 1);	 //activate UART receive interrupt every time
 6836              		.loc 1 4476 0 is_stmt 1
 6837 0056 0C48     		ldr	r0, .L203+36
 6838 0058 0949     		ldr	r1, .L203+28
 6839 005a 0122     		movs	r2, #1
 6840 005c FFF7FEFF 		bl	HAL_UART_Receive_IT
 6841              	.LVL986:
 6842              	.L197:
 6843 0060 10BD     		pop	{r4, pc}
 6844              	.LVL987:
 6845              	.L204:
 6846 0062 00BF     		.align	2
 6847              	.L203:
 6848 0064 00380140 		.word	1073821696
 6849 0068 00000000 		.word	RS_in
 6850 006c 00000000 		.word	.LANCHOR23
 6851 0070 00000000 		.word	RS_buf
 6852 0074 00000000 		.word	huart1
 6853 0078 00440040 		.word	1073759232
 6854 007c 00000000 		.word	RS2_in
 6855 0080 00000000 		.word	.LANCHOR24
ARM GAS  /tmp/ccxsI2YD.s 			page 220


 6856 0084 00000000 		.word	RS2_buf
 6857 0088 00000000 		.word	huart2
 6858              		.cfi_endproc
 6859              	.LFE98:
 6861              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 6862              		.align	2
 6863              		.global	HAL_GPIO_EXTI_Callback
 6864              		.thumb
 6865              		.thumb_func
 6867              	HAL_GPIO_EXTI_Callback:
 6868              	.LFB99:
4477:Src/main.c    ****     }	
4478:Src/main.c    **** #endif
4479:Src/main.c    **** }
4480:Src/main.c    **** 
4481:Src/main.c    **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
4482:Src/main.c    **** {
 6869              		.loc 1 4482 0
 6870              		.cfi_startproc
 6871              		@ args = 0, pretend = 0, frame = 0
 6872              		@ frame_needed = 0, uses_anonymous_args = 0
 6873              		@ link register save eliminated.
 6874              	.LVL988:
 6875 0000 7047     		bx	lr
 6876              		.cfi_endproc
 6877              	.LFE99:
 6879 0002 00BF     		.section	.text.HS_Select_Win,"ax",%progbits
 6880              		.align	2
 6881              		.global	HS_Select_Win
 6882              		.thumb
 6883              		.thumb_func
 6885              	HS_Select_Win:
 6886              	.LFB100:
4483:Src/main.c    **** /*
4484:Src/main.c    ****     if(GPIO_Pin == IR_IN_Pin  )
4485:Src/main.c    ****     {
4486:Src/main.c    ****         IR_IRQFlg =1 ;
4487:Src/main.c    **** 
4488:Src/main.c    ****         IR_IRQ_Index++ ;
4489:Src/main.c    ****     }
4490:Src/main.c    **** 	*/
4491:Src/main.c    **** }
4492:Src/main.c    **** 
4493:Src/main.c    **** void HS_Select_Win(unsigned char WinNum)	//20201214-02
4494:Src/main.c    **** {
 6887              		.loc 1 4494 0
 6888              		.cfi_startproc
 6889              		@ args = 0, pretend = 0, frame = 0
 6890              		@ frame_needed = 0, uses_anonymous_args = 0
 6891              	.LVL989:
 6892              		.loc 1 4494 0
 6893 0000 38B5     		push	{r3, r4, r5, lr}
 6894              	.LCFI45:
 6895              		.cfi_def_cfa_offset 16
 6896              		.cfi_offset 3, -16
 6897              		.cfi_offset 4, -12
 6898              		.cfi_offset 5, -8
ARM GAS  /tmp/ccxsI2YD.s 			page 221


 6899              		.cfi_offset 14, -4
4495:Src/main.c    **** 
4496:Src/main.c    **** 	
4497:Src/main.c    **** 	switch (WinNum)
 6900              		.loc 1 4497 0
 6901 0002 0128     		cmp	r0, #1
 6902 0004 34D0     		beq	.L208
4498:Src/main.c    **** 	{
4499:Src/main.c    **** 		default:
4500:Src/main.c    **** 		case 0:
4501:Src/main.c    **** 			VXISI2CWrite( 0x32, 0x00 );
 6903              		.loc 1 4501 0
 6904 0006 3220     		movs	r0, #50
 6905              	.LVL990:
 6906 0008 0021     		movs	r1, #0
 6907 000a FFF7FEFF 		bl	VXISI2CWrite
 6908              	.LVL991:
4502:Src/main.c    **** 			VXISI2CWrite( 0x19, 0x00 );
 6909              		.loc 1 4502 0
 6910 000e 1920     		movs	r0, #25
 6911 0010 0021     		movs	r1, #0
 6912 0012 FFF7FEFF 		bl	VXISI2CWrite
 6913              	.LVL992:
4503:Src/main.c    **** 			SelectInputMode=0;
 6914              		.loc 1 4503 0
 6915 0016 0024     		movs	r4, #0
 6916 0018 404B     		ldr	r3, .L220
 6917 001a 1C70     		strb	r4, [r3]
4504:Src/main.c    **** 			printf("Selected window 0\r\n");
 6918              		.loc 1 4504 0
 6919 001c 4048     		ldr	r0, .L220+4
 6920 001e FFF7FEFF 		bl	puts
 6921              	.LVL993:
4505:Src/main.c    **** 			pVS4210_MutiWindows1.OutputMode =VS4210_1080P_MODE0_w0;						
 6922              		.loc 1 4505 0
 6923 0022 4048     		ldr	r0, .L220+8
 6924 0024 0470     		strb	r4, [r0]
4506:Src/main.c    **** 			pVS4210_MutiWindows1.WindowMap.WMap0 = 1 ;			
 6925              		.loc 1 4506 0
 6926 0026 0123     		movs	r3, #1
 6927 0028 4370     		strb	r3, [r0, #1]
4507:Src/main.c    **** 			VS4210_SetMutiWindows(&pVS4210_MutiWindows1) ;	
 6928              		.loc 1 4507 0
 6929 002a FFF7FEFF 		bl	VS4210_SetMutiWindows
 6930              	.LVL994:
4508:Src/main.c    **** 			//#if (_External_Sync==ON)
4509:Src/main.c    **** 			//VXISI2CWrite( 0x32, 0x00 );
4510:Src/main.c    **** 			  VXISI2CWrite( 0x19, 0x00 );
 6931              		.loc 1 4510 0
 6932 002e 1920     		movs	r0, #25
 6933 0030 2146     		mov	r1, r4
 6934 0032 FFF7FEFF 		bl	VXISI2CWrite
 6935              	.LVL995:
4511:Src/main.c    **** 			//#endif
4512:Src/main.c    **** 			//msleep(100) ;
4513:Src/main.c    **** 		//	VXISI2CWrite( 0x32, 0x80 );
4514:Src/main.c    **** 			if(CHECK_HDMI720P50())
ARM GAS  /tmp/ccxsI2YD.s 			page 222


 6936              		.loc 1 4514 0
 6937 0036 FFF7FEFF 		bl	CHECK_HDMI720P50
 6938              	.LVL996:
 6939 003a 58B1     		cbz	r0, .L209
4515:Src/main.c    **** 			{
4516:Src/main.c    **** 				dbg_Printf("ch1, HDMI=720P50  no support\r\n") ;
 6940              		.loc 1 4516 0
 6941 003c 3A48     		ldr	r0, .L220+12
 6942 003e 3B49     		ldr	r1, .L220+16
 6943 0040 3B4A     		ldr	r2, .L220+20
 6944 0042 41F2A413 		movw	r3, #4516
 6945 0046 FFF7FEFF 		bl	printf
 6946              	.LVL997:
4517:Src/main.c    **** 				Set_Video_Loss_OSD(0,ON);
 6947              		.loc 1 4517 0
 6948 004a 2046     		mov	r0, r4
 6949 004c 0121     		movs	r1, #1
 6950 004e FFF7FEFF 		bl	Set_Video_Loss_OSD
 6951              	.LVL998:
 6952 0052 5BE0     		b	.L210
 6953              	.L209:
4518:Src/main.c    **** 			}
4519:Src/main.c    **** 			else
4520:Src/main.c    **** 			{
4521:Src/main.c    **** 				if(bSignal[0]==1)
 6954              		.loc 1 4521 0
 6955 0054 374B     		ldr	r3, .L220+24
 6956 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6957 0058 012B     		cmp	r3, #1
 6958 005a 04D1     		bne	.L211
4522:Src/main.c    **** 				{
4523:Src/main.c    **** 				Set_Video_Loss_OSD(0,OFF);
 6959              		.loc 1 4523 0
 6960 005c 0020     		movs	r0, #0
 6961 005e 0146     		mov	r1, r0
 6962 0060 FFF7FEFF 		bl	Set_Video_Loss_OSD
 6963              	.LVL999:
 6964 0064 52E0     		b	.L210
 6965              	.L211:
4524:Src/main.c    **** 				}
4525:Src/main.c    **** 				else
4526:Src/main.c    **** 				{
4527:Src/main.c    **** 				Set_Video_Loss_OSD(0,ON);
 6966              		.loc 1 4527 0
 6967 0066 0020     		movs	r0, #0
 6968 0068 0121     		movs	r1, #1
 6969 006a FFF7FEFF 		bl	Set_Video_Loss_OSD
 6970              	.LVL1000:
 6971 006e 4DE0     		b	.L210
 6972              	.LVL1001:
 6973              	.L208:
4528:Src/main.c    **** 				}
4529:Src/main.c    **** 			}
4530:Src/main.c    **** 			#if (_External_Sync==OFF)
4531:Src/main.c    **** 				//SET_HDMI_SYNC_PARA();			
4532:Src/main.c    **** 			#endif
4533:Src/main.c    **** 			break;
ARM GAS  /tmp/ccxsI2YD.s 			page 223


4534:Src/main.c    **** 		
4535:Src/main.c    **** 		case 1:
4536:Src/main.c    **** 			VXISI2CWrite( 0x32, 0x00 );
 6974              		.loc 1 4536 0
 6975 0070 3220     		movs	r0, #50
 6976              	.LVL1002:
 6977 0072 0021     		movs	r1, #0
 6978 0074 FFF7FEFF 		bl	VXISI2CWrite
 6979              	.LVL1003:
4537:Src/main.c    **** 			SelectInputMode=1;
 6980              		.loc 1 4537 0
 6981 0078 284C     		ldr	r4, .L220
 6982 007a 0125     		movs	r5, #1
 6983 007c 2570     		strb	r5, [r4]
4538:Src/main.c    **** 			printf("Selected window 1\r\n");
 6984              		.loc 1 4538 0
 6985 007e 2E48     		ldr	r0, .L220+28
 6986 0080 FFF7FEFF 		bl	puts
 6987              	.LVL1004:
4539:Src/main.c    **** 			pVS4210_MutiWindows1.OutputMode =VS4210_1080P_MODE0_w1;
 6988              		.loc 1 4539 0
 6989 0084 2748     		ldr	r0, .L220+8
 6990 0086 0570     		strb	r5, [r0]
4540:Src/main.c    **** 			pVS4210_MutiWindows1.WindowMap.WMap0 = 2 ;
 6991              		.loc 1 4540 0
 6992 0088 0223     		movs	r3, #2
 6993 008a 4370     		strb	r3, [r0, #1]
4541:Src/main.c    **** 			VS4210_SetMutiWindows(&pVS4210_MutiWindows1) ;		
 6994              		.loc 1 4541 0
 6995 008c FFF7FEFF 		bl	VS4210_SetMutiWindows
 6996              	.LVL1005:
4542:Src/main.c    **** 			VXISI2CWrite( 0x19, 0x04 );
 6997              		.loc 1 4542 0
 6998 0090 1920     		movs	r0, #25
 6999 0092 0421     		movs	r1, #4
 7000 0094 FFF7FEFF 		bl	VXISI2CWrite
 7001              	.LVL1006:
4543:Src/main.c    **** 
4544:Src/main.c    **** 		if(SelectInputMode==1)
 7002              		.loc 1 4544 0
 7003 0098 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 7004 009a AB42     		cmp	r3, r5
 7005 009c 29D1     		bne	.L212
4545:Src/main.c    **** 		{
4546:Src/main.c    **** 			if(  mode[0]==7 )
 7006              		.loc 1 4546 0
 7007 009e 274B     		ldr	r3, .L220+32
 7008 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7009 00a2 072B     		cmp	r3, #7
 7010 00a4 09D1     		bne	.L213
4547:Src/main.c    **** 				{
4548:Src/main.c    **** 			
4549:Src/main.c    **** 				TP_bt1120_1080P_1080P_mode0_w0();
 7011              		.loc 1 4549 0
 7012 00a6 FFF7FEFF 		bl	TP_bt1120_1080P_1080P_mode0_w0
 7013              	.LVL1007:
4550:Src/main.c    **** 					printf("(=1)");
ARM GAS  /tmp/ccxsI2YD.s 			page 224


 7014              		.loc 1 4550 0
 7015 00aa 2548     		ldr	r0, .L220+36
 7016 00ac FFF7FEFF 		bl	printf
 7017              	.LVL1008:
4551:Src/main.c    **** 				//VXISI2CWrite(0x10,0x01);
4552:Src/main.c    **** 				//VXISI2CWrite(0x9c,0x0A);
4553:Src/main.c    **** 				Set_Video_Loss_OSD(1,ON);
 7018              		.loc 1 4553 0
 7019 00b0 2846     		mov	r0, r5
 7020 00b2 2946     		mov	r1, r5
 7021 00b4 FFF7FEFF 		bl	Set_Video_Loss_OSD
 7022              	.LVL1009:
 7023 00b8 1BE0     		b	.L212
 7024              	.L213:
4554:Src/main.c    **** 
4555:Src/main.c    **** 			}
4556:Src/main.c    **** 			else
4557:Src/main.c    **** 				{
4558:Src/main.c    **** 				
4559:Src/main.c    **** 				printf("(=2)");
 7025              		.loc 1 4559 0
 7026 00ba 2248     		ldr	r0, .L220+40
 7027 00bc FFF7FEFF 		bl	printf
 7028              	.LVL1010:
4560:Src/main.c    **** 								if(TP_InputMode==5)
 7029              		.loc 1 4560 0
 7030 00c0 214B     		ldr	r3, .L220+44
 7031 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7032 00c4 052B     		cmp	r3, #5
 7033 00c6 02D1     		bne	.L214
4561:Src/main.c    **** 									{
4562:Src/main.c    **** 									TP_bt1120_720P_1080P_mode0_w0();
 7034              		.loc 1 4562 0
 7035 00c8 FFF7FEFF 		bl	TP_bt1120_720P_1080P_mode0_w0
 7036              	.LVL1011:
 7037 00cc 11E0     		b	.L212
 7038              	.L214:
4563:Src/main.c    **** 									}
4564:Src/main.c    **** 								else if(TP_InputMode==6)
 7039              		.loc 1 4564 0
 7040 00ce 062B     		cmp	r3, #6
 7041 00d0 02D1     		bne	.L215
4565:Src/main.c    **** 									{
4566:Src/main.c    **** 									TP_bt1120_1080P_1080P_mode0_w0();
 7042              		.loc 1 4566 0
 7043 00d2 FFF7FEFF 		bl	TP_bt1120_1080P_1080P_mode0_w0
 7044              	.LVL1012:
 7045 00d6 0CE0     		b	.L212
 7046              	.L215:
4567:Src/main.c    **** 									}
4568:Src/main.c    **** 								else if(TP_InputMode==0)
 7047              		.loc 1 4568 0
 7048 00d8 13B9     		cbnz	r3, .L216
4569:Src/main.c    **** 									{
4570:Src/main.c    **** 									TP_bt1120_NTSC_1080P_mode0_w0();
 7049              		.loc 1 4570 0
 7050 00da FFF7FEFF 		bl	TP_bt1120_NTSC_1080P_mode0_w0
ARM GAS  /tmp/ccxsI2YD.s 			page 225


 7051              	.LVL1013:
 7052 00de 08E0     		b	.L212
 7053              	.L216:
4571:Src/main.c    **** 									}
4572:Src/main.c    **** 								else if(TP_InputMode==1)
 7054              		.loc 1 4572 0
 7055 00e0 012B     		cmp	r3, #1
 7056 00e2 02D1     		bne	.L217
4573:Src/main.c    **** 									{
4574:Src/main.c    **** 									TP_bt1120_PAL_1080P_mode0_w0();
 7057              		.loc 1 4574 0
 7058 00e4 FFF7FEFF 		bl	TP_bt1120_PAL_1080P_mode0_w0
 7059              	.LVL1014:
 7060 00e8 03E0     		b	.L212
 7061              	.L217:
4575:Src/main.c    **** 									}
4576:Src/main.c    **** 								else
4577:Src/main.c    **** 									VXISI2CWrite(0x10,0x01);
 7062              		.loc 1 4577 0
 7063 00ea 1020     		movs	r0, #16
 7064 00ec 0121     		movs	r1, #1
 7065 00ee FFF7FEFF 		bl	VXISI2CWrite
 7066              	.LVL1015:
 7067              	.L212:
4578:Src/main.c    **** 
4579:Src/main.c    **** 										
4580:Src/main.c    **** 				}
4581:Src/main.c    **** 
4582:Src/main.c    **** 			#if (_External_Sync==OFF)
4583:Src/main.c    **** 			//SET_AHD_SYNC_PARA();
4584:Src/main.c    **** 			#endif
4585:Src/main.c    **** 		}	
4586:Src/main.c    **** 		// msleep(100) ;
4587:Src/main.c    **** 
4588:Src/main.c    **** 
4589:Src/main.c    **** 
4590:Src/main.c    **** 		
4591:Src/main.c    **** 			if(bSignal[1]==1)
 7068              		.loc 1 4591 0
 7069 00f2 104B     		ldr	r3, .L220+24
 7070 00f4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7071 00f6 012B     		cmp	r3, #1
 7072 00f8 04D1     		bne	.L218
4592:Src/main.c    **** 				Set_Video_Loss_OSD(1,OFF);
 7073              		.loc 1 4592 0
 7074 00fa 0120     		movs	r0, #1
 7075 00fc 0021     		movs	r1, #0
 7076 00fe FFF7FEFF 		bl	Set_Video_Loss_OSD
 7077              	.LVL1016:
 7078 0102 03E0     		b	.L210
 7079              	.L218:
4593:Src/main.c    **** 			else
4594:Src/main.c    **** 				Set_Video_Loss_OSD(1,ON);
 7080              		.loc 1 4594 0
 7081 0104 0120     		movs	r0, #1
 7082 0106 0146     		mov	r1, r0
 7083 0108 FFF7FEFF 		bl	Set_Video_Loss_OSD
ARM GAS  /tmp/ccxsI2YD.s 			page 226


 7084              	.LVL1017:
 7085              	.L210:
4595:Src/main.c    **** 			
4596:Src/main.c    **** 			break;
4597:Src/main.c    **** 		}
4598:Src/main.c    **** 	
4599:Src/main.c    **** 	
4600:Src/main.c    **** 
4601:Src/main.c    ****   		OSDSecCount = 0 ;
 7086              		.loc 1 4601 0
 7087 010c 0022     		movs	r2, #0
 7088 010e 0F4B     		ldr	r3, .L220+48
 7089 0110 1A70     		strb	r2, [r3]
4602:Src/main.c    **** 		   OSDStateFlg = 1 ;		
 7090              		.loc 1 4602 0
 7091 0112 0122     		movs	r2, #1
 7092 0114 0E4B     		ldr	r3, .L220+52
 7093 0116 1A70     		strb	r2, [r3]
 7094 0118 38BD     		pop	{r3, r4, r5, pc}
 7095              	.L221:
 7096 011a 00BF     		.align	2
 7097              	.L220:
 7098 011c 00000000 		.word	.LANCHOR17
 7099 0120 C0030000 		.word	.LC38
 7100 0124 00000000 		.word	pVS4210_MutiWindows1
 7101 0128 D4030000 		.word	.LC39
 7102 012c D8010000 		.word	.LC21
 7103 0130 00000000 		.word	.LANCHOR25
 7104 0134 00000000 		.word	.LANCHOR9
 7105 0138 FC030000 		.word	.LC40
 7106 013c 00000000 		.word	mode
 7107 0140 10040000 		.word	.LC41
 7108 0144 18040000 		.word	.LC42
 7109 0148 00000000 		.word	TP_InputMode
 7110 014c 00000000 		.word	.LANCHOR15
 7111 0150 00000000 		.word	.LANCHOR14
 7112              		.cfi_endproc
 7113              	.LFE100:
 7115              		.section	.text.main_loop,"ax",%progbits
 7116              		.align	2
 7117              		.global	main_loop
 7118              		.thumb
 7119              		.thumb_func
 7121              	main_loop:
 7122              	.LFB83:
2060:Src/main.c    **** 
 7123              		.loc 1 2060 0
 7124              		.cfi_startproc
 7125              		@ Volatile: function does not return.
 7126              		@ args = 0, pretend = 0, frame = 0
 7127              		@ frame_needed = 0, uses_anonymous_args = 0
 7128 0000 00B5     		push	{lr}
 7129              	.LCFI46:
 7130              		.cfi_def_cfa_offset 4
 7131              		.cfi_offset 14, -4
 7132 0002 83B0     		sub	sp, sp, #12
 7133              	.LCFI47:
ARM GAS  /tmp/ccxsI2YD.s 			page 227


 7134              		.cfi_def_cfa_offset 16
 7135              	.L238:
2071:Src/main.c    **** 	#endif
 7136              		.loc 1 2071 0
 7137 0004 5E4B     		ldr	r3, .L240
 7138 0006 1B68     		ldr	r3, [r3]
 7139 0008 012B     		cmp	r3, #1
 7140 000a 40F0A480 		bne	.L233
2074:Src/main.c    **** 	HDMI_AudioModeDetect() ;
 7141              		.loc 1 2074 0
 7142 000e FFF7FEFF 		bl	HDMI_VideoModeDetect
 7143              	.LVL1018:
2075:Src/main.c    **** 
 7144              		.loc 1 2075 0
 7145 0012 FFF7FEFF 		bl	HDMI_AudioModeDetect
 7146              	.LVL1019:
2077:Src/main.c    **** 	if (TxCount > 10 )
 7147              		.loc 1 2077 0
 7148 0016 5B4A     		ldr	r2, .L240+4
 7149 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 7150 001a 0133     		adds	r3, r3, #1
 7151 001c DBB2     		uxtb	r3, r3
 7152 001e 1370     		strb	r3, [r2]
2078:Src/main.c    **** 	{
 7153              		.loc 1 2078 0
 7154 0020 0A2B     		cmp	r3, #10
 7155 0022 04D9     		bls	.L224
2080:Src/main.c    **** 		HDMITX_DevLoopProc() ;
 7156              		.loc 1 2080 0
 7157 0024 0022     		movs	r2, #0
 7158 0026 574B     		ldr	r3, .L240+4
 7159 0028 1A70     		strb	r2, [r3]
2081:Src/main.c    **** 	}
 7160              		.loc 1 2081 0
 7161 002a FFF7FEFF 		bl	HDMITX_DevLoopProc
 7162              	.LVL1020:
 7163              	.L224:
2102:Src/main.c    **** 
 7164              		.loc 1 2102 0
 7165 002e 0A20     		movs	r0, #10
 7166 0030 FFF7FEFF 		bl	msleep
 7167              	.LVL1021:
2104:Src/main.c    **** 	   if (gMode0LoopCount > 100 )
 7168              		.loc 1 2104 0
 7169 0034 544A     		ldr	r2, .L240+8
 7170 0036 1388     		ldrh	r3, [r2]
 7171 0038 0133     		adds	r3, r3, #1
 7172 003a 9BB2     		uxth	r3, r3
 7173 003c 1380     		strh	r3, [r2]	@ movhi
2105:Src/main.c    **** 	   {
 7174              		.loc 1 2105 0
 7175 003e 642B     		cmp	r3, #100
 7176 0040 06D9     		bls	.L225
2107:Src/main.c    **** 		   OSDSecCount = OSDSecCount +1 ;
 7177              		.loc 1 2107 0
 7178 0042 0022     		movs	r2, #0
 7179 0044 504B     		ldr	r3, .L240+8
ARM GAS  /tmp/ccxsI2YD.s 			page 228


 7180 0046 1A80     		strh	r2, [r3]	@ movhi
2108:Src/main.c    **** 	   }
 7181              		.loc 1 2108 0
 7182 0048 504A     		ldr	r2, .L240+12
 7183 004a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 7184 004c 0133     		adds	r3, r3, #1
 7185 004e 1370     		strb	r3, [r2]
 7186              	.L225:
2111:Src/main.c    **** 	   {
 7187              		.loc 1 2111 0
 7188 0050 4E4B     		ldr	r3, .L240+12
 7189 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7190 0054 4E4A     		ldr	r2, .L240+16
 7191 0056 1268     		ldr	r2, [r2]
 7192 0058 9342     		cmp	r3, r2
 7193 005a 56D0     		beq	.L226
2113:Src/main.c    **** 		   if (gMode0LoopFlg == 1)
 7194              		.loc 1 2113 0
 7195 005c 4C4A     		ldr	r2, .L240+16
 7196 005e 1360     		str	r3, [r2]
2114:Src/main.c    **** 		   {
 7197              		.loc 1 2114 0
 7198 0060 4C4B     		ldr	r3, .L240+20
 7199 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7200 0064 012B     		cmp	r3, #1
 7201 0066 28D1     		bne	.L227
2116:Src/main.c    **** 			   if (gMode0LoopSecCount > gMode0LoopSecCmpVal)
 7202              		.loc 1 2116 0
 7203 0068 4B4A     		ldr	r2, .L240+24
 7204 006a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 7205 006c 0133     		adds	r3, r3, #1
 7206 006e DBB2     		uxtb	r3, r3
 7207 0070 1370     		strb	r3, [r2]
2117:Src/main.c    **** 			   {
 7208              		.loc 1 2117 0
 7209 0072 4A4A     		ldr	r2, .L240+28
 7210 0074 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7211 0076 9342     		cmp	r3, r2
 7212 0078 1FD9     		bls	.L227
2119:Src/main.c    **** 				   pVS4210_MutiWindows1.OutputMode = VS4210_FULL_MODE0 ;
 7213              		.loc 1 2119 0
 7214 007a 0021     		movs	r1, #0
 7215 007c 464B     		ldr	r3, .L240+24
 7216 007e 1970     		strb	r1, [r3]
2120:Src/main.c    **** 				   if (pVS4210_MutiWindows1.WindowMap.WMap0 < 4)
 7217              		.loc 1 2120 0
 7218 0080 474B     		ldr	r3, .L240+32
 7219 0082 1970     		strb	r1, [r3]
2121:Src/main.c    **** 				   {
 7220              		.loc 1 2121 0
 7221 0084 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7222 0086 032B     		cmp	r3, #3
 7223 0088 03D8     		bhi	.L228
2123:Src/main.c    **** 				   }
 7224              		.loc 1 2123 0
 7225 008a 0133     		adds	r3, r3, #1
 7226 008c 4449     		ldr	r1, .L240+32
ARM GAS  /tmp/ccxsI2YD.s 			page 229


 7227 008e 4B70     		strb	r3, [r1, #1]
 7228 0090 02E0     		b	.L229
 7229              	.L228:
2126:Src/main.c    **** 				   }
 7230              		.loc 1 2126 0
 7231 0092 0121     		movs	r1, #1
 7232 0094 424B     		ldr	r3, .L240+32
 7233 0096 5970     		strb	r1, [r3, #1]
 7234              	.L229:
2128:Src/main.c    **** 				   VS4210_SetMutiWindows(&pVS4210_MutiWindows1) ;
 7235              		.loc 1 2128 0
 7236 0098 414C     		ldr	r4, .L240+32
 7237 009a 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 7238 009c 0093     		str	r3, [sp]
 7239 009e 0192     		str	r2, [sp, #4]
 7240 00a0 4048     		ldr	r0, .L240+36
 7241 00a2 4149     		ldr	r1, .L240+40
 7242 00a4 414A     		ldr	r2, .L240+44
 7243 00a6 4FF40563 		mov	r3, #2128
 7244 00aa FFF7FEFF 		bl	printf
 7245              	.LVL1022:
2129:Src/main.c    **** 				   OSDSecCount = 0 ;
 7246              		.loc 1 2129 0
 7247 00ae 2046     		mov	r0, r4
 7248 00b0 FFF7FEFF 		bl	VS4210_SetMutiWindows
 7249              	.LVL1023:
2130:Src/main.c    **** 			   }
 7250              		.loc 1 2130 0
 7251 00b4 0022     		movs	r2, #0
 7252 00b6 354B     		ldr	r3, .L240+12
 7253 00b8 1A70     		strb	r2, [r3]
 7254              	.L227:
2134:Src/main.c    **** 		   {
 7255              		.loc 1 2134 0
 7256 00ba 364B     		ldr	r3, .L240+20
 7257 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7258 00be 012B     		cmp	r3, #1
 7259 00c0 0CD1     		bne	.L230
2136:Src/main.c    **** 		   }
 7260              		.loc 1 2136 0
 7261 00c2 374B     		ldr	r3, .L240+32
 7262 00c4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7263 00c6 0093     		str	r3, [sp]
 7264 00c8 304B     		ldr	r3, .L240+12
 7265 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7266 00cc 0193     		str	r3, [sp, #4]
 7267 00ce 3848     		ldr	r0, .L240+48
 7268 00d0 3549     		ldr	r1, .L240+40
 7269 00d2 364A     		ldr	r2, .L240+44
 7270 00d4 40F65803 		movw	r3, #2136
 7271 00d8 FFF7FEFF 		bl	printf
 7272              	.LVL1024:
 7273              	.L230:
2143:Src/main.c    **** 		   {
 7274              		.loc 1 2143 0
 7275 00dc 354B     		ldr	r3, .L240+52
 7276 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccxsI2YD.s 			page 230


 7277 00e0 012B     		cmp	r3, #1
 7278 00e2 0AD1     		bne	.L231
2145:Src/main.c    **** 			   {
 7279              		.loc 1 2145 0
 7280 00e4 294B     		ldr	r3, .L240+12
 7281 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7282 00e8 092B     		cmp	r3, #9
 7283 00ea 06D9     		bls	.L231
2147:Src/main.c    **** 				   OSDStateFlg = 0 ;
 7284              		.loc 1 2147 0
 7285 00ec 0023     		movs	r3, #0
 7286 00ee 274A     		ldr	r2, .L240+12
 7287 00f0 1370     		strb	r3, [r2]
2148:Src/main.c    **** 				   OSD_Clear_All();
 7288              		.loc 1 2148 0
 7289 00f2 304A     		ldr	r2, .L240+52
 7290 00f4 1370     		strb	r3, [r2]
2149:Src/main.c    **** 				   ////VXIS_fSetContentOsdOnOff(0) ;
 7291              		.loc 1 2149 0
 7292 00f6 FFF7FEFF 		bl	OSD_Clear_All
 7293              	.LVL1025:
 7294              	.L231:
2154:Src/main.c    **** 			VXISI2CWrite(0x32,0x80);
 7295              		.loc 1 2154 0
 7296 00fa 3220     		movs	r0, #50
 7297 00fc FFF7FEFF 		bl	VXISI2CRead
 7298              	.LVL1026:
 7299 0100 18B9     		cbnz	r0, .L226
2155:Src/main.c    **** 		   
 7300              		.loc 1 2155 0
 7301 0102 3220     		movs	r0, #50
 7302 0104 8021     		movs	r1, #128
 7303 0106 FFF7FEFF 		bl	VXISI2CWrite
 7304              	.LVL1027:
 7305              	.L226:
2160:Src/main.c    **** 	
 7306              		.loc 1 2160 0
 7307 010a FFF7FEFF 		bl	EQ_Detect
 7308              	.LVL1028:
2178:Src/main.c    **** 		if((CheckSelectInputMode!=SelectInputMode)/*&&(BOOT_ISSUE==0)*/)
 7309              		.loc 1 2178 0
 7310 010e 2A48     		ldr	r0, .L240+56
 7311 0110 1021     		movs	r1, #16
 7312 0112 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 7313              	.LVL1029:
 7314 0116 294B     		ldr	r3, .L240+60
 7315 0118 1870     		strb	r0, [r3]
2179:Src/main.c    **** 		{
 7316              		.loc 1 2179 0
 7317 011a 294B     		ldr	r3, .L240+64
 7318 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7319 011e 9842     		cmp	r0, r3
 7320 0120 19D0     		beq	.L233
2181:Src/main.c    **** 			CheckSelectInputMode=HDMI_SELECT_GET();
 7321              		.loc 1 2181 0
 7322 0122 3220     		movs	r0, #50
 7323 0124 FFF7FEFF 		bl	msleep
ARM GAS  /tmp/ccxsI2YD.s 			page 231


 7324              	.LVL1030:
2182:Src/main.c    **** 
 7325              		.loc 1 2182 0
 7326 0128 2348     		ldr	r0, .L240+56
 7327 012a 1021     		movs	r1, #16
 7328 012c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 7329              	.LVL1031:
 7330 0130 224B     		ldr	r3, .L240+60
 7331 0132 1870     		strb	r0, [r3]
2184:Src/main.c    **** 				{
 7332              		.loc 1 2184 0
 7333 0134 224B     		ldr	r3, .L240+64
 7334 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7335 0138 9842     		cmp	r0, r3
 7336 013a 0CD0     		beq	.L233
2186:Src/main.c    **** 
 7337              		.loc 1 2186 0
 7338 013c 204B     		ldr	r3, .L240+64
 7339 013e 1870     		strb	r0, [r3]
2190:Src/main.c    **** 					HS_Select_Win(1);
 7340              		.loc 1 2190 0
 7341 0140 0128     		cmp	r0, #1
 7342 0142 02D1     		bne	.L232
2191:Src/main.c    **** 				else
 7343              		.loc 1 2191 0
 7344 0144 FFF7FEFF 		bl	HS_Select_Win
 7345              	.LVL1032:
 7346 0148 05E0     		b	.L233
 7347              	.L232:
2193:Src/main.c    **** 				}
 7348              		.loc 1 2193 0
 7349 014a 0020     		movs	r0, #0
 7350 014c FFF7FEFF 		bl	HS_Select_Win
 7351              	.LVL1033:
 7352 0150 01E0     		b	.L233
 7353              	.L234:
2205:Src/main.c    **** 	}while(AccessEnable == 0);
 7354              		.loc 1 2205 0 discriminator 2
 7355 0152 FFF7FEFF 		bl	Monitor
 7356              	.LVL1034:
 7357              	.L233:
2205:Src/main.c    **** 	}while(AccessEnable == 0);
 7358              		.loc 1 2205 0 is_stmt 0 discriminator 1
 7359 0156 FFF7FEFF 		bl	RS_ready
 7360              	.LVL1035:
 7361 015a 0028     		cmp	r0, #0
 7362 015c F9D1     		bne	.L234
2206:Src/main.c    **** 	#endif
 7363              		.loc 1 2206 0 is_stmt 1
 7364 015e 084B     		ldr	r3, .L240
 7365 0160 1B68     		ldr	r3, [r3]
 7366 0162 002B     		cmp	r3, #0
 7367 0164 F7D0     		beq	.L233
 7368 0166 01E0     		b	.L236
 7369              	.L237:
2209:Src/main.c    **** 		
 7370              		.loc 1 2209 0 discriminator 2
ARM GAS  /tmp/ccxsI2YD.s 			page 232


 7371 0168 FFF7FEFF 		bl	TOAReceivePaser
 7372              	.LVL1036:
 7373              	.L236:
2209:Src/main.c    **** 		
 7374              		.loc 1 2209 0 is_stmt 0 discriminator 1
 7375 016c FFF7FEFF 		bl	RS2_ready
 7376              	.LVL1037:
 7377 0170 0028     		cmp	r0, #0
 7378 0172 F9D1     		bne	.L237
2211:Src/main.c    **** 
 7379              		.loc 1 2211 0 is_stmt 1
 7380 0174 FFF7FEFF 		bl	SysTimerHandler
 7381              	.LVL1038:
2213:Src/main.c    **** 
 7382              		.loc 1 2213 0
 7383 0178 FFF7FEFF 		bl	Get_2824cIrq
 7384              	.LVL1039:
2246:Src/main.c    **** 
 7385              		.loc 1 2246 0
 7386 017c 42E7     		b	.L238
 7387              	.L241:
 7388 017e 00BF     		.align	2
 7389              	.L240:
 7390 0180 00000000 		.word	AccessEnable
 7391 0184 00000000 		.word	.LANCHOR26
 7392 0188 00000000 		.word	.LANCHOR27
 7393 018c 00000000 		.word	.LANCHOR15
 7394 0190 00000000 		.word	.LANCHOR28
 7395 0194 00000000 		.word	.LANCHOR29
 7396 0198 00000000 		.word	.LANCHOR30
 7397 019c 00000000 		.word	.LANCHOR31
 7398 01a0 00000000 		.word	pVS4210_MutiWindows1
 7399 01a4 20040000 		.word	.LC43
 7400 01a8 D8010000 		.word	.LC21
 7401 01ac 00000000 		.word	.LANCHOR32
 7402 01b0 44040000 		.word	.LC44
 7403 01b4 00000000 		.word	.LANCHOR14
 7404 01b8 00080140 		.word	1073809408
 7405 01bc 00000000 		.word	.LANCHOR33
 7406 01c0 00000000 		.word	.LANCHOR17
 7407              		.cfi_endproc
 7408              	.LFE83:
 7410              		.section	.text.main,"ax",%progbits
 7411              		.align	2
 7412              		.global	main
 7413              		.thumb
 7414              		.thumb_func
 7416              	main:
 7417              	.LFB82:
1749:Src/main.c    ****   /* USER CODE BEGIN 1 */
 7418              		.loc 1 1749 0
 7419              		.cfi_startproc
 7420              		@ args = 0, pretend = 0, frame = 0
 7421              		@ frame_needed = 0, uses_anonymous_args = 0
 7422 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 7423              	.LCFI48:
 7424              		.cfi_def_cfa_offset 28
ARM GAS  /tmp/ccxsI2YD.s 			page 233


 7425              		.cfi_offset 4, -28
 7426              		.cfi_offset 5, -24
 7427              		.cfi_offset 6, -20
 7428              		.cfi_offset 7, -16
 7429              		.cfi_offset 8, -12
 7430              		.cfi_offset 9, -8
 7431              		.cfi_offset 14, -4
 7432 0004 83B0     		sub	sp, sp, #12
 7433              	.LCFI49:
 7434              		.cfi_def_cfa_offset 40
1751:Src/main.c    **** 
 7435              		.loc 1 1751 0
 7436 0006 0024     		movs	r4, #0
 7437 0008 684B     		ldr	r3, .L249
 7438 000a 1C60     		str	r4, [r3]
1768:Src/main.c    ****   
 7439              		.loc 1 1768 0
 7440 000c FFF7FEFF 		bl	HAL_Init
 7441              	.LVL1040:
1775:Src/main.c    **** 
 7442              		.loc 1 1775 0
 7443 0010 FFF7FEFF 		bl	SystemClock_Config
 7444              	.LVL1041:
1779:Src/main.c    **** 
 7445              		.loc 1 1779 0
 7446 0014 FFF7FEFF 		bl	InitialTimerEvent
 7447              	.LVL1042:
1784:Src/main.c    ****  // LCDPowerOFF();
 7448              		.loc 1 1784 0
 7449 0018 FFF7FEFF 		bl	MX_GPIO_Init
 7450              	.LVL1043:
1799:Src/main.c    ****   MX_USART1_UART_Init();
 7451              		.loc 1 1799 0
 7452 001c FFF7FEFF 		bl	MX_TIM3_Init
 7453              	.LVL1044:
1800:Src/main.c    ****   MX_USART2_UART_Init();
 7454              		.loc 1 1800 0
 7455 0020 FFF7FEFF 		bl	MX_USART1_UART_Init
 7456              	.LVL1045:
1801:Src/main.c    **** //  MX_ADC1_Init();
 7457              		.loc 1 1801 0
 7458 0024 FFF7FEFF 		bl	MX_USART2_UART_Init
 7459              	.LVL1046:
1808:Src/main.c    ****  SW_I2C1_Init() ;
 7460              		.loc 1 1808 0
 7461 0028 FFF7FEFF 		bl	SW_I2C0_Init
 7462              	.LVL1047:
1809:Src/main.c    ****  SW_I2C2_Init() ;
 7463              		.loc 1 1809 0
 7464 002c FFF7FEFF 		bl	SW_I2C1_Init
 7465              	.LVL1048:
1810:Src/main.c    ****  SW_I2C3_Init() ;
 7466              		.loc 1 1810 0
 7467 0030 FFF7FEFF 		bl	SW_I2C2_Init
 7468              	.LVL1049:
1811:Src/main.c    **** 
 7469              		.loc 1 1811 0
ARM GAS  /tmp/ccxsI2YD.s 			page 234


 7470 0034 FFF7FEFF 		bl	SW_I2C3_Init
 7471              	.LVL1050:
1818:Src/main.c    **** SET_Audio_Mute(ON);
 7472              		.loc 1 1818 0
 7473 0038 2046     		mov	r0, r4
 7474 003a 0121     		movs	r1, #1
 7475 003c FFF7FEFF 		bl	Set_Video_Loss_OSD
 7476              	.LVL1051:
1819:Src/main.c    **** 
 7477              		.loc 1 1819 0
 7478 0040 0120     		movs	r0, #1
 7479 0042 FFF7FEFF 		bl	SET_Audio_Mute
 7480              	.LVL1052:
1824:Src/main.c    ****   HAL_UART_Receive_IT(&huart1,(uint8_t*)Rx_data, 1);	//activate UART receive interrupt every time
 7481              		.loc 1 1824 0
 7482 0046 3220     		movs	r0, #50
 7483 0048 FFF7FEFF 		bl	msleep
 7484              	.LVL1053:
1825:Src/main.c    ****   HAL_UART_Receive_IT(&huart2,(uint8_t*)Rx2_data, 1);	//activate UART receive interrupt every time
 7485              		.loc 1 1825 0
 7486 004c 5848     		ldr	r0, .L249+4
 7487 004e 5949     		ldr	r1, .L249+8
 7488 0050 0122     		movs	r2, #1
 7489 0052 FFF7FEFF 		bl	HAL_UART_Receive_IT
 7490              	.LVL1054:
1826:Src/main.c    **** 
 7491              		.loc 1 1826 0
 7492 0056 5848     		ldr	r0, .L249+12
 7493 0058 5849     		ldr	r1, .L249+16
 7494 005a 0122     		movs	r2, #1
 7495 005c FFF7FEFF 		bl	HAL_UART_Receive_IT
 7496              	.LVL1055:
1830:Src/main.c    ****  TP2824_SET_REST(0);
 7497              		.loc 1 1830 0
 7498 0060 574E     		ldr	r6, .L249+20
 7499 0062 3046     		mov	r0, r6
 7500 0064 4FF48051 		mov	r1, #4096
 7501 0068 2246     		mov	r2, r4
 7502 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 7503              	.LVL1056:
1831:Src/main.c    **** 
 7504              		.loc 1 1831 0
 7505 006e 554D     		ldr	r5, .L249+24
 7506 0070 2846     		mov	r0, r5
 7507 0072 0221     		movs	r1, #2
 7508 0074 2246     		mov	r2, r4
 7509 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 7510              	.LVL1057:
1833:Src/main.c    ****   //HAL_GPIO_WritePin(TP2824_RST_GPIO_Port, VS_RST_Pin, 1); //VS4210 RST
 7511              		.loc 1 1833 0
 7512 007a 6420     		movs	r0, #100
 7513 007c FFF7FEFF 		bl	msleep
 7514              	.LVL1058:
1836:Src/main.c    ****  TP2824_SET_REST(1);
 7515              		.loc 1 1836 0
 7516 0080 3046     		mov	r0, r6
 7517 0082 4FF48051 		mov	r1, #4096
ARM GAS  /tmp/ccxsI2YD.s 			page 235


 7518 0086 0122     		movs	r2, #1
 7519 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 7520              	.LVL1059:
1837:Src/main.c    **** 
 7521              		.loc 1 1837 0
 7522 008c 2846     		mov	r0, r5
 7523 008e 0221     		movs	r1, #2
 7524 0090 0122     		movs	r2, #1
 7525 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 7526              	.LVL1060:
1851:Src/main.c    ****   {
 7527              		.loc 1 1851 0
 7528 0096 20E0     		b	.L243
 7529              	.LVL1061:
 7530              	.L244:
1853:Src/main.c    ****       dbg_Printf("Init HDMI RX,Chip(%d)....\r\n",(int)i ) ;
 7531              		.loc 1 1853 0 discriminator 3
 7532 0098 4B4B     		ldr	r3, .L249+28
 7533 009a 1C70     		strb	r4, [r3]
1854:Src/main.c    ****       InitHDMIRX(0);
 7534              		.loc 1 1854 0 discriminator 3
 7535 009c 4B4E     		ldr	r6, .L249+32
 7536 009e 4C4D     		ldr	r5, .L249+36
 7537 00a0 0094     		str	r4, [sp]
 7538 00a2 4C48     		ldr	r0, .L249+40
 7539 00a4 3146     		mov	r1, r6
 7540 00a6 2A46     		mov	r2, r5
 7541 00a8 40F23E73 		movw	r3, #1854
 7542 00ac FFF7FEFF 		bl	printf
 7543              	.LVL1062:
1855:Src/main.c    ****       HDMIRX_WriteI2C_Byte(0x89 ,0x80);
 7544              		.loc 1 1855 0 discriminator 3
 7545 00b0 0020     		movs	r0, #0
 7546 00b2 FFF7FEFF 		bl	InitHDMIRX
 7547              	.LVL1063:
1856:Src/main.c    **** 
 7548              		.loc 1 1856 0 discriminator 3
 7549 00b6 8920     		movs	r0, #137
 7550 00b8 8021     		movs	r1, #128
 7551 00ba FFF7FEFF 		bl	HDMIRX_WriteI2C_Byte
 7552              	.LVL1064:
1859:Src/main.c    ****       dbg_Printf("IT66021 chip num=%d , 02reg=0x%02x\r\n", (int )i , (int)val ) ;
 7553              		.loc 1 1859 0 discriminator 3
 7554 00be 0220     		movs	r0, #2
 7555 00c0 FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 7556              	.LVL1065:
1860:Src/main.c    **** #endif
 7557              		.loc 1 1860 0 discriminator 3
 7558 00c4 0094     		str	r4, [sp]
 7559 00c6 0190     		str	r0, [sp, #4]
 7560 00c8 4348     		ldr	r0, .L249+44
 7561              	.LVL1066:
 7562 00ca 3146     		mov	r1, r6
 7563 00cc 2A46     		mov	r2, r5
 7564 00ce 40F24473 		movw	r3, #1860
 7565 00d2 FFF7FEFF 		bl	printf
 7566              	.LVL1067:
ARM GAS  /tmp/ccxsI2YD.s 			page 236


1851:Src/main.c    ****   {
 7567              		.loc 1 1851 0 discriminator 3
 7568 00d6 0134     		adds	r4, r4, #1
 7569              	.LVL1068:
 7570 00d8 E4B2     		uxtb	r4, r4
 7571              	.LVL1069:
 7572              	.L243:
1851:Src/main.c    ****   {
 7573              		.loc 1 1851 0 is_stmt 0 discriminator 1
 7574 00da 012C     		cmp	r4, #1
 7575 00dc DCD9     		bls	.L244
1873:Src/main.c    **** 	  #endif
 7576              		.loc 1 1873 0 is_stmt 1
 7577 00de 3F4C     		ldr	r4, .L249+48
 7578              	.LVL1070:
 7579 00e0 0025     		movs	r5, #0
 7580 00e2 2570     		strb	r5, [r4]
1876:Src/main.c    ****   pVS4210_MutiWindows1.OutputSize = _OUTPUT_1080P60 ;
 7581              		.loc 1 1876 0
 7582 00e4 6571     		strb	r5, [r4, #5]
1877:Src/main.c    **** 	#ifdef VS4210_SELECT_WIN1	//20201211-02
 7583              		.loc 1 1877 0
 7584 00e6 0126     		movs	r6, #1
 7585 00e8 A671     		strb	r6, [r4, #6]
1884:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap1 = 2 ; //set ch2 = video2
 7586              		.loc 1 1884 0
 7587 00ea 6670     		strb	r6, [r4, #1]
1885:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap2 = 3 ; //set ch3 = video3
 7588              		.loc 1 1885 0
 7589 00ec 0223     		movs	r3, #2
 7590 00ee A370     		strb	r3, [r4, #2]
1886:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap3 = 4 ; //set ch4 = video4
 7591              		.loc 1 1886 0
 7592 00f0 0327     		movs	r7, #3
 7593 00f2 E770     		strb	r7, [r4, #3]
1887:Src/main.c    **** 	#endif
 7594              		.loc 1 1887 0
 7595 00f4 0423     		movs	r3, #4
 7596 00f6 2371     		strb	r3, [r4, #4]
1891:Src/main.c    **** 
 7597              		.loc 1 1891 0
 7598 00f8 0F20     		movs	r0, #15
 7599 00fa 3949     		ldr	r1, .L249+52
 7600 00fc FFF7FEFF 		bl	VXOSD_UseFont_init
 7601              	.LVL1071:
1893:Src/main.c    **** #endif
 7602              		.loc 1 1893 0
 7603 0100 FFF7FEFF 		bl	main_init
 7604              	.LVL1072:
1901:Src/main.c    **** 
 7605              		.loc 1 1901 0
 7606 0104 FFF7FEFF 		bl	Init_TP280x_RegSet
 7607              	.LVL1073:
1905:Src/main.c    ****    dbg_Printf("VS4210 chip ID = 0x%02x\r\n",(int)val) ;
 7608              		.loc 1 1905 0
 7609 0108 2846     		mov	r0, r5
 7610 010a FFF7FEFF 		bl	VXISI2CRead
ARM GAS  /tmp/ccxsI2YD.s 			page 237


 7611              	.LVL1074:
1906:Src/main.c    ****    dbg_Printf("VS4210 Init. (Startting...)\r\n") ;
 7612              		.loc 1 1906 0
 7613 010e DFF8BC90 		ldr	r9, .L249+32
 7614 0112 DFF8BC80 		ldr	r8, .L249+36
 7615 0116 0090     		str	r0, [sp]
 7616 0118 3248     		ldr	r0, .L249+56
 7617              	.LVL1075:
 7618 011a 4946     		mov	r1, r9
 7619 011c 4246     		mov	r2, r8
 7620 011e 40F27273 		movw	r3, #1906
 7621 0122 FFF7FEFF 		bl	printf
 7622              	.LVL1076:
1907:Src/main.c    **** #endif
 7623              		.loc 1 1907 0
 7624 0126 3048     		ldr	r0, .L249+60
 7625 0128 4946     		mov	r1, r9
 7626 012a 4246     		mov	r2, r8
 7627 012c 40F27373 		movw	r3, #1907
 7628 0130 FFF7FEFF 		bl	printf
 7629              	.LVL1077:
1910:Src/main.c    ****   //pVS4210_MutiWindows1.DrawOSDFlg = 0x00 ;  //Enable OSD, bit1=Title, bit0 = bar
 7630              		.loc 1 1910 0
 7631 0134 E771     		strb	r7, [r4, #7]
1920:Src/main.c    ****   //pVS4210_MutiWindows1.OutputSize = _OUTPUT_720P60 ;
 7632              		.loc 1 1920 0
 7633 0136 A671     		strb	r6, [r4, #6]
1923:Src/main.c    ****   pVS4210_MutiWindows1.DrawBoxColor= _EN_DRAWBOX_COLOR_White ;
 7634              		.loc 1 1923 0
 7635 0138 2572     		strb	r5, [r4, #8]
1924:Src/main.c    ****   VXIS_fSetOsdx2(0) ;
 7636              		.loc 1 1924 0
 7637 013a 6572     		strb	r5, [r4, #9]
1925:Src/main.c    **** 
 7638              		.loc 1 1925 0
 7639 013c 2846     		mov	r0, r5
 7640 013e FFF7FEFF 		bl	VXIS_fSetOsdx2
 7641              	.LVL1078:
1927:Src/main.c    **** 
 7642              		.loc 1 1927 0
 7643 0142 2046     		mov	r0, r4
 7644 0144 FFF7FEFF 		bl	VS4210_SetMutiWindows
 7645              	.LVL1079:
1929:Src/main.c    ****   {
 7646              		.loc 1 1929 0
 7647 0148 E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
 7648 014a 3BB1     		cbz	r3, .L245
1931:Src/main.c    ****         Tim1_count = 0 ;
 7649              		.loc 1 1931 0
 7650 014c 274B     		ldr	r3, .L249+64
 7651 014e 1E60     		str	r6, [r3]
1932:Src/main.c    ****         OSDStateFlg = 1 ;
 7652              		.loc 1 1932 0
 7653 0150 2749     		ldr	r1, .L249+68
 7654 0152 0D60     		str	r5, [r1]
1933:Src/main.c    ****         OSDSecCount = 0 ;
 7655              		.loc 1 1933 0
ARM GAS  /tmp/ccxsI2YD.s 			page 238


 7656 0154 2749     		ldr	r1, .L249+72
 7657 0156 0E70     		strb	r6, [r1]
1934:Src/main.c    ****   }  
 7658              		.loc 1 1934 0
 7659 0158 274A     		ldr	r2, .L249+76
 7660 015a 1570     		strb	r5, [r2]
 7661              	.L245:
1937:Src/main.c    **** memset(&ExOsdContent[1] ,_spc , (EXTERNOSDNUMBER+1) *2 ) ;
 7662              		.loc 1 1937 0
 7663 015c 2748     		ldr	r0, .L249+80
 7664 015e 5D23     		movs	r3, #93
 7665 0160 00F8013B 		strb	r3, [r0], #1
1938:Src/main.c    **** exosdLen = 4*EXTERNOSDNUMBER + 4  ;
 7666              		.loc 1 1938 0
 7667 0164 6D21     		movs	r1, #109
 7668 0166 2022     		movs	r2, #32
 7669 0168 FFF7FEFF 		bl	memset
 7670              	.LVL1080:
1941:Src/main.c    **** for (i = exosdStart ; i <= exosdLen ;i = i+2 )
 7671              		.loc 1 1941 0
 7672 016c 0122     		movs	r2, #1
1942:Src/main.c    **** {
 7673              		.loc 1 1942 0
 7674 016e 2123     		movs	r3, #33
 7675 0170 0AE0     		b	.L246
 7676              	.LVL1081:
 7677              	.L247:
1944:Src/main.c    **** 	ExOsdContent[i+1] = _spc ;
 7678              		.loc 1 1944 0 discriminator 3
 7679 0172 2249     		ldr	r1, .L249+80
 7680 0174 02F17F00 		add	r0, r2, #127
 7681 0178 C854     		strb	r0, [r1, r3]
1945:Src/main.c    **** 	j++ ;
 7682              		.loc 1 1945 0 discriminator 3
 7683 017a 581C     		adds	r0, r3, #1
 7684 017c 6D24     		movs	r4, #109
 7685 017e 0C54     		strb	r4, [r1, r0]
1946:Src/main.c    **** }
 7686              		.loc 1 1946 0 discriminator 3
 7687 0180 0132     		adds	r2, r2, #1
 7688              	.LVL1082:
 7689 0182 D2B2     		uxtb	r2, r2
 7690              	.LVL1083:
1942:Src/main.c    **** {
 7691              		.loc 1 1942 0 discriminator 3
 7692 0184 0233     		adds	r3, r3, #2
 7693              	.LVL1084:
 7694 0186 DBB2     		uxtb	r3, r3
 7695              	.LVL1085:
 7696              	.L246:
1942:Src/main.c    **** {
 7697              		.loc 1 1942 0 is_stmt 0 discriminator 1
 7698 0188 402B     		cmp	r3, #64
 7699 018a F2D9     		bls	.L247
1948:Src/main.c    ****   exosdLen = EXTERNOSDNUMBER *2  ;
 7700              		.loc 1 1948 0 is_stmt 1
 7701 018c 1C48     		ldr	r0, .L249+84
ARM GAS  /tmp/ccxsI2YD.s 			page 239


 7702 018e 6D21     		movs	r1, #109
 7703 0190 1F22     		movs	r2, #31
 7704              	.LVL1086:
 7705 0192 FFF7FEFF 		bl	memset
 7706              	.LVL1087:
1951:Src/main.c    **** //test@end
 7707              		.loc 1 1951 0
 7708 0196 0020     		movs	r0, #0
 7709 0198 FFF7FEFF 		bl	Audio_Sel
 7710              	.LVL1088:
2014:Src/main.c    ****   /* USER CODE END 2 */
 7711              		.loc 1 2014 0
 7712 019c 1948     		ldr	r0, .L249+88
 7713 019e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 7714              	.LVL1089:
2031:Src/main.c    **** 
 7715              		.loc 1 2031 0
 7716 01a2 1948     		ldr	r0, .L249+92
 7717 01a4 FFF7FEFF 		bl	printf
 7718              	.LVL1090:
2044:Src/main.c    **** 	
 7719              		.loc 1 2044 0
 7720 01a8 FFF7FEFF 		bl	main_loop
 7721              	.LVL1091:
 7722              	.L250:
 7723              		.align	2
 7724              	.L249:
 7725 01ac 00000000 		.word	.LANCHOR34
 7726 01b0 00000000 		.word	huart1
 7727 01b4 00000000 		.word	.LANCHOR23
 7728 01b8 00000000 		.word	huart2
 7729 01bc 00000000 		.word	.LANCHOR24
 7730 01c0 000C0140 		.word	1073810432
 7731 01c4 00100140 		.word	1073811456
 7732 01c8 00000000 		.word	gHDMI_Index
 7733 01cc D8010000 		.word	.LC21
 7734 01d0 00000000 		.word	.LANCHOR35
 7735 01d4 68040000 		.word	.LC45
 7736 01d8 90040000 		.word	.LC46
 7737 01dc 00000000 		.word	pVS4210_MutiWindows1
 7738 01e0 00000000 		.word	UserDefineFont1
 7739 01e4 C0040000 		.word	.LC47
 7740 01e8 E4040000 		.word	.LC48
 7741 01ec 00000000 		.word	.LANCHOR12
 7742 01f0 00000000 		.word	.LANCHOR13
 7743 01f4 00000000 		.word	.LANCHOR14
 7744 01f8 00000000 		.word	.LANCHOR15
 7745 01fc 00000000 		.word	ExOsdContent
 7746 0200 3F000000 		.word	ExOsdContent+63
 7747 0204 00000000 		.word	htim3
 7748 0208 0C050000 		.word	.LC49
 7749              		.cfi_endproc
 7750              	.LFE82:
 7752              		.section	.text.Error_Handler,"ax",%progbits
 7753              		.align	2
 7754              		.global	Error_Handler
 7755              		.thumb
ARM GAS  /tmp/ccxsI2YD.s 			page 240


 7756              		.thumb_func
 7758              	Error_Handler:
 7759              	.LFB101:
4603:Src/main.c    **** }
4604:Src/main.c    **** 
4605:Src/main.c    **** /* USER CODE END 4 */
4606:Src/main.c    **** 
4607:Src/main.c    **** /**
4608:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
4609:Src/main.c    ****   * @retval None
4610:Src/main.c    ****   */
4611:Src/main.c    **** void Error_Handler(void)
4612:Src/main.c    **** {
 7760              		.loc 1 4612 0
 7761              		.cfi_startproc
 7762              		@ args = 0, pretend = 0, frame = 0
 7763              		@ frame_needed = 0, uses_anonymous_args = 0
 7764              		@ link register save eliminated.
 7765 0000 7047     		bx	lr
 7766              		.cfi_endproc
 7767              	.LFE101:
 7769              		.global	OSDStateFlg
 7770              		.global	OSDSecCount
 7771              		.comm	pVS4210_JointKind1,10,4
 7772              		.global	gRxLoopFlg
 7773              		.comm	gabVXIS_Input_mirrorH,4,4
 7774              		.global	OSD_Show_Flg
 7775              		.global	Tim1_count
 7776              		.comm	pVS4210_MutiWindows1,10,4
 7777              		.global	TxCount
 7778              		.global	bSignal
 7779              		.global	gMode0LoopSecCmpVal
 7780              		.global	gMode0LoopSecCount
 7781              		.global	gMode0LoopFlg
 7782              		.global	gMode0LoopCount
 7783              		.global	gbAUDO_INDEX
 7784              		.comm	gPrebAUDO_INDEX,1,1
 7785              		.comm	gPreAudioSampleFreq,1,1
 7786              		.global	CheckSelectInputMode
 7787              		.global	SelectInputMode
 7788              		.global	OSDPreSecCount
 7789              		.global	PrebVXIS_InputMode
 7790              		.comm	ExOsdContent,256,4
 7791              		.global	CURRENT_CH
 7792              		.global	BOOT_ISSUE
 7793              		.global	OSD_SPEAKER
 7794              		.global	OSD_MIRROR
 7795              		.comm	CAMR_M,1,1
 7796              		.comm	CAMC_M,1,1
 7797              		.comm	CAMB_M,1,1
 7798              		.comm	CAMA_M,1,1
 7799              		.comm	Priority,1,1
 7800              		.comm	SelectModeType,1,1
 7801              		.global	tptic
 7802              		.global	keytic
 7803              		.global	PowerFlag
 7804              		.comm	TimeStep,1,1
ARM GAS  /tmp/ccxsI2YD.s 			page 241


 7805              		.global	PWMLevel
 7806              		.global	AutoDayNightDelay
 7807              		.global	LightSensor_ADC
 7808              		.global	DayNightLevel
 7809              		.comm	DebugLevel,1,1
 7810              		.global	half_scaler
 7811              		.comm	ManVidRes,1,1
 7812              		.global	VS8812_ADDR
 7813              		.global	VS4210_ADDR
 7814              		.comm	htim2,64,4
 7815              		.comm	hadc1,48,4
 7816              		.comm	huart2,64,4
 7817              		.comm	huart1,64,4
 7818              		.comm	htim3,64,4
 7819              		.comm	newInRes,4,4
 7820 0002 00BF     		.section	.data.PWMLevel,"aw",%progbits
 7821              		.set	.LANCHOR19,. + 0
 7824              	PWMLevel:
 7825 0000 80       		.byte	-128
 7826              		.section	.bss.Tim1_count,"aw",%nobits
 7827              		.align	2
 7828              		.set	.LANCHOR13,. + 0
 7831              	Tim1_count:
 7832 0000 00000000 		.space	4
 7833              		.section	.bss.DayNightLevel,"aw",%nobits
 7834              		.set	.LANCHOR18,. + 0
 7837              	DayNightLevel:
 7838 0000 00       		.space	1
 7839              		.section	.bss.IR_Code,"aw",%nobits
 7842              	IR_Code:
 7843 0000 00       		.space	1
 7844              		.section	.bss.SelectInputMode,"aw",%nobits
 7845              		.set	.LANCHOR17,. + 0
 7848              	SelectInputMode:
 7849 0000 00       		.space	1
 7850              		.section	.bss.bSignal,"aw",%nobits
 7851              		.align	2
 7852              		.set	.LANCHOR9,. + 0
 7855              	bSignal:
 7856 0000 00000000 		.space	4
 7857              		.section	.bss.DebugFlg,"aw",%nobits
 7858              		.align	2
 7861              	DebugFlg:
 7862 0000 00000000 		.space	4
 7863              		.section	.bss.PreIR_IRQ_Index,"aw",%nobits
 7866              	PreIR_IRQ_Index:
 7867 0000 00       		.space	1
 7868              		.section	.bss.RxBufIndex,"aw",%nobits
 7869              		.align	2
 7870              		.set	.LANCHOR3,. + 0
 7873              	RxBufIndex:
 7874 0000 00000000 		.space	4
 7875              		.section	.bss.gMode0LoopSecCount,"aw",%nobits
 7876              		.set	.LANCHOR30,. + 0
 7879              	gMode0LoopSecCount:
 7880 0000 00       		.space	1
 7881              		.section	.rodata.str1.4,"aMS",%progbits,1
ARM GAS  /tmp/ccxsI2YD.s 			page 242


 7882              		.align	2
 7883              	.LC0:
 7884 0000 282A5345 		.ascii	"(*SET_Audio_Mute=%d)\000"
 7884      545F4175 
 7884      64696F5F 
 7884      4D757465 
 7884      3D256429 
 7885 0015 000000   		.space	3
 7886              	.LC1:
 7887 0018 52784275 		.ascii	"RxBufIndex=%d,str=%s\015\012\000"
 7887      66496E64 
 7887      65783D25 
 7887      642C7374 
 7887      723D2573 
 7888 002f 00       		.space	1
 7889              	.LC2:
 7890 0030 49724E75 		.ascii	"IrNum=0x%02x\015\012\000"
 7890      6D3D3078 
 7890      25303278 
 7890      0D0A00
 7891 003f 00       		.space	1
 7892              	.LC3:
 7893 0040 56533432 		.ascii	"VS4210_MODE0_w0\015\000"
 7893      31305F4D 
 7893      4F444530 
 7893      5F77300D 
 7893      00
 7894 0051 000000   		.space	3
 7895              	.LC4:
 7896 0054 56533432 		.ascii	"VS4210_MODE0_w1\015\000"
 7896      31305F4D 
 7896      4F444530 
 7896      5F77310D 
 7896      00
 7897 0065 000000   		.space	3
 7898              	.LC5:
 7899 0068 56533432 		.ascii	"VS4210_MODE0_w2\015\000"
 7899      31305F4D 
 7899      4F444530 
 7899      5F77320D 
 7899      00
 7900 0079 000000   		.space	3
 7901              	.LC6:
 7902 007c 56533432 		.ascii	"VS4210_MODE0_w3\015\000"
 7902      31305F4D 
 7902      4F444530 
 7902      5F77330D 
 7902      00
 7903 008d 000000   		.space	3
 7904              	.LC7:
 7905 0090 56533432 		.ascii	"VS4210_MODE1\015\000"
 7905      31305F4D 
 7905      4F444531 
 7905      0D00
 7906 009e 0000     		.space	2
 7907              	.LC8:
 7908 00a0 56533432 		.ascii	"VS4210_MODE2\015\000"
ARM GAS  /tmp/ccxsI2YD.s 			page 243


 7908      31305F4D 
 7908      4F444532 
 7908      0D00
 7909 00ae 0000     		.space	2
 7910              	.LC9:
 7911 00b0 56533432 		.ascii	"VS4210_MODE12 ch1 ch2\015\000"
 7911      31305F4D 
 7911      4F444531 
 7911      32206368 
 7911      31206368 
 7912 00c7 00       		.space	1
 7913              	.LC10:
 7914 00c8 56533432 		.ascii	"VS4210_MODE12 ch1 ch4\015\000"
 7914      31305F4D 
 7914      4F444531 
 7914      32206368 
 7914      31206368 
 7915 00df 00       		.space	1
 7916              	.LC11:
 7917 00e0 56533432 		.ascii	"VS4210_MODE12 ch4 ch2\015\000"
 7917      31305F4D 
 7917      4F444531 
 7917      32206368 
 7917      34206368 
 7918 00f7 00       		.space	1
 7919              	.LC12:
 7920 00f8 56533432 		.ascii	"VS4210_MODE12 ch4 ch3\015\000"
 7920      31305F4D 
 7920      4F444531 
 7920      32206368 
 7920      34206368 
 7921 010f 00       		.space	1
 7922              	.LC13:
 7923 0110 56533432 		.ascii	"VS4210_MODE12 ch2 ch1\015\000"
 7923      31305F4D 
 7923      4F444531 
 7923      32206368 
 7923      32206368 
 7924 0127 00       		.space	1
 7925              	.LC14:
 7926 0128 56533432 		.ascii	"VS4210_MODE12 ch2 ch3\015\000"
 7926      31305F4D 
 7926      4F444531 
 7926      32206368 
 7926      32206368 
 7927 013f 00       		.space	1
 7928              	.LC15:
 7929 0140 56533432 		.ascii	"VS4210_MODE12 ch2 ch4\015\000"
 7929      31305F4D 
 7929      4F444531 
 7929      32206368 
 7929      32206368 
 7930 0157 00       		.space	1
 7931              	.LC16:
 7932 0158 56533432 		.ascii	"VS4210_MODE12 ch1 ch3\015\000"
 7932      31305F4D 
 7932      4F444531 
ARM GAS  /tmp/ccxsI2YD.s 			page 244


 7932      32206368 
 7932      31206368 
 7933 016f 00       		.space	1
 7934              	.LC17:
 7935 0170 56533432 		.ascii	"VS4210_MODE12 ch3 ch2\015\000"
 7935      31305F4D 
 7935      4F444531 
 7935      32206368 
 7935      33206368 
 7936 0187 00       		.space	1
 7937              	.LC18:
 7938 0188 56533432 		.ascii	"VS4210_MODE12 ch3 ch4\015\000"
 7938      31305F4D 
 7938      4F444531 
 7938      32206368 
 7938      33206368 
 7939 019f 00       		.space	1
 7940              	.LC19:
 7941 01a0 56533432 		.ascii	"VS4210_MODE12 ch3 ch1\015\000"
 7941      31305F4D 
 7941      4F444531 
 7941      32206368 
 7941      33206368 
 7942 01b7 00       		.space	1
 7943              	.LC20:
 7944 01b8 25732C25 		.ascii	"%s,%s,%d:ch%d, InputMode=%d \015\012\000"
 7944      732C2564 
 7944      3A636825 
 7944      642C2049 
 7944      6E707574 
 7945 01d7 00       		.space	1
 7946              	.LC21:
 7947 01d8 5372632F 		.ascii	"Src/main.c\000"
 7947      6D61696E 
 7947      2E6300
 7948 01e3 00       		.space	1
 7949              	.LC22:
 7950 01e4 25732C25 		.ascii	"%s,%s,%d:##ch%d, VS4210_Rx_NoSignal\015\012\000"
 7950      732C2564 
 7950      3A232363 
 7950      6825642C 
 7950      20565334 
 7951 020a 0000     		.space	2
 7952              	.LC23:
 7953 020c 25732C25 		.ascii	"%s,%s,%d:ch%d, HDMI=720P50 no support\015\012\000"
 7953      732C2564 
 7953      3A636825 
 7953      642C2048 
 7953      444D493D 
 7954              	.LC24:
 7955 0234 0D0A5072 		.ascii	"\015\012Prev.FW:%04x\015\012\000"
 7955      65762E46 
 7955      573A2530 
 7955      34780D0A 
 7955      00
 7956 0245 000000   		.space	3
 7957              	.LC25:
ARM GAS  /tmp/ccxsI2YD.s 			page 245


 7958 0248 0D0A4375 		.ascii	"\015\012Curr.FW:%04x\000"
 7958      72722E46 
 7958      573A2530 
 7958      347800
 7959 0257 00       		.space	1
 7960              	.LC26:
 7961 0258 0D0A5B4D 		.ascii	"\015\012[MSG]main_init()=> rev != FWVER & call Clea"
 7961      53475D6D 
 7961      61696E5F 
 7961      696E6974 
 7961      28293D3E 
 7962 0285 72426173 		.ascii	"rBasicEE()\015\012\000"
 7962      69634545 
 7962      28290D0A 
 7962      00
 7963 0292 0000     		.space	2
 7964              	.LC27:
 7965 0294 0D0A4361 		.ascii	"\015\012Cannot access EEPROM!!!!\000"
 7965      6E6E6F74 
 7965      20616363 
 7965      65737320 
 7965      45455052 
 7966 02af 00       		.space	1
 7967              	.LC28:
 7968 02b0 0D0A4E6F 		.ascii	"\015\012No initialize\000"
 7968      20696E69 
 7968      7469616C 
 7968      697A6500 
 7969              	.LC29:
 7970 02c0 0D0A2850 		.ascii	"\015\012(Power off..)\000"
 7970      6F776572 
 7970      206F6666 
 7970      2E2E2900 
 7971              	.LC30:
 7972 02d0 0D0A2850 		.ascii	"\015\012(Power ON..)\000"
 7972      6F776572 
 7972      204F4E2E 
 7972      2E2900
 7973 02df 00       		.space	1
 7974              	.LC31:
 7975 02e0 0D0A4C6F 		.ascii	"\015\012Loading VS4210 AHD table 1080P... \000"
 7975      6164696E 
 7975      67205653 
 7975      34323130 
 7975      20414844 
 7976 0305 000000   		.space	3
 7977              	.LC32:
 7978 0308 0D0A4C6F 		.ascii	"\015\012Loading VS4210 AHD table 720P... \000"
 7978      6164696E 
 7978      67205653 
 7978      34323130 
 7978      20414844 
 7979              	.LC33:
 7980 032c 0D0A4C6F 		.ascii	"\015\012Loading VS4210 AHD table NTSC... \000"
 7980      6164696E 
 7980      67205653 
 7980      34323130 
ARM GAS  /tmp/ccxsI2YD.s 			page 246


 7980      20414844 
 7981              	.LC34:
 7982 0350 0D0A4C6F 		.ascii	"\015\012Loading VS4210 AHD table PAL... \000"
 7982      6164696E 
 7982      67205653 
 7982      34323130 
 7982      20414844 
 7983 0373 00       		.space	1
 7984              	.LC35:
 7985 0374 0D0A5345 		.ascii	"\015\012SET_VS4210_720_480_out \000"
 7985      545F5653 
 7985      34323130 
 7985      5F373230 
 7985      5F343830 
 7986 038e 0000     		.space	2
 7987              	.LC36:
 7988 0390 0D0A5345 		.ascii	"\015\012SET_VS4210_1280_720_out\000"
 7988      545F5653 
 7988      34323130 
 7988      5F313238 
 7988      305F3732 
 7989 03aa 0000     		.space	2
 7990              	.LC37:
 7991 03ac 0D0A5345 		.ascii	"\015\012SET_AHD_MDOE...\000"
 7991      545F4148 
 7991      445F4D44 
 7991      4F452E2E 
 7991      2E00
 7992 03be 0000     		.space	2
 7993              	.LC38:
 7994 03c0 53656C65 		.ascii	"Selected window 0\015\000"
 7994      63746564 
 7994      2077696E 
 7994      646F7720 
 7994      300D00
 7995 03d3 00       		.space	1
 7996              	.LC39:
 7997 03d4 25732C25 		.ascii	"%s,%s,%d:ch1, HDMI=720P50  no support\015\012\000"
 7997      732C2564 
 7997      3A636831 
 7997      2C204844 
 7997      4D493D37 
 7998              	.LC40:
 7999 03fc 53656C65 		.ascii	"Selected window 1\015\000"
 7999      63746564 
 7999      2077696E 
 7999      646F7720 
 7999      310D00
 8000 040f 00       		.space	1
 8001              	.LC41:
 8002 0410 283D3129 		.ascii	"(=1)\000"
 8002      00
 8003 0415 000000   		.space	3
 8004              	.LC42:
 8005 0418 283D3229 		.ascii	"(=2)\000"
 8005      00
 8006 041d 000000   		.space	3
ARM GAS  /tmp/ccxsI2YD.s 			page 247


 8007              	.LC43:
 8008 0420 25732C25 		.ascii	"%s,%s,%d:LOOP CH=%d,SMP Sec=%d\015\012\000"
 8008      732C2564 
 8008      3A4C4F4F 
 8008      50204348 
 8008      3D25642C 
 8009 0441 000000   		.space	3
 8010              	.LC44:
 8011 0444 25732C25 		.ascii	"%s,%s,%d:Loop CH=%d,SecCount=%d\015\012\000"
 8011      732C2564 
 8011      3A4C6F6F 
 8011      70204348 
 8011      3D25642C 
 8012 0466 0000     		.space	2
 8013              	.LC45:
 8014 0468 25732C25 		.ascii	"%s,%s,%d:Init HDMI RX,Chip(%d)....\015\012\000"
 8014      732C2564 
 8014      3A496E69 
 8014      74204844 
 8014      4D492052 
 8015 048d 000000   		.space	3
 8016              	.LC46:
 8017 0490 25732C25 		.ascii	"%s,%s,%d:IT66021 chip num=%d , 02reg=0x%02x\015\012"
 8017      732C2564 
 8017      3A495436 
 8017      36303231 
 8017      20636869 
 8018 04bd 00       		.ascii	"\000"
 8019 04be 0000     		.space	2
 8020              	.LC47:
 8021 04c0 25732C25 		.ascii	"%s,%s,%d:VS4210 chip ID = 0x%02x\015\012\000"
 8021      732C2564 
 8021      3A565334 
 8021      32313020 
 8021      63686970 
 8022 04e3 00       		.space	1
 8023              	.LC48:
 8024 04e4 25732C25 		.ascii	"%s,%s,%d:VS4210 Init. (Startting...)\015\012\000"
 8024      732C2564 
 8024      3A565334 
 8024      32313020 
 8024      496E6974 
 8025 050b 00       		.space	1
 8026              	.LC49:
 8027 050c 0D0A4D61 		.ascii	"\015\012Main Loop...\000"
 8027      696E204C 
 8027      6F6F702E 
 8027      2E2E00
 8028              		.section	.bss.TimeOutCount,"aw",%nobits
 8029              		.align	2
 8030              		.set	.LANCHOR34,. + 0
 8033              	TimeOutCount:
 8034 0000 00000000 		.space	4
 8035              		.section	.bss.tim3count,"aw",%nobits
 8036              		.align	2
 8037              		.set	.LANCHOR22,. + 0
 8040              	tim3count:
ARM GAS  /tmp/ccxsI2YD.s 			page 248


 8041 0000 00000000 		.space	4
 8042              		.section	.data.gRxLoopFlg,"aw",%progbits
 8045              	gRxLoopFlg:
 8046 0000 01       		.byte	1
 8047              		.section	.bss.half_scaler,"aw",%nobits
 8050              	half_scaler:
 8051 0000 00       		.space	1
 8052              		.section	.bss.Rx2_data,"aw",%nobits
 8053              		.align	2
 8054              		.set	.LANCHOR24,. + 0
 8057              	Rx2_data:
 8058 0000 0000     		.space	2
 8059              		.section	.bss.RxiCount,"aw",%nobits
 8060              		.align	2
 8063              	RxiCount:
 8064 0000 00000000 		.space	4
 8065              		.section	.data.VS4210_ADDR,"aw",%progbits
 8068              	VS4210_ADDR:
 8069 0000 40       		.byte	64
 8070              		.section	.rodata.__FUNCTION__.9082,"a",%progbits
 8071              		.align	2
 8072              		.set	.LANCHOR11,. + 0
 8075              	__FUNCTION__.9082:
 8076 0000 48444D49 		.ascii	"HDMI_VideoModeDetect\000"
 8076      5F566964 
 8076      656F4D6F 
 8076      64654465 
 8076      74656374 
 8077              		.section	.bss.u16Vendor,"aw",%nobits
 8078              		.align	1
 8081              	u16Vendor:
 8082 0000 0000     		.space	2
 8083              		.section	.bss.gAudioSampleFreq,"aw",%nobits
 8084              		.align	2
 8085              		.set	.LANCHOR1,. + 0
 8088              	gAudioSampleFreq:
 8089 0000 00000000 		.space	4
 8090              		.section	.data.VS8812_ADDR,"aw",%progbits
 8093              	VS8812_ADDR:
 8094 0000 12       		.byte	18
 8095              		.section	.rodata.__FUNCTION__.9219,"a",%progbits
 8096              		.align	2
 8097              		.set	.LANCHOR25,. + 0
 8100              	__FUNCTION__.9219:
 8101 0000 48535F53 		.ascii	"HS_Select_Win\000"
 8101      656C6563 
 8101      745F5769 
 8101      6E00
 8102              		.section	.bss.Rx_data,"aw",%nobits
 8103              		.align	2
 8104              		.set	.LANCHOR23,. + 0
 8107              	Rx_data:
 8108 0000 0000     		.space	2
 8109              		.section	.data.OSDStateFlg,"aw",%progbits
 8110              		.set	.LANCHOR14,. + 0
 8113              	OSDStateFlg:
 8114 0000 01       		.byte	1
ARM GAS  /tmp/ccxsI2YD.s 			page 249


 8115              		.section	.bss.tptic,"aw",%nobits
 8118              	tptic:
 8119 0000 00       		.space	1
 8120              		.section	.bss.IR_PlusTimeVal,"aw",%nobits
 8121              		.align	1
 8124              	IR_PlusTimeVal:
 8125 0000 0000     		.space	2
 8126              		.section	.data.BOOT_ISSUE,"aw",%progbits
 8129              	BOOT_ISSUE:
 8130 0000 01       		.byte	1
 8131              		.section	.bss.CheckSelectInputMode,"aw",%nobits
 8132              		.set	.LANCHOR33,. + 0
 8135              	CheckSelectInputMode:
 8136 0000 00       		.space	1
 8137              		.section	.bss.IR_4BYTE,"aw",%nobits
 8138              		.align	2
 8141              	IR_4BYTE:
 8142 0000 00000000 		.space	4
 8143              		.section	.bss.IR_END_Flg,"aw",%nobits
 8146              	IR_END_Flg:
 8147 0000 00       		.space	1
 8148              		.section	.bss.IR_ShiftCount,"aw",%nobits
 8151              	IR_ShiftCount:
 8152 0000 00       		.space	1
 8153              		.section	.bss.OSD_Show_Flg,"aw",%nobits
 8154              		.align	2
 8155              		.set	.LANCHOR12,. + 0
 8158              	OSD_Show_Flg:
 8159 0000 00000000 		.space	4
 8160              		.section	.bss.LightSensor_ADC,"aw",%nobits
 8161              		.align	1
 8164              	LightSensor_ADC:
 8165 0000 0000     		.space	2
 8166              		.section	.bss.Transfer_cplt,"aw",%nobits
 8167              		.set	.LANCHOR2,. + 0
 8170              	Transfer_cplt:
 8171 0000 00       		.space	1
 8172              		.section	.bss.AutoDayNightDelay,"aw",%nobits
 8173              		.set	.LANCHOR20,. + 0
 8176              	AutoDayNightDelay:
 8177 0000 00       		.space	1
 8178              		.section	.rodata.__FUNCTION__.9140,"a",%progbits
 8179              		.align	2
 8180              		.set	.LANCHOR32,. + 0
 8183              	__FUNCTION__.9140:
 8184 0000 6D61696E 		.ascii	"main_loop\000"
 8184      5F6C6F6F 
 8184      7000
 8185              		.section	.bss.keytic,"aw",%nobits
 8188              	keytic:
 8189 0000 00       		.space	1
 8190              		.section	.rodata.__FUNCTION__.9129,"a",%progbits
 8191              		.align	2
 8192              		.set	.LANCHOR35,. + 0
 8195              	__FUNCTION__.9129:
 8196 0000 6D61696E 		.ascii	"main\000"
 8196      00
ARM GAS  /tmp/ccxsI2YD.s 			page 250


 8197              		.section	.bss.u8IRCheckcode,"aw",%nobits
 8200              	u8IRCheckcode:
 8201 0000 00       		.space	1
 8202              		.section	.bss.u8IRcode,"aw",%nobits
 8205              	u8IRcode:
 8206 0000 00       		.space	1
 8207              		.section	.bss.gbAUDO_INDEX,"aw",%nobits
 8208              		.set	.LANCHOR0,. + 0
 8211              	gbAUDO_INDEX:
 8212 0000 00       		.space	1
 8213              		.section	.bss.u8PowerFlg,"aw",%nobits
 8216              	u8PowerFlg:
 8217 0000 00       		.space	1
 8218              		.section	.bss.gMode0LoopFlg,"aw",%nobits
 8219              		.set	.LANCHOR29,. + 0
 8222              	gMode0LoopFlg:
 8223 0000 00       		.space	1
 8224              		.section	.bss.Rx_indx,"aw",%nobits
 8225              		.align	2
 8228              	Rx_indx:
 8229 0000 00000000 		.space	4
 8230              		.section	.data.PowerFlag,"aw",%progbits
 8231              		.set	.LANCHOR21,. + 0
 8234              	PowerFlag:
 8235 0000 01       		.byte	1
 8236              		.section	.data.PrebVXIS_InputMode,"aw",%progbits
 8237              		.align	2
 8238              		.set	.LANCHOR16,. + 0
 8241              	PrebVXIS_InputMode:
 8242 0000 FA       		.byte	-6
 8243 0001 FA       		.byte	-6
 8244 0002 FA       		.byte	-6
 8245 0003 FA       		.byte	-6
 8246              		.section	.bss.OSDSecCount,"aw",%nobits
 8247              		.set	.LANCHOR15,. + 0
 8250              	OSDSecCount:
 8251 0000 00       		.space	1
 8252              		.section	.bss.PreIR_Code,"aw",%nobits
 8255              	PreIR_Code:
 8256 0000 00       		.space	1
 8257              		.section	.bss.bOldSignal,"aw",%nobits
 8258              		.align	2
 8259              		.set	.LANCHOR10,. + 0
 8262              	bOldSignal:
 8263 0000 00000000 		.space	4
 8264              		.section	.bss.OSD_SPEAKER,"aw",%nobits
 8265              		.align	2
 8266              		.set	.LANCHOR6,. + 0
 8269              	OSD_SPEAKER:
 8270 0000 00000000 		.space	4
 8271              		.section	.bss.IR_StartFlg,"aw",%nobits
 8274              	IR_StartFlg:
 8275 0000 00       		.space	1
 8276              		.section	.bss.TxiCount,"aw",%nobits
 8277              		.align	2
 8280              	TxiCount:
 8281 0000 00000000 		.space	4
ARM GAS  /tmp/ccxsI2YD.s 			page 251


 8282              		.section	.rodata.__FUNCTION__.9077,"a",%progbits
 8283              		.align	2
 8284              		.set	.LANCHOR8,. + 0
 8287              	__FUNCTION__.9077:
 8288 0000 43484543 		.ascii	"CHECK_HDMI720P50\000"
 8288      4B5F4844 
 8288      4D493732 
 8288      30503530 
 8288      00
 8289              		.section	.bss.IR_IRQ_Index,"aw",%nobits
 8292              	IR_IRQ_Index:
 8293 0000 00       		.space	1
 8294              		.section	.bss.gRxbuf,"aw",%nobits
 8295              		.align	2
 8296              		.set	.LANCHOR4,. + 0
 8299              	gRxbuf:
 8300 0000 00000000 		.space	50
 8300      00000000 
 8300      00000000 
 8300      00000000 
 8300      00000000 
 8301              		.section	.data.gMode0LoopSecCmpVal,"aw",%progbits
 8302              		.set	.LANCHOR31,. + 0
 8305              	gMode0LoopSecCmpVal:
 8306 0000 0A       		.byte	10
 8307              		.section	.bss.gMode0LoopCount,"aw",%nobits
 8308              		.align	1
 8309              		.set	.LANCHOR27,. + 0
 8312              	gMode0LoopCount:
 8313 0000 0000     		.space	2
 8314              		.section	.bss.IR_IRQFlg,"aw",%nobits
 8317              	IR_IRQFlg:
 8318 0000 00       		.space	1
 8319              		.section	.bss.TxCount,"aw",%nobits
 8320              		.set	.LANCHOR26,. + 0
 8323              	TxCount:
 8324 0000 00       		.space	1
 8325              		.section	.bss.CURRENT_CH,"aw",%nobits
 8326              		.set	.LANCHOR7,. + 0
 8329              	CURRENT_CH:
 8330 0000 00       		.space	1
 8331              		.section	.data.OSDPreSecCount,"aw",%progbits
 8332              		.align	2
 8333              		.set	.LANCHOR28,. + 0
 8336              	OSDPreSecCount:
 8337 0000 FFFFFFFF 		.word	-1
 8338              		.section	.bss.OSD_MIRROR,"aw",%nobits
 8339              		.align	2
 8340              		.set	.LANCHOR5,. + 0
 8343              	OSD_MIRROR:
 8344 0000 00000000 		.space	4
 8345              		.text
 8346              	.Letext0:
 8347              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 8348              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 8349              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 8350              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
ARM GAS  /tmp/ccxsI2YD.s 			page 252


 8351              		.file 6 "/usr/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h"
 8352              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 8353              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 8354              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 8355              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 8356              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 8357              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 8358              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 8359              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 8360              		.file 15 "VS4210/VXIS_Extern_Define.h"
 8361              		.file 16 "VS4210/GT911.h"
 8362              		.file 17 "Drivers/CMSIS/Include/core_cm3.h"
 8363              		.file 18 "VS4210/VS4210.h"
 8364              		.file 19 "TP2824/tpinc/TP2802.h"
 8365              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 8366              		.file 21 "VS4210/HDMI_RX_lib.h"
 8367              		.file 22 "VS4210/ite66121.h"
 8368              		.file 23 "VS4210/Printf.h"
 8369              		.file 24 "/usr/include/newlib/stdio.h"
 8370              		.file 25 "/usr/include/newlib/stdlib.h"
 8371              		.file 26 "VS4210/audio.h"
 8372              		.file 27 "VS4210/keyremo.h"
 8373              		.file 28 "VS4210/monitor.h"
 8374              		.file 29 "VS4210/VX_OSD_Simple.h"
 8375              		.file 30 "sw_i2c/VX_swi2c.h"
 8376              		.file 31 "/usr/include/newlib/sys/errno.h"
 8377              		.file 32 "VS4210/Etc_eep.h"
 8378              		.file 33 "Inc/main.h"
 8379              		.file 34 "VS4210/TOA_Protocol.h"
 8380              		.file 35 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 8381              		.file 36 "sw_i2c/sw_i2c0.h"
 8382              		.file 37 "sw_i2c/sw_i2c1.h"
 8383              		.file 38 "sw_i2c/sw_i2c2.h"
 8384              		.file 39 "/usr/include/newlib/string.h"
 8385              		.file 40 "<built-in>"
ARM GAS  /tmp/ccxsI2YD.s 			page 253


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccxsI2YD.s:19     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccxsI2YD.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccxsI2YD.s:172    .text.MX_GPIO_Init:00000000000000c8 $d
     /tmp/ccxsI2YD.s:180    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccxsI2YD.s:184    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccxsI2YD.s:255    .text.MX_TIM3_Init:0000000000000050 $d
                            *COM*:0000000000000040 htim3
     /tmp/ccxsI2YD.s:261    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccxsI2YD.s:265    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccxsI2YD.s:304    .text.MX_USART1_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart1
     /tmp/ccxsI2YD.s:310    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccxsI2YD.s:314    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccxsI2YD.s:353    .text.MX_USART2_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart2
     /tmp/ccxsI2YD.s:359    .text.HDMI_AudioModeDetect:0000000000000000 $t
     /tmp/ccxsI2YD.s:363    .text.HDMI_AudioModeDetect:0000000000000000 HDMI_AudioModeDetect
     /tmp/ccxsI2YD.s:422    .text.HDMI_AudioModeDetect:000000000000004c $d
                            *COM*:0000000000000001 gPreAudioSampleFreq
     /tmp/ccxsI2YD.s:430    .text._write:0000000000000000 $t
     /tmp/ccxsI2YD.s:435    .text._write:0000000000000000 _write
     /tmp/ccxsI2YD.s:485    .text._write:0000000000000030 $d
     /tmp/ccxsI2YD.s:490    .text.Audio_Sel:0000000000000000 $t
     /tmp/ccxsI2YD.s:495    .text.Audio_Sel:0000000000000000 Audio_Sel
     /tmp/ccxsI2YD.s:517    .text.Audio_Sel:0000000000000010 $d
     /tmp/ccxsI2YD.s:746    .text.Audio_Sel:0000000000000170 $d
     /tmp/ccxsI2YD.s:755    .text.SET_Audio_Mute:0000000000000000 $t
     /tmp/ccxsI2YD.s:760    .text.SET_Audio_Mute:0000000000000000 SET_Audio_Mute
     /tmp/ccxsI2YD.s:803    .text.SET_Audio_Mute:0000000000000028 $d
     /tmp/ccxsI2YD.s:809    .text.InitialTimerEvent:0000000000000000 $t
     /tmp/ccxsI2YD.s:814    .text.InitialTimerEvent:0000000000000000 InitialTimerEvent
     /tmp/ccxsI2YD.s:833    .text.GetRS232_CMD:0000000000000000 $t
     /tmp/ccxsI2YD.s:838    .text.GetRS232_CMD:0000000000000000 GetRS232_CMD
     /tmp/ccxsI2YD.s:919    .text.GetRS232_CMD:000000000000005c $d
     /tmp/ccxsI2YD.s:929    .text.setloopoutmode:0000000000000000 $t
     /tmp/ccxsI2YD.s:934    .text.setloopoutmode:0000000000000000 setloopoutmode
     /tmp/ccxsI2YD.s:954    .text.setloopoutmode:000000000000000e $d
     /tmp/ccxsI2YD.s:974    .text.setloopoutmode:0000000000000036 $t
     /tmp/ccxsI2YD.s:1531   .text.setloopoutmode:0000000000000300 $d
                            *COM*:000000000000000a pVS4210_JointKind1
                            *COM*:0000000000000001 CAMA_M
                            *COM*:0000000000000004 gabVXIS_Input_mirrorH
                            *COM*:0000000000000001 CAMB_M
                            *COM*:0000000000000001 CAMC_M
                            *COM*:0000000000000001 CAMR_M
     /tmp/ccxsI2YD.s:1557   .text.setloopoutmode:000000000000035c $t
     /tmp/ccxsI2YD.s:1662   .text.setloopoutmode:00000000000003ec $d
     /tmp/ccxsI2YD.s:1676   .text.CHECK_HDMI720P50:0000000000000000 $t
     /tmp/ccxsI2YD.s:1681   .text.CHECK_HDMI720P50:0000000000000000 CHECK_HDMI720P50
     /tmp/ccxsI2YD.s:1784   .text.CHECK_HDMI720P50:0000000000000068 $d
     /tmp/ccxsI2YD.s:1793   .text.HDMI_VideoModeDetect:0000000000000000 $t
     /tmp/ccxsI2YD.s:1797   .text.HDMI_VideoModeDetect:0000000000000000 HDMI_VideoModeDetect
     /tmp/ccxsI2YD.s:2114   .text.HDMI_VideoModeDetect:00000000000001cc $d
                            *COM*:0000000000000004 newInRes
                            *COM*:000000000000000a pVS4210_MutiWindows1
ARM GAS  /tmp/ccxsI2YD.s 			page 254


     /tmp/ccxsI2YD.s:2141   .text.main_init:0000000000000000 $t
     /tmp/ccxsI2YD.s:2146   .text.main_init:0000000000000000 main_init
     /tmp/ccxsI2YD.s:2237   .text.main_init:0000000000000074 $d
                            *COM*:0000000000000001 DebugLevel
     /tmp/ccxsI2YD.s:2247   .text.LCDPowerON:0000000000000000 $t
     /tmp/ccxsI2YD.s:2252   .text.LCDPowerON:0000000000000000 LCDPowerON
     /tmp/ccxsI2YD.s:2264   .text.LCDPowerOFF:0000000000000000 $t
     /tmp/ccxsI2YD.s:2269   .text.LCDPowerOFF:0000000000000000 LCDPowerOFF
     /tmp/ccxsI2YD.s:2281   .text.uComOnChipInitial:0000000000000000 $t
     /tmp/ccxsI2YD.s:2286   .text.uComOnChipInitial:0000000000000000 uComOnChipInitial
     /tmp/ccxsI2YD.s:2321   .text.uComOnChipInitial:0000000000000024 $d
     /tmp/ccxsI2YD.s:2326   .text.user_pwm_setvalue:0000000000000000 $t
     /tmp/ccxsI2YD.s:2331   .text.user_pwm_setvalue:0000000000000000 user_pwm_setvalue
     /tmp/ccxsI2YD.s:2378   .text.user_pwm_setvalue:0000000000000028 $d
                            *COM*:0000000000000040 htim2
     /tmp/ccxsI2YD.s:2383   .text.AdjustAutoDayNight:0000000000000000 $t
     /tmp/ccxsI2YD.s:2388   .text.AdjustAutoDayNight:0000000000000000 AdjustAutoDayNight
     /tmp/ccxsI2YD.s:2507   .text.AdjustAutoDayNight:000000000000008c $d
     /tmp/ccxsI2YD.s:2514   .text.LoadEEPROM:0000000000000000 $t
     /tmp/ccxsI2YD.s:2519   .text.LoadEEPROM:0000000000000000 LoadEEPROM
     /tmp/ccxsI2YD.s:2531   .text.WaitPowerOn:0000000000000000 $t
     /tmp/ccxsI2YD.s:2536   .text.WaitPowerOn:0000000000000000 WaitPowerOn
     /tmp/ccxsI2YD.s:2639   .text.WaitPowerOn:0000000000000084 $d
     /tmp/ccxsI2YD.s:2646   .text.VS4210_FULL88init2:0000000000000000 $t
     /tmp/ccxsI2YD.s:2651   .text.VS4210_FULL88init2:0000000000000000 VS4210_FULL88init2
     /tmp/ccxsI2YD.s:2693   .text.VS4210_FULL88init2:000000000000001c $d
     /tmp/ccxsI2YD.s:2698   .text.TP_bt1120_1080P_1080P_mode0_w0:0000000000000000 $t
     /tmp/ccxsI2YD.s:2703   .text.TP_bt1120_1080P_1080P_mode0_w0:0000000000000000 TP_bt1120_1080P_1080P_mode0_w0
     /tmp/ccxsI2YD.s:2726   .text.TP_bt1120_1080P_1080P_mode0_w0:0000000000000010 $d
     /tmp/ccxsI2YD.s:2732   .text.TP_bt1120_720P_1080P_mode0_w0:0000000000000000 $t
     /tmp/ccxsI2YD.s:2737   .text.TP_bt1120_720P_1080P_mode0_w0:0000000000000000 TP_bt1120_720P_1080P_mode0_w0
     /tmp/ccxsI2YD.s:2765   .text.TP_bt1120_720P_1080P_mode0_w0:0000000000000018 $d
     /tmp/ccxsI2YD.s:2771   .text.TP_bt1120_NTSC_1080P_mode0_w0:0000000000000000 $t
     /tmp/ccxsI2YD.s:2776   .text.TP_bt1120_NTSC_1080P_mode0_w0:0000000000000000 TP_bt1120_NTSC_1080P_mode0_w0
     /tmp/ccxsI2YD.s:2799   .text.TP_bt1120_NTSC_1080P_mode0_w0:0000000000000010 $d
     /tmp/ccxsI2YD.s:2805   .text.TP_bt1120_PAL_1080P_mode0_w0:0000000000000000 $t
     /tmp/ccxsI2YD.s:2810   .text.TP_bt1120_PAL_1080P_mode0_w0:0000000000000000 TP_bt1120_PAL_1080P_mode0_w0
     /tmp/ccxsI2YD.s:2833   .text.TP_bt1120_PAL_1080P_mode0_w0:0000000000000010 $d
     /tmp/ccxsI2YD.s:2839   .text.SET_VS4210_720_480_out:0000000000000000 $t
     /tmp/ccxsI2YD.s:2844   .text.SET_VS4210_720_480_out:0000000000000000 SET_VS4210_720_480_out
     /tmp/ccxsI2YD.s:3493   .text.SET_VS4210_720_480_out:00000000000003fc $d
     /tmp/ccxsI2YD.s:3496   .text.SET_VS4210_720_480_out:0000000000000400 $t
     /tmp/ccxsI2YD.s:4060   .text.SET_VS4210_1280_720_out:0000000000000000 $t
     /tmp/ccxsI2YD.s:4065   .text.SET_VS4210_1280_720_out:0000000000000000 SET_VS4210_1280_720_out
     /tmp/ccxsI2YD.s:4714   .text.SET_VS4210_1280_720_out:00000000000003fc $d
     /tmp/ccxsI2YD.s:4717   .text.SET_VS4210_1280_720_out:0000000000000400 $t
     /tmp/ccxsI2YD.s:5281   .text.SET_AHD_MDOE:0000000000000000 $t
     /tmp/ccxsI2YD.s:5286   .text.SET_AHD_MDOE:0000000000000000 SET_AHD_MDOE
     /tmp/ccxsI2YD.s:5935   .text.SET_AHD_MDOE:00000000000003fc $d
     /tmp/ccxsI2YD.s:5938   .text.SET_AHD_MDOE:0000000000000400 $t
     /tmp/ccxsI2YD.s:6592   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccxsI2YD.s:6597   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccxsI2YD.s:6670   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccxsI2YD.s:6675   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccxsI2YD.s:6750   .text.HAL_TIM_PeriodElapsedCallback:0000000000000064 $d
     /tmp/ccxsI2YD.s:6764   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccxsI2YD.s:6769   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
ARM GAS  /tmp/ccxsI2YD.s 			page 255


     /tmp/ccxsI2YD.s:6848   .text.HAL_UART_RxCpltCallback:0000000000000064 $d
     /tmp/ccxsI2YD.s:6862   .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/ccxsI2YD.s:6867   .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/ccxsI2YD.s:6880   .text.HS_Select_Win:0000000000000000 $t
     /tmp/ccxsI2YD.s:6885   .text.HS_Select_Win:0000000000000000 HS_Select_Win
     /tmp/ccxsI2YD.s:7098   .text.HS_Select_Win:000000000000011c $d
     /tmp/ccxsI2YD.s:7116   .text.main_loop:0000000000000000 $t
     /tmp/ccxsI2YD.s:7121   .text.main_loop:0000000000000000 main_loop
     /tmp/ccxsI2YD.s:7390   .text.main_loop:0000000000000180 $d
     /tmp/ccxsI2YD.s:7411   .text.main:0000000000000000 $t
     /tmp/ccxsI2YD.s:7416   .text.main:0000000000000000 main
     /tmp/ccxsI2YD.s:7725   .text.main:00000000000001ac $d
                            *COM*:0000000000000100 ExOsdContent
     /tmp/ccxsI2YD.s:7753   .text.Error_Handler:0000000000000000 $t
     /tmp/ccxsI2YD.s:7758   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccxsI2YD.s:8113   .data.OSDStateFlg:0000000000000000 OSDStateFlg
     /tmp/ccxsI2YD.s:8250   .bss.OSDSecCount:0000000000000000 OSDSecCount
     /tmp/ccxsI2YD.s:8045   .data.gRxLoopFlg:0000000000000000 gRxLoopFlg
     /tmp/ccxsI2YD.s:8158   .bss.OSD_Show_Flg:0000000000000000 OSD_Show_Flg
     /tmp/ccxsI2YD.s:7831   .bss.Tim1_count:0000000000000000 Tim1_count
     /tmp/ccxsI2YD.s:8323   .bss.TxCount:0000000000000000 TxCount
     /tmp/ccxsI2YD.s:7855   .bss.bSignal:0000000000000000 bSignal
     /tmp/ccxsI2YD.s:8305   .data.gMode0LoopSecCmpVal:0000000000000000 gMode0LoopSecCmpVal
     /tmp/ccxsI2YD.s:7879   .bss.gMode0LoopSecCount:0000000000000000 gMode0LoopSecCount
     /tmp/ccxsI2YD.s:8222   .bss.gMode0LoopFlg:0000000000000000 gMode0LoopFlg
     /tmp/ccxsI2YD.s:8312   .bss.gMode0LoopCount:0000000000000000 gMode0LoopCount
     /tmp/ccxsI2YD.s:8211   .bss.gbAUDO_INDEX:0000000000000000 gbAUDO_INDEX
                            *COM*:0000000000000001 gPrebAUDO_INDEX
     /tmp/ccxsI2YD.s:8135   .bss.CheckSelectInputMode:0000000000000000 CheckSelectInputMode
     /tmp/ccxsI2YD.s:7848   .bss.SelectInputMode:0000000000000000 SelectInputMode
     /tmp/ccxsI2YD.s:8336   .data.OSDPreSecCount:0000000000000000 OSDPreSecCount
     /tmp/ccxsI2YD.s:8241   .data.PrebVXIS_InputMode:0000000000000000 PrebVXIS_InputMode
     /tmp/ccxsI2YD.s:8329   .bss.CURRENT_CH:0000000000000000 CURRENT_CH
     /tmp/ccxsI2YD.s:8129   .data.BOOT_ISSUE:0000000000000000 BOOT_ISSUE
     /tmp/ccxsI2YD.s:8269   .bss.OSD_SPEAKER:0000000000000000 OSD_SPEAKER
     /tmp/ccxsI2YD.s:8343   .bss.OSD_MIRROR:0000000000000000 OSD_MIRROR
                            *COM*:0000000000000001 Priority
                            *COM*:0000000000000001 SelectModeType
     /tmp/ccxsI2YD.s:8118   .bss.tptic:0000000000000000 tptic
     /tmp/ccxsI2YD.s:8188   .bss.keytic:0000000000000000 keytic
     /tmp/ccxsI2YD.s:8234   .data.PowerFlag:0000000000000000 PowerFlag
                            *COM*:0000000000000001 TimeStep
     /tmp/ccxsI2YD.s:7824   .data.PWMLevel:0000000000000000 PWMLevel
     /tmp/ccxsI2YD.s:8176   .bss.AutoDayNightDelay:0000000000000000 AutoDayNightDelay
     /tmp/ccxsI2YD.s:8164   .bss.LightSensor_ADC:0000000000000000 LightSensor_ADC
     /tmp/ccxsI2YD.s:7837   .bss.DayNightLevel:0000000000000000 DayNightLevel
     /tmp/ccxsI2YD.s:8050   .bss.half_scaler:0000000000000000 half_scaler
                            *COM*:0000000000000001 ManVidRes
     /tmp/ccxsI2YD.s:8093   .data.VS8812_ADDR:0000000000000000 VS8812_ADDR
     /tmp/ccxsI2YD.s:8068   .data.VS4210_ADDR:0000000000000000 VS4210_ADDR
                            *COM*:0000000000000030 hadc1
     /tmp/ccxsI2YD.s:7827   .bss.Tim1_count:0000000000000000 $d
     /tmp/ccxsI2YD.s:7838   .bss.DayNightLevel:0000000000000000 $d
     /tmp/ccxsI2YD.s:7842   .bss.IR_Code:0000000000000000 IR_Code
     /tmp/ccxsI2YD.s:7843   .bss.IR_Code:0000000000000000 $d
     /tmp/ccxsI2YD.s:7849   .bss.SelectInputMode:0000000000000000 $d
     /tmp/ccxsI2YD.s:7851   .bss.bSignal:0000000000000000 $d
ARM GAS  /tmp/ccxsI2YD.s 			page 256


     /tmp/ccxsI2YD.s:7858   .bss.DebugFlg:0000000000000000 $d
     /tmp/ccxsI2YD.s:7861   .bss.DebugFlg:0000000000000000 DebugFlg
     /tmp/ccxsI2YD.s:7866   .bss.PreIR_IRQ_Index:0000000000000000 PreIR_IRQ_Index
     /tmp/ccxsI2YD.s:7867   .bss.PreIR_IRQ_Index:0000000000000000 $d
     /tmp/ccxsI2YD.s:7869   .bss.RxBufIndex:0000000000000000 $d
     /tmp/ccxsI2YD.s:7873   .bss.RxBufIndex:0000000000000000 RxBufIndex
     /tmp/ccxsI2YD.s:7880   .bss.gMode0LoopSecCount:0000000000000000 $d
     /tmp/ccxsI2YD.s:7882   .rodata.str1.4:0000000000000000 $d
     /tmp/ccxsI2YD.s:8029   .bss.TimeOutCount:0000000000000000 $d
     /tmp/ccxsI2YD.s:8033   .bss.TimeOutCount:0000000000000000 TimeOutCount
     /tmp/ccxsI2YD.s:8036   .bss.tim3count:0000000000000000 $d
     /tmp/ccxsI2YD.s:8040   .bss.tim3count:0000000000000000 tim3count
     /tmp/ccxsI2YD.s:8051   .bss.half_scaler:0000000000000000 $d
     /tmp/ccxsI2YD.s:8053   .bss.Rx2_data:0000000000000000 $d
     /tmp/ccxsI2YD.s:8057   .bss.Rx2_data:0000000000000000 Rx2_data
     /tmp/ccxsI2YD.s:8060   .bss.RxiCount:0000000000000000 $d
     /tmp/ccxsI2YD.s:8063   .bss.RxiCount:0000000000000000 RxiCount
     /tmp/ccxsI2YD.s:8071   .rodata.__FUNCTION__.9082:0000000000000000 $d
     /tmp/ccxsI2YD.s:8075   .rodata.__FUNCTION__.9082:0000000000000000 __FUNCTION__.9082
     /tmp/ccxsI2YD.s:8078   .bss.u16Vendor:0000000000000000 $d
     /tmp/ccxsI2YD.s:8081   .bss.u16Vendor:0000000000000000 u16Vendor
     /tmp/ccxsI2YD.s:8084   .bss.gAudioSampleFreq:0000000000000000 $d
     /tmp/ccxsI2YD.s:8088   .bss.gAudioSampleFreq:0000000000000000 gAudioSampleFreq
     /tmp/ccxsI2YD.s:8096   .rodata.__FUNCTION__.9219:0000000000000000 $d
     /tmp/ccxsI2YD.s:8100   .rodata.__FUNCTION__.9219:0000000000000000 __FUNCTION__.9219
     /tmp/ccxsI2YD.s:8103   .bss.Rx_data:0000000000000000 $d
     /tmp/ccxsI2YD.s:8107   .bss.Rx_data:0000000000000000 Rx_data
     /tmp/ccxsI2YD.s:8119   .bss.tptic:0000000000000000 $d
     /tmp/ccxsI2YD.s:8121   .bss.IR_PlusTimeVal:0000000000000000 $d
     /tmp/ccxsI2YD.s:8124   .bss.IR_PlusTimeVal:0000000000000000 IR_PlusTimeVal
     /tmp/ccxsI2YD.s:8136   .bss.CheckSelectInputMode:0000000000000000 $d
     /tmp/ccxsI2YD.s:8138   .bss.IR_4BYTE:0000000000000000 $d
     /tmp/ccxsI2YD.s:8141   .bss.IR_4BYTE:0000000000000000 IR_4BYTE
     /tmp/ccxsI2YD.s:8146   .bss.IR_END_Flg:0000000000000000 IR_END_Flg
     /tmp/ccxsI2YD.s:8147   .bss.IR_END_Flg:0000000000000000 $d
     /tmp/ccxsI2YD.s:8151   .bss.IR_ShiftCount:0000000000000000 IR_ShiftCount
     /tmp/ccxsI2YD.s:8152   .bss.IR_ShiftCount:0000000000000000 $d
     /tmp/ccxsI2YD.s:8154   .bss.OSD_Show_Flg:0000000000000000 $d
     /tmp/ccxsI2YD.s:8161   .bss.LightSensor_ADC:0000000000000000 $d
     /tmp/ccxsI2YD.s:8170   .bss.Transfer_cplt:0000000000000000 Transfer_cplt
     /tmp/ccxsI2YD.s:8171   .bss.Transfer_cplt:0000000000000000 $d
     /tmp/ccxsI2YD.s:8177   .bss.AutoDayNightDelay:0000000000000000 $d
     /tmp/ccxsI2YD.s:8179   .rodata.__FUNCTION__.9140:0000000000000000 $d
     /tmp/ccxsI2YD.s:8183   .rodata.__FUNCTION__.9140:0000000000000000 __FUNCTION__.9140
     /tmp/ccxsI2YD.s:8189   .bss.keytic:0000000000000000 $d
     /tmp/ccxsI2YD.s:8191   .rodata.__FUNCTION__.9129:0000000000000000 $d
     /tmp/ccxsI2YD.s:8195   .rodata.__FUNCTION__.9129:0000000000000000 __FUNCTION__.9129
     /tmp/ccxsI2YD.s:8200   .bss.u8IRCheckcode:0000000000000000 u8IRCheckcode
     /tmp/ccxsI2YD.s:8201   .bss.u8IRCheckcode:0000000000000000 $d
     /tmp/ccxsI2YD.s:8205   .bss.u8IRcode:0000000000000000 u8IRcode
     /tmp/ccxsI2YD.s:8206   .bss.u8IRcode:0000000000000000 $d
     /tmp/ccxsI2YD.s:8212   .bss.gbAUDO_INDEX:0000000000000000 $d
     /tmp/ccxsI2YD.s:8216   .bss.u8PowerFlg:0000000000000000 u8PowerFlg
     /tmp/ccxsI2YD.s:8217   .bss.u8PowerFlg:0000000000000000 $d
     /tmp/ccxsI2YD.s:8223   .bss.gMode0LoopFlg:0000000000000000 $d
     /tmp/ccxsI2YD.s:8225   .bss.Rx_indx:0000000000000000 $d
     /tmp/ccxsI2YD.s:8228   .bss.Rx_indx:0000000000000000 Rx_indx
ARM GAS  /tmp/ccxsI2YD.s 			page 257


     /tmp/ccxsI2YD.s:8237   .data.PrebVXIS_InputMode:0000000000000000 $d
     /tmp/ccxsI2YD.s:8251   .bss.OSDSecCount:0000000000000000 $d
     /tmp/ccxsI2YD.s:8255   .bss.PreIR_Code:0000000000000000 PreIR_Code
     /tmp/ccxsI2YD.s:8256   .bss.PreIR_Code:0000000000000000 $d
     /tmp/ccxsI2YD.s:8258   .bss.bOldSignal:0000000000000000 $d
     /tmp/ccxsI2YD.s:8262   .bss.bOldSignal:0000000000000000 bOldSignal
     /tmp/ccxsI2YD.s:8265   .bss.OSD_SPEAKER:0000000000000000 $d
     /tmp/ccxsI2YD.s:8274   .bss.IR_StartFlg:0000000000000000 IR_StartFlg
     /tmp/ccxsI2YD.s:8275   .bss.IR_StartFlg:0000000000000000 $d
     /tmp/ccxsI2YD.s:8277   .bss.TxiCount:0000000000000000 $d
     /tmp/ccxsI2YD.s:8280   .bss.TxiCount:0000000000000000 TxiCount
     /tmp/ccxsI2YD.s:8283   .rodata.__FUNCTION__.9077:0000000000000000 $d
     /tmp/ccxsI2YD.s:8287   .rodata.__FUNCTION__.9077:0000000000000000 __FUNCTION__.9077
     /tmp/ccxsI2YD.s:8292   .bss.IR_IRQ_Index:0000000000000000 IR_IRQ_Index
     /tmp/ccxsI2YD.s:8293   .bss.IR_IRQ_Index:0000000000000000 $d
     /tmp/ccxsI2YD.s:8295   .bss.gRxbuf:0000000000000000 $d
     /tmp/ccxsI2YD.s:8299   .bss.gRxbuf:0000000000000000 gRxbuf
     /tmp/ccxsI2YD.s:8308   .bss.gMode0LoopCount:0000000000000000 $d
     /tmp/ccxsI2YD.s:8317   .bss.IR_IRQFlg:0000000000000000 IR_IRQFlg
     /tmp/ccxsI2YD.s:8318   .bss.IR_IRQFlg:0000000000000000 $d
     /tmp/ccxsI2YD.s:8324   .bss.TxCount:0000000000000000 $d
     /tmp/ccxsI2YD.s:8330   .bss.CURRENT_CH:0000000000000000 $d
     /tmp/ccxsI2YD.s:8332   .data.OSDPreSecCount:0000000000000000 $d
     /tmp/ccxsI2YD.s:8339   .bss.OSD_MIRROR:0000000000000000 $d
                     .debug_frame:0000000000000010 $d
     /tmp/ccxsI2YD.s:522    .text.Audio_Sel:0000000000000015 $d
     /tmp/ccxsI2YD.s:522    .text.Audio_Sel:0000000000000016 $t

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_UART_Init
getHDMIRXAudioInfo
HDMI_Tx_SetAudioFs
gHDMI_Index
__errno
HAL_UART_Transmit
Printf
MCUTimerInitialTimerEvent
printf
strtol
puts
VS4210_SetMutiWindows
AudioMute
MCUTimerCancelTimerEvent
MCUTimerActiveTimerEvent
AUDIO_SELECT
HDMIRX_ReadI2C_Byte
gbVXIS_InputMode
CheckHDMIRX
VS4210_Rx_NoSignal
Set_Video_Loss_OSD
GetHDMI_InputMode
VS4210_SetInModeOutMode
ARM GAS  /tmp/ccxsI2YD.s 			page 258


VXISI2CWrite
VS4210_SetInputSizeHV
PreVState
VState
gHActive
gVActive
gHTotal
gVTotal
GetFWRevEE
SaveFWRevEE
ClearBasicEE
delay
HAL_TIM_PWM_ConfigChannel
HAL_TIM_PWM_Start
PowerLED
CheckKeyIn
WriteEEP
CheckTrigger
TriggerHandler
SysTimerHandler
EQ_Detect
GT9147_Scan
VS4210_Addr_88param
VS4210_TP_bt1120_1080P_1080P_mode0_w0_88param
VS4210_TP_bt1120_720P_1080P_mode0_w0_88param
VS4210_TP_bt1120_NTSC_1080P_mode0_w0_88param
VS4210_TP_bt1120_PAL_1080P_mode0_w0_88param
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
tic02
tic03
tic04
g_usTimerCounter
g_bNotifyTimer0Int
HAL_UART_Receive_IT
RS_in
RS_buf
RS2_in
RS2_buf
mode
TP_InputMode
HDMITX_DevLoopProc
msleep
OSD_Clear_All
VXISI2CRead
HAL_GPIO_ReadPin
Monitor
RS_ready
TOAReceivePaser
RS2_ready
Get_2824cIrq
AccessEnable
HAL_Init
SW_I2C0_Init
SW_I2C1_Init
SW_I2C2_Init
SW_I2C3_Init
ARM GAS  /tmp/ccxsI2YD.s 			page 259


InitHDMIRX
HDMIRX_WriteI2C_Byte
VXOSD_UseFont_init
Init_TP280x_RegSet
VXIS_fSetOsdx2
memset
HAL_TIM_Base_Start_IT
UserDefineFont1
