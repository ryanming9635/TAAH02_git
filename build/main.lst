ARM GAS  /tmp/ccs2VtGF.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	MX_GPIO_Init:
  23              	.LFB99:
  24              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include <stdio.h>
  27:Src/main.c    **** #include <stdlib.h>
  28:Src/main.c    **** #include <ctype.h>
  29:Src/main.c    **** #include <errno.h>
  30:Src/main.c    **** #ifdef __GNUC__
  31:Src/main.c    ****     #include <sys/unistd.h>
  32:Src/main.c    **** #endif
  33:Src/main.c    **** 
  34:Src/main.c    **** #include "VXIS_Extern_Define.h"
ARM GAS  /tmp/ccs2VtGF.s 			page 2


  35:Src/main.c    **** #include "sw_i2c0.h"  //TP2824
  36:Src/main.c    **** #include "sw_i2c1.h"  //VS4210
  37:Src/main.c    **** #include "sw_i2c2.h"  //IT66121
  38:Src/main.c    **** #include "VX_swi2c.h"
  39:Src/main.c    **** #include "ite66121.h"
  40:Src/main.c    **** #include "HDMI_RX_lib.h"
  41:Src/main.c    **** #include "VS4210.h"
  42:Src/main.c    **** #include "IRdef.h"
  43:Src/main.c    **** #include "TP2802.h"
  44:Src/main.c    **** #include "VX_OSD_Simple.h"
  45:Src/main.c    **** #include "monitor.h"
  46:Src/main.c    **** #include "Printf.h"
  47:Src/main.c    **** #include "Etc_eep.h"
  48:Src/main.c    **** #include 	"audio.h"
  49:Src/main.c    **** #include "keyremo.h"
  50:Src/main.c    **** #include "VX8812.h"
  51:Src/main.c    **** #include "HDMI_RX_lib.h"
  52:Src/main.c    **** 
  53:Src/main.c    **** #include "TOA_Protocol.h"
  54:Src/main.c    **** 
  55:Src/main.c    **** //#include "VS4210_param_Mode88.h"
  56:Src/main.c    **** //#include "VS4210_param_Modex26.h"
  57:Src/main.c    **** 
  58:Src/main.c    **** #include "GT911.h"
  59:Src/main.c    **** //#include "exOSDfont.h"
  60:Src/main.c    **** 
  61:Src/main.c    **** //#include "it660x.h"
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END Includes */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  66:Src/main.c    **** /* USER CODE BEGIN PTD */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END PTD */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  71:Src/main.c    **** /* USER CODE BEGIN PD */
  72:Src/main.c    **** #define RXBUFMAX 50
  73:Src/main.c    **** #define IR_Vendor_Code_ 0xFF00
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE END PD */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  78:Src/main.c    **** /* USER CODE BEGIN PM */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE END PM */
  81:Src/main.c    **** 
  82:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  83:Src/main.c    **** TIM_HandleTypeDef htim3;
  84:Src/main.c    **** 
  85:Src/main.c    **** UART_HandleTypeDef huart1;
  86:Src/main.c    **** UART_HandleTypeDef huart2;
  87:Src/main.c    **** 
  88:Src/main.c    **** ADC_HandleTypeDef hadc1;
  89:Src/main.c    **** TIM_HandleTypeDef htim2;
  90:Src/main.c    **** 
  91:Src/main.c    **** /* USER CODE BEGIN PV */
ARM GAS  /tmp/ccs2VtGF.s 			page 3


  92:Src/main.c    **** volatile tByte VS4210_ADDR = 0x40 ;
  93:Src/main.c    **** volatile tByte VS8812_ADDR = 0x12 ;
  94:Src/main.c    **** #define OSD_OFF_SEC 10
  95:Src/main.c    **** 
  96:Src/main.c    **** //RX
  97:Src/main.c    **** tByte	ManVidRes;
  98:Src/main.c    **** tByte	half_scaler = 0;
  99:Src/main.c    **** tByte	DebugLevel;
 100:Src/main.c    **** tByte	DayNightLevel=0;
 101:Src/main.c    **** tWord LightSensor_ADC=0;
 102:Src/main.c    **** BYTE AutoDayNightDelay=0;
 103:Src/main.c    **** DATA BYTE PWMLevel=0x80;
 104:Src/main.c    **** BYTE TimeStep;
 105:Src/main.c    **** BYTE	PowerFlag=1;
 106:Src/main.c    **** DATA BYTE keytic=0,tptic=0;
 107:Src/main.c    **** BYTE	SelectModeType;
 108:Src/main.c    **** BYTE	Priority;
 109:Src/main.c    **** BYTE CAMA_M;	
 110:Src/main.c    **** BYTE CAMB_M;	
 111:Src/main.c    **** BYTE CAMC_M;	
 112:Src/main.c    **** BYTE CAMR_M;
 113:Src/main.c    **** BYTE OSD_MIRROR[4]={0,0,0,0};
 114:Src/main.c    **** BYTE OSD_SPEAKER[4]={0,0,0,0};
 115:Src/main.c    **** BYTE BOOT_ISSUE=1;
 116:Src/main.c    **** BYTE CURRENT_CH=0;
 117:Src/main.c    **** tByte ExOsdContent[256] ;
 118:Src/main.c    **** tByte PrebVXIS_InputMode[4]= {250,250,250,250} ;
 119:Src/main.c    **** 
 120:Src/main.c    **** int OSDPreSecCount =-1 ;
 121:Src/main.c    **** BYTE SelectInputMode=0;///0=HDMI , 1=AHD
 122:Src/main.c    **** BYTE CheckSelectInputMode=0;///0=HDMI , 1=AHD
 123:Src/main.c    **** 
 124:Src/main.c    **** //audio
 125:Src/main.c    **** tByte gPreAudioSampleFreq ;
 126:Src/main.c    **** tByte gPrebAUDO_INDEX  ;
 127:Src/main.c    **** tByte gbAUDO_INDEX = 0  ;
 128:Src/main.c    **** static tByte gAudioSampleFreq[4] ;
 129:Src/main.c    **** 
 130:Src/main.c    **** tWord gMode0LoopCount = 0 ;
 131:Src/main.c    **** tByte gMode0LoopFlg = 0 ;
 132:Src/main.c    **** tByte gMode0LoopSecCount = 0 ;
 133:Src/main.c    **** tByte gMode0LoopSecCmpVal = 10 ;
 134:Src/main.c    **** 
 135:Src/main.c    **** //Rx
 136:Src/main.c    **** static tByte bOldSignal[4] ;
 137:Src/main.c    **** tByte bSignal[4]= {0,0,0,0} ;
 138:Src/main.c    **** extern tByte PreVState[4] ;
 139:Src/main.c    **** extern tByte VState[4] ;
 140:Src/main.c    **** extern tByte AState[4] ;
 141:Src/main.c    **** 
 142:Src/main.c    **** //Tx
 143:Src/main.c    **** tByte TxCount = 0 ;
 144:Src/main.c    **** 
 145:Src/main.c    **** T_VS4210_MutiWindows pVS4210_MutiWindows1 ;
 146:Src/main.c    **** unsigned int volatile Tim1_count=0;
 147:Src/main.c    **** bit OSD_Show_Flg = 0 ;
 148:Src/main.c    **** 
ARM GAS  /tmp/ccs2VtGF.s 			page 4


 149:Src/main.c    **** static int TimeOutCount ;
 150:Src/main.c    **** 
 151:Src/main.c    **** extern DATA BYTE keytic;
 152:Src/main.c    **** extern 	DATA BYTE Key;
 153:Src/main.c    **** extern 	bit KeyReady, RepeatKey;
 154:Src/main.c    **** 
 155:Src/main.c    **** extern BYTE  updn_reg[4];
 156:Src/main.c    **** extern BYTE Time5ms;
 157:Src/main.c    **** extern bit ChangeKey;
 158:Src/main.c    **** extern tByte RS_buf[BUF_MAX];
 159:Src/main.c    **** extern  tByte RS2_buf[TOA_BUF_MAX];
 160:Src/main.c    **** extern  tByte	 RS_in, RS2_in;
 161:Src/main.c    **** extern BYTE tic02;
 162:Src/main.c    **** extern WORD tic03,tic04,tic05;
 163:Src/main.c    **** extern volatile WORD  g_usTimerCounter;
 164:Src/main.c    **** extern volatile bit g_bNotifyTimer0Int;
 165:Src/main.c    **** extern BYTE	AudioVol;
 166:Src/main.c    **** extern BYTE NowModeState;
 167:Src/main.c    **** extern BYTE Disp_Input;
 168:Src/main.c    **** extern BYTE OSD_LOCKF;
 169:Src/main.c    **** extern BYTE TriggerFlag;
 170:Src/main.c    **** 
 171:Src/main.c    **** extern BYTE	MainSetSelectMode[13];
 172:Src/main.c    **** /*extern*/ tByte gabVXIS_Input_mirrorH[4];
 173:Src/main.c    **** extern tByte gWindowNum ;
 174:Src/main.c    **** 
 175:Src/main.c    **** extern BYTE TP_ACTION;
 176:Src/main.c    **** extern BYTE TP_PRES_DOWN;
 177:Src/main.c    **** extern BYTE TouchP;
 178:Src/main.c    **** extern USHORT ucTickCount;
 179:Src/main.c    **** extern bit   AccessEnable;
 180:Src/main.c    **** extern tByte TP_InputMode;
 181:Src/main.c    **** extern tByte mode[0];
 182:Src/main.c    **** 
 183:Src/main.c    **** extern tcByte VS4210_TP_bt1120_1080P_1080P_mode0_w0_88param[VS4210_INIT_NUMBER] ;
 184:Src/main.c    **** extern tcByte VS4210_TP_bt1120_720P_1080P_mode0_w0_88param[VS4210_INIT_NUMBER] ;
 185:Src/main.c    **** extern tcByte VS4210_TP_bt1120_NTSC_1080P_mode0_w0_88param[VS4210_INIT_NUMBER] ;
 186:Src/main.c    **** extern tcByte VS4210_TP_bt1120_PAL_1080P_mode0_w0_88param[VS4210_INIT_NUMBER] ;
 187:Src/main.c    **** 
 188:Src/main.c    **** //Extern OSD 20200110-01
 189:Src/main.c    **** extern const unsigned char UserDefineFont1[40*(4+23+1)] ; //extern OSD
 190:Src/main.c    **** 
 191:Src/main.c    **** extern tcByte VS4210_hdmi1080P_1080P_mode0_w0_88param[VS4210_INIT_NUMBER];
 192:Src/main.c    **** extern tcByte VS4210_Addr_88param[VS4210_INIT_NUMBER];
 193:Src/main.c    **** 
 194:Src/main.c    **** tByte volatile gRxLoopFlg = 1 ;
 195:Src/main.c    **** T_VS4210_MutiWindows pVS4210_JointKind1 ;
 196:Src/main.c    **** 
 197:Src/main.c    **** static volatile tByte  u8PowerFlg  = 0 ;
 198:Src/main.c    **** /*static volatile */tByte  OSDSecCount = 0 ;
 199:Src/main.c    **** //static volatile 
 200:Src/main.c    **** 	tByte  OSDStateFlg = 1 ;
 201:Src/main.c    **** static volatile tByte  IR_ShiftCount = 0 ;
 202:Src/main.c    **** static volatile tDWord IR_4BYTE = 0 ;
 203:Src/main.c    **** static volatile tWord  u16Vendor ;
 204:Src/main.c    **** static volatile tByte  u8IRcode ;
 205:Src/main.c    **** static volatile tByte  u8IRCheckcode ;
ARM GAS  /tmp/ccs2VtGF.s 			page 5


 206:Src/main.c    **** static volatile tByte  PreIR_Code = 0 ;
 207:Src/main.c    **** static volatile tByte  IR_Code = 0 ;
 208:Src/main.c    **** static volatile tByte  IR_StartFlg = 0 ;
 209:Src/main.c    **** static volatile tByte  IR_END_Flg = 0 ;
 210:Src/main.c    **** static volatile tByte  IR_IRQFlg = 0 ;
 211:Src/main.c    **** static volatile tByte  PreIR_IRQ_Index = 0 ;
 212:Src/main.c    **** static volatile tByte  IR_IRQ_Index = 0 ;
 213:Src/main.c    **** static volatile tWord  IR_PlusTimeVal = 0 ;
 214:Src/main.c    **** static volatile tDWord tim3count = 0 ; //10us
 215:Src/main.c    **** 
 216:Src/main.c    **** static volatile tDWord TxiCount = 0 ;
 217:Src/main.c    **** static volatile tDWord RxiCount = 0 ;
 218:Src/main.c    **** 
 219:Src/main.c    **** static char Rx_data[2],Rx2_data[2]/*, Rx_Buffer[RXBUFMAX]*/, Transfer_cplt;
 220:Src/main.c    **** static volatile int Rx_indx = 0 ;
 221:Src/main.c    **** static volatile int RxBufIndex= 0 ;
 222:Src/main.c    **** static char gRxbuf[RXBUFMAX] ;
 223:Src/main.c    **** 
 224:Src/main.c    **** static volatile int DebugFlg = 0 ;
 225:Src/main.c    **** 
 226:Src/main.c    **** //static int OutMapLoopModeIndex = VS4210_LOOP_MODE_NUMBER ;
 227:Src/main.c    **** //static tByte OutMapLoopOutSizeIndex ;
 228:Src/main.c    **** 
 229:Src/main.c    **** /* USER CODE END PV */
 230:Src/main.c    **** 
 231:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 232:Src/main.c    **** void SystemClock_Config(void);
 233:Src/main.c    **** //static void MX_ADC1_Init(void);
 234:Src/main.c    **** //static void MX_TIM2_Init(void);
 235:Src/main.c    **** static void MX_GPIO_Init(void);
 236:Src/main.c    **** static void MX_TIM3_Init(void);
 237:Src/main.c    **** static void MX_USART1_UART_Init(void);
 238:Src/main.c    **** static void MX_USART2_UART_Init(void);
 239:Src/main.c    **** 
 240:Src/main.c    **** extern void MCUTimerInitialTimerEvent(void);
 241:Src/main.c    **** extern void MCUTimerActiveTimerEvent(WORD usTime, BYTE ucEventID);
 242:Src/main.c    **** extern BYTE RS_ready(void);
 243:Src/main.c    **** extern BYTE RS2_ready(void);
 244:Src/main.c    **** 
 245:Src/main.c    **** extern void SysTimerHandler(void);
 246:Src/main.c    **** 
 247:Src/main.c    **** 
 248:Src/main.c    **** /* USER CODE BEGIN PFP */
 249:Src/main.c    **** #ifdef __GNUC__
 250:Src/main.c    **** 
 251:Src/main.c    **** // With GCC/RAISONANCE, small printf (option LD Linker->Libraries->Small printf
 252:Src/main.c    **** 
 253:Src/main.c    **** //   set to 'Yes') calls __io_putchar()
 254:Src/main.c    **** 
 255:Src/main.c    **** int _write(int file, char *data, int len)
 256:Src/main.c    **** {
 257:Src/main.c    ****     if ((file != STDOUT_FILENO) && (file != STDERR_FILENO))
 258:Src/main.c    ****     {
 259:Src/main.c    ****         errno = EBADF;
 260:Src/main.c    ****         return -1;
 261:Src/main.c    ****     }
 262:Src/main.c    ****     // arbitrary timeout 1000
ARM GAS  /tmp/ccs2VtGF.s 			page 6


 263:Src/main.c    ****     HAL_StatusTypeDef status =
 264:Src/main.c    ****         HAL_UART_Transmit(&huart1, (uint8_t*)data, (uint16_t)len, 1000);
 265:Src/main.c    ****     // return # of bytes written - as best we can tell
 266:Src/main.c    ****     return (status == HAL_OK ? len : 0);
 267:Src/main.c    **** }
 268:Src/main.c    **** #else
 269:Src/main.c    **** int fputc(int ch, FILE *f)
 270:Src/main.c    **** {
 271:Src/main.c    ****     /* Place your implementation of fputc here */
 272:Src/main.c    ****     /* e.g. write a character to the USART */
 273:Src/main.c    ****     HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 100);
 274:Src/main.c    ****     return ch;
 275:Src/main.c    **** }
 276:Src/main.c    **** #endif
 277:Src/main.c    **** 
 278:Src/main.c    **** void Audio_Sel(unsigned char mode )
 279:Src/main.c    **** {
 280:Src/main.c    ****     gbAUDO_INDEX = mode ;
 281:Src/main.c    ****     switch(mode)
 282:Src/main.c    ****     {
 283:Src/main.c    ****     case HDMI_AUDIO_NONE:
 284:Src/main.c    **** //        A_AUDIO = 1 ;
 285:Src/main.c    **** //        B_AUDIO = 1 ;
 286:Src/main.c    **** //        H1_AUDIO= 1 ;
 287:Src/main.c    **** //        H2_AUDIO= 1 ;
 288:Src/main.c    **** //        H3_AUDIO= 1 ;
 289:Src/main.c    **** //        H4_AUDIO= 1 ;
 290:Src/main.c    ****   //mask by ryan@20210126             HAL_GPIO_WritePin(A_AUDIO_GPIO_Port, A_AUDIO_Pin, GPIO_PIN_SE
 291:Src/main.c    ****         HAL_GPIO_WritePin(B_AUDIO_GPIO_Port, B_AUDIO_Pin, GPIO_PIN_SET);
 292:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 293:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 294:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 295:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 296:Src/main.c    ****         break ;
 297:Src/main.c    **** 
 298:Src/main.c    ****     case HDMI_AUDIO_1:
 299:Src/main.c    **** //        A_AUDIO = 0 ;
 300:Src/main.c    **** //        B_AUDIO = 1 ;
 301:Src/main.c    **** //        H1_AUDIO= 0 ;
 302:Src/main.c    **** //        H2_AUDIO= 1 ;
 303:Src/main.c    **** //        H3_AUDIO= 1 ;
 304:Src/main.c    **** //        H4_AUDIO= 1 ;
 305:Src/main.c    **** 
 306:Src/main.c    ****   //mask by ryan@20210126      HAL_GPIO_WritePin(A_AUDIO_GPIO_Port, A_AUDIO_Pin, GPIO_PIN_RESET);
 307:Src/main.c    ****         HAL_GPIO_WritePin(B_AUDIO_GPIO_Port, B_AUDIO_Pin, GPIO_PIN_SET);
 308:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_RESET);
 309:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 310:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 311:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 312:Src/main.c    **** 
 313:Src/main.c    ****         HDMI_Tx_SetAudioFs(gAudioSampleFreq[0])  ;
 314:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[0] ;
 315:Src/main.c    ****         break ;
 316:Src/main.c    **** 
 317:Src/main.c    ****     case HDMI_AUDIO_2:
 318:Src/main.c    **** //        A_AUDIO = 0 ;
 319:Src/main.c    **** //        B_AUDIO = 1 ;
ARM GAS  /tmp/ccs2VtGF.s 			page 7


 320:Src/main.c    **** //        H1_AUDIO= 1 ;
 321:Src/main.c    **** //        H2_AUDIO= 0 ;
 322:Src/main.c    **** //        H3_AUDIO= 1 ;
 323:Src/main.c    **** //        H4_AUDIO= 1 ;
 324:Src/main.c    **** 
 325:Src/main.c    ****   //mask by ryan@20210126             HAL_GPIO_WritePin(A_AUDIO_GPIO_Port, A_AUDIO_Pin, GPIO_PIN_RE
 326:Src/main.c    ****         HAL_GPIO_WritePin(B_AUDIO_GPIO_Port, B_AUDIO_Pin, GPIO_PIN_SET);
 327:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 328:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_RESET);
 329:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 330:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 331:Src/main.c    **** 
 332:Src/main.c    ****         HDMI_Tx_SetAudioFs(gAudioSampleFreq[1])  ;
 333:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[1] ;
 334:Src/main.c    ****         break ;
 335:Src/main.c    **** 
 336:Src/main.c    ****     case HDMI_AUDIO_3:
 337:Src/main.c    **** //        A_AUDIO = 1 ;
 338:Src/main.c    **** //        B_AUDIO = 0 ;
 339:Src/main.c    **** //        H1_AUDIO= 1 ;
 340:Src/main.c    **** //        H2_AUDIO= 1 ;
 341:Src/main.c    **** //        H3_AUDIO= 0 ;
 342:Src/main.c    **** //        H4_AUDIO= 1 ;
 343:Src/main.c    ****    //mask by ryan@20210126            HAL_GPIO_WritePin(A_AUDIO_GPIO_Port, A_AUDIO_Pin, GPIO_PIN_SE
 344:Src/main.c    ****         HAL_GPIO_WritePin(B_AUDIO_GPIO_Port, B_AUDIO_Pin, GPIO_PIN_RESET);
 345:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 346:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 347:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_RESET);
 348:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 349:Src/main.c    **** 
 350:Src/main.c    ****         HDMI_Tx_SetAudioFs(gAudioSampleFreq[2])  ;
 351:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[2] ;
 352:Src/main.c    ****         break ;
 353:Src/main.c    **** 
 354:Src/main.c    ****     case HDMI_AUDIO_4:
 355:Src/main.c    **** //        A_AUDIO = 1 ;
 356:Src/main.c    **** //        B_AUDIO = 0 ;
 357:Src/main.c    **** //        H1_AUDIO= 1 ;
 358:Src/main.c    **** //        H2_AUDIO= 1 ;
 359:Src/main.c    **** //        H3_AUDIO= 1 ;
 360:Src/main.c    **** //        H4_AUDIO= 0 ;
 361:Src/main.c    ****   //mask by ryan@20210126             HAL_GPIO_WritePin(A_AUDIO_GPIO_Port, A_AUDIO_Pin, GPIO_PIN_SE
 362:Src/main.c    ****         HAL_GPIO_WritePin(B_AUDIO_GPIO_Port, B_AUDIO_Pin, GPIO_PIN_RESET);
 363:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 364:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 365:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 366:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_RESET);
 367:Src/main.c    **** 
 368:Src/main.c    ****         HDMI_Tx_SetAudioFs(gAudioSampleFreq[3])  ;
 369:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[3] ;
 370:Src/main.c    ****         break ;
 371:Src/main.c    ****     }
 372:Src/main.c    **** }
 373:Src/main.c    **** 
 374:Src/main.c    **** void SET_Audio_Mute(unsigned char mode )
 375:Src/main.c    **** {
 376:Src/main.c    **** 
ARM GAS  /tmp/ccs2VtGF.s 			page 8


 377:Src/main.c    **** if(mode==ON)
 378:Src/main.c    **** 	HAL_GPIO_WritePin(AUD_I2C_MUTE_Port,AUD_I2C_MUTE_Pin, GPIO_PIN_RESET);
 379:Src/main.c    **** else
 380:Src/main.c    **** 	HAL_GPIO_WritePin(AUD_I2C_MUTE_Port,AUD_I2C_MUTE_Pin, GPIO_PIN_SET);
 381:Src/main.c    **** 
 382:Src/main.c    **** Printf("(*SET_Audio_Mute=%d)",(WORD)mode);
 383:Src/main.c    **** 
 384:Src/main.c    **** }
 385:Src/main.c    **** 
 386:Src/main.c    **** //Sleep
 387:Src/main.c    **** /*
 388:Src/main.c    **** void msleep(unsigned int i )
 389:Src/main.c    **** {
 390:Src/main.c    ****     HAL_Delay(i);
 391:Src/main.c    **** }
 392:Src/main.c    **** */
 393:Src/main.c    **** 
 394:Src/main.c    **** /* USER CODE END PFP */
 395:Src/main.c    **** 
 396:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 397:Src/main.c    **** /* USER CODE BEGIN 0 */
 398:Src/main.c    **** 
 399:Src/main.c    **** void InitialTimerEvent(void)
 400:Src/main.c    **** {
 401:Src/main.c    **** 	MCUTimerInitialTimerEvent();  //clear all of timer event	
 402:Src/main.c    **** 
 403:Src/main.c    **** 		#if (_DEBUG_MESSAGE_SysTimerEvent==ON)
 404:Src/main.c    ****   		//MCUTimerActiveTimerEvent(SEC(10), _SYSTEM_TIMER_EVENT_SHOW_WORKING_TIMER);//for timer
 405:Src/main.c    **** 
 406:Src/main.c    **** 
 407:Src/main.c    **** 
 408:Src/main.c    **** 		   //	MCUTimerActiveTimerEvent(SEC(6), _SYSTEM_TIMER_EVENT_BOOT_VIDEO_DETECT);//for timer
 409:Src/main.c    ****   		//MCUTimerActiveTimerEvent(SEC(5), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);//for timer
 410:Src/main.c    **** 
 411:Src/main.c    **** //	MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_UART2_CHECK);//for test
 412:Src/main.c    **** 		
 413:Src/main.c    ****      		#endif
 414:Src/main.c    **** //MCUTimerActiveTimerEvent(SEC(5), _SYSTEM_TIMER_EVENT_VIDEO_RESET);			
 415:Src/main.c    **** 	/*		
 416:Src/main.c    ****      	MCUTimerActiveTimerEvent(SEC(5-2), _SYSTEM_TIMER_EVENT_BOOT_VIDEO_DETECT);//for timer
 417:Src/main.c    **** 	MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_LIGHT_SENSOR_CHECK);//for timer
 418:Src/main.c    **** 	MCUTimerActiveTimerEvent(100, _SYSTEM_TIMER_EVENT_GRN_ON);
 419:Src/main.c    **** 	MCUTimerActiveTimerEvent(SEC(1),  _SYSTEM_TIMER_EVENT_ADC_CHECK);
 420:Src/main.c    **** 	*/
 421:Src/main.c    **** }
 422:Src/main.c    **** 
 423:Src/main.c    **** void GetRS232_CMD(void)
 424:Src/main.c    **** {
 425:Src/main.c    ****     char achstr[3] ;
 426:Src/main.c    ****     char *endptr ;
 427:Src/main.c    ****     long IrNum  ;
 428:Src/main.c    ****     if (Transfer_cplt == 1)
 429:Src/main.c    ****     {
 430:Src/main.c    ****         Transfer_cplt = 0 ;
 431:Src/main.c    ****         printf("RxBufIndex=%d,str=%s\r\n",RxBufIndex, gRxbuf);
 432:Src/main.c    ****         if ( RxBufIndex >= 4 )
 433:Src/main.c    ****         {
ARM GAS  /tmp/ccs2VtGF.s 			page 9


 434:Src/main.c    ****             if ((gRxbuf[0] =='G') && (gRxbuf[3]=='g'))
 435:Src/main.c    ****             {
 436:Src/main.c    ****                 achstr[2] = '\0' ;
 437:Src/main.c    ****                 memcpy(&achstr[0], &gRxbuf[1], 2 ) ;
 438:Src/main.c    ****                 IrNum = strtol(achstr, &endptr, 16) ;
 439:Src/main.c    ****                 printf("IrNum=0x%02x\r\n",(int)IrNum);
 440:Src/main.c    ****             }
 441:Src/main.c    ****             else if ((gRxbuf[0] =='S') && (gRxbuf[5]=='s'))
 442:Src/main.c    ****             {                
 443:Src/main.c    ****             }
 444:Src/main.c    ****         }
 445:Src/main.c    ****     }
 446:Src/main.c    **** }
 447:Src/main.c    **** 
 448:Src/main.c    **** //static
 449:Src/main.c    **** 	void setloopoutmode(int index)
 450:Src/main.c    **** {
 451:Src/main.c    **** /*
 452:Src/main.c    **** 	pVS4210_JointKind1.AudioChannel = HDMI_AUDIO_NONE ;
 453:Src/main.c    **** 	  pVS4210_JointKind1.DrawBoxFlg =1 ;
 454:Src/main.c    **** 	  pVS4210_JointKind1.DrawOSDFlg =0x03 ; //bits 0 ,1
 455:Src/main.c    **** //	pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE1 ;
 456:Src/main.c    **** 	  pVS4210_JointKind1.OutputSize = _OUTPUT_800x480;//_OUTPUT_1080P60 ;
 457:Src/main.c    **** */
 458:Src/main.c    ****     switch(index)
 459:Src/main.c    ****     {
 460:Src/main.c    ****     case VS4210_LOOP_MODE0_w0:
 461:Src/main.c    ****     {
 462:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE0_w0 ;
 463:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 464:Src/main.c    **** 	 OSD_MIRROR[0]=CAMA_M;
 465:Src/main.c    **** 	 gabVXIS_Input_mirrorH[0]=CAMA_M;
 466:Src/main.c    ****         printf("VS4210_MODE0_w0\r\n") ;
 467:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 468:Src/main.c    ****         break ;
 469:Src/main.c    ****     }
 470:Src/main.c    ****     case VS4210_LOOP_MODE0_w1:
 471:Src/main.c    ****     {
 472:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE0_w1 ;
 473:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 474:Src/main.c    ****    	 OSD_MIRROR[0]=CAMB_M;
 475:Src/main.c    **** 	 gabVXIS_Input_mirrorH[1]=CAMB_M; 
 476:Src/main.c    **** 	 OSD_SPEAKER[0]=ON;
 477:Src/main.c    ****         printf("VS4210_MODE0_w1\r\n") ;
 478:Src/main.c    ****         break ;
 479:Src/main.c    ****     }
 480:Src/main.c    ****     case VS4210_LOOP_MODE0_w2:
 481:Src/main.c    ****     {
 482:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE0_w2 ;
 483:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 484:Src/main.c    **** 	 OSD_MIRROR[0]=CAMC_M;	
 485:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 	 
 486:Src/main.c    **** 	 OSD_SPEAKER[0]=ON;
 487:Src/main.c    ****         printf("VS4210_MODE0_w2\r\n") ;
 488:Src/main.c    ****         break ;
 489:Src/main.c    ****     }
 490:Src/main.c    ****     case VS4210_LOOP_MODE0_w3:
ARM GAS  /tmp/ccs2VtGF.s 			page 10


 491:Src/main.c    ****     {
 492:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE0_w3 ;
 493:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 494:Src/main.c    ****    	OSD_MIRROR[0]=CAMR_M;	
 495:Src/main.c    **** 	gabVXIS_Input_mirrorH[3]=CAMR_M; 		
 496:Src/main.c    ****   	OSD_SPEAKER[0]=ON;
 497:Src/main.c    ****         printf("VS4210_MODE0_w3\r\n") ;
 498:Src/main.c    ****         break ;
 499:Src/main.c    ****     }
 500:Src/main.c    ****     case VS4210_LOOP_MODE1:
 501:Src/main.c    ****     {
 502:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE1 ;
 503:Src/main.c    **** 	
 504:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 505:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 506:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 507:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 508:Src/main.c    ****    	  OSD_MIRROR[0]=CAMA_M;	
 509:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 510:Src/main.c    ****    	  OSD_MIRROR[2]=CAMC_M;	
 511:Src/main.c    ****    	  OSD_MIRROR[3]=CAMR_M;	
 512:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
 513:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 514:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 		  
 515:Src/main.c    **** 	gabVXIS_Input_mirrorH[3]=CAMR_M; 		  
 516:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
 517:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;
 518:Src/main.c    **** 	  OSD_SPEAKER[2]=OFF;
 519:Src/main.c    **** 	  OSD_SPEAKER[3]=ON;
 520:Src/main.c    **** 
 521:Src/main.c    ****         printf("VS4210_MODE1\r\n") ;
 522:Src/main.c    ****         break ;
 523:Src/main.c    ****     }
 524:Src/main.c    **** 	
 525:Src/main.c    ****     case VS4210_LOOP_MODE2:
 526:Src/main.c    ****     {
 527:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE2 ;
 528:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 529:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 530:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 531:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 532:Src/main.c    ****         printf("VS4210_MODE2\r\n") ;
 533:Src/main.c    ****         break ;
 534:Src/main.c    ****     }
 535:Src/main.c    **** 	#if 0
 536:Src/main.c    ****     case VS4210_LOOP_MODE8:
 537:Src/main.c    ****     {
 538:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 539:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 540:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 541:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 542:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 543:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 544:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 545:Src/main.c    ****    	  OSD_MIRROR[2]=CAMC_M;	
 546:Src/main.c    ****    	  OSD_MIRROR[3]=CAMR_M;	
 547:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
ARM GAS  /tmp/ccs2VtGF.s 			page 11


 548:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 549:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 		  
 550:Src/main.c    **** 	gabVXIS_Input_mirrorH[3]=CAMR_M;	  
 551:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 552:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;
 553:Src/main.c    **** 	  OSD_SPEAKER[2]=OFF;
 554:Src/main.c    ****         printf("VS4210_MODE8 ch1 ch2 ch3\r\n") ;
 555:Src/main.c    ****         break ;
 556:Src/main.c    ****     }
 557:Src/main.c    **** 	    case VS4210_LOOP_MODE8_412:
 558:Src/main.c    ****     {
 559:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 560:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 561:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 562:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =2 ;
 563:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =0 ;
 564:Src/main.c    **** 	  OSD_MIRROR[0]=CAMR_M;	
 565:Src/main.c    ****    	  OSD_MIRROR[1]=CAMA_M;	
 566:Src/main.c    ****    	  OSD_MIRROR[2]=CAMB_M;	
 567:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMR_M; 		  
 568:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 569:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMB_M; 		  
 570:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 571:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;
 572:Src/main.c    **** 	  OSD_SPEAKER[2]=OFF;
 573:Src/main.c    **** 	  
 574:Src/main.c    ****       //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 575:Src/main.c    ****         printf("VS4210_MODE8 ch4 ch1 ch2\r\n") ;
 576:Src/main.c    ****         break ;
 577:Src/main.c    ****     }
 578:Src/main.c    ****      case VS4210_LOOP_MODE8_123:
 579:Src/main.c    **** 	 {
 580:Src/main.c    **** 			 pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 581:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 582:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 583:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 584:Src/main.c    **** 		   OSD_MIRROR[0]=CAMA_M; 
 585:Src/main.c    **** 		   OSD_MIRROR[1]=CAMB_M; 
 586:Src/main.c    **** 		   OSD_MIRROR[2]=CAMC_M; 
 587:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
 588:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 589:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 		   
 590:Src/main.c    **** 		   OSD_SPEAKER[0]=ON;
 591:Src/main.c    **** 		   OSD_SPEAKER[1]=OFF;
 592:Src/main.c    **** 		   OSD_SPEAKER[2]=OFF;
 593:Src/main.c    **** 		   
 594:Src/main.c    **** 		   //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 595:Src/main.c    **** 			 printf("VS4210_MODE8 ch1 ch2 ch3\r\n") ;
 596:Src/main.c    **** 			 break ;
 597:Src/main.c    **** 		 }
 598:Src/main.c    ****   case VS4210_LOOP_MODE8_124:
 599:Src/main.c    **** 	 {
 600:Src/main.c    **** 			 pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 601:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 602:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 603:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap2 =4 ;
 604:Src/main.c    **** 		   OSD_MIRROR[0]=CAMA_M; 
ARM GAS  /tmp/ccs2VtGF.s 			page 12


 605:Src/main.c    **** 		   OSD_MIRROR[1]=CAMB_M; 
 606:Src/main.c    **** 		   OSD_MIRROR[2]=CAMR_M; 
 607:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
 608:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 609:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMR_M; 		   
 610:Src/main.c    **** 		   OSD_SPEAKER[0]=OFF;
 611:Src/main.c    **** 		   OSD_SPEAKER[1]=OFF;
 612:Src/main.c    **** 		   OSD_SPEAKER[2]=ON;
 613:Src/main.c    **** 		   
 614:Src/main.c    **** 		   //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 615:Src/main.c    **** 			 printf("VS4210_MODE8 ch1 ch2 ch4\r\n") ;
 616:Src/main.c    **** 			 break ;
 617:Src/main.c    **** 		 }	 
 618:Src/main.c    ****   case VS4210_LOOP_MODE8_134:
 619:Src/main.c    **** 	 {
 620:Src/main.c    **** 			 pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 621:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 622:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 623:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap2 =4 ;
 624:Src/main.c    **** 		   OSD_MIRROR[0]=CAMA_M; 
 625:Src/main.c    **** 		   OSD_MIRROR[1]=CAMC_M; 
 626:Src/main.c    **** 		   OSD_MIRROR[2]=CAMR_M; 
 627:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
 628:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 		  
 629:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMR_M; 		   
 630:Src/main.c    **** 		   OSD_SPEAKER[0]=OFF;
 631:Src/main.c    **** 		   OSD_SPEAKER[1]=OFF;
 632:Src/main.c    **** 		   OSD_SPEAKER[2]=ON;
 633:Src/main.c    **** 		   //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 634:Src/main.c    **** 			 printf("VS4210_MODE8 ch1 ch3 ch4\r\n") ;
 635:Src/main.c    **** 			 break ;
 636:Src/main.c    **** 		 }	 
 637:Src/main.c    **** //=============
 638:Src/main.c    **** case VS4210_LOOP_MODE8_213:
 639:Src/main.c    ****    {
 640:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 641:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 642:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 643:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 644:Src/main.c    **** 		 OSD_MIRROR[0]=CAMB_M; 
 645:Src/main.c    **** 		 OSD_MIRROR[1]=CAMA_M; 
 646:Src/main.c    **** 		 OSD_MIRROR[2]=CAMC_M; 
 647:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMB_M; 		  
 648:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 649:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 			 
 650:Src/main.c    **** 		 OSD_SPEAKER[0]=ON;
 651:Src/main.c    **** 		 OSD_SPEAKER[1]=OFF;
 652:Src/main.c    **** 		 OSD_SPEAKER[2]=OFF;
 653:Src/main.c    **** 		 
 654:Src/main.c    **** 		 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 655:Src/main.c    **** 		   printf("VS4210_MODE8 ch2 ch1 ch3\r\n") ;
 656:Src/main.c    **** 		   break ;
 657:Src/main.c    **** 	   }   
 658:Src/main.c    **** case VS4210_LOOP_MODE8_214:
 659:Src/main.c    ****    {
 660:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 661:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =2 ;
ARM GAS  /tmp/ccs2VtGF.s 			page 13


 662:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 663:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =4 ;
 664:Src/main.c    **** 		 OSD_MIRROR[0]=CAMB_M; 
 665:Src/main.c    **** 		 OSD_MIRROR[1]=CAMA_M; 
 666:Src/main.c    **** 		 OSD_MIRROR[2]=CAMR_M; 
 667:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMB_M; 		  
 668:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 669:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMR_M; 			 
 670:Src/main.c    **** 		 OSD_SPEAKER[0]=OFF;
 671:Src/main.c    **** 		 OSD_SPEAKER[1]=OFF;
 672:Src/main.c    **** 		 OSD_SPEAKER[2]=ON;
 673:Src/main.c    **** 		 
 674:Src/main.c    **** 		 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 675:Src/main.c    **** 		   printf("VS4210_MODE8 ch2 ch1 ch4\r\n") ;
 676:Src/main.c    **** 		   break ;
 677:Src/main.c    **** 	   }   
 678:Src/main.c    **** case VS4210_LOOP_MODE8_234:
 679:Src/main.c    ****    {
 680:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 681:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 682:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 683:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =4 ;
 684:Src/main.c    **** 		 OSD_MIRROR[0]=CAMA_M; 
 685:Src/main.c    **** 		 OSD_MIRROR[1]=CAMC_M; 
 686:Src/main.c    **** 		 OSD_MIRROR[2]=CAMR_M; 
 687:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
 688:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 		  
 689:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMR_M; 			 
 690:Src/main.c    **** 		 OSD_SPEAKER[0]=OFF;
 691:Src/main.c    **** 		 OSD_SPEAKER[1]=OFF;
 692:Src/main.c    **** 		 OSD_SPEAKER[2]=ON;
 693:Src/main.c    **** 		 
 694:Src/main.c    **** 		 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 695:Src/main.c    **** 		   printf("VS4210_MODE8 ch2 ch3 ch4\r\n") ;
 696:Src/main.c    **** 		   break ;
 697:Src/main.c    **** 	   }   
 698:Src/main.c    **** 
 699:Src/main.c    **** //=============
 700:Src/main.c    **** case VS4210_LOOP_MODE8_312:
 701:Src/main.c    ****    {
 702:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 703:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 704:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 705:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =2 ;
 706:Src/main.c    **** 		 OSD_MIRROR[0]=CAMC_M; 
 707:Src/main.c    **** 		 OSD_MIRROR[1]=CAMA_M; 
 708:Src/main.c    **** 		 OSD_MIRROR[2]=CAMB_M; 
 709:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMC_M; 		  
 710:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 711:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMB_M; 		 
 712:Src/main.c    **** 		 OSD_SPEAKER[0]=ON;
 713:Src/main.c    **** 		 OSD_SPEAKER[1]=OFF;
 714:Src/main.c    **** 		 OSD_SPEAKER[2]=OFF;	 
 715:Src/main.c    **** 		 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 716:Src/main.c    **** 		   printf("VS4210_MODE8 ch3 ch1 ch2\r\n") ;
 717:Src/main.c    **** 		   break ;
 718:Src/main.c    **** 	   }   
ARM GAS  /tmp/ccs2VtGF.s 			page 14


 719:Src/main.c    **** case VS4210_LOOP_MODE8_314:
 720:Src/main.c    ****    {
 721:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 722:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 723:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 724:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =4 ;
 725:Src/main.c    **** 		 OSD_MIRROR[0]=CAMC_M; 
 726:Src/main.c    **** 		 OSD_MIRROR[1]=CAMA_M; 
 727:Src/main.c    **** 		 OSD_MIRROR[2]=CAMR_M; 
 728:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMC_M; 		  
 729:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 730:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMR_M; 		 
 731:Src/main.c    **** 		 OSD_SPEAKER[0]=OFF;
 732:Src/main.c    **** 		 OSD_SPEAKER[1]=OFF;
 733:Src/main.c    **** 		 OSD_SPEAKER[2]=ON;	 
 734:Src/main.c    **** 		 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 735:Src/main.c    **** 		   printf("VS4210_MODE8 ch3 ch1 ch4\r\n") ;
 736:Src/main.c    **** 		   break ;
 737:Src/main.c    **** 	   }   
 738:Src/main.c    **** case VS4210_LOOP_MODE8_324:
 739:Src/main.c    ****    {
 740:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 741:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 742:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 743:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =4 ;
 744:Src/main.c    **** 		 OSD_MIRROR[0]=CAMC_M; 
 745:Src/main.c    **** 		 OSD_MIRROR[1]=CAMB_M; 
 746:Src/main.c    **** 		 OSD_MIRROR[2]=CAMR_M; 
 747:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMC_M; 		  
 748:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 749:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMR_M; 			 
 750:Src/main.c    **** 		 OSD_SPEAKER[0]=OFF;
 751:Src/main.c    **** 		 OSD_SPEAKER[1]=OFF;
 752:Src/main.c    **** 		 OSD_SPEAKER[2]=ON;	 
 753:Src/main.c    **** 		 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 754:Src/main.c    **** 		   printf("VS4210_MODE8 ch3 ch2 ch4\r\n") ;
 755:Src/main.c    **** 		   break ;
 756:Src/main.c    **** 	   }   
 757:Src/main.c    **** //=============
 758:Src/main.c    **** 
 759:Src/main.c    **** 		case VS4210_LOOP_MODE8_413:
 760:Src/main.c    **** 		   {
 761:Src/main.c    **** 				   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 762:Src/main.c    **** 				   pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 763:Src/main.c    **** 				   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 764:Src/main.c    **** 				   pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 765:Src/main.c    **** 				 OSD_MIRROR[0]=CAMR_M; 
 766:Src/main.c    **** 				 OSD_MIRROR[1]=CAMA_M; 
 767:Src/main.c    **** 				 OSD_MIRROR[2]=CAMC_M; 
 768:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMR_M; 		  
 769:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 770:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 				 
 771:Src/main.c    **** 				 OSD_SPEAKER[0]=ON;
 772:Src/main.c    **** 				 OSD_SPEAKER[1]=OFF;
 773:Src/main.c    **** 				 OSD_SPEAKER[2]=OFF;  
 774:Src/main.c    **** 				 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 775:Src/main.c    **** 				   printf("VS4210_MODE8 ch4 ch1 ch3\r\n") ;
ARM GAS  /tmp/ccs2VtGF.s 			page 15


 776:Src/main.c    **** 				   break ;
 777:Src/main.c    **** 			   }   
 778:Src/main.c    **** 		case VS4210_LOOP_MODE8_423:
 779:Src/main.c    **** 		   {
 780:Src/main.c    **** 				   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 781:Src/main.c    **** 				   pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 782:Src/main.c    **** 				   pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 783:Src/main.c    **** 				   pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 784:Src/main.c    **** 				 OSD_MIRROR[0]=CAMR_M; 
 785:Src/main.c    **** 				 OSD_MIRROR[1]=CAMB_M; 
 786:Src/main.c    **** 				 OSD_MIRROR[2]=CAMC_M; 
 787:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMR_M; 		  
 788:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 789:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 					 
 790:Src/main.c    **** 				 OSD_SPEAKER[0]=ON;
 791:Src/main.c    **** 				 OSD_SPEAKER[1]=OFF;
 792:Src/main.c    **** 				 OSD_SPEAKER[2]=OFF;  
 793:Src/main.c    **** 				 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 794:Src/main.c    **** 				   printf("VS4210_MODE8 ch4 ch2 ch3\r\n") ;
 795:Src/main.c    **** 				   break ;
 796:Src/main.c    **** 			   }   
 797:Src/main.c    **** 
 798:Src/main.c    **** 		//=============
 799:Src/main.c    **** 	    case VS4210_LOOP_MODE10_123:
 800:Src/main.c    ****     {
 801:Src/main.c    ****   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE10 ;
 802:Src/main.c    **** 
 803:Src/main.c    **** pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 804:Src/main.c    **** pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 805:Src/main.c    **** pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 806:Src/main.c    **** 	pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 807:Src/main.c    **** 
 808:Src/main.c    **** 	OSD_MIRROR[0]=CAMR_M; 
 809:Src/main.c    **** 	OSD_MIRROR[1]=CAMA_M; 
 810:Src/main.c    **** 	OSD_MIRROR[2]=CAMB_M; 
 811:Src/main.c    **** 	OSD_MIRROR[3]=CAMC_M; 
 812:Src/main.c    **** 
 813:Src/main.c    **** gabVXIS_Input_mirrorH[0]=CAMR_M;		  
 814:Src/main.c    **** gabVXIS_Input_mirrorH[1]=CAMA_M;		  
 815:Src/main.c    **** gabVXIS_Input_mirrorH[2]=CAMB_M;		
 816:Src/main.c    **** gabVXIS_Input_mirrorH[3]=CAMC_M;		  
 817:Src/main.c    **** 
 818:Src/main.c    **** 	OSD_SPEAKER[0]=ON;
 819:Src/main.c    **** 	OSD_SPEAKER[1]=OFF;
 820:Src/main.c    **** 	OSD_SPEAKER[2]=OFF;
 821:Src/main.c    **** 	OSD_SPEAKER[3]=OFF;
 822:Src/main.c    **** 
 823:Src/main.c    **** 
 824:Src/main.c    ****      //   pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 825:Src/main.c    ****         printf("VS4210_MODE10 ch1 ch2 ch3\r\n") ;
 826:Src/main.c    ****         break ;
 827:Src/main.c    ****     }
 828:Src/main.c    **** case VS4210_LOOP_MODE10_412:
 829:Src/main.c    **** 	{
 830:Src/main.c    **** 	   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE10 ;
 831:Src/main.c    **** 	   pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 832:Src/main.c    **** 	   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
ARM GAS  /tmp/ccs2VtGF.s 			page 16


 833:Src/main.c    **** 	   pVS4210_JointKind1.WindowMap.WMap2 =2 ;
 834:Src/main.c    **** 	    pVS4210_JointKind1.WindowMap.WMap3 =0 ;
 835:Src/main.c    **** 	  OSD_MIRROR[0]=CAMR_M;	
 836:Src/main.c    ****    	  OSD_MIRROR[1]=CAMA_M;	
 837:Src/main.c    ****    	  OSD_MIRROR[2]=CAMB_M;	
 838:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMR_M; 		  
 839:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 840:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMB_M; 	  
 841:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 842:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;
 843:Src/main.c    **** 	  OSD_SPEAKER[2]=OFF;
 844:Src/main.c    **** 	//	 pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 845:Src/main.c    **** 	   printf("VS4210_MODE10 ch4 ch1 ch2\r\n") ;
 846:Src/main.c    **** 		break;
 847:Src/main.c    ****     	}
 848:Src/main.c    **** 	case VS4210_LOOP_MODE10_413:
 849:Src/main.c    **** 		{
 850:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE10 ;
 851:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 852:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 853:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 854:Src/main.c    **** 		  OSD_MIRROR[0]=CAMR_M; 
 855:Src/main.c    **** 		  OSD_MIRROR[1]=CAMA_M; 
 856:Src/main.c    **** 		  OSD_MIRROR[2]=CAMC_M; 
 857:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMR_M; 		  
 858:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 859:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 			  
 860:Src/main.c    **** 		  OSD_SPEAKER[0]=ON;
 861:Src/main.c    **** 		  OSD_SPEAKER[1]=OFF;
 862:Src/main.c    **** 		  OSD_SPEAKER[2]=OFF;
 863:Src/main.c    **** 		//	 pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 864:Src/main.c    **** 		   printf("VS4210_MODE10 ch4 ch1 ch3\r\n") ;
 865:Src/main.c    **** 			break;
 866:Src/main.c    **** 			}
 867:Src/main.c    **** 	case VS4210_LOOP_MODE10_423:
 868:Src/main.c    **** 		{
 869:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE10 ;
 870:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 871:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 872:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 873:Src/main.c    **** 		  OSD_MIRROR[0]=CAMR_M; 
 874:Src/main.c    **** 		  OSD_MIRROR[1]=CAMB_M; 
 875:Src/main.c    **** 		  OSD_MIRROR[2]=CAMC_M; 
 876:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMR_M; 		  
 877:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 878:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 			  
 879:Src/main.c    **** 		  OSD_SPEAKER[0]=ON;
 880:Src/main.c    **** 		  OSD_SPEAKER[1]=OFF;
 881:Src/main.c    **** 		  OSD_SPEAKER[2]=OFF;
 882:Src/main.c    **** 		//	 pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 883:Src/main.c    **** 		   printf("VS4210_MODE10 ch4 ch2 ch3\r\n") ;
 884:Src/main.c    **** 			break;
 885:Src/main.c    **** 			}
 886:Src/main.c    **** 
 887:Src/main.c    ****     case VS4210_LOOP_MODE9:
 888:Src/main.c    ****     {
 889:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE9 ;
ARM GAS  /tmp/ccs2VtGF.s 			page 17


 890:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 891:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 892:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 893:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 894:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 895:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 896:Src/main.c    ****    	  OSD_MIRROR[2]=CAMC_M;	
 897:Src/main.c    ****    	  OSD_MIRROR[3]=CAMR_M;	
 898:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
 899:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 900:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 		  
 901:Src/main.c    **** 	gabVXIS_Input_mirrorH[3]=CAMR_M; 	  
 902:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
 903:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;
 904:Src/main.c    **** 	  OSD_SPEAKER[2]=OFF;
 905:Src/main.c    **** 	  OSD_SPEAKER[3]=ON;	  
 906:Src/main.c    ****         printf("VS4210_MODE9\r\n") ;
 907:Src/main.c    ****         break ;
 908:Src/main.c    ****     }
 909:Src/main.c    **** 	#endif
 910:Src/main.c    ****     case VS4210_LOOP_MODE12_12:
 911:Src/main.c    ****     {
 912:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 913:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 914:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 915:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 916:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 917:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
 918:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
 919:Src/main.c    ****   	OSD_SPEAKER[0]=ON;
 920:Src/main.c    ****   	OSD_SPEAKER[1]=OFF;
 921:Src/main.c    ****         printf("VS4210_MODE12 ch1 ch2\r\n") ;
 922:Src/main.c    ****         break ;
 923:Src/main.c    ****     }
 924:Src/main.c    **** 	case VS4210_LOOP_MODE12_14:
 925:Src/main.c    ****       {
 926:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 927:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 928:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =4 ;
 929:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 930:Src/main.c    ****    	  OSD_MIRROR[1]=CAMR_M;
 931:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
 932:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
 933:Src/main.c    ****   	OSD_SPEAKER[0]=OFF;
 934:Src/main.c    ****   	OSD_SPEAKER[1]=ON;	  
 935:Src/main.c    ****         printf("VS4210_MODE12 ch1 ch4\r\n") ;	
 936:Src/main.c    **** 	break;
 937:Src/main.c    ****     	}
 938:Src/main.c    **** 	case VS4210_LOOP_MODE12_42:
 939:Src/main.c    ****       {
 940:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 941:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 942:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 943:Src/main.c    **** 	  OSD_MIRROR[0]=CAMR_M;	
 944:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 945:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMR_M;			  
 946:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
ARM GAS  /tmp/ccs2VtGF.s 			page 18


 947:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 948:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 949:Src/main.c    ****         printf("VS4210_MODE12 ch4 ch2\r\n") ;	
 950:Src/main.c    **** 	break;
 951:Src/main.c    ****     	}
 952:Src/main.c    **** 	case VS4210_LOOP_MODE12_43:
 953:Src/main.c    ****       {
 954:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 955:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 956:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 957:Src/main.c    **** 	  OSD_MIRROR[0]=CAMR_M;	
 958:Src/main.c    ****    	  OSD_MIRROR[1]=CAMC_M;	
 959:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMR_M;			  
 960:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 	  
 961:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 962:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 963:Src/main.c    ****         printf("VS4210_MODE12 ch4 ch3\r\n") ;	
 964:Src/main.c    **** 	break;
 965:Src/main.c    ****     	}
 966:Src/main.c    **** 	//==============
 967:Src/main.c    **** 	case VS4210_LOOP_MODE12_21:
 968:Src/main.c    ****       {
 969:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 970:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 971:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 972:Src/main.c    **** 	  OSD_MIRROR[0]=CAMB_M;	
 973:Src/main.c    ****    	  OSD_MIRROR[1]=CAMA_M;	
 974:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMB_M;			  
 975:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
 976:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 977:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 978:Src/main.c    ****         printf("VS4210_MODE12 ch2 ch1\r\n") ;	
 979:Src/main.c    **** 	break;
 980:Src/main.c    ****     	}
 981:Src/main.c    **** 	case VS4210_LOOP_MODE12_23:
 982:Src/main.c    ****       {
 983:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 984:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 985:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 986:Src/main.c    **** 	  OSD_MIRROR[0]=CAMB_M;	
 987:Src/main.c    ****    	  OSD_MIRROR[1]=CAMC_M;	
 988:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMB_M;			  
 989:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 	  
 990:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 991:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 992:Src/main.c    ****         printf("VS4210_MODE12 ch2 ch3\r\n") ;	
 993:Src/main.c    **** 	break;
 994:Src/main.c    ****     	}
 995:Src/main.c    **** 	case VS4210_LOOP_MODE12_24:
 996:Src/main.c    ****       {
 997:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 998:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2;
 999:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =4 ;
1000:Src/main.c    **** 	  OSD_MIRROR[0]=CAMB_M;	
1001:Src/main.c    ****    	  OSD_MIRROR[1]=CAMR_M;	
1002:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMB_M;			  
1003:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
ARM GAS  /tmp/ccs2VtGF.s 			page 19


1004:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
1005:Src/main.c    **** 	  OSD_SPEAKER[1]=ON;		  
1006:Src/main.c    ****         printf("VS4210_MODE12 ch2 ch4\r\n") ;	
1007:Src/main.c    **** 	break;
1008:Src/main.c    ****     	}
1009:Src/main.c    **** 
1010:Src/main.c    **** 	//==============
1011:Src/main.c    **** 	case VS4210_LOOP_MODE12_13:
1012:Src/main.c    ****       {
1013:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
1014:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
1015:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =3 ;
1016:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
1017:Src/main.c    ****    	  OSD_MIRROR[1]=CAMC_M;	
1018:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
1019:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 	  
1020:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
1021:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;	
1022:Src/main.c    **** 	  
1023:Src/main.c    ****         printf("VS4210_MODE12 ch1 ch3\r\n") ;	
1024:Src/main.c    **** 	break;
1025:Src/main.c    ****     	}
1026:Src/main.c    **** 	case VS4210_LOOP_MODE12_32:
1027:Src/main.c    ****       {
1028:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
1029:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =3 ;
1030:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
1031:Src/main.c    **** 	  OSD_MIRROR[0]=CAMC_M;	
1032:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
1033:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMC_M;			  
1034:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
1035:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
1036:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;	
1037:Src/main.c    **** 	  
1038:Src/main.c    ****         printf("VS4210_MODE12 ch3 ch2\r\n") ;	
1039:Src/main.c    **** 	break;
1040:Src/main.c    ****     	}
1041:Src/main.c    **** 
1042:Src/main.c    ****     case VS4210_LOOP_MODE12_34:
1043:Src/main.c    ****     {
1044:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
1045:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =3 ;
1046:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =4 ;
1047:Src/main.c    **** 	  OSD_MIRROR[0]=CAMC_M;	
1048:Src/main.c    ****    	  OSD_MIRROR[1]=CAMR_M;	
1049:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMC_M;			  
1050:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
1051:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
1052:Src/main.c    **** 	  OSD_SPEAKER[1]=ON;	
1053:Src/main.c    **** 	  
1054:Src/main.c    ****         printf("VS4210_MODE12 ch3 ch4\r\n") ;
1055:Src/main.c    ****         break ;
1056:Src/main.c    ****     }
1057:Src/main.c    **** //========================
1058:Src/main.c    **** 
1059:Src/main.c    **** case VS4210_LOOP_MODE12_31:
1060:Src/main.c    ****   {
ARM GAS  /tmp/ccs2VtGF.s 			page 20


1061:Src/main.c    ****    pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
1062:Src/main.c    **** 	pVS4210_JointKind1.WindowMap.WMap0 =3 ;
1063:Src/main.c    **** 	pVS4210_JointKind1.WindowMap.WMap1 =1 ;
1064:Src/main.c    ****   OSD_MIRROR[0]=CAMC_M; 
1065:Src/main.c    ****   OSD_MIRROR[1]=CAMA_M; 
1066:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMC_M;			  
1067:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M;   
1068:Src/main.c    ****   OSD_SPEAKER[0]=ON;
1069:Src/main.c    ****   OSD_SPEAKER[1]=OFF;	
1070:Src/main.c    ****   
1071:Src/main.c    **** 	printf("VS4210_MODE12 ch3 ch1\r\n") ;	
1072:Src/main.c    **** break;
1073:Src/main.c    **** 	}
1074:Src/main.c    **** 
1075:Src/main.c    **** //=======================
1076:Src/main.c    **** #if 0
1077:Src/main.c    ****     case VS4210_LOOP_MODE14:
1078:Src/main.c    ****     {
1079:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE14 ;
1080:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
1081:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
1082:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
1083:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
1084:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
1085:Src/main.c    ****    	  OSD_MIRROR[2]=CAMC_M;	
1086:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
1087:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
1088:Src/main.c    **** 	  gabVXIS_Input_mirrorH[2]=CAMC_M;		
1089:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
1090:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;	
1091:Src/main.c    **** 	  OSD_SPEAKER[3]=OFF;	
1092:Src/main.c    **** 	  
1093:Src/main.c    ****         printf("VS4210_MODE14 ch1 ch2\r\n") ;
1094:Src/main.c    ****         break ;
1095:Src/main.c    ****     }
1096:Src/main.c    **** #endif
1097:Src/main.c    ****     }
1098:Src/main.c    **** 
1099:Src/main.c    **** 	
1100:Src/main.c    **** VS4210_SetMutiWindows(&pVS4210_JointKind1) ;
1101:Src/main.c    **** 
1102:Src/main.c    **** //AUDIO_SELECT(index);
1103:Src/main.c    **** AudioMute(ON);
1104:Src/main.c    **** 
1105:Src/main.c    **** MCUTimerCancelTimerEvent( _SYSTEM_TIMER_EVENT_AUDIO_CHANNEL_SELECT);
1106:Src/main.c    **** MCUTimerActiveTimerEvent(SEC(1),  _SYSTEM_TIMER_EVENT_AUDIO_CHANNEL_SELECT);
1107:Src/main.c    **** AUDIO_SELECT(index);
1108:Src/main.c    **** 
1109:Src/main.c    **** CURRENT_CH=index;
1110:Src/main.c    **** 
1111:Src/main.c    **** //ChangeVol(0);
1112:Src/main.c    **** 
1113:Src/main.c    **** }
1114:Src/main.c    **** 
1115:Src/main.c    **** /*
1116:Src/main.c    **** static int GetKet_State(void)
1117:Src/main.c    **** {
ARM GAS  /tmp/ccs2VtGF.s 			page 21


1118:Src/main.c    ****     int re = 0  ;
1119:Src/main.c    **** 
1120:Src/main.c    **** 	#if 0
1121:Src/main.c    ****     if (HAL_GPIO_ReadPin(SW1_GPIO_Port, SW1_Pin ) == 0)
1122:Src/main.c    ****     {
1123:Src/main.c    ****         re =1 ;
1124:Src/main.c    **** 		  re =0 ;
1125:Src/main.c    ****      //   printf("SW1 Key\r\n") ;
1126:Src/main.c    ****     }
1127:Src/main.c    ****     else if (HAL_GPIO_ReadPin(SW2_GPIO_Port, SW2_Pin ) == 0)
1128:Src/main.c    ****     {
1129:Src/main.c    ****         re =2 ;
1130:Src/main.c    **** 		 re =0 ;
1131:Src/main.c    ****     //    printf("SW2 Key\r\n") ;
1132:Src/main.c    ****     }
1133:Src/main.c    ****     else if (HAL_GPIO_ReadPin(SW3_GPIO_Port, SW3_Pin ) == 0)
1134:Src/main.c    ****     {
1135:Src/main.c    ****         re =3 ;
1136:Src/main.c    ****         printf("SW3 Key\r\n") ;
1137:Src/main.c    ****     }
1138:Src/main.c    ****     else if (HAL_GPIO_ReadPin(SW4_GPIO_Port, SW4_Pin ) == 0)
1139:Src/main.c    ****     {
1140:Src/main.c    ****         re =4 ;
1141:Src/main.c    ****         printf("SW4 Key\r\n") ;
1142:Src/main.c    ****     }
1143:Src/main.c    ****     else if (HAL_GPIO_ReadPin(SW5_GPIO_Port, SW5_Pin ) == 0)
1144:Src/main.c    ****     {
1145:Src/main.c    ****        // re =5 ;
1146:Src/main.c    ****       //  printf("SW5 Key\r\n") ;
1147:Src/main.c    ****       Monitor(); 
1148:Src/main.c    ****     }
1149:Src/main.c    ****     else if (HAL_GPIO_ReadPin(SW6_GPIO_Port, SW6_Pin ) == 0)
1150:Src/main.c    ****     {
1151:Src/main.c    ****         re =6 ;
1152:Src/main.c    ****         printf("SW6 Key\r\n") ;
1153:Src/main.c    ****     }
1154:Src/main.c    ****     else if (HAL_GPIO_ReadPin(SW7_GPIO_Port, SW7_Pin ) == 0)
1155:Src/main.c    ****     {
1156:Src/main.c    ****         re =7 ;
1157:Src/main.c    ****         printf("SW7 Key\r\n") ;
1158:Src/main.c    ****     }
1159:Src/main.c    **** #endif
1160:Src/main.c    **** 
1161:Src/main.c    ****     return re ;
1162:Src/main.c    **** }
1163:Src/main.c    **** */
1164:Src/main.c    **** 
1165:Src/main.c    **** BYTE CHECK_HDMI720P50(void)
1166:Src/main.c    **** {
1167:Src/main.c    **** 	tByte REG9C,REG9D,REGA1,REGA2 ;
1168:Src/main.c    **** 	tByte ret=0,i=0;
1169:Src/main.c    **** 	gHDMI_Index=0;	
1170:Src/main.c    **** 				REG9C=HDMIRX_ReadI2C_Byte(0x9c);			
1171:Src/main.c    **** 				REG9D=HDMIRX_ReadI2C_Byte(0x9d);
1172:Src/main.c    **** 				REGA1=HDMIRX_ReadI2C_Byte(0xa1);
1173:Src/main.c    **** 				REGA2=HDMIRX_ReadI2C_Byte(0xa2);
1174:Src/main.c    **** 				
ARM GAS  /tmp/ccs2VtGF.s 			page 22


1175:Src/main.c    **** 				if((REG9C==0xbc)&&(REG9D==0x07)&&(REGA1==0x10)&&(REGA2==0xB8))
1176:Src/main.c    **** 					{
1177:Src/main.c    **** 					dbg_Printf("ch%d, InputMode=%d \r\n", (int)(i+1),(int) gbVXIS_InputMode[i] ) ;
1178:Src/main.c    **** 					//dbg_Printf("ch%d, REG 0xA2=%x \r\n", (int)(i+1),(int) HDMIRX_ReadI2C_Byte(0xa2) ) ;
1179:Src/main.c    **** 					//dbg_Printf("ch%d, REG 0x9C=%x \r\n", (int)(i+1),(int) HDMIRX_ReadI2C_Byte(0x9c) ) ;
1180:Src/main.c    **** 					//dbg_Printf("ch%d, REG 0x9D=%x \r\n", (int)(i+1),(int) HDMIRX_ReadI2C_Byte(0x9d) ) ;
1181:Src/main.c    **** 					//dbg_Printf("ch%d, REG 0xA1=%x \r\n", (int)(i+1),(int) HDMIRX_ReadI2C_Byte(0xa1) ) ;
1182:Src/main.c    **** 					//dbg_Printf("ch%d, InputMode=720P50\r\n",(int)(i+1)) ;
1183:Src/main.c    **** 					ret=1;
1184:Src/main.c    **** 					}
1185:Src/main.c    **** 
1186:Src/main.c    **** return ret;
1187:Src/main.c    **** }
1188:Src/main.c    **** 	static void HDMI_VideoModeDetect(void)
1189:Src/main.c    **** 	{
1190:Src/main.c    **** 		tByte i  ;
1191:Src/main.c    **** 	
1192:Src/main.c    **** 		for(i = 0 ; i< 2/*4*/ ; i++ )
1193:Src/main.c    **** 		{
1194:Src/main.c    **** 			gHDMI_Index = i ;
1195:Src/main.c    **** 			//--- Start --- 20201214-01
1196:Src/main.c    **** 			if( i == 1 )
1197:Src/main.c    **** 			{
1198:Src/main.c    **** 				if( newInRes[0] == _OSD_No_Signal )
1199:Src/main.c    **** 					bSignal[gHDMI_Index] = 0;
1200:Src/main.c    **** 				else
1201:Src/main.c    **** 					bSignal[gHDMI_Index] = 1;
1202:Src/main.c    **** 			}
1203:Src/main.c    **** 			else
1204:Src/main.c    **** 			//--- End ---
1205:Src/main.c    **** 			bSignal[gHDMI_Index] = CheckHDMIRX();
1206:Src/main.c    **** 
1207:Src/main.c    **** 			//if( (i == 1 )&&(bSignal[1]==1))
1208:Src/main.c    **** 			//{
1209:Src/main.c    **** 			//dbg_Printf("ch%d, InputMode=%d \r\n", (int)(i+1),(int) gbVXIS_InputMode[i] ) ;
1210:Src/main.c    **** 			//}
1211:Src/main.c    **** 			
1212:Src/main.c    **** 			if (PreVState[gHDMI_Index] != VState[gHDMI_Index]  )
1213:Src/main.c    **** 			{
1214:Src/main.c    **** 				PreVState[gHDMI_Index]	= VState[gHDMI_Index] ;
1215:Src/main.c    **** 			}
1216:Src/main.c    **** 	
1217:Src/main.c    **** 			if(bSignal[gHDMI_Index] != bOldSignal[gHDMI_Index] )
1218:Src/main.c    **** 			{
1219:Src/main.c    **** 				bOldSignal[gHDMI_Index] = bSignal[gHDMI_Index] ;
1220:Src/main.c    **** 	
1221:Src/main.c    **** 				if(bSignal[gHDMI_Index] == 0 )
1222:Src/main.c    **** 				{
1223:Src/main.c    **** 					VS4210_Rx_NoSignal(i) ;
1224:Src/main.c    **** 					dbg_Printf("##ch%d, VS4210_Rx_NoSignal\r\n", (int)(i+1) ) ;
1225:Src/main.c    **** 					if (pVS4210_MutiWindows1.DrawOSDFlg != 0)
1226:Src/main.c    **** 					{
1227:Src/main.c    **** 						OSD_Show_Flg = 1 ;
1228:Src/main.c    **** 						Tim1_count = 0 ;
1229:Src/main.c    **** 						OSDStateFlg = 1 ;
1230:Src/main.c    **** 						OSDSecCount = 0 ;
1231:Src/main.c    **** 					}
ARM GAS  /tmp/ccs2VtGF.s 			page 23


1232:Src/main.c    **** 					gbVXIS_InputMode[gHDMI_Index] =_OSD_No_Signal ;
1233:Src/main.c    **** 					PrebVXIS_InputMode[gHDMI_Index] = _OSD_No_Signal ;
1234:Src/main.c    **** 
1235:Src/main.c    **** 					if((SelectInputMode==_HDMI_Input)&&(gHDMI_Index==0))
1236:Src/main.c    **** 						Set_Video_Loss_OSD(0,ON);
1237:Src/main.c    **** 					//MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);	
1238:Src/main.c    **** 					//VXISI2CWrite(0x9C,0x0A);
1239:Src/main.c    **** 						SET_Audio_Mute(ON);
1240:Src/main.c    **** 				}
1241:Src/main.c    **** 			}
1242:Src/main.c    **** 	
1243:Src/main.c    **** 			if( bSignal[gHDMI_Index] == 1  )
1244:Src/main.c    **** 			{
1245:Src/main.c    **** 				//--- Start --- 20201214-01
1246:Src/main.c    **** 				if( i == 1 )
1247:Src/main.c    **** 					gbVXIS_InputMode[gHDMI_Index] = newInRes[0];
1248:Src/main.c    **** 				else
1249:Src/main.c    **** 				//--- End ---
1250:Src/main.c    **** 				gbVXIS_InputMode[gHDMI_Index] = GetHDMI_InputMode(gHDMI_Index ) ;
1251:Src/main.c    **** 
1252:Src/main.c    **** 			}
1253:Src/main.c    **** 	
1254:Src/main.c    **** 			if (gbVXIS_InputMode[gHDMI_Index] != PrebVXIS_InputMode[gHDMI_Index] )
1255:Src/main.c    **** 			{
1256:Src/main.c    **** 				PrebVXIS_InputMode[gHDMI_Index] = gbVXIS_InputMode[gHDMI_Index] ;
1257:Src/main.c    **** 
1258:Src/main.c    **** 					if(CHECK_HDMI720P50())
1259:Src/main.c    **** 					{
1260:Src/main.c    **** 					dbg_Printf("ch%d, HDMI=720P50 no support\r\n",(int)(i+1)) ;
1261:Src/main.c    **** 					}
1262:Src/main.c    **** 				else if (gbVXIS_InputMode[gHDMI_Index] != _OSD_No_Signal)
1263:Src/main.c    **** 				{
1264:Src/main.c    **** 					VS4210_SetInModeOutMode(i , gbVXIS_InputMode[i] , pVS4210_MutiWindows1.OutputMode );
1265:Src/main.c    **** 
1266:Src/main.c    **** 					if((SelectInputMode==_AHD_Input)&&(gHDMI_Index==1))			
1267:Src/main.c    **** 					VXISI2CWrite( 0x19, 0x01 );
1268:Src/main.c    **** 							
1269:Src/main.c    **** 							
1270:Src/main.c    **** 					VS4210_SetInputSizeHV(i ,gHActive[i], gVActive[i], gHTotal[i] ,gVTotal[i] ) ;
1271:Src/main.c    **** 
1272:Src/main.c    **** 					dbg_Printf("ch%d, InputMode=%d \r\n", (int)(i+1),(int) gbVXIS_InputMode[i] ) ;
1273:Src/main.c    **** 
1274:Src/main.c    **** 						#if 0
1275:Src/main.c    **** 						if(gbVXIS_InputMode[i]==6)
1276:Src/main.c    **** 						{
1277:Src/main.c    **** 						printf("(set reg.)");
1278:Src/main.c    **** 						 VXISI2CWrite(0x08,0x21);
1279:Src/main.c    **** 						 VXISI2CWrite(0x0A,0x21);
1280:Src/main.c    **** 						 VXISI2CWrite(0x74,0x02);
1281:Src/main.c    **** 						 VXISI2CWrite(0x82,0x40);
1282:Src/main.c    **** 						}
1283:Src/main.c    **** 						#endif
1284:Src/main.c    **** 					if (pVS4210_MutiWindows1.DrawOSDFlg != 0)
1285:Src/main.c    **** 					{
1286:Src/main.c    **** 						OSD_Show_Flg = 1 ;
1287:Src/main.c    **** 						Tim1_count = 0 ;
1288:Src/main.c    **** 						OSDStateFlg = 1 ;
ARM GAS  /tmp/ccs2VtGF.s 			page 24


1289:Src/main.c    **** 						OSDSecCount = 0 ;
1290:Src/main.c    **** 					}
1291:Src/main.c    **** 
1292:Src/main.c    **** 						if((SelectInputMode==_HDMI_Input)&&(gHDMI_Index==0))
1293:Src/main.c    **** 						Set_Video_Loss_OSD(0,OFF);	
1294:Src/main.c    **** 
1295:Src/main.c    **** 						if((SelectInputMode==_AHD_Input)&&(gHDMI_Index==1))
1296:Src/main.c    **** 							{
1297:Src/main.c    **** 							MCUTimerActiveTimerEvent(SEC(1), _SYSTEM_TIMER_EVENT_VIDEO_RESET);
1298:Src/main.c    **** 							}
1299:Src/main.c    **** 						
1300:Src/main.c    **** 						if(gHDMI_Index==0)
1301:Src/main.c    **** 						SET_Audio_Mute(OFF);	
1302:Src/main.c    **** 						//MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);
1303:Src/main.c    **** 				}
1304:Src/main.c    **** 			}
1305:Src/main.c    **** 		}
1306:Src/main.c    **** 	}
1307:Src/main.c    **** 
1308:Src/main.c    **** static void HDMI_AudioModeDetect(void)
1309:Src/main.c    **** {
1310:Src/main.c    ****     tByte pbAudioSampleFreq, pbValidCh ;
1311:Src/main.c    ****     pbAudioSampleFreq = 0 ;
1312:Src/main.c    **** 
1313:Src/main.c    ****     getHDMIRXAudioInfo(&pbAudioSampleFreq , &pbValidCh ) ;
1314:Src/main.c    **** 
1315:Src/main.c    ****     if (gbAUDO_INDEX != HDMI_AUDIO_NONE )
1316:Src/main.c    ****     {
1317:Src/main.c    ****         if (gbAUDO_INDEX  == gHDMI_Index )
1318:Src/main.c    ****         {
1319:Src/main.c    ****             if (gPreAudioSampleFreq != pbAudioSampleFreq)
1320:Src/main.c    ****             {
1321:Src/main.c    ****                 gPreAudioSampleFreq = pbAudioSampleFreq ;
1322:Src/main.c    ****                 HDMI_Tx_SetAudioFs(gPreAudioSampleFreq )  ;
1323:Src/main.c    ****             }
1324:Src/main.c    ****         }
1325:Src/main.c    ****     }
1326:Src/main.c    ****     gAudioSampleFreq[gHDMI_Index] = pbAudioSampleFreq ;
1327:Src/main.c    **** }
1328:Src/main.c    **** 
1329:Src/main.c    **** //=============================================================================
1330:Src/main.c    **** //    Main Initialize Routine
1331:Src/main.c    **** //=============================================================================
1332:Src/main.c    **** void main_init (void)
1333:Src/main.c    **** {
1334:Src/main.c    **** 
1335:Src/main.c    **** 	WORD	rev;
1336:Src/main.c    **** 
1337:Src/main.c    **** 		rev = GetFWRevEE();
1338:Src/main.c    **** 		Printf("\r\nPrev.FW:%04x\r\n", rev);
1339:Src/main.c    **** 		
1340:Src/main.c    **** 		if( GetFWRevEE()!=FWVER )	// exist EEPROM
1341:Src/main.c    **** 		{					
1342:Src/main.c    **** 			Printf("\r\nCurr.FW:%04x", (WORD)FWVER);
1343:Src/main.c    **** 			SaveFWRevEE(FWVER);
1344:Src/main.c    **** 			Printf("\r\nCurr.FW:%04x", (WORD)GetFWRevEE());
1345:Src/main.c    **** 		}
ARM GAS  /tmp/ccs2VtGF.s 			page 25


1346:Src/main.c    **** 
1347:Src/main.c    **** 		if( GetFWRevEE()==FWVER )
1348:Src/main.c    **** 		{					// exist EEPROM
1349:Src/main.c    **** 			if( rev != FWVER ) 
1350:Src/main.c    **** 				{
1351:Src/main.c    **** 				ClearBasicEE();
1352:Src/main.c    **** 			
1353:Src/main.c    **** 			Printf("\r\n[MSG]main_init()=> rev != FWVER & call ClearBasicEE()\r\n");  //pinchi test
1354:Src/main.c    **** 				}
1355:Src/main.c    **** 			else
1356:Src/main.c    **** 				{
1357:Src/main.c    **** 				;//DebugLevel = GetDebugLevelEE();
1358:Src/main.c    **** 
1359:Src/main.c    **** 				}
1360:Src/main.c    **** 		}
1361:Src/main.c    **** 		else 
1362:Src/main.c    **** 		{
1363:Src/main.c    **** 			Printf("\r\nCannot access EEPROM!!!!");
1364:Src/main.c    **** 			Printf("\r\nNo initialize");
1365:Src/main.c    **** 			DebugLevel = 0xff;
1366:Src/main.c    **** 			return;
1367:Src/main.c    **** 		}
1368:Src/main.c    **** 
1369:Src/main.c    **** 
1370:Src/main.c    **** 	delay(100);
1371:Src/main.c    **** 	
1372:Src/main.c    **** 
1373:Src/main.c    **** //	SET_POWER_STATUS(_POWER_STATUS_OFF);
1374:Src/main.c    **** //	SET_TARGET_POWER_STATUS(_POWER_STATUS_NORMAL);
1375:Src/main.c    **** 
1376:Src/main.c    **** }
1377:Src/main.c    **** 
1378:Src/main.c    **** 
1379:Src/main.c    **** void AdjustAutoDayNight(BYTE val)
1380:Src/main.c    **** {
1381:Src/main.c    **** //	BYTE page;
1382:Src/main.c    **** 	BYTE PWMLevelTemp=0;
1383:Src/main.c    **** 	val=0xff-val;
1384:Src/main.c    **** 
1385:Src/main.c    **** 	#if 1//ryan@20170928
1386:Src/main.c    **** 	if(val>=0&&val<100)
1387:Src/main.c    **** 		PWMLevelTemp=0+70;
1388:Src/main.c    **** 	else if(val>=100&&val<140)
1389:Src/main.c    **** 		PWMLevelTemp=20+70;//20;
1390:Src/main.c    **** 	else if(val>=140&&val<180)
1391:Src/main.c    **** 		PWMLevelTemp=40+70;//50;
1392:Src/main.c    **** 	else if(val>=180&&val<220)
1393:Src/main.c    **** 		PWMLevelTemp=60+70;//65;
1394:Src/main.c    **** 	else if(val>=220&&val<=255)//andy 20110414
1395:Src/main.c    **** 	{
1396:Src/main.c    **** 		//#ifdef AWT
1397:Src/main.c    **** 		PWMLevelTemp=75+70;//80;
1398:Src/main.c    **** 		//#else
1399:Src/main.c    **** 		//PWMLevelTemp=115;
1400:Src/main.c    **** 		//#endif
1401:Src/main.c    **** 		//	PWMLevelTemp=128;
1402:Src/main.c    **** 	}
ARM GAS  /tmp/ccs2VtGF.s 			page 26


1403:Src/main.c    **** 
1404:Src/main.c    **** 	#else
1405:Src/main.c    **** 	if(val>=0&&val<100)
1406:Src/main.c    **** 		PWMLevelTemp=0;
1407:Src/main.c    **** 	else if(val>=100&&val<140)
1408:Src/main.c    **** 		PWMLevelTemp=30;//20;
1409:Src/main.c    **** 	else if(val>=140&&val<180)
1410:Src/main.c    **** 		PWMLevelTemp=60;//50;
1411:Src/main.c    **** 	else if(val>=180&&val<220)
1412:Src/main.c    **** 		PWMLevelTemp=80;//65;
1413:Src/main.c    **** 	else if(val>=220&&val<=255)//andy 20110414
1414:Src/main.c    **** 	{
1415:Src/main.c    **** 		//#ifdef AWT
1416:Src/main.c    **** 		PWMLevelTemp=110;//80;
1417:Src/main.c    **** 		//#else
1418:Src/main.c    **** 		//PWMLevelTemp=115;
1419:Src/main.c    **** 		//#endif
1420:Src/main.c    **** 	}
1421:Src/main.c    **** 	#endif
1422:Src/main.c    **** 	//else
1423:Src/main.c    **** 	//	PWMLevelTemp=0;
1424:Src/main.c    **** 
1425:Src/main.c    **** 
1426:Src/main.c    **** 	if(DayNightLevel==1)
1427:Src/main.c    **** 	{
1428:Src/main.c    **** 		//if(AutoDayNightDelay<(5+5+5))
1429:Src/main.c    **** 	//		AutoDayNightDelay++;
1430:Src/main.c    **** 		//else
1431:Src/main.c    **** 		{
1432:Src/main.c    **** 			if(PWMLevel > PWMLevelTemp)
1433:Src/main.c    **** 				PWMLevel-=1;
1434:Src/main.c    **** 			else if(PWMLevel < PWMLevelTemp)
1435:Src/main.c    **** 				PWMLevel+=1;
1436:Src/main.c    **** 
1437:Src/main.c    **** 			AutoDayNightDelay=0;
1438:Src/main.c    **** 		}
1439:Src/main.c    **** 
1440:Src/main.c    **** 	//	PWMLevel=PWMLevelTemp;
1441:Src/main.c    **** 
1442:Src/main.c    **** 		
1443:Src/main.c    **** 	//	Printf("(PWMLevel1=%02x %02x)",(WORD)PWMLevel,(WORD)PWMLevelTemp);
1444:Src/main.c    **** 
1445:Src/main.c    **** 	user_pwm_setvalue(PWMLevel*15);
1446:Src/main.c    **** 
1447:Src/main.c    **** 	}
1448:Src/main.c    **** 	else
1449:Src/main.c    **** 	{
1450:Src/main.c    **** 	//	PWMLevel=PWMLevelTemp;
1451:Src/main.c    **** 		PWMLevel=255/*0x80*/;
1452:Src/main.c    **** 	//		Printf("(PWMLevel2=%02x)",(WORD)PWMLevel);
1453:Src/main.c    **** 	user_pwm_setvalue(_PWMLevelMax);
1454:Src/main.c    **** 	}
1455:Src/main.c    **** 	
1456:Src/main.c    **** #if 0
1457:Src/main.c    **** 
1458:Src/main.c    **** 	//Printf("\r\nLADC0=%02x",(WORD)val);
1459:Src/main.c    **** 	page = ReadTW88( 0xff );
ARM GAS  /tmp/ccs2VtGF.s 			page 27


1460:Src/main.c    **** 	WriteTW88( 0xff, 0x00 );		// set page 0
1461:Src/main.c    **** 	WriteTW88( 0xbe, ((ReadTW88(0xbe) & 0xcf) | 0x10) );	// set active Low control, if want active hig
1462:Src/main.c    **** 	//WriteTW88( 0xc4, ((ReadTW88(0xc4) & 0x80)|(val>>2)) );	// set pwm number
1463:Src/main.c    **** 	WriteTW88( 0xc4, ((ReadTW88(0xc4) & 0x80)|(PWMLevel)) );	// set pwm number
1464:Src/main.c    **** 	WriteTW88( 0xff, page );
1465:Src/main.c    **** 	
1466:Src/main.c    **** 	#endif
1467:Src/main.c    **** 	/*
1468:Src/main.c    **** 	if(DayNightLevel==0)
1469:Src/main.c    **** 	user_pwm_setvalue(4000);
1470:Src/main.c    **** 	else
1471:Src/main.c    **** 	user_pwm_setvalue(PWMLevel*15);
1472:Src/main.c    **** */		
1473:Src/main.c    **** }
1474:Src/main.c    **** void LCDPowerON(void)
1475:Src/main.c    **** {
1476:Src/main.c    **** /*
1477:Src/main.c    **** 	Printf("(LCDPowerON)");
1478:Src/main.c    **** 
1479:Src/main.c    **** 	TTLI1_RES(OFF);
1480:Src/main.c    **** 	PANEL_EN(ON);
1481:Src/main.c    **** 	msleep(50) ;
1482:Src/main.c    **** 	msleep(100) ;///for new 7in panel  	LCM : TH070800480NYR40S1-L
1483:Src/main.c    **** //	MCUTimerDelayXms(50);
1484:Src/main.c    **** 	LCD_PWR(ON);
1485:Src/main.c    **** 
1486:Src/main.c    **** 	msleep(50) ;
1487:Src/main.c    **** 
1488:Src/main.c    **** //	MCUTimerDelayXms(50);
1489:Src/main.c    **** 	BL_ENABLE(ON);
1490:Src/main.c    **** HAL_GPIO_WritePin(PA7_GPIO_Port, PA7_Pin, 0);
1491:Src/main.c    **** 
1492:Src/main.c    **** //	BL_PWM(ON);
1493:Src/main.c    **** 
1494:Src/main.c    **** AudioMute(OFF);
1495:Src/main.c    **** */
1496:Src/main.c    **** 
1497:Src/main.c    **** }
1498:Src/main.c    **** 
1499:Src/main.c    **** void LCDPowerOFF(void)
1500:Src/main.c    **** {
1501:Src/main.c    **** /*
1502:Src/main.c    **** 	Printf("(LCDPowerOFF)");
1503:Src/main.c    **** 
1504:Src/main.c    **** #if 0
1505:Src/main.c    **** 
1506:Src/main.c    **** 	TTLI1_RES(OFF);
1507:Src/main.c    **** 	PANEL_EN(ON);
1508:Src/main.c    **** 	msleep(50) ;
1509:Src/main.c    **** //	MCUTimerDelayXms(50);
1510:Src/main.c    **** 	LCD_PWR(ON);
1511:Src/main.c    **** 
1512:Src/main.c    **** 	msleep(50) ;
1513:Src/main.c    **** 
1514:Src/main.c    **** //	MCUTimerDelayXms(50);
1515:Src/main.c    **** 	BL_ENABLE(ON);
1516:Src/main.c    **** //	BL_PWM(ON);
ARM GAS  /tmp/ccs2VtGF.s 			page 28


1517:Src/main.c    **** 
1518:Src/main.c    **** #else
1519:Src/main.c    **** 	BL_ENABLE(OFF);
1520:Src/main.c    **** HAL_GPIO_WritePin(PA7_GPIO_Port, PA7_Pin, 1); 
1521:Src/main.c    **** 
1522:Src/main.c    **** //	BL_PWM(OFF);
1523:Src/main.c    **** //	msleep(50) ;
1524:Src/main.c    **** //	MCUTimerDelayXms(50);
1525:Src/main.c    **** 	TTLI1_RES(ON);
1526:Src/main.c    **** 	PANEL_EN(OFF);
1527:Src/main.c    **** //	MCUTimerDelayXms(50);
1528:Src/main.c    **** //	msleep(50) ;
1529:Src/main.c    **** 
1530:Src/main.c    **** 	LCD_PWR(OFF);
1531:Src/main.c    **** #endif
1532:Src/main.c    **** 
1533:Src/main.c    **** AudioMute(ON);
1534:Src/main.c    **** */
1535:Src/main.c    **** }
1536:Src/main.c    **** 
1537:Src/main.c    **** 
1538:Src/main.c    **** /* USER CODE END 0 */
1539:Src/main.c    **** 
1540:Src/main.c    **** /**
1541:Src/main.c    ****   * @brief  The application entry point.
1542:Src/main.c    ****   * @retval int
1543:Src/main.c    ****   */
1544:Src/main.c    **** 
1545:Src/main.c    **** void uComOnChipInitial(void)
1546:Src/main.c    **** {
1547:Src/main.c    **** 
1548:Src/main.c    **** //power reset
1549:Src/main.c    **** 
1550:Src/main.c    **** //power
1551:Src/main.c    **** PCON3V3_TP(ON);      
1552:Src/main.c    **** PCON1V2_TP(ON);      
1553:Src/main.c    **** 
1554:Src/main.c    **** VS4210_RST(OFF);   
1555:Src/main.c    **** 
1556:Src/main.c    **** #if 0
1557:Src/main.c    **** 
1558:Src/main.c    **** 	Set_USART1();
1559:Src/main.c    **** 
1560:Src/main.c    **** 
1561:Src/main.c    **** 	//Set_USART2();
1562:Src/main.c    **** 	//Set_USB();
1563:Src/main.c    **** 	//USB_Interrupts_Config();
1564:Src/main.c    **** 	Set_GPIO_Port();
1565:Src/main.c    **** 
1566:Src/main.c    **** 	//AUDIO_OUT_Flag=ReadEEP(0xae);
1567:Src/main.c    **** 	MUTE_OUT(1);
1568:Src/main.c    **** 
1569:Src/main.c    **** 
1570:Src/main.c    **** 
1571:Src/main.c    **** 	Set_Timer();
1572:Src/main.c    **** 	Set_Init_GPIO();
1573:Src/main.c    **** 
ARM GAS  /tmp/ccs2VtGF.s 			page 29


1574:Src/main.c    **** 	TIM4_PWM(0);
1575:Src/main.c    **** 	Set_Battery_ADC();
1576:Src/main.c    **** 
1577:Src/main.c    **** 	EXTI_Configuration();
1578:Src/main.c    **** 
1579:Src/main.c    **** 	//Set_I2C_Port();
1580:Src/main.c    **** 	//Set_IR_Port();
1581:Src/main.c    **** 	//Set_ADC_Port();
1582:Src/main.c    **** 	
1583:Src/main.c    **** GPIO_SetBits(GPIOA, GPIO_Pin_1);//TW8816 reset
1584:Src/main.c    **** GPIO_ResetBits(GPIOA, GPIO_Pin_0);//TW8816 reset
1585:Src/main.c    **** 
1586:Src/main.c    **** GPIO_SetBits(GPIOA, GPIO_Pin_12);//ryan@20150525
1587:Src/main.c    **** GPIO_SetBits(GPIOA, GPIO_Pin_13);//ryan@20150525
1588:Src/main.c    **** GPIO_SetBits(GPIOA, GPIO_Pin_14);//ryan@20150525
1589:Src/main.c    **** 
1590:Src/main.c    **** GPIO_SetBits(GPIOC, GPIO_Pin_9);//ryan@20150525
1591:Src/main.c    **** GPIO_SetBits(GPIOC, GPIO_Pin_13);//ryan@20150525
1592:Src/main.c    **** GPIO_SetBits(GPIOC, GPIO_Pin_14);//ryan@20150525
1593:Src/main.c    **** GPIO_SetBits(GPIOC, GPIO_Pin_15);//ryan@20150525
1594:Src/main.c    **** 
1595:Src/main.c    **** GPIO_SetBits(GPIOC, GPIO_Pin_7);//ryan@20150525
1596:Src/main.c    **** 
1597:Src/main.c    **** //GPIO_ResetBits(GPIOC, GPIO_Pin_8);//ryan@20150525
1598:Src/main.c    **** PC_SW(1);//MP board
1599:Src/main.c    **** DC_OUT(0);//MP board
1600:Src/main.c    **** 	
1601:Src/main.c    **** 
1602:Src/main.c    **** #if __USE_SPI_FLASH__ == 1
1603:Src/main.c    **** 	Reset_SPI();
1604:Src/main.c    **** 	Set_SPI();
1605:Src/main.c    **** #endif
1606:Src/main.c    **** 
1607:Src/main.c    **** 	//Set_USBClock();
1608:Src/main.c    **** 	//USB_Interrupts_Config();
1609:Src/main.c    **** 	//USB_Init();
1610:Src/main.c    **** 
1611:Src/main.c    **** #endif
1612:Src/main.c    **** 
1613:Src/main.c    **** }
1614:Src/main.c    **** 
1615:Src/main.c    **** void user_pwm_setvalue(uint16_t value)
1616:Src/main.c    **** {
1617:Src/main.c    ****     TIM_OC_InitTypeDef sConfigOC;
1618:Src/main.c    ****   
1619:Src/main.c    ****     sConfigOC.OCMode = TIM_OCMODE_PWM1;
1620:Src/main.c    ****     sConfigOC.Pulse = value;
1621:Src/main.c    ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1622:Src/main.c    ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1623:Src/main.c    ****     HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3);
1624:Src/main.c    ****     HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);  
1625:Src/main.c    **** }
1626:Src/main.c    **** 
1627:Src/main.c    **** void LoadEEPROM (void)
1628:Src/main.c    **** {
1629:Src/main.c    **** #if 0
1630:Src/main.c    **** 	 PowerFlag = ReadEEP(EEP_Powerflag);
ARM GAS  /tmp/ccs2VtGF.s 			page 30


1631:Src/main.c    **** 	 SelectModeType = ReadEEP(EEP_SelectMode);
1632:Src/main.c    **** 
1633:Src/main.c    **** 	OSD_LOCKF= ReadEEP(EEP_ONOFFChoice);
1634:Src/main.c    **** 	Disp_Input = ReadEEP(EEP_COSDMode); 
1635:Src/main.c    **** 		
1636:Src/main.c    **** 	 TimeStep = ReadEEP(EEP_TimeStep);
1637:Src/main.c    **** 	 Priority=ReadEEP(EEP_PRIORITY);
1638:Src/main.c    **** 	 DayNightLevel= ReadEEP(EEP_AutoMode);
1639:Src/main.c    **** 	 NowModeState = ReadEEP(EEP_NowModeState);
1640:Src/main.c    **** 	
1641:Src/main.c    **** 	AudioVol = GetAudioVolEE();
1642:Src/main.c    **** 	CAMA_M= ReadEEP(EEP_CAMAMode);
1643:Src/main.c    **** 	CAMB_M= ReadEEP(EEP_CAMBMode);
1644:Src/main.c    **** 	CAMC_M= ReadEEP(EEP_CAMCMode);
1645:Src/main.c    **** 	CAMR_M= ReadEEP(EEP_CAMRMode);
1646:Src/main.c    **** 
1647:Src/main.c    **** 	AudioVol = GetAudioVolEE();
1648:Src/main.c    **** 
1649:Src/main.c    **** #endif
1650:Src/main.c    **** }
1651:Src/main.c    **** 
1652:Src/main.c    **** void WaitPowerOn(void)
1653:Src/main.c    **** {
1654:Src/main.c    **** BYTE val;
1655:Src/main.c    **** 	PowerLED(_SYSTEM_TIMER_EVENT_RED_ON);
1656:Src/main.c    **** 
1657:Src/main.c    **** 	LCDPowerOFF();
1658:Src/main.c    **** 	
1659:Src/main.c    **** 	MCUTimerCancelTimerEvent( _USER_TIMER_EVENT_PANEL_BACKLIGHT_ON);
1660:Src/main.c    **** 
1661:Src/main.c    **** 	Printf("\r\n(Power off..)");
1662:Src/main.c    **** 		
1663:Src/main.c    **** 	while(1) 
1664:Src/main.c    **** 	{	
1665:Src/main.c    **** 
1666:Src/main.c    **** 			CheckKeyIn();
1667:Src/main.c    **** 			if(PowerFlag==ON)
1668:Src/main.c    **** 			{
1669:Src/main.c    **** 				//PowerFlag=ON;
1670:Src/main.c    **** 				WriteEEP(EEP_Powerflag,PowerFlag);//2007.3.28 Justin
1671:Src/main.c    **** 				break;		//poweron
1672:Src/main.c    **** 			}
1673:Src/main.c    **** 			
1674:Src/main.c    **** 		  val=CheckTrigger();
1675:Src/main.c    **** 		 
1676:Src/main.c    **** //		  TriggerHandler(val);
1677:Src/main.c    **** 
1678:Src/main.c    **** 		if(val!=0)
1679:Src/main.c    **** 		{	
1680:Src/main.c    **** 			  PowerLED(_SYSTEM_TIMER_EVENT_GRN_ON);
1681:Src/main.c    **** 			TriggerHandler(val);
1682:Src/main.c    **** 			//	AudioMute(OFF);
1683:Src/main.c    **** 			//DisplayInput();		//william v0.2 20120223
1684:Src/main.c    **** 			/*
1685:Src/main.c    **** 			if(!(TriggerMode==0x08))
1686:Src/main.c    **** 			{
1687:Src/main.c    **** 				//Printf("\r\n(**PowerFlag=%02x)",(WORD)PowerFlag);
ARM GAS  /tmp/ccs2VtGF.s 			page 31


1688:Src/main.c    **** 				LCDPowerON(1);//修正power on時顯示太慢問題
1689:Src/main.c    **** 				AudioMute(1);
1690:Src/main.c    **** 			}
1691:Src/main.c    **** 			*/
1692:Src/main.c    **** 			
1693:Src/main.c    **** 		}
1694:Src/main.c    **** 		else
1695:Src/main.c    **** 		{
1696:Src/main.c    **** 			//Printf("\r\n(*NO-TRIG)");
1697:Src/main.c    **** 			TriggerHandler(val);  //Pinchi 20140922 add for AWT ML072Q
1698:Src/main.c    **** 
1699:Src/main.c    **** 
1700:Src/main.c    **** 				if(TriggerFlag==0)
1701:Src/main.c    **** 				{
1702:Src/main.c    **** 				//PowerOff();
1703:Src/main.c    **** 			//	AudioMute(ON);
1704:Src/main.c    **** 				
1705:Src/main.c    **** 				//PowerLED(_SYSTEM_TIMER_EVENT_RED_ON);
1706:Src/main.c    **** 				/*
1707:Src/main.c    **** 				if(live_out_state==1)	////live out issue 
1708:Src/main.c    **** 				{
1709:Src/main.c    **** 				live_out_state=0;
1710:Src/main.c    **** 				SetNowMode();
1711:Src/main.c    **** 				Panel_power=0;
1712:Src/main.c    **** 				}
1713:Src/main.c    **** 				*/
1714:Src/main.c    **** 				}
1715:Src/main.c    **** 			
1716:Src/main.c    **** 		//	TriggerHandler(val);  //Pinchi 20140922 move to above for AWT ML072Q	
1717:Src/main.c    **** 		}		  
1718:Src/main.c    **** 
1719:Src/main.c    **** 		   SysTimerHandler();
1720:Src/main.c    **** 		   	  EQ_Detect();	 
1721:Src/main.c    **** 			  
1722:Src/main.c    **** //			  	if((GT9147_Scan(1)>=_TOUCH_COUNT_1)&&(TP_ACTION==ON))
1723:Src/main.c    **** 					if(GT9147_Scan(1)>=_TOUCH_COUNT_1)
1724:Src/main.c    **** 
1725:Src/main.c    **** 					PowerFlag=ON;
1726:Src/main.c    **** 					
1727:Src/main.c    ****    	}
1728:Src/main.c    **** 
1729:Src/main.c    **** 	PowerLED(_SYSTEM_TIMER_EVENT_GRN_ON);
1730:Src/main.c    **** //	SHOWOSDINFO();	
1731:Src/main.c    **** 	
1732:Src/main.c    **** //		if((NowModeState==JumpMode)&&(TriggerFlag==0))
1733:Src/main.c    **** //			 ShowJUMPOSD();
1734:Src/main.c    **** 		
1735:Src/main.c    **** 	MCUTimerCancelTimerEvent(_USER_TIMER_EVENT_DISPLAY_DISABLE);
1736:Src/main.c    **** 	MCUTimerActiveTimerEvent(SEC(2),_USER_TIMER_EVENT_DISPLAY_DISABLE);
1737:Src/main.c    **** 
1738:Src/main.c    **** 	
1739:Src/main.c    **** 
1740:Src/main.c    **** MCUTimerActiveTimerEvent(SEC(1),  _USER_TIMER_EVENT_PANEL_BACKLIGHT_ON);
1741:Src/main.c    **** //LCDPowerON();
1742:Src/main.c    **** Printf("\r\n(Power ON..)");		
1743:Src/main.c    **** 
1744:Src/main.c    **** 
ARM GAS  /tmp/ccs2VtGF.s 			page 32


1745:Src/main.c    **** }
1746:Src/main.c    **** 
1747:Src/main.c    **** 
1748:Src/main.c    **** int main(void)
1749:Src/main.c    **** {
1750:Src/main.c    ****   /* USER CODE BEGIN 1 */
1751:Src/main.c    ****   TimeOutCount = 0 ;
1752:Src/main.c    **** 
1753:Src/main.c    ****     tByte i ;
1754:Src/main.c    ****     tByte j ;
1755:Src/main.c    ****     tByte exosdLen ;
1756:Src/main.c    ****     tByte exosdStart ;
1757:Src/main.c    **** #ifdef VICTOR_DEBUG
1758:Src/main.c    ****     tByte val ;
1759:Src/main.c    **** #endif
1760:Src/main.c    ****   //  int keystate ;
1761:Src/main.c    **** 
1762:Src/main.c    ****   /* USER CODE END 1 */
1763:Src/main.c    **** 
1764:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
1765:Src/main.c    **** 
1766:Src/main.c    ****   /* Reset of all peripherals, Initializes the F
1767:Src/main.c    ****    sh interface and the Systick. */
1768:Src/main.c    ****   HAL_Init();
1769:Src/main.c    ****   
1770:Src/main.c    ****   /* USER CODE BEGIN Init */
1771:Src/main.c    **** 
1772:Src/main.c    ****   /* USER CODE END Init */
1773:Src/main.c    **** 
1774:Src/main.c    ****   /* Configure the system clock */
1775:Src/main.c    ****   SystemClock_Config();
1776:Src/main.c    **** 
1777:Src/main.c    ****   
1778:Src/main.c    ****   /* USER CODE BEGIN SysInit */
1779:Src/main.c    ****   InitialTimerEvent();
1780:Src/main.c    **** 
1781:Src/main.c    ****   /* USER CODE END SysInit */
1782:Src/main.c    **** 
1783:Src/main.c    ****   /* Initialize all configured peripherals */
1784:Src/main.c    ****   MX_GPIO_Init();
1785:Src/main.c    ****  // LCDPowerOFF();
1786:Src/main.c    **** // AudioMute(ON);
1787:Src/main.c    **** 
1788:Src/main.c    **** //SET_PCA9554PW(_Shutter_SW,OFF);
1789:Src/main.c    ****  // SET_PCA9554PW(_CCD12_SW,ON);
1790:Src/main.c    **** //SET_PCA9554PW(_PCON5V_AUDIO,ON);
1791:Src/main.c    ****  //SET_PCA9554PW(_COL_PW_5V,OFF);
1792:Src/main.c    **** 
1793:Src/main.c    **** //  HAL_GPIO_WritePin(GREEN_LED_GPIO_Port, GREEN_LED_Pin , GPIO_PIN_SET);
1794:Src/main.c    **** //  HAL_GPIO_WritePin(RED_LED_GPIO_Port, RED_LED_Pin , GPIO_PIN_SET); 
1795:Src/main.c    **** 
1796:Src/main.c    ****  // PowerLED(_SYSTEM_TIMER_EVENT_GRN_ON);
1797:Src/main.c    **** 
1798:Src/main.c    **** //  MX_TIM2_Init();
1799:Src/main.c    ****   MX_TIM3_Init();
1800:Src/main.c    ****   MX_USART1_UART_Init();
1801:Src/main.c    ****   MX_USART2_UART_Init();
ARM GAS  /tmp/ccs2VtGF.s 			page 33


1802:Src/main.c    **** //  MX_ADC1_Init();
1803:Src/main.c    ****   
1804:Src/main.c    ****   /* USER CODE BEGIN 2 */
1805:Src/main.c    **** 
1806:Src/main.c    **** //HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_3);	
1807:Src/main.c    ****   
1808:Src/main.c    ****  SW_I2C0_Init() ;
1809:Src/main.c    ****  SW_I2C1_Init() ;
1810:Src/main.c    ****  SW_I2C2_Init() ;
1811:Src/main.c    ****  SW_I2C3_Init() ;
1812:Src/main.c    **** 
1813:Src/main.c    **** //user_pwm_setvalue(2000);
1814:Src/main.c    **** 
1815:Src/main.c    ****   //uComOnChipInitial();
1816:Src/main.c    ****   
1817:Src/main.c    **** // if((SelectInputMode==_HDMI_Input)&&(gHDMI_Index==0))
1818:Src/main.c    **** Set_Video_Loss_OSD(0,ON);
1819:Src/main.c    **** SET_Audio_Mute(ON);
1820:Src/main.c    **** 
1821:Src/main.c    **** 
1822:Src/main.c    ****  // GT9147_Init();
1823:Src/main.c    **** #if 1
1824:Src/main.c    ****   msleep(50) ;
1825:Src/main.c    ****   HAL_UART_Receive_IT(&huart1,(uint8_t*)Rx_data, 1);	//activate UART receive interrupt every time
1826:Src/main.c    ****   HAL_UART_Receive_IT(&huart2,(uint8_t*)Rx2_data, 1);	//activate UART receive interrupt every time
1827:Src/main.c    **** 
1828:Src/main.c    ****  // HAL_GPIO_WritePin(TP2824_RST_GPIO_Port, VS_RST_Pin, 0); //RX RST
1829:Src/main.c    ****  //HAL_GPIO_WritePin(TX_RST_GPIO_Port, VS_RST_Pin, 0); //TX RST
1830:Src/main.c    ****   HAL_GPIO_WritePin(VS_RST_GPIO_Port, VS_RST_Pin, 0); //VS4210 RST
1831:Src/main.c    ****  TP2824_SET_REST(0);
1832:Src/main.c    **** 
1833:Src/main.c    ****   msleep(100) ;
1834:Src/main.c    ****   //HAL_GPIO_WritePin(TP2824_RST_GPIO_Port, VS_RST_Pin, 1); //VS4210 RST
1835:Src/main.c    **** // HAL_GPIO_WritePin(TX_RST_GPIO_Port, VS_RST_Pin, 1); //TX RST
1836:Src/main.c    ****   HAL_GPIO_WritePin(VS_RST_GPIO_Port, VS_RST_Pin, 1); //VS4210 RST
1837:Src/main.c    ****  TP2824_SET_REST(1);
1838:Src/main.c    **** 
1839:Src/main.c    **** #endif
1840:Src/main.c    **** //LCDPowerON();
1841:Src/main.c    **** // SET_PCA9554PW(_COL_PW_5V,ON); 
1842:Src/main.c    **** 
1843:Src/main.c    ****   //I2CWrite(VS9988_ADDR, 0x01, 0x5A);  //reset
1844:Src/main.c    **** //  printf("\r\nVS4210 sdk2.0 Compiled %s %s !\r\n",__DATE__ , __TIME__);
1845:Src/main.c    **** // val = VXISI2CRead(0x00) ;
1846:Src/main.c    **** //  printf("VS4210 ID = 0x%02X !\r\n", (int)val );
1847:Src/main.c    **** 
1848:Src/main.c    ****   //Init_TP280x_RegSet();
1849:Src/main.c    **** 
1850:Src/main.c    ****   // RX Init
1851:Src/main.c    ****   for (i = 0 ; i < HDMI_IN_NUMBER ; i++ )
1852:Src/main.c    ****   {
1853:Src/main.c    ****       gHDMI_Index = i ;
1854:Src/main.c    ****       dbg_Printf("Init HDMI RX,Chip(%d)....\r\n",(int)i ) ;
1855:Src/main.c    ****       InitHDMIRX(0);
1856:Src/main.c    ****       HDMIRX_WriteI2C_Byte(0x89 ,0x80);
1857:Src/main.c    **** 
1858:Src/main.c    **** #ifdef VICTOR_DEBUG
ARM GAS  /tmp/ccs2VtGF.s 			page 34


1859:Src/main.c    ****       val = HDMIRX_ReadI2C_Byte(0x02) ;
1860:Src/main.c    ****       dbg_Printf("IT66021 chip num=%d , 02reg=0x%02x\r\n", (int )i , (int)val ) ;
1861:Src/main.c    **** #endif
1862:Src/main.c    ****   }
1863:Src/main.c    ****   
1864:Src/main.c    **** //  dbg_Printf("Init HDMI Tx....\r\n") ;
1865:Src/main.c    ****  //  HDMI_Tx_Init();
1866:Src/main.c    **** 
1867:Src/main.c    ****    if (HDMI_IN_NUMBER == 4 )
1868:Src/main.c    ****     pVS4210_MutiWindows1.OutputMode = VS4210_1080P_MODE1 ;  // 4windows
1869:Src/main.c    ****   else
1870:Src/main.c    **** 	  #ifdef VS4210_SELECT_WIN1	//20201211-02
1871:Src/main.c    **** 	  pVS4210_MutiWindows1.OutputMode =VS4210_1080P_MODE0_w1;
1872:Src/main.c    **** 	  #else
1873:Src/main.c    ****       pVS4210_MutiWindows1.OutputMode =VS4210_1080P_MODE0_w0;/// VS4210_1080P_MODE12 ;  
1874:Src/main.c    **** 	  #endif
1875:Src/main.c    **** 
1876:Src/main.c    ****   pVS4210_MutiWindows1.AudioChannel = HDMI_AUDIO_1 ;
1877:Src/main.c    ****   pVS4210_MutiWindows1.OutputSize = _OUTPUT_1080P60 ;
1878:Src/main.c    **** 	#ifdef VS4210_SELECT_WIN1	//20201211-02
1879:Src/main.c    **** 	pVS4210_MutiWindows1.WindowMap.WMap0 = 2 ;
1880:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap1 = 1 ; //set ch2 = video2
1881:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap2 = 3 ; //set ch3 = video3
1882:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap3 = 4 ; //set ch4 = video4
1883:Src/main.c    **** 	#else
1884:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap0 = 1 ; //set ch1 = video1
1885:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap1 = 2 ; //set ch2 = video2
1886:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap2 = 3 ; //set ch3 = video3
1887:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap3 = 4 ; //set ch4 = video4
1888:Src/main.c    **** 	#endif
1889:Src/main.c    **** #if 1
1890:Src/main.c    **** //Extern OSD 20200110-01
1891:Src/main.c    **** VXOSD_UseFont_init(EXTERNOSDNUMBER ,&UserDefineFont1[0] ) ;
1892:Src/main.c    **** 
1893:Src/main.c    **** main_init();
1894:Src/main.c    **** #endif
1895:Src/main.c    **** 
1896:Src/main.c    **** #ifdef  _SUPPORT_EDID_RAM_
1897:Src/main.c    **** //interval EDID ryan@20200917
1898:Src/main.c    **** //SETIT66021EDID();
1899:Src/main.c    **** #endif
1900:Src/main.c    **** 
1901:Src/main.c    ****    Init_TP280x_RegSet();
1902:Src/main.c    **** 
1903:Src/main.c    ****    //test@start
1904:Src/main.c    **** #ifdef VICTOR_DEBUG
1905:Src/main.c    ****    val = VXISI2CRead(0x00) ;
1906:Src/main.c    ****    dbg_Printf("VS4210 chip ID = 0x%02x\r\n",(int)val) ;
1907:Src/main.c    ****    dbg_Printf("VS4210 Init. (Startting...)\r\n") ;
1908:Src/main.c    **** #endif
1909:Src/main.c    **** 
1910:Src/main.c    ****  pVS4210_MutiWindows1.DrawOSDFlg = 0x03 ;  //Enable OSD, bit1=Title, bit0 = bar
1911:Src/main.c    ****   //pVS4210_MutiWindows1.DrawOSDFlg = 0x00 ;  //Enable OSD, bit1=Title, bit0 = bar
1912:Src/main.c    ****   //pVS4210_MutiWindows1.OutputMode = VS4210_1080P_MODE1 ;  // 4windows
1913:Src/main.c    ****   //pVS4210_MutiWindows1.OutputMode = VS4210_1080P_MODE6 ;  // 1_3 windows
1914:Src/main.c    ****   //pVS4210_MutiWindows1.OutputMode = VS4210_1080P_MODE12 ;  // 4windows
1915:Src/main.c    **** //  pVS4210_MutiWindows1.WindowMap.WMap0 = 1 ; //set ch1 = video1
ARM GAS  /tmp/ccs2VtGF.s 			page 35


1916:Src/main.c    **** //  pVS4210_MutiWindows1.WindowMap.WMap1 = 2 ; //set ch2 = video2
1917:Src/main.c    **** //  pVS4210_MutiWindows1.WindowMap.WMap2 = 3 ; //set ch3 = video3
1918:Src/main.c    **** //  pVS4210_MutiWindows1.WindowMap.WMap3 = 4 ; //set ch4 = video4
1919:Src/main.c    ****   //pVS4210_MutiWindows1.AudioChannel = HDMI_AUDIO_1 ;
1920:Src/main.c    ****   pVS4210_MutiWindows1.OutputSize = _OUTPUT_1080P60 ;
1921:Src/main.c    ****   //pVS4210_MutiWindows1.OutputSize = _OUTPUT_720P60 ;
1922:Src/main.c    ****   //pVS4210_MutiWindows1.DrawBoxFlg =1 ;
1923:Src/main.c    ****   pVS4210_MutiWindows1.DrawBoxFlg =0 ;
1924:Src/main.c    ****   pVS4210_MutiWindows1.DrawBoxColor= _EN_DRAWBOX_COLOR_White ;
1925:Src/main.c    ****   VXIS_fSetOsdx2(0) ;
1926:Src/main.c    **** 
1927:Src/main.c    ****   VS4210_SetMutiWindows(&pVS4210_MutiWindows1) ;
1928:Src/main.c    **** 
1929:Src/main.c    ****   if (pVS4210_MutiWindows1.DrawOSDFlg != 0)
1930:Src/main.c    ****   {
1931:Src/main.c    ****         OSD_Show_Flg = 1 ;
1932:Src/main.c    ****         Tim1_count = 0 ;
1933:Src/main.c    ****         OSDStateFlg = 1 ;
1934:Src/main.c    ****         OSDSecCount = 0 ;
1935:Src/main.c    ****   }  
1936:Src/main.c    **** 
1937:Src/main.c    **** ExOsdContent[0] = 3*  ((EXTERNOSDNUMBER *2) +1) ;
1938:Src/main.c    **** memset(&ExOsdContent[1] ,_spc , (EXTERNOSDNUMBER+1) *2 ) ;
1939:Src/main.c    **** exosdLen = 4*EXTERNOSDNUMBER + 4  ;
1940:Src/main.c    **** exosdStart = (EXTERNOSDNUMBER +1) *2 +1 ;
1941:Src/main.c    **** j = 1 ;
1942:Src/main.c    **** for (i = exosdStart ; i <= exosdLen ;i = i+2 )
1943:Src/main.c    **** {
1944:Src/main.c    **** 	ExOsdContent[i] = 0x7F + j ;
1945:Src/main.c    **** 	ExOsdContent[i+1] = _spc ;
1946:Src/main.c    **** 	j++ ;
1947:Src/main.c    **** }
1948:Src/main.c    **** memset(&ExOsdContent[4*EXTERNOSDNUMBER +3] ,_spc ,EXTERNOSDNUMBER *2 +1   ) ;
1949:Src/main.c    ****   exosdLen = EXTERNOSDNUMBER *2  ;
1950:Src/main.c    **** 
1951:Src/main.c    **** Audio_Sel(HDMI_AUDIO_1) ;
1952:Src/main.c    **** //test@end
1953:Src/main.c    **** 
1954:Src/main.c    **** /*
1955:Src/main.c    **** //xxxxx 2013-0801
1956:Src/main.c    **** IT6602HPDCtrl(1,0);	// HDMI port , set HPD = 0
1957:Src/main.c    **** //xxxxx
1958:Src/main.c    **** 
1959:Src/main.c    ****     delay1ms(1000);	//for power sequence
1960:Src/main.c    **** 
1961:Src/main.c    **** IT6602_fsm_init();
1962:Src/main.c    **** */
1963:Src/main.c    **** 
1964:Src/main.c    **** 
1965:Src/main.c    **** #if 0
1966:Src/main.c    **** //PowerLED(_SYSTEM_TIMER_EVENT_GRN_ON);
1967:Src/main.c    **** 
1968:Src/main.c    **** //load eeprom data
1969:Src/main.c    **** //LoadEEPROM();
1970:Src/main.c    **** 
1971:Src/main.c    **** //RX
1972:Src/main.c    ****   ManVidRes = RES1920X1080 ; //0x01
ARM GAS  /tmp/ccs2VtGF.s 			page 36


1973:Src/main.c    **** //Init_TP280x_RegSet();
1974:Src/main.c    **** 
1975:Src/main.c    **** //TX
1976:Src/main.c    ****   //VS9988_Set_Format(gbVXIS_InputMode, gbVXIS_OuputModeflg, gbVXIS_OuputChannel  )	;
1977:Src/main.c    ****   //gbVXIS_InputMode = _OSD_NO_SINGLE ;
1978:Src/main.c    ****   //VS9988_BlueScreen() ;
1979:Src/main.c    ****   //VXOSD_SetOnOff(0) ;
1980:Src/main.c    **** 
1981:Src/main.c    ****   //HDMI_Tx_Init() ;
1982:Src/main.c    **** 
1983:Src/main.c    ****   //VS4210 SW Reset@start
1984:Src/main.c    ****     VXISI2CWrite( 0x01 , 0x5A); //Reset
1985:Src/main.c    **** 
1986:Src/main.c    **** 
1987:Src/main.c    ****   //VS4210 SW Reset@end
1988:Src/main.c    ****   //VS4210_SwitchChip(0x40, 0 ) ;c8 cc8
1989:Src/main.c    ****   pVS4210_JointKind1.AudioChannel = HDMI_AUDIO_NONE ;
1990:Src/main.c    ****   pVS4210_JointKind1.DrawBoxFlg =1 ;
1991:Src/main.c    ****   pVS4210_JointKind1.DrawOSDFlg =0x03 ; //bits 0 ,1
1992:Src/main.c    ****   //pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE0_w0 ;
1993:Src/main.c    ****  // pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE1 ;
1994:Src/main.c    **** pVS4210_JointKind1.OutputMode =VS4210_1080P_MODE0_w0;/* VS4210_1080P_MODE1 ;*/
1995:Src/main.c    ****   pVS4210_JointKind1.OutputSize = _OUTPUT_1080P60 ;///*_OUTPUT_800x480;*/
1996:Src/main.c    **** 
1997:Src/main.c    **** //LCDPowerON();
1998:Src/main.c    **** 
1999:Src/main.c    **** //VS4210_Rx_NoSignal(3) ;
2000:Src/main.c    **** 
2001:Src/main.c    ****  setloopoutmode(0) ;
2002:Src/main.c    **** // SetNowMode();	
2003:Src/main.c    **** 
2004:Src/main.c    ****     VS4210_Rx_NoSignal(0) ;
2005:Src/main.c    ****   VS4210_Rx_NoSignal(1) ;
2006:Src/main.c    ****   VS4210_Rx_NoSignal(2) ;
2007:Src/main.c    ****   VS4210_Rx_NoSignal(3) ;
2008:Src/main.c    ****   
2009:Src/main.c    ****   #endif
2010:Src/main.c    **** // LCDPowerON();
2011:Src/main.c    **** // SetNowMode();  
2012:Src/main.c    ****   //void VS4210_Rx_NoSignal(tByte ch )
2013:Src/main.c    **** 
2014:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim3) ;
2015:Src/main.c    ****   /* USER CODE END 2 */
2016:Src/main.c    ****  
2017:Src/main.c    ****   /* Infinite loop */
2018:Src/main.c    ****   /* USER CODE BEGIN WHILE */
2019:Src/main.c    **** 
2020:Src/main.c    **** //SetNowMode();  
2021:Src/main.c    **** 
2022:Src/main.c    ****  // 	LoadVideoData();
2023:Src/main.c    **** 
2024:Src/main.c    **** //	  AudioMute(OFF);
2025:Src/main.c    **** 	//  LCDPowerON();
2026:Src/main.c    **** 
2027:Src/main.c    **** //	SET_VX8812_SD_Video_Out(_NTSC);
2028:Src/main.c    **** //	SET_VX8812_SD_Video_Out(_PAL);
2029:Src/main.c    **** 
ARM GAS  /tmp/ccs2VtGF.s 			page 37


2030:Src/main.c    **** //  Printf("\r\nMain Loop...");
2031:Src/main.c    ****   printf("\r\nMain Loop...");
2032:Src/main.c    **** 
2033:Src/main.c    ****   //VXISI2CWrite(0x08,0x21);
2034:Src/main.c    ****   //VXISI2CWrite(0x0A,0x21);
2035:Src/main.c    ****   //VXISI2CWrite(0x74,0x02);
2036:Src/main.c    ****   //VXISI2CWrite(0x82,0x40);
2037:Src/main.c    **** //  VS4210_FULL88init2(VS4210_hdmi1080P_1080P_mode0_w0_88param);
2038:Src/main.c    **** 
2039:Src/main.c    ****   while (1)
2040:Src/main.c    ****   {
2041:Src/main.c    ****     /* USER CODE END WHILE */
2042:Src/main.c    **** 
2043:Src/main.c    **** //	if(PowerFlag==ON)///power offf
2044:Src/main.c    **** 	 main_loop();
2045:Src/main.c    **** 	
2046:Src/main.c    **** //	WaitPowerOn();
2047:Src/main.c    **** 
2048:Src/main.c    **** 	//user_pwm_setvalue(500);
2049:Src/main.c    **** 
2050:Src/main.c    ****     /* USER CODE BEGIN 3 */
2051:Src/main.c    **** 
2052:Src/main.c    **** 
2053:Src/main.c    **** 
2054:Src/main.c    **** 
2055:Src/main.c    ****   }
2056:Src/main.c    ****   /* USER CODE END 3 */
2057:Src/main.c    **** }
2058:Src/main.c    **** 
2059:Src/main.c    **** void main_loop(void)
2060:Src/main.c    **** {
2061:Src/main.c    **** 
2062:Src/main.c    **** //BYTE val;
2063:Src/main.c    **** //USHORT loopinterval;
2064:Src/main.c    **** 
2065:Src/main.c    **** //VXISI2CWrite(0xf0,0xb5);
2066:Src/main.c    **** 
2067:Src/main.c    **** while(1)
2068:Src/main.c    **** {
2069:Src/main.c    **** 
2070:Src/main.c    **** #if (_DEBUG_MESSAGE_Monitor==ON)
2071:Src/main.c    **** 	if(AccessEnable==1)
2072:Src/main.c    **** 	#endif
2073:Src/main.c    **** {
2074:Src/main.c    **** 	HDMI_VideoModeDetect() ;
2075:Src/main.c    **** 	HDMI_AudioModeDetect() ;
2076:Src/main.c    **** 
2077:Src/main.c    **** 	TxCount++ ;
2078:Src/main.c    **** 	if (TxCount > 10 )
2079:Src/main.c    **** 	{
2080:Src/main.c    **** 		TxCount = 0 ;
2081:Src/main.c    **** 		HDMITX_DevLoopProc() ;
2082:Src/main.c    **** 	}
2083:Src/main.c    **** 	
2084:Src/main.c    **** //	GetRS232_CMD();
2085:Src/main.c    **** 	//getmcukeystate() ;
2086:Src/main.c    **** 	/*
ARM GAS  /tmp/ccs2VtGF.s 			page 38


2087:Src/main.c    **** 	if (IR_END_Flg ==1 )
2088:Src/main.c    **** 	{
2089:Src/main.c    **** 		IR_END_Flg = 0 ;
2090:Src/main.c    **** 		if (u8IRcode == u8IRCheckcode )
2091:Src/main.c    **** 		{
2092:Src/main.c    **** 			dbg_Printf("Vendor=0x%04x,IR=0x%02x\r\n",(int) u16Vendor,(int) u8IRcode) ;
2093:Src/main.c    **** 			if (u16Vendor == IR_Vendor_Code_)
2094:Src/main.c    **** 			{
2095:Src/main.c    **** 				ir_process(u8IRcode) ;
2096:Src/main.c    **** 				u16Vendor =0 ;
2097:Src/main.c    **** 			}
2098:Src/main.c    **** 		}
2099:Src/main.c    **** 	}
2100:Src/main.c    **** 	*/
2101:Src/main.c    **** 
2102:Src/main.c    **** 	msleep(10) ;
2103:Src/main.c    **** 
2104:Src/main.c    **** 	   gMode0LoopCount++ ;
2105:Src/main.c    **** 	   if (gMode0LoopCount > 100 )
2106:Src/main.c    **** 	   {
2107:Src/main.c    **** 		   gMode0LoopCount = 0 ;
2108:Src/main.c    **** 		   OSDSecCount = OSDSecCount +1 ;
2109:Src/main.c    **** 	   }
2110:Src/main.c    **** 	
2111:Src/main.c    **** 	   if (OSDPreSecCount != OSDSecCount)
2112:Src/main.c    **** 	   {
2113:Src/main.c    **** 		   OSDPreSecCount = OSDSecCount ;
2114:Src/main.c    **** 		   if (gMode0LoopFlg == 1)
2115:Src/main.c    **** 		   {
2116:Src/main.c    **** 			   gMode0LoopSecCount ++ ;
2117:Src/main.c    **** 			   if (gMode0LoopSecCount > gMode0LoopSecCmpVal)
2118:Src/main.c    **** 			   {
2119:Src/main.c    **** 				   gMode0LoopSecCount = 0 ;
2120:Src/main.c    **** 				   pVS4210_MutiWindows1.OutputMode = VS4210_FULL_MODE0 ;
2121:Src/main.c    **** 				   if (pVS4210_MutiWindows1.WindowMap.WMap0 < 4)
2122:Src/main.c    **** 				   {
2123:Src/main.c    **** 					   pVS4210_MutiWindows1.WindowMap.WMap0 = pVS4210_MutiWindows1.WindowMap.WMap0 +1 ;
2124:Src/main.c    **** 				   }
2125:Src/main.c    **** 				   else {
2126:Src/main.c    **** 					   pVS4210_MutiWindows1.WindowMap.WMap0 = 1 ;
2127:Src/main.c    **** 				   }
2128:Src/main.c    **** 				   dbg_Printf("LOOP CH=%d,SMP Sec=%d\r\n",pVS4210_MutiWindows1.WindowMap.WMap0, gMode0LoopSecCm
2129:Src/main.c    **** 				   VS4210_SetMutiWindows(&pVS4210_MutiWindows1) ;
2130:Src/main.c    **** 				   OSDSecCount = 0 ;
2131:Src/main.c    **** 			   }
2132:Src/main.c    **** 		   }
2133:Src/main.c    **** 	
2134:Src/main.c    **** 		   if (gMode0LoopFlg == 1)
2135:Src/main.c    **** 		   {
2136:Src/main.c    **** 		    dbg_Printf("Loop CH=%d,SecCount=%d\r\n",pVS4210_MutiWindows1.WindowMap.WMap0, OSDSecCount)  ;
2137:Src/main.c    **** 		   }
2138:Src/main.c    **** 		   else
2139:Src/main.c    **** 		   {
2140:Src/main.c    **** 		  //dbg_Printf("OSDSecCount=%d\r\n", OSDSecCount)  ;
2141:Src/main.c    **** 		   }
2142:Src/main.c    **** 	
2143:Src/main.c    **** 		   if (OSDStateFlg == 1 )
ARM GAS  /tmp/ccs2VtGF.s 			page 39


2144:Src/main.c    **** 		   {
2145:Src/main.c    **** 			   if (OSDSecCount >= OSD_OFF_SEC )
2146:Src/main.c    **** 			   {
2147:Src/main.c    **** 				   OSDSecCount = 0 ;
2148:Src/main.c    **** 				   OSDStateFlg = 0 ;
2149:Src/main.c    **** 				   OSD_Clear_All();
2150:Src/main.c    **** 				   ////VXIS_fSetContentOsdOnOff(0) ;
2151:Src/main.c    **** 			   }
2152:Src/main.c    **** 		   }
2153:Src/main.c    **** 
2154:Src/main.c    **** 		if(VXISI2CRead(0x32)==0 )///CONTRAST
2155:Src/main.c    **** 			VXISI2CWrite(0x32,0x80);
2156:Src/main.c    **** 		   
2157:Src/main.c    **** 	   }
2158:Src/main.c    **** 
2159:Src/main.c    **** 
2160:Src/main.c    **** 	EQ_Detect();
2161:Src/main.c    **** 	
2162:Src/main.c    **** #if (_Source_Switch==ON)
2163:Src/main.c    **** 
2164:Src/main.c    **** 	#if (_Only_AHD_Mode==ON)
2165:Src/main.c    **** 		if((SelectInputMode!=1))
2166:Src/main.c    **** 		{
2167:Src/main.c    **** 			msleep(50) ;
2168:Src/main.c    **** 
2169:Src/main.c    **** 			if((SelectInputMode!=1))
2170:Src/main.c    **** 				{
2171:Src/main.c    **** 				SelectInputMode=1;
2172:Src/main.c    **** 
2173:Src/main.c    **** 					HS_Select_Win(1);
2174:Src/main.c    **** 				}
2175:Src/main.c    **** 		}	
2176:Src/main.c    **** 
2177:Src/main.c    **** 	#else
2178:Src/main.c    **** 	CheckSelectInputMode=HDMI_SELECT_GET();
2179:Src/main.c    **** 		if((CheckSelectInputMode!=SelectInputMode)/*&&(BOOT_ISSUE==0)*/)
2180:Src/main.c    **** 		{
2181:Src/main.c    **** 			msleep(50) ;
2182:Src/main.c    **** 			CheckSelectInputMode=HDMI_SELECT_GET();
2183:Src/main.c    **** 
2184:Src/main.c    **** 			if((CheckSelectInputMode!=SelectInputMode)/*&&(BOOT_ISSUE==0)*/)
2185:Src/main.c    **** 				{
2186:Src/main.c    **** 				SelectInputMode=CheckSelectInputMode;
2187:Src/main.c    **** 
2188:Src/main.c    **** 			//	HS_Select_Win(HDMI_SELECT_GET());
2189:Src/main.c    **** 
2190:Src/main.c    **** 				if(SelectInputMode==1)
2191:Src/main.c    **** 					HS_Select_Win(1);
2192:Src/main.c    **** 				else
2193:Src/main.c    **** 				HS_Select_Win(0);
2194:Src/main.c    **** 				}
2195:Src/main.c    **** 		}	
2196:Src/main.c    **** 
2197:Src/main.c    **** 		
2198:Src/main.c    **** 	#endif
2199:Src/main.c    **** 
2200:Src/main.c    **** #endif
ARM GAS  /tmp/ccs2VtGF.s 			page 40


2201:Src/main.c    **** }
2202:Src/main.c    **** 
2203:Src/main.c    **** 	#if (_DEBUG_MESSAGE_Monitor==ON)
2204:Src/main.c    **** 	do {	//20201211-04
2205:Src/main.c    **** 	while( RS_ready())	Monitor();	
2206:Src/main.c    **** 	}while(AccessEnable == 0);
2207:Src/main.c    **** 	#endif
2208:Src/main.c    **** 
2209:Src/main.c    **** while( RS2_ready())     TOAReceivePaser();
2210:Src/main.c    **** 		
2211:Src/main.c    **** 	      SysTimerHandler();
2212:Src/main.c    **** 
2213:Src/main.c    **** 		Get_2824cIrq();//check tp2824 COC
2214:Src/main.c    **** 
2215:Src/main.c    **** 
2216:Src/main.c    **** 
2217:Src/main.c    **** #if 0
2218:Src/main.c    **** 		  loopinterval += getloopTicCount();
2219:Src/main.c    **** 		  
2220:Src/main.c    **** 					  ///////////////////////////
2221:Src/main.c    **** 					  // sys main flow
2222:Src/main.c    **** 					  ///////////////////////////
2223:Src/main.c    **** 					  if( loopinterval >=MS_LOOP) //execute once each 50m second
2224:Src/main.c    **** 					  {
2225:Src/main.c    **** 				    //printf("loopinterval\n");
2226:Src/main.c    **** 		  
2227:Src/main.c    **** 					   loopinterval =0;
2228:Src/main.c    **** 				//	 IT6602_fsm();
2229:Src/main.c    **** 					 }
2230:Src/main.c    **** #endif	
2231:Src/main.c    **** 	/*
2232:Src/main.c    **** 		CheckKeyIn();
2233:Src/main.c    **** 
2234:Src/main.c    **** 	CheckTouchP();
2235:Src/main.c    **** 	
2236:Src/main.c    **** 	  EQ_Detect();	 
2237:Src/main.c    **** 
2238:Src/main.c    **** 	if( GT9147_Scan(1)==_TOUCH_COUNT_4 ) break;		
2239:Src/main.c    **** 	
2240:Src/main.c    **** 		  val=CheckTrigger();
2241:Src/main.c    **** 		  TriggerHandler(val);
2242:Src/main.c    **** 
2243:Src/main.c    **** 	if( !CheckKeyIn() ) break;			// POWEROFF
2244:Src/main.c    **** 	*/
2245:Src/main.c    **** 	
2246:Src/main.c    **** 	}
2247:Src/main.c    **** 
2248:Src/main.c    **** }
2249:Src/main.c    **** 
2250:Src/main.c    **** /* static*/ void VS4210_FULL88init2( tcByte *Valn )
2251:Src/main.c    ****  {
2252:Src/main.c    **** 	 tByte i ;
2253:Src/main.c    **** 	 tByte addr ;
2254:Src/main.c    **** 	 tByte i2cVal ;
2255:Src/main.c    **** 	 tcByte *Addrn ; 
2256:Src/main.c    **** 	 Addrn = &VS4210_Addr_88param[0] ; 
2257:Src/main.c    ****  
ARM GAS  /tmp/ccs2VtGF.s 			page 41


2258:Src/main.c    **** 	 for (i=0 ; i< VS4210_INIT_NUMBER ; i++)
2259:Src/main.c    **** 	 {
2260:Src/main.c    **** 		 addr	= Addrn[i] ;
2261:Src/main.c    **** 		 i2cVal = Valn[i];
2262:Src/main.c    **** 		 VXISI2CWrite( addr,i2cVal);
2263:Src/main.c    **** 	 }
2264:Src/main.c    ****  }
2265:Src/main.c    **** 
2266:Src/main.c    **** void TP_bt1120_1080P_1080P_mode0_w0(void)
2267:Src/main.c    **** {
2268:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table 1080P... ");
2269:Src/main.c    **** #if 1
2270:Src/main.c    **** 
2271:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_1080P_1080P_mode0_w0_88param);
2272:Src/main.c    **** #else
2273:Src/main.c    **** 
2274:Src/main.c    **** VXISI2CWrite(0x00,0x42); 
2275:Src/main.c    **** VXISI2CWrite(0x01,0x00); 
2276:Src/main.c    **** VXISI2CWrite(0x02,0x00); 
2277:Src/main.c    **** VXISI2CWrite(0x03,0x75); 
2278:Src/main.c    **** VXISI2CWrite(0x04,0x18); 
2279:Src/main.c    **** VXISI2CWrite(0x05,0x80); 
2280:Src/main.c    **** VXISI2CWrite(0x06,0x20); 
2281:Src/main.c    **** VXISI2CWrite(0x07,0x0C); 
2282:Src/main.c    **** VXISI2CWrite(0x08,0x40); 
2283:Src/main.c    **** VXISI2CWrite(0x09,0x0A); 
2284:Src/main.c    **** VXISI2CWrite(0x0A,0x40); 
2285:Src/main.c    **** VXISI2CWrite(0x0B,0x0A); 
2286:Src/main.c    **** VXISI2CWrite(0x0C,0x00); 
2287:Src/main.c    **** VXISI2CWrite(0x0D,0x20); 
2288:Src/main.c    **** VXISI2CWrite(0x0E,0x10); 
2289:Src/main.c    **** VXISI2CWrite(0x0F,0x00); 
2290:Src/main.c    **** VXISI2CWrite(0x10,0x81); 
2291:Src/main.c    **** VXISI2CWrite(0x11,0x82); 
2292:Src/main.c    **** VXISI2CWrite(0x12,0x74); 
2293:Src/main.c    **** VXISI2CWrite(0x13,0x80); 
2294:Src/main.c    **** VXISI2CWrite(0x14,0x38); 
2295:Src/main.c    **** VXISI2CWrite(0x15,0x78); 
2296:Src/main.c    **** VXISI2CWrite(0x16,0xFE); 
2297:Src/main.c    **** VXISI2CWrite(0x17,0x00); 
2298:Src/main.c    **** VXISI2CWrite(0x18,0xC0); 
2299:Src/main.c    **** VXISI2CWrite(0x19,0x01); 
2300:Src/main.c    **** VXISI2CWrite(0x1A,0x20); 
2301:Src/main.c    **** VXISI2CWrite(0x1B,0x30); 
2302:Src/main.c    **** VXISI2CWrite(0x1C,0x00); 
2303:Src/main.c    **** VXISI2CWrite(0x1D,0x00); 
2304:Src/main.c    **** VXISI2CWrite(0x1E,0x20); 
2305:Src/main.c    **** VXISI2CWrite(0x1F,0xA4); 
2306:Src/main.c    **** VXISI2CWrite(0x20,0x50); 
2307:Src/main.c    **** VXISI2CWrite(0x21,0xE2); 
2308:Src/main.c    **** VXISI2CWrite(0x22,0x87); 
2309:Src/main.c    **** VXISI2CWrite(0x23,0x98); 
2310:Src/main.c    **** VXISI2CWrite(0x24,0x80); 
2311:Src/main.c    **** VXISI2CWrite(0x25,0x44); 
2312:Src/main.c    **** VXISI2CWrite(0x26,0x65); 
2313:Src/main.c    **** VXISI2CWrite(0x27,0x38); 
2314:Src/main.c    **** VXISI2CWrite(0x28,0xF0); 
ARM GAS  /tmp/ccs2VtGF.s 			page 42


2315:Src/main.c    **** VXISI2CWrite(0x29,0x00); 
2316:Src/main.c    **** VXISI2CWrite(0x2A,0x00); 
2317:Src/main.c    **** VXISI2CWrite(0x2B,0x11); 
2318:Src/main.c    **** VXISI2CWrite(0x2C,0x00); 
2319:Src/main.c    **** VXISI2CWrite(0x2D,0x00); 
2320:Src/main.c    **** VXISI2CWrite(0x2E,0x47); 
2321:Src/main.c    **** VXISI2CWrite(0x2F,0x80); 
2322:Src/main.c    **** VXISI2CWrite(0x30,0x38); 
2323:Src/main.c    **** VXISI2CWrite(0x31,0x80); 
2324:Src/main.c    **** VXISI2CWrite(0x32,0x80); 
2325:Src/main.c    **** VXISI2CWrite(0x33,0x80); 
2326:Src/main.c    **** VXISI2CWrite(0x34,0xA0); 
2327:Src/main.c    **** VXISI2CWrite(0x35,0x18); 
2328:Src/main.c    **** VXISI2CWrite(0x36,0x46); 
2329:Src/main.c    **** VXISI2CWrite(0x37,0x64); 
2330:Src/main.c    **** VXISI2CWrite(0x38,0x00); 
2331:Src/main.c    **** VXISI2CWrite(0x39,0xFF); 
2332:Src/main.c    **** VXISI2CWrite(0x3A,0x00); 
2333:Src/main.c    **** VXISI2CWrite(0x3B,0x80); 
2334:Src/main.c    **** VXISI2CWrite(0x3C,0x80); 
2335:Src/main.c    **** VXISI2CWrite(0x3D,0x80); 
2336:Src/main.c    **** VXISI2CWrite(0x3E,0x80); 
2337:Src/main.c    **** VXISI2CWrite(0x3F,0x80); 
2338:Src/main.c    **** //VXISI2CWrite(0xVXISI2C)
2339:Src/main.c    **** VXISI2CWrite(0x41,0x60); 
2340:Src/main.c    **** VXISI2CWrite(0x42,0x5F); 
2341:Src/main.c    **** VXISI2CWrite(0x43,0x37); 
2342:Src/main.c    **** VXISI2CWrite(0x44,0x14); 
2343:Src/main.c    **** VXISI2CWrite(0x45,0x00); 
2344:Src/main.c    **** VXISI2CWrite(0x46,0x00); 
2345:Src/main.c    **** VXISI2CWrite(0x47,0x00); 
2346:Src/main.c    **** VXISI2CWrite(0x48,0x00); 
2347:Src/main.c    **** VXISI2CWrite(0x49,0x00); 
2348:Src/main.c    **** VXISI2CWrite(0x4A,0x00); 
2349:Src/main.c    **** VXISI2CWrite(0x4B,0x20); 
2350:Src/main.c    **** VXISI2CWrite(0x4C,0x00); 
2351:Src/main.c    **** VXISI2CWrite(0x4D,0x00); 
2352:Src/main.c    **** VXISI2CWrite(0x4E,0x00); 
2353:Src/main.c    **** VXISI2CWrite(0x4F,0x7F); 
2354:Src/main.c    **** VXISI2CWrite(0x50,0x20); 
2355:Src/main.c    **** VXISI2CWrite(0x51,0x05); 
2356:Src/main.c    **** VXISI2CWrite(0x52,0x00); 
2357:Src/main.c    **** VXISI2CWrite(0x53,0x06); 
2358:Src/main.c    **** VXISI2CWrite(0x54,0x00); 
2359:Src/main.c    **** VXISI2CWrite(0x55,0xB4); 
2360:Src/main.c    **** VXISI2CWrite(0x56,0x3D); 
2361:Src/main.c    **** VXISI2CWrite(0x57,0x04); 
2362:Src/main.c    **** VXISI2CWrite(0x58,0x00); 
2363:Src/main.c    **** VXISI2CWrite(0x59,0x08); 
2364:Src/main.c    **** VXISI2CWrite(0x5A,0x10); 
2365:Src/main.c    **** VXISI2CWrite(0x5B,0x00); 
2366:Src/main.c    **** VXISI2CWrite(0x5C,0x68); 
2367:Src/main.c    **** VXISI2CWrite(0x5D,0x40); 
2368:Src/main.c    **** VXISI2CWrite(0x5E,0x0A); 
2369:Src/main.c    **** VXISI2CWrite(0x5F,0x00); 
2370:Src/main.c    **** VXISI2CWrite(0x60,0xB4); 
2371:Src/main.c    **** VXISI2CWrite(0x61,0x51); 
ARM GAS  /tmp/ccs2VtGF.s 			page 43


2372:Src/main.c    **** VXISI2CWrite(0x62,0x33); 
2373:Src/main.c    **** VXISI2CWrite(0x63,0x01); 
2374:Src/main.c    **** VXISI2CWrite(0x64,0xFF); 
2375:Src/main.c    **** VXISI2CWrite(0x65,0x01); 
2376:Src/main.c    **** VXISI2CWrite(0x66,0xFF); 
2377:Src/main.c    **** VXISI2CWrite(0x67,0x89); 
2378:Src/main.c    **** VXISI2CWrite(0x68,0xAB); 
2379:Src/main.c    **** VXISI2CWrite(0x69,0x88); 
2380:Src/main.c    **** VXISI2CWrite(0x6A,0x6E); 
2381:Src/main.c    **** VXISI2CWrite(0x6B,0x6E); 
2382:Src/main.c    **** VXISI2CWrite(0x6C,0x6E); 
2383:Src/main.c    **** VXISI2CWrite(0x6D,0x00); 
2384:Src/main.c    **** VXISI2CWrite(0x6E,0x00); 
2385:Src/main.c    **** VXISI2CWrite(0x6F,0x00); 
2386:Src/main.c    **** VXISI2CWrite(0x70,0x00); 
2387:Src/main.c    **** VXISI2CWrite(0x71,0x00); 
2388:Src/main.c    **** VXISI2CWrite(0x72,0x00); 
2389:Src/main.c    **** VXISI2CWrite(0x73,0x00); 
2390:Src/main.c    **** VXISI2CWrite(0x74,0x06); 
2391:Src/main.c    **** VXISI2CWrite(0x75,0xFF); 
2392:Src/main.c    **** VXISI2CWrite(0x76,0xFF); 
2393:Src/main.c    **** VXISI2CWrite(0x77,0xFF); 
2394:Src/main.c    **** VXISI2CWrite(0x78,0xFF); 
2395:Src/main.c    **** VXISI2CWrite(0x79,0xFF); 
2396:Src/main.c    **** VXISI2CWrite(0x7A,0xFF); 
2397:Src/main.c    **** VXISI2CWrite(0x7B,0xFF); 
2398:Src/main.c    **** VXISI2CWrite(0x7C,0xFF); 
2399:Src/main.c    **** VXISI2CWrite(0x7D,0xF0); 
2400:Src/main.c    **** VXISI2CWrite(0x7E,0x80); 
2401:Src/main.c    **** VXISI2CWrite(0x7F,0x00); 
2402:Src/main.c    **** VXISI2CWrite(0x80,0x01); 
2403:Src/main.c    **** VXISI2CWrite(0x81,0x15); 
2404:Src/main.c    **** VXISI2CWrite(0x82,0x40); 
2405:Src/main.c    **** VXISI2CWrite(0x83,0x2D); 
2406:Src/main.c    **** VXISI2CWrite(0x84,0x57); 
2407:Src/main.c    **** VXISI2CWrite(0x85,0xFD); 
2408:Src/main.c    **** VXISI2CWrite(0x86,0x00); 
2409:Src/main.c    **** VXISI2CWrite(0x87,0x00); 
2410:Src/main.c    **** VXISI2CWrite(0x88,0x00); 
2411:Src/main.c    **** VXISI2CWrite(0x89,0x00); 
2412:Src/main.c    **** VXISI2CWrite(0x8A,0x00); 
2413:Src/main.c    **** VXISI2CWrite(0x8B,0x7E); 
2414:Src/main.c    **** VXISI2CWrite(0x8C,0x03); 
2415:Src/main.c    **** VXISI2CWrite(0x8D,0x17); 
2416:Src/main.c    **** VXISI2CWrite(0x8E,0x8C); 
2417:Src/main.c    **** VXISI2CWrite(0x8F,0x00); 
2418:Src/main.c    **** VXISI2CWrite(0x90,0xCC); 
2419:Src/main.c    **** VXISI2CWrite(0x91,0x41); 
2420:Src/main.c    **** VXISI2CWrite(0x92,0xC4); 
2421:Src/main.c    **** VXISI2CWrite(0x93,0x84); 
2422:Src/main.c    **** VXISI2CWrite(0x94,0x98); 
2423:Src/main.c    **** VXISI2CWrite(0x95,0x80); 
2424:Src/main.c    **** VXISI2CWrite(0x96,0x65); 
2425:Src/main.c    **** VXISI2CWrite(0x97,0x70); 
2426:Src/main.c    **** VXISI2CWrite(0x98,0x29); 
2427:Src/main.c    **** VXISI2CWrite(0x99,0x90); 
2428:Src/main.c    **** VXISI2CWrite(0x9A,0x80); 
ARM GAS  /tmp/ccs2VtGF.s 			page 44


2429:Src/main.c    **** VXISI2CWrite(0x9B,0x04); 
2430:Src/main.c    **** VXISI2CWrite(0x9C,0x00); 
2431:Src/main.c    **** VXISI2CWrite(0x9D,0x00); 
2432:Src/main.c    **** VXISI2CWrite(0x9E,0x04); 
2433:Src/main.c    **** VXISI2CWrite(0x9F,0x65); 
2434:Src/main.c    **** VXISI2CWrite(0xA0,0x80); 
2435:Src/main.c    **** VXISI2CWrite(0xA1,0xD8); 
2436:Src/main.c    **** VXISI2CWrite(0xA2,0x98); 
2437:Src/main.c    **** VXISI2CWrite(0xA3,0x87); 
2438:Src/main.c    **** VXISI2CWrite(0xA4,0x00); 
2439:Src/main.c    **** VXISI2CWrite(0xA5,0x80); 
2440:Src/main.c    **** VXISI2CWrite(0xA6,0x00); 
2441:Src/main.c    **** VXISI2CWrite(0xA7,0x70); 
2442:Src/main.c    **** VXISI2CWrite(0xA8,0x40); 
2443:Src/main.c    **** VXISI2CWrite(0xA9,0x1E); 
2444:Src/main.c    **** VXISI2CWrite(0xAA,0x2C); 
2445:Src/main.c    **** VXISI2CWrite(0xAB,0x00); 
2446:Src/main.c    **** VXISI2CWrite(0xAC,0x90); 
2447:Src/main.c    **** VXISI2CWrite(0xAD,0x65); 
2448:Src/main.c    **** VXISI2CWrite(0xAE,0x65); 
2449:Src/main.c    **** VXISI2CWrite(0xAF,0x99); 
2450:Src/main.c    **** VXISI2CWrite(0xB0,0x00); 
2451:Src/main.c    **** VXISI2CWrite(0xB1,0x00); 
2452:Src/main.c    **** VXISI2CWrite(0xB2,0x00); 
2453:Src/main.c    **** VXISI2CWrite(0xB3,0x00); 
2454:Src/main.c    **** VXISI2CWrite(0xB4,0x00); 
2455:Src/main.c    **** VXISI2CWrite(0xB5,0x00); 
2456:Src/main.c    **** VXISI2CWrite(0xB6,0x00); 
2457:Src/main.c    **** VXISI2CWrite(0xB7,0x00); 
2458:Src/main.c    **** VXISI2CWrite(0xB8,0x80); 
2459:Src/main.c    **** VXISI2CWrite(0xB9,0x00); 
2460:Src/main.c    **** VXISI2CWrite(0xBA,0x01); 
2461:Src/main.c    **** VXISI2CWrite(0xBB,0x00); 
2462:Src/main.c    **** VXISI2CWrite(0xBC,0x90); 
2463:Src/main.c    **** VXISI2CWrite(0xBD,0x01); 
2464:Src/main.c    **** VXISI2CWrite(0xBE,0x2C); 
2465:Src/main.c    **** VXISI2CWrite(0xBF,0x00); 
2466:Src/main.c    **** VXISI2CWrite(0xC0,0x00); 
2467:Src/main.c    **** VXISI2CWrite(0xC1,0x20); 
2468:Src/main.c    **** VXISI2CWrite(0xC2,0x20); 
2469:Src/main.c    **** VXISI2CWrite(0xC3,0x20); 
2470:Src/main.c    **** VXISI2CWrite(0xC4,0x20); 
2471:Src/main.c    **** VXISI2CWrite(0xC5,0x20); 
2472:Src/main.c    **** VXISI2CWrite(0xC6,0x00); 
2473:Src/main.c    **** VXISI2CWrite(0xC7,0x00); 
2474:Src/main.c    **** VXISI2CWrite(0xC8,0x00); 
2475:Src/main.c    **** VXISI2CWrite(0xC9,0x00); 
2476:Src/main.c    **** VXISI2CWrite(0xCA,0x00); 
2477:Src/main.c    **** VXISI2CWrite(0xCB,0x00); 
2478:Src/main.c    **** VXISI2CWrite(0xCC,0x00); 
2479:Src/main.c    **** VXISI2CWrite(0xCD,0x00); 
2480:Src/main.c    **** VXISI2CWrite(0xCE,0x00); 
2481:Src/main.c    **** VXISI2CWrite(0xCF,0x00); 
2482:Src/main.c    **** VXISI2CWrite(0xD0,0xFF); 
2483:Src/main.c    **** VXISI2CWrite(0xD1,0x3F); 
2484:Src/main.c    **** VXISI2CWrite(0xD2,0xC2); 
2485:Src/main.c    **** VXISI2CWrite(0xD3,0x3F); 
ARM GAS  /tmp/ccs2VtGF.s 			page 45


2486:Src/main.c    **** VXISI2CWrite(0xD4,0x00); 
2487:Src/main.c    **** VXISI2CWrite(0xD5,0x00); 
2488:Src/main.c    **** VXISI2CWrite(0xD6,0x00); 
2489:Src/main.c    **** VXISI2CWrite(0xD7,0x0F); 
2490:Src/main.c    **** VXISI2CWrite(0xD8,0x00); 
2491:Src/main.c    **** VXISI2CWrite(0xD9,0x00); 
2492:Src/main.c    **** VXISI2CWrite(0xDA,0x00); 
2493:Src/main.c    **** VXISI2CWrite(0xDB,0x00); 
2494:Src/main.c    **** VXISI2CWrite(0xDC,0x77); 
2495:Src/main.c    **** VXISI2CWrite(0xDD,0x01); 
2496:Src/main.c    **** VXISI2CWrite(0xDE,0x5F); 
2497:Src/main.c    **** VXISI2CWrite(0xDF,0x96); 
2498:Src/main.c    **** VXISI2CWrite(0xE0,0x00); 
2499:Src/main.c    **** VXISI2CWrite(0xE1,0x00); 
2500:Src/main.c    **** VXISI2CWrite(0xE2,0x00); 
2501:Src/main.c    **** VXISI2CWrite(0xE3,0x47); 
2502:Src/main.c    **** VXISI2CWrite(0xE4,0x3C); 
2503:Src/main.c    **** VXISI2CWrite(0xE5,0x80); 
2504:Src/main.c    **** VXISI2CWrite(0xE6,0x00); 
2505:Src/main.c    **** VXISI2CWrite(0xE7,0x00); 
2506:Src/main.c    **** VXISI2CWrite(0xE8,0x00); 
2507:Src/main.c    **** VXISI2CWrite(0xE9,0x00); 
2508:Src/main.c    **** VXISI2CWrite(0xEA,0x00); 
2509:Src/main.c    **** VXISI2CWrite(0xEB,0x00); 
2510:Src/main.c    **** VXISI2CWrite(0xEC,0x88); 
2511:Src/main.c    **** VXISI2CWrite(0xED,0x00); 
2512:Src/main.c    **** VXISI2CWrite(0xEE,0x00); 
2513:Src/main.c    **** VXISI2CWrite(0xEF,0x00); 
2514:Src/main.c    **** VXISI2CWrite(0xF0,0x30); 
2515:Src/main.c    **** VXISI2CWrite(0xF1,0x43); 
2516:Src/main.c    **** VXISI2CWrite(0xF2,0x1F); 
2517:Src/main.c    **** VXISI2CWrite(0xF3,0x1F); 
2518:Src/main.c    **** VXISI2CWrite(0xF4,0x22); 
2519:Src/main.c    **** VXISI2CWrite(0xF5,0x73); 
2520:Src/main.c    **** VXISI2CWrite(0xF6,0x53); 
2521:Src/main.c    **** VXISI2CWrite(0xF7,0x80); 
2522:Src/main.c    **** VXISI2CWrite(0xF8,0x01); 
2523:Src/main.c    **** VXISI2CWrite(0xF9,0x01); 
2524:Src/main.c    **** VXISI2CWrite(0xFA,0x00); 
2525:Src/main.c    **** VXISI2CWrite(0xFB,0x00); 
2526:Src/main.c    **** VXISI2CWrite(0xFC,0x00); 
2527:Src/main.c    **** VXISI2CWrite(0xFD,0x70); 
2528:Src/main.c    **** VXISI2CWrite(0xFE,0x18); 
2529:Src/main.c    **** VXISI2CWrite(0xFF,0x07); 
2530:Src/main.c    **** 
2531:Src/main.c    **** 
2532:Src/main.c    **** /*
2533:Src/main.c    **** VXISI2CWrite(0x01,0x00);
2534:Src/main.c    **** VXISI2CWrite(0x02,0x00);
2535:Src/main.c    **** VXISI2CWrite(0x03,0x75);
2536:Src/main.c    **** VXISI2CWrite(0x04,0x18);
2537:Src/main.c    **** VXISI2CWrite(0x05,0x80);
2538:Src/main.c    **** VXISI2CWrite(0x06,0x20);
2539:Src/main.c    **** VXISI2CWrite(0x07,0x0C);
2540:Src/main.c    **** VXISI2CWrite(0x08,0x21);
2541:Src/main.c    **** VXISI2CWrite(0x09,0x0A);
2542:Src/main.c    **** VXISI2CWrite(0x0A,0x21);
ARM GAS  /tmp/ccs2VtGF.s 			page 46


2543:Src/main.c    **** VXISI2CWrite(0x0B,0x0A);
2544:Src/main.c    **** VXISI2CWrite(0x0C,0x00);
2545:Src/main.c    **** VXISI2CWrite(0x0D,0x20);
2546:Src/main.c    **** VXISI2CWrite(0x0E,0x10);
2547:Src/main.c    **** VXISI2CWrite(0x0F,0x00);
2548:Src/main.c    **** VXISI2CWrite(0x10,0x81);
2549:Src/main.c    **** VXISI2CWrite(0x11,0x82);
2550:Src/main.c    **** VXISI2CWrite(0x12,0x00);
2551:Src/main.c    **** VXISI2CWrite(0x13,0x00);
2552:Src/main.c    **** VXISI2CWrite(0x14,0x00);
2553:Src/main.c    **** VXISI2CWrite(0x15,0x78);
2554:Src/main.c    **** VXISI2CWrite(0x16,0xFE);
2555:Src/main.c    **** VXISI2CWrite(0x17,0x00);
2556:Src/main.c    **** VXISI2CWrite(0x18,0xC0);
2557:Src/main.c    **** VXISI2CWrite(0x19,0x01);
2558:Src/main.c    **** VXISI2CWrite(0x1A,0x36);
2559:Src/main.c    **** VXISI2CWrite(0x1B,0x30);
2560:Src/main.c    **** VXISI2CWrite(0x1C,0x00);
2561:Src/main.c    **** VXISI2CWrite(0x1D,0x00);
2562:Src/main.c    **** VXISI2CWrite(0x1E,0x20);
2563:Src/main.c    **** VXISI2CWrite(0x1F,0x00);
2564:Src/main.c    **** VXISI2CWrite(0x20,0x00);
2565:Src/main.c    **** VXISI2CWrite(0x21,0x00);
2566:Src/main.c    **** VXISI2CWrite(0x22,0xA7);
2567:Src/main.c    **** VXISI2CWrite(0x23,0x50);
2568:Src/main.c    **** VXISI2CWrite(0x24,0x80);
2569:Src/main.c    **** VXISI2CWrite(0x25,0x44);
2570:Src/main.c    **** VXISI2CWrite(0x26,0x65);
2571:Src/main.c    **** VXISI2CWrite(0x27,0x38);
2572:Src/main.c    **** VXISI2CWrite(0x28,0xF0);
2573:Src/main.c    **** VXISI2CWrite(0x29,0x00);
2574:Src/main.c    **** VXISI2CWrite(0x2A,0x00);
2575:Src/main.c    **** VXISI2CWrite(0x2B,0x11);
2576:Src/main.c    **** VXISI2CWrite(0x2C,0x00);
2577:Src/main.c    **** VXISI2CWrite(0x2D,0x00);
2578:Src/main.c    **** VXISI2CWrite(0x2E,0x47);
2579:Src/main.c    **** VXISI2CWrite(0x2F,0x80);
2580:Src/main.c    **** VXISI2CWrite(0x30,0x38);
2581:Src/main.c    **** VXISI2CWrite(0x31,0x80);
2582:Src/main.c    **** //VXISI2CWrite(0x32,0x80);
2583:Src/main.c    **** VXISI2CWrite(0x33,0x80);
2584:Src/main.c    **** VXISI2CWrite(0x34,0xA0);
2585:Src/main.c    **** VXISI2CWrite(0x35,0x18);
2586:Src/main.c    **** VXISI2CWrite(0x36,0x46);
2587:Src/main.c    **** VXISI2CWrite(0x37,0x64);
2588:Src/main.c    **** VXISI2CWrite(0x38,0x00);
2589:Src/main.c    **** VXISI2CWrite(0x39,0xFF);
2590:Src/main.c    **** VXISI2CWrite(0x3A,0x1B);
2591:Src/main.c    **** VXISI2CWrite(0x3B,0x80);
2592:Src/main.c    **** VXISI2CWrite(0x3C,0x80);
2593:Src/main.c    **** VXISI2CWrite(0x3D,0x80);
2594:Src/main.c    **** VXISI2CWrite(0x3E,0x80);
2595:Src/main.c    **** VXISI2CWrite(0x3F,0x80);
2596:Src/main.c    **** VXISI2CWrite(0x40,0x80);
2597:Src/main.c    **** VXISI2CWrite(0x41,0x60);
2598:Src/main.c    **** VXISI2CWrite(0x42,0x5F);
2599:Src/main.c    **** VXISI2CWrite(0x43,0x37);
ARM GAS  /tmp/ccs2VtGF.s 			page 47


2600:Src/main.c    **** VXISI2CWrite(0x44,0x14);
2601:Src/main.c    **** VXISI2CWrite(0x45,0x06);
2602:Src/main.c    **** VXISI2CWrite(0x46,0x00);
2603:Src/main.c    **** VXISI2CWrite(0x47,0x00);
2604:Src/main.c    **** VXISI2CWrite(0x48,0x00);
2605:Src/main.c    **** VXISI2CWrite(0x49,0x00);
2606:Src/main.c    **** VXISI2CWrite(0x4B,0x20);
2607:Src/main.c    **** VXISI2CWrite(0x4C,0x00);
2608:Src/main.c    **** VXISI2CWrite(0x4D,0x00);
2609:Src/main.c    **** VXISI2CWrite(0x4E,0x00);
2610:Src/main.c    **** VXISI2CWrite(0x4F,0x7F);
2611:Src/main.c    **** VXISI2CWrite(0x50,0x20);
2612:Src/main.c    **** VXISI2CWrite(0x51,0x20);
2613:Src/main.c    **** VXISI2CWrite(0x52,0x00);
2614:Src/main.c    **** VXISI2CWrite(0x53,0x04);
2615:Src/main.c    **** VXISI2CWrite(0x54,0x00);
2616:Src/main.c    **** VXISI2CWrite(0x55,0xA0);
2617:Src/main.c    **** VXISI2CWrite(0x56,0x40);
2618:Src/main.c    **** VXISI2CWrite(0x57,0x04);
2619:Src/main.c    **** VXISI2CWrite(0x58,0x10);
2620:Src/main.c    **** VXISI2CWrite(0x59,0x08);
2621:Src/main.c    **** VXISI2CWrite(0x5A,0x10);
2622:Src/main.c    **** VXISI2CWrite(0x5B,0x00);
2623:Src/main.c    **** VXISI2CWrite(0x5C,0x68);
2624:Src/main.c    **** VXISI2CWrite(0x5D,0x84);
2625:Src/main.c    **** VXISI2CWrite(0x5E,0x08);
2626:Src/main.c    **** VXISI2CWrite(0x5F,0x21);
2627:Src/main.c    **** VXISI2CWrite(0x60,0x20);
2628:Src/main.c    **** VXISI2CWrite(0x61,0xB0);
2629:Src/main.c    **** VXISI2CWrite(0x62,0x33);
2630:Src/main.c    **** VXISI2CWrite(0x63,0x01);
2631:Src/main.c    **** VXISI2CWrite(0x64,0xFF);
2632:Src/main.c    **** VXISI2CWrite(0x65,0x01);
2633:Src/main.c    **** VXISI2CWrite(0x66,0xFF);
2634:Src/main.c    **** VXISI2CWrite(0x67,0x89);
2635:Src/main.c    **** VXISI2CWrite(0x68,0xAB);
2636:Src/main.c    **** VXISI2CWrite(0x69,0x28);
2637:Src/main.c    **** VXISI2CWrite(0x6A,0x6E);
2638:Src/main.c    **** VXISI2CWrite(0x6B,0x6E);
2639:Src/main.c    **** VXISI2CWrite(0x6C,0x6E);
2640:Src/main.c    **** VXISI2CWrite(0x6D,0x00);
2641:Src/main.c    **** VXISI2CWrite(0x6E,0x00);
2642:Src/main.c    **** VXISI2CWrite(0x6F,0x00);
2643:Src/main.c    **** VXISI2CWrite(0x70,0x00);
2644:Src/main.c    **** VXISI2CWrite(0x71,0x00);
2645:Src/main.c    **** VXISI2CWrite(0x72,0x00);
2646:Src/main.c    **** VXISI2CWrite(0x73,0x00);
2647:Src/main.c    **** VXISI2CWrite(0x74,0x00);
2648:Src/main.c    **** VXISI2CWrite(0x75,0xFF);
2649:Src/main.c    **** VXISI2CWrite(0x76,0xFF);
2650:Src/main.c    **** VXISI2CWrite(0x77,0xFF);
2651:Src/main.c    **** VXISI2CWrite(0x78,0xFF);
2652:Src/main.c    **** VXISI2CWrite(0x79,0xFF);
2653:Src/main.c    **** VXISI2CWrite(0x7A,0xFF);
2654:Src/main.c    **** VXISI2CWrite(0x7B,0xFF);
2655:Src/main.c    **** VXISI2CWrite(0x7C,0xFF);
2656:Src/main.c    **** VXISI2CWrite(0x7D,0xF0);
ARM GAS  /tmp/ccs2VtGF.s 			page 48


2657:Src/main.c    **** VXISI2CWrite(0x7E,0x80);
2658:Src/main.c    **** VXISI2CWrite(0x7F,0x00);
2659:Src/main.c    **** VXISI2CWrite(0x80,0x00);
2660:Src/main.c    **** VXISI2CWrite(0x81,0x34);
2661:Src/main.c    **** VXISI2CWrite(0x82,0x40);
2662:Src/main.c    **** VXISI2CWrite(0x83,0x05);
2663:Src/main.c    **** VXISI2CWrite(0x84,0x57);
2664:Src/main.c    **** VXISI2CWrite(0x85,0xFD);
2665:Src/main.c    **** VXISI2CWrite(0x86,0x04);
2666:Src/main.c    **** VXISI2CWrite(0x87,0x24);
2667:Src/main.c    **** VXISI2CWrite(0x88,0x94);
2668:Src/main.c    **** VXISI2CWrite(0x89,0x58);
2669:Src/main.c    **** VXISI2CWrite(0x8A,0x00);
2670:Src/main.c    **** VXISI2CWrite(0x8B,0x7E);
2671:Src/main.c    **** VXISI2CWrite(0x8C,0x03);
2672:Src/main.c    **** VXISI2CWrite(0x8D,0x2C);
2673:Src/main.c    **** VXISI2CWrite(0x8E,0x8C);
2674:Src/main.c    **** VXISI2CWrite(0x8F,0x00);
2675:Src/main.c    **** VXISI2CWrite(0x90,0xCC);
2676:Src/main.c    **** VXISI2CWrite(0x91,0x41);
2677:Src/main.c    **** VXISI2CWrite(0x92,0xC4);
2678:Src/main.c    **** VXISI2CWrite(0x93,0x84);
2679:Src/main.c    **** VXISI2CWrite(0x94,0x98);
2680:Src/main.c    **** VXISI2CWrite(0x95,0x80);
2681:Src/main.c    **** VXISI2CWrite(0x96,0x65);
2682:Src/main.c    **** VXISI2CWrite(0x97,0x70);
2683:Src/main.c    **** VXISI2CWrite(0x98,0x29);
2684:Src/main.c    **** VXISI2CWrite(0x99,0x90);
2685:Src/main.c    **** VXISI2CWrite(0x9A,0x00);
2686:Src/main.c    **** VXISI2CWrite(0x9B,0x04);
2687:Src/main.c    **** //VXISI2CWrite(0x9C,0x0A);
2688:Src/main.c    **** VXISI2CWrite(0x9D,0x00);
2689:Src/main.c    **** VXISI2CWrite(0x9E,0x04);
2690:Src/main.c    **** VXISI2CWrite(0x9F,0x65);
2691:Src/main.c    **** VXISI2CWrite(0xA0,0x80);
2692:Src/main.c    **** VXISI2CWrite(0xA1,0xD8);
2693:Src/main.c    **** VXISI2CWrite(0xA2,0x98);
2694:Src/main.c    **** VXISI2CWrite(0xA3,0x87);
2695:Src/main.c    **** VXISI2CWrite(0xA4,0x00);
2696:Src/main.c    **** VXISI2CWrite(0xA5,0x80);
2697:Src/main.c    **** VXISI2CWrite(0xA6,0x00);
2698:Src/main.c    **** VXISI2CWrite(0xA7,0x70);
2699:Src/main.c    **** VXISI2CWrite(0xA8,0x40);
2700:Src/main.c    **** VXISI2CWrite(0xA9,0x1E);
2701:Src/main.c    **** VXISI2CWrite(0xAA,0x2C);
2702:Src/main.c    **** VXISI2CWrite(0xAB,0x00);
2703:Src/main.c    **** VXISI2CWrite(0xAC,0x90);
2704:Src/main.c    **** VXISI2CWrite(0xAD,0x65);
2705:Src/main.c    **** VXISI2CWrite(0xAE,0x65);
2706:Src/main.c    **** VXISI2CWrite(0xAF,0x99);
2707:Src/main.c    **** VXISI2CWrite(0xB0,0x00);
2708:Src/main.c    **** VXISI2CWrite(0xB1,0x00);
2709:Src/main.c    **** VXISI2CWrite(0xB2,0x00);
2710:Src/main.c    **** VXISI2CWrite(0xB3,0x00);
2711:Src/main.c    **** VXISI2CWrite(0xB4,0x00);
2712:Src/main.c    **** VXISI2CWrite(0xB5,0x00);
2713:Src/main.c    **** VXISI2CWrite(0xB6,0x00);
ARM GAS  /tmp/ccs2VtGF.s 			page 49


2714:Src/main.c    **** VXISI2CWrite(0xB8,0x00);
2715:Src/main.c    **** VXISI2CWrite(0xB9,0x00);
2716:Src/main.c    **** VXISI2CWrite(0xBA,0x00);
2717:Src/main.c    **** VXISI2CWrite(0xBB,0x00);
2718:Src/main.c    **** VXISI2CWrite(0xBC,0x90);
2719:Src/main.c    **** VXISI2CWrite(0xBD,0x01);
2720:Src/main.c    **** VXISI2CWrite(0xBE,0xA5);
2721:Src/main.c    **** VXISI2CWrite(0xC0,0x00);
2722:Src/main.c    **** VXISI2CWrite(0xC1,0x20);
2723:Src/main.c    **** VXISI2CWrite(0xC2,0x20);
2724:Src/main.c    **** VXISI2CWrite(0xC3,0x20);
2725:Src/main.c    **** VXISI2CWrite(0xC4,0x20);
2726:Src/main.c    **** VXISI2CWrite(0xC5,0x20);
2727:Src/main.c    **** VXISI2CWrite(0xD0,0xFF);
2728:Src/main.c    **** VXISI2CWrite(0xD1,0x3F);
2729:Src/main.c    **** VXISI2CWrite(0xD2,0xC2);
2730:Src/main.c    **** VXISI2CWrite(0xD3,0x3F);
2731:Src/main.c    **** VXISI2CWrite(0xD4,0x00);
2732:Src/main.c    **** VXISI2CWrite(0xD5,0x00);
2733:Src/main.c    **** VXISI2CWrite(0xD6,0x00);
2734:Src/main.c    **** VXISI2CWrite(0xD7,0x00);
2735:Src/main.c    **** VXISI2CWrite(0xD8,0x00);
2736:Src/main.c    **** VXISI2CWrite(0xDC,0x77);
2737:Src/main.c    **** VXISI2CWrite(0xDD,0x01);
2738:Src/main.c    **** VXISI2CWrite(0xDE,0xA5);
2739:Src/main.c    **** VXISI2CWrite(0xDF,0xE5);
2740:Src/main.c    **** VXISI2CWrite(0xE0,0x00);
2741:Src/main.c    **** VXISI2CWrite(0xE1,0x00);
2742:Src/main.c    **** VXISI2CWrite(0xE2,0x00);
2743:Src/main.c    **** VXISI2CWrite(0xE3,0x47);
2744:Src/main.c    **** VXISI2CWrite(0xE4,0x3C);
2745:Src/main.c    **** VXISI2CWrite(0xE5,0x80);
2746:Src/main.c    **** VXISI2CWrite(0xE6,0x00);
2747:Src/main.c    **** VXISI2CWrite(0xE7,0x00);
2748:Src/main.c    **** VXISI2CWrite(0xE8,0x00);
2749:Src/main.c    **** VXISI2CWrite(0xE9,0x00);
2750:Src/main.c    **** VXISI2CWrite(0xEA,0x00);
2751:Src/main.c    **** VXISI2CWrite(0xEB,0x00);
2752:Src/main.c    **** VXISI2CWrite(0xEC,0x88);
2753:Src/main.c    **** VXISI2CWrite(0xED,0x00);
2754:Src/main.c    **** VXISI2CWrite(0xEE,0x00);
2755:Src/main.c    **** VXISI2CWrite(0xEF,0x00);
2756:Src/main.c    **** VXISI2CWrite(0xF0,0x35);
2757:Src/main.c    **** VXISI2CWrite(0xF1,0x43);
2758:Src/main.c    **** VXISI2CWrite(0xF2,0x1F);
2759:Src/main.c    **** VXISI2CWrite(0xF3,0x1F);
2760:Src/main.c    **** VXISI2CWrite(0xF4,0x22);
2761:Src/main.c    **** VXISI2CWrite(0xF5,0x73);
2762:Src/main.c    **** VXISI2CWrite(0xF6,0x53);
2763:Src/main.c    **** VXISI2CWrite(0xF7,0x80);
2764:Src/main.c    **** VXISI2CWrite(0xF8,0x01);
2765:Src/main.c    **** VXISI2CWrite(0xF9,0x01);
2766:Src/main.c    **** VXISI2CWrite(0xFA,0x00);
2767:Src/main.c    **** VXISI2CWrite(0xFB,0x00);
2768:Src/main.c    **** VXISI2CWrite(0xFC,0x00);
2769:Src/main.c    **** VXISI2CWrite(0xFD,0x00);
2770:Src/main.c    **** VXISI2CWrite(0xFE,0x00);
ARM GAS  /tmp/ccs2VtGF.s 			page 50


2771:Src/main.c    **** VXISI2CWrite(0xFF,0x00);
2772:Src/main.c    **** */
2773:Src/main.c    **** #endif
2774:Src/main.c    **** 
2775:Src/main.c    **** }
2776:Src/main.c    **** 
2777:Src/main.c    **** void TP_bt1120_720P_1080P_mode0_w0(void)
2778:Src/main.c    **** {
2779:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table 720P... ");
2780:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_720P_1080P_mode0_w0_88param);
2781:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);
2782:Src/main.c    **** 
2783:Src/main.c    **** }
2784:Src/main.c    **** 
2785:Src/main.c    **** void TP_bt1120_NTSC_1080P_mode0_w0(void)
2786:Src/main.c    **** {
2787:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table NTSC... ");
2788:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_NTSC_1080P_mode0_w0_88param);
2789:Src/main.c    **** }
2790:Src/main.c    **** 
2791:Src/main.c    **** void TP_bt1120_PAL_1080P_mode0_w0(void)
2792:Src/main.c    **** {
2793:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table PAL... ");
2794:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_PAL_1080P_mode0_w0_88param);
2795:Src/main.c    **** 	#if 0
2796:Src/main.c    **** 	VXISI2CWrite(0x01,0x00);	
2797:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);	
2798:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);	
2799:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);	
2800:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);	
2801:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);	
2802:Src/main.c    **** 	VXISI2CWrite(0x07,0x08);	
2803:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);	
2804:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);	
2805:Src/main.c    **** 	VXISI2CWrite(0x0A,0x40);	
2806:Src/main.c    **** 	VXISI2CWrite(0x0B,0x09);	
2807:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);	
2808:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);	
2809:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);	
2810:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);	
2811:Src/main.c    **** 	VXISI2CWrite(0x10,0xA1);	
2812:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);	
2813:Src/main.c    **** 	VXISI2CWrite(0x12,0x21);	
2814:Src/main.c    **** 	VXISI2CWrite(0x13,0xD0);	
2815:Src/main.c    **** 	VXISI2CWrite(0x14,0x20);	
2816:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);	
2817:Src/main.c    **** 	VXISI2CWrite(0x16,0xFF);	
2818:Src/main.c    **** 	VXISI2CWrite(0x17,0x01);	
2819:Src/main.c    **** 	VXISI2CWrite(0x18,0xC0);	
2820:Src/main.c    **** 	VXISI2CWrite(0x19,0x01);	
2821:Src/main.c    **** 	VXISI2CWrite(0x1A,0x26);	
2822:Src/main.c    **** 	VXISI2CWrite(0x1B,0x14);	
2823:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);	
2824:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);	
2825:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);	
2826:Src/main.c    **** 	VXISI2CWrite(0x1F,0x31);	
2827:Src/main.c    **** 	VXISI2CWrite(0x20,0x60);	
ARM GAS  /tmp/ccs2VtGF.s 			page 51


2828:Src/main.c    **** 	VXISI2CWrite(0x21,0x39);	
2829:Src/main.c    **** 	VXISI2CWrite(0x22,0x97);	
2830:Src/main.c    **** 	VXISI2CWrite(0x23,0x48);	
2831:Src/main.c    **** 	VXISI2CWrite(0x24,0xBC);	
2832:Src/main.c    **** 	VXISI2CWrite(0x25,0x11);	
2833:Src/main.c    **** 	VXISI2CWrite(0x26,0x38);	
2834:Src/main.c    **** 	VXISI2CWrite(0x27,0x20);	
2835:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);	
2836:Src/main.c    **** 	VXISI2CWrite(0x29,0x40);	
2837:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);	
2838:Src/main.c    **** 	VXISI2CWrite(0x2B,0x00);	
2839:Src/main.c    **** 	VXISI2CWrite(0x2C,0xFF);	
2840:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);	
2841:Src/main.c    **** 	VXISI2CWrite(0x2E,0x17);	
2842:Src/main.c    **** 	VXISI2CWrite(0x2F,0xBC);	
2843:Src/main.c    **** 	VXISI2CWrite(0x30,0x20);	
2844:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);	
2845:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);	
2846:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);	
2847:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);	
2848:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);	
2849:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);	
2850:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);	
2851:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);	
2852:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);	
2853:Src/main.c    **** 	VXISI2CWrite(0x3A,0x15);	
2854:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);	
2855:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);	
2856:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);	
2857:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);	
2858:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);	
2859:Src/main.c    **** 	//VXISI2CWrite(0xVXI);SI2CWr
2860:Src/main.c    **** 	VXISI2CWrite(0x41,0x60);	
2861:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);	
2862:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);	
2863:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);	
2864:Src/main.c    **** 	VXISI2CWrite(0x45,0x05);	
2865:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);	
2866:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);	
2867:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);	
2868:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);	
2869:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);	
2870:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);	
2871:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);	
2872:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);	
2873:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);	
2874:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);	
2875:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);	
2876:Src/main.c    **** 	VXISI2CWrite(0x52,0x00);	
2877:Src/main.c    **** 	VXISI2CWrite(0x53,0x04);	
2878:Src/main.c    **** 	VXISI2CWrite(0x54,0x00);	
2879:Src/main.c    **** 	VXISI2CWrite(0x55,0xE0);	
2880:Src/main.c    **** 	VXISI2CWrite(0x56,0x40);	
2881:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);	
2882:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);	
2883:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);	
2884:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);	
ARM GAS  /tmp/ccs2VtGF.s 			page 52


2885:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);	
2886:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);	
2887:Src/main.c    **** 	VXISI2CWrite(0x5D,0x40);	
2888:Src/main.c    **** 	VXISI2CWrite(0x5E,0x08);	
2889:Src/main.c    **** 	VXISI2CWrite(0x5F,0x00);	
2890:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);	
2891:Src/main.c    **** 	VXISI2CWrite(0x61,0x54);	
2892:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);	
2893:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);	
2894:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);	
2895:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);	
2896:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);	
2897:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);	
2898:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);	
2899:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);	
2900:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);	
2901:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);	
2902:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);	
2903:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);	
2904:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);	
2905:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);	
2906:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);	
2907:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);	
2908:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);	
2909:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);	
2910:Src/main.c    **** 	VXISI2CWrite(0x74,0x06);	
2911:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);	
2912:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);	
2913:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);	
2914:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);	
2915:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);	
2916:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);	
2917:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);	
2918:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);	
2919:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);	
2920:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);	
2921:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);	
2922:Src/main.c    **** 	VXISI2CWrite(0x80,0x01);	
2923:Src/main.c    **** 	VXISI2CWrite(0x81,0x34);	
2924:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);	
2925:Src/main.c    **** 	VXISI2CWrite(0x83,0x2D);	
2926:Src/main.c    **** 	VXISI2CWrite(0x84,0x6F);	
2927:Src/main.c    **** 	VXISI2CWrite(0x85,0x00);	
2928:Src/main.c    **** 	VXISI2CWrite(0x86,0x00);	
2929:Src/main.c    **** 	VXISI2CWrite(0x87,0x00);	
2930:Src/main.c    **** 	VXISI2CWrite(0x88,0x13);	
2931:Src/main.c    **** 	VXISI2CWrite(0x89,0x1B);	
2932:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);	
2933:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);	
2934:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);	
2935:Src/main.c    **** 	VXISI2CWrite(0x8D,0x17);	
2936:Src/main.c    **** 	VXISI2CWrite(0x8E,0xB0);	
2937:Src/main.c    **** 	VXISI2CWrite(0x8F,0x14);	
2938:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);	
2939:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);	
2940:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);	
2941:Src/main.c    **** 	VXISI2CWrite(0x93,0x81);	
ARM GAS  /tmp/ccs2VtGF.s 			page 53


2942:Src/main.c    **** 	VXISI2CWrite(0x94,0xC9);	
2943:Src/main.c    **** 	VXISI2CWrite(0x95,0xBC);	
2944:Src/main.c    **** 	VXISI2CWrite(0x96,0xF5);	
2945:Src/main.c    **** 	VXISI2CWrite(0x97,0x70);	
2946:Src/main.c    **** 	VXISI2CWrite(0x98,0x15);	
2947:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);	
2948:Src/main.c    **** 	VXISI2CWrite(0x9A,0x80);	
2949:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);	
2950:Src/main.c    **** 	VXISI2CWrite(0x9C,0x00);	
2951:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);	
2952:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);	
2953:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);	
2954:Src/main.c    **** 	VXISI2CWrite(0xA0,0x3B);	
2955:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD0);	
2956:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);	
2957:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);	
2958:Src/main.c    **** 	VXISI2CWrite(0xA4,0x20);	
2959:Src/main.c    **** 	VXISI2CWrite(0xA5,0x38);	
2960:Src/main.c    **** 	VXISI2CWrite(0xA6,0xFD);	
2961:Src/main.c    **** 	VXISI2CWrite(0xA7,0x50);	
2962:Src/main.c    **** 	VXISI2CWrite(0xA8,0x40);	
2963:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);	
2964:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2E);	
2965:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);	
2966:Src/main.c    **** 	VXISI2CWrite(0xAC,0x84);	
2967:Src/main.c    **** 	VXISI2CWrite(0xAD,0xF5);	
2968:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);	
2969:Src/main.c    **** 	VXISI2CWrite(0xAF,0x9B);	
2970:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);	
2971:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);	
2972:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);	
2973:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);	
2974:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);	
2975:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);	
2976:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);	
2977:Src/main.c    **** 	VXISI2CWrite(0xB8,0x01);	
2978:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);	
2979:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);	
2980:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);	
2981:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);	
2982:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);	
2983:Src/main.c    **** 	VXISI2CWrite(0xBE,0x1D);	
2984:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);	
2985:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);	
2986:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);	
2987:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);	
2988:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);	
2989:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);	
2990:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);	
2991:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);	
2992:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);	
2993:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);	
2994:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);	
2995:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);	
2996:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);	
2997:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);	
2998:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);	
ARM GAS  /tmp/ccs2VtGF.s 			page 54


2999:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);	
3000:Src/main.c    **** 	VXISI2CWrite(0xDD,0x00);	
3001:Src/main.c    **** 	VXISI2CWrite(0xDE,0xD3);	
3002:Src/main.c    **** 	VXISI2CWrite(0xDF,0x49);	
3003:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);	
3004:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);	
3005:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);	
3006:Src/main.c    **** 	VXISI2CWrite(0xE3,0x17);	
3007:Src/main.c    **** 	VXISI2CWrite(0xE4,0xE0);	
3008:Src/main.c    **** 	VXISI2CWrite(0xE5,0xBC);	
3009:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);	
3010:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);	
3011:Src/main.c    **** 	VXISI2CWrite(0xE8,0x00);	
3012:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);	
3013:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);	
3014:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);	
3015:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);	
3016:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);	
3017:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);	
3018:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);	
3019:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);	
3020:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);	
3021:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);	
3022:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);	
3023:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);	
3024:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);	
3025:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);	
3026:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);	
3027:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);	
3028:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);	
3029:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);	
3030:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);	
3031:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);	
3032:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);	
3033:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);	
3034:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);	
3035:Src/main.c    **** #endif
3036:Src/main.c    **** 
3037:Src/main.c    **** }
3038:Src/main.c    **** void SET_VS4210_720_480_out(void)
3039:Src/main.c    **** {
3040:Src/main.c    **** 	Printf("\r\nSET_VS4210_720_480_out ");
3041:Src/main.c    **** 
3042:Src/main.c    **** 	VXISI2CWrite(0x01,0x00);
3043:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);
3044:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);
3045:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);
3046:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);
3047:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);
3048:Src/main.c    **** 	VXISI2CWrite(0x07,0x08);
3049:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);
3050:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);
3051:Src/main.c    **** 	VXISI2CWrite(0x0A,0x41);
3052:Src/main.c    **** 	VXISI2CWrite(0x0B,0x07);
3053:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);
3054:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);
3055:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);
ARM GAS  /tmp/ccs2VtGF.s 			page 55


3056:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);
3057:Src/main.c    **** 	VXISI2CWrite(0x10,0x80);
3058:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);
3059:Src/main.c    **** 	VXISI2CWrite(0x12,0x21);
3060:Src/main.c    **** 	VXISI2CWrite(0x13,0xD0);
3061:Src/main.c    **** 	VXISI2CWrite(0x14,0xE0);
3062:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);
3063:Src/main.c    **** 	VXISI2CWrite(0x16,0xFE);
3064:Src/main.c    **** 	VXISI2CWrite(0x17,0x00);
3065:Src/main.c    **** 	VXISI2CWrite(0x18,0xC8);
3066:Src/main.c    **** 	VXISI2CWrite(0x19,0x00);
3067:Src/main.c    **** 	VXISI2CWrite(0x1A,0x23);
3068:Src/main.c    **** 	VXISI2CWrite(0x1B,0x00);
3069:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);
3070:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);
3071:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);
3072:Src/main.c    **** 	VXISI2CWrite(0x1F,0x32);
3073:Src/main.c    **** 	VXISI2CWrite(0x20,0x5A);
3074:Src/main.c    **** 	VXISI2CWrite(0x21,0x0D);
3075:Src/main.c    **** 	VXISI2CWrite(0x22,0x32);
3076:Src/main.c    **** 	VXISI2CWrite(0x23,0x5A);
3077:Src/main.c    **** 	VXISI2CWrite(0x24,0xD0);
3078:Src/main.c    **** 	VXISI2CWrite(0x25,0x21);
3079:Src/main.c    **** 	VXISI2CWrite(0x26,0x0D);
3080:Src/main.c    **** 	VXISI2CWrite(0x27,0xE0);
3081:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);
3082:Src/main.c    **** 	VXISI2CWrite(0x29,0x00);
3083:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);
3084:Src/main.c    **** 	VXISI2CWrite(0x2B,0x01);
3085:Src/main.c    **** 	VXISI2CWrite(0x2C,0xFF);
3086:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);
3087:Src/main.c    **** 	VXISI2CWrite(0x2E,0x12);
3088:Src/main.c    **** 	VXISI2CWrite(0x2F,0xD0);
3089:Src/main.c    **** 	VXISI2CWrite(0x30,0xE0);
3090:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);
3091:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);
3092:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);
3093:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);
3094:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);
3095:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);
3096:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);
3097:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);
3098:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);
3099:Src/main.c    **** 	VXISI2CWrite(0x3A,0x03);
3100:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);
3101:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);
3102:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);
3103:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);
3104:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);
3105:Src/main.c    **** 	//VXISI2CWrite(0xVXISI);2CWrite(0x80
3106:Src/main.c    **** 	VXISI2CWrite(0x41,0x60);
3107:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);
3108:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);
3109:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);
3110:Src/main.c    **** 	VXISI2CWrite(0x45,0x04);
3111:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);
3112:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);
ARM GAS  /tmp/ccs2VtGF.s 			page 56


3113:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);
3114:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);
3115:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);
3116:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);
3117:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);
3118:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);
3119:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);
3120:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);
3121:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);
3122:Src/main.c    **** 	VXISI2CWrite(0x52,0x00);
3123:Src/main.c    **** 	VXISI2CWrite(0x53,0x04);
3124:Src/main.c    **** 	VXISI2CWrite(0x54,0x00);
3125:Src/main.c    **** 	VXISI2CWrite(0x55,0xE0);
3126:Src/main.c    **** 	VXISI2CWrite(0x56,0x40);
3127:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);
3128:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);
3129:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);
3130:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);
3131:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);
3132:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);
3133:Src/main.c    **** 	VXISI2CWrite(0x5D,0x40);
3134:Src/main.c    **** 	VXISI2CWrite(0x5E,0x08);
3135:Src/main.c    **** 	VXISI2CWrite(0x5F,0x00);
3136:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);
3137:Src/main.c    **** 	VXISI2CWrite(0x61,0x54);
3138:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);
3139:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);
3140:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);
3141:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);
3142:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);
3143:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);
3144:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);
3145:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);
3146:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);
3147:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);
3148:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);
3149:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);
3150:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);
3151:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);
3152:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);
3153:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);
3154:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);
3155:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);
3156:Src/main.c    **** 	VXISI2CWrite(0x74,0x00);
3157:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);
3158:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);
3159:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);
3160:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);
3161:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);
3162:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);
3163:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);
3164:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);
3165:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);
3166:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);
3167:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);
3168:Src/main.c    **** 	VXISI2CWrite(0x80,0x00);
3169:Src/main.c    **** 	VXISI2CWrite(0x81,0x34);
ARM GAS  /tmp/ccs2VtGF.s 			page 57


3170:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);
3171:Src/main.c    **** 	VXISI2CWrite(0x83,0x05);
3172:Src/main.c    **** 	VXISI2CWrite(0x84,0x59);
3173:Src/main.c    **** 	VXISI2CWrite(0x85,0xFD);
3174:Src/main.c    **** 	VXISI2CWrite(0x86,0x04);
3175:Src/main.c    **** 	VXISI2CWrite(0x87,0x24);
3176:Src/main.c    **** 	VXISI2CWrite(0x88,0x94);
3177:Src/main.c    **** 	VXISI2CWrite(0x89,0x58);
3178:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);
3179:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);
3180:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);
3181:Src/main.c    **** 	VXISI2CWrite(0x8D,0x2C);
3182:Src/main.c    **** 	VXISI2CWrite(0x8E,0x8C);
3183:Src/main.c    **** 	VXISI2CWrite(0x8F,0x00);
3184:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);
3185:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);
3186:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);
3187:Src/main.c    **** 	VXISI2CWrite(0x93,0x31);
3188:Src/main.c    **** 	VXISI2CWrite(0x94,0x87);
3189:Src/main.c    **** 	VXISI2CWrite(0x95,0xD0);
3190:Src/main.c    **** 	VXISI2CWrite(0x96,0xF3);
3191:Src/main.c    **** 	VXISI2CWrite(0x97,0x20);
3192:Src/main.c    **** 	VXISI2CWrite(0x98,0x11);
3193:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);
3194:Src/main.c    **** 	VXISI2CWrite(0x9A,0xFF);
3195:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);
3196:Src/main.c    **** 	VXISI2CWrite(0x9C,0x0A);
3197:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);
3198:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);
3199:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);
3200:Src/main.c    **** 	VXISI2CWrite(0xA0,0x2F);
3201:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD9);
3202:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);
3203:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);
3204:Src/main.c    **** 	VXISI2CWrite(0xA4,0xE1);
3205:Src/main.c    **** 	VXISI2CWrite(0xA5,0x38);
3206:Src/main.c    **** 	VXISI2CWrite(0xA6,0xC2);
3207:Src/main.c    **** 	VXISI2CWrite(0xA7,0x70);
3208:Src/main.c    **** 	VXISI2CWrite(0xA8,0x00);
3209:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);
3210:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2E);
3211:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);
3212:Src/main.c    **** 	VXISI2CWrite(0xAC,0x84);
3213:Src/main.c    **** 	VXISI2CWrite(0xAD,0xF3);
3214:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);
3215:Src/main.c    **** 	VXISI2CWrite(0xAF,0x99);
3216:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);
3217:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);
3218:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);
3219:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);
3220:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);
3221:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);
3222:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);
3223:Src/main.c    **** 	VXISI2CWrite(0xB8,0x80);
3224:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);
3225:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);
3226:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);
ARM GAS  /tmp/ccs2VtGF.s 			page 58


3227:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);
3228:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);
3229:Src/main.c    **** 	VXISI2CWrite(0xBE,0x2C);
3230:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);
3231:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);
3232:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);
3233:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);
3234:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);
3235:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);
3236:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);
3237:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);
3238:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);
3239:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);
3240:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);
3241:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);
3242:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);
3243:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);
3244:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);
3245:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);
3246:Src/main.c    **** 	VXISI2CWrite(0xDD,0x00);
3247:Src/main.c    **** 	VXISI2CWrite(0xDE,0xAF);
3248:Src/main.c    **** 	VXISI2CWrite(0xDF,0xEF);
3249:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);
3250:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);
3251:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);
3252:Src/main.c    **** 	VXISI2CWrite(0xE3,0x12);
3253:Src/main.c    **** 	VXISI2CWrite(0xE4,0xE2);
3254:Src/main.c    **** 	VXISI2CWrite(0xE5,0xD0);
3255:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);
3256:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);
3257:Src/main.c    **** 	VXISI2CWrite(0xE8,0x0F);
3258:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);
3259:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);
3260:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);
3261:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);
3262:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);
3263:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);
3264:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);
3265:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);
3266:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);
3267:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);
3268:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);
3269:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);
3270:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);
3271:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);
3272:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);
3273:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);
3274:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);
3275:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);
3276:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);
3277:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);
3278:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);
3279:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);
3280:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);
3281:Src/main.c    **** 					 
3282:Src/main.c    **** 
3283:Src/main.c    **** 
ARM GAS  /tmp/ccs2VtGF.s 			page 59


3284:Src/main.c    **** }
3285:Src/main.c    **** 
3286:Src/main.c    **** void SET_VS4210_1280_720_out(void)
3287:Src/main.c    **** {
3288:Src/main.c    **** 	Printf("\r\nSET_VS4210_1280_720_out");
3289:Src/main.c    **** 
3290:Src/main.c    **** 	VXISI2CWrite(0x01,0x00);
3291:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);
3292:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);
3293:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);
3294:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);
3295:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);
3296:Src/main.c    **** 	VXISI2CWrite(0x07,0x08);
3297:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);
3298:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);
3299:Src/main.c    **** 	VXISI2CWrite(0x0A,0x41);
3300:Src/main.c    **** 	VXISI2CWrite(0x0B,0x07);
3301:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);
3302:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);
3303:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);
3304:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);
3305:Src/main.c    **** 	VXISI2CWrite(0x10,0x80);
3306:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);
3307:Src/main.c    **** 	VXISI2CWrite(0x12,0x21);
3308:Src/main.c    **** 	VXISI2CWrite(0x13,0xD0);
3309:Src/main.c    **** 	VXISI2CWrite(0x14,0xE0);
3310:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);
3311:Src/main.c    **** 	VXISI2CWrite(0x16,0xFE);
3312:Src/main.c    **** 	VXISI2CWrite(0x17,0x00);
3313:Src/main.c    **** 	VXISI2CWrite(0x18,0xC8);
3314:Src/main.c    **** 	VXISI2CWrite(0x19,0x00);
3315:Src/main.c    **** 	VXISI2CWrite(0x1A,0x23);
3316:Src/main.c    **** 	VXISI2CWrite(0x1B,0x00);
3317:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);
3318:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);
3319:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);
3320:Src/main.c    **** 	VXISI2CWrite(0x1F,0x32);
3321:Src/main.c    **** 	VXISI2CWrite(0x20,0x5A);
3322:Src/main.c    **** 	VXISI2CWrite(0x21,0x0D);
3323:Src/main.c    **** 	VXISI2CWrite(0x22,0x32);
3324:Src/main.c    **** 	VXISI2CWrite(0x23,0x5A);
3325:Src/main.c    **** 	VXISI2CWrite(0x24,0xD0);
3326:Src/main.c    **** 	VXISI2CWrite(0x25,0x21);
3327:Src/main.c    **** 	VXISI2CWrite(0x26,0x0D);
3328:Src/main.c    **** 	VXISI2CWrite(0x27,0xE0);
3329:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);
3330:Src/main.c    **** 	VXISI2CWrite(0x29,0x00);
3331:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);
3332:Src/main.c    **** 	VXISI2CWrite(0x2B,0x01);
3333:Src/main.c    **** 	VXISI2CWrite(0x2C,0xFF);
3334:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);
3335:Src/main.c    **** 	VXISI2CWrite(0x2E,0x12);
3336:Src/main.c    **** 	VXISI2CWrite(0x2F,0xD0);
3337:Src/main.c    **** 	VXISI2CWrite(0x30,0xE0);
3338:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);
3339:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);
3340:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);
ARM GAS  /tmp/ccs2VtGF.s 			page 60


3341:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);
3342:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);
3343:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);
3344:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);
3345:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);
3346:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);
3347:Src/main.c    **** 	VXISI2CWrite(0x3A,0x03);
3348:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);
3349:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);
3350:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);
3351:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);
3352:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);
3353:Src/main.c    **** 	//VXISI2CWrite(0xVXISI);2CWrite(0x80
3354:Src/main.c    **** 	VXISI2CWrite(0x41,0x60);
3355:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);
3356:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);
3357:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);
3358:Src/main.c    **** 	VXISI2CWrite(0x45,0x04);
3359:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);
3360:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);
3361:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);
3362:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);
3363:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);
3364:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);
3365:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);
3366:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);
3367:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);
3368:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);
3369:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);
3370:Src/main.c    **** 	VXISI2CWrite(0x52,0x00);
3371:Src/main.c    **** 	VXISI2CWrite(0x53,0x04);
3372:Src/main.c    **** 	VXISI2CWrite(0x54,0x00);
3373:Src/main.c    **** 	VXISI2CWrite(0x55,0xE0);
3374:Src/main.c    **** 	VXISI2CWrite(0x56,0x40);
3375:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);
3376:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);
3377:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);
3378:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);
3379:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);
3380:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);
3381:Src/main.c    **** 	VXISI2CWrite(0x5D,0x40);
3382:Src/main.c    **** 	VXISI2CWrite(0x5E,0x08);
3383:Src/main.c    **** 	VXISI2CWrite(0x5F,0x00);
3384:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);
3385:Src/main.c    **** 	VXISI2CWrite(0x61,0x54);
3386:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);
3387:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);
3388:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);
3389:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);
3390:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);
3391:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);
3392:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);
3393:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);
3394:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);
3395:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);
3396:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);
3397:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);
ARM GAS  /tmp/ccs2VtGF.s 			page 61


3398:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);
3399:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);
3400:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);
3401:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);
3402:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);
3403:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);
3404:Src/main.c    **** 	VXISI2CWrite(0x74,0x00);
3405:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);
3406:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);
3407:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);
3408:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);
3409:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);
3410:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);
3411:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);
3412:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);
3413:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);
3414:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);
3415:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);
3416:Src/main.c    **** 	VXISI2CWrite(0x80,0x00);
3417:Src/main.c    **** 	VXISI2CWrite(0x81,0x34);
3418:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);
3419:Src/main.c    **** 	VXISI2CWrite(0x83,0x05);
3420:Src/main.c    **** 	VXISI2CWrite(0x84,0x59);
3421:Src/main.c    **** 	VXISI2CWrite(0x85,0xFD);
3422:Src/main.c    **** 	VXISI2CWrite(0x86,0x04);
3423:Src/main.c    **** 	VXISI2CWrite(0x87,0x24);
3424:Src/main.c    **** 	VXISI2CWrite(0x88,0x94);
3425:Src/main.c    **** 	VXISI2CWrite(0x89,0x58);
3426:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);
3427:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);
3428:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);
3429:Src/main.c    **** 	VXISI2CWrite(0x8D,0x2C);
3430:Src/main.c    **** 	VXISI2CWrite(0x8E,0x8C);
3431:Src/main.c    **** 	VXISI2CWrite(0x8F,0x00);
3432:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);
3433:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);
3434:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);
3435:Src/main.c    **** 	VXISI2CWrite(0x93,0x31);
3436:Src/main.c    **** 	VXISI2CWrite(0x94,0x87);
3437:Src/main.c    **** 	VXISI2CWrite(0x95,0xD0);
3438:Src/main.c    **** 	VXISI2CWrite(0x96,0xF3);
3439:Src/main.c    **** 	VXISI2CWrite(0x97,0x20);
3440:Src/main.c    **** 	VXISI2CWrite(0x98,0x11);
3441:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);
3442:Src/main.c    **** 	VXISI2CWrite(0x9A,0xFF);
3443:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);
3444:Src/main.c    **** 	VXISI2CWrite(0x9C,0x0A);
3445:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);
3446:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);
3447:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);
3448:Src/main.c    **** 	VXISI2CWrite(0xA0,0x2F);
3449:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD9);
3450:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);
3451:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);
3452:Src/main.c    **** 	VXISI2CWrite(0xA4,0xE1);
3453:Src/main.c    **** 	VXISI2CWrite(0xA5,0x38);
3454:Src/main.c    **** 	VXISI2CWrite(0xA6,0xC2);
ARM GAS  /tmp/ccs2VtGF.s 			page 62


3455:Src/main.c    **** 	VXISI2CWrite(0xA7,0x70);
3456:Src/main.c    **** 	VXISI2CWrite(0xA8,0x00);
3457:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);
3458:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2E);
3459:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);
3460:Src/main.c    **** 	VXISI2CWrite(0xAC,0x84);
3461:Src/main.c    **** 	VXISI2CWrite(0xAD,0xF3);
3462:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);
3463:Src/main.c    **** 	VXISI2CWrite(0xAF,0x99);
3464:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);
3465:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);
3466:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);
3467:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);
3468:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);
3469:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);
3470:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);
3471:Src/main.c    **** 	VXISI2CWrite(0xB8,0x80);
3472:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);
3473:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);
3474:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);
3475:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);
3476:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);
3477:Src/main.c    **** 	VXISI2CWrite(0xBE,0x2C);
3478:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);
3479:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);
3480:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);
3481:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);
3482:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);
3483:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);
3484:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);
3485:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);
3486:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);
3487:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);
3488:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);
3489:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);
3490:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);
3491:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);
3492:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);
3493:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);
3494:Src/main.c    **** 	VXISI2CWrite(0xDD,0x00);
3495:Src/main.c    **** 	VXISI2CWrite(0xDE,0xAF);
3496:Src/main.c    **** 	VXISI2CWrite(0xDF,0xEF);
3497:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);
3498:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);
3499:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);
3500:Src/main.c    **** 	VXISI2CWrite(0xE3,0x12);
3501:Src/main.c    **** 	VXISI2CWrite(0xE4,0xE2);
3502:Src/main.c    **** 	VXISI2CWrite(0xE5,0xD0);
3503:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);
3504:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);
3505:Src/main.c    **** 	VXISI2CWrite(0xE8,0x0F);
3506:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);
3507:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);
3508:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);
3509:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);
3510:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);
3511:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);
ARM GAS  /tmp/ccs2VtGF.s 			page 63


3512:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);
3513:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);
3514:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);
3515:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);
3516:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);
3517:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);
3518:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);
3519:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);
3520:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);
3521:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);
3522:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);
3523:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);
3524:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);
3525:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);
3526:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);
3527:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);
3528:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);
3529:Src/main.c    **** 			 
3530:Src/main.c    **** }
3531:Src/main.c    **** 
3532:Src/main.c    **** void SET_AHD_MDOE(void)
3533:Src/main.c    **** {
3534:Src/main.c    **** 	Printf("\r\nSET_AHD_MDOE...");
3535:Src/main.c    **** 
3536:Src/main.c    **** 	VXISI2CWrite(0x00,0x42);
3537:Src/main.c    **** 	VXISI2CWrite(0x01,0x00);
3538:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);
3539:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);
3540:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);
3541:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);
3542:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);
3543:Src/main.c    **** 	VXISI2CWrite(0x07,0x0C);
3544:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);
3545:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);
3546:Src/main.c    **** 	VXISI2CWrite(0x0A,0x40);
3547:Src/main.c    **** 	VXISI2CWrite(0x0B,0x0A);
3548:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);
3549:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);
3550:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);
3551:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);
3552:Src/main.c    **** 	VXISI2CWrite(0x10,0x81);
3553:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);
3554:Src/main.c    **** 	VXISI2CWrite(0x12,0x74);
3555:Src/main.c    **** 	VXISI2CWrite(0x13,0x80);
3556:Src/main.c    **** 	VXISI2CWrite(0x14,0x38);
3557:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);
3558:Src/main.c    **** 	VXISI2CWrite(0x16,0xFE);
3559:Src/main.c    **** 	VXISI2CWrite(0x17,0x00);
3560:Src/main.c    **** 	VXISI2CWrite(0x18,0xC0);
3561:Src/main.c    **** 	VXISI2CWrite(0x19,0x01);
3562:Src/main.c    **** 	VXISI2CWrite(0x1A,0x20);
3563:Src/main.c    **** 	VXISI2CWrite(0x1B,0x30);
3564:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);
3565:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);
3566:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);
3567:Src/main.c    **** 	VXISI2CWrite(0x1F,0xA4);
3568:Src/main.c    **** 	VXISI2CWrite(0x20,0x50);
ARM GAS  /tmp/ccs2VtGF.s 			page 64


3569:Src/main.c    **** 	VXISI2CWrite(0x21,0xE2);
3570:Src/main.c    **** 	VXISI2CWrite(0x22,0x87);
3571:Src/main.c    **** 	VXISI2CWrite(0x23,0x98);
3572:Src/main.c    **** 	VXISI2CWrite(0x24,0x80);
3573:Src/main.c    **** 	VXISI2CWrite(0x25,0x44);
3574:Src/main.c    **** 	VXISI2CWrite(0x26,0x65);
3575:Src/main.c    **** 	VXISI2CWrite(0x27,0x38);
3576:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);
3577:Src/main.c    **** 	VXISI2CWrite(0x29,0x00);
3578:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);
3579:Src/main.c    **** 	VXISI2CWrite(0x2B,0x11);
3580:Src/main.c    **** 	VXISI2CWrite(0x2C,0x00);
3581:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);
3582:Src/main.c    **** 	VXISI2CWrite(0x2E,0x47);
3583:Src/main.c    **** 	VXISI2CWrite(0x2F,0x80);
3584:Src/main.c    **** 	VXISI2CWrite(0x30,0x38);
3585:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);
3586:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);
3587:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);
3588:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);
3589:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);
3590:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);
3591:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);
3592:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);
3593:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);
3594:Src/main.c    **** 	VXISI2CWrite(0x3A,0x73);
3595:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);
3596:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);
3597:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);
3598:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);
3599:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);
3600:Src/main.c    **** 	VXISI2CWrite(0x40,0x80);
3601:Src/main.c    **** 	VXISI2CWrite(0x41,0x60);
3602:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);
3603:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);
3604:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);
3605:Src/main.c    **** 	VXISI2CWrite(0x45,0x00);
3606:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);
3607:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);
3608:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);
3609:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);
3610:Src/main.c    **** 	VXISI2CWrite(0x4A,0x00);
3611:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);
3612:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);
3613:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);
3614:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);
3615:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);
3616:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);
3617:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);
3618:Src/main.c    **** 	VXISI2CWrite(0x52,0xA4);
3619:Src/main.c    **** 	VXISI2CWrite(0x53,0xC0);
3620:Src/main.c    **** 	VXISI2CWrite(0x54,0x42);
3621:Src/main.c    **** 	VXISI2CWrite(0x55,0x60);
3622:Src/main.c    **** 	VXISI2CWrite(0x56,0x5C);
3623:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);
3624:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);
3625:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);
ARM GAS  /tmp/ccs2VtGF.s 			page 65


3626:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);
3627:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);
3628:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);
3629:Src/main.c    **** 	VXISI2CWrite(0x5D,0xA8);
3630:Src/main.c    **** 	VXISI2CWrite(0x5E,0xC0);
3631:Src/main.c    **** 	VXISI2CWrite(0x5F,0x53);
3632:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);
3633:Src/main.c    **** 	VXISI2CWrite(0x61,0xCC);
3634:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);
3635:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);
3636:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);
3637:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);
3638:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);
3639:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);
3640:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);
3641:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);
3642:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);
3643:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);
3644:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);
3645:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);
3646:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);
3647:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);
3648:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);
3649:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);
3650:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);
3651:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);
3652:Src/main.c    **** 	VXISI2CWrite(0x74,0x06);
3653:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);
3654:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);
3655:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);
3656:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);
3657:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);
3658:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);
3659:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);
3660:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);
3661:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);
3662:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);
3663:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);
3664:Src/main.c    **** 	VXISI2CWrite(0x80,0x01);
3665:Src/main.c    **** 	VXISI2CWrite(0x81,0x15);
3666:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);
3667:Src/main.c    **** 	VXISI2CWrite(0x83,0x2D);
3668:Src/main.c    **** 	VXISI2CWrite(0x84,0x57);
3669:Src/main.c    **** 	VXISI2CWrite(0x85,0xFD);
3670:Src/main.c    **** 	VXISI2CWrite(0x86,0x00);
3671:Src/main.c    **** 	VXISI2CWrite(0x87,0x00);
3672:Src/main.c    **** 	VXISI2CWrite(0x88,0x00);
3673:Src/main.c    **** 	VXISI2CWrite(0x89,0x00);
3674:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);
3675:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);
3676:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);
3677:Src/main.c    **** 	VXISI2CWrite(0x8D,0x17);
3678:Src/main.c    **** 	VXISI2CWrite(0x8E,0x8C);
3679:Src/main.c    **** 	VXISI2CWrite(0x8F,0x00);
3680:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);
3681:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);
3682:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);
ARM GAS  /tmp/ccs2VtGF.s 			page 66


3683:Src/main.c    **** 	VXISI2CWrite(0x93,0x84);
3684:Src/main.c    **** 	VXISI2CWrite(0x94,0x98);
3685:Src/main.c    **** 	VXISI2CWrite(0x95,0x80);
3686:Src/main.c    **** 	VXISI2CWrite(0x96,0x65);
3687:Src/main.c    **** 	VXISI2CWrite(0x97,0x70);
3688:Src/main.c    **** 	VXISI2CWrite(0x98,0x29);
3689:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);
3690:Src/main.c    **** 	VXISI2CWrite(0x9A,0x00);
3691:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);
3692:Src/main.c    **** 	VXISI2CWrite(0x9C,0x00);
3693:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);
3694:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);
3695:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);
3696:Src/main.c    **** 	VXISI2CWrite(0xA0,0x80);
3697:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD8);
3698:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);
3699:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);
3700:Src/main.c    **** 	VXISI2CWrite(0xA4,0x00);
3701:Src/main.c    **** 	VXISI2CWrite(0xA5,0x80);
3702:Src/main.c    **** 	VXISI2CWrite(0xA6,0x00);
3703:Src/main.c    **** 	VXISI2CWrite(0xA7,0x70);
3704:Src/main.c    **** 	VXISI2CWrite(0xA8,0x40);
3705:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);
3706:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2C);
3707:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);
3708:Src/main.c    **** 	VXISI2CWrite(0xAC,0x90);
3709:Src/main.c    **** 	VXISI2CWrite(0xAD,0x65);
3710:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);
3711:Src/main.c    **** 	VXISI2CWrite(0xAF,0x99);
3712:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);
3713:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);
3714:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);
3715:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);
3716:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);
3717:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);
3718:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);
3719:Src/main.c    **** 	VXISI2CWrite(0xB7,0x00);
3720:Src/main.c    **** 	VXISI2CWrite(0xB8,0x80);
3721:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);
3722:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);
3723:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);
3724:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);
3725:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);
3726:Src/main.c    **** 	VXISI2CWrite(0xBE,0x2C);
3727:Src/main.c    **** 	VXISI2CWrite(0xBF,0x00);
3728:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);
3729:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);
3730:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);
3731:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);
3732:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);
3733:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);
3734:Src/main.c    **** 	VXISI2CWrite(0xC6,0x00);
3735:Src/main.c    **** 	VXISI2CWrite(0xC7,0x00);
3736:Src/main.c    **** 	VXISI2CWrite(0xC8,0x00);
3737:Src/main.c    **** 	VXISI2CWrite(0xC9,0x00);
3738:Src/main.c    **** 	VXISI2CWrite(0xCA,0x00);
3739:Src/main.c    **** 	VXISI2CWrite(0xCB,0x00);
ARM GAS  /tmp/ccs2VtGF.s 			page 67


3740:Src/main.c    **** 	VXISI2CWrite(0xCC,0x00);
3741:Src/main.c    **** 	VXISI2CWrite(0xCD,0x00);
3742:Src/main.c    **** 	VXISI2CWrite(0xCE,0x00);
3743:Src/main.c    **** 	VXISI2CWrite(0xCF,0x00);
3744:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);
3745:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);
3746:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);
3747:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);
3748:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);
3749:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);
3750:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);
3751:Src/main.c    **** 	VXISI2CWrite(0xD7,0x0F);
3752:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);
3753:Src/main.c    **** 	VXISI2CWrite(0xD9,0x00);
3754:Src/main.c    **** 	VXISI2CWrite(0xDA,0x00);
3755:Src/main.c    **** 	VXISI2CWrite(0xDB,0x00);
3756:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);
3757:Src/main.c    **** 	VXISI2CWrite(0xDD,0x01);
3758:Src/main.c    **** 	VXISI2CWrite(0xDE,0x5F);
3759:Src/main.c    **** 	VXISI2CWrite(0xDF,0x96);
3760:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);
3761:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);
3762:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);
3763:Src/main.c    **** 	VXISI2CWrite(0xE3,0x47);
3764:Src/main.c    **** 	VXISI2CWrite(0xE4,0x3C);
3765:Src/main.c    **** 	VXISI2CWrite(0xE5,0x80);
3766:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);
3767:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);
3768:Src/main.c    **** 	VXISI2CWrite(0xE8,0x00);
3769:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);
3770:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);
3771:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);
3772:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);
3773:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);
3774:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);
3775:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);
3776:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);
3777:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);
3778:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);
3779:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);
3780:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);
3781:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);
3782:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);
3783:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);
3784:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);
3785:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);
3786:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);
3787:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);
3788:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);
3789:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);
3790:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);
3791:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);
3792:Src/main.c    **** 
3793:Src/main.c    **** }
3794:Src/main.c    **** /**
3795:Src/main.c    ****   * @brief System Clock Configuration
3796:Src/main.c    ****   * @retval None
ARM GAS  /tmp/ccs2VtGF.s 			page 68


3797:Src/main.c    ****   */
3798:Src/main.c    ****   #if 0//crystal
3799:Src/main.c    **** 
3800:Src/main.c    ****   void SystemClock_Config(void)
3801:Src/main.c    ****   {
3802:Src/main.c    **** 	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
3803:Src/main.c    **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
3804:Src/main.c    ****   
3805:Src/main.c    **** 	/** Initializes the CPU, AHB and APB busses clocks 
3806:Src/main.c    **** 	*/
3807:Src/main.c    **** 	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
3808:Src/main.c    **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
3809:Src/main.c    **** 	RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
3810:Src/main.c    **** 	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
3811:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
3812:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
3813:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
3814:Src/main.c    **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
3815:Src/main.c    **** 	{
3816:Src/main.c    **** 	  Error_Handler();
3817:Src/main.c    **** 	}
3818:Src/main.c    **** 	/** Initializes the CPU, AHB and APB busses clocks 
3819:Src/main.c    **** 	*/
3820:Src/main.c    **** 	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
3821:Src/main.c    **** 								|RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
3822:Src/main.c    **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
3823:Src/main.c    **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
3824:Src/main.c    **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
3825:Src/main.c    **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
3826:Src/main.c    ****   
3827:Src/main.c    **** 	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
3828:Src/main.c    **** 	{
3829:Src/main.c    **** 	  Error_Handler();
3830:Src/main.c    **** 	}
3831:Src/main.c    ****   }
3832:Src/main.c    **** 
3833:Src/main.c    ****   #else
3834:Src/main.c    **** void SystemClock_Config(void)
3835:Src/main.c    **** {
3836:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
3837:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
3838:Src/main.c    **** 
3839:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
3840:Src/main.c    ****   */
3841:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
3842:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
3843:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
3844:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
3845:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
3846:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
3847:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
3848:Src/main.c    ****   {
3849:Src/main.c    ****     Error_Handler();
3850:Src/main.c    ****   }
3851:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
3852:Src/main.c    ****   */
3853:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
ARM GAS  /tmp/ccs2VtGF.s 			page 69


3854:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
3855:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
3856:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
3857:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
3858:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
3859:Src/main.c    **** 
3860:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
3861:Src/main.c    ****   {
3862:Src/main.c    ****     Error_Handler();
3863:Src/main.c    ****   }
3864:Src/main.c    **** }
3865:Src/main.c    **** #endif
3866:Src/main.c    **** /**
3867:Src/main.c    ****   * @brief ADC1 Initialization Function.
3868:Src/main.c    ****   * @param None
3869:Src/main.c    ****   * @retval None
3870:Src/main.c    ****   */
3871:Src/main.c    ****   #if 0
3872:Src/main.c    **** static void MX_ADC1_Init(void)
3873:Src/main.c    **** {
3874:Src/main.c    **** 
3875:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
3876:Src/main.c    **** 
3877:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
3878:Src/main.c    **** 
3879:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
3880:Src/main.c    **** 
3881:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
3882:Src/main.c    **** 
3883:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
3884:Src/main.c    ****   /** Common config 
3885:Src/main.c    ****   */
3886:Src/main.c    ****   hadc1.Instance = ADC1;
3887:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
3888:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
3889:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
3890:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
3891:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
3892:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
3893:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
3894:Src/main.c    ****   {
3895:Src/main.c    ****     Error_Handler();
3896:Src/main.c    ****   }
3897:Src/main.c    ****   /** Configure Regular Channel 
3898:Src/main.c    ****   */
3899:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_13;
3900:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
3901:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
3902:Src/main.c    ****   /*
3903:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
3904:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
3905:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
3906:Src/main.c    ****   sConfig.Offset = 0;
3907:Src/main.c    ****   */
3908:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
3909:Src/main.c    ****   {
3910:Src/main.c    ****     Error_Handler();
ARM GAS  /tmp/ccs2VtGF.s 			page 70


3911:Src/main.c    ****   }
3912:Src/main.c    **** 
3913:Src/main.c    **** 
3914:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
3915:Src/main.c    **** HAL_ADC_MspInit(&hadc1);
3916:Src/main.c    **** 
3917:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
3918:Src/main.c    **** 
3919:Src/main.c    **** }
3920:Src/main.c    **** #endif
3921:Src/main.c    **** /**
3922:Src/main.c    ****   * @brief TIM2 Initialization Function
3923:Src/main.c    ****   * @param None
3924:Src/main.c    ****   * @retval None
3925:Src/main.c    ****   */
3926:Src/main.c    ****   #if 0
3927:Src/main.c    **** static void MX_TIM2_Init(void)
3928:Src/main.c    **** {
3929:Src/main.c    **** 
3930:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
3931:Src/main.c    **** 
3932:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
3933:Src/main.c    ****   ///TIM_ClockConfigTypeDef sClockSourceConfig = {0};
3934:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
3935:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
3936:Src/main.c    **** 
3937:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
3938:Src/main.c    **** 
3939:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
3940:Src/main.c    ****   htim2.Instance = TIM2;
3941:Src/main.c    ****   htim2.Init.Prescaler = (35/4);
3942:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
3943:Src/main.c    ****   htim2.Init.Period = 4000;
3944:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
3945:Src/main.c    ****  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE; 
3946:Src/main.c    **** /*
3947:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
3948:Src/main.c    **** 	{
3949:Src/main.c    **** 	  Error_Handler();
3950:Src/main.c    **** 	}
3951:Src/main.c    **** 	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
3952:Src/main.c    **** 	if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
3953:Src/main.c    **** 	{
3954:Src/main.c    **** 	  Error_Handler();
3955:Src/main.c    **** 	}
3956:Src/main.c    **** */
3957:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
3958:Src/main.c    ****   {
3959:Src/main.c    ****    Error_Handler();
3960:Src/main.c    ****   }
3961:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
3962:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
3963:Src/main.c    **** 
3964:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
3965:Src/main.c    ****   {
3966:Src/main.c    ****    Error_Handler();
3967:Src/main.c    ****   }
ARM GAS  /tmp/ccs2VtGF.s 			page 71


3968:Src/main.c    ****   
3969:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
3970:Src/main.c    **** //  sConfigOC.Pulse = 4000;
3971:Src/main.c    ****   sConfigOC.Pulse = 0;
3972:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
3973:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
3974:Src/main.c    **** 
3975:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
3976:Src/main.c    ****   {
3977:Src/main.c    ****    Error_Handler();
3978:Src/main.c    ****   }
3979:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
3980:Src/main.c    **** 
3981:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
3982:Src/main.c    ****   HAL_TIM_MspPostInit(&htim2);
3983:Src/main.c    **** 
3984:Src/main.c    **** //TIMOCInitStructure.TIM_Pulse =(period); 						   
3985:Src/main.c    **** 
3986:Src/main.c    **** //TIMOCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;	   
3987:Src/main.c    **** //TIMOCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
3988:Src/main.c    **** //TIM_OC3Init(TIM3, &TIMOCInitStructure); 				   
3989:Src/main.c    **** 				   
3990:Src/main.c    **** 
3991:Src/main.c    **** //TIM_Cmd(TIM3, ENABLE);
3992:Src/main.c    **** 
3993:Src/main.c    **** }
3994:Src/main.c    **** #endif
3995:Src/main.c    **** /**
3996:Src/main.c    ****   * @brief TIM3 Initialization Function
3997:Src/main.c    ****   * @param None
3998:Src/main.c    ****   * @retval None
3999:Src/main.c    ****   */
4000:Src/main.c    **** static void MX_TIM3_Init(void)
4001:Src/main.c    **** {
4002:Src/main.c    **** 
4003:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 0 */
4004:Src/main.c    **** 
4005:Src/main.c    ****   /* USER CODE END TIM3_Init 0 */
4006:Src/main.c    **** 
4007:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
4008:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
4009:Src/main.c    **** 
4010:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 1 */
4011:Src/main.c    **** 
4012:Src/main.c    ****   /* USER CODE END TIM3_Init 1 */
4013:Src/main.c    ****   htim3.Instance = TIM3;
4014:Src/main.c    ****   htim3.Init.Prescaler = 35;
4015:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
4016:Src/main.c    ****   htim3.Init.Period = 9;
4017:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
4018:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
4019:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
4020:Src/main.c    ****   {
4021:Src/main.c    ****     Error_Handler();
4022:Src/main.c    ****   }
4023:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
4024:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
ARM GAS  /tmp/ccs2VtGF.s 			page 72


4025:Src/main.c    ****   {
4026:Src/main.c    ****     Error_Handler();
4027:Src/main.c    ****   }
4028:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
4029:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
4030:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
4031:Src/main.c    ****   {
4032:Src/main.c    ****     Error_Handler();
4033:Src/main.c    ****   }
4034:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 2 */
4035:Src/main.c    **** 
4036:Src/main.c    ****   /* USER CODE END TIM3_Init 2 */
4037:Src/main.c    **** 
4038:Src/main.c    **** }
4039:Src/main.c    **** 
4040:Src/main.c    **** /**
4041:Src/main.c    ****   * @brief USART1 Initialization Function
4042:Src/main.c    ****   * @param None
4043:Src/main.c    ****   * @retval None
4044:Src/main.c    ****   */
4045:Src/main.c    **** static void MX_USART1_UART_Init(void)
4046:Src/main.c    **** {
4047:Src/main.c    **** 
4048:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
4049:Src/main.c    **** 
4050:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
4051:Src/main.c    **** 
4052:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
4053:Src/main.c    **** 
4054:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
4055:Src/main.c    ****   huart1.Instance = USART1;
4056:Src/main.c    **** //  huart1.Init.BaudRate = 9600;
4057:Src/main.c    ****   huart1.Init.BaudRate = 115200;
4058:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
4059:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
4060:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
4061:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
4062:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
4063:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
4064:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
4065:Src/main.c    ****   {
4066:Src/main.c    ****     Error_Handler();
4067:Src/main.c    ****   }
4068:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
4069:Src/main.c    **** 
4070:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
4071:Src/main.c    **** 
4072:Src/main.c    **** }
4073:Src/main.c    **** 
4074:Src/main.c    **** /**
4075:Src/main.c    ****   * @brief USART2 Initialization Function
4076:Src/main.c    ****   * @param None
4077:Src/main.c    ****   * @retval None
4078:Src/main.c    ****   */
4079:Src/main.c    **** static void MX_USART2_UART_Init(void)
4080:Src/main.c    **** {
4081:Src/main.c    **** 
ARM GAS  /tmp/ccs2VtGF.s 			page 73


4082:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
4083:Src/main.c    **** 
4084:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
4085:Src/main.c    **** 
4086:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
4087:Src/main.c    **** 
4088:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
4089:Src/main.c    ****   huart2.Instance = USART2;
4090:Src/main.c    ****   huart2.Init.BaudRate = 38400;
4091:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
4092:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
4093:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
4094:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
4095:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
4096:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
4097:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
4098:Src/main.c    ****   {
4099:Src/main.c    ****     Error_Handler();
4100:Src/main.c    ****   }
4101:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
4102:Src/main.c    **** 
4103:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
4104:Src/main.c    **** 
4105:Src/main.c    **** }
4106:Src/main.c    **** 
4107:Src/main.c    **** /**
4108:Src/main.c    ****   * @brief GPIO Initialization Function
4109:Src/main.c    ****   * @param None
4110:Src/main.c    ****   * @retval None
4111:Src/main.c    ****   */
4112:Src/main.c    **** static void MX_GPIO_Init(void)
4113:Src/main.c    **** {
  25              		.loc 1 4113 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 32
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 56
4114:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 4114 0
  41 0004 0025     		movs	r5, #0
  42 0006 0495     		str	r5, [sp, #16]
  43 0008 0595     		str	r5, [sp, #20]
  44 000a 0695     		str	r5, [sp, #24]
  45 000c 0795     		str	r5, [sp, #28]
  46              	.LBB2:
4115:Src/main.c    **** 
4116:Src/main.c    ****   /* GPIO Ports Clock Enable */
ARM GAS  /tmp/ccs2VtGF.s 			page 74


4117:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  47              		.loc 1 4117 0
  48 000e 2E4B     		ldr	r3, .L3
  49 0010 9A69     		ldr	r2, [r3, #24]
  50 0012 42F00402 		orr	r2, r2, #4
  51 0016 9A61     		str	r2, [r3, #24]
  52 0018 9A69     		ldr	r2, [r3, #24]
  53 001a 02F00402 		and	r2, r2, #4
  54 001e 0092     		str	r2, [sp]
  55 0020 009A     		ldr	r2, [sp]
  56              	.LBE2:
  57              	.LBB3:
4118:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  58              		.loc 1 4118 0
  59 0022 9A69     		ldr	r2, [r3, #24]
  60 0024 42F00802 		orr	r2, r2, #8
  61 0028 9A61     		str	r2, [r3, #24]
  62 002a 9A69     		ldr	r2, [r3, #24]
  63 002c 02F00802 		and	r2, r2, #8
  64 0030 0192     		str	r2, [sp, #4]
  65 0032 019A     		ldr	r2, [sp, #4]
  66              	.LBE3:
  67              	.LBB4:
4119:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  68              		.loc 1 4119 0
  69 0034 9A69     		ldr	r2, [r3, #24]
  70 0036 42F01002 		orr	r2, r2, #16
  71 003a 9A61     		str	r2, [r3, #24]
  72 003c 9A69     		ldr	r2, [r3, #24]
  73 003e 02F01002 		and	r2, r2, #16
  74 0042 0292     		str	r2, [sp, #8]
  75 0044 029A     		ldr	r2, [sp, #8]
  76              	.LBE4:
  77              	.LBB5:
4120:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  78              		.loc 1 4120 0
  79 0046 9A69     		ldr	r2, [r3, #24]
  80 0048 42F02002 		orr	r2, r2, #32
  81 004c 9A61     		str	r2, [r3, #24]
  82 004e 9B69     		ldr	r3, [r3, #24]
  83 0050 03F02003 		and	r3, r3, #32
  84 0054 0393     		str	r3, [sp, #12]
  85 0056 039B     		ldr	r3, [sp, #12]
  86              	.LBE5:
4121:Src/main.c    **** 
4122:Src/main.c    ****   /*Configure GPIO pin Output Level */
4123:Src/main.c    **** HAL_GPIO_WritePin(GPIOA, /*TX_RST_Pin|TP2824_RST_Pin|*/VS_RST_Pin, GPIO_PIN_SET);
  87              		.loc 1 4123 0
  88 0058 1C4F     		ldr	r7, .L3+4
  89 005a 0122     		movs	r2, #1
  90 005c 4FF48051 		mov	r1, #4096
  91 0060 3846     		mov	r0, r7
  92 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL0:
4124:Src/main.c    **** 
4125:Src/main.c    ****   /*Configure GPIO pins : TX_RST_Pin TP2824_RST_Pin VS_RST_Pin */
4126:Src/main.c    ****   GPIO_InitStruct.Pin = VIDEO_LOSS;
ARM GAS  /tmp/ccs2VtGF.s 			page 75


  94              		.loc 1 4126 0
  95 0066 2023     		movs	r3, #32
  96 0068 0493     		str	r3, [sp, #16]
4127:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  97              		.loc 1 4127 0
  98 006a 0124     		movs	r4, #1
  99 006c 0594     		str	r4, [sp, #20]
4128:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 100              		.loc 1 4128 0
 101 006e 0694     		str	r4, [sp, #24]
4129:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 102              		.loc 1 4129 0
 103 0070 0226     		movs	r6, #2
 104 0072 0796     		str	r6, [sp, #28]
4130:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 105              		.loc 1 4130 0
 106 0074 04A9     		add	r1, sp, #16
 107 0076 3846     		mov	r0, r7
 108 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 109              	.LVL1:
4131:Src/main.c    **** 
4132:Src/main.c    ****   GPIO_InitStruct.Pin = HDMI_SELECT;
 110              		.loc 1 4132 0
 111 007c 1023     		movs	r3, #16
 112 007e 0493     		str	r3, [sp, #16]
4133:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 113              		.loc 1 4133 0
 114 0080 0595     		str	r5, [sp, #20]
4134:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 115              		.loc 1 4134 0
 116 0082 0694     		str	r4, [sp, #24]
4135:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 117              		.loc 1 4135 0
 118 0084 0DEB0301 		add	r1, sp, r3
 119 0088 3846     		mov	r0, r7
 120 008a FFF7FEFF 		bl	HAL_GPIO_Init
 121              	.LVL2:
4136:Src/main.c    **** 
4137:Src/main.c    **** 
4138:Src/main.c    ****   /*Configure GPIO pin : IR_IN_Pin */
4139:Src/main.c    **** /*
4140:Src/main.c    ****   GPIO_InitStruct.Pin = IR_IN_Pin;
4141:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
4142:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
4143:Src/main.c    ****   HAL_GPIO_Init(IR_IN_GPIO_Port, &GPIO_InitStruct);
4144:Src/main.c    **** */
4145:Src/main.c    ****   /*Configure GPIO pin : RX1_Pin */
4146:Src/main.c    ****   /*
4147:Src/main.c    ****   GPIO_InitStruct.Pin = RX1_Pin;
4148:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
4149:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
4150:Src/main.c    ****   HAL_GPIO_Init(RX1_GPIO_Port, &GPIO_InitStruct);
4151:Src/main.c    **** */
4152:Src/main.c    **** #if 0
4153:Src/main.c    ****    GPIO_InitStruct.Pin =DOWN_KEY_Pin|UP_KEY_Pin|MENU_KEY_Pin|POWER_KEY_Pin/*|TOUCH_INT*/;
4154:Src/main.c    ****   // GPIO_InitStruct.Pin =MENU_KEY_Pin|POWER_KEY_Pin;
4155:Src/main.c    ****    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
ARM GAS  /tmp/ccs2VtGF.s 			page 76


4156:Src/main.c    ****    GPIO_InitStruct.Pull = GPIO_PULLUP;
4157:Src/main.c    ****    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
4158:Src/main.c    **** #endif
4159:Src/main.c    **** 
4160:Src/main.c    ****   GPIO_InitStruct.Pin =(/*PANEL_EN_Pin|*//*TOUCH_RESET|*/VS_RST_Pin|STM_SCL_Pin|STM_SDA_Pin);
 122              		.loc 1 4160 0
 123 008e 4FF4E053 		mov	r3, #7168
 124 0092 0493     		str	r3, [sp, #16]
4161:Src/main.c    **** //  GPIO_InitStruct.Pin =(PANEL_EN_Pin|TOUCH_RESET);
4162:Src/main.c    **** //  GPIO_InitStruct.Pin =(PANEL_EN_Pin|BL_PWM_Pin);
4163:Src/main.c    ****    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;//GPIO_MODE_OUTPUT_PP;///GPIO_MODE_OUTPUT_OD;
 125              		.loc 1 4163 0
 126 0094 0594     		str	r4, [sp, #20]
4164:Src/main.c    ****    GPIO_InitStruct.Pull =GPIO_PULLUP;// GPIO_PULLUP;
 127              		.loc 1 4164 0
 128 0096 0694     		str	r4, [sp, #24]
4165:Src/main.c    ****    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 129              		.loc 1 4165 0
 130 0098 0796     		str	r6, [sp, #28]
4166:Src/main.c    ****    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 131              		.loc 1 4166 0
 132 009a 04A9     		add	r1, sp, #16
 133 009c 0C48     		ldr	r0, .L3+8
 134 009e FFF7FEFF 		bl	HAL_GPIO_Init
 135              	.LVL3:
4167:Src/main.c    ****   /*Configure GPIO pins : SW1_Pin SW2_Pin SW3_Pin SW4_Pin 
4168:Src/main.c    ****                            SW5_Pin SW6_Pin SW7_Pin */
4169:Src/main.c    **** //  GPIO_InitStruct.Pin = SW1_Pin|SW2_Pin|SW3_Pin|SW4_Pin 
4170:Src/main.c    ****    //                      |SW5_Pin|SW6_Pin|SW7_Pin|DOWN_KEY_Pin|UP_KEY_Pin|MENU_KEY_Pin|POWER_KEY_
4171:Src/main.c    ****   /*
4172:Src/main.c    **** 
4173:Src/main.c    ****   GPIO_InitStruct.Pin =DOWN_KEY_Pin|UP_KEY_Pin|MENU_KEY_Pin|POWER_KEY_Pin|TOUCH_INT;
4174:Src/main.c    ****  // GPIO_InitStruct.Pin =MENU_KEY_Pin|POWER_KEY_Pin;
4175:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
4176:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
4177:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
4178:Src/main.c    **** */
4179:Src/main.c    **** /*
4180:Src/main.c    ****   GPIO_InitStruct.Pin =DOWN_KEY_Pin|UP_KEY_Pin;
4181:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
4182:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
4183:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
4184:Src/main.c    **** */
4185:Src/main.c    ****   GPIO_InitStruct.Pin =TP2824_REST/*LCD_PWR_Pin|TTLI1_RES_Pin|AUD_SEL2_Pin|GREEN_LED_Pin |RED_LED_P
 136              		.loc 1 4185 0
 137 00a2 0496     		str	r6, [sp, #16]
4186:Src/main.c    **** //  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
4187:Src/main.c    **** //   GPIO_InitStruct.Pull = GPIO_PULLUP;
4188:Src/main.c    ****    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 138              		.loc 1 4188 0
 139 00a4 0594     		str	r4, [sp, #20]
4189:Src/main.c    ****    GPIO_InitStruct.Pull = GPIO_PULLUP;
 140              		.loc 1 4189 0
 141 00a6 0694     		str	r4, [sp, #24]
4190:Src/main.c    **** 
4191:Src/main.c    ****    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 142              		.loc 1 4191 0
ARM GAS  /tmp/ccs2VtGF.s 			page 77


 143 00a8 0796     		str	r6, [sp, #28]
4192:Src/main.c    ****    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 144              		.loc 1 4192 0
 145 00aa 0A4E     		ldr	r6, .L3+12
 146 00ac 04A9     		add	r1, sp, #16
 147 00ae 3046     		mov	r0, r6
 148 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 149              	.LVL4:
4193:Src/main.c    **** 
4194:Src/main.c    **** 
4195:Src/main.c    **** //  GPIO_InitStruct.Pin =GREEN_LED_Pin|RED_LED_Pin;
4196:Src/main.c    ****   // GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
4197:Src/main.c    ****    //GPIO_InitStruct.Pull = GPIO_NOPULL;
4198:Src/main.c    ****    //GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
4199:Src/main.c    ****    //HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
4200:Src/main.c    **** 
4201:Src/main.c    ****   GPIO_InitStruct.Pin = TP2824_IRQ|MCU_WAKEUP|AUD_I2C_MUTE_Pin/*| JUMP_KEY_Pin*/;
 150              		.loc 1 4201 0
 151 00b4 4923     		movs	r3, #73
 152 00b6 0493     		str	r3, [sp, #16]
4202:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 153              		.loc 1 4202 0
 154 00b8 0595     		str	r5, [sp, #20]
4203:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 155              		.loc 1 4203 0
 156 00ba 0694     		str	r4, [sp, #24]
4204:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 157              		.loc 1 4204 0
 158 00bc 04A9     		add	r1, sp, #16
 159 00be 3046     		mov	r0, r6
 160 00c0 FFF7FEFF 		bl	HAL_GPIO_Init
 161              	.LVL5:
4205:Src/main.c    **** 
4206:Src/main.c    **** /*
4207:Src/main.c    ****   GPIO_InitStruct.Pin =AUD_SEL1_Pin;
4208:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
4209:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
4210:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
4211:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
4212:Src/main.c    ****   */
4213:Src/main.c    **** 
4214:Src/main.c    **** 
4215:Src/main.c    **** 	
4216:Src/main.c    **** 
4217:Src/main.c    ****   /* EXTI interrupt init*/
4218:Src/main.c    **** /*
4219:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI2_IRQn, 0, 0);
4220:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI2_IRQn);
4221:Src/main.c    **** */
4222:Src/main.c    **** }
 162              		.loc 1 4222 0
 163 00c4 09B0     		add	sp, sp, #36
 164              	.LCFI2:
 165              		.cfi_def_cfa_offset 20
 166              		@ sp needed
 167 00c6 F0BD     		pop	{r4, r5, r6, r7, pc}
 168              	.L4:
ARM GAS  /tmp/ccs2VtGF.s 			page 78


 169              		.align	2
 170              	.L3:
 171 00c8 00100240 		.word	1073876992
 172 00cc 00080140 		.word	1073809408
 173 00d0 000C0140 		.word	1073810432
 174 00d4 00100140 		.word	1073811456
 175              		.cfi_endproc
 176              	.LFE99:
 178              		.section	.text.MX_TIM3_Init,"ax",%progbits
 179              		.align	1
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu softvfp
 185              	MX_TIM3_Init:
 186              	.LFB96:
4001:Src/main.c    **** 
 187              		.loc 1 4001 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 24
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191 0000 30B5     		push	{r4, r5, lr}
 192              	.LCFI3:
 193              		.cfi_def_cfa_offset 12
 194              		.cfi_offset 4, -12
 195              		.cfi_offset 5, -8
 196              		.cfi_offset 14, -4
 197 0002 87B0     		sub	sp, sp, #28
 198              	.LCFI4:
 199              		.cfi_def_cfa_offset 40
4007:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 200              		.loc 1 4007 0
 201 0004 0024     		movs	r4, #0
 202 0006 0294     		str	r4, [sp, #8]
 203 0008 0394     		str	r4, [sp, #12]
 204 000a 0494     		str	r4, [sp, #16]
 205 000c 0594     		str	r4, [sp, #20]
4008:Src/main.c    **** 
 206              		.loc 1 4008 0
 207 000e 0094     		str	r4, [sp]
 208 0010 0194     		str	r4, [sp, #4]
4013:Src/main.c    ****   htim3.Init.Prescaler = 35;
 209              		.loc 1 4013 0
 210 0012 0E4D     		ldr	r5, .L7
 211 0014 0E4B     		ldr	r3, .L7+4
 212 0016 2B60     		str	r3, [r5]
4014:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 213              		.loc 1 4014 0
 214 0018 2323     		movs	r3, #35
 215 001a 6B60     		str	r3, [r5, #4]
4015:Src/main.c    ****   htim3.Init.Period = 9;
 216              		.loc 1 4015 0
 217 001c AC60     		str	r4, [r5, #8]
4016:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 218              		.loc 1 4016 0
 219 001e 0923     		movs	r3, #9
 220 0020 EB60     		str	r3, [r5, #12]
ARM GAS  /tmp/ccs2VtGF.s 			page 79


4017:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 221              		.loc 1 4017 0
 222 0022 2C61     		str	r4, [r5, #16]
4018:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 223              		.loc 1 4018 0
 224 0024 8023     		movs	r3, #128
 225 0026 AB61     		str	r3, [r5, #24]
4019:Src/main.c    ****   {
 226              		.loc 1 4019 0
 227 0028 2846     		mov	r0, r5
 228 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 229              	.LVL6:
4023:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 230              		.loc 1 4023 0
 231 002e 4FF48053 		mov	r3, #4096
 232 0032 0293     		str	r3, [sp, #8]
4024:Src/main.c    ****   {
 233              		.loc 1 4024 0
 234 0034 02A9     		add	r1, sp, #8
 235 0036 2846     		mov	r0, r5
 236 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 237              	.LVL7:
4028:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 238              		.loc 1 4028 0
 239 003c 0094     		str	r4, [sp]
4029:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 240              		.loc 1 4029 0
 241 003e 0194     		str	r4, [sp, #4]
4030:Src/main.c    ****   {
 242              		.loc 1 4030 0
 243 0040 6946     		mov	r1, sp
 244 0042 2846     		mov	r0, r5
 245 0044 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 246              	.LVL8:
4038:Src/main.c    **** 
 247              		.loc 1 4038 0
 248 0048 07B0     		add	sp, sp, #28
 249              	.LCFI5:
 250              		.cfi_def_cfa_offset 12
 251              		@ sp needed
 252 004a 30BD     		pop	{r4, r5, pc}
 253              	.L8:
 254              		.align	2
 255              	.L7:
 256 004c 00000000 		.word	htim3
 257 0050 00040040 		.word	1073742848
 258              		.cfi_endproc
 259              	.LFE96:
 261              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 262              		.align	1
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 266              		.fpu softvfp
 268              	MX_USART1_UART_Init:
 269              	.LFB97:
4046:Src/main.c    **** 
ARM GAS  /tmp/ccs2VtGF.s 			page 80


 270              		.loc 1 4046 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274 0000 08B5     		push	{r3, lr}
 275              	.LCFI6:
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 3, -8
 278              		.cfi_offset 14, -4
4055:Src/main.c    **** //  huart1.Init.BaudRate = 9600;
 279              		.loc 1 4055 0
 280 0002 0848     		ldr	r0, .L11
 281 0004 084B     		ldr	r3, .L11+4
 282 0006 0360     		str	r3, [r0]
4057:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 283              		.loc 1 4057 0
 284 0008 4FF4E133 		mov	r3, #115200
 285 000c 4360     		str	r3, [r0, #4]
4058:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 286              		.loc 1 4058 0
 287 000e 0023     		movs	r3, #0
 288 0010 8360     		str	r3, [r0, #8]
4059:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 289              		.loc 1 4059 0
 290 0012 C360     		str	r3, [r0, #12]
4060:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 291              		.loc 1 4060 0
 292 0014 0361     		str	r3, [r0, #16]
4061:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 293              		.loc 1 4061 0
 294 0016 0C22     		movs	r2, #12
 295 0018 4261     		str	r2, [r0, #20]
4062:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 296              		.loc 1 4062 0
 297 001a 8361     		str	r3, [r0, #24]
4063:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 298              		.loc 1 4063 0
 299 001c C361     		str	r3, [r0, #28]
4064:Src/main.c    ****   {
 300              		.loc 1 4064 0
 301 001e FFF7FEFF 		bl	HAL_UART_Init
 302              	.LVL9:
4072:Src/main.c    **** 
 303              		.loc 1 4072 0
 304 0022 08BD     		pop	{r3, pc}
 305              	.L12:
 306              		.align	2
 307              	.L11:
 308 0024 00000000 		.word	huart1
 309 0028 00380140 		.word	1073821696
 310              		.cfi_endproc
 311              	.LFE97:
 313              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 314              		.align	1
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
ARM GAS  /tmp/ccs2VtGF.s 			page 81


 318              		.fpu softvfp
 320              	MX_USART2_UART_Init:
 321              	.LFB98:
4080:Src/main.c    **** 
 322              		.loc 1 4080 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326 0000 08B5     		push	{r3, lr}
 327              	.LCFI7:
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 3, -8
 330              		.cfi_offset 14, -4
4089:Src/main.c    ****   huart2.Init.BaudRate = 38400;
 331              		.loc 1 4089 0
 332 0002 0848     		ldr	r0, .L15
 333 0004 084B     		ldr	r3, .L15+4
 334 0006 0360     		str	r3, [r0]
4090:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 335              		.loc 1 4090 0
 336 0008 4FF41643 		mov	r3, #38400
 337 000c 4360     		str	r3, [r0, #4]
4091:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 338              		.loc 1 4091 0
 339 000e 0023     		movs	r3, #0
 340 0010 8360     		str	r3, [r0, #8]
4092:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 341              		.loc 1 4092 0
 342 0012 C360     		str	r3, [r0, #12]
4093:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 343              		.loc 1 4093 0
 344 0014 0361     		str	r3, [r0, #16]
4094:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 345              		.loc 1 4094 0
 346 0016 0C22     		movs	r2, #12
 347 0018 4261     		str	r2, [r0, #20]
4095:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 348              		.loc 1 4095 0
 349 001a 8361     		str	r3, [r0, #24]
4096:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 350              		.loc 1 4096 0
 351 001c C361     		str	r3, [r0, #28]
4097:Src/main.c    ****   {
 352              		.loc 1 4097 0
 353 001e FFF7FEFF 		bl	HAL_UART_Init
 354              	.LVL10:
4105:Src/main.c    **** 
 355              		.loc 1 4105 0
 356 0022 08BD     		pop	{r3, pc}
 357              	.L16:
 358              		.align	2
 359              	.L15:
 360 0024 00000000 		.word	huart2
 361 0028 00440040 		.word	1073759232
 362              		.cfi_endproc
 363              	.LFE98:
 365              		.section	.text.HDMI_AudioModeDetect,"ax",%progbits
ARM GAS  /tmp/ccs2VtGF.s 			page 82


 366              		.align	1
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 370              		.fpu softvfp
 372              	HDMI_AudioModeDetect:
 373              	.LFB76:
1309:Src/main.c    ****     tByte pbAudioSampleFreq, pbValidCh ;
 374              		.loc 1 1309 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 8
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378 0000 00B5     		push	{lr}
 379              	.LCFI8:
 380              		.cfi_def_cfa_offset 4
 381              		.cfi_offset 14, -4
 382 0002 83B0     		sub	sp, sp, #12
 383              	.LCFI9:
 384              		.cfi_def_cfa_offset 16
1311:Src/main.c    **** 
 385              		.loc 1 1311 0
 386 0004 0023     		movs	r3, #0
 387 0006 8DF80730 		strb	r3, [sp, #7]
1313:Src/main.c    **** 
 388              		.loc 1 1313 0
 389 000a 0DF10601 		add	r1, sp, #6
 390 000e 0DF10700 		add	r0, sp, #7
 391 0012 FFF7FEFF 		bl	getHDMIRXAudioInfo
 392              	.LVL11:
1315:Src/main.c    ****     {
 393              		.loc 1 1315 0
 394 0016 0E4B     		ldr	r3, .L21
 395 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 396 001a 042B     		cmp	r3, #4
 397 001c 03D0     		beq	.L18
1317:Src/main.c    ****         {
 398              		.loc 1 1317 0
 399 001e 0D4A     		ldr	r2, .L21+4
 400 0020 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 401 0022 9342     		cmp	r3, r2
 402 0024 08D0     		beq	.L20
 403              	.L18:
1326:Src/main.c    **** }
 404              		.loc 1 1326 0
 405 0026 0B4B     		ldr	r3, .L21+4
 406 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 407 002a 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 408 002e 0A4A     		ldr	r2, .L21+8
 409 0030 D154     		strb	r1, [r2, r3]
1327:Src/main.c    **** 
 410              		.loc 1 1327 0
 411 0032 03B0     		add	sp, sp, #12
 412              	.LCFI10:
 413              		.cfi_remember_state
 414              		.cfi_def_cfa_offset 4
 415              		@ sp needed
 416 0034 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  /tmp/ccs2VtGF.s 			page 83


 417              	.L20:
 418              	.LCFI11:
 419              		.cfi_restore_state
1319:Src/main.c    ****             {
 420              		.loc 1 1319 0
 421 0038 084B     		ldr	r3, .L21+12
 422 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 423 003c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 424 0040 8342     		cmp	r3, r0
 425 0042 F0D0     		beq	.L18
1321:Src/main.c    ****                 HDMI_Tx_SetAudioFs(gPreAudioSampleFreq )  ;
 426              		.loc 1 1321 0
 427 0044 054B     		ldr	r3, .L21+12
 428 0046 1870     		strb	r0, [r3]
1322:Src/main.c    ****             }
 429              		.loc 1 1322 0
 430 0048 FFF7FEFF 		bl	HDMI_Tx_SetAudioFs
 431              	.LVL12:
 432 004c EBE7     		b	.L18
 433              	.L22:
 434 004e 00BF     		.align	2
 435              	.L21:
 436 0050 00000000 		.word	.LANCHOR0
 437 0054 00000000 		.word	gHDMI_Index
 438 0058 00000000 		.word	.LANCHOR1
 439 005c 00000000 		.word	gPreAudioSampleFreq
 440              		.cfi_endproc
 441              	.LFE76:
 443              		.section	.text._write,"ax",%progbits
 444              		.align	1
 445              		.global	_write
 446              		.syntax unified
 447              		.thumb
 448              		.thumb_func
 449              		.fpu softvfp
 451              	_write:
 452              	.LFB68:
 256:Src/main.c    ****     if ((file != STDOUT_FILENO) && (file != STDERR_FILENO))
 453              		.loc 1 256 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457              	.LVL13:
 458 0000 10B5     		push	{r4, lr}
 459              	.LCFI12:
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 4, -8
 462              		.cfi_offset 14, -4
 257:Src/main.c    ****     {
 463              		.loc 1 257 0
 464 0002 0138     		subs	r0, r0, #1
 465              	.LVL14:
 466 0004 0128     		cmp	r0, #1
 467 0006 09D8     		bhi	.L28
 468 0008 1446     		mov	r4, r2
 263:Src/main.c    ****         HAL_UART_Transmit(&huart1, (uint8_t*)data, (uint16_t)len, 1000);
 469              		.loc 1 263 0
ARM GAS  /tmp/ccs2VtGF.s 			page 84


 470 000a 4FF47A73 		mov	r3, #1000
 471 000e 92B2     		uxth	r2, r2
 472              	.LVL15:
 473 0010 0748     		ldr	r0, .L30
 474              	.LVL16:
 475 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 476              	.LVL17:
 266:Src/main.c    **** }
 477              		.loc 1 266 0
 478 0016 40B1     		cbz	r0, .L29
 479 0018 0020     		movs	r0, #0
 480              	.LVL18:
 481              	.L23:
 267:Src/main.c    **** #else
 482              		.loc 1 267 0
 483 001a 10BD     		pop	{r4, pc}
 484              	.LVL19:
 485              	.L28:
 259:Src/main.c    ****         return -1;
 486              		.loc 1 259 0
 487 001c FFF7FEFF 		bl	__errno
 488              	.LVL20:
 489 0020 0923     		movs	r3, #9
 490 0022 0360     		str	r3, [r0]
 260:Src/main.c    ****     }
 491              		.loc 1 260 0
 492 0024 4FF0FF30 		mov	r0, #-1
 493 0028 F7E7     		b	.L23
 494              	.LVL21:
 495              	.L29:
 266:Src/main.c    **** }
 496              		.loc 1 266 0
 497 002a 2046     		mov	r0, r4
 498              	.LVL22:
 499 002c F5E7     		b	.L23
 500              	.L31:
 501 002e 00BF     		.align	2
 502              	.L30:
 503 0030 00000000 		.word	huart1
 504              		.cfi_endproc
 505              	.LFE68:
 507              		.section	.text.Audio_Sel,"ax",%progbits
 508              		.align	1
 509              		.global	Audio_Sel
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 513              		.fpu softvfp
 515              	Audio_Sel:
 516              	.LFB69:
 279:Src/main.c    ****     gbAUDO_INDEX = mode ;
 517              		.loc 1 279 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521              	.LVL23:
 522 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccs2VtGF.s 			page 85


 523              	.LCFI13:
 524              		.cfi_def_cfa_offset 16
 525              		.cfi_offset 3, -16
 526              		.cfi_offset 4, -12
 527              		.cfi_offset 5, -8
 528              		.cfi_offset 14, -4
 280:Src/main.c    ****     switch(mode)
 529              		.loc 1 280 0
 530 0002 5B4B     		ldr	r3, .L41
 531 0004 1870     		strb	r0, [r3]
 281:Src/main.c    ****     {
 532              		.loc 1 281 0
 533 0006 0428     		cmp	r0, #4
 534 0008 20D8     		bhi	.L32
 535 000a DFE800F0 		tbb	[pc, r0]
 536              	.L35:
 537 000e 20       		.byte	(.L34-.L35)/2
 538 000f 44       		.byte	(.L36-.L35)/2
 539 0010 68       		.byte	(.L37-.L35)/2
 540 0011 8C       		.byte	(.L38-.L35)/2
 541 0012 03       		.byte	(.L39-.L35)/2
 542 0013 00       		.p2align 1
 543              	.L39:
 291:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 544              		.loc 1 291 0
 545 0014 574D     		ldr	r5, .L41+4
 546 0016 0122     		movs	r2, #1
 547 0018 4021     		movs	r1, #64
 548 001a 2846     		mov	r0, r5
 549              	.LVL24:
 550 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 551              	.LVL25:
 292:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 552              		.loc 1 292 0
 553 0020 554C     		ldr	r4, .L41+8
 554 0022 0122     		movs	r2, #1
 555 0024 2021     		movs	r1, #32
 556 0026 2046     		mov	r0, r4
 557 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 558              	.LVL26:
 293:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 559              		.loc 1 293 0
 560 002c 0122     		movs	r2, #1
 561 002e 1021     		movs	r1, #16
 562 0030 2046     		mov	r0, r4
 563 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 564              	.LVL27:
 294:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 565              		.loc 1 294 0
 566 0036 0122     		movs	r2, #1
 567 0038 0821     		movs	r1, #8
 568 003a 2046     		mov	r0, r4
 569 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 570              	.LVL28:
 295:Src/main.c    ****         break ;
 571              		.loc 1 295 0
 572 0040 0122     		movs	r2, #1
ARM GAS  /tmp/ccs2VtGF.s 			page 86


 573 0042 4FF40041 		mov	r1, #32768
 574 0046 2846     		mov	r0, r5
 575 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 576              	.LVL29:
 577              	.L32:
 372:Src/main.c    **** 
 578              		.loc 1 372 0
 579 004c 38BD     		pop	{r3, r4, r5, pc}
 580              	.LVL30:
 581              	.L34:
 307:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_RESET);
 582              		.loc 1 307 0
 583 004e 494D     		ldr	r5, .L41+4
 584 0050 0122     		movs	r2, #1
 585 0052 4021     		movs	r1, #64
 586 0054 2846     		mov	r0, r5
 587              	.LVL31:
 588 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 589              	.LVL32:
 308:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 590              		.loc 1 308 0
 591 005a 474C     		ldr	r4, .L41+8
 592 005c 0022     		movs	r2, #0
 593 005e 2021     		movs	r1, #32
 594 0060 2046     		mov	r0, r4
 595 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 596              	.LVL33:
 309:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 597              		.loc 1 309 0
 598 0066 0122     		movs	r2, #1
 599 0068 1021     		movs	r1, #16
 600 006a 2046     		mov	r0, r4
 601 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 602              	.LVL34:
 310:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 603              		.loc 1 310 0
 604 0070 0122     		movs	r2, #1
 605 0072 0821     		movs	r1, #8
 606 0074 2046     		mov	r0, r4
 607 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 608              	.LVL35:
 311:Src/main.c    **** 
 609              		.loc 1 311 0
 610 007a 0122     		movs	r2, #1
 611 007c 4FF40041 		mov	r1, #32768
 612 0080 2846     		mov	r0, r5
 613 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 614              	.LVL36:
 313:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[0] ;
 615              		.loc 1 313 0
 616 0086 3D4C     		ldr	r4, .L41+12
 617 0088 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 618 008a FFF7FEFF 		bl	HDMI_Tx_SetAudioFs
 619              	.LVL37:
 314:Src/main.c    ****         break ;
 620              		.loc 1 314 0
 621 008e 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
ARM GAS  /tmp/ccs2VtGF.s 			page 87


 622 0090 3B4B     		ldr	r3, .L41+16
 623 0092 1A70     		strb	r2, [r3]
 315:Src/main.c    **** 
 624              		.loc 1 315 0
 625 0094 DAE7     		b	.L32
 626              	.LVL38:
 627              	.L36:
 326:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 628              		.loc 1 326 0
 629 0096 374D     		ldr	r5, .L41+4
 630 0098 0122     		movs	r2, #1
 631 009a 4021     		movs	r1, #64
 632 009c 2846     		mov	r0, r5
 633              	.LVL39:
 634 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 635              	.LVL40:
 327:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_RESET);
 636              		.loc 1 327 0
 637 00a2 354C     		ldr	r4, .L41+8
 638 00a4 0122     		movs	r2, #1
 639 00a6 2021     		movs	r1, #32
 640 00a8 2046     		mov	r0, r4
 641 00aa FFF7FEFF 		bl	HAL_GPIO_WritePin
 642              	.LVL41:
 328:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 643              		.loc 1 328 0
 644 00ae 0022     		movs	r2, #0
 645 00b0 1021     		movs	r1, #16
 646 00b2 2046     		mov	r0, r4
 647 00b4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 648              	.LVL42:
 329:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 649              		.loc 1 329 0
 650 00b8 0122     		movs	r2, #1
 651 00ba 0821     		movs	r1, #8
 652 00bc 2046     		mov	r0, r4
 653 00be FFF7FEFF 		bl	HAL_GPIO_WritePin
 654              	.LVL43:
 330:Src/main.c    **** 
 655              		.loc 1 330 0
 656 00c2 0122     		movs	r2, #1
 657 00c4 4FF40041 		mov	r1, #32768
 658 00c8 2846     		mov	r0, r5
 659 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
 660              	.LVL44:
 332:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[1] ;
 661              		.loc 1 332 0
 662 00ce 2B4C     		ldr	r4, .L41+12
 663 00d0 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 664 00d2 FFF7FEFF 		bl	HDMI_Tx_SetAudioFs
 665              	.LVL45:
 333:Src/main.c    ****         break ;
 666              		.loc 1 333 0
 667 00d6 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 668 00d8 294B     		ldr	r3, .L41+16
 669 00da 1A70     		strb	r2, [r3]
 334:Src/main.c    **** 
ARM GAS  /tmp/ccs2VtGF.s 			page 88


 670              		.loc 1 334 0
 671 00dc B6E7     		b	.L32
 672              	.LVL46:
 673              	.L37:
 344:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 674              		.loc 1 344 0
 675 00de 254D     		ldr	r5, .L41+4
 676 00e0 0022     		movs	r2, #0
 677 00e2 4021     		movs	r1, #64
 678 00e4 2846     		mov	r0, r5
 679              	.LVL47:
 680 00e6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 681              	.LVL48:
 345:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 682              		.loc 1 345 0
 683 00ea 234C     		ldr	r4, .L41+8
 684 00ec 0122     		movs	r2, #1
 685 00ee 2021     		movs	r1, #32
 686 00f0 2046     		mov	r0, r4
 687 00f2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 688              	.LVL49:
 346:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_RESET);
 689              		.loc 1 346 0
 690 00f6 0122     		movs	r2, #1
 691 00f8 1021     		movs	r1, #16
 692 00fa 2046     		mov	r0, r4
 693 00fc FFF7FEFF 		bl	HAL_GPIO_WritePin
 694              	.LVL50:
 347:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 695              		.loc 1 347 0
 696 0100 0022     		movs	r2, #0
 697 0102 0821     		movs	r1, #8
 698 0104 2046     		mov	r0, r4
 699 0106 FFF7FEFF 		bl	HAL_GPIO_WritePin
 700              	.LVL51:
 348:Src/main.c    **** 
 701              		.loc 1 348 0
 702 010a 0122     		movs	r2, #1
 703 010c 4FF40041 		mov	r1, #32768
 704 0110 2846     		mov	r0, r5
 705 0112 FFF7FEFF 		bl	HAL_GPIO_WritePin
 706              	.LVL52:
 350:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[2] ;
 707              		.loc 1 350 0
 708 0116 194C     		ldr	r4, .L41+12
 709 0118 A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 710 011a FFF7FEFF 		bl	HDMI_Tx_SetAudioFs
 711              	.LVL53:
 351:Src/main.c    ****         break ;
 712              		.loc 1 351 0
 713 011e A278     		ldrb	r2, [r4, #2]	@ zero_extendqisi2
 714 0120 174B     		ldr	r3, .L41+16
 715 0122 1A70     		strb	r2, [r3]
 352:Src/main.c    **** 
 716              		.loc 1 352 0
 717 0124 92E7     		b	.L32
 718              	.LVL54:
ARM GAS  /tmp/ccs2VtGF.s 			page 89


 719              	.L38:
 362:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 720              		.loc 1 362 0
 721 0126 134D     		ldr	r5, .L41+4
 722 0128 0022     		movs	r2, #0
 723 012a 4021     		movs	r1, #64
 724 012c 2846     		mov	r0, r5
 725              	.LVL55:
 726 012e FFF7FEFF 		bl	HAL_GPIO_WritePin
 727              	.LVL56:
 363:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 728              		.loc 1 363 0
 729 0132 114C     		ldr	r4, .L41+8
 730 0134 0122     		movs	r2, #1
 731 0136 2021     		movs	r1, #32
 732 0138 2046     		mov	r0, r4
 733 013a FFF7FEFF 		bl	HAL_GPIO_WritePin
 734              	.LVL57:
 364:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 735              		.loc 1 364 0
 736 013e 0122     		movs	r2, #1
 737 0140 1021     		movs	r1, #16
 738 0142 2046     		mov	r0, r4
 739 0144 FFF7FEFF 		bl	HAL_GPIO_WritePin
 740              	.LVL58:
 365:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_RESET);
 741              		.loc 1 365 0
 742 0148 0122     		movs	r2, #1
 743 014a 0821     		movs	r1, #8
 744 014c 2046     		mov	r0, r4
 745 014e FFF7FEFF 		bl	HAL_GPIO_WritePin
 746              	.LVL59:
 366:Src/main.c    **** 
 747              		.loc 1 366 0
 748 0152 0022     		movs	r2, #0
 749 0154 4FF40041 		mov	r1, #32768
 750 0158 2846     		mov	r0, r5
 751 015a FFF7FEFF 		bl	HAL_GPIO_WritePin
 752              	.LVL60:
 368:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[3] ;
 753              		.loc 1 368 0
 754 015e 074C     		ldr	r4, .L41+12
 755 0160 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 756 0162 FFF7FEFF 		bl	HDMI_Tx_SetAudioFs
 757              	.LVL61:
 369:Src/main.c    ****         break ;
 758              		.loc 1 369 0
 759 0166 E278     		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 760 0168 054B     		ldr	r3, .L41+16
 761 016a 1A70     		strb	r2, [r3]
 372:Src/main.c    **** 
 762              		.loc 1 372 0
 763 016c 6EE7     		b	.L32
 764              	.L42:
 765 016e 00BF     		.align	2
 766              	.L41:
 767 0170 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccs2VtGF.s 			page 90


 768 0174 00080140 		.word	1073809408
 769 0178 000C0140 		.word	1073810432
 770 017c 00000000 		.word	.LANCHOR1
 771 0180 00000000 		.word	gPreAudioSampleFreq
 772              		.cfi_endproc
 773              	.LFE69:
 775              		.section	.text.SET_Audio_Mute,"ax",%progbits
 776              		.align	1
 777              		.global	SET_Audio_Mute
 778              		.syntax unified
 779              		.thumb
 780              		.thumb_func
 781              		.fpu softvfp
 783              	SET_Audio_Mute:
 784              	.LFB70:
 375:Src/main.c    **** 
 785              		.loc 1 375 0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 0, uses_anonymous_args = 0
 789              	.LVL62:
 790 0000 10B5     		push	{r4, lr}
 791              	.LCFI14:
 792              		.cfi_def_cfa_offset 8
 793              		.cfi_offset 4, -8
 794              		.cfi_offset 14, -4
 795 0002 0446     		mov	r4, r0
 377:Src/main.c    **** 	HAL_GPIO_WritePin(AUD_I2C_MUTE_Port,AUD_I2C_MUTE_Pin, GPIO_PIN_RESET);
 796              		.loc 1 377 0
 797 0004 0128     		cmp	r0, #1
 798 0006 09D0     		beq	.L47
 380:Src/main.c    **** 
 799              		.loc 1 380 0
 800 0008 0122     		movs	r2, #1
 801 000a 0821     		movs	r1, #8
 802 000c 0648     		ldr	r0, .L48
 803              	.LVL63:
 804 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 805              	.LVL64:
 806              	.L45:
 382:Src/main.c    **** 
 807              		.loc 1 382 0
 808 0012 2146     		mov	r1, r4
 809 0014 0548     		ldr	r0, .L48+4
 810 0016 FFF7FEFF 		bl	Printf
 811              	.LVL65:
 384:Src/main.c    **** 
 812              		.loc 1 384 0
 813 001a 10BD     		pop	{r4, pc}
 814              	.LVL66:
 815              	.L47:
 378:Src/main.c    **** else
 816              		.loc 1 378 0
 817 001c 0022     		movs	r2, #0
 818 001e 0821     		movs	r1, #8
 819 0020 0148     		ldr	r0, .L48
 820              	.LVL67:
ARM GAS  /tmp/ccs2VtGF.s 			page 91


 821 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 822              	.LVL68:
 823 0026 F4E7     		b	.L45
 824              	.L49:
 825              		.align	2
 826              	.L48:
 827 0028 00100140 		.word	1073811456
 828 002c 00000000 		.word	.LC0
 829              		.cfi_endproc
 830              	.LFE70:
 832              		.section	.text.InitialTimerEvent,"ax",%progbits
 833              		.align	1
 834              		.global	InitialTimerEvent
 835              		.syntax unified
 836              		.thumb
 837              		.thumb_func
 838              		.fpu softvfp
 840              	InitialTimerEvent:
 841              	.LFB71:
 400:Src/main.c    **** 	MCUTimerInitialTimerEvent();  //clear all of timer event	
 842              		.loc 1 400 0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 0
 845              		@ frame_needed = 0, uses_anonymous_args = 0
 846 0000 08B5     		push	{r3, lr}
 847              	.LCFI15:
 848              		.cfi_def_cfa_offset 8
 849              		.cfi_offset 3, -8
 850              		.cfi_offset 14, -4
 401:Src/main.c    **** 
 851              		.loc 1 401 0
 852 0002 FFF7FEFF 		bl	MCUTimerInitialTimerEvent
 853              	.LVL69:
 421:Src/main.c    **** 
 854              		.loc 1 421 0
 855 0006 08BD     		pop	{r3, pc}
 856              		.cfi_endproc
 857              	.LFE71:
 859              		.section	.text.GetRS232_CMD,"ax",%progbits
 860              		.align	1
 861              		.global	GetRS232_CMD
 862              		.syntax unified
 863              		.thumb
 864              		.thumb_func
 865              		.fpu softvfp
 867              	GetRS232_CMD:
 868              	.LFB72:
 424:Src/main.c    ****     char achstr[3] ;
 869              		.loc 1 424 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 8
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 428:Src/main.c    ****     {
 873              		.loc 1 428 0
 874 0000 174B     		ldr	r3, .L60
 875 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 876 0004 012B     		cmp	r3, #1
ARM GAS  /tmp/ccs2VtGF.s 			page 92


 877 0006 00D0     		beq	.L58
 878 0008 7047     		bx	lr
 879              	.L58:
 424:Src/main.c    ****     char achstr[3] ;
 880              		.loc 1 424 0
 881 000a 10B5     		push	{r4, lr}
 882              	.LCFI16:
 883              		.cfi_def_cfa_offset 8
 884              		.cfi_offset 4, -8
 885              		.cfi_offset 14, -4
 886 000c 82B0     		sub	sp, sp, #8
 887              	.LCFI17:
 888              		.cfi_def_cfa_offset 16
 430:Src/main.c    ****         printf("RxBufIndex=%d,str=%s\r\n",RxBufIndex, gRxbuf);
 889              		.loc 1 430 0
 890 000e 144B     		ldr	r3, .L60
 891 0010 0022     		movs	r2, #0
 892 0012 1A70     		strb	r2, [r3]
 431:Src/main.c    ****         if ( RxBufIndex >= 4 )
 893              		.loc 1 431 0
 894 0014 134C     		ldr	r4, .L60+4
 895 0016 2168     		ldr	r1, [r4]
 896 0018 134A     		ldr	r2, .L60+8
 897 001a 1448     		ldr	r0, .L60+12
 898 001c FFF7FEFF 		bl	printf
 899              	.LVL70:
 432:Src/main.c    ****         {
 900              		.loc 1 432 0
 901 0020 2368     		ldr	r3, [r4]
 902 0022 032B     		cmp	r3, #3
 903 0024 03DD     		ble	.L52
 434:Src/main.c    ****             {
 904              		.loc 1 434 0
 905 0026 104B     		ldr	r3, .L60+8
 906 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 907 002a 472B     		cmp	r3, #71
 908 002c 01D0     		beq	.L59
 909              	.L52:
 446:Src/main.c    **** 
 910              		.loc 1 446 0
 911 002e 02B0     		add	sp, sp, #8
 912              	.LCFI18:
 913              		.cfi_remember_state
 914              		.cfi_def_cfa_offset 8
 915              		@ sp needed
 916 0030 10BD     		pop	{r4, pc}
 917              	.L59:
 918              	.LCFI19:
 919              		.cfi_restore_state
 434:Src/main.c    ****             {
 920              		.loc 1 434 0 discriminator 1
 921 0032 0D4B     		ldr	r3, .L60+8
 922 0034 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 923 0036 672B     		cmp	r3, #103
 924 0038 F9D1     		bne	.L52
 436:Src/main.c    ****                 memcpy(&achstr[0], &gRxbuf[1], 2 ) ;
 925              		.loc 1 436 0
ARM GAS  /tmp/ccs2VtGF.s 			page 93


 926 003a 0023     		movs	r3, #0
 927 003c 8DF80630 		strb	r3, [sp, #6]
 437:Src/main.c    ****                 IrNum = strtol(achstr, &endptr, 16) ;
 928              		.loc 1 437 0
 929 0040 094B     		ldr	r3, .L60+8
 930 0042 B3F80130 		ldrh	r3, [r3, #1]	@ unaligned
 931 0046 ADF80430 		strh	r3, [sp, #4]	@ movhi
 438:Src/main.c    ****                 printf("IrNum=0x%02x\r\n",(int)IrNum);
 932              		.loc 1 438 0
 933 004a 1022     		movs	r2, #16
 934 004c 6946     		mov	r1, sp
 935 004e 01A8     		add	r0, sp, #4
 936 0050 FFF7FEFF 		bl	strtol
 937              	.LVL71:
 439:Src/main.c    ****             }
 938              		.loc 1 439 0
 939 0054 0146     		mov	r1, r0
 940 0056 0648     		ldr	r0, .L60+16
 941              	.LVL72:
 942 0058 FFF7FEFF 		bl	printf
 943              	.LVL73:
 446:Src/main.c    **** 
 944              		.loc 1 446 0
 945 005c E7E7     		b	.L52
 946              	.L61:
 947 005e 00BF     		.align	2
 948              	.L60:
 949 0060 00000000 		.word	.LANCHOR2
 950 0064 00000000 		.word	.LANCHOR3
 951 0068 00000000 		.word	.LANCHOR4
 952 006c 00000000 		.word	.LC1
 953 0070 18000000 		.word	.LC2
 954              		.cfi_endproc
 955              	.LFE72:
 957              		.section	.text.setloopoutmode,"ax",%progbits
 958              		.align	1
 959              		.global	setloopoutmode
 960              		.syntax unified
 961              		.thumb
 962              		.thumb_func
 963              		.fpu softvfp
 965              	setloopoutmode:
 966              	.LFB73:
 450:Src/main.c    **** /*
 967              		.loc 1 450 0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 0
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971              	.LVL74:
 972 0000 70B5     		push	{r4, r5, r6, lr}
 973              	.LCFI20:
 974              		.cfi_def_cfa_offset 16
 975              		.cfi_offset 4, -16
 976              		.cfi_offset 5, -12
 977              		.cfi_offset 6, -8
 978              		.cfi_offset 14, -4
 979 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccs2VtGF.s 			page 94


 458:Src/main.c    ****     {
 980              		.loc 1 458 0
 981 0004 1328     		cmp	r0, #19
 982 0006 25D8     		bhi	.L63
 983 0008 DFE810F0 		tbh	[pc, r0, lsl #1]
 984              	.L65:
 985 000c 1400     		.2byte	(.L64-.L65)/2
 986 000e 3900     		.2byte	(.L66-.L65)/2
 987 0010 4A00     		.2byte	(.L67-.L65)/2
 988 0012 5C00     		.2byte	(.L68-.L65)/2
 989 0014 6E00     		.2byte	(.L69-.L65)/2
 990 0016 9500     		.2byte	(.L70-.L65)/2
 991 0018 2400     		.2byte	(.L63-.L65)/2
 992 001a 2400     		.2byte	(.L63-.L65)/2
 993 001c 2400     		.2byte	(.L63-.L65)/2
 994 001e A400     		.2byte	(.L71-.L65)/2
 995 0020 BA01     		.2byte	(.L72-.L65)/2
 996 0022 BD00     		.2byte	(.L73-.L65)/2
 997 0024 D600     		.2byte	(.L74-.L65)/2
 998 0026 F000     		.2byte	(.L75-.L65)/2
 999 0028 0A01     		.2byte	(.L76-.L65)/2
 1000 002a 2501     		.2byte	(.L77-.L65)/2
 1001 002c 3F01     		.2byte	(.L78-.L65)/2
 1002 002e 5901     		.2byte	(.L79-.L65)/2
 1003 0030 D401     		.2byte	(.L80-.L65)/2
 1004 0032 A001     		.2byte	(.L81-.L65)/2
 1005              		.p2align 1
 1006              	.L64:
 462:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 1007              		.loc 1 462 0
 1008 0034 AE4B     		ldr	r3, .L83
 1009 0036 0022     		movs	r2, #0
 1010 0038 1A70     		strb	r2, [r3]
 463:Src/main.c    **** 	 OSD_MIRROR[0]=CAMA_M;
 1011              		.loc 1 463 0
 1012 003a 0125     		movs	r5, #1
 1013 003c 5D70     		strb	r5, [r3, #1]
 464:Src/main.c    **** 	 gabVXIS_Input_mirrorH[0]=CAMA_M;
 1014              		.loc 1 464 0
 1015 003e AD4B     		ldr	r3, .L83+4
 1016 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1017 0042 AD4A     		ldr	r2, .L83+8
 1018 0044 1370     		strb	r3, [r2]
 465:Src/main.c    ****         printf("VS4210_MODE0_w0\r\n") ;
 1019              		.loc 1 465 0
 1020 0046 AD4A     		ldr	r2, .L83+12
 1021 0048 1370     		strb	r3, [r2]
 466:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 1022              		.loc 1 466 0
 1023 004a AD48     		ldr	r0, .L83+16
 1024              	.LVL75:
 1025 004c FFF7FEFF 		bl	puts
 1026              	.LVL76:
 467:Src/main.c    ****         break ;
 1027              		.loc 1 467 0
 1028 0050 AC4B     		ldr	r3, .L83+20
 1029 0052 1D70     		strb	r5, [r3]
ARM GAS  /tmp/ccs2VtGF.s 			page 95


 1030              	.L63:
1100:Src/main.c    **** 
 1031              		.loc 1 1100 0
 1032 0054 A648     		ldr	r0, .L83
 1033 0056 FFF7FEFF 		bl	VS4210_SetMutiWindows
 1034              	.LVL77:
1103:Src/main.c    **** 
 1035              		.loc 1 1103 0
 1036 005a 0120     		movs	r0, #1
 1037 005c FFF7FEFF 		bl	AudioMute
 1038              	.LVL78:
1105:Src/main.c    **** MCUTimerActiveTimerEvent(SEC(1),  _SYSTEM_TIMER_EVENT_AUDIO_CHANNEL_SELECT);
 1039              		.loc 1 1105 0
 1040 0060 3B20     		movs	r0, #59
 1041 0062 FFF7FEFF 		bl	MCUTimerCancelTimerEvent
 1042              	.LVL79:
1106:Src/main.c    **** AUDIO_SELECT(index);
 1043              		.loc 1 1106 0
 1044 0066 3B21     		movs	r1, #59
 1045 0068 4FF47A70 		mov	r0, #1000
 1046 006c FFF7FEFF 		bl	MCUTimerActiveTimerEvent
 1047              	.LVL80:
1107:Src/main.c    **** 
 1048              		.loc 1 1107 0
 1049 0070 E4B2     		uxtb	r4, r4
 1050              	.LVL81:
 1051 0072 2046     		mov	r0, r4
 1052 0074 FFF7FEFF 		bl	AUDIO_SELECT
 1053              	.LVL82:
1109:Src/main.c    **** 
 1054              		.loc 1 1109 0
 1055 0078 A34B     		ldr	r3, .L83+24
 1056 007a 1C70     		strb	r4, [r3]
1113:Src/main.c    **** 
 1057              		.loc 1 1113 0
 1058 007c 70BD     		pop	{r4, r5, r6, pc}
 1059              	.LVL83:
 1060              	.L66:
 472:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 1061              		.loc 1 472 0
 1062 007e 9C4A     		ldr	r2, .L83
 1063 0080 0123     		movs	r3, #1
 1064 0082 1370     		strb	r3, [r2]
 473:Src/main.c    ****    	 OSD_MIRROR[0]=CAMB_M;
 1065              		.loc 1 473 0
 1066 0084 0221     		movs	r1, #2
 1067 0086 5170     		strb	r1, [r2, #1]
 474:Src/main.c    **** 	 gabVXIS_Input_mirrorH[1]=CAMB_M; 
 1068              		.loc 1 474 0
 1069 0088 A04A     		ldr	r2, .L83+28
 1070 008a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1071 008c 9A49     		ldr	r1, .L83+8
 1072 008e 0A70     		strb	r2, [r1]
 475:Src/main.c    **** 	 OSD_SPEAKER[0]=ON;
 1073              		.loc 1 475 0
 1074 0090 9A49     		ldr	r1, .L83+12
 1075 0092 4A70     		strb	r2, [r1, #1]
ARM GAS  /tmp/ccs2VtGF.s 			page 96


 476:Src/main.c    ****         printf("VS4210_MODE0_w1\r\n") ;
 1076              		.loc 1 476 0
 1077 0094 9B4A     		ldr	r2, .L83+20
 1078 0096 1370     		strb	r3, [r2]
 477:Src/main.c    ****         break ;
 1079              		.loc 1 477 0
 1080 0098 9D48     		ldr	r0, .L83+32
 1081              	.LVL84:
 1082 009a FFF7FEFF 		bl	puts
 1083              	.LVL85:
 478:Src/main.c    ****     }
 1084              		.loc 1 478 0
 1085 009e D9E7     		b	.L63
 1086              	.LVL86:
 1087              	.L67:
 482:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 1088              		.loc 1 482 0
 1089 00a0 934B     		ldr	r3, .L83
 1090 00a2 0222     		movs	r2, #2
 1091 00a4 1A70     		strb	r2, [r3]
 483:Src/main.c    **** 	 OSD_MIRROR[0]=CAMC_M;	
 1092              		.loc 1 483 0
 1093 00a6 0322     		movs	r2, #3
 1094 00a8 5A70     		strb	r2, [r3, #1]
 484:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 	 
 1095              		.loc 1 484 0
 1096 00aa 9A4B     		ldr	r3, .L83+36
 1097 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1098 00ae 924A     		ldr	r2, .L83+8
 1099 00b0 1370     		strb	r3, [r2]
 485:Src/main.c    **** 	 OSD_SPEAKER[0]=ON;
 1100              		.loc 1 485 0
 1101 00b2 924A     		ldr	r2, .L83+12
 1102 00b4 9370     		strb	r3, [r2, #2]
 486:Src/main.c    ****         printf("VS4210_MODE0_w2\r\n") ;
 1103              		.loc 1 486 0
 1104 00b6 934B     		ldr	r3, .L83+20
 1105 00b8 0122     		movs	r2, #1
 1106 00ba 1A70     		strb	r2, [r3]
 487:Src/main.c    ****         break ;
 1107              		.loc 1 487 0
 1108 00bc 9648     		ldr	r0, .L83+40
 1109              	.LVL87:
 1110 00be FFF7FEFF 		bl	puts
 1111              	.LVL88:
 488:Src/main.c    ****     }
 1112              		.loc 1 488 0
 1113 00c2 C7E7     		b	.L63
 1114              	.LVL89:
 1115              	.L68:
 492:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 1116              		.loc 1 492 0
 1117 00c4 8A4B     		ldr	r3, .L83
 1118 00c6 0322     		movs	r2, #3
 1119 00c8 1A70     		strb	r2, [r3]
 493:Src/main.c    ****    	OSD_MIRROR[0]=CAMR_M;	
 1120              		.loc 1 493 0
ARM GAS  /tmp/ccs2VtGF.s 			page 97


 1121 00ca 0422     		movs	r2, #4
 1122 00cc 5A70     		strb	r2, [r3, #1]
 494:Src/main.c    **** 	gabVXIS_Input_mirrorH[3]=CAMR_M; 		
 1123              		.loc 1 494 0
 1124 00ce 934B     		ldr	r3, .L83+44
 1125 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1126 00d2 894A     		ldr	r2, .L83+8
 1127 00d4 1370     		strb	r3, [r2]
 495:Src/main.c    ****   	OSD_SPEAKER[0]=ON;
 1128              		.loc 1 495 0
 1129 00d6 894A     		ldr	r2, .L83+12
 1130 00d8 D370     		strb	r3, [r2, #3]
 496:Src/main.c    ****         printf("VS4210_MODE0_w3\r\n") ;
 1131              		.loc 1 496 0
 1132 00da 8A4B     		ldr	r3, .L83+20
 1133 00dc 0122     		movs	r2, #1
 1134 00de 1A70     		strb	r2, [r3]
 497:Src/main.c    ****         break ;
 1135              		.loc 1 497 0
 1136 00e0 8F48     		ldr	r0, .L83+48
 1137              	.LVL90:
 1138 00e2 FFF7FEFF 		bl	puts
 1139              	.LVL91:
 498:Src/main.c    ****     }
 1140              		.loc 1 498 0
 1141 00e6 B5E7     		b	.L63
 1142              	.LVL92:
 1143              	.L69:
 502:Src/main.c    **** 	
 1144              		.loc 1 502 0
 1145 00e8 814B     		ldr	r3, .L83
 1146 00ea 1022     		movs	r2, #16
 1147 00ec 1A70     		strb	r2, [r3]
 504:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 1148              		.loc 1 504 0
 1149 00ee 0121     		movs	r1, #1
 1150 00f0 5970     		strb	r1, [r3, #1]
 505:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 1151              		.loc 1 505 0
 1152 00f2 0222     		movs	r2, #2
 1153 00f4 9A70     		strb	r2, [r3, #2]
 506:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 1154              		.loc 1 506 0
 1155 00f6 0322     		movs	r2, #3
 1156 00f8 DA70     		strb	r2, [r3, #3]
 507:Src/main.c    ****    	  OSD_MIRROR[0]=CAMA_M;	
 1157              		.loc 1 507 0
 1158 00fa 0422     		movs	r2, #4
 1159 00fc 1A71     		strb	r2, [r3, #4]
 508:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 1160              		.loc 1 508 0
 1161 00fe 7D4B     		ldr	r3, .L83+4
 1162 0100 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 1163 0102 7D4B     		ldr	r3, .L83+8
 1164 0104 1E70     		strb	r6, [r3]
 509:Src/main.c    ****    	  OSD_MIRROR[2]=CAMC_M;	
 1165              		.loc 1 509 0
ARM GAS  /tmp/ccs2VtGF.s 			page 98


 1166 0106 814A     		ldr	r2, .L83+28
 1167 0108 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 1168 010a 5D70     		strb	r5, [r3, #1]
 510:Src/main.c    ****    	  OSD_MIRROR[3]=CAMR_M;	
 1169              		.loc 1 510 0
 1170 010c 814A     		ldr	r2, .L83+36
 1171 010e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1172              	.LVL93:
 1173 0110 9870     		strb	r0, [r3, #2]
 511:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
 1174              		.loc 1 511 0
 1175 0112 824A     		ldr	r2, .L83+44
 1176 0114 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1177 0116 DA70     		strb	r2, [r3, #3]
 512:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 1178              		.loc 1 512 0
 1179 0118 784B     		ldr	r3, .L83+12
 1180 011a 1E70     		strb	r6, [r3]
 513:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 		  
 1181              		.loc 1 513 0
 1182 011c 5D70     		strb	r5, [r3, #1]
 514:Src/main.c    **** 	gabVXIS_Input_mirrorH[3]=CAMR_M; 		  
 1183              		.loc 1 514 0
 1184 011e 9870     		strb	r0, [r3, #2]
 515:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
 1185              		.loc 1 515 0
 1186 0120 DA70     		strb	r2, [r3, #3]
 516:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;
 1187              		.loc 1 516 0
 1188 0122 784B     		ldr	r3, .L83+20
 1189 0124 0022     		movs	r2, #0
 1190 0126 1A70     		strb	r2, [r3]
 517:Src/main.c    **** 	  OSD_SPEAKER[2]=OFF;
 1191              		.loc 1 517 0
 1192 0128 5A70     		strb	r2, [r3, #1]
 518:Src/main.c    **** 	  OSD_SPEAKER[3]=ON;
 1193              		.loc 1 518 0
 1194 012a 9A70     		strb	r2, [r3, #2]
 519:Src/main.c    **** 
 1195              		.loc 1 519 0
 1196 012c D970     		strb	r1, [r3, #3]
 521:Src/main.c    ****         break ;
 1197              		.loc 1 521 0
 1198 012e 7D48     		ldr	r0, .L83+52
 1199 0130 FFF7FEFF 		bl	puts
 1200              	.LVL94:
 522:Src/main.c    ****     }
 1201              		.loc 1 522 0
 1202 0134 8EE7     		b	.L63
 1203              	.LVL95:
 1204              	.L70:
 527:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 1205              		.loc 1 527 0
 1206 0136 6E4B     		ldr	r3, .L83
 1207 0138 2022     		movs	r2, #32
 1208 013a 1A70     		strb	r2, [r3]
 528:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
ARM GAS  /tmp/ccs2VtGF.s 			page 99


 1209              		.loc 1 528 0
 1210 013c 0122     		movs	r2, #1
 1211 013e 5A70     		strb	r2, [r3, #1]
 529:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 1212              		.loc 1 529 0
 1213 0140 0222     		movs	r2, #2
 1214 0142 9A70     		strb	r2, [r3, #2]
 530:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 1215              		.loc 1 530 0
 1216 0144 0322     		movs	r2, #3
 1217 0146 DA70     		strb	r2, [r3, #3]
 531:Src/main.c    ****         printf("VS4210_MODE2\r\n") ;
 1218              		.loc 1 531 0
 1219 0148 0422     		movs	r2, #4
 1220 014a 1A71     		strb	r2, [r3, #4]
 532:Src/main.c    ****         break ;
 1221              		.loc 1 532 0
 1222 014c 7648     		ldr	r0, .L83+56
 1223              	.LVL96:
 1224 014e FFF7FEFF 		bl	puts
 1225              	.LVL97:
 533:Src/main.c    ****     }
 1226              		.loc 1 533 0
 1227 0152 7FE7     		b	.L63
 1228              	.LVL98:
 1229              	.L71:
 912:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 1230              		.loc 1 912 0
 1231 0154 664B     		ldr	r3, .L83
 1232 0156 4022     		movs	r2, #64
 1233 0158 1A70     		strb	r2, [r3]
 913:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 1234              		.loc 1 913 0
 1235 015a 0122     		movs	r2, #1
 1236 015c 5A70     		strb	r2, [r3, #1]
 914:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 1237              		.loc 1 914 0
 1238 015e 0221     		movs	r1, #2
 1239 0160 9970     		strb	r1, [r3, #2]
 915:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 1240              		.loc 1 915 0
 1241 0162 644B     		ldr	r3, .L83+4
 1242 0164 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1243              	.LVL99:
 1244 0166 644B     		ldr	r3, .L83+8
 1245 0168 1870     		strb	r0, [r3]
 916:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
 1246              		.loc 1 916 0
 1247 016a 6849     		ldr	r1, .L83+28
 1248 016c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1249 016e 5970     		strb	r1, [r3, #1]
 917:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
 1250              		.loc 1 917 0
 1251 0170 624B     		ldr	r3, .L83+12
 1252 0172 1870     		strb	r0, [r3]
 918:Src/main.c    ****   	OSD_SPEAKER[0]=ON;
 1253              		.loc 1 918 0
ARM GAS  /tmp/ccs2VtGF.s 			page 100


 1254 0174 5970     		strb	r1, [r3, #1]
 919:Src/main.c    ****   	OSD_SPEAKER[1]=OFF;
 1255              		.loc 1 919 0
 1256 0176 634B     		ldr	r3, .L83+20
 1257 0178 1A70     		strb	r2, [r3]
 920:Src/main.c    ****         printf("VS4210_MODE12 ch1 ch2\r\n") ;
 1258              		.loc 1 920 0
 1259 017a 0022     		movs	r2, #0
 1260 017c 5A70     		strb	r2, [r3, #1]
 921:Src/main.c    ****         break ;
 1261              		.loc 1 921 0
 1262 017e 6B48     		ldr	r0, .L83+60
 1263 0180 FFF7FEFF 		bl	puts
 1264              	.LVL100:
 922:Src/main.c    ****     }
 1265              		.loc 1 922 0
 1266 0184 66E7     		b	.L63
 1267              	.LVL101:
 1268              	.L73:
 926:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 1269              		.loc 1 926 0
 1270 0186 5A4B     		ldr	r3, .L83
 1271 0188 4022     		movs	r2, #64
 1272 018a 1A70     		strb	r2, [r3]
 927:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =4 ;
 1273              		.loc 1 927 0
 1274 018c 0122     		movs	r2, #1
 1275 018e 5A70     		strb	r2, [r3, #1]
 928:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 1276              		.loc 1 928 0
 1277 0190 0421     		movs	r1, #4
 1278 0192 9970     		strb	r1, [r3, #2]
 929:Src/main.c    ****    	  OSD_MIRROR[1]=CAMR_M;
 1279              		.loc 1 929 0
 1280 0194 574B     		ldr	r3, .L83+4
 1281 0196 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1282              	.LVL102:
 1283 0198 574B     		ldr	r3, .L83+8
 1284 019a 1870     		strb	r0, [r3]
 930:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
 1285              		.loc 1 930 0
 1286 019c 5F49     		ldr	r1, .L83+44
 1287 019e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1288 01a0 5970     		strb	r1, [r3, #1]
 931:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
 1289              		.loc 1 931 0
 1290 01a2 564B     		ldr	r3, .L83+12
 1291 01a4 1870     		strb	r0, [r3]
 932:Src/main.c    ****   	OSD_SPEAKER[0]=OFF;
 1292              		.loc 1 932 0
 1293 01a6 5970     		strb	r1, [r3, #1]
 933:Src/main.c    ****   	OSD_SPEAKER[1]=ON;	  
 1294              		.loc 1 933 0
 1295 01a8 564B     		ldr	r3, .L83+20
 1296 01aa 0021     		movs	r1, #0
 1297 01ac 1970     		strb	r1, [r3]
 934:Src/main.c    ****         printf("VS4210_MODE12 ch1 ch4\r\n") ;	
ARM GAS  /tmp/ccs2VtGF.s 			page 101


 1298              		.loc 1 934 0
 1299 01ae 5A70     		strb	r2, [r3, #1]
 935:Src/main.c    **** 	break;
 1300              		.loc 1 935 0
 1301 01b0 5F48     		ldr	r0, .L83+64
 1302 01b2 FFF7FEFF 		bl	puts
 1303              	.LVL103:
 936:Src/main.c    ****     	}
 1304              		.loc 1 936 0
 1305 01b6 4DE7     		b	.L63
 1306              	.LVL104:
 1307              	.L74:
 940:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 1308              		.loc 1 940 0
 1309 01b8 4D4B     		ldr	r3, .L83
 1310 01ba 4022     		movs	r2, #64
 1311 01bc 1A70     		strb	r2, [r3]
 941:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 1312              		.loc 1 941 0
 1313 01be 0422     		movs	r2, #4
 1314 01c0 5A70     		strb	r2, [r3, #1]
 942:Src/main.c    **** 	  OSD_MIRROR[0]=CAMR_M;	
 1315              		.loc 1 942 0
 1316 01c2 0222     		movs	r2, #2
 1317 01c4 9A70     		strb	r2, [r3, #2]
 943:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 1318              		.loc 1 943 0
 1319 01c6 554B     		ldr	r3, .L83+44
 1320 01c8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1321 01ca 4B4B     		ldr	r3, .L83+8
 1322 01cc 1970     		strb	r1, [r3]
 944:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMR_M;			  
 1323              		.loc 1 944 0
 1324 01ce 4F4A     		ldr	r2, .L83+28
 1325 01d0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1326 01d2 5A70     		strb	r2, [r3, #1]
 945:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
 1327              		.loc 1 945 0
 1328 01d4 494B     		ldr	r3, .L83+12
 1329 01d6 1970     		strb	r1, [r3]
 946:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 1330              		.loc 1 946 0
 1331 01d8 5A70     		strb	r2, [r3, #1]
 947:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 1332              		.loc 1 947 0
 1333 01da 4A4B     		ldr	r3, .L83+20
 1334 01dc 0122     		movs	r2, #1
 1335 01de 1A70     		strb	r2, [r3]
 948:Src/main.c    ****         printf("VS4210_MODE12 ch4 ch2\r\n") ;	
 1336              		.loc 1 948 0
 1337 01e0 0022     		movs	r2, #0
 1338 01e2 5A70     		strb	r2, [r3, #1]
 949:Src/main.c    **** 	break;
 1339              		.loc 1 949 0
 1340 01e4 5348     		ldr	r0, .L83+68
 1341              	.LVL105:
 1342 01e6 FFF7FEFF 		bl	puts
ARM GAS  /tmp/ccs2VtGF.s 			page 102


 1343              	.LVL106:
 950:Src/main.c    ****     	}
 1344              		.loc 1 950 0
 1345 01ea 33E7     		b	.L63
 1346              	.LVL107:
 1347              	.L75:
 954:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 1348              		.loc 1 954 0
 1349 01ec 404B     		ldr	r3, .L83
 1350 01ee 4022     		movs	r2, #64
 1351 01f0 1A70     		strb	r2, [r3]
 955:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 1352              		.loc 1 955 0
 1353 01f2 0422     		movs	r2, #4
 1354 01f4 5A70     		strb	r2, [r3, #1]
 956:Src/main.c    **** 	  OSD_MIRROR[0]=CAMR_M;	
 1355              		.loc 1 956 0
 1356 01f6 0322     		movs	r2, #3
 1357 01f8 9A70     		strb	r2, [r3, #2]
 957:Src/main.c    ****    	  OSD_MIRROR[1]=CAMC_M;	
 1358              		.loc 1 957 0
 1359 01fa 484B     		ldr	r3, .L83+44
 1360 01fc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1361 01fe 3E4B     		ldr	r3, .L83+8
 1362 0200 1970     		strb	r1, [r3]
 958:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMR_M;			  
 1363              		.loc 1 958 0
 1364 0202 444A     		ldr	r2, .L83+36
 1365 0204 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1366 0206 5A70     		strb	r2, [r3, #1]
 959:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 	  
 1367              		.loc 1 959 0
 1368 0208 3C4B     		ldr	r3, .L83+12
 1369 020a 1970     		strb	r1, [r3]
 960:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 1370              		.loc 1 960 0
 1371 020c 5A70     		strb	r2, [r3, #1]
 961:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 1372              		.loc 1 961 0
 1373 020e 3D4B     		ldr	r3, .L83+20
 1374 0210 0122     		movs	r2, #1
 1375 0212 1A70     		strb	r2, [r3]
 962:Src/main.c    ****         printf("VS4210_MODE12 ch4 ch3\r\n") ;	
 1376              		.loc 1 962 0
 1377 0214 0022     		movs	r2, #0
 1378 0216 5A70     		strb	r2, [r3, #1]
 963:Src/main.c    **** 	break;
 1379              		.loc 1 963 0
 1380 0218 4748     		ldr	r0, .L83+72
 1381              	.LVL108:
 1382 021a FFF7FEFF 		bl	puts
 1383              	.LVL109:
 964:Src/main.c    ****     	}
 1384              		.loc 1 964 0
 1385 021e 19E7     		b	.L63
 1386              	.LVL110:
 1387              	.L76:
ARM GAS  /tmp/ccs2VtGF.s 			page 103


 969:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 1388              		.loc 1 969 0
 1389 0220 334B     		ldr	r3, .L83
 1390 0222 4022     		movs	r2, #64
 1391 0224 1A70     		strb	r2, [r3]
 970:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 1392              		.loc 1 970 0
 1393 0226 0222     		movs	r2, #2
 1394 0228 5A70     		strb	r2, [r3, #1]
 971:Src/main.c    **** 	  OSD_MIRROR[0]=CAMB_M;	
 1395              		.loc 1 971 0
 1396 022a 0122     		movs	r2, #1
 1397 022c 9A70     		strb	r2, [r3, #2]
 972:Src/main.c    ****    	  OSD_MIRROR[1]=CAMA_M;	
 1398              		.loc 1 972 0
 1399 022e 374B     		ldr	r3, .L83+28
 1400 0230 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1401 0232 314B     		ldr	r3, .L83+8
 1402 0234 1970     		strb	r1, [r3]
 973:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMB_M;			  
 1403              		.loc 1 973 0
 1404 0236 2F48     		ldr	r0, .L83+4
 1405              	.LVL111:
 1406 0238 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1407 023a 5870     		strb	r0, [r3, #1]
 974:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
 1408              		.loc 1 974 0
 1409 023c 2F4B     		ldr	r3, .L83+12
 1410 023e 1970     		strb	r1, [r3]
 975:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 1411              		.loc 1 975 0
 1412 0240 3649     		ldr	r1, .L83+44
 1413 0242 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1414 0244 5970     		strb	r1, [r3, #1]
 976:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 1415              		.loc 1 976 0
 1416 0246 2F4B     		ldr	r3, .L83+20
 1417 0248 1A70     		strb	r2, [r3]
 977:Src/main.c    ****         printf("VS4210_MODE12 ch2 ch1\r\n") ;	
 1418              		.loc 1 977 0
 1419 024a 0022     		movs	r2, #0
 1420 024c 5A70     		strb	r2, [r3, #1]
 978:Src/main.c    **** 	break;
 1421              		.loc 1 978 0
 1422 024e 3B48     		ldr	r0, .L83+76
 1423 0250 FFF7FEFF 		bl	puts
 1424              	.LVL112:
 979:Src/main.c    ****     	}
 1425              		.loc 1 979 0
 1426 0254 FEE6     		b	.L63
 1427              	.LVL113:
 1428              	.L77:
 983:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 1429              		.loc 1 983 0
 1430 0256 264B     		ldr	r3, .L83
 1431 0258 4022     		movs	r2, #64
 1432 025a 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccs2VtGF.s 			page 104


 984:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 1433              		.loc 1 984 0
 1434 025c 0222     		movs	r2, #2
 1435 025e 5A70     		strb	r2, [r3, #1]
 985:Src/main.c    **** 	  OSD_MIRROR[0]=CAMB_M;	
 1436              		.loc 1 985 0
 1437 0260 0322     		movs	r2, #3
 1438 0262 9A70     		strb	r2, [r3, #2]
 986:Src/main.c    ****    	  OSD_MIRROR[1]=CAMC_M;	
 1439              		.loc 1 986 0
 1440 0264 294B     		ldr	r3, .L83+28
 1441 0266 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1442 0268 234B     		ldr	r3, .L83+8
 1443 026a 1970     		strb	r1, [r3]
 987:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMB_M;			  
 1444              		.loc 1 987 0
 1445 026c 294A     		ldr	r2, .L83+36
 1446 026e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1447 0270 5A70     		strb	r2, [r3, #1]
 988:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 	  
 1448              		.loc 1 988 0
 1449 0272 224B     		ldr	r3, .L83+12
 1450 0274 1970     		strb	r1, [r3]
 989:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 1451              		.loc 1 989 0
 1452 0276 5A70     		strb	r2, [r3, #1]
 990:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 1453              		.loc 1 990 0
 1454 0278 224B     		ldr	r3, .L83+20
 1455 027a 0122     		movs	r2, #1
 1456 027c 1A70     		strb	r2, [r3]
 991:Src/main.c    ****         printf("VS4210_MODE12 ch2 ch3\r\n") ;	
 1457              		.loc 1 991 0
 1458 027e 0022     		movs	r2, #0
 1459 0280 5A70     		strb	r2, [r3, #1]
 992:Src/main.c    **** 	break;
 1460              		.loc 1 992 0
 1461 0282 2F48     		ldr	r0, .L83+80
 1462              	.LVL114:
 1463 0284 FFF7FEFF 		bl	puts
 1464              	.LVL115:
 993:Src/main.c    ****     	}
 1465              		.loc 1 993 0
 1466 0288 E4E6     		b	.L63
 1467              	.LVL116:
 1468              	.L78:
 997:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2;
 1469              		.loc 1 997 0
 1470 028a 194B     		ldr	r3, .L83
 1471 028c 4022     		movs	r2, #64
 1472 028e 1A70     		strb	r2, [r3]
 998:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =4 ;
 1473              		.loc 1 998 0
 1474 0290 0222     		movs	r2, #2
 1475 0292 5A70     		strb	r2, [r3, #1]
 999:Src/main.c    **** 	  OSD_MIRROR[0]=CAMB_M;	
 1476              		.loc 1 999 0
ARM GAS  /tmp/ccs2VtGF.s 			page 105


 1477 0294 0422     		movs	r2, #4
 1478 0296 9A70     		strb	r2, [r3, #2]
1000:Src/main.c    ****    	  OSD_MIRROR[1]=CAMR_M;	
 1479              		.loc 1 1000 0
 1480 0298 1C4B     		ldr	r3, .L83+28
 1481 029a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1482 029c 164B     		ldr	r3, .L83+8
 1483 029e 1970     		strb	r1, [r3]
1001:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMB_M;			  
 1484              		.loc 1 1001 0
 1485 02a0 1E4A     		ldr	r2, .L83+44
 1486 02a2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1487 02a4 5A70     		strb	r2, [r3, #1]
1002:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
 1488              		.loc 1 1002 0
 1489 02a6 154B     		ldr	r3, .L83+12
 1490 02a8 1970     		strb	r1, [r3]
1003:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
 1491              		.loc 1 1003 0
 1492 02aa 5A70     		strb	r2, [r3, #1]
1004:Src/main.c    **** 	  OSD_SPEAKER[1]=ON;		  
 1493              		.loc 1 1004 0
 1494 02ac 154B     		ldr	r3, .L83+20
 1495 02ae 0022     		movs	r2, #0
 1496 02b0 1A70     		strb	r2, [r3]
1005:Src/main.c    ****         printf("VS4210_MODE12 ch2 ch4\r\n") ;	
 1497              		.loc 1 1005 0
 1498 02b2 0122     		movs	r2, #1
 1499 02b4 5A70     		strb	r2, [r3, #1]
1006:Src/main.c    **** 	break;
 1500              		.loc 1 1006 0
 1501 02b6 2348     		ldr	r0, .L83+84
 1502              	.LVL117:
 1503 02b8 FFF7FEFF 		bl	puts
 1504              	.LVL118:
1007:Src/main.c    ****     	}
 1505              		.loc 1 1007 0
 1506 02bc CAE6     		b	.L63
 1507              	.LVL119:
 1508              	.L79:
1013:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 1509              		.loc 1 1013 0
 1510 02be 0C4B     		ldr	r3, .L83
 1511 02c0 4022     		movs	r2, #64
 1512 02c2 1A70     		strb	r2, [r3]
1014:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 1513              		.loc 1 1014 0
 1514 02c4 0122     		movs	r2, #1
 1515 02c6 5A70     		strb	r2, [r3, #1]
1015:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 1516              		.loc 1 1015 0
 1517 02c8 0321     		movs	r1, #3
 1518 02ca 9970     		strb	r1, [r3, #2]
1016:Src/main.c    ****    	  OSD_MIRROR[1]=CAMC_M;	
 1519              		.loc 1 1016 0
 1520 02cc 094B     		ldr	r3, .L83+4
 1521 02ce 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccs2VtGF.s 			page 106


 1522              	.LVL120:
 1523 02d0 094B     		ldr	r3, .L83+8
 1524 02d2 1870     		strb	r0, [r3]
1017:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
 1525              		.loc 1 1017 0
 1526 02d4 0F49     		ldr	r1, .L83+36
 1527 02d6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1528 02d8 5970     		strb	r1, [r3, #1]
1018:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 	  
 1529              		.loc 1 1018 0
 1530 02da 084B     		ldr	r3, .L83+12
 1531 02dc 1870     		strb	r0, [r3]
1019:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 1532              		.loc 1 1019 0
 1533 02de 5970     		strb	r1, [r3, #1]
1020:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;	
 1534              		.loc 1 1020 0
 1535 02e0 084B     		ldr	r3, .L83+20
 1536 02e2 1A70     		strb	r2, [r3]
1021:Src/main.c    **** 	  
 1537              		.loc 1 1021 0
 1538 02e4 0022     		movs	r2, #0
 1539 02e6 5A70     		strb	r2, [r3, #1]
1023:Src/main.c    **** 	break;
 1540              		.loc 1 1023 0
 1541 02e8 1748     		ldr	r0, .L83+88
 1542 02ea FFF7FEFF 		bl	puts
 1543              	.LVL121:
1024:Src/main.c    ****     	}
 1544              		.loc 1 1024 0
 1545 02ee B1E6     		b	.L63
 1546              	.L84:
 1547              		.align	2
 1548              	.L83:
 1549 02f0 00000000 		.word	pVS4210_JointKind1
 1550 02f4 00000000 		.word	CAMA_M
 1551 02f8 00000000 		.word	.LANCHOR5
 1552 02fc 00000000 		.word	gabVXIS_Input_mirrorH
 1553 0300 00000000 		.word	.LC3
 1554 0304 00000000 		.word	.LANCHOR6
 1555 0308 00000000 		.word	.LANCHOR7
 1556 030c 00000000 		.word	CAMB_M
 1557 0310 14000000 		.word	.LC4
 1558 0314 00000000 		.word	CAMC_M
 1559 0318 28000000 		.word	.LC5
 1560 031c 00000000 		.word	CAMR_M
 1561 0320 3C000000 		.word	.LC6
 1562 0324 50000000 		.word	.LC7
 1563 0328 60000000 		.word	.LC8
 1564 032c 70000000 		.word	.LC9
 1565 0330 88000000 		.word	.LC10
 1566 0334 A0000000 		.word	.LC11
 1567 0338 B8000000 		.word	.LC12
 1568 033c D0000000 		.word	.LC13
 1569 0340 E8000000 		.word	.LC14
 1570 0344 00010000 		.word	.LC15
 1571 0348 18010000 		.word	.LC16
ARM GAS  /tmp/ccs2VtGF.s 			page 107


 1572              	.LVL122:
 1573              	.L81:
1028:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 1574              		.loc 1 1028 0
 1575 034c 264B     		ldr	r3, .L85
 1576 034e 4022     		movs	r2, #64
 1577 0350 1A70     		strb	r2, [r3]
1029:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 1578              		.loc 1 1029 0
 1579 0352 0322     		movs	r2, #3
 1580 0354 5A70     		strb	r2, [r3, #1]
1030:Src/main.c    **** 	  OSD_MIRROR[0]=CAMC_M;	
 1581              		.loc 1 1030 0
 1582 0356 0222     		movs	r2, #2
 1583 0358 9A70     		strb	r2, [r3, #2]
1031:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 1584              		.loc 1 1031 0
 1585 035a 244B     		ldr	r3, .L85+4
 1586 035c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1587 035e 244B     		ldr	r3, .L85+8
 1588 0360 1970     		strb	r1, [r3]
1032:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMC_M;			  
 1589              		.loc 1 1032 0
 1590 0362 244A     		ldr	r2, .L85+12
 1591 0364 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1592 0366 5A70     		strb	r2, [r3, #1]
1033:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
 1593              		.loc 1 1033 0
 1594 0368 234B     		ldr	r3, .L85+16
 1595 036a 1970     		strb	r1, [r3]
1034:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 1596              		.loc 1 1034 0
 1597 036c 5A70     		strb	r2, [r3, #1]
1035:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;	
 1598              		.loc 1 1035 0
 1599 036e 234B     		ldr	r3, .L85+20
 1600 0370 0122     		movs	r2, #1
 1601 0372 1A70     		strb	r2, [r3]
1036:Src/main.c    **** 	  
 1602              		.loc 1 1036 0
 1603 0374 0022     		movs	r2, #0
 1604 0376 5A70     		strb	r2, [r3, #1]
1038:Src/main.c    **** 	break;
 1605              		.loc 1 1038 0
 1606 0378 2148     		ldr	r0, .L85+24
 1607              	.LVL123:
 1608 037a FFF7FEFF 		bl	puts
 1609              	.LVL124:
1039:Src/main.c    ****     	}
 1610              		.loc 1 1039 0
 1611 037e 69E6     		b	.L63
 1612              	.LVL125:
 1613              	.L72:
1044:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 1614              		.loc 1 1044 0
 1615 0380 194B     		ldr	r3, .L85
 1616 0382 4022     		movs	r2, #64
ARM GAS  /tmp/ccs2VtGF.s 			page 108


 1617 0384 1A70     		strb	r2, [r3]
1045:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =4 ;
 1618              		.loc 1 1045 0
 1619 0386 0322     		movs	r2, #3
 1620 0388 5A70     		strb	r2, [r3, #1]
1046:Src/main.c    **** 	  OSD_MIRROR[0]=CAMC_M;	
 1621              		.loc 1 1046 0
 1622 038a 0422     		movs	r2, #4
 1623 038c 9A70     		strb	r2, [r3, #2]
1047:Src/main.c    ****    	  OSD_MIRROR[1]=CAMR_M;	
 1624              		.loc 1 1047 0
 1625 038e 174B     		ldr	r3, .L85+4
 1626 0390 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1627 0392 174B     		ldr	r3, .L85+8
 1628 0394 1970     		strb	r1, [r3]
1048:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMC_M;			  
 1629              		.loc 1 1048 0
 1630 0396 1B4A     		ldr	r2, .L85+28
 1631 0398 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1632 039a 5A70     		strb	r2, [r3, #1]
1049:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
 1633              		.loc 1 1049 0
 1634 039c 164B     		ldr	r3, .L85+16
 1635 039e 1970     		strb	r1, [r3]
1050:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
 1636              		.loc 1 1050 0
 1637 03a0 5A70     		strb	r2, [r3, #1]
1051:Src/main.c    **** 	  OSD_SPEAKER[1]=ON;	
 1638              		.loc 1 1051 0
 1639 03a2 164B     		ldr	r3, .L85+20
 1640 03a4 0022     		movs	r2, #0
 1641 03a6 1A70     		strb	r2, [r3]
1052:Src/main.c    **** 	  
 1642              		.loc 1 1052 0
 1643 03a8 0122     		movs	r2, #1
 1644 03aa 5A70     		strb	r2, [r3, #1]
1054:Src/main.c    ****         break ;
 1645              		.loc 1 1054 0
 1646 03ac 1648     		ldr	r0, .L85+32
 1647              	.LVL126:
 1648 03ae FFF7FEFF 		bl	puts
 1649              	.LVL127:
1055:Src/main.c    ****     }
 1650              		.loc 1 1055 0
 1651 03b2 4FE6     		b	.L63
 1652              	.LVL128:
 1653              	.L80:
1061:Src/main.c    **** 	pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 1654              		.loc 1 1061 0
 1655 03b4 0C4B     		ldr	r3, .L85
 1656 03b6 4022     		movs	r2, #64
 1657 03b8 1A70     		strb	r2, [r3]
1062:Src/main.c    **** 	pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 1658              		.loc 1 1062 0
 1659 03ba 0322     		movs	r2, #3
 1660 03bc 5A70     		strb	r2, [r3, #1]
1063:Src/main.c    ****   OSD_MIRROR[0]=CAMC_M; 
ARM GAS  /tmp/ccs2VtGF.s 			page 109


 1661              		.loc 1 1063 0
 1662 03be 0122     		movs	r2, #1
 1663 03c0 9A70     		strb	r2, [r3, #2]
1064:Src/main.c    ****   OSD_MIRROR[1]=CAMA_M; 
 1664              		.loc 1 1064 0
 1665 03c2 0A4B     		ldr	r3, .L85+4
 1666 03c4 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1667              	.LVL129:
 1668 03c6 0A4B     		ldr	r3, .L85+8
 1669 03c8 1870     		strb	r0, [r3]
1065:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMC_M;			  
 1670              		.loc 1 1065 0
 1671 03ca 1049     		ldr	r1, .L85+36
 1672 03cc 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1673 03ce 5970     		strb	r1, [r3, #1]
1066:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M;   
 1674              		.loc 1 1066 0
 1675 03d0 094B     		ldr	r3, .L85+16
 1676 03d2 1870     		strb	r0, [r3]
1067:Src/main.c    ****   OSD_SPEAKER[0]=ON;
 1677              		.loc 1 1067 0
 1678 03d4 5970     		strb	r1, [r3, #1]
1068:Src/main.c    ****   OSD_SPEAKER[1]=OFF;	
 1679              		.loc 1 1068 0
 1680 03d6 094B     		ldr	r3, .L85+20
 1681 03d8 1A70     		strb	r2, [r3]
1069:Src/main.c    ****   
 1682              		.loc 1 1069 0
 1683 03da 0022     		movs	r2, #0
 1684 03dc 5A70     		strb	r2, [r3, #1]
1071:Src/main.c    **** break;
 1685              		.loc 1 1071 0
 1686 03de 0C48     		ldr	r0, .L85+40
 1687 03e0 FFF7FEFF 		bl	puts
 1688              	.LVL130:
1072:Src/main.c    **** 	}
 1689              		.loc 1 1072 0
 1690 03e4 36E6     		b	.L63
 1691              	.L86:
 1692 03e6 00BF     		.align	2
 1693              	.L85:
 1694 03e8 00000000 		.word	pVS4210_JointKind1
 1695 03ec 00000000 		.word	CAMC_M
 1696 03f0 00000000 		.word	.LANCHOR5
 1697 03f4 00000000 		.word	CAMB_M
 1698 03f8 00000000 		.word	gabVXIS_Input_mirrorH
 1699 03fc 00000000 		.word	.LANCHOR6
 1700 0400 30010000 		.word	.LC17
 1701 0404 00000000 		.word	CAMR_M
 1702 0408 48010000 		.word	.LC18
 1703 040c 00000000 		.word	CAMA_M
 1704 0410 60010000 		.word	.LC19
 1705              		.cfi_endproc
 1706              	.LFE73:
 1708              		.section	.text.CHECK_HDMI720P50,"ax",%progbits
 1709              		.align	1
 1710              		.global	CHECK_HDMI720P50
ARM GAS  /tmp/ccs2VtGF.s 			page 110


 1711              		.syntax unified
 1712              		.thumb
 1713              		.thumb_func
 1714              		.fpu softvfp
 1716              	CHECK_HDMI720P50:
 1717              	.LFB74:
1166:Src/main.c    **** 	tByte REG9C,REG9D,REGA1,REGA2 ;
 1718              		.loc 1 1166 0
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 0
 1721              		@ frame_needed = 0, uses_anonymous_args = 0
 1722 0000 70B5     		push	{r4, r5, r6, lr}
 1723              	.LCFI21:
 1724              		.cfi_def_cfa_offset 16
 1725              		.cfi_offset 4, -16
 1726              		.cfi_offset 5, -12
 1727              		.cfi_offset 6, -8
 1728              		.cfi_offset 14, -4
 1729 0002 82B0     		sub	sp, sp, #8
 1730              	.LCFI22:
 1731              		.cfi_def_cfa_offset 24
 1732              	.LVL131:
1169:Src/main.c    **** 				REG9C=HDMIRX_ReadI2C_Byte(0x9c);			
 1733              		.loc 1 1169 0
 1734 0004 184B     		ldr	r3, .L98
 1735 0006 0022     		movs	r2, #0
 1736 0008 1A70     		strb	r2, [r3]
1170:Src/main.c    **** 				REG9D=HDMIRX_ReadI2C_Byte(0x9d);
 1737              		.loc 1 1170 0
 1738 000a 9C20     		movs	r0, #156
 1739 000c FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 1740              	.LVL132:
 1741 0010 0446     		mov	r4, r0
 1742              	.LVL133:
1171:Src/main.c    **** 				REGA1=HDMIRX_ReadI2C_Byte(0xa1);
 1743              		.loc 1 1171 0
 1744 0012 9D20     		movs	r0, #157
 1745 0014 FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 1746              	.LVL134:
 1747 0018 0546     		mov	r5, r0
 1748              	.LVL135:
1172:Src/main.c    **** 				REGA2=HDMIRX_ReadI2C_Byte(0xa2);
 1749              		.loc 1 1172 0
 1750 001a A120     		movs	r0, #161
 1751 001c FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 1752              	.LVL136:
 1753 0020 0646     		mov	r6, r0
 1754              	.LVL137:
1173:Src/main.c    **** 				
 1755              		.loc 1 1173 0
 1756 0022 A220     		movs	r0, #162
 1757 0024 FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 1758              	.LVL138:
1175:Src/main.c    **** 					{
 1759              		.loc 1 1175 0
 1760 0028 BC2C     		cmp	r4, #188
 1761 002a 02D0     		beq	.L94
ARM GAS  /tmp/ccs2VtGF.s 			page 111


1168:Src/main.c    **** 	gHDMI_Index=0;	
 1762              		.loc 1 1168 0
 1763 002c 0020     		movs	r0, #0
 1764              	.LVL139:
 1765              	.L88:
1187:Src/main.c    **** 	static void HDMI_VideoModeDetect(void)
 1766              		.loc 1 1187 0
 1767 002e 02B0     		add	sp, sp, #8
 1768              	.LCFI23:
 1769              		.cfi_remember_state
 1770              		.cfi_def_cfa_offset 16
 1771              		@ sp needed
 1772 0030 70BD     		pop	{r4, r5, r6, pc}
 1773              	.LVL140:
 1774              	.L94:
 1775              	.LCFI24:
 1776              		.cfi_restore_state
1175:Src/main.c    **** 					{
 1777              		.loc 1 1175 0 discriminator 1
 1778 0032 072D     		cmp	r5, #7
 1779 0034 01D0     		beq	.L95
1168:Src/main.c    **** 	gHDMI_Index=0;	
 1780              		.loc 1 1168 0
 1781 0036 0020     		movs	r0, #0
 1782              	.LVL141:
 1783 0038 F9E7     		b	.L88
 1784              	.LVL142:
 1785              	.L95:
1175:Src/main.c    **** 					{
 1786              		.loc 1 1175 0 discriminator 2
 1787 003a 102E     		cmp	r6, #16
 1788 003c 01D0     		beq	.L96
1168:Src/main.c    **** 	gHDMI_Index=0;	
 1789              		.loc 1 1168 0
 1790 003e 0020     		movs	r0, #0
 1791              	.LVL143:
 1792 0040 F5E7     		b	.L88
 1793              	.LVL144:
 1794              	.L96:
1175:Src/main.c    **** 					{
 1795              		.loc 1 1175 0 discriminator 3
 1796 0042 B828     		cmp	r0, #184
 1797 0044 01D0     		beq	.L97
1168:Src/main.c    **** 	gHDMI_Index=0;	
 1798              		.loc 1 1168 0
 1799 0046 0020     		movs	r0, #0
 1800              	.LVL145:
 1801 0048 F1E7     		b	.L88
 1802              	.LVL146:
 1803              	.L97:
1177:Src/main.c    **** 					//dbg_Printf("ch%d, REG 0xA2=%x \r\n", (int)(i+1),(int) HDMIRX_ReadI2C_Byte(0xa2) ) ;
 1804              		.loc 1 1177 0
 1805 004a 084B     		ldr	r3, .L98+4
 1806 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1807 004e 0193     		str	r3, [sp, #4]
 1808 0050 0124     		movs	r4, #1
 1809              	.LVL147:
ARM GAS  /tmp/ccs2VtGF.s 			page 112


 1810 0052 0094     		str	r4, [sp]
 1811 0054 40F29943 		movw	r3, #1177
 1812 0058 054A     		ldr	r2, .L98+8
 1813 005a 0649     		ldr	r1, .L98+12
 1814 005c 0648     		ldr	r0, .L98+16
 1815              	.LVL148:
 1816 005e FFF7FEFF 		bl	printf
 1817              	.LVL149:
1183:Src/main.c    **** 					}
 1818              		.loc 1 1183 0
 1819 0062 2046     		mov	r0, r4
 1820 0064 E3E7     		b	.L88
 1821              	.L99:
 1822 0066 00BF     		.align	2
 1823              	.L98:
 1824 0068 00000000 		.word	gHDMI_Index
 1825 006c 00000000 		.word	gbVXIS_InputMode
 1826 0070 00000000 		.word	.LANCHOR8
 1827 0074 00000000 		.word	.LC20
 1828 0078 0C000000 		.word	.LC21
 1829              		.cfi_endproc
 1830              	.LFE74:
 1832              		.section	.text.HDMI_VideoModeDetect,"ax",%progbits
 1833              		.align	1
 1834              		.syntax unified
 1835              		.thumb
 1836              		.thumb_func
 1837              		.fpu softvfp
 1839              	HDMI_VideoModeDetect:
 1840              	.LFB75:
1189:Src/main.c    **** 		tByte i  ;
 1841              		.loc 1 1189 0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 0
 1844              		@ frame_needed = 0, uses_anonymous_args = 0
 1845 0000 30B5     		push	{r4, r5, lr}
 1846              	.LCFI25:
 1847              		.cfi_def_cfa_offset 12
 1848              		.cfi_offset 4, -12
 1849              		.cfi_offset 5, -8
 1850              		.cfi_offset 14, -4
 1851 0002 83B0     		sub	sp, sp, #12
 1852              	.LCFI26:
 1853              		.cfi_def_cfa_offset 24
 1854              	.LVL150:
1192:Src/main.c    **** 		{
 1855              		.loc 1 1192 0
 1856 0004 0024     		movs	r4, #0
 1857 0006 1EE0     		b	.L101
 1858              	.LVL151:
 1859              	.L123:
1198:Src/main.c    **** 					bSignal[gHDMI_Index] = 0;
 1860              		.loc 1 1198 0
 1861 0008 774B     		ldr	r3, .L129
 1862 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1863 000c 142B     		cmp	r3, #20
 1864 000e 03D0     		beq	.L119
ARM GAS  /tmp/ccs2VtGF.s 			page 113


1201:Src/main.c    **** 			}
 1865              		.loc 1 1201 0
 1866 0010 764B     		ldr	r3, .L129+4
 1867 0012 0122     		movs	r2, #1
 1868 0014 1A55     		strb	r2, [r3, r4]
 1869 0016 23E0     		b	.L104
 1870              	.L119:
1199:Src/main.c    **** 				else
 1871              		.loc 1 1199 0
 1872 0018 744B     		ldr	r3, .L129+4
 1873 001a 0022     		movs	r2, #0
 1874 001c 1A55     		strb	r2, [r3, r4]
 1875 001e 1FE0     		b	.L104
 1876              	.L108:
1239:Src/main.c    **** 				}
 1877              		.loc 1 1239 0
 1878 0020 0120     		movs	r0, #1
 1879 0022 FFF7FEFF 		bl	SET_Audio_Mute
 1880              	.LVL152:
 1881              	.L106:
1243:Src/main.c    **** 			{
 1882              		.loc 1 1243 0
 1883 0026 724B     		ldr	r3, .L129+8
 1884 0028 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 1885 002a 704B     		ldr	r3, .L129+4
 1886 002c 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 1887 002e 012B     		cmp	r3, #1
 1888 0030 55D0     		beq	.L120
 1889              	.L109:
1254:Src/main.c    **** 			{
 1890              		.loc 1 1254 0
 1891 0032 6F4B     		ldr	r3, .L129+8
 1892 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1893 0036 6F4A     		ldr	r2, .L129+12
 1894 0038 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1895 003a 6F49     		ldr	r1, .L129+16
 1896 003c C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1897 003e 8A42     		cmp	r2, r1
 1898 0040 5AD1     		bne	.L121
 1899              	.L111:
1192:Src/main.c    **** 		{
 1900              		.loc 1 1192 0 discriminator 2
 1901 0042 0134     		adds	r4, r4, #1
 1902              	.LVL153:
 1903 0044 E4B2     		uxtb	r4, r4
 1904              	.LVL154:
 1905              	.L101:
1192:Src/main.c    **** 		{
 1906              		.loc 1 1192 0 is_stmt 0 discriminator 1
 1907 0046 012C     		cmp	r4, #1
 1908 0048 00F2CC80 		bhi	.L122
1194:Src/main.c    **** 			//--- Start --- 20201214-01
 1909              		.loc 1 1194 0 is_stmt 1
 1910 004c 684B     		ldr	r3, .L129+8
 1911 004e 1C70     		strb	r4, [r3]
1196:Src/main.c    **** 			{
 1912              		.loc 1 1196 0
ARM GAS  /tmp/ccs2VtGF.s 			page 114


 1913 0050 012C     		cmp	r4, #1
 1914 0052 D9D0     		beq	.L123
1205:Src/main.c    **** 
 1915              		.loc 1 1205 0
 1916 0054 FFF7FEFF 		bl	CheckHDMIRX
 1917              	.LVL155:
 1918 0058 654B     		ldr	r3, .L129+8
 1919 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1920 005c 634A     		ldr	r2, .L129+4
 1921 005e D054     		strb	r0, [r2, r3]
 1922              	.L104:
1212:Src/main.c    **** 			{
 1923              		.loc 1 1212 0
 1924 0060 634B     		ldr	r3, .L129+8
 1925 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1926 0064 654A     		ldr	r2, .L129+20
 1927 0066 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 1928 0068 654A     		ldr	r2, .L129+24
 1929 006a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1930 006c 9142     		cmp	r1, r2
 1931 006e 01D0     		beq	.L105
1214:Src/main.c    **** 			}
 1932              		.loc 1 1214 0
 1933 0070 6249     		ldr	r1, .L129+20
 1934 0072 CA54     		strb	r2, [r1, r3]
 1935              	.L105:
1217:Src/main.c    **** 			{
 1936              		.loc 1 1217 0
 1937 0074 5D4A     		ldr	r2, .L129+4
 1938 0076 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1939 0078 6249     		ldr	r1, .L129+28
 1940 007a C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1941 007c 8A42     		cmp	r2, r1
 1942 007e D2D0     		beq	.L106
1219:Src/main.c    **** 	
 1943              		.loc 1 1219 0
 1944 0080 6049     		ldr	r1, .L129+28
 1945 0082 CA54     		strb	r2, [r1, r3]
1221:Src/main.c    **** 				{
 1946              		.loc 1 1221 0
 1947 0084 002A     		cmp	r2, #0
 1948 0086 CED1     		bne	.L106
1223:Src/main.c    **** 					dbg_Printf("##ch%d, VS4210_Rx_NoSignal\r\n", (int)(i+1) ) ;
 1949              		.loc 1 1223 0
 1950 0088 2046     		mov	r0, r4
 1951 008a FFF7FEFF 		bl	VS4210_Rx_NoSignal
 1952              	.LVL156:
1224:Src/main.c    **** 					if (pVS4210_MutiWindows1.DrawOSDFlg != 0)
 1953              		.loc 1 1224 0
 1954 008e 631C     		adds	r3, r4, #1
 1955 0090 0093     		str	r3, [sp]
 1956 0092 4FF49963 		mov	r3, #1224
 1957 0096 5C4A     		ldr	r2, .L129+32
 1958 0098 5C49     		ldr	r1, .L129+36
 1959 009a 5D48     		ldr	r0, .L129+40
 1960 009c FFF7FEFF 		bl	printf
 1961              	.LVL157:
ARM GAS  /tmp/ccs2VtGF.s 			page 115


1225:Src/main.c    **** 					{
 1962              		.loc 1 1225 0
 1963 00a0 5C4B     		ldr	r3, .L129+44
 1964 00a2 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 1965 00a4 4BB1     		cbz	r3, .L107
1227:Src/main.c    **** 						Tim1_count = 0 ;
 1966              		.loc 1 1227 0
 1967 00a6 0122     		movs	r2, #1
 1968 00a8 5B4B     		ldr	r3, .L129+48
 1969 00aa 1A60     		str	r2, [r3]
1228:Src/main.c    **** 						OSDStateFlg = 1 ;
 1970              		.loc 1 1228 0
 1971 00ac 0023     		movs	r3, #0
 1972 00ae 5B49     		ldr	r1, .L129+52
 1973 00b0 0B60     		str	r3, [r1]
1229:Src/main.c    **** 						OSDSecCount = 0 ;
 1974              		.loc 1 1229 0
 1975 00b2 5B49     		ldr	r1, .L129+56
 1976 00b4 0A70     		strb	r2, [r1]
1230:Src/main.c    **** 					}
 1977              		.loc 1 1230 0
 1978 00b6 5B4A     		ldr	r2, .L129+60
 1979 00b8 1370     		strb	r3, [r2]
 1980              	.L107:
1232:Src/main.c    **** 					PrebVXIS_InputMode[gHDMI_Index] = _OSD_No_Signal ;
 1981              		.loc 1 1232 0
 1982 00ba 4D4B     		ldr	r3, .L129+8
 1983 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1984 00be 1422     		movs	r2, #20
 1985 00c0 4C49     		ldr	r1, .L129+12
 1986 00c2 CA54     		strb	r2, [r1, r3]
1233:Src/main.c    **** 
 1987              		.loc 1 1233 0
 1988 00c4 4C49     		ldr	r1, .L129+16
 1989 00c6 CA54     		strb	r2, [r1, r3]
1235:Src/main.c    **** 						Set_Video_Loss_OSD(0,ON);
 1990              		.loc 1 1235 0
 1991 00c8 574A     		ldr	r2, .L129+64
 1992 00ca 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1993 00cc 002A     		cmp	r2, #0
 1994 00ce A7D1     		bne	.L108
1235:Src/main.c    **** 						Set_Video_Loss_OSD(0,ON);
 1995              		.loc 1 1235 0 is_stmt 0 discriminator 1
 1996 00d0 002B     		cmp	r3, #0
 1997 00d2 A5D1     		bne	.L108
1236:Src/main.c    **** 					//MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);	
 1998              		.loc 1 1236 0 is_stmt 1
 1999 00d4 0121     		movs	r1, #1
 2000 00d6 0020     		movs	r0, #0
 2001 00d8 FFF7FEFF 		bl	Set_Video_Loss_OSD
 2002              	.LVL158:
 2003 00dc A0E7     		b	.L108
 2004              	.L120:
1246:Src/main.c    **** 					gbVXIS_InputMode[gHDMI_Index] = newInRes[0];
 2005              		.loc 1 1246 0
 2006 00de 012C     		cmp	r4, #1
 2007 00e0 05D0     		beq	.L124
ARM GAS  /tmp/ccs2VtGF.s 			page 116


1250:Src/main.c    **** 
 2008              		.loc 1 1250 0
 2009 00e2 2846     		mov	r0, r5
 2010 00e4 FFF7FEFF 		bl	GetHDMI_InputMode
 2011              	.LVL159:
 2012 00e8 424B     		ldr	r3, .L129+12
 2013 00ea 5855     		strb	r0, [r3, r5]
 2014 00ec A1E7     		b	.L109
 2015              	.L124:
1247:Src/main.c    **** 				else
 2016              		.loc 1 1247 0
 2017 00ee 3E4B     		ldr	r3, .L129
 2018 00f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2019 00f2 404B     		ldr	r3, .L129+12
 2020 00f4 5A55     		strb	r2, [r3, r5]
 2021 00f6 9CE7     		b	.L109
 2022              	.L121:
1256:Src/main.c    **** 
 2023              		.loc 1 1256 0
 2024 00f8 3F49     		ldr	r1, .L129+16
 2025 00fa CA54     		strb	r2, [r1, r3]
1258:Src/main.c    **** 					{
 2026              		.loc 1 1258 0
 2027 00fc FFF7FEFF 		bl	CHECK_HDMI720P50
 2028              	.LVL160:
 2029 0100 0028     		cmp	r0, #0
 2030 0102 4DD1     		bne	.L125
1262:Src/main.c    **** 				{
 2031              		.loc 1 1262 0
 2032 0104 3A4B     		ldr	r3, .L129+8
 2033 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2034 0108 3A4A     		ldr	r2, .L129+12
 2035 010a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2036 010c 142B     		cmp	r3, #20
 2037 010e 98D0     		beq	.L111
1264:Src/main.c    **** 
 2038              		.loc 1 1264 0
 2039 0110 2546     		mov	r5, r4
 2040 0112 404B     		ldr	r3, .L129+44
 2041 0114 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2042 0116 374B     		ldr	r3, .L129+12
 2043 0118 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 2044 011a 2046     		mov	r0, r4
 2045 011c FFF7FEFF 		bl	VS4210_SetInModeOutMode
 2046              	.LVL161:
1266:Src/main.c    **** 					VXISI2CWrite( 0x19, 0x01 );
 2047              		.loc 1 1266 0
 2048 0120 414B     		ldr	r3, .L129+64
 2049 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2050 0124 012B     		cmp	r3, #1
 2051 0126 45D0     		beq	.L126
 2052              	.L113:
1270:Src/main.c    **** 
 2053              		.loc 1 1270 0
 2054 0128 404B     		ldr	r3, .L129+68
 2055 012a 33F81530 		ldrh	r3, [r3, r5, lsl #1]
 2056 012e 404A     		ldr	r2, .L129+72
ARM GAS  /tmp/ccs2VtGF.s 			page 117


 2057 0130 32F81520 		ldrh	r2, [r2, r5, lsl #1]
 2058 0134 3F49     		ldr	r1, .L129+76
 2059 0136 31F81510 		ldrh	r1, [r1, r5, lsl #1]
 2060 013a 3F48     		ldr	r0, .L129+80
 2061 013c 30F81500 		ldrh	r0, [r0, r5, lsl #1]
 2062 0140 0090     		str	r0, [sp]
 2063 0142 2046     		mov	r0, r4
 2064 0144 FFF7FEFF 		bl	VS4210_SetInputSizeHV
 2065              	.LVL162:
1272:Src/main.c    **** 
 2066              		.loc 1 1272 0
 2067 0148 2A4B     		ldr	r3, .L129+12
 2068 014a 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 2069 014c 0193     		str	r3, [sp, #4]
 2070 014e 0135     		adds	r5, r5, #1
 2071 0150 0095     		str	r5, [sp]
 2072 0152 4FF49F63 		mov	r3, #1272
 2073 0156 2C4A     		ldr	r2, .L129+32
 2074 0158 2C49     		ldr	r1, .L129+36
 2075 015a 3848     		ldr	r0, .L129+84
 2076 015c FFF7FEFF 		bl	printf
 2077              	.LVL163:
1284:Src/main.c    **** 					{
 2078              		.loc 1 1284 0
 2079 0160 2C4B     		ldr	r3, .L129+44
 2080 0162 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 2081 0164 4BB1     		cbz	r3, .L114
1286:Src/main.c    **** 						Tim1_count = 0 ;
 2082              		.loc 1 1286 0
 2083 0166 0122     		movs	r2, #1
 2084 0168 2B4B     		ldr	r3, .L129+48
 2085 016a 1A60     		str	r2, [r3]
1287:Src/main.c    **** 						OSDStateFlg = 1 ;
 2086              		.loc 1 1287 0
 2087 016c 0023     		movs	r3, #0
 2088 016e 2B49     		ldr	r1, .L129+52
 2089 0170 0B60     		str	r3, [r1]
1288:Src/main.c    **** 						OSDSecCount = 0 ;
 2090              		.loc 1 1288 0
 2091 0172 2B49     		ldr	r1, .L129+56
 2092 0174 0A70     		strb	r2, [r1]
1289:Src/main.c    **** 					}
 2093              		.loc 1 1289 0
 2094 0176 2B4A     		ldr	r2, .L129+60
 2095 0178 1370     		strb	r3, [r2]
 2096              	.L114:
1292:Src/main.c    **** 						Set_Video_Loss_OSD(0,OFF);	
 2097              		.loc 1 1292 0
 2098 017a 2B4B     		ldr	r3, .L129+64
 2099 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2100 017e 13B9     		cbnz	r3, .L115
1292:Src/main.c    **** 						Set_Video_Loss_OSD(0,OFF);	
 2101              		.loc 1 1292 0 is_stmt 0 discriminator 1
 2102 0180 1B4B     		ldr	r3, .L129+8
 2103 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2104 0184 FBB1     		cbz	r3, .L127
 2105              	.L115:
ARM GAS  /tmp/ccs2VtGF.s 			page 118


1295:Src/main.c    **** 							{
 2106              		.loc 1 1295 0 is_stmt 1
 2107 0186 284B     		ldr	r3, .L129+64
 2108 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2109 018a 012B     		cmp	r3, #1
 2110 018c 20D0     		beq	.L128
 2111              	.L116:
1300:Src/main.c    **** 						SET_Audio_Mute(OFF);	
 2112              		.loc 1 1300 0
 2113 018e 184B     		ldr	r3, .L129+8
 2114 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2115 0192 002B     		cmp	r3, #0
 2116 0194 7FF455AF 		bne	.L111
1301:Src/main.c    **** 						//MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);
 2117              		.loc 1 1301 0
 2118 0198 0020     		movs	r0, #0
 2119 019a FFF7FEFF 		bl	SET_Audio_Mute
 2120              	.LVL164:
 2121 019e 50E7     		b	.L111
 2122              	.L125:
1260:Src/main.c    **** 					}
 2123              		.loc 1 1260 0
 2124 01a0 631C     		adds	r3, r4, #1
 2125 01a2 0093     		str	r3, [sp]
 2126 01a4 40F2EC43 		movw	r3, #1260
 2127 01a8 174A     		ldr	r2, .L129+32
 2128 01aa 1849     		ldr	r1, .L129+36
 2129 01ac 2448     		ldr	r0, .L129+88
 2130 01ae FFF7FEFF 		bl	printf
 2131              	.LVL165:
 2132 01b2 46E7     		b	.L111
 2133              	.L126:
1266:Src/main.c    **** 					VXISI2CWrite( 0x19, 0x01 );
 2134              		.loc 1 1266 0 discriminator 1
 2135 01b4 0E4B     		ldr	r3, .L129+8
 2136 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2137 01b8 012B     		cmp	r3, #1
 2138 01ba B5D1     		bne	.L113
1267:Src/main.c    **** 							
 2139              		.loc 1 1267 0
 2140 01bc 0121     		movs	r1, #1
 2141 01be 1920     		movs	r0, #25
 2142 01c0 FFF7FEFF 		bl	VXISI2CWrite
 2143              	.LVL166:
 2144 01c4 B0E7     		b	.L113
 2145              	.L127:
1293:Src/main.c    **** 
 2146              		.loc 1 1293 0
 2147 01c6 0021     		movs	r1, #0
 2148 01c8 0846     		mov	r0, r1
 2149 01ca FFF7FEFF 		bl	Set_Video_Loss_OSD
 2150              	.LVL167:
 2151 01ce DAE7     		b	.L115
 2152              	.L128:
1295:Src/main.c    **** 							{
 2153              		.loc 1 1295 0 discriminator 1
 2154 01d0 074B     		ldr	r3, .L129+8
ARM GAS  /tmp/ccs2VtGF.s 			page 119


 2155 01d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2156 01d4 012B     		cmp	r3, #1
 2157 01d6 DAD1     		bne	.L116
1297:Src/main.c    **** 							}
 2158              		.loc 1 1297 0
 2159 01d8 4021     		movs	r1, #64
 2160 01da 4FF47A70 		mov	r0, #1000
 2161 01de FFF7FEFF 		bl	MCUTimerActiveTimerEvent
 2162              	.LVL168:
 2163 01e2 D4E7     		b	.L116
 2164              	.L122:
1306:Src/main.c    **** 
 2165              		.loc 1 1306 0
 2166 01e4 03B0     		add	sp, sp, #12
 2167              	.LCFI27:
 2168              		.cfi_def_cfa_offset 12
 2169              		@ sp needed
 2170 01e6 30BD     		pop	{r4, r5, pc}
 2171              	.LVL169:
 2172              	.L130:
 2173              		.align	2
 2174              	.L129:
 2175 01e8 00000000 		.word	newInRes
 2176 01ec 00000000 		.word	.LANCHOR9
 2177 01f0 00000000 		.word	gHDMI_Index
 2178 01f4 00000000 		.word	gbVXIS_InputMode
 2179 01f8 00000000 		.word	.LANCHOR16
 2180 01fc 00000000 		.word	PreVState
 2181 0200 00000000 		.word	VState
 2182 0204 00000000 		.word	.LANCHOR10
 2183 0208 00000000 		.word	.LANCHOR11
 2184 020c 00000000 		.word	.LC20
 2185 0210 00000000 		.word	.LC22
 2186 0214 00000000 		.word	pVS4210_MutiWindows1
 2187 0218 00000000 		.word	.LANCHOR12
 2188 021c 00000000 		.word	.LANCHOR13
 2189 0220 00000000 		.word	.LANCHOR14
 2190 0224 00000000 		.word	.LANCHOR15
 2191 0228 00000000 		.word	.LANCHOR17
 2192 022c 00000000 		.word	gHTotal
 2193 0230 00000000 		.word	gVActive
 2194 0234 00000000 		.word	gHActive
 2195 0238 00000000 		.word	gVTotal
 2196 023c 0C000000 		.word	.LC21
 2197 0240 28000000 		.word	.LC23
 2198              		.cfi_endproc
 2199              	.LFE75:
 2201              		.section	.text.main_init,"ax",%progbits
 2202              		.align	1
 2203              		.global	main_init
 2204              		.syntax unified
 2205              		.thumb
 2206              		.thumb_func
 2207              		.fpu softvfp
 2209              	main_init:
 2210              	.LFB77:
1333:Src/main.c    **** 
ARM GAS  /tmp/ccs2VtGF.s 			page 120


 2211              		.loc 1 1333 0
 2212              		.cfi_startproc
 2213              		@ args = 0, pretend = 0, frame = 0
 2214              		@ frame_needed = 0, uses_anonymous_args = 0
 2215 0000 38B5     		push	{r3, r4, r5, lr}
 2216              	.LCFI28:
 2217              		.cfi_def_cfa_offset 16
 2218              		.cfi_offset 3, -16
 2219              		.cfi_offset 4, -12
 2220              		.cfi_offset 5, -8
 2221              		.cfi_offset 14, -4
1337:Src/main.c    **** 		Printf("\r\nPrev.FW:%04x\r\n", rev);
 2222              		.loc 1 1337 0
 2223 0002 FFF7FEFF 		bl	GetFWRevEE
 2224              	.LVL170:
 2225 0006 0446     		mov	r4, r0
 2226              	.LVL171:
1338:Src/main.c    **** 		
 2227              		.loc 1 1338 0
 2228 0008 0146     		mov	r1, r0
 2229 000a 1A48     		ldr	r0, .L139
 2230              	.LVL172:
 2231 000c FFF7FEFF 		bl	Printf
 2232              	.LVL173:
1340:Src/main.c    **** 		{					
 2233              		.loc 1 1340 0
 2234 0010 FFF7FEFF 		bl	GetFWRevEE
 2235              	.LVL174:
 2236 0014 41F21003 		movw	r3, #4112
 2237 0018 9842     		cmp	r0, r3
 2238 001a 0BD1     		bne	.L137
 2239              	.L132:
1347:Src/main.c    **** 		{					// exist EEPROM
 2240              		.loc 1 1347 0
 2241 001c FFF7FEFF 		bl	GetFWRevEE
 2242              	.LVL175:
 2243 0020 41F21003 		movw	r3, #4112
 2244 0024 9842     		cmp	r0, r3
 2245 0026 1BD1     		bne	.L133
1349:Src/main.c    **** 				{
 2246              		.loc 1 1349 0
 2247 0028 9C42     		cmp	r4, r3
 2248 002a 13D1     		bne	.L138
 2249              	.L134:
1370:Src/main.c    **** 	
 2250              		.loc 1 1370 0
 2251 002c 6420     		movs	r0, #100
 2252 002e FFF7FEFF 		bl	delay
 2253              	.LVL176:
 2254              	.L131:
1376:Src/main.c    **** 
 2255              		.loc 1 1376 0
 2256 0032 38BD     		pop	{r3, r4, r5, pc}
 2257              	.LVL177:
 2258              	.L137:
1342:Src/main.c    **** 			SaveFWRevEE(FWVER);
 2259              		.loc 1 1342 0
ARM GAS  /tmp/ccs2VtGF.s 			page 121


 2260 0034 104D     		ldr	r5, .L139+4
 2261 0036 1946     		mov	r1, r3
 2262 0038 2846     		mov	r0, r5
 2263 003a FFF7FEFF 		bl	Printf
 2264              	.LVL178:
1343:Src/main.c    **** 			Printf("\r\nCurr.FW:%04x", (WORD)GetFWRevEE());
 2265              		.loc 1 1343 0
 2266 003e 41F21000 		movw	r0, #4112
 2267 0042 FFF7FEFF 		bl	SaveFWRevEE
 2268              	.LVL179:
1344:Src/main.c    **** 		}
 2269              		.loc 1 1344 0
 2270 0046 FFF7FEFF 		bl	GetFWRevEE
 2271              	.LVL180:
 2272 004a 0146     		mov	r1, r0
 2273 004c 2846     		mov	r0, r5
 2274 004e FFF7FEFF 		bl	Printf
 2275              	.LVL181:
 2276 0052 E3E7     		b	.L132
 2277              	.L138:
1351:Src/main.c    **** 			
 2278              		.loc 1 1351 0
 2279 0054 FFF7FEFF 		bl	ClearBasicEE
 2280              	.LVL182:
1353:Src/main.c    **** 				}
 2281              		.loc 1 1353 0
 2282 0058 0848     		ldr	r0, .L139+8
 2283 005a FFF7FEFF 		bl	Printf
 2284              	.LVL183:
 2285 005e E5E7     		b	.L134
 2286              	.L133:
1363:Src/main.c    **** 			Printf("\r\nNo initialize");
 2287              		.loc 1 1363 0
 2288 0060 0748     		ldr	r0, .L139+12
 2289 0062 FFF7FEFF 		bl	Printf
 2290              	.LVL184:
1364:Src/main.c    **** 			DebugLevel = 0xff;
 2291              		.loc 1 1364 0
 2292 0066 0748     		ldr	r0, .L139+16
 2293 0068 FFF7FEFF 		bl	Printf
 2294              	.LVL185:
1365:Src/main.c    **** 			return;
 2295              		.loc 1 1365 0
 2296 006c 064B     		ldr	r3, .L139+20
 2297 006e FF22     		movs	r2, #255
 2298 0070 1A70     		strb	r2, [r3]
1366:Src/main.c    **** 		}
 2299              		.loc 1 1366 0
 2300 0072 DEE7     		b	.L131
 2301              	.L140:
 2302              		.align	2
 2303              	.L139:
 2304 0074 00000000 		.word	.LC24
 2305 0078 14000000 		.word	.LC25
 2306 007c 24000000 		.word	.LC26
 2307 0080 60000000 		.word	.LC27
 2308 0084 7C000000 		.word	.LC28
ARM GAS  /tmp/ccs2VtGF.s 			page 122


 2309 0088 00000000 		.word	DebugLevel
 2310              		.cfi_endproc
 2311              	.LFE77:
 2313              		.section	.text.LCDPowerON,"ax",%progbits
 2314              		.align	1
 2315              		.global	LCDPowerON
 2316              		.syntax unified
 2317              		.thumb
 2318              		.thumb_func
 2319              		.fpu softvfp
 2321              	LCDPowerON:
 2322              	.LFB79:
1475:Src/main.c    **** /*
 2323              		.loc 1 1475 0
 2324              		.cfi_startproc
 2325              		@ args = 0, pretend = 0, frame = 0
 2326              		@ frame_needed = 0, uses_anonymous_args = 0
 2327              		@ link register save eliminated.
1497:Src/main.c    **** 
 2328              		.loc 1 1497 0
 2329 0000 7047     		bx	lr
 2330              		.cfi_endproc
 2331              	.LFE79:
 2333              		.section	.text.LCDPowerOFF,"ax",%progbits
 2334              		.align	1
 2335              		.global	LCDPowerOFF
 2336              		.syntax unified
 2337              		.thumb
 2338              		.thumb_func
 2339              		.fpu softvfp
 2341              	LCDPowerOFF:
 2342              	.LFB80:
1500:Src/main.c    **** /*
 2343              		.loc 1 1500 0
 2344              		.cfi_startproc
 2345              		@ args = 0, pretend = 0, frame = 0
 2346              		@ frame_needed = 0, uses_anonymous_args = 0
 2347              		@ link register save eliminated.
1535:Src/main.c    **** 
 2348              		.loc 1 1535 0
 2349 0000 7047     		bx	lr
 2350              		.cfi_endproc
 2351              	.LFE80:
 2353              		.section	.text.uComOnChipInitial,"ax",%progbits
 2354              		.align	1
 2355              		.global	uComOnChipInitial
 2356              		.syntax unified
 2357              		.thumb
 2358              		.thumb_func
 2359              		.fpu softvfp
 2361              	uComOnChipInitial:
 2362              	.LFB81:
1546:Src/main.c    **** 
 2363              		.loc 1 1546 0
 2364              		.cfi_startproc
 2365              		@ args = 0, pretend = 0, frame = 0
 2366              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccs2VtGF.s 			page 123


 2367 0000 10B5     		push	{r4, lr}
 2368              	.LCFI29:
 2369              		.cfi_def_cfa_offset 8
 2370              		.cfi_offset 4, -8
 2371              		.cfi_offset 14, -4
1551:Src/main.c    **** PCON1V2_TP(ON);      
 2372              		.loc 1 1551 0
 2373 0002 084C     		ldr	r4, .L145
 2374 0004 0022     		movs	r2, #0
 2375 0006 4021     		movs	r1, #64
 2376 0008 2046     		mov	r0, r4
 2377 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 2378              	.LVL186:
1552:Src/main.c    **** 
 2379              		.loc 1 1552 0
 2380 000e 0022     		movs	r2, #0
 2381 0010 2021     		movs	r1, #32
 2382 0012 2046     		mov	r0, r4
 2383 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2384              	.LVL187:
1554:Src/main.c    **** 
 2385              		.loc 1 1554 0
 2386 0018 0122     		movs	r2, #1
 2387 001a 1021     		movs	r1, #16
 2388 001c 2046     		mov	r0, r4
 2389 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 2390              	.LVL188:
1613:Src/main.c    **** 
 2391              		.loc 1 1613 0
 2392 0022 10BD     		pop	{r4, pc}
 2393              	.L146:
 2394              		.align	2
 2395              	.L145:
 2396 0024 00080140 		.word	1073809408
 2397              		.cfi_endproc
 2398              	.LFE81:
 2400              		.section	.text.user_pwm_setvalue,"ax",%progbits
 2401              		.align	1
 2402              		.global	user_pwm_setvalue
 2403              		.syntax unified
 2404              		.thumb
 2405              		.thumb_func
 2406              		.fpu softvfp
 2408              	user_pwm_setvalue:
 2409              	.LFB82:
1616:Src/main.c    ****     TIM_OC_InitTypeDef sConfigOC;
 2410              		.loc 1 1616 0
 2411              		.cfi_startproc
 2412              		@ args = 0, pretend = 0, frame = 32
 2413              		@ frame_needed = 0, uses_anonymous_args = 0
 2414              	.LVL189:
 2415 0000 10B5     		push	{r4, lr}
 2416              	.LCFI30:
 2417              		.cfi_def_cfa_offset 8
 2418              		.cfi_offset 4, -8
 2419              		.cfi_offset 14, -4
 2420 0002 88B0     		sub	sp, sp, #32
ARM GAS  /tmp/ccs2VtGF.s 			page 124


 2421              	.LCFI31:
 2422              		.cfi_def_cfa_offset 40
1619:Src/main.c    ****     sConfigOC.Pulse = value;
 2423              		.loc 1 1619 0
 2424 0004 6023     		movs	r3, #96
 2425 0006 0193     		str	r3, [sp, #4]
1620:Src/main.c    ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2426              		.loc 1 1620 0
 2427 0008 0290     		str	r0, [sp, #8]
1621:Src/main.c    ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2428              		.loc 1 1621 0
 2429 000a 0023     		movs	r3, #0
 2430 000c 0393     		str	r3, [sp, #12]
1622:Src/main.c    ****     HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3);
 2431              		.loc 1 1622 0
 2432 000e 0593     		str	r3, [sp, #20]
1623:Src/main.c    ****     HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);  
 2433              		.loc 1 1623 0
 2434 0010 054C     		ldr	r4, .L149
 2435 0012 0822     		movs	r2, #8
 2436 0014 01A9     		add	r1, sp, #4
 2437 0016 2046     		mov	r0, r4
 2438              	.LVL190:
 2439 0018 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2440              	.LVL191:
1624:Src/main.c    **** }
 2441              		.loc 1 1624 0
 2442 001c 0821     		movs	r1, #8
 2443 001e 2046     		mov	r0, r4
 2444 0020 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 2445              	.LVL192:
1625:Src/main.c    **** 
 2446              		.loc 1 1625 0
 2447 0024 08B0     		add	sp, sp, #32
 2448              	.LCFI32:
 2449              		.cfi_def_cfa_offset 8
 2450              		@ sp needed
 2451 0026 10BD     		pop	{r4, pc}
 2452              	.L150:
 2453              		.align	2
 2454              	.L149:
 2455 0028 00000000 		.word	htim2
 2456              		.cfi_endproc
 2457              	.LFE82:
 2459              		.section	.text.AdjustAutoDayNight,"ax",%progbits
 2460              		.align	1
 2461              		.global	AdjustAutoDayNight
 2462              		.syntax unified
 2463              		.thumb
 2464              		.thumb_func
 2465              		.fpu softvfp
 2467              	AdjustAutoDayNight:
 2468              	.LFB78:
1380:Src/main.c    **** //	BYTE page;
 2469              		.loc 1 1380 0
 2470              		.cfi_startproc
 2471              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccs2VtGF.s 			page 125


 2472              		@ frame_needed = 0, uses_anonymous_args = 0
 2473              	.LVL193:
 2474 0000 08B5     		push	{r3, lr}
 2475              	.LCFI33:
 2476              		.cfi_def_cfa_offset 8
 2477              		.cfi_offset 3, -8
 2478              		.cfi_offset 14, -4
 2479              	.LVL194:
1383:Src/main.c    **** 
 2480              		.loc 1 1383 0
 2481 0002 C043     		mvns	r0, r0
 2482              	.LVL195:
 2483 0004 C0B2     		uxtb	r0, r0
 2484              	.LVL196:
1386:Src/main.c    **** 		PWMLevelTemp=0+70;
 2485              		.loc 1 1386 0
 2486 0006 6328     		cmp	r0, #99
 2487 0008 12D9     		bls	.L157
1388:Src/main.c    **** 		PWMLevelTemp=20+70;//20;
 2488              		.loc 1 1388 0
 2489 000a A0F16403 		sub	r3, r0, #100
 2490 000e DBB2     		uxtb	r3, r3
 2491 0010 272B     		cmp	r3, #39
 2492 0012 24D9     		bls	.L158
1390:Src/main.c    **** 		PWMLevelTemp=40+70;//50;
 2493              		.loc 1 1390 0
 2494 0014 00F17403 		add	r3, r0, #116
 2495 0018 DBB2     		uxtb	r3, r3
 2496 001a 272B     		cmp	r3, #39
 2497 001c 21D9     		bls	.L159
1392:Src/main.c    **** 		PWMLevelTemp=60+70;//65;
 2498              		.loc 1 1392 0
 2499 001e 00F14C03 		add	r3, r0, #76
 2500 0022 DBB2     		uxtb	r3, r3
 2501 0024 272B     		cmp	r3, #39
 2502 0026 1ED9     		bls	.L160
1394:Src/main.c    **** 	{
 2503              		.loc 1 1394 0
 2504 0028 DB28     		cmp	r0, #219
 2505 002a 1ED8     		bhi	.L161
1382:Src/main.c    **** 	val=0xff-val;
 2506              		.loc 1 1382 0
 2507 002c 0022     		movs	r2, #0
 2508 002e 00E0     		b	.L152
 2509              	.L157:
1387:Src/main.c    **** 	else if(val>=100&&val<140)
 2510              		.loc 1 1387 0
 2511 0030 4622     		movs	r2, #70
 2512              	.L152:
 2513              	.LVL197:
1426:Src/main.c    **** 	{
 2514              		.loc 1 1426 0
 2515 0032 164B     		ldr	r3, .L163
 2516 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2517 0036 012B     		cmp	r3, #1
 2518 0038 1FD1     		bne	.L153
1432:Src/main.c    **** 				PWMLevel-=1;
ARM GAS  /tmp/ccs2VtGF.s 			page 126


 2519              		.loc 1 1432 0
 2520 003a 154B     		ldr	r3, .L163+4
 2521 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2522 003e 9342     		cmp	r3, r2
 2523 0040 15D9     		bls	.L154
1433:Src/main.c    **** 			else if(PWMLevel < PWMLevelTemp)
 2524              		.loc 1 1433 0
 2525 0042 013B     		subs	r3, r3, #1
 2526 0044 124A     		ldr	r2, .L163+4
 2527              	.LVL198:
 2528 0046 1370     		strb	r3, [r2]
 2529              	.L155:
1437:Src/main.c    **** 		}
 2530              		.loc 1 1437 0
 2531 0048 124B     		ldr	r3, .L163+8
 2532 004a 0022     		movs	r2, #0
 2533 004c 1A70     		strb	r2, [r3]
1445:Src/main.c    **** 
 2534              		.loc 1 1445 0
 2535 004e 104B     		ldr	r3, .L163+4
 2536 0050 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2537              	.LVL199:
 2538 0052 C0EB0010 		rsb	r0, r0, r0, lsl #4
 2539 0056 80B2     		uxth	r0, r0
 2540 0058 FFF7FEFF 		bl	user_pwm_setvalue
 2541              	.LVL200:
 2542              	.L151:
1473:Src/main.c    **** void LCDPowerON(void)
 2543              		.loc 1 1473 0
 2544 005c 08BD     		pop	{r3, pc}
 2545              	.LVL201:
 2546              	.L158:
1389:Src/main.c    **** 	else if(val>=140&&val<180)
 2547              		.loc 1 1389 0
 2548 005e 5A22     		movs	r2, #90
 2549 0060 E7E7     		b	.L152
 2550              	.L159:
1391:Src/main.c    **** 	else if(val>=180&&val<220)
 2551              		.loc 1 1391 0
 2552 0062 6E22     		movs	r2, #110
 2553 0064 E5E7     		b	.L152
 2554              	.L160:
1393:Src/main.c    **** 	else if(val>=220&&val<=255)//andy 20110414
 2555              		.loc 1 1393 0
 2556 0066 8222     		movs	r2, #130
 2557 0068 E3E7     		b	.L152
 2558              	.L161:
1397:Src/main.c    **** 		//#else
 2559              		.loc 1 1397 0
 2560 006a 9122     		movs	r2, #145
 2561 006c E1E7     		b	.L152
 2562              	.LVL202:
 2563              	.L154:
1434:Src/main.c    **** 				PWMLevel+=1;
 2564              		.loc 1 1434 0
 2565 006e 9342     		cmp	r3, r2
 2566 0070 EAD2     		bcs	.L155
ARM GAS  /tmp/ccs2VtGF.s 			page 127


1435:Src/main.c    **** 
 2567              		.loc 1 1435 0
 2568 0072 0133     		adds	r3, r3, #1
 2569 0074 064A     		ldr	r2, .L163+4
 2570              	.LVL203:
 2571 0076 1370     		strb	r3, [r2]
 2572 0078 E6E7     		b	.L155
 2573              	.LVL204:
 2574              	.L153:
1451:Src/main.c    **** 	//		Printf("(PWMLevel2=%02x)",(WORD)PWMLevel);
 2575              		.loc 1 1451 0
 2576 007a 054B     		ldr	r3, .L163+4
 2577 007c FF22     		movs	r2, #255
 2578              	.LVL205:
 2579 007e 1A70     		strb	r2, [r3]
1453:Src/main.c    **** 	}
 2580              		.loc 1 1453 0
 2581 0080 4FF47A60 		mov	r0, #4000
 2582              	.LVL206:
 2583 0084 FFF7FEFF 		bl	user_pwm_setvalue
 2584              	.LVL207:
1473:Src/main.c    **** void LCDPowerON(void)
 2585              		.loc 1 1473 0
 2586 0088 E8E7     		b	.L151
 2587              	.L164:
 2588 008a 00BF     		.align	2
 2589              	.L163:
 2590 008c 00000000 		.word	.LANCHOR18
 2591 0090 00000000 		.word	.LANCHOR19
 2592 0094 00000000 		.word	.LANCHOR20
 2593              		.cfi_endproc
 2594              	.LFE78:
 2596              		.section	.text.LoadEEPROM,"ax",%progbits
 2597              		.align	1
 2598              		.global	LoadEEPROM
 2599              		.syntax unified
 2600              		.thumb
 2601              		.thumb_func
 2602              		.fpu softvfp
 2604              	LoadEEPROM:
 2605              	.LFB83:
1628:Src/main.c    **** #if 0
 2606              		.loc 1 1628 0
 2607              		.cfi_startproc
 2608              		@ args = 0, pretend = 0, frame = 0
 2609              		@ frame_needed = 0, uses_anonymous_args = 0
 2610              		@ link register save eliminated.
1650:Src/main.c    **** 
 2611              		.loc 1 1650 0
 2612 0000 7047     		bx	lr
 2613              		.cfi_endproc
 2614              	.LFE83:
 2616              		.section	.text.WaitPowerOn,"ax",%progbits
 2617              		.align	1
 2618              		.global	WaitPowerOn
 2619              		.syntax unified
 2620              		.thumb
ARM GAS  /tmp/ccs2VtGF.s 			page 128


 2621              		.thumb_func
 2622              		.fpu softvfp
 2624              	WaitPowerOn:
 2625              	.LFB84:
1653:Src/main.c    **** BYTE val;
 2626              		.loc 1 1653 0
 2627              		.cfi_startproc
 2628              		@ args = 0, pretend = 0, frame = 0
 2629              		@ frame_needed = 0, uses_anonymous_args = 0
 2630 0000 10B5     		push	{r4, lr}
 2631              	.LCFI34:
 2632              		.cfi_def_cfa_offset 8
 2633              		.cfi_offset 4, -8
 2634              		.cfi_offset 14, -4
1655:Src/main.c    **** 
 2635              		.loc 1 1655 0
 2636 0002 2C20     		movs	r0, #44
 2637 0004 FFF7FEFF 		bl	PowerLED
 2638              	.LVL208:
1659:Src/main.c    **** 
 2639              		.loc 1 1659 0
 2640 0008 1120     		movs	r0, #17
 2641 000a FFF7FEFF 		bl	MCUTimerCancelTimerEvent
 2642              	.LVL209:
1661:Src/main.c    **** 		
 2643              		.loc 1 1661 0
 2644 000e 1D48     		ldr	r0, .L176
 2645 0010 FFF7FEFF 		bl	Printf
 2646              	.LVL210:
 2647 0014 20E0     		b	.L170
 2648              	.L175:
1670:Src/main.c    **** 				break;		//poweron
 2649              		.loc 1 1670 0
 2650 0016 AB20     		movs	r0, #171
 2651 0018 FFF7FEFF 		bl	WriteEEP
 2652              	.LVL211:
1729:Src/main.c    **** //	SHOWOSDINFO();	
 2653              		.loc 1 1729 0
 2654 001c 2A20     		movs	r0, #42
 2655 001e FFF7FEFF 		bl	PowerLED
 2656              	.LVL212:
1735:Src/main.c    **** 	MCUTimerActiveTimerEvent(SEC(2),_USER_TIMER_EVENT_DISPLAY_DISABLE);
 2657              		.loc 1 1735 0
 2658 0022 0F20     		movs	r0, #15
 2659 0024 FFF7FEFF 		bl	MCUTimerCancelTimerEvent
 2660              	.LVL213:
1736:Src/main.c    **** 
 2661              		.loc 1 1736 0
 2662 0028 0F21     		movs	r1, #15
 2663 002a 4FF4FA60 		mov	r0, #2000
 2664 002e FFF7FEFF 		bl	MCUTimerActiveTimerEvent
 2665              	.LVL214:
1740:Src/main.c    **** //LCDPowerON();
 2666              		.loc 1 1740 0
 2667 0032 1121     		movs	r1, #17
 2668 0034 4FF47A70 		mov	r0, #1000
 2669 0038 FFF7FEFF 		bl	MCUTimerActiveTimerEvent
ARM GAS  /tmp/ccs2VtGF.s 			page 129


 2670              	.LVL215:
1742:Src/main.c    **** 
 2671              		.loc 1 1742 0
 2672 003c 1248     		ldr	r0, .L176+4
 2673 003e FFF7FEFF 		bl	Printf
 2674              	.LVL216:
1745:Src/main.c    **** 
 2675              		.loc 1 1745 0
 2676 0042 10BD     		pop	{r4, pc}
 2677              	.LVL217:
 2678              	.L168:
1697:Src/main.c    **** 
 2679              		.loc 1 1697 0
 2680 0044 FFF7FEFF 		bl	TriggerHandler
 2681              	.LVL218:
 2682              	.L169:
1719:Src/main.c    **** 		   	  EQ_Detect();	 
 2683              		.loc 1 1719 0
 2684 0048 FFF7FEFF 		bl	SysTimerHandler
 2685              	.LVL219:
1720:Src/main.c    **** 			  
 2686              		.loc 1 1720 0
 2687 004c FFF7FEFF 		bl	EQ_Detect
 2688              	.LVL220:
1723:Src/main.c    **** 
 2689              		.loc 1 1723 0
 2690 0050 0120     		movs	r0, #1
 2691 0052 FFF7FEFF 		bl	GT9147_Scan
 2692              	.LVL221:
 2693 0056 88B9     		cbnz	r0, .L174
 2694              	.L170:
1666:Src/main.c    **** 			if(PowerFlag==ON)
 2695              		.loc 1 1666 0
 2696 0058 FFF7FEFF 		bl	CheckKeyIn
 2697              	.LVL222:
1667:Src/main.c    **** 			{
 2698              		.loc 1 1667 0
 2699 005c 0B4B     		ldr	r3, .L176+8
 2700 005e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2701 0060 0129     		cmp	r1, #1
 2702 0062 D8D0     		beq	.L175
1674:Src/main.c    **** 		 
 2703              		.loc 1 1674 0
 2704 0064 FFF7FEFF 		bl	CheckTrigger
 2705              	.LVL223:
1678:Src/main.c    **** 		{	
 2706              		.loc 1 1678 0
 2707 0068 0446     		mov	r4, r0
 2708 006a 0028     		cmp	r0, #0
 2709 006c EAD0     		beq	.L168
1680:Src/main.c    **** 			TriggerHandler(val);
 2710              		.loc 1 1680 0
 2711 006e 2A20     		movs	r0, #42
 2712              	.LVL224:
 2713 0070 FFF7FEFF 		bl	PowerLED
 2714              	.LVL225:
1681:Src/main.c    **** 			//	AudioMute(OFF);
ARM GAS  /tmp/ccs2VtGF.s 			page 130


 2715              		.loc 1 1681 0
 2716 0074 2046     		mov	r0, r4
 2717 0076 FFF7FEFF 		bl	TriggerHandler
 2718              	.LVL226:
 2719 007a E5E7     		b	.L169
 2720              	.L174:
1725:Src/main.c    **** 					
 2721              		.loc 1 1725 0
 2722 007c 034B     		ldr	r3, .L176+8
 2723 007e 0122     		movs	r2, #1
 2724 0080 1A70     		strb	r2, [r3]
 2725 0082 E9E7     		b	.L170
 2726              	.L177:
 2727              		.align	2
 2728              	.L176:
 2729 0084 00000000 		.word	.LC29
 2730 0088 10000000 		.word	.LC30
 2731 008c 00000000 		.word	.LANCHOR21
 2732              		.cfi_endproc
 2733              	.LFE84:
 2735              		.section	.text.VS4210_FULL88init2,"ax",%progbits
 2736              		.align	1
 2737              		.global	VS4210_FULL88init2
 2738              		.syntax unified
 2739              		.thumb
 2740              		.thumb_func
 2741              		.fpu softvfp
 2743              	VS4210_FULL88init2:
 2744              	.LFB87:
2251:Src/main.c    **** 	 tByte i ;
 2745              		.loc 1 2251 0
 2746              		.cfi_startproc
 2747              		@ args = 0, pretend = 0, frame = 0
 2748              		@ frame_needed = 0, uses_anonymous_args = 0
 2749              	.LVL227:
 2750 0000 38B5     		push	{r3, r4, r5, lr}
 2751              	.LCFI35:
 2752              		.cfi_def_cfa_offset 16
 2753              		.cfi_offset 3, -16
 2754              		.cfi_offset 4, -12
 2755              		.cfi_offset 5, -8
 2756              		.cfi_offset 14, -4
 2757 0002 0546     		mov	r5, r0
 2758              	.LVL228:
2258:Src/main.c    **** 	 {
 2759              		.loc 1 2258 0
 2760 0004 0024     		movs	r4, #0
 2761 0006 06E0     		b	.L179
 2762              	.LVL229:
 2763              	.L180:
2262:Src/main.c    **** 	 }
 2764              		.loc 1 2262 0 discriminator 3
 2765 0008 295D     		ldrb	r1, [r5, r4]	@ zero_extendqisi2
 2766              	.LVL230:
 2767 000a 044B     		ldr	r3, .L182
 2768 000c 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 2769              	.LVL231:
ARM GAS  /tmp/ccs2VtGF.s 			page 131


 2770 000e FFF7FEFF 		bl	VXISI2CWrite
 2771              	.LVL232:
2258:Src/main.c    **** 	 {
 2772              		.loc 1 2258 0 discriminator 3
 2773 0012 0134     		adds	r4, r4, #1
 2774              	.LVL233:
 2775 0014 E4B2     		uxtb	r4, r4
 2776              	.LVL234:
 2777              	.L179:
2258:Src/main.c    **** 	 {
 2778              		.loc 1 2258 0 is_stmt 0 discriminator 1
 2779 0016 572C     		cmp	r4, #87
 2780 0018 F6D9     		bls	.L180
2264:Src/main.c    **** 
 2781              		.loc 1 2264 0 is_stmt 1
 2782 001a 38BD     		pop	{r3, r4, r5, pc}
 2783              	.LVL235:
 2784              	.L183:
 2785              		.align	2
 2786              	.L182:
 2787 001c 00000000 		.word	VS4210_Addr_88param
 2788              		.cfi_endproc
 2789              	.LFE87:
 2791              		.section	.text.TP_bt1120_1080P_1080P_mode0_w0,"ax",%progbits
 2792              		.align	1
 2793              		.global	TP_bt1120_1080P_1080P_mode0_w0
 2794              		.syntax unified
 2795              		.thumb
 2796              		.thumb_func
 2797              		.fpu softvfp
 2799              	TP_bt1120_1080P_1080P_mode0_w0:
 2800              	.LFB88:
2267:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table 1080P... ");
 2801              		.loc 1 2267 0
 2802              		.cfi_startproc
 2803              		@ args = 0, pretend = 0, frame = 0
 2804              		@ frame_needed = 0, uses_anonymous_args = 0
 2805 0000 08B5     		push	{r3, lr}
 2806              	.LCFI36:
 2807              		.cfi_def_cfa_offset 8
 2808              		.cfi_offset 3, -8
 2809              		.cfi_offset 14, -4
2268:Src/main.c    **** #if 1
 2810              		.loc 1 2268 0
 2811 0002 0348     		ldr	r0, .L186
 2812 0004 FFF7FEFF 		bl	Printf
 2813              	.LVL236:
2271:Src/main.c    **** #else
 2814              		.loc 1 2271 0
 2815 0008 0248     		ldr	r0, .L186+4
 2816 000a FFF7FEFF 		bl	VS4210_FULL88init2
 2817              	.LVL237:
2775:Src/main.c    **** 
 2818              		.loc 1 2775 0
 2819 000e 08BD     		pop	{r3, pc}
 2820              	.L187:
 2821              		.align	2
ARM GAS  /tmp/ccs2VtGF.s 			page 132


 2822              	.L186:
 2823 0010 00000000 		.word	.LC31
 2824 0014 00000000 		.word	VS4210_TP_bt1120_1080P_1080P_mode0_w0_88param
 2825              		.cfi_endproc
 2826              	.LFE88:
 2828              		.section	.text.TP_bt1120_720P_1080P_mode0_w0,"ax",%progbits
 2829              		.align	1
 2830              		.global	TP_bt1120_720P_1080P_mode0_w0
 2831              		.syntax unified
 2832              		.thumb
 2833              		.thumb_func
 2834              		.fpu softvfp
 2836              	TP_bt1120_720P_1080P_mode0_w0:
 2837              	.LFB89:
2778:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table 720P... ");
 2838              		.loc 1 2778 0
 2839              		.cfi_startproc
 2840              		@ args = 0, pretend = 0, frame = 0
 2841              		@ frame_needed = 0, uses_anonymous_args = 0
 2842 0000 08B5     		push	{r3, lr}
 2843              	.LCFI37:
 2844              		.cfi_def_cfa_offset 8
 2845              		.cfi_offset 3, -8
 2846              		.cfi_offset 14, -4
2779:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_720P_1080P_mode0_w0_88param);
 2847              		.loc 1 2779 0
 2848 0002 0548     		ldr	r0, .L190
 2849 0004 FFF7FEFF 		bl	Printf
 2850              	.LVL238:
2780:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);
 2851              		.loc 1 2780 0
 2852 0008 0448     		ldr	r0, .L190+4
 2853 000a FFF7FEFF 		bl	VS4210_FULL88init2
 2854              	.LVL239:
2781:Src/main.c    **** 
 2855              		.loc 1 2781 0
 2856 000e 1021     		movs	r1, #16
 2857 0010 D720     		movs	r0, #215
 2858 0012 FFF7FEFF 		bl	VXISI2CWrite
 2859              	.LVL240:
2783:Src/main.c    **** 
 2860              		.loc 1 2783 0
 2861 0016 08BD     		pop	{r3, pc}
 2862              	.L191:
 2863              		.align	2
 2864              	.L190:
 2865 0018 00000000 		.word	.LC32
 2866 001c 00000000 		.word	VS4210_TP_bt1120_720P_1080P_mode0_w0_88param
 2867              		.cfi_endproc
 2868              	.LFE89:
 2870              		.section	.text.TP_bt1120_NTSC_1080P_mode0_w0,"ax",%progbits
 2871              		.align	1
 2872              		.global	TP_bt1120_NTSC_1080P_mode0_w0
 2873              		.syntax unified
 2874              		.thumb
 2875              		.thumb_func
 2876              		.fpu softvfp
ARM GAS  /tmp/ccs2VtGF.s 			page 133


 2878              	TP_bt1120_NTSC_1080P_mode0_w0:
 2879              	.LFB90:
2786:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table NTSC... ");
 2880              		.loc 1 2786 0
 2881              		.cfi_startproc
 2882              		@ args = 0, pretend = 0, frame = 0
 2883              		@ frame_needed = 0, uses_anonymous_args = 0
 2884 0000 08B5     		push	{r3, lr}
 2885              	.LCFI38:
 2886              		.cfi_def_cfa_offset 8
 2887              		.cfi_offset 3, -8
 2888              		.cfi_offset 14, -4
2787:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_NTSC_1080P_mode0_w0_88param);
 2889              		.loc 1 2787 0
 2890 0002 0348     		ldr	r0, .L194
 2891 0004 FFF7FEFF 		bl	Printf
 2892              	.LVL241:
2788:Src/main.c    **** }
 2893              		.loc 1 2788 0
 2894 0008 0248     		ldr	r0, .L194+4
 2895 000a FFF7FEFF 		bl	VS4210_FULL88init2
 2896              	.LVL242:
2789:Src/main.c    **** 
 2897              		.loc 1 2789 0
 2898 000e 08BD     		pop	{r3, pc}
 2899              	.L195:
 2900              		.align	2
 2901              	.L194:
 2902 0010 00000000 		.word	.LC33
 2903 0014 00000000 		.word	VS4210_TP_bt1120_NTSC_1080P_mode0_w0_88param
 2904              		.cfi_endproc
 2905              	.LFE90:
 2907              		.section	.text.TP_bt1120_PAL_1080P_mode0_w0,"ax",%progbits
 2908              		.align	1
 2909              		.global	TP_bt1120_PAL_1080P_mode0_w0
 2910              		.syntax unified
 2911              		.thumb
 2912              		.thumb_func
 2913              		.fpu softvfp
 2915              	TP_bt1120_PAL_1080P_mode0_w0:
 2916              	.LFB91:
2792:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table PAL... ");
 2917              		.loc 1 2792 0
 2918              		.cfi_startproc
 2919              		@ args = 0, pretend = 0, frame = 0
 2920              		@ frame_needed = 0, uses_anonymous_args = 0
 2921 0000 08B5     		push	{r3, lr}
 2922              	.LCFI39:
 2923              		.cfi_def_cfa_offset 8
 2924              		.cfi_offset 3, -8
 2925              		.cfi_offset 14, -4
2793:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_PAL_1080P_mode0_w0_88param);
 2926              		.loc 1 2793 0
 2927 0002 0348     		ldr	r0, .L198
 2928 0004 FFF7FEFF 		bl	Printf
 2929              	.LVL243:
2794:Src/main.c    **** 	#if 0
ARM GAS  /tmp/ccs2VtGF.s 			page 134


 2930              		.loc 1 2794 0
 2931 0008 0248     		ldr	r0, .L198+4
 2932 000a FFF7FEFF 		bl	VS4210_FULL88init2
 2933              	.LVL244:
3037:Src/main.c    **** void SET_VS4210_720_480_out(void)
 2934              		.loc 1 3037 0
 2935 000e 08BD     		pop	{r3, pc}
 2936              	.L199:
 2937              		.align	2
 2938              	.L198:
 2939 0010 00000000 		.word	.LC34
 2940 0014 00000000 		.word	VS4210_TP_bt1120_PAL_1080P_mode0_w0_88param
 2941              		.cfi_endproc
 2942              	.LFE91:
 2944              		.section	.text.SET_VS4210_720_480_out,"ax",%progbits
 2945              		.align	1
 2946              		.global	SET_VS4210_720_480_out
 2947              		.syntax unified
 2948              		.thumb
 2949              		.thumb_func
 2950              		.fpu softvfp
 2952              	SET_VS4210_720_480_out:
 2953              	.LFB92:
3039:Src/main.c    **** 	Printf("\r\nSET_VS4210_720_480_out ");
 2954              		.loc 1 3039 0
 2955              		.cfi_startproc
 2956              		@ args = 0, pretend = 0, frame = 0
 2957              		@ frame_needed = 0, uses_anonymous_args = 0
 2958 0000 08B5     		push	{r3, lr}
 2959              	.LCFI40:
 2960              		.cfi_def_cfa_offset 8
 2961              		.cfi_offset 3, -8
 2962              		.cfi_offset 14, -4
3040:Src/main.c    **** 
 2963              		.loc 1 3040 0
 2964 0002 FE48     		ldr	r0, .L202
 2965 0004 FFF7FEFF 		bl	Printf
 2966              	.LVL245:
3042:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);
 2967              		.loc 1 3042 0
 2968 0008 0021     		movs	r1, #0
 2969 000a 0120     		movs	r0, #1
 2970 000c FFF7FEFF 		bl	VXISI2CWrite
 2971              	.LVL246:
3043:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);
 2972              		.loc 1 3043 0
 2973 0010 0021     		movs	r1, #0
 2974 0012 0220     		movs	r0, #2
 2975 0014 FFF7FEFF 		bl	VXISI2CWrite
 2976              	.LVL247:
3044:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);
 2977              		.loc 1 3044 0
 2978 0018 7521     		movs	r1, #117
 2979 001a 0320     		movs	r0, #3
 2980 001c FFF7FEFF 		bl	VXISI2CWrite
 2981              	.LVL248:
3045:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);
ARM GAS  /tmp/ccs2VtGF.s 			page 135


 2982              		.loc 1 3045 0
 2983 0020 1821     		movs	r1, #24
 2984 0022 0420     		movs	r0, #4
 2985 0024 FFF7FEFF 		bl	VXISI2CWrite
 2986              	.LVL249:
3046:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);
 2987              		.loc 1 3046 0
 2988 0028 8021     		movs	r1, #128
 2989 002a 0520     		movs	r0, #5
 2990 002c FFF7FEFF 		bl	VXISI2CWrite
 2991              	.LVL250:
3047:Src/main.c    **** 	VXISI2CWrite(0x07,0x08);
 2992              		.loc 1 3047 0
 2993 0030 2021     		movs	r1, #32
 2994 0032 0620     		movs	r0, #6
 2995 0034 FFF7FEFF 		bl	VXISI2CWrite
 2996              	.LVL251:
3048:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);
 2997              		.loc 1 3048 0
 2998 0038 0821     		movs	r1, #8
 2999 003a 0720     		movs	r0, #7
 3000 003c FFF7FEFF 		bl	VXISI2CWrite
 3001              	.LVL252:
3049:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);
 3002              		.loc 1 3049 0
 3003 0040 4021     		movs	r1, #64
 3004 0042 0820     		movs	r0, #8
 3005 0044 FFF7FEFF 		bl	VXISI2CWrite
 3006              	.LVL253:
3050:Src/main.c    **** 	VXISI2CWrite(0x0A,0x41);
 3007              		.loc 1 3050 0
 3008 0048 0A21     		movs	r1, #10
 3009 004a 0920     		movs	r0, #9
 3010 004c FFF7FEFF 		bl	VXISI2CWrite
 3011              	.LVL254:
3051:Src/main.c    **** 	VXISI2CWrite(0x0B,0x07);
 3012              		.loc 1 3051 0
 3013 0050 4121     		movs	r1, #65
 3014 0052 0A20     		movs	r0, #10
 3015 0054 FFF7FEFF 		bl	VXISI2CWrite
 3016              	.LVL255:
3052:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);
 3017              		.loc 1 3052 0
 3018 0058 0721     		movs	r1, #7
 3019 005a 0B20     		movs	r0, #11
 3020 005c FFF7FEFF 		bl	VXISI2CWrite
 3021              	.LVL256:
3053:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);
 3022              		.loc 1 3053 0
 3023 0060 0021     		movs	r1, #0
 3024 0062 0C20     		movs	r0, #12
 3025 0064 FFF7FEFF 		bl	VXISI2CWrite
 3026              	.LVL257:
3054:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);
 3027              		.loc 1 3054 0
 3028 0068 2021     		movs	r1, #32
 3029 006a 0D20     		movs	r0, #13
ARM GAS  /tmp/ccs2VtGF.s 			page 136


 3030 006c FFF7FEFF 		bl	VXISI2CWrite
 3031              	.LVL258:
3055:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);
 3032              		.loc 1 3055 0
 3033 0070 1021     		movs	r1, #16
 3034 0072 0E20     		movs	r0, #14
 3035 0074 FFF7FEFF 		bl	VXISI2CWrite
 3036              	.LVL259:
3056:Src/main.c    **** 	VXISI2CWrite(0x10,0x80);
 3037              		.loc 1 3056 0
 3038 0078 0021     		movs	r1, #0
 3039 007a 0F20     		movs	r0, #15
 3040 007c FFF7FEFF 		bl	VXISI2CWrite
 3041              	.LVL260:
3057:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);
 3042              		.loc 1 3057 0
 3043 0080 8021     		movs	r1, #128
 3044 0082 1020     		movs	r0, #16
 3045 0084 FFF7FEFF 		bl	VXISI2CWrite
 3046              	.LVL261:
3058:Src/main.c    **** 	VXISI2CWrite(0x12,0x21);
 3047              		.loc 1 3058 0
 3048 0088 8221     		movs	r1, #130
 3049 008a 1120     		movs	r0, #17
 3050 008c FFF7FEFF 		bl	VXISI2CWrite
 3051              	.LVL262:
3059:Src/main.c    **** 	VXISI2CWrite(0x13,0xD0);
 3052              		.loc 1 3059 0
 3053 0090 2121     		movs	r1, #33
 3054 0092 1220     		movs	r0, #18
 3055 0094 FFF7FEFF 		bl	VXISI2CWrite
 3056              	.LVL263:
3060:Src/main.c    **** 	VXISI2CWrite(0x14,0xE0);
 3057              		.loc 1 3060 0
 3058 0098 D021     		movs	r1, #208
 3059 009a 1320     		movs	r0, #19
 3060 009c FFF7FEFF 		bl	VXISI2CWrite
 3061              	.LVL264:
3061:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);
 3062              		.loc 1 3061 0
 3063 00a0 E021     		movs	r1, #224
 3064 00a2 1420     		movs	r0, #20
 3065 00a4 FFF7FEFF 		bl	VXISI2CWrite
 3066              	.LVL265:
3062:Src/main.c    **** 	VXISI2CWrite(0x16,0xFE);
 3067              		.loc 1 3062 0
 3068 00a8 7821     		movs	r1, #120
 3069 00aa 1520     		movs	r0, #21
 3070 00ac FFF7FEFF 		bl	VXISI2CWrite
 3071              	.LVL266:
3063:Src/main.c    **** 	VXISI2CWrite(0x17,0x00);
 3072              		.loc 1 3063 0
 3073 00b0 FE21     		movs	r1, #254
 3074 00b2 1620     		movs	r0, #22
 3075 00b4 FFF7FEFF 		bl	VXISI2CWrite
 3076              	.LVL267:
3064:Src/main.c    **** 	VXISI2CWrite(0x18,0xC8);
ARM GAS  /tmp/ccs2VtGF.s 			page 137


 3077              		.loc 1 3064 0
 3078 00b8 0021     		movs	r1, #0
 3079 00ba 1720     		movs	r0, #23
 3080 00bc FFF7FEFF 		bl	VXISI2CWrite
 3081              	.LVL268:
3065:Src/main.c    **** 	VXISI2CWrite(0x19,0x00);
 3082              		.loc 1 3065 0
 3083 00c0 C821     		movs	r1, #200
 3084 00c2 1820     		movs	r0, #24
 3085 00c4 FFF7FEFF 		bl	VXISI2CWrite
 3086              	.LVL269:
3066:Src/main.c    **** 	VXISI2CWrite(0x1A,0x23);
 3087              		.loc 1 3066 0
 3088 00c8 0021     		movs	r1, #0
 3089 00ca 1920     		movs	r0, #25
 3090 00cc FFF7FEFF 		bl	VXISI2CWrite
 3091              	.LVL270:
3067:Src/main.c    **** 	VXISI2CWrite(0x1B,0x00);
 3092              		.loc 1 3067 0
 3093 00d0 2321     		movs	r1, #35
 3094 00d2 1A20     		movs	r0, #26
 3095 00d4 FFF7FEFF 		bl	VXISI2CWrite
 3096              	.LVL271:
3068:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);
 3097              		.loc 1 3068 0
 3098 00d8 0021     		movs	r1, #0
 3099 00da 1B20     		movs	r0, #27
 3100 00dc FFF7FEFF 		bl	VXISI2CWrite
 3101              	.LVL272:
3069:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);
 3102              		.loc 1 3069 0
 3103 00e0 0021     		movs	r1, #0
 3104 00e2 1C20     		movs	r0, #28
 3105 00e4 FFF7FEFF 		bl	VXISI2CWrite
 3106              	.LVL273:
3070:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);
 3107              		.loc 1 3070 0
 3108 00e8 0021     		movs	r1, #0
 3109 00ea 1D20     		movs	r0, #29
 3110 00ec FFF7FEFF 		bl	VXISI2CWrite
 3111              	.LVL274:
3071:Src/main.c    **** 	VXISI2CWrite(0x1F,0x32);
 3112              		.loc 1 3071 0
 3113 00f0 2021     		movs	r1, #32
 3114 00f2 1E20     		movs	r0, #30
 3115 00f4 FFF7FEFF 		bl	VXISI2CWrite
 3116              	.LVL275:
3072:Src/main.c    **** 	VXISI2CWrite(0x20,0x5A);
 3117              		.loc 1 3072 0
 3118 00f8 3221     		movs	r1, #50
 3119 00fa 1F20     		movs	r0, #31
 3120 00fc FFF7FEFF 		bl	VXISI2CWrite
 3121              	.LVL276:
3073:Src/main.c    **** 	VXISI2CWrite(0x21,0x0D);
 3122              		.loc 1 3073 0
 3123 0100 5A21     		movs	r1, #90
 3124 0102 2020     		movs	r0, #32
ARM GAS  /tmp/ccs2VtGF.s 			page 138


 3125 0104 FFF7FEFF 		bl	VXISI2CWrite
 3126              	.LVL277:
3074:Src/main.c    **** 	VXISI2CWrite(0x22,0x32);
 3127              		.loc 1 3074 0
 3128 0108 0D21     		movs	r1, #13
 3129 010a 2120     		movs	r0, #33
 3130 010c FFF7FEFF 		bl	VXISI2CWrite
 3131              	.LVL278:
3075:Src/main.c    **** 	VXISI2CWrite(0x23,0x5A);
 3132              		.loc 1 3075 0
 3133 0110 3221     		movs	r1, #50
 3134 0112 2220     		movs	r0, #34
 3135 0114 FFF7FEFF 		bl	VXISI2CWrite
 3136              	.LVL279:
3076:Src/main.c    **** 	VXISI2CWrite(0x24,0xD0);
 3137              		.loc 1 3076 0
 3138 0118 5A21     		movs	r1, #90
 3139 011a 2320     		movs	r0, #35
 3140 011c FFF7FEFF 		bl	VXISI2CWrite
 3141              	.LVL280:
3077:Src/main.c    **** 	VXISI2CWrite(0x25,0x21);
 3142              		.loc 1 3077 0
 3143 0120 D021     		movs	r1, #208
 3144 0122 2420     		movs	r0, #36
 3145 0124 FFF7FEFF 		bl	VXISI2CWrite
 3146              	.LVL281:
3078:Src/main.c    **** 	VXISI2CWrite(0x26,0x0D);
 3147              		.loc 1 3078 0
 3148 0128 2121     		movs	r1, #33
 3149 012a 2520     		movs	r0, #37
 3150 012c FFF7FEFF 		bl	VXISI2CWrite
 3151              	.LVL282:
3079:Src/main.c    **** 	VXISI2CWrite(0x27,0xE0);
 3152              		.loc 1 3079 0
 3153 0130 0D21     		movs	r1, #13
 3154 0132 2620     		movs	r0, #38
 3155 0134 FFF7FEFF 		bl	VXISI2CWrite
 3156              	.LVL283:
3080:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);
 3157              		.loc 1 3080 0
 3158 0138 E021     		movs	r1, #224
 3159 013a 2720     		movs	r0, #39
 3160 013c FFF7FEFF 		bl	VXISI2CWrite
 3161              	.LVL284:
3081:Src/main.c    **** 	VXISI2CWrite(0x29,0x00);
 3162              		.loc 1 3081 0
 3163 0140 F021     		movs	r1, #240
 3164 0142 2820     		movs	r0, #40
 3165 0144 FFF7FEFF 		bl	VXISI2CWrite
 3166              	.LVL285:
3082:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);
 3167              		.loc 1 3082 0
 3168 0148 0021     		movs	r1, #0
 3169 014a 2920     		movs	r0, #41
 3170 014c FFF7FEFF 		bl	VXISI2CWrite
 3171              	.LVL286:
3083:Src/main.c    **** 	VXISI2CWrite(0x2B,0x01);
ARM GAS  /tmp/ccs2VtGF.s 			page 139


 3172              		.loc 1 3083 0
 3173 0150 0021     		movs	r1, #0
 3174 0152 2A20     		movs	r0, #42
 3175 0154 FFF7FEFF 		bl	VXISI2CWrite
 3176              	.LVL287:
3084:Src/main.c    **** 	VXISI2CWrite(0x2C,0xFF);
 3177              		.loc 1 3084 0
 3178 0158 0121     		movs	r1, #1
 3179 015a 2B20     		movs	r0, #43
 3180 015c FFF7FEFF 		bl	VXISI2CWrite
 3181              	.LVL288:
3085:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);
 3182              		.loc 1 3085 0
 3183 0160 FF21     		movs	r1, #255
 3184 0162 2C20     		movs	r0, #44
 3185 0164 FFF7FEFF 		bl	VXISI2CWrite
 3186              	.LVL289:
3086:Src/main.c    **** 	VXISI2CWrite(0x2E,0x12);
 3187              		.loc 1 3086 0
 3188 0168 0021     		movs	r1, #0
 3189 016a 2D20     		movs	r0, #45
 3190 016c FFF7FEFF 		bl	VXISI2CWrite
 3191              	.LVL290:
3087:Src/main.c    **** 	VXISI2CWrite(0x2F,0xD0);
 3192              		.loc 1 3087 0
 3193 0170 1221     		movs	r1, #18
 3194 0172 2E20     		movs	r0, #46
 3195 0174 FFF7FEFF 		bl	VXISI2CWrite
 3196              	.LVL291:
3088:Src/main.c    **** 	VXISI2CWrite(0x30,0xE0);
 3197              		.loc 1 3088 0
 3198 0178 D021     		movs	r1, #208
 3199 017a 2F20     		movs	r0, #47
 3200 017c FFF7FEFF 		bl	VXISI2CWrite
 3201              	.LVL292:
3089:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);
 3202              		.loc 1 3089 0
 3203 0180 E021     		movs	r1, #224
 3204 0182 3020     		movs	r0, #48
 3205 0184 FFF7FEFF 		bl	VXISI2CWrite
 3206              	.LVL293:
3090:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);
 3207              		.loc 1 3090 0
 3208 0188 8021     		movs	r1, #128
 3209 018a 3120     		movs	r0, #49
 3210 018c FFF7FEFF 		bl	VXISI2CWrite
 3211              	.LVL294:
3091:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);
 3212              		.loc 1 3091 0
 3213 0190 8021     		movs	r1, #128
 3214 0192 3220     		movs	r0, #50
 3215 0194 FFF7FEFF 		bl	VXISI2CWrite
 3216              	.LVL295:
3092:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);
 3217              		.loc 1 3092 0
 3218 0198 8021     		movs	r1, #128
 3219 019a 3320     		movs	r0, #51
ARM GAS  /tmp/ccs2VtGF.s 			page 140


 3220 019c FFF7FEFF 		bl	VXISI2CWrite
 3221              	.LVL296:
3093:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);
 3222              		.loc 1 3093 0
 3223 01a0 A021     		movs	r1, #160
 3224 01a2 3420     		movs	r0, #52
 3225 01a4 FFF7FEFF 		bl	VXISI2CWrite
 3226              	.LVL297:
3094:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);
 3227              		.loc 1 3094 0
 3228 01a8 1821     		movs	r1, #24
 3229 01aa 3520     		movs	r0, #53
 3230 01ac FFF7FEFF 		bl	VXISI2CWrite
 3231              	.LVL298:
3095:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);
 3232              		.loc 1 3095 0
 3233 01b0 4621     		movs	r1, #70
 3234 01b2 3620     		movs	r0, #54
 3235 01b4 FFF7FEFF 		bl	VXISI2CWrite
 3236              	.LVL299:
3096:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);
 3237              		.loc 1 3096 0
 3238 01b8 6421     		movs	r1, #100
 3239 01ba 3720     		movs	r0, #55
 3240 01bc FFF7FEFF 		bl	VXISI2CWrite
 3241              	.LVL300:
3097:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);
 3242              		.loc 1 3097 0
 3243 01c0 0021     		movs	r1, #0
 3244 01c2 3820     		movs	r0, #56
 3245 01c4 FFF7FEFF 		bl	VXISI2CWrite
 3246              	.LVL301:
3098:Src/main.c    **** 	VXISI2CWrite(0x3A,0x03);
 3247              		.loc 1 3098 0
 3248 01c8 FF21     		movs	r1, #255
 3249 01ca 3920     		movs	r0, #57
 3250 01cc FFF7FEFF 		bl	VXISI2CWrite
 3251              	.LVL302:
3099:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);
 3252              		.loc 1 3099 0
 3253 01d0 0321     		movs	r1, #3
 3254 01d2 3A20     		movs	r0, #58
 3255 01d4 FFF7FEFF 		bl	VXISI2CWrite
 3256              	.LVL303:
3100:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);
 3257              		.loc 1 3100 0
 3258 01d8 8021     		movs	r1, #128
 3259 01da 3B20     		movs	r0, #59
 3260 01dc FFF7FEFF 		bl	VXISI2CWrite
 3261              	.LVL304:
3101:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);
 3262              		.loc 1 3101 0
 3263 01e0 8021     		movs	r1, #128
 3264 01e2 3C20     		movs	r0, #60
 3265 01e4 FFF7FEFF 		bl	VXISI2CWrite
 3266              	.LVL305:
3102:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);
ARM GAS  /tmp/ccs2VtGF.s 			page 141


 3267              		.loc 1 3102 0
 3268 01e8 8021     		movs	r1, #128
 3269 01ea 3D20     		movs	r0, #61
 3270 01ec FFF7FEFF 		bl	VXISI2CWrite
 3271              	.LVL306:
3103:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);
 3272              		.loc 1 3103 0
 3273 01f0 8021     		movs	r1, #128
 3274 01f2 3E20     		movs	r0, #62
 3275 01f4 FFF7FEFF 		bl	VXISI2CWrite
 3276              	.LVL307:
3104:Src/main.c    **** 	//VXISI2CWrite(0xVXISI);2CWrite(0x80
 3277              		.loc 1 3104 0
 3278 01f8 8021     		movs	r1, #128
 3279 01fa 3F20     		movs	r0, #63
 3280 01fc FFF7FEFF 		bl	VXISI2CWrite
 3281              	.LVL308:
3106:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);
 3282              		.loc 1 3106 0
 3283 0200 6021     		movs	r1, #96
 3284 0202 4120     		movs	r0, #65
 3285 0204 FFF7FEFF 		bl	VXISI2CWrite
 3286              	.LVL309:
3107:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);
 3287              		.loc 1 3107 0
 3288 0208 5F21     		movs	r1, #95
 3289 020a 4220     		movs	r0, #66
 3290 020c FFF7FEFF 		bl	VXISI2CWrite
 3291              	.LVL310:
3108:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);
 3292              		.loc 1 3108 0
 3293 0210 3721     		movs	r1, #55
 3294 0212 4320     		movs	r0, #67
 3295 0214 FFF7FEFF 		bl	VXISI2CWrite
 3296              	.LVL311:
3109:Src/main.c    **** 	VXISI2CWrite(0x45,0x04);
 3297              		.loc 1 3109 0
 3298 0218 1421     		movs	r1, #20
 3299 021a 4420     		movs	r0, #68
 3300 021c FFF7FEFF 		bl	VXISI2CWrite
 3301              	.LVL312:
3110:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);
 3302              		.loc 1 3110 0
 3303 0220 0421     		movs	r1, #4
 3304 0222 4520     		movs	r0, #69
 3305 0224 FFF7FEFF 		bl	VXISI2CWrite
 3306              	.LVL313:
3111:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);
 3307              		.loc 1 3111 0
 3308 0228 0021     		movs	r1, #0
 3309 022a 4620     		movs	r0, #70
 3310 022c FFF7FEFF 		bl	VXISI2CWrite
 3311              	.LVL314:
3112:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);
 3312              		.loc 1 3112 0
 3313 0230 0021     		movs	r1, #0
 3314 0232 4720     		movs	r0, #71
ARM GAS  /tmp/ccs2VtGF.s 			page 142


 3315 0234 FFF7FEFF 		bl	VXISI2CWrite
 3316              	.LVL315:
3113:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);
 3317              		.loc 1 3113 0
 3318 0238 0021     		movs	r1, #0
 3319 023a 4820     		movs	r0, #72
 3320 023c FFF7FEFF 		bl	VXISI2CWrite
 3321              	.LVL316:
3114:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);
 3322              		.loc 1 3114 0
 3323 0240 0021     		movs	r1, #0
 3324 0242 4920     		movs	r0, #73
 3325 0244 FFF7FEFF 		bl	VXISI2CWrite
 3326              	.LVL317:
3115:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);
 3327              		.loc 1 3115 0
 3328 0248 2021     		movs	r1, #32
 3329 024a 4B20     		movs	r0, #75
 3330 024c FFF7FEFF 		bl	VXISI2CWrite
 3331              	.LVL318:
3116:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);
 3332              		.loc 1 3116 0
 3333 0250 0021     		movs	r1, #0
 3334 0252 4C20     		movs	r0, #76
 3335 0254 FFF7FEFF 		bl	VXISI2CWrite
 3336              	.LVL319:
3117:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);
 3337              		.loc 1 3117 0
 3338 0258 0021     		movs	r1, #0
 3339 025a 4D20     		movs	r0, #77
 3340 025c FFF7FEFF 		bl	VXISI2CWrite
 3341              	.LVL320:
3118:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);
 3342              		.loc 1 3118 0
 3343 0260 0021     		movs	r1, #0
 3344 0262 4E20     		movs	r0, #78
 3345 0264 FFF7FEFF 		bl	VXISI2CWrite
 3346              	.LVL321:
3119:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);
 3347              		.loc 1 3119 0
 3348 0268 7F21     		movs	r1, #127
 3349 026a 4F20     		movs	r0, #79
 3350 026c FFF7FEFF 		bl	VXISI2CWrite
 3351              	.LVL322:
3120:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);
 3352              		.loc 1 3120 0
 3353 0270 2021     		movs	r1, #32
 3354 0272 5020     		movs	r0, #80
 3355 0274 FFF7FEFF 		bl	VXISI2CWrite
 3356              	.LVL323:
3121:Src/main.c    **** 	VXISI2CWrite(0x52,0x00);
 3357              		.loc 1 3121 0
 3358 0278 0021     		movs	r1, #0
 3359 027a 5120     		movs	r0, #81
 3360 027c FFF7FEFF 		bl	VXISI2CWrite
 3361              	.LVL324:
3122:Src/main.c    **** 	VXISI2CWrite(0x53,0x04);
ARM GAS  /tmp/ccs2VtGF.s 			page 143


 3362              		.loc 1 3122 0
 3363 0280 0021     		movs	r1, #0
 3364 0282 5220     		movs	r0, #82
 3365 0284 FFF7FEFF 		bl	VXISI2CWrite
 3366              	.LVL325:
3123:Src/main.c    **** 	VXISI2CWrite(0x54,0x00);
 3367              		.loc 1 3123 0
 3368 0288 0421     		movs	r1, #4
 3369 028a 5320     		movs	r0, #83
 3370 028c FFF7FEFF 		bl	VXISI2CWrite
 3371              	.LVL326:
3124:Src/main.c    **** 	VXISI2CWrite(0x55,0xE0);
 3372              		.loc 1 3124 0
 3373 0290 0021     		movs	r1, #0
 3374 0292 5420     		movs	r0, #84
 3375 0294 FFF7FEFF 		bl	VXISI2CWrite
 3376              	.LVL327:
3125:Src/main.c    **** 	VXISI2CWrite(0x56,0x40);
 3377              		.loc 1 3125 0
 3378 0298 E021     		movs	r1, #224
 3379 029a 5520     		movs	r0, #85
 3380 029c FFF7FEFF 		bl	VXISI2CWrite
 3381              	.LVL328:
3126:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);
 3382              		.loc 1 3126 0
 3383 02a0 4021     		movs	r1, #64
 3384 02a2 5620     		movs	r0, #86
 3385 02a4 FFF7FEFF 		bl	VXISI2CWrite
 3386              	.LVL329:
3127:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);
 3387              		.loc 1 3127 0
 3388 02a8 0421     		movs	r1, #4
 3389 02aa 5720     		movs	r0, #87
 3390 02ac FFF7FEFF 		bl	VXISI2CWrite
 3391              	.LVL330:
3128:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);
 3392              		.loc 1 3128 0
 3393 02b0 0021     		movs	r1, #0
 3394 02b2 5820     		movs	r0, #88
 3395 02b4 FFF7FEFF 		bl	VXISI2CWrite
 3396              	.LVL331:
3129:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);
 3397              		.loc 1 3129 0
 3398 02b8 0821     		movs	r1, #8
 3399 02ba 5920     		movs	r0, #89
 3400 02bc FFF7FEFF 		bl	VXISI2CWrite
 3401              	.LVL332:
3130:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);
 3402              		.loc 1 3130 0
 3403 02c0 1021     		movs	r1, #16
 3404 02c2 5A20     		movs	r0, #90
 3405 02c4 FFF7FEFF 		bl	VXISI2CWrite
 3406              	.LVL333:
3131:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);
 3407              		.loc 1 3131 0
 3408 02c8 0021     		movs	r1, #0
 3409 02ca 5B20     		movs	r0, #91
ARM GAS  /tmp/ccs2VtGF.s 			page 144


 3410 02cc FFF7FEFF 		bl	VXISI2CWrite
 3411              	.LVL334:
3132:Src/main.c    **** 	VXISI2CWrite(0x5D,0x40);
 3412              		.loc 1 3132 0
 3413 02d0 6821     		movs	r1, #104
 3414 02d2 5C20     		movs	r0, #92
 3415 02d4 FFF7FEFF 		bl	VXISI2CWrite
 3416              	.LVL335:
3133:Src/main.c    **** 	VXISI2CWrite(0x5E,0x08);
 3417              		.loc 1 3133 0
 3418 02d8 4021     		movs	r1, #64
 3419 02da 5D20     		movs	r0, #93
 3420 02dc FFF7FEFF 		bl	VXISI2CWrite
 3421              	.LVL336:
3134:Src/main.c    **** 	VXISI2CWrite(0x5F,0x00);
 3422              		.loc 1 3134 0
 3423 02e0 0821     		movs	r1, #8
 3424 02e2 5E20     		movs	r0, #94
 3425 02e4 FFF7FEFF 		bl	VXISI2CWrite
 3426              	.LVL337:
3135:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);
 3427              		.loc 1 3135 0
 3428 02e8 0021     		movs	r1, #0
 3429 02ea 5F20     		movs	r0, #95
 3430 02ec FFF7FEFF 		bl	VXISI2CWrite
 3431              	.LVL338:
3136:Src/main.c    **** 	VXISI2CWrite(0x61,0x54);
 3432              		.loc 1 3136 0
 3433 02f0 E021     		movs	r1, #224
 3434 02f2 6020     		movs	r0, #96
 3435 02f4 FFF7FEFF 		bl	VXISI2CWrite
 3436              	.LVL339:
3137:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);
 3437              		.loc 1 3137 0
 3438 02f8 5421     		movs	r1, #84
 3439 02fa 6120     		movs	r0, #97
 3440 02fc FFF7FEFF 		bl	VXISI2CWrite
 3441              	.LVL340:
3138:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);
 3442              		.loc 1 3138 0
 3443 0300 3321     		movs	r1, #51
 3444 0302 6220     		movs	r0, #98
 3445 0304 FFF7FEFF 		bl	VXISI2CWrite
 3446              	.LVL341:
3139:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);
 3447              		.loc 1 3139 0
 3448 0308 0121     		movs	r1, #1
 3449 030a 6320     		movs	r0, #99
 3450 030c FFF7FEFF 		bl	VXISI2CWrite
 3451              	.LVL342:
3140:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);
 3452              		.loc 1 3140 0
 3453 0310 FF21     		movs	r1, #255
 3454 0312 6420     		movs	r0, #100
 3455 0314 FFF7FEFF 		bl	VXISI2CWrite
 3456              	.LVL343:
3141:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);
ARM GAS  /tmp/ccs2VtGF.s 			page 145


 3457              		.loc 1 3141 0
 3458 0318 0121     		movs	r1, #1
 3459 031a 6520     		movs	r0, #101
 3460 031c FFF7FEFF 		bl	VXISI2CWrite
 3461              	.LVL344:
3142:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);
 3462              		.loc 1 3142 0
 3463 0320 FF21     		movs	r1, #255
 3464 0322 6620     		movs	r0, #102
 3465 0324 FFF7FEFF 		bl	VXISI2CWrite
 3466              	.LVL345:
3143:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);
 3467              		.loc 1 3143 0
 3468 0328 8921     		movs	r1, #137
 3469 032a 6720     		movs	r0, #103
 3470 032c FFF7FEFF 		bl	VXISI2CWrite
 3471              	.LVL346:
3144:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);
 3472              		.loc 1 3144 0
 3473 0330 AB21     		movs	r1, #171
 3474 0332 6820     		movs	r0, #104
 3475 0334 FFF7FEFF 		bl	VXISI2CWrite
 3476              	.LVL347:
3145:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);
 3477              		.loc 1 3145 0
 3478 0338 8821     		movs	r1, #136
 3479 033a 6920     		movs	r0, #105
 3480 033c FFF7FEFF 		bl	VXISI2CWrite
 3481              	.LVL348:
3146:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);
 3482              		.loc 1 3146 0
 3483 0340 6E21     		movs	r1, #110
 3484 0342 6A20     		movs	r0, #106
 3485 0344 FFF7FEFF 		bl	VXISI2CWrite
 3486              	.LVL349:
3147:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);
 3487              		.loc 1 3147 0
 3488 0348 6E21     		movs	r1, #110
 3489 034a 6B20     		movs	r0, #107
 3490 034c FFF7FEFF 		bl	VXISI2CWrite
 3491              	.LVL350:
3148:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);
 3492              		.loc 1 3148 0
 3493 0350 6E21     		movs	r1, #110
 3494 0352 6C20     		movs	r0, #108
 3495 0354 FFF7FEFF 		bl	VXISI2CWrite
 3496              	.LVL351:
3149:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);
 3497              		.loc 1 3149 0
 3498 0358 0021     		movs	r1, #0
 3499 035a 6D20     		movs	r0, #109
 3500 035c FFF7FEFF 		bl	VXISI2CWrite
 3501              	.LVL352:
3150:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);
 3502              		.loc 1 3150 0
 3503 0360 0021     		movs	r1, #0
 3504 0362 6E20     		movs	r0, #110
ARM GAS  /tmp/ccs2VtGF.s 			page 146


 3505 0364 FFF7FEFF 		bl	VXISI2CWrite
 3506              	.LVL353:
3151:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);
 3507              		.loc 1 3151 0
 3508 0368 0021     		movs	r1, #0
 3509 036a 6F20     		movs	r0, #111
 3510 036c FFF7FEFF 		bl	VXISI2CWrite
 3511              	.LVL354:
3152:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);
 3512              		.loc 1 3152 0
 3513 0370 0021     		movs	r1, #0
 3514 0372 7020     		movs	r0, #112
 3515 0374 FFF7FEFF 		bl	VXISI2CWrite
 3516              	.LVL355:
3153:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);
 3517              		.loc 1 3153 0
 3518 0378 0021     		movs	r1, #0
 3519 037a 7120     		movs	r0, #113
 3520 037c FFF7FEFF 		bl	VXISI2CWrite
 3521              	.LVL356:
3154:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);
 3522              		.loc 1 3154 0
 3523 0380 0021     		movs	r1, #0
 3524 0382 7220     		movs	r0, #114
 3525 0384 FFF7FEFF 		bl	VXISI2CWrite
 3526              	.LVL357:
3155:Src/main.c    **** 	VXISI2CWrite(0x74,0x00);
 3527              		.loc 1 3155 0
 3528 0388 0021     		movs	r1, #0
 3529 038a 7320     		movs	r0, #115
 3530 038c FFF7FEFF 		bl	VXISI2CWrite
 3531              	.LVL358:
3156:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);
 3532              		.loc 1 3156 0
 3533 0390 0021     		movs	r1, #0
 3534 0392 7420     		movs	r0, #116
 3535 0394 FFF7FEFF 		bl	VXISI2CWrite
 3536              	.LVL359:
3157:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);
 3537              		.loc 1 3157 0
 3538 0398 FF21     		movs	r1, #255
 3539 039a 7520     		movs	r0, #117
 3540 039c FFF7FEFF 		bl	VXISI2CWrite
 3541              	.LVL360:
3158:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);
 3542              		.loc 1 3158 0
 3543 03a0 FF21     		movs	r1, #255
 3544 03a2 7620     		movs	r0, #118
 3545 03a4 FFF7FEFF 		bl	VXISI2CWrite
 3546              	.LVL361:
3159:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);
 3547              		.loc 1 3159 0
 3548 03a8 FF21     		movs	r1, #255
 3549 03aa 7720     		movs	r0, #119
 3550 03ac FFF7FEFF 		bl	VXISI2CWrite
 3551              	.LVL362:
3160:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);
ARM GAS  /tmp/ccs2VtGF.s 			page 147


 3552              		.loc 1 3160 0
 3553 03b0 FF21     		movs	r1, #255
 3554 03b2 7820     		movs	r0, #120
 3555 03b4 FFF7FEFF 		bl	VXISI2CWrite
 3556              	.LVL363:
3161:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);
 3557              		.loc 1 3161 0
 3558 03b8 FF21     		movs	r1, #255
 3559 03ba 7920     		movs	r0, #121
 3560 03bc FFF7FEFF 		bl	VXISI2CWrite
 3561              	.LVL364:
3162:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);
 3562              		.loc 1 3162 0
 3563 03c0 FF21     		movs	r1, #255
 3564 03c2 7A20     		movs	r0, #122
 3565 03c4 FFF7FEFF 		bl	VXISI2CWrite
 3566              	.LVL365:
3163:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);
 3567              		.loc 1 3163 0
 3568 03c8 FF21     		movs	r1, #255
 3569 03ca 7B20     		movs	r0, #123
 3570 03cc FFF7FEFF 		bl	VXISI2CWrite
 3571              	.LVL366:
3164:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);
 3572              		.loc 1 3164 0
 3573 03d0 FF21     		movs	r1, #255
 3574 03d2 7C20     		movs	r0, #124
 3575 03d4 FFF7FEFF 		bl	VXISI2CWrite
 3576              	.LVL367:
3165:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);
 3577              		.loc 1 3165 0
 3578 03d8 F021     		movs	r1, #240
 3579 03da 7D20     		movs	r0, #125
 3580 03dc FFF7FEFF 		bl	VXISI2CWrite
 3581              	.LVL368:
3166:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);
 3582              		.loc 1 3166 0
 3583 03e0 8021     		movs	r1, #128
 3584 03e2 7E20     		movs	r0, #126
 3585 03e4 FFF7FEFF 		bl	VXISI2CWrite
 3586              	.LVL369:
3167:Src/main.c    **** 	VXISI2CWrite(0x80,0x00);
 3587              		.loc 1 3167 0
 3588 03e8 0021     		movs	r1, #0
 3589 03ea 7F20     		movs	r0, #127
 3590 03ec FFF7FEFF 		bl	VXISI2CWrite
 3591              	.LVL370:
3168:Src/main.c    **** 	VXISI2CWrite(0x81,0x34);
 3592              		.loc 1 3168 0
 3593 03f0 0021     		movs	r1, #0
 3594 03f2 8020     		movs	r0, #128
 3595 03f4 FFF7FEFF 		bl	VXISI2CWrite
 3596              	.LVL371:
 3597 03f8 02E0     		b	.L203
 3598              	.L204:
 3599 03fa 00BF     		.align	2
 3600              	.L202:
ARM GAS  /tmp/ccs2VtGF.s 			page 148


 3601 03fc 00000000 		.word	.LC35
 3602              	.L203:
3169:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);
 3603              		.loc 1 3169 0
 3604 0400 3421     		movs	r1, #52
 3605 0402 8120     		movs	r0, #129
 3606 0404 FFF7FEFF 		bl	VXISI2CWrite
 3607              	.LVL372:
3170:Src/main.c    **** 	VXISI2CWrite(0x83,0x05);
 3608              		.loc 1 3170 0
 3609 0408 4021     		movs	r1, #64
 3610 040a 8220     		movs	r0, #130
 3611 040c FFF7FEFF 		bl	VXISI2CWrite
 3612              	.LVL373:
3171:Src/main.c    **** 	VXISI2CWrite(0x84,0x59);
 3613              		.loc 1 3171 0
 3614 0410 0521     		movs	r1, #5
 3615 0412 8320     		movs	r0, #131
 3616 0414 FFF7FEFF 		bl	VXISI2CWrite
 3617              	.LVL374:
3172:Src/main.c    **** 	VXISI2CWrite(0x85,0xFD);
 3618              		.loc 1 3172 0
 3619 0418 5921     		movs	r1, #89
 3620 041a 8420     		movs	r0, #132
 3621 041c FFF7FEFF 		bl	VXISI2CWrite
 3622              	.LVL375:
3173:Src/main.c    **** 	VXISI2CWrite(0x86,0x04);
 3623              		.loc 1 3173 0
 3624 0420 FD21     		movs	r1, #253
 3625 0422 8520     		movs	r0, #133
 3626 0424 FFF7FEFF 		bl	VXISI2CWrite
 3627              	.LVL376:
3174:Src/main.c    **** 	VXISI2CWrite(0x87,0x24);
 3628              		.loc 1 3174 0
 3629 0428 0421     		movs	r1, #4
 3630 042a 8620     		movs	r0, #134
 3631 042c FFF7FEFF 		bl	VXISI2CWrite
 3632              	.LVL377:
3175:Src/main.c    **** 	VXISI2CWrite(0x88,0x94);
 3633              		.loc 1 3175 0
 3634 0430 2421     		movs	r1, #36
 3635 0432 8720     		movs	r0, #135
 3636 0434 FFF7FEFF 		bl	VXISI2CWrite
 3637              	.LVL378:
3176:Src/main.c    **** 	VXISI2CWrite(0x89,0x58);
 3638              		.loc 1 3176 0
 3639 0438 9421     		movs	r1, #148
 3640 043a 8820     		movs	r0, #136
 3641 043c FFF7FEFF 		bl	VXISI2CWrite
 3642              	.LVL379:
3177:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);
 3643              		.loc 1 3177 0
 3644 0440 5821     		movs	r1, #88
 3645 0442 8920     		movs	r0, #137
 3646 0444 FFF7FEFF 		bl	VXISI2CWrite
 3647              	.LVL380:
3178:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);
ARM GAS  /tmp/ccs2VtGF.s 			page 149


 3648              		.loc 1 3178 0
 3649 0448 0021     		movs	r1, #0
 3650 044a 8A20     		movs	r0, #138
 3651 044c FFF7FEFF 		bl	VXISI2CWrite
 3652              	.LVL381:
3179:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);
 3653              		.loc 1 3179 0
 3654 0450 7E21     		movs	r1, #126
 3655 0452 8B20     		movs	r0, #139
 3656 0454 FFF7FEFF 		bl	VXISI2CWrite
 3657              	.LVL382:
3180:Src/main.c    **** 	VXISI2CWrite(0x8D,0x2C);
 3658              		.loc 1 3180 0
 3659 0458 0321     		movs	r1, #3
 3660 045a 8C20     		movs	r0, #140
 3661 045c FFF7FEFF 		bl	VXISI2CWrite
 3662              	.LVL383:
3181:Src/main.c    **** 	VXISI2CWrite(0x8E,0x8C);
 3663              		.loc 1 3181 0
 3664 0460 2C21     		movs	r1, #44
 3665 0462 8D20     		movs	r0, #141
 3666 0464 FFF7FEFF 		bl	VXISI2CWrite
 3667              	.LVL384:
3182:Src/main.c    **** 	VXISI2CWrite(0x8F,0x00);
 3668              		.loc 1 3182 0
 3669 0468 8C21     		movs	r1, #140
 3670 046a 8E20     		movs	r0, #142
 3671 046c FFF7FEFF 		bl	VXISI2CWrite
 3672              	.LVL385:
3183:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);
 3673              		.loc 1 3183 0
 3674 0470 0021     		movs	r1, #0
 3675 0472 8F20     		movs	r0, #143
 3676 0474 FFF7FEFF 		bl	VXISI2CWrite
 3677              	.LVL386:
3184:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);
 3678              		.loc 1 3184 0
 3679 0478 CC21     		movs	r1, #204
 3680 047a 9020     		movs	r0, #144
 3681 047c FFF7FEFF 		bl	VXISI2CWrite
 3682              	.LVL387:
3185:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);
 3683              		.loc 1 3185 0
 3684 0480 4121     		movs	r1, #65
 3685 0482 9120     		movs	r0, #145
 3686 0484 FFF7FEFF 		bl	VXISI2CWrite
 3687              	.LVL388:
3186:Src/main.c    **** 	VXISI2CWrite(0x93,0x31);
 3688              		.loc 1 3186 0
 3689 0488 C421     		movs	r1, #196
 3690 048a 9220     		movs	r0, #146
 3691 048c FFF7FEFF 		bl	VXISI2CWrite
 3692              	.LVL389:
3187:Src/main.c    **** 	VXISI2CWrite(0x94,0x87);
 3693              		.loc 1 3187 0
 3694 0490 3121     		movs	r1, #49
 3695 0492 9320     		movs	r0, #147
ARM GAS  /tmp/ccs2VtGF.s 			page 150


 3696 0494 FFF7FEFF 		bl	VXISI2CWrite
 3697              	.LVL390:
3188:Src/main.c    **** 	VXISI2CWrite(0x95,0xD0);
 3698              		.loc 1 3188 0
 3699 0498 8721     		movs	r1, #135
 3700 049a 9420     		movs	r0, #148
 3701 049c FFF7FEFF 		bl	VXISI2CWrite
 3702              	.LVL391:
3189:Src/main.c    **** 	VXISI2CWrite(0x96,0xF3);
 3703              		.loc 1 3189 0
 3704 04a0 D021     		movs	r1, #208
 3705 04a2 9520     		movs	r0, #149
 3706 04a4 FFF7FEFF 		bl	VXISI2CWrite
 3707              	.LVL392:
3190:Src/main.c    **** 	VXISI2CWrite(0x97,0x20);
 3708              		.loc 1 3190 0
 3709 04a8 F321     		movs	r1, #243
 3710 04aa 9620     		movs	r0, #150
 3711 04ac FFF7FEFF 		bl	VXISI2CWrite
 3712              	.LVL393:
3191:Src/main.c    **** 	VXISI2CWrite(0x98,0x11);
 3713              		.loc 1 3191 0
 3714 04b0 2021     		movs	r1, #32
 3715 04b2 9720     		movs	r0, #151
 3716 04b4 FFF7FEFF 		bl	VXISI2CWrite
 3717              	.LVL394:
3192:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);
 3718              		.loc 1 3192 0
 3719 04b8 1121     		movs	r1, #17
 3720 04ba 9820     		movs	r0, #152
 3721 04bc FFF7FEFF 		bl	VXISI2CWrite
 3722              	.LVL395:
3193:Src/main.c    **** 	VXISI2CWrite(0x9A,0xFF);
 3723              		.loc 1 3193 0
 3724 04c0 9021     		movs	r1, #144
 3725 04c2 9920     		movs	r0, #153
 3726 04c4 FFF7FEFF 		bl	VXISI2CWrite
 3727              	.LVL396:
3194:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);
 3728              		.loc 1 3194 0
 3729 04c8 FF21     		movs	r1, #255
 3730 04ca 9A20     		movs	r0, #154
 3731 04cc FFF7FEFF 		bl	VXISI2CWrite
 3732              	.LVL397:
3195:Src/main.c    **** 	VXISI2CWrite(0x9C,0x0A);
 3733              		.loc 1 3195 0
 3734 04d0 0421     		movs	r1, #4
 3735 04d2 9B20     		movs	r0, #155
 3736 04d4 FFF7FEFF 		bl	VXISI2CWrite
 3737              	.LVL398:
3196:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);
 3738              		.loc 1 3196 0
 3739 04d8 0A21     		movs	r1, #10
 3740 04da 9C20     		movs	r0, #156
 3741 04dc FFF7FEFF 		bl	VXISI2CWrite
 3742              	.LVL399:
3197:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);
ARM GAS  /tmp/ccs2VtGF.s 			page 151


 3743              		.loc 1 3197 0
 3744 04e0 0021     		movs	r1, #0
 3745 04e2 9D20     		movs	r0, #157
 3746 04e4 FFF7FEFF 		bl	VXISI2CWrite
 3747              	.LVL400:
3198:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);
 3748              		.loc 1 3198 0
 3749 04e8 0421     		movs	r1, #4
 3750 04ea 9E20     		movs	r0, #158
 3751 04ec FFF7FEFF 		bl	VXISI2CWrite
 3752              	.LVL401:
3199:Src/main.c    **** 	VXISI2CWrite(0xA0,0x2F);
 3753              		.loc 1 3199 0
 3754 04f0 6521     		movs	r1, #101
 3755 04f2 9F20     		movs	r0, #159
 3756 04f4 FFF7FEFF 		bl	VXISI2CWrite
 3757              	.LVL402:
3200:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD9);
 3758              		.loc 1 3200 0
 3759 04f8 2F21     		movs	r1, #47
 3760 04fa A020     		movs	r0, #160
 3761 04fc FFF7FEFF 		bl	VXISI2CWrite
 3762              	.LVL403:
3201:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);
 3763              		.loc 1 3201 0
 3764 0500 D921     		movs	r1, #217
 3765 0502 A120     		movs	r0, #161
 3766 0504 FFF7FEFF 		bl	VXISI2CWrite
 3767              	.LVL404:
3202:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);
 3768              		.loc 1 3202 0
 3769 0508 9821     		movs	r1, #152
 3770 050a A220     		movs	r0, #162
 3771 050c FFF7FEFF 		bl	VXISI2CWrite
 3772              	.LVL405:
3203:Src/main.c    **** 	VXISI2CWrite(0xA4,0xE1);
 3773              		.loc 1 3203 0
 3774 0510 8721     		movs	r1, #135
 3775 0512 A320     		movs	r0, #163
 3776 0514 FFF7FEFF 		bl	VXISI2CWrite
 3777              	.LVL406:
3204:Src/main.c    **** 	VXISI2CWrite(0xA5,0x38);
 3778              		.loc 1 3204 0
 3779 0518 E121     		movs	r1, #225
 3780 051a A420     		movs	r0, #164
 3781 051c FFF7FEFF 		bl	VXISI2CWrite
 3782              	.LVL407:
3205:Src/main.c    **** 	VXISI2CWrite(0xA6,0xC2);
 3783              		.loc 1 3205 0
 3784 0520 3821     		movs	r1, #56
 3785 0522 A520     		movs	r0, #165
 3786 0524 FFF7FEFF 		bl	VXISI2CWrite
 3787              	.LVL408:
3206:Src/main.c    **** 	VXISI2CWrite(0xA7,0x70);
 3788              		.loc 1 3206 0
 3789 0528 C221     		movs	r1, #194
 3790 052a A620     		movs	r0, #166
ARM GAS  /tmp/ccs2VtGF.s 			page 152


 3791 052c FFF7FEFF 		bl	VXISI2CWrite
 3792              	.LVL409:
3207:Src/main.c    **** 	VXISI2CWrite(0xA8,0x00);
 3793              		.loc 1 3207 0
 3794 0530 7021     		movs	r1, #112
 3795 0532 A720     		movs	r0, #167
 3796 0534 FFF7FEFF 		bl	VXISI2CWrite
 3797              	.LVL410:
3208:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);
 3798              		.loc 1 3208 0
 3799 0538 0021     		movs	r1, #0
 3800 053a A820     		movs	r0, #168
 3801 053c FFF7FEFF 		bl	VXISI2CWrite
 3802              	.LVL411:
3209:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2E);
 3803              		.loc 1 3209 0
 3804 0540 1E21     		movs	r1, #30
 3805 0542 A920     		movs	r0, #169
 3806 0544 FFF7FEFF 		bl	VXISI2CWrite
 3807              	.LVL412:
3210:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);
 3808              		.loc 1 3210 0
 3809 0548 2E21     		movs	r1, #46
 3810 054a AA20     		movs	r0, #170
 3811 054c FFF7FEFF 		bl	VXISI2CWrite
 3812              	.LVL413:
3211:Src/main.c    **** 	VXISI2CWrite(0xAC,0x84);
 3813              		.loc 1 3211 0
 3814 0550 0021     		movs	r1, #0
 3815 0552 AB20     		movs	r0, #171
 3816 0554 FFF7FEFF 		bl	VXISI2CWrite
 3817              	.LVL414:
3212:Src/main.c    **** 	VXISI2CWrite(0xAD,0xF3);
 3818              		.loc 1 3212 0
 3819 0558 8421     		movs	r1, #132
 3820 055a AC20     		movs	r0, #172
 3821 055c FFF7FEFF 		bl	VXISI2CWrite
 3822              	.LVL415:
3213:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);
 3823              		.loc 1 3213 0
 3824 0560 F321     		movs	r1, #243
 3825 0562 AD20     		movs	r0, #173
 3826 0564 FFF7FEFF 		bl	VXISI2CWrite
 3827              	.LVL416:
3214:Src/main.c    **** 	VXISI2CWrite(0xAF,0x99);
 3828              		.loc 1 3214 0
 3829 0568 6521     		movs	r1, #101
 3830 056a AE20     		movs	r0, #174
 3831 056c FFF7FEFF 		bl	VXISI2CWrite
 3832              	.LVL417:
3215:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);
 3833              		.loc 1 3215 0
 3834 0570 9921     		movs	r1, #153
 3835 0572 AF20     		movs	r0, #175
 3836 0574 FFF7FEFF 		bl	VXISI2CWrite
 3837              	.LVL418:
3216:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);
ARM GAS  /tmp/ccs2VtGF.s 			page 153


 3838              		.loc 1 3216 0
 3839 0578 0021     		movs	r1, #0
 3840 057a B020     		movs	r0, #176
 3841 057c FFF7FEFF 		bl	VXISI2CWrite
 3842              	.LVL419:
3217:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);
 3843              		.loc 1 3217 0
 3844 0580 0021     		movs	r1, #0
 3845 0582 B120     		movs	r0, #177
 3846 0584 FFF7FEFF 		bl	VXISI2CWrite
 3847              	.LVL420:
3218:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);
 3848              		.loc 1 3218 0
 3849 0588 0021     		movs	r1, #0
 3850 058a B220     		movs	r0, #178
 3851 058c FFF7FEFF 		bl	VXISI2CWrite
 3852              	.LVL421:
3219:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);
 3853              		.loc 1 3219 0
 3854 0590 0021     		movs	r1, #0
 3855 0592 B320     		movs	r0, #179
 3856 0594 FFF7FEFF 		bl	VXISI2CWrite
 3857              	.LVL422:
3220:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);
 3858              		.loc 1 3220 0
 3859 0598 0021     		movs	r1, #0
 3860 059a B420     		movs	r0, #180
 3861 059c FFF7FEFF 		bl	VXISI2CWrite
 3862              	.LVL423:
3221:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);
 3863              		.loc 1 3221 0
 3864 05a0 0021     		movs	r1, #0
 3865 05a2 B520     		movs	r0, #181
 3866 05a4 FFF7FEFF 		bl	VXISI2CWrite
 3867              	.LVL424:
3222:Src/main.c    **** 	VXISI2CWrite(0xB8,0x80);
 3868              		.loc 1 3222 0
 3869 05a8 0021     		movs	r1, #0
 3870 05aa B620     		movs	r0, #182
 3871 05ac FFF7FEFF 		bl	VXISI2CWrite
 3872              	.LVL425:
3223:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);
 3873              		.loc 1 3223 0
 3874 05b0 8021     		movs	r1, #128
 3875 05b2 B820     		movs	r0, #184
 3876 05b4 FFF7FEFF 		bl	VXISI2CWrite
 3877              	.LVL426:
3224:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);
 3878              		.loc 1 3224 0
 3879 05b8 0021     		movs	r1, #0
 3880 05ba B920     		movs	r0, #185
 3881 05bc FFF7FEFF 		bl	VXISI2CWrite
 3882              	.LVL427:
3225:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);
 3883              		.loc 1 3225 0
 3884 05c0 0121     		movs	r1, #1
 3885 05c2 BA20     		movs	r0, #186
ARM GAS  /tmp/ccs2VtGF.s 			page 154


 3886 05c4 FFF7FEFF 		bl	VXISI2CWrite
 3887              	.LVL428:
3226:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);
 3888              		.loc 1 3226 0
 3889 05c8 0021     		movs	r1, #0
 3890 05ca BB20     		movs	r0, #187
 3891 05cc FFF7FEFF 		bl	VXISI2CWrite
 3892              	.LVL429:
3227:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);
 3893              		.loc 1 3227 0
 3894 05d0 9021     		movs	r1, #144
 3895 05d2 BC20     		movs	r0, #188
 3896 05d4 FFF7FEFF 		bl	VXISI2CWrite
 3897              	.LVL430:
3228:Src/main.c    **** 	VXISI2CWrite(0xBE,0x2C);
 3898              		.loc 1 3228 0
 3899 05d8 0121     		movs	r1, #1
 3900 05da BD20     		movs	r0, #189
 3901 05dc FFF7FEFF 		bl	VXISI2CWrite
 3902              	.LVL431:
3229:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);
 3903              		.loc 1 3229 0
 3904 05e0 2C21     		movs	r1, #44
 3905 05e2 BE20     		movs	r0, #190
 3906 05e4 FFF7FEFF 		bl	VXISI2CWrite
 3907              	.LVL432:
3230:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);
 3908              		.loc 1 3230 0
 3909 05e8 0021     		movs	r1, #0
 3910 05ea C020     		movs	r0, #192
 3911 05ec FFF7FEFF 		bl	VXISI2CWrite
 3912              	.LVL433:
3231:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);
 3913              		.loc 1 3231 0
 3914 05f0 2021     		movs	r1, #32
 3915 05f2 C120     		movs	r0, #193
 3916 05f4 FFF7FEFF 		bl	VXISI2CWrite
 3917              	.LVL434:
3232:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);
 3918              		.loc 1 3232 0
 3919 05f8 2021     		movs	r1, #32
 3920 05fa C220     		movs	r0, #194
 3921 05fc FFF7FEFF 		bl	VXISI2CWrite
 3922              	.LVL435:
3233:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);
 3923              		.loc 1 3233 0
 3924 0600 2021     		movs	r1, #32
 3925 0602 C320     		movs	r0, #195
 3926 0604 FFF7FEFF 		bl	VXISI2CWrite
 3927              	.LVL436:
3234:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);
 3928              		.loc 1 3234 0
 3929 0608 2021     		movs	r1, #32
 3930 060a C420     		movs	r0, #196
 3931 060c FFF7FEFF 		bl	VXISI2CWrite
 3932              	.LVL437:
3235:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);
ARM GAS  /tmp/ccs2VtGF.s 			page 155


 3933              		.loc 1 3235 0
 3934 0610 2021     		movs	r1, #32
 3935 0612 C520     		movs	r0, #197
 3936 0614 FFF7FEFF 		bl	VXISI2CWrite
 3937              	.LVL438:
3236:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);
 3938              		.loc 1 3236 0
 3939 0618 FF21     		movs	r1, #255
 3940 061a D020     		movs	r0, #208
 3941 061c FFF7FEFF 		bl	VXISI2CWrite
 3942              	.LVL439:
3237:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);
 3943              		.loc 1 3237 0
 3944 0620 3F21     		movs	r1, #63
 3945 0622 D120     		movs	r0, #209
 3946 0624 FFF7FEFF 		bl	VXISI2CWrite
 3947              	.LVL440:
3238:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);
 3948              		.loc 1 3238 0
 3949 0628 C221     		movs	r1, #194
 3950 062a D220     		movs	r0, #210
 3951 062c FFF7FEFF 		bl	VXISI2CWrite
 3952              	.LVL441:
3239:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);
 3953              		.loc 1 3239 0
 3954 0630 3F21     		movs	r1, #63
 3955 0632 D320     		movs	r0, #211
 3956 0634 FFF7FEFF 		bl	VXISI2CWrite
 3957              	.LVL442:
3240:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);
 3958              		.loc 1 3240 0
 3959 0638 0021     		movs	r1, #0
 3960 063a D420     		movs	r0, #212
 3961 063c FFF7FEFF 		bl	VXISI2CWrite
 3962              	.LVL443:
3241:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);
 3963              		.loc 1 3241 0
 3964 0640 0021     		movs	r1, #0
 3965 0642 D520     		movs	r0, #213
 3966 0644 FFF7FEFF 		bl	VXISI2CWrite
 3967              	.LVL444:
3242:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);
 3968              		.loc 1 3242 0
 3969 0648 0021     		movs	r1, #0
 3970 064a D620     		movs	r0, #214
 3971 064c FFF7FEFF 		bl	VXISI2CWrite
 3972              	.LVL445:
3243:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);
 3973              		.loc 1 3243 0
 3974 0650 1021     		movs	r1, #16
 3975 0652 D720     		movs	r0, #215
 3976 0654 FFF7FEFF 		bl	VXISI2CWrite
 3977              	.LVL446:
3244:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);
 3978              		.loc 1 3244 0
 3979 0658 0021     		movs	r1, #0
 3980 065a D820     		movs	r0, #216
ARM GAS  /tmp/ccs2VtGF.s 			page 156


 3981 065c FFF7FEFF 		bl	VXISI2CWrite
 3982              	.LVL447:
3245:Src/main.c    **** 	VXISI2CWrite(0xDD,0x00);
 3983              		.loc 1 3245 0
 3984 0660 7721     		movs	r1, #119
 3985 0662 DC20     		movs	r0, #220
 3986 0664 FFF7FEFF 		bl	VXISI2CWrite
 3987              	.LVL448:
3246:Src/main.c    **** 	VXISI2CWrite(0xDE,0xAF);
 3988              		.loc 1 3246 0
 3989 0668 0021     		movs	r1, #0
 3990 066a DD20     		movs	r0, #221
 3991 066c FFF7FEFF 		bl	VXISI2CWrite
 3992              	.LVL449:
3247:Src/main.c    **** 	VXISI2CWrite(0xDF,0xEF);
 3993              		.loc 1 3247 0
 3994 0670 AF21     		movs	r1, #175
 3995 0672 DE20     		movs	r0, #222
 3996 0674 FFF7FEFF 		bl	VXISI2CWrite
 3997              	.LVL450:
3248:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);
 3998              		.loc 1 3248 0
 3999 0678 EF21     		movs	r1, #239
 4000 067a DF20     		movs	r0, #223
 4001 067c FFF7FEFF 		bl	VXISI2CWrite
 4002              	.LVL451:
3249:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);
 4003              		.loc 1 3249 0
 4004 0680 0021     		movs	r1, #0
 4005 0682 E020     		movs	r0, #224
 4006 0684 FFF7FEFF 		bl	VXISI2CWrite
 4007              	.LVL452:
3250:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);
 4008              		.loc 1 3250 0
 4009 0688 0021     		movs	r1, #0
 4010 068a E120     		movs	r0, #225
 4011 068c FFF7FEFF 		bl	VXISI2CWrite
 4012              	.LVL453:
3251:Src/main.c    **** 	VXISI2CWrite(0xE3,0x12);
 4013              		.loc 1 3251 0
 4014 0690 0021     		movs	r1, #0
 4015 0692 E220     		movs	r0, #226
 4016 0694 FFF7FEFF 		bl	VXISI2CWrite
 4017              	.LVL454:
3252:Src/main.c    **** 	VXISI2CWrite(0xE4,0xE2);
 4018              		.loc 1 3252 0
 4019 0698 1221     		movs	r1, #18
 4020 069a E320     		movs	r0, #227
 4021 069c FFF7FEFF 		bl	VXISI2CWrite
 4022              	.LVL455:
3253:Src/main.c    **** 	VXISI2CWrite(0xE5,0xD0);
 4023              		.loc 1 3253 0
 4024 06a0 E221     		movs	r1, #226
 4025 06a2 E420     		movs	r0, #228
 4026 06a4 FFF7FEFF 		bl	VXISI2CWrite
 4027              	.LVL456:
3254:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);
ARM GAS  /tmp/ccs2VtGF.s 			page 157


 4028              		.loc 1 3254 0
 4029 06a8 D021     		movs	r1, #208
 4030 06aa E520     		movs	r0, #229
 4031 06ac FFF7FEFF 		bl	VXISI2CWrite
 4032              	.LVL457:
3255:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);
 4033              		.loc 1 3255 0
 4034 06b0 0021     		movs	r1, #0
 4035 06b2 E620     		movs	r0, #230
 4036 06b4 FFF7FEFF 		bl	VXISI2CWrite
 4037              	.LVL458:
3256:Src/main.c    **** 	VXISI2CWrite(0xE8,0x0F);
 4038              		.loc 1 3256 0
 4039 06b8 0021     		movs	r1, #0
 4040 06ba E720     		movs	r0, #231
 4041 06bc FFF7FEFF 		bl	VXISI2CWrite
 4042              	.LVL459:
3257:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);
 4043              		.loc 1 3257 0
 4044 06c0 0F21     		movs	r1, #15
 4045 06c2 E820     		movs	r0, #232
 4046 06c4 FFF7FEFF 		bl	VXISI2CWrite
 4047              	.LVL460:
3258:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);
 4048              		.loc 1 3258 0
 4049 06c8 0021     		movs	r1, #0
 4050 06ca E920     		movs	r0, #233
 4051 06cc FFF7FEFF 		bl	VXISI2CWrite
 4052              	.LVL461:
3259:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);
 4053              		.loc 1 3259 0
 4054 06d0 0021     		movs	r1, #0
 4055 06d2 EA20     		movs	r0, #234
 4056 06d4 FFF7FEFF 		bl	VXISI2CWrite
 4057              	.LVL462:
3260:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);
 4058              		.loc 1 3260 0
 4059 06d8 0021     		movs	r1, #0
 4060 06da EB20     		movs	r0, #235
 4061 06dc FFF7FEFF 		bl	VXISI2CWrite
 4062              	.LVL463:
3261:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);
 4063              		.loc 1 3261 0
 4064 06e0 8821     		movs	r1, #136
 4065 06e2 EC20     		movs	r0, #236
 4066 06e4 FFF7FEFF 		bl	VXISI2CWrite
 4067              	.LVL464:
3262:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);
 4068              		.loc 1 3262 0
 4069 06e8 0021     		movs	r1, #0
 4070 06ea ED20     		movs	r0, #237
 4071 06ec FFF7FEFF 		bl	VXISI2CWrite
 4072              	.LVL465:
3263:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);
 4073              		.loc 1 3263 0
 4074 06f0 0021     		movs	r1, #0
 4075 06f2 EE20     		movs	r0, #238
ARM GAS  /tmp/ccs2VtGF.s 			page 158


 4076 06f4 FFF7FEFF 		bl	VXISI2CWrite
 4077              	.LVL466:
3264:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);
 4078              		.loc 1 3264 0
 4079 06f8 0021     		movs	r1, #0
 4080 06fa EF20     		movs	r0, #239
 4081 06fc FFF7FEFF 		bl	VXISI2CWrite
 4082              	.LVL467:
3265:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);
 4083              		.loc 1 3265 0
 4084 0700 3021     		movs	r1, #48
 4085 0702 F020     		movs	r0, #240
 4086 0704 FFF7FEFF 		bl	VXISI2CWrite
 4087              	.LVL468:
3266:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);
 4088              		.loc 1 3266 0
 4089 0708 4321     		movs	r1, #67
 4090 070a F120     		movs	r0, #241
 4091 070c FFF7FEFF 		bl	VXISI2CWrite
 4092              	.LVL469:
3267:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);
 4093              		.loc 1 3267 0
 4094 0710 1F21     		movs	r1, #31
 4095 0712 F220     		movs	r0, #242
 4096 0714 FFF7FEFF 		bl	VXISI2CWrite
 4097              	.LVL470:
3268:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);
 4098              		.loc 1 3268 0
 4099 0718 1F21     		movs	r1, #31
 4100 071a F320     		movs	r0, #243
 4101 071c FFF7FEFF 		bl	VXISI2CWrite
 4102              	.LVL471:
3269:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);
 4103              		.loc 1 3269 0
 4104 0720 2221     		movs	r1, #34
 4105 0722 F420     		movs	r0, #244
 4106 0724 FFF7FEFF 		bl	VXISI2CWrite
 4107              	.LVL472:
3270:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);
 4108              		.loc 1 3270 0
 4109 0728 7321     		movs	r1, #115
 4110 072a F520     		movs	r0, #245
 4111 072c FFF7FEFF 		bl	VXISI2CWrite
 4112              	.LVL473:
3271:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);
 4113              		.loc 1 3271 0
 4114 0730 5321     		movs	r1, #83
 4115 0732 F620     		movs	r0, #246
 4116 0734 FFF7FEFF 		bl	VXISI2CWrite
 4117              	.LVL474:
3272:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);
 4118              		.loc 1 3272 0
 4119 0738 8021     		movs	r1, #128
 4120 073a F720     		movs	r0, #247
 4121 073c FFF7FEFF 		bl	VXISI2CWrite
 4122              	.LVL475:
3273:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);
ARM GAS  /tmp/ccs2VtGF.s 			page 159


 4123              		.loc 1 3273 0
 4124 0740 0121     		movs	r1, #1
 4125 0742 F820     		movs	r0, #248
 4126 0744 FFF7FEFF 		bl	VXISI2CWrite
 4127              	.LVL476:
3274:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);
 4128              		.loc 1 3274 0
 4129 0748 0121     		movs	r1, #1
 4130 074a F920     		movs	r0, #249
 4131 074c FFF7FEFF 		bl	VXISI2CWrite
 4132              	.LVL477:
3275:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);
 4133              		.loc 1 3275 0
 4134 0750 0021     		movs	r1, #0
 4135 0752 FA20     		movs	r0, #250
 4136 0754 FFF7FEFF 		bl	VXISI2CWrite
 4137              	.LVL478:
3276:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);
 4138              		.loc 1 3276 0
 4139 0758 0021     		movs	r1, #0
 4140 075a FB20     		movs	r0, #251
 4141 075c FFF7FEFF 		bl	VXISI2CWrite
 4142              	.LVL479:
3277:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);
 4143              		.loc 1 3277 0
 4144 0760 0021     		movs	r1, #0
 4145 0762 FC20     		movs	r0, #252
 4146 0764 FFF7FEFF 		bl	VXISI2CWrite
 4147              	.LVL480:
3278:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);
 4148              		.loc 1 3278 0
 4149 0768 7021     		movs	r1, #112
 4150 076a FD20     		movs	r0, #253
 4151 076c FFF7FEFF 		bl	VXISI2CWrite
 4152              	.LVL481:
3279:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);
 4153              		.loc 1 3279 0
 4154 0770 4021     		movs	r1, #64
 4155 0772 FE20     		movs	r0, #254
 4156 0774 FFF7FEFF 		bl	VXISI2CWrite
 4157              	.LVL482:
3280:Src/main.c    **** 					 
 4158              		.loc 1 3280 0
 4159 0778 0721     		movs	r1, #7
 4160 077a FF20     		movs	r0, #255
 4161 077c FFF7FEFF 		bl	VXISI2CWrite
 4162              	.LVL483:
3284:Src/main.c    **** 
 4163              		.loc 1 3284 0
 4164 0780 08BD     		pop	{r3, pc}
 4165              		.cfi_endproc
 4166              	.LFE92:
 4168 0782 00BF     		.section	.text.SET_VS4210_1280_720_out,"ax",%progbits
 4169              		.align	1
 4170              		.global	SET_VS4210_1280_720_out
 4171              		.syntax unified
 4172              		.thumb
ARM GAS  /tmp/ccs2VtGF.s 			page 160


 4173              		.thumb_func
 4174              		.fpu softvfp
 4176              	SET_VS4210_1280_720_out:
 4177              	.LFB93:
3287:Src/main.c    **** 	Printf("\r\nSET_VS4210_1280_720_out");
 4178              		.loc 1 3287 0
 4179              		.cfi_startproc
 4180              		@ args = 0, pretend = 0, frame = 0
 4181              		@ frame_needed = 0, uses_anonymous_args = 0
 4182 0000 08B5     		push	{r3, lr}
 4183              	.LCFI41:
 4184              		.cfi_def_cfa_offset 8
 4185              		.cfi_offset 3, -8
 4186              		.cfi_offset 14, -4
3288:Src/main.c    **** 
 4187              		.loc 1 3288 0
 4188 0002 FE48     		ldr	r0, .L207
 4189 0004 FFF7FEFF 		bl	Printf
 4190              	.LVL484:
3290:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);
 4191              		.loc 1 3290 0
 4192 0008 0021     		movs	r1, #0
 4193 000a 0120     		movs	r0, #1
 4194 000c FFF7FEFF 		bl	VXISI2CWrite
 4195              	.LVL485:
3291:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);
 4196              		.loc 1 3291 0
 4197 0010 0021     		movs	r1, #0
 4198 0012 0220     		movs	r0, #2
 4199 0014 FFF7FEFF 		bl	VXISI2CWrite
 4200              	.LVL486:
3292:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);
 4201              		.loc 1 3292 0
 4202 0018 7521     		movs	r1, #117
 4203 001a 0320     		movs	r0, #3
 4204 001c FFF7FEFF 		bl	VXISI2CWrite
 4205              	.LVL487:
3293:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);
 4206              		.loc 1 3293 0
 4207 0020 1821     		movs	r1, #24
 4208 0022 0420     		movs	r0, #4
 4209 0024 FFF7FEFF 		bl	VXISI2CWrite
 4210              	.LVL488:
3294:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);
 4211              		.loc 1 3294 0
 4212 0028 8021     		movs	r1, #128
 4213 002a 0520     		movs	r0, #5
 4214 002c FFF7FEFF 		bl	VXISI2CWrite
 4215              	.LVL489:
3295:Src/main.c    **** 	VXISI2CWrite(0x07,0x08);
 4216              		.loc 1 3295 0
 4217 0030 2021     		movs	r1, #32
 4218 0032 0620     		movs	r0, #6
 4219 0034 FFF7FEFF 		bl	VXISI2CWrite
 4220              	.LVL490:
3296:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);
 4221              		.loc 1 3296 0
ARM GAS  /tmp/ccs2VtGF.s 			page 161


 4222 0038 0821     		movs	r1, #8
 4223 003a 0720     		movs	r0, #7
 4224 003c FFF7FEFF 		bl	VXISI2CWrite
 4225              	.LVL491:
3297:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);
 4226              		.loc 1 3297 0
 4227 0040 4021     		movs	r1, #64
 4228 0042 0820     		movs	r0, #8
 4229 0044 FFF7FEFF 		bl	VXISI2CWrite
 4230              	.LVL492:
3298:Src/main.c    **** 	VXISI2CWrite(0x0A,0x41);
 4231              		.loc 1 3298 0
 4232 0048 0A21     		movs	r1, #10
 4233 004a 0920     		movs	r0, #9
 4234 004c FFF7FEFF 		bl	VXISI2CWrite
 4235              	.LVL493:
3299:Src/main.c    **** 	VXISI2CWrite(0x0B,0x07);
 4236              		.loc 1 3299 0
 4237 0050 4121     		movs	r1, #65
 4238 0052 0A20     		movs	r0, #10
 4239 0054 FFF7FEFF 		bl	VXISI2CWrite
 4240              	.LVL494:
3300:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);
 4241              		.loc 1 3300 0
 4242 0058 0721     		movs	r1, #7
 4243 005a 0B20     		movs	r0, #11
 4244 005c FFF7FEFF 		bl	VXISI2CWrite
 4245              	.LVL495:
3301:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);
 4246              		.loc 1 3301 0
 4247 0060 0021     		movs	r1, #0
 4248 0062 0C20     		movs	r0, #12
 4249 0064 FFF7FEFF 		bl	VXISI2CWrite
 4250              	.LVL496:
3302:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);
 4251              		.loc 1 3302 0
 4252 0068 2021     		movs	r1, #32
 4253 006a 0D20     		movs	r0, #13
 4254 006c FFF7FEFF 		bl	VXISI2CWrite
 4255              	.LVL497:
3303:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);
 4256              		.loc 1 3303 0
 4257 0070 1021     		movs	r1, #16
 4258 0072 0E20     		movs	r0, #14
 4259 0074 FFF7FEFF 		bl	VXISI2CWrite
 4260              	.LVL498:
3304:Src/main.c    **** 	VXISI2CWrite(0x10,0x80);
 4261              		.loc 1 3304 0
 4262 0078 0021     		movs	r1, #0
 4263 007a 0F20     		movs	r0, #15
 4264 007c FFF7FEFF 		bl	VXISI2CWrite
 4265              	.LVL499:
3305:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);
 4266              		.loc 1 3305 0
 4267 0080 8021     		movs	r1, #128
 4268 0082 1020     		movs	r0, #16
 4269 0084 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccs2VtGF.s 			page 162


 4270              	.LVL500:
3306:Src/main.c    **** 	VXISI2CWrite(0x12,0x21);
 4271              		.loc 1 3306 0
 4272 0088 8221     		movs	r1, #130
 4273 008a 1120     		movs	r0, #17
 4274 008c FFF7FEFF 		bl	VXISI2CWrite
 4275              	.LVL501:
3307:Src/main.c    **** 	VXISI2CWrite(0x13,0xD0);
 4276              		.loc 1 3307 0
 4277 0090 2121     		movs	r1, #33
 4278 0092 1220     		movs	r0, #18
 4279 0094 FFF7FEFF 		bl	VXISI2CWrite
 4280              	.LVL502:
3308:Src/main.c    **** 	VXISI2CWrite(0x14,0xE0);
 4281              		.loc 1 3308 0
 4282 0098 D021     		movs	r1, #208
 4283 009a 1320     		movs	r0, #19
 4284 009c FFF7FEFF 		bl	VXISI2CWrite
 4285              	.LVL503:
3309:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);
 4286              		.loc 1 3309 0
 4287 00a0 E021     		movs	r1, #224
 4288 00a2 1420     		movs	r0, #20
 4289 00a4 FFF7FEFF 		bl	VXISI2CWrite
 4290              	.LVL504:
3310:Src/main.c    **** 	VXISI2CWrite(0x16,0xFE);
 4291              		.loc 1 3310 0
 4292 00a8 7821     		movs	r1, #120
 4293 00aa 1520     		movs	r0, #21
 4294 00ac FFF7FEFF 		bl	VXISI2CWrite
 4295              	.LVL505:
3311:Src/main.c    **** 	VXISI2CWrite(0x17,0x00);
 4296              		.loc 1 3311 0
 4297 00b0 FE21     		movs	r1, #254
 4298 00b2 1620     		movs	r0, #22
 4299 00b4 FFF7FEFF 		bl	VXISI2CWrite
 4300              	.LVL506:
3312:Src/main.c    **** 	VXISI2CWrite(0x18,0xC8);
 4301              		.loc 1 3312 0
 4302 00b8 0021     		movs	r1, #0
 4303 00ba 1720     		movs	r0, #23
 4304 00bc FFF7FEFF 		bl	VXISI2CWrite
 4305              	.LVL507:
3313:Src/main.c    **** 	VXISI2CWrite(0x19,0x00);
 4306              		.loc 1 3313 0
 4307 00c0 C821     		movs	r1, #200
 4308 00c2 1820     		movs	r0, #24
 4309 00c4 FFF7FEFF 		bl	VXISI2CWrite
 4310              	.LVL508:
3314:Src/main.c    **** 	VXISI2CWrite(0x1A,0x23);
 4311              		.loc 1 3314 0
 4312 00c8 0021     		movs	r1, #0
 4313 00ca 1920     		movs	r0, #25
 4314 00cc FFF7FEFF 		bl	VXISI2CWrite
 4315              	.LVL509:
3315:Src/main.c    **** 	VXISI2CWrite(0x1B,0x00);
 4316              		.loc 1 3315 0
ARM GAS  /tmp/ccs2VtGF.s 			page 163


 4317 00d0 2321     		movs	r1, #35
 4318 00d2 1A20     		movs	r0, #26
 4319 00d4 FFF7FEFF 		bl	VXISI2CWrite
 4320              	.LVL510:
3316:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);
 4321              		.loc 1 3316 0
 4322 00d8 0021     		movs	r1, #0
 4323 00da 1B20     		movs	r0, #27
 4324 00dc FFF7FEFF 		bl	VXISI2CWrite
 4325              	.LVL511:
3317:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);
 4326              		.loc 1 3317 0
 4327 00e0 0021     		movs	r1, #0
 4328 00e2 1C20     		movs	r0, #28
 4329 00e4 FFF7FEFF 		bl	VXISI2CWrite
 4330              	.LVL512:
3318:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);
 4331              		.loc 1 3318 0
 4332 00e8 0021     		movs	r1, #0
 4333 00ea 1D20     		movs	r0, #29
 4334 00ec FFF7FEFF 		bl	VXISI2CWrite
 4335              	.LVL513:
3319:Src/main.c    **** 	VXISI2CWrite(0x1F,0x32);
 4336              		.loc 1 3319 0
 4337 00f0 2021     		movs	r1, #32
 4338 00f2 1E20     		movs	r0, #30
 4339 00f4 FFF7FEFF 		bl	VXISI2CWrite
 4340              	.LVL514:
3320:Src/main.c    **** 	VXISI2CWrite(0x20,0x5A);
 4341              		.loc 1 3320 0
 4342 00f8 3221     		movs	r1, #50
 4343 00fa 1F20     		movs	r0, #31
 4344 00fc FFF7FEFF 		bl	VXISI2CWrite
 4345              	.LVL515:
3321:Src/main.c    **** 	VXISI2CWrite(0x21,0x0D);
 4346              		.loc 1 3321 0
 4347 0100 5A21     		movs	r1, #90
 4348 0102 2020     		movs	r0, #32
 4349 0104 FFF7FEFF 		bl	VXISI2CWrite
 4350              	.LVL516:
3322:Src/main.c    **** 	VXISI2CWrite(0x22,0x32);
 4351              		.loc 1 3322 0
 4352 0108 0D21     		movs	r1, #13
 4353 010a 2120     		movs	r0, #33
 4354 010c FFF7FEFF 		bl	VXISI2CWrite
 4355              	.LVL517:
3323:Src/main.c    **** 	VXISI2CWrite(0x23,0x5A);
 4356              		.loc 1 3323 0
 4357 0110 3221     		movs	r1, #50
 4358 0112 2220     		movs	r0, #34
 4359 0114 FFF7FEFF 		bl	VXISI2CWrite
 4360              	.LVL518:
3324:Src/main.c    **** 	VXISI2CWrite(0x24,0xD0);
 4361              		.loc 1 3324 0
 4362 0118 5A21     		movs	r1, #90
 4363 011a 2320     		movs	r0, #35
 4364 011c FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccs2VtGF.s 			page 164


 4365              	.LVL519:
3325:Src/main.c    **** 	VXISI2CWrite(0x25,0x21);
 4366              		.loc 1 3325 0
 4367 0120 D021     		movs	r1, #208
 4368 0122 2420     		movs	r0, #36
 4369 0124 FFF7FEFF 		bl	VXISI2CWrite
 4370              	.LVL520:
3326:Src/main.c    **** 	VXISI2CWrite(0x26,0x0D);
 4371              		.loc 1 3326 0
 4372 0128 2121     		movs	r1, #33
 4373 012a 2520     		movs	r0, #37
 4374 012c FFF7FEFF 		bl	VXISI2CWrite
 4375              	.LVL521:
3327:Src/main.c    **** 	VXISI2CWrite(0x27,0xE0);
 4376              		.loc 1 3327 0
 4377 0130 0D21     		movs	r1, #13
 4378 0132 2620     		movs	r0, #38
 4379 0134 FFF7FEFF 		bl	VXISI2CWrite
 4380              	.LVL522:
3328:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);
 4381              		.loc 1 3328 0
 4382 0138 E021     		movs	r1, #224
 4383 013a 2720     		movs	r0, #39
 4384 013c FFF7FEFF 		bl	VXISI2CWrite
 4385              	.LVL523:
3329:Src/main.c    **** 	VXISI2CWrite(0x29,0x00);
 4386              		.loc 1 3329 0
 4387 0140 F021     		movs	r1, #240
 4388 0142 2820     		movs	r0, #40
 4389 0144 FFF7FEFF 		bl	VXISI2CWrite
 4390              	.LVL524:
3330:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);
 4391              		.loc 1 3330 0
 4392 0148 0021     		movs	r1, #0
 4393 014a 2920     		movs	r0, #41
 4394 014c FFF7FEFF 		bl	VXISI2CWrite
 4395              	.LVL525:
3331:Src/main.c    **** 	VXISI2CWrite(0x2B,0x01);
 4396              		.loc 1 3331 0
 4397 0150 0021     		movs	r1, #0
 4398 0152 2A20     		movs	r0, #42
 4399 0154 FFF7FEFF 		bl	VXISI2CWrite
 4400              	.LVL526:
3332:Src/main.c    **** 	VXISI2CWrite(0x2C,0xFF);
 4401              		.loc 1 3332 0
 4402 0158 0121     		movs	r1, #1
 4403 015a 2B20     		movs	r0, #43
 4404 015c FFF7FEFF 		bl	VXISI2CWrite
 4405              	.LVL527:
3333:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);
 4406              		.loc 1 3333 0
 4407 0160 FF21     		movs	r1, #255
 4408 0162 2C20     		movs	r0, #44
 4409 0164 FFF7FEFF 		bl	VXISI2CWrite
 4410              	.LVL528:
3334:Src/main.c    **** 	VXISI2CWrite(0x2E,0x12);
 4411              		.loc 1 3334 0
ARM GAS  /tmp/ccs2VtGF.s 			page 165


 4412 0168 0021     		movs	r1, #0
 4413 016a 2D20     		movs	r0, #45
 4414 016c FFF7FEFF 		bl	VXISI2CWrite
 4415              	.LVL529:
3335:Src/main.c    **** 	VXISI2CWrite(0x2F,0xD0);
 4416              		.loc 1 3335 0
 4417 0170 1221     		movs	r1, #18
 4418 0172 2E20     		movs	r0, #46
 4419 0174 FFF7FEFF 		bl	VXISI2CWrite
 4420              	.LVL530:
3336:Src/main.c    **** 	VXISI2CWrite(0x30,0xE0);
 4421              		.loc 1 3336 0
 4422 0178 D021     		movs	r1, #208
 4423 017a 2F20     		movs	r0, #47
 4424 017c FFF7FEFF 		bl	VXISI2CWrite
 4425              	.LVL531:
3337:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);
 4426              		.loc 1 3337 0
 4427 0180 E021     		movs	r1, #224
 4428 0182 3020     		movs	r0, #48
 4429 0184 FFF7FEFF 		bl	VXISI2CWrite
 4430              	.LVL532:
3338:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);
 4431              		.loc 1 3338 0
 4432 0188 8021     		movs	r1, #128
 4433 018a 3120     		movs	r0, #49
 4434 018c FFF7FEFF 		bl	VXISI2CWrite
 4435              	.LVL533:
3339:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);
 4436              		.loc 1 3339 0
 4437 0190 8021     		movs	r1, #128
 4438 0192 3220     		movs	r0, #50
 4439 0194 FFF7FEFF 		bl	VXISI2CWrite
 4440              	.LVL534:
3340:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);
 4441              		.loc 1 3340 0
 4442 0198 8021     		movs	r1, #128
 4443 019a 3320     		movs	r0, #51
 4444 019c FFF7FEFF 		bl	VXISI2CWrite
 4445              	.LVL535:
3341:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);
 4446              		.loc 1 3341 0
 4447 01a0 A021     		movs	r1, #160
 4448 01a2 3420     		movs	r0, #52
 4449 01a4 FFF7FEFF 		bl	VXISI2CWrite
 4450              	.LVL536:
3342:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);
 4451              		.loc 1 3342 0
 4452 01a8 1821     		movs	r1, #24
 4453 01aa 3520     		movs	r0, #53
 4454 01ac FFF7FEFF 		bl	VXISI2CWrite
 4455              	.LVL537:
3343:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);
 4456              		.loc 1 3343 0
 4457 01b0 4621     		movs	r1, #70
 4458 01b2 3620     		movs	r0, #54
 4459 01b4 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccs2VtGF.s 			page 166


 4460              	.LVL538:
3344:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);
 4461              		.loc 1 3344 0
 4462 01b8 6421     		movs	r1, #100
 4463 01ba 3720     		movs	r0, #55
 4464 01bc FFF7FEFF 		bl	VXISI2CWrite
 4465              	.LVL539:
3345:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);
 4466              		.loc 1 3345 0
 4467 01c0 0021     		movs	r1, #0
 4468 01c2 3820     		movs	r0, #56
 4469 01c4 FFF7FEFF 		bl	VXISI2CWrite
 4470              	.LVL540:
3346:Src/main.c    **** 	VXISI2CWrite(0x3A,0x03);
 4471              		.loc 1 3346 0
 4472 01c8 FF21     		movs	r1, #255
 4473 01ca 3920     		movs	r0, #57
 4474 01cc FFF7FEFF 		bl	VXISI2CWrite
 4475              	.LVL541:
3347:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);
 4476              		.loc 1 3347 0
 4477 01d0 0321     		movs	r1, #3
 4478 01d2 3A20     		movs	r0, #58
 4479 01d4 FFF7FEFF 		bl	VXISI2CWrite
 4480              	.LVL542:
3348:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);
 4481              		.loc 1 3348 0
 4482 01d8 8021     		movs	r1, #128
 4483 01da 3B20     		movs	r0, #59
 4484 01dc FFF7FEFF 		bl	VXISI2CWrite
 4485              	.LVL543:
3349:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);
 4486              		.loc 1 3349 0
 4487 01e0 8021     		movs	r1, #128
 4488 01e2 3C20     		movs	r0, #60
 4489 01e4 FFF7FEFF 		bl	VXISI2CWrite
 4490              	.LVL544:
3350:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);
 4491              		.loc 1 3350 0
 4492 01e8 8021     		movs	r1, #128
 4493 01ea 3D20     		movs	r0, #61
 4494 01ec FFF7FEFF 		bl	VXISI2CWrite
 4495              	.LVL545:
3351:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);
 4496              		.loc 1 3351 0
 4497 01f0 8021     		movs	r1, #128
 4498 01f2 3E20     		movs	r0, #62
 4499 01f4 FFF7FEFF 		bl	VXISI2CWrite
 4500              	.LVL546:
3352:Src/main.c    **** 	//VXISI2CWrite(0xVXISI);2CWrite(0x80
 4501              		.loc 1 3352 0
 4502 01f8 8021     		movs	r1, #128
 4503 01fa 3F20     		movs	r0, #63
 4504 01fc FFF7FEFF 		bl	VXISI2CWrite
 4505              	.LVL547:
3354:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);
 4506              		.loc 1 3354 0
ARM GAS  /tmp/ccs2VtGF.s 			page 167


 4507 0200 6021     		movs	r1, #96
 4508 0202 4120     		movs	r0, #65
 4509 0204 FFF7FEFF 		bl	VXISI2CWrite
 4510              	.LVL548:
3355:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);
 4511              		.loc 1 3355 0
 4512 0208 5F21     		movs	r1, #95
 4513 020a 4220     		movs	r0, #66
 4514 020c FFF7FEFF 		bl	VXISI2CWrite
 4515              	.LVL549:
3356:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);
 4516              		.loc 1 3356 0
 4517 0210 3721     		movs	r1, #55
 4518 0212 4320     		movs	r0, #67
 4519 0214 FFF7FEFF 		bl	VXISI2CWrite
 4520              	.LVL550:
3357:Src/main.c    **** 	VXISI2CWrite(0x45,0x04);
 4521              		.loc 1 3357 0
 4522 0218 1421     		movs	r1, #20
 4523 021a 4420     		movs	r0, #68
 4524 021c FFF7FEFF 		bl	VXISI2CWrite
 4525              	.LVL551:
3358:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);
 4526              		.loc 1 3358 0
 4527 0220 0421     		movs	r1, #4
 4528 0222 4520     		movs	r0, #69
 4529 0224 FFF7FEFF 		bl	VXISI2CWrite
 4530              	.LVL552:
3359:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);
 4531              		.loc 1 3359 0
 4532 0228 0021     		movs	r1, #0
 4533 022a 4620     		movs	r0, #70
 4534 022c FFF7FEFF 		bl	VXISI2CWrite
 4535              	.LVL553:
3360:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);
 4536              		.loc 1 3360 0
 4537 0230 0021     		movs	r1, #0
 4538 0232 4720     		movs	r0, #71
 4539 0234 FFF7FEFF 		bl	VXISI2CWrite
 4540              	.LVL554:
3361:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);
 4541              		.loc 1 3361 0
 4542 0238 0021     		movs	r1, #0
 4543 023a 4820     		movs	r0, #72
 4544 023c FFF7FEFF 		bl	VXISI2CWrite
 4545              	.LVL555:
3362:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);
 4546              		.loc 1 3362 0
 4547 0240 0021     		movs	r1, #0
 4548 0242 4920     		movs	r0, #73
 4549 0244 FFF7FEFF 		bl	VXISI2CWrite
 4550              	.LVL556:
3363:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);
 4551              		.loc 1 3363 0
 4552 0248 2021     		movs	r1, #32
 4553 024a 4B20     		movs	r0, #75
 4554 024c FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccs2VtGF.s 			page 168


 4555              	.LVL557:
3364:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);
 4556              		.loc 1 3364 0
 4557 0250 0021     		movs	r1, #0
 4558 0252 4C20     		movs	r0, #76
 4559 0254 FFF7FEFF 		bl	VXISI2CWrite
 4560              	.LVL558:
3365:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);
 4561              		.loc 1 3365 0
 4562 0258 0021     		movs	r1, #0
 4563 025a 4D20     		movs	r0, #77
 4564 025c FFF7FEFF 		bl	VXISI2CWrite
 4565              	.LVL559:
3366:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);
 4566              		.loc 1 3366 0
 4567 0260 0021     		movs	r1, #0
 4568 0262 4E20     		movs	r0, #78
 4569 0264 FFF7FEFF 		bl	VXISI2CWrite
 4570              	.LVL560:
3367:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);
 4571              		.loc 1 3367 0
 4572 0268 7F21     		movs	r1, #127
 4573 026a 4F20     		movs	r0, #79
 4574 026c FFF7FEFF 		bl	VXISI2CWrite
 4575              	.LVL561:
3368:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);
 4576              		.loc 1 3368 0
 4577 0270 2021     		movs	r1, #32
 4578 0272 5020     		movs	r0, #80
 4579 0274 FFF7FEFF 		bl	VXISI2CWrite
 4580              	.LVL562:
3369:Src/main.c    **** 	VXISI2CWrite(0x52,0x00);
 4581              		.loc 1 3369 0
 4582 0278 0021     		movs	r1, #0
 4583 027a 5120     		movs	r0, #81
 4584 027c FFF7FEFF 		bl	VXISI2CWrite
 4585              	.LVL563:
3370:Src/main.c    **** 	VXISI2CWrite(0x53,0x04);
 4586              		.loc 1 3370 0
 4587 0280 0021     		movs	r1, #0
 4588 0282 5220     		movs	r0, #82
 4589 0284 FFF7FEFF 		bl	VXISI2CWrite
 4590              	.LVL564:
3371:Src/main.c    **** 	VXISI2CWrite(0x54,0x00);
 4591              		.loc 1 3371 0
 4592 0288 0421     		movs	r1, #4
 4593 028a 5320     		movs	r0, #83
 4594 028c FFF7FEFF 		bl	VXISI2CWrite
 4595              	.LVL565:
3372:Src/main.c    **** 	VXISI2CWrite(0x55,0xE0);
 4596              		.loc 1 3372 0
 4597 0290 0021     		movs	r1, #0
 4598 0292 5420     		movs	r0, #84
 4599 0294 FFF7FEFF 		bl	VXISI2CWrite
 4600              	.LVL566:
3373:Src/main.c    **** 	VXISI2CWrite(0x56,0x40);
 4601              		.loc 1 3373 0
ARM GAS  /tmp/ccs2VtGF.s 			page 169


 4602 0298 E021     		movs	r1, #224
 4603 029a 5520     		movs	r0, #85
 4604 029c FFF7FEFF 		bl	VXISI2CWrite
 4605              	.LVL567:
3374:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);
 4606              		.loc 1 3374 0
 4607 02a0 4021     		movs	r1, #64
 4608 02a2 5620     		movs	r0, #86
 4609 02a4 FFF7FEFF 		bl	VXISI2CWrite
 4610              	.LVL568:
3375:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);
 4611              		.loc 1 3375 0
 4612 02a8 0421     		movs	r1, #4
 4613 02aa 5720     		movs	r0, #87
 4614 02ac FFF7FEFF 		bl	VXISI2CWrite
 4615              	.LVL569:
3376:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);
 4616              		.loc 1 3376 0
 4617 02b0 0021     		movs	r1, #0
 4618 02b2 5820     		movs	r0, #88
 4619 02b4 FFF7FEFF 		bl	VXISI2CWrite
 4620              	.LVL570:
3377:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);
 4621              		.loc 1 3377 0
 4622 02b8 0821     		movs	r1, #8
 4623 02ba 5920     		movs	r0, #89
 4624 02bc FFF7FEFF 		bl	VXISI2CWrite
 4625              	.LVL571:
3378:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);
 4626              		.loc 1 3378 0
 4627 02c0 1021     		movs	r1, #16
 4628 02c2 5A20     		movs	r0, #90
 4629 02c4 FFF7FEFF 		bl	VXISI2CWrite
 4630              	.LVL572:
3379:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);
 4631              		.loc 1 3379 0
 4632 02c8 0021     		movs	r1, #0
 4633 02ca 5B20     		movs	r0, #91
 4634 02cc FFF7FEFF 		bl	VXISI2CWrite
 4635              	.LVL573:
3380:Src/main.c    **** 	VXISI2CWrite(0x5D,0x40);
 4636              		.loc 1 3380 0
 4637 02d0 6821     		movs	r1, #104
 4638 02d2 5C20     		movs	r0, #92
 4639 02d4 FFF7FEFF 		bl	VXISI2CWrite
 4640              	.LVL574:
3381:Src/main.c    **** 	VXISI2CWrite(0x5E,0x08);
 4641              		.loc 1 3381 0
 4642 02d8 4021     		movs	r1, #64
 4643 02da 5D20     		movs	r0, #93
 4644 02dc FFF7FEFF 		bl	VXISI2CWrite
 4645              	.LVL575:
3382:Src/main.c    **** 	VXISI2CWrite(0x5F,0x00);
 4646              		.loc 1 3382 0
 4647 02e0 0821     		movs	r1, #8
 4648 02e2 5E20     		movs	r0, #94
 4649 02e4 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccs2VtGF.s 			page 170


 4650              	.LVL576:
3383:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);
 4651              		.loc 1 3383 0
 4652 02e8 0021     		movs	r1, #0
 4653 02ea 5F20     		movs	r0, #95
 4654 02ec FFF7FEFF 		bl	VXISI2CWrite
 4655              	.LVL577:
3384:Src/main.c    **** 	VXISI2CWrite(0x61,0x54);
 4656              		.loc 1 3384 0
 4657 02f0 E021     		movs	r1, #224
 4658 02f2 6020     		movs	r0, #96
 4659 02f4 FFF7FEFF 		bl	VXISI2CWrite
 4660              	.LVL578:
3385:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);
 4661              		.loc 1 3385 0
 4662 02f8 5421     		movs	r1, #84
 4663 02fa 6120     		movs	r0, #97
 4664 02fc FFF7FEFF 		bl	VXISI2CWrite
 4665              	.LVL579:
3386:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);
 4666              		.loc 1 3386 0
 4667 0300 3321     		movs	r1, #51
 4668 0302 6220     		movs	r0, #98
 4669 0304 FFF7FEFF 		bl	VXISI2CWrite
 4670              	.LVL580:
3387:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);
 4671              		.loc 1 3387 0
 4672 0308 0121     		movs	r1, #1
 4673 030a 6320     		movs	r0, #99
 4674 030c FFF7FEFF 		bl	VXISI2CWrite
 4675              	.LVL581:
3388:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);
 4676              		.loc 1 3388 0
 4677 0310 FF21     		movs	r1, #255
 4678 0312 6420     		movs	r0, #100
 4679 0314 FFF7FEFF 		bl	VXISI2CWrite
 4680              	.LVL582:
3389:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);
 4681              		.loc 1 3389 0
 4682 0318 0121     		movs	r1, #1
 4683 031a 6520     		movs	r0, #101
 4684 031c FFF7FEFF 		bl	VXISI2CWrite
 4685              	.LVL583:
3390:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);
 4686              		.loc 1 3390 0
 4687 0320 FF21     		movs	r1, #255
 4688 0322 6620     		movs	r0, #102
 4689 0324 FFF7FEFF 		bl	VXISI2CWrite
 4690              	.LVL584:
3391:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);
 4691              		.loc 1 3391 0
 4692 0328 8921     		movs	r1, #137
 4693 032a 6720     		movs	r0, #103
 4694 032c FFF7FEFF 		bl	VXISI2CWrite
 4695              	.LVL585:
3392:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);
 4696              		.loc 1 3392 0
ARM GAS  /tmp/ccs2VtGF.s 			page 171


 4697 0330 AB21     		movs	r1, #171
 4698 0332 6820     		movs	r0, #104
 4699 0334 FFF7FEFF 		bl	VXISI2CWrite
 4700              	.LVL586:
3393:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);
 4701              		.loc 1 3393 0
 4702 0338 8821     		movs	r1, #136
 4703 033a 6920     		movs	r0, #105
 4704 033c FFF7FEFF 		bl	VXISI2CWrite
 4705              	.LVL587:
3394:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);
 4706              		.loc 1 3394 0
 4707 0340 6E21     		movs	r1, #110
 4708 0342 6A20     		movs	r0, #106
 4709 0344 FFF7FEFF 		bl	VXISI2CWrite
 4710              	.LVL588:
3395:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);
 4711              		.loc 1 3395 0
 4712 0348 6E21     		movs	r1, #110
 4713 034a 6B20     		movs	r0, #107
 4714 034c FFF7FEFF 		bl	VXISI2CWrite
 4715              	.LVL589:
3396:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);
 4716              		.loc 1 3396 0
 4717 0350 6E21     		movs	r1, #110
 4718 0352 6C20     		movs	r0, #108
 4719 0354 FFF7FEFF 		bl	VXISI2CWrite
 4720              	.LVL590:
3397:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);
 4721              		.loc 1 3397 0
 4722 0358 0021     		movs	r1, #0
 4723 035a 6D20     		movs	r0, #109
 4724 035c FFF7FEFF 		bl	VXISI2CWrite
 4725              	.LVL591:
3398:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);
 4726              		.loc 1 3398 0
 4727 0360 0021     		movs	r1, #0
 4728 0362 6E20     		movs	r0, #110
 4729 0364 FFF7FEFF 		bl	VXISI2CWrite
 4730              	.LVL592:
3399:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);
 4731              		.loc 1 3399 0
 4732 0368 0021     		movs	r1, #0
 4733 036a 6F20     		movs	r0, #111
 4734 036c FFF7FEFF 		bl	VXISI2CWrite
 4735              	.LVL593:
3400:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);
 4736              		.loc 1 3400 0
 4737 0370 0021     		movs	r1, #0
 4738 0372 7020     		movs	r0, #112
 4739 0374 FFF7FEFF 		bl	VXISI2CWrite
 4740              	.LVL594:
3401:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);
 4741              		.loc 1 3401 0
 4742 0378 0021     		movs	r1, #0
 4743 037a 7120     		movs	r0, #113
 4744 037c FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccs2VtGF.s 			page 172


 4745              	.LVL595:
3402:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);
 4746              		.loc 1 3402 0
 4747 0380 0021     		movs	r1, #0
 4748 0382 7220     		movs	r0, #114
 4749 0384 FFF7FEFF 		bl	VXISI2CWrite
 4750              	.LVL596:
3403:Src/main.c    **** 	VXISI2CWrite(0x74,0x00);
 4751              		.loc 1 3403 0
 4752 0388 0021     		movs	r1, #0
 4753 038a 7320     		movs	r0, #115
 4754 038c FFF7FEFF 		bl	VXISI2CWrite
 4755              	.LVL597:
3404:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);
 4756              		.loc 1 3404 0
 4757 0390 0021     		movs	r1, #0
 4758 0392 7420     		movs	r0, #116
 4759 0394 FFF7FEFF 		bl	VXISI2CWrite
 4760              	.LVL598:
3405:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);
 4761              		.loc 1 3405 0
 4762 0398 FF21     		movs	r1, #255
 4763 039a 7520     		movs	r0, #117
 4764 039c FFF7FEFF 		bl	VXISI2CWrite
 4765              	.LVL599:
3406:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);
 4766              		.loc 1 3406 0
 4767 03a0 FF21     		movs	r1, #255
 4768 03a2 7620     		movs	r0, #118
 4769 03a4 FFF7FEFF 		bl	VXISI2CWrite
 4770              	.LVL600:
3407:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);
 4771              		.loc 1 3407 0
 4772 03a8 FF21     		movs	r1, #255
 4773 03aa 7720     		movs	r0, #119
 4774 03ac FFF7FEFF 		bl	VXISI2CWrite
 4775              	.LVL601:
3408:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);
 4776              		.loc 1 3408 0
 4777 03b0 FF21     		movs	r1, #255
 4778 03b2 7820     		movs	r0, #120
 4779 03b4 FFF7FEFF 		bl	VXISI2CWrite
 4780              	.LVL602:
3409:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);
 4781              		.loc 1 3409 0
 4782 03b8 FF21     		movs	r1, #255
 4783 03ba 7920     		movs	r0, #121
 4784 03bc FFF7FEFF 		bl	VXISI2CWrite
 4785              	.LVL603:
3410:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);
 4786              		.loc 1 3410 0
 4787 03c0 FF21     		movs	r1, #255
 4788 03c2 7A20     		movs	r0, #122
 4789 03c4 FFF7FEFF 		bl	VXISI2CWrite
 4790              	.LVL604:
3411:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);
 4791              		.loc 1 3411 0
ARM GAS  /tmp/ccs2VtGF.s 			page 173


 4792 03c8 FF21     		movs	r1, #255
 4793 03ca 7B20     		movs	r0, #123
 4794 03cc FFF7FEFF 		bl	VXISI2CWrite
 4795              	.LVL605:
3412:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);
 4796              		.loc 1 3412 0
 4797 03d0 FF21     		movs	r1, #255
 4798 03d2 7C20     		movs	r0, #124
 4799 03d4 FFF7FEFF 		bl	VXISI2CWrite
 4800              	.LVL606:
3413:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);
 4801              		.loc 1 3413 0
 4802 03d8 F021     		movs	r1, #240
 4803 03da 7D20     		movs	r0, #125
 4804 03dc FFF7FEFF 		bl	VXISI2CWrite
 4805              	.LVL607:
3414:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);
 4806              		.loc 1 3414 0
 4807 03e0 8021     		movs	r1, #128
 4808 03e2 7E20     		movs	r0, #126
 4809 03e4 FFF7FEFF 		bl	VXISI2CWrite
 4810              	.LVL608:
3415:Src/main.c    **** 	VXISI2CWrite(0x80,0x00);
 4811              		.loc 1 3415 0
 4812 03e8 0021     		movs	r1, #0
 4813 03ea 7F20     		movs	r0, #127
 4814 03ec FFF7FEFF 		bl	VXISI2CWrite
 4815              	.LVL609:
3416:Src/main.c    **** 	VXISI2CWrite(0x81,0x34);
 4816              		.loc 1 3416 0
 4817 03f0 0021     		movs	r1, #0
 4818 03f2 8020     		movs	r0, #128
 4819 03f4 FFF7FEFF 		bl	VXISI2CWrite
 4820              	.LVL610:
 4821 03f8 02E0     		b	.L208
 4822              	.L209:
 4823 03fa 00BF     		.align	2
 4824              	.L207:
 4825 03fc 00000000 		.word	.LC36
 4826              	.L208:
3417:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);
 4827              		.loc 1 3417 0
 4828 0400 3421     		movs	r1, #52
 4829 0402 8120     		movs	r0, #129
 4830 0404 FFF7FEFF 		bl	VXISI2CWrite
 4831              	.LVL611:
3418:Src/main.c    **** 	VXISI2CWrite(0x83,0x05);
 4832              		.loc 1 3418 0
 4833 0408 4021     		movs	r1, #64
 4834 040a 8220     		movs	r0, #130
 4835 040c FFF7FEFF 		bl	VXISI2CWrite
 4836              	.LVL612:
3419:Src/main.c    **** 	VXISI2CWrite(0x84,0x59);
 4837              		.loc 1 3419 0
 4838 0410 0521     		movs	r1, #5
 4839 0412 8320     		movs	r0, #131
 4840 0414 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccs2VtGF.s 			page 174


 4841              	.LVL613:
3420:Src/main.c    **** 	VXISI2CWrite(0x85,0xFD);
 4842              		.loc 1 3420 0
 4843 0418 5921     		movs	r1, #89
 4844 041a 8420     		movs	r0, #132
 4845 041c FFF7FEFF 		bl	VXISI2CWrite
 4846              	.LVL614:
3421:Src/main.c    **** 	VXISI2CWrite(0x86,0x04);
 4847              		.loc 1 3421 0
 4848 0420 FD21     		movs	r1, #253
 4849 0422 8520     		movs	r0, #133
 4850 0424 FFF7FEFF 		bl	VXISI2CWrite
 4851              	.LVL615:
3422:Src/main.c    **** 	VXISI2CWrite(0x87,0x24);
 4852              		.loc 1 3422 0
 4853 0428 0421     		movs	r1, #4
 4854 042a 8620     		movs	r0, #134
 4855 042c FFF7FEFF 		bl	VXISI2CWrite
 4856              	.LVL616:
3423:Src/main.c    **** 	VXISI2CWrite(0x88,0x94);
 4857              		.loc 1 3423 0
 4858 0430 2421     		movs	r1, #36
 4859 0432 8720     		movs	r0, #135
 4860 0434 FFF7FEFF 		bl	VXISI2CWrite
 4861              	.LVL617:
3424:Src/main.c    **** 	VXISI2CWrite(0x89,0x58);
 4862              		.loc 1 3424 0
 4863 0438 9421     		movs	r1, #148
 4864 043a 8820     		movs	r0, #136
 4865 043c FFF7FEFF 		bl	VXISI2CWrite
 4866              	.LVL618:
3425:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);
 4867              		.loc 1 3425 0
 4868 0440 5821     		movs	r1, #88
 4869 0442 8920     		movs	r0, #137
 4870 0444 FFF7FEFF 		bl	VXISI2CWrite
 4871              	.LVL619:
3426:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);
 4872              		.loc 1 3426 0
 4873 0448 0021     		movs	r1, #0
 4874 044a 8A20     		movs	r0, #138
 4875 044c FFF7FEFF 		bl	VXISI2CWrite
 4876              	.LVL620:
3427:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);
 4877              		.loc 1 3427 0
 4878 0450 7E21     		movs	r1, #126
 4879 0452 8B20     		movs	r0, #139
 4880 0454 FFF7FEFF 		bl	VXISI2CWrite
 4881              	.LVL621:
3428:Src/main.c    **** 	VXISI2CWrite(0x8D,0x2C);
 4882              		.loc 1 3428 0
 4883 0458 0321     		movs	r1, #3
 4884 045a 8C20     		movs	r0, #140
 4885 045c FFF7FEFF 		bl	VXISI2CWrite
 4886              	.LVL622:
3429:Src/main.c    **** 	VXISI2CWrite(0x8E,0x8C);
 4887              		.loc 1 3429 0
ARM GAS  /tmp/ccs2VtGF.s 			page 175


 4888 0460 2C21     		movs	r1, #44
 4889 0462 8D20     		movs	r0, #141
 4890 0464 FFF7FEFF 		bl	VXISI2CWrite
 4891              	.LVL623:
3430:Src/main.c    **** 	VXISI2CWrite(0x8F,0x00);
 4892              		.loc 1 3430 0
 4893 0468 8C21     		movs	r1, #140
 4894 046a 8E20     		movs	r0, #142
 4895 046c FFF7FEFF 		bl	VXISI2CWrite
 4896              	.LVL624:
3431:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);
 4897              		.loc 1 3431 0
 4898 0470 0021     		movs	r1, #0
 4899 0472 8F20     		movs	r0, #143
 4900 0474 FFF7FEFF 		bl	VXISI2CWrite
 4901              	.LVL625:
3432:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);
 4902              		.loc 1 3432 0
 4903 0478 CC21     		movs	r1, #204
 4904 047a 9020     		movs	r0, #144
 4905 047c FFF7FEFF 		bl	VXISI2CWrite
 4906              	.LVL626:
3433:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);
 4907              		.loc 1 3433 0
 4908 0480 4121     		movs	r1, #65
 4909 0482 9120     		movs	r0, #145
 4910 0484 FFF7FEFF 		bl	VXISI2CWrite
 4911              	.LVL627:
3434:Src/main.c    **** 	VXISI2CWrite(0x93,0x31);
 4912              		.loc 1 3434 0
 4913 0488 C421     		movs	r1, #196
 4914 048a 9220     		movs	r0, #146
 4915 048c FFF7FEFF 		bl	VXISI2CWrite
 4916              	.LVL628:
3435:Src/main.c    **** 	VXISI2CWrite(0x94,0x87);
 4917              		.loc 1 3435 0
 4918 0490 3121     		movs	r1, #49
 4919 0492 9320     		movs	r0, #147
 4920 0494 FFF7FEFF 		bl	VXISI2CWrite
 4921              	.LVL629:
3436:Src/main.c    **** 	VXISI2CWrite(0x95,0xD0);
 4922              		.loc 1 3436 0
 4923 0498 8721     		movs	r1, #135
 4924 049a 9420     		movs	r0, #148
 4925 049c FFF7FEFF 		bl	VXISI2CWrite
 4926              	.LVL630:
3437:Src/main.c    **** 	VXISI2CWrite(0x96,0xF3);
 4927              		.loc 1 3437 0
 4928 04a0 D021     		movs	r1, #208
 4929 04a2 9520     		movs	r0, #149
 4930 04a4 FFF7FEFF 		bl	VXISI2CWrite
 4931              	.LVL631:
3438:Src/main.c    **** 	VXISI2CWrite(0x97,0x20);
 4932              		.loc 1 3438 0
 4933 04a8 F321     		movs	r1, #243
 4934 04aa 9620     		movs	r0, #150
 4935 04ac FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccs2VtGF.s 			page 176


 4936              	.LVL632:
3439:Src/main.c    **** 	VXISI2CWrite(0x98,0x11);
 4937              		.loc 1 3439 0
 4938 04b0 2021     		movs	r1, #32
 4939 04b2 9720     		movs	r0, #151
 4940 04b4 FFF7FEFF 		bl	VXISI2CWrite
 4941              	.LVL633:
3440:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);
 4942              		.loc 1 3440 0
 4943 04b8 1121     		movs	r1, #17
 4944 04ba 9820     		movs	r0, #152
 4945 04bc FFF7FEFF 		bl	VXISI2CWrite
 4946              	.LVL634:
3441:Src/main.c    **** 	VXISI2CWrite(0x9A,0xFF);
 4947              		.loc 1 3441 0
 4948 04c0 9021     		movs	r1, #144
 4949 04c2 9920     		movs	r0, #153
 4950 04c4 FFF7FEFF 		bl	VXISI2CWrite
 4951              	.LVL635:
3442:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);
 4952              		.loc 1 3442 0
 4953 04c8 FF21     		movs	r1, #255
 4954 04ca 9A20     		movs	r0, #154
 4955 04cc FFF7FEFF 		bl	VXISI2CWrite
 4956              	.LVL636:
3443:Src/main.c    **** 	VXISI2CWrite(0x9C,0x0A);
 4957              		.loc 1 3443 0
 4958 04d0 0421     		movs	r1, #4
 4959 04d2 9B20     		movs	r0, #155
 4960 04d4 FFF7FEFF 		bl	VXISI2CWrite
 4961              	.LVL637:
3444:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);
 4962              		.loc 1 3444 0
 4963 04d8 0A21     		movs	r1, #10
 4964 04da 9C20     		movs	r0, #156
 4965 04dc FFF7FEFF 		bl	VXISI2CWrite
 4966              	.LVL638:
3445:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);
 4967              		.loc 1 3445 0
 4968 04e0 0021     		movs	r1, #0
 4969 04e2 9D20     		movs	r0, #157
 4970 04e4 FFF7FEFF 		bl	VXISI2CWrite
 4971              	.LVL639:
3446:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);
 4972              		.loc 1 3446 0
 4973 04e8 0421     		movs	r1, #4
 4974 04ea 9E20     		movs	r0, #158
 4975 04ec FFF7FEFF 		bl	VXISI2CWrite
 4976              	.LVL640:
3447:Src/main.c    **** 	VXISI2CWrite(0xA0,0x2F);
 4977              		.loc 1 3447 0
 4978 04f0 6521     		movs	r1, #101
 4979 04f2 9F20     		movs	r0, #159
 4980 04f4 FFF7FEFF 		bl	VXISI2CWrite
 4981              	.LVL641:
3448:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD9);
 4982              		.loc 1 3448 0
ARM GAS  /tmp/ccs2VtGF.s 			page 177


 4983 04f8 2F21     		movs	r1, #47
 4984 04fa A020     		movs	r0, #160
 4985 04fc FFF7FEFF 		bl	VXISI2CWrite
 4986              	.LVL642:
3449:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);
 4987              		.loc 1 3449 0
 4988 0500 D921     		movs	r1, #217
 4989 0502 A120     		movs	r0, #161
 4990 0504 FFF7FEFF 		bl	VXISI2CWrite
 4991              	.LVL643:
3450:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);
 4992              		.loc 1 3450 0
 4993 0508 9821     		movs	r1, #152
 4994 050a A220     		movs	r0, #162
 4995 050c FFF7FEFF 		bl	VXISI2CWrite
 4996              	.LVL644:
3451:Src/main.c    **** 	VXISI2CWrite(0xA4,0xE1);
 4997              		.loc 1 3451 0
 4998 0510 8721     		movs	r1, #135
 4999 0512 A320     		movs	r0, #163
 5000 0514 FFF7FEFF 		bl	VXISI2CWrite
 5001              	.LVL645:
3452:Src/main.c    **** 	VXISI2CWrite(0xA5,0x38);
 5002              		.loc 1 3452 0
 5003 0518 E121     		movs	r1, #225
 5004 051a A420     		movs	r0, #164
 5005 051c FFF7FEFF 		bl	VXISI2CWrite
 5006              	.LVL646:
3453:Src/main.c    **** 	VXISI2CWrite(0xA6,0xC2);
 5007              		.loc 1 3453 0
 5008 0520 3821     		movs	r1, #56
 5009 0522 A520     		movs	r0, #165
 5010 0524 FFF7FEFF 		bl	VXISI2CWrite
 5011              	.LVL647:
3454:Src/main.c    **** 	VXISI2CWrite(0xA7,0x70);
 5012              		.loc 1 3454 0
 5013 0528 C221     		movs	r1, #194
 5014 052a A620     		movs	r0, #166
 5015 052c FFF7FEFF 		bl	VXISI2CWrite
 5016              	.LVL648:
3455:Src/main.c    **** 	VXISI2CWrite(0xA8,0x00);
 5017              		.loc 1 3455 0
 5018 0530 7021     		movs	r1, #112
 5019 0532 A720     		movs	r0, #167
 5020 0534 FFF7FEFF 		bl	VXISI2CWrite
 5021              	.LVL649:
3456:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);
 5022              		.loc 1 3456 0
 5023 0538 0021     		movs	r1, #0
 5024 053a A820     		movs	r0, #168
 5025 053c FFF7FEFF 		bl	VXISI2CWrite
 5026              	.LVL650:
3457:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2E);
 5027              		.loc 1 3457 0
 5028 0540 1E21     		movs	r1, #30
 5029 0542 A920     		movs	r0, #169
 5030 0544 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccs2VtGF.s 			page 178


 5031              	.LVL651:
3458:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);
 5032              		.loc 1 3458 0
 5033 0548 2E21     		movs	r1, #46
 5034 054a AA20     		movs	r0, #170
 5035 054c FFF7FEFF 		bl	VXISI2CWrite
 5036              	.LVL652:
3459:Src/main.c    **** 	VXISI2CWrite(0xAC,0x84);
 5037              		.loc 1 3459 0
 5038 0550 0021     		movs	r1, #0
 5039 0552 AB20     		movs	r0, #171
 5040 0554 FFF7FEFF 		bl	VXISI2CWrite
 5041              	.LVL653:
3460:Src/main.c    **** 	VXISI2CWrite(0xAD,0xF3);
 5042              		.loc 1 3460 0
 5043 0558 8421     		movs	r1, #132
 5044 055a AC20     		movs	r0, #172
 5045 055c FFF7FEFF 		bl	VXISI2CWrite
 5046              	.LVL654:
3461:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);
 5047              		.loc 1 3461 0
 5048 0560 F321     		movs	r1, #243
 5049 0562 AD20     		movs	r0, #173
 5050 0564 FFF7FEFF 		bl	VXISI2CWrite
 5051              	.LVL655:
3462:Src/main.c    **** 	VXISI2CWrite(0xAF,0x99);
 5052              		.loc 1 3462 0
 5053 0568 6521     		movs	r1, #101
 5054 056a AE20     		movs	r0, #174
 5055 056c FFF7FEFF 		bl	VXISI2CWrite
 5056              	.LVL656:
3463:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);
 5057              		.loc 1 3463 0
 5058 0570 9921     		movs	r1, #153
 5059 0572 AF20     		movs	r0, #175
 5060 0574 FFF7FEFF 		bl	VXISI2CWrite
 5061              	.LVL657:
3464:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);
 5062              		.loc 1 3464 0
 5063 0578 0021     		movs	r1, #0
 5064 057a B020     		movs	r0, #176
 5065 057c FFF7FEFF 		bl	VXISI2CWrite
 5066              	.LVL658:
3465:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);
 5067              		.loc 1 3465 0
 5068 0580 0021     		movs	r1, #0
 5069 0582 B120     		movs	r0, #177
 5070 0584 FFF7FEFF 		bl	VXISI2CWrite
 5071              	.LVL659:
3466:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);
 5072              		.loc 1 3466 0
 5073 0588 0021     		movs	r1, #0
 5074 058a B220     		movs	r0, #178
 5075 058c FFF7FEFF 		bl	VXISI2CWrite
 5076              	.LVL660:
3467:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);
 5077              		.loc 1 3467 0
ARM GAS  /tmp/ccs2VtGF.s 			page 179


 5078 0590 0021     		movs	r1, #0
 5079 0592 B320     		movs	r0, #179
 5080 0594 FFF7FEFF 		bl	VXISI2CWrite
 5081              	.LVL661:
3468:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);
 5082              		.loc 1 3468 0
 5083 0598 0021     		movs	r1, #0
 5084 059a B420     		movs	r0, #180
 5085 059c FFF7FEFF 		bl	VXISI2CWrite
 5086              	.LVL662:
3469:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);
 5087              		.loc 1 3469 0
 5088 05a0 0021     		movs	r1, #0
 5089 05a2 B520     		movs	r0, #181
 5090 05a4 FFF7FEFF 		bl	VXISI2CWrite
 5091              	.LVL663:
3470:Src/main.c    **** 	VXISI2CWrite(0xB8,0x80);
 5092              		.loc 1 3470 0
 5093 05a8 0021     		movs	r1, #0
 5094 05aa B620     		movs	r0, #182
 5095 05ac FFF7FEFF 		bl	VXISI2CWrite
 5096              	.LVL664:
3471:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);
 5097              		.loc 1 3471 0
 5098 05b0 8021     		movs	r1, #128
 5099 05b2 B820     		movs	r0, #184
 5100 05b4 FFF7FEFF 		bl	VXISI2CWrite
 5101              	.LVL665:
3472:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);
 5102              		.loc 1 3472 0
 5103 05b8 0021     		movs	r1, #0
 5104 05ba B920     		movs	r0, #185
 5105 05bc FFF7FEFF 		bl	VXISI2CWrite
 5106              	.LVL666:
3473:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);
 5107              		.loc 1 3473 0
 5108 05c0 0121     		movs	r1, #1
 5109 05c2 BA20     		movs	r0, #186
 5110 05c4 FFF7FEFF 		bl	VXISI2CWrite
 5111              	.LVL667:
3474:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);
 5112              		.loc 1 3474 0
 5113 05c8 0021     		movs	r1, #0
 5114 05ca BB20     		movs	r0, #187
 5115 05cc FFF7FEFF 		bl	VXISI2CWrite
 5116              	.LVL668:
3475:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);
 5117              		.loc 1 3475 0
 5118 05d0 9021     		movs	r1, #144
 5119 05d2 BC20     		movs	r0, #188
 5120 05d4 FFF7FEFF 		bl	VXISI2CWrite
 5121              	.LVL669:
3476:Src/main.c    **** 	VXISI2CWrite(0xBE,0x2C);
 5122              		.loc 1 3476 0
 5123 05d8 0121     		movs	r1, #1
 5124 05da BD20     		movs	r0, #189
 5125 05dc FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccs2VtGF.s 			page 180


 5126              	.LVL670:
3477:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);
 5127              		.loc 1 3477 0
 5128 05e0 2C21     		movs	r1, #44
 5129 05e2 BE20     		movs	r0, #190
 5130 05e4 FFF7FEFF 		bl	VXISI2CWrite
 5131              	.LVL671:
3478:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);
 5132              		.loc 1 3478 0
 5133 05e8 0021     		movs	r1, #0
 5134 05ea C020     		movs	r0, #192
 5135 05ec FFF7FEFF 		bl	VXISI2CWrite
 5136              	.LVL672:
3479:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);
 5137              		.loc 1 3479 0
 5138 05f0 2021     		movs	r1, #32
 5139 05f2 C120     		movs	r0, #193
 5140 05f4 FFF7FEFF 		bl	VXISI2CWrite
 5141              	.LVL673:
3480:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);
 5142              		.loc 1 3480 0
 5143 05f8 2021     		movs	r1, #32
 5144 05fa C220     		movs	r0, #194
 5145 05fc FFF7FEFF 		bl	VXISI2CWrite
 5146              	.LVL674:
3481:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);
 5147              		.loc 1 3481 0
 5148 0600 2021     		movs	r1, #32
 5149 0602 C320     		movs	r0, #195
 5150 0604 FFF7FEFF 		bl	VXISI2CWrite
 5151              	.LVL675:
3482:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);
 5152              		.loc 1 3482 0
 5153 0608 2021     		movs	r1, #32
 5154 060a C420     		movs	r0, #196
 5155 060c FFF7FEFF 		bl	VXISI2CWrite
 5156              	.LVL676:
3483:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);
 5157              		.loc 1 3483 0
 5158 0610 2021     		movs	r1, #32
 5159 0612 C520     		movs	r0, #197
 5160 0614 FFF7FEFF 		bl	VXISI2CWrite
 5161              	.LVL677:
3484:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);
 5162              		.loc 1 3484 0
 5163 0618 FF21     		movs	r1, #255
 5164 061a D020     		movs	r0, #208
 5165 061c FFF7FEFF 		bl	VXISI2CWrite
 5166              	.LVL678:
3485:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);
 5167              		.loc 1 3485 0
 5168 0620 3F21     		movs	r1, #63
 5169 0622 D120     		movs	r0, #209
 5170 0624 FFF7FEFF 		bl	VXISI2CWrite
 5171              	.LVL679:
3486:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);
 5172              		.loc 1 3486 0
ARM GAS  /tmp/ccs2VtGF.s 			page 181


 5173 0628 C221     		movs	r1, #194
 5174 062a D220     		movs	r0, #210
 5175 062c FFF7FEFF 		bl	VXISI2CWrite
 5176              	.LVL680:
3487:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);
 5177              		.loc 1 3487 0
 5178 0630 3F21     		movs	r1, #63
 5179 0632 D320     		movs	r0, #211
 5180 0634 FFF7FEFF 		bl	VXISI2CWrite
 5181              	.LVL681:
3488:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);
 5182              		.loc 1 3488 0
 5183 0638 0021     		movs	r1, #0
 5184 063a D420     		movs	r0, #212
 5185 063c FFF7FEFF 		bl	VXISI2CWrite
 5186              	.LVL682:
3489:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);
 5187              		.loc 1 3489 0
 5188 0640 0021     		movs	r1, #0
 5189 0642 D520     		movs	r0, #213
 5190 0644 FFF7FEFF 		bl	VXISI2CWrite
 5191              	.LVL683:
3490:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);
 5192              		.loc 1 3490 0
 5193 0648 0021     		movs	r1, #0
 5194 064a D620     		movs	r0, #214
 5195 064c FFF7FEFF 		bl	VXISI2CWrite
 5196              	.LVL684:
3491:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);
 5197              		.loc 1 3491 0
 5198 0650 1021     		movs	r1, #16
 5199 0652 D720     		movs	r0, #215
 5200 0654 FFF7FEFF 		bl	VXISI2CWrite
 5201              	.LVL685:
3492:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);
 5202              		.loc 1 3492 0
 5203 0658 0021     		movs	r1, #0
 5204 065a D820     		movs	r0, #216
 5205 065c FFF7FEFF 		bl	VXISI2CWrite
 5206              	.LVL686:
3493:Src/main.c    **** 	VXISI2CWrite(0xDD,0x00);
 5207              		.loc 1 3493 0
 5208 0660 7721     		movs	r1, #119
 5209 0662 DC20     		movs	r0, #220
 5210 0664 FFF7FEFF 		bl	VXISI2CWrite
 5211              	.LVL687:
3494:Src/main.c    **** 	VXISI2CWrite(0xDE,0xAF);
 5212              		.loc 1 3494 0
 5213 0668 0021     		movs	r1, #0
 5214 066a DD20     		movs	r0, #221
 5215 066c FFF7FEFF 		bl	VXISI2CWrite
 5216              	.LVL688:
3495:Src/main.c    **** 	VXISI2CWrite(0xDF,0xEF);
 5217              		.loc 1 3495 0
 5218 0670 AF21     		movs	r1, #175
 5219 0672 DE20     		movs	r0, #222
 5220 0674 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccs2VtGF.s 			page 182


 5221              	.LVL689:
3496:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);
 5222              		.loc 1 3496 0
 5223 0678 EF21     		movs	r1, #239
 5224 067a DF20     		movs	r0, #223
 5225 067c FFF7FEFF 		bl	VXISI2CWrite
 5226              	.LVL690:
3497:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);
 5227              		.loc 1 3497 0
 5228 0680 0021     		movs	r1, #0
 5229 0682 E020     		movs	r0, #224
 5230 0684 FFF7FEFF 		bl	VXISI2CWrite
 5231              	.LVL691:
3498:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);
 5232              		.loc 1 3498 0
 5233 0688 0021     		movs	r1, #0
 5234 068a E120     		movs	r0, #225
 5235 068c FFF7FEFF 		bl	VXISI2CWrite
 5236              	.LVL692:
3499:Src/main.c    **** 	VXISI2CWrite(0xE3,0x12);
 5237              		.loc 1 3499 0
 5238 0690 0021     		movs	r1, #0
 5239 0692 E220     		movs	r0, #226
 5240 0694 FFF7FEFF 		bl	VXISI2CWrite
 5241              	.LVL693:
3500:Src/main.c    **** 	VXISI2CWrite(0xE4,0xE2);
 5242              		.loc 1 3500 0
 5243 0698 1221     		movs	r1, #18
 5244 069a E320     		movs	r0, #227
 5245 069c FFF7FEFF 		bl	VXISI2CWrite
 5246              	.LVL694:
3501:Src/main.c    **** 	VXISI2CWrite(0xE5,0xD0);
 5247              		.loc 1 3501 0
 5248 06a0 E221     		movs	r1, #226
 5249 06a2 E420     		movs	r0, #228
 5250 06a4 FFF7FEFF 		bl	VXISI2CWrite
 5251              	.LVL695:
3502:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);
 5252              		.loc 1 3502 0
 5253 06a8 D021     		movs	r1, #208
 5254 06aa E520     		movs	r0, #229
 5255 06ac FFF7FEFF 		bl	VXISI2CWrite
 5256              	.LVL696:
3503:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);
 5257              		.loc 1 3503 0
 5258 06b0 0021     		movs	r1, #0
 5259 06b2 E620     		movs	r0, #230
 5260 06b4 FFF7FEFF 		bl	VXISI2CWrite
 5261              	.LVL697:
3504:Src/main.c    **** 	VXISI2CWrite(0xE8,0x0F);
 5262              		.loc 1 3504 0
 5263 06b8 0021     		movs	r1, #0
 5264 06ba E720     		movs	r0, #231
 5265 06bc FFF7FEFF 		bl	VXISI2CWrite
 5266              	.LVL698:
3505:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);
 5267              		.loc 1 3505 0
ARM GAS  /tmp/ccs2VtGF.s 			page 183


 5268 06c0 0F21     		movs	r1, #15
 5269 06c2 E820     		movs	r0, #232
 5270 06c4 FFF7FEFF 		bl	VXISI2CWrite
 5271              	.LVL699:
3506:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);
 5272              		.loc 1 3506 0
 5273 06c8 0021     		movs	r1, #0
 5274 06ca E920     		movs	r0, #233
 5275 06cc FFF7FEFF 		bl	VXISI2CWrite
 5276              	.LVL700:
3507:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);
 5277              		.loc 1 3507 0
 5278 06d0 0021     		movs	r1, #0
 5279 06d2 EA20     		movs	r0, #234
 5280 06d4 FFF7FEFF 		bl	VXISI2CWrite
 5281              	.LVL701:
3508:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);
 5282              		.loc 1 3508 0
 5283 06d8 0021     		movs	r1, #0
 5284 06da EB20     		movs	r0, #235
 5285 06dc FFF7FEFF 		bl	VXISI2CWrite
 5286              	.LVL702:
3509:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);
 5287              		.loc 1 3509 0
 5288 06e0 8821     		movs	r1, #136
 5289 06e2 EC20     		movs	r0, #236
 5290 06e4 FFF7FEFF 		bl	VXISI2CWrite
 5291              	.LVL703:
3510:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);
 5292              		.loc 1 3510 0
 5293 06e8 0021     		movs	r1, #0
 5294 06ea ED20     		movs	r0, #237
 5295 06ec FFF7FEFF 		bl	VXISI2CWrite
 5296              	.LVL704:
3511:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);
 5297              		.loc 1 3511 0
 5298 06f0 0021     		movs	r1, #0
 5299 06f2 EE20     		movs	r0, #238
 5300 06f4 FFF7FEFF 		bl	VXISI2CWrite
 5301              	.LVL705:
3512:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);
 5302              		.loc 1 3512 0
 5303 06f8 0021     		movs	r1, #0
 5304 06fa EF20     		movs	r0, #239
 5305 06fc FFF7FEFF 		bl	VXISI2CWrite
 5306              	.LVL706:
3513:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);
 5307              		.loc 1 3513 0
 5308 0700 3021     		movs	r1, #48
 5309 0702 F020     		movs	r0, #240
 5310 0704 FFF7FEFF 		bl	VXISI2CWrite
 5311              	.LVL707:
3514:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);
 5312              		.loc 1 3514 0
 5313 0708 4321     		movs	r1, #67
 5314 070a F120     		movs	r0, #241
 5315 070c FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccs2VtGF.s 			page 184


 5316              	.LVL708:
3515:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);
 5317              		.loc 1 3515 0
 5318 0710 1F21     		movs	r1, #31
 5319 0712 F220     		movs	r0, #242
 5320 0714 FFF7FEFF 		bl	VXISI2CWrite
 5321              	.LVL709:
3516:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);
 5322              		.loc 1 3516 0
 5323 0718 1F21     		movs	r1, #31
 5324 071a F320     		movs	r0, #243
 5325 071c FFF7FEFF 		bl	VXISI2CWrite
 5326              	.LVL710:
3517:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);
 5327              		.loc 1 3517 0
 5328 0720 2221     		movs	r1, #34
 5329 0722 F420     		movs	r0, #244
 5330 0724 FFF7FEFF 		bl	VXISI2CWrite
 5331              	.LVL711:
3518:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);
 5332              		.loc 1 3518 0
 5333 0728 7321     		movs	r1, #115
 5334 072a F520     		movs	r0, #245
 5335 072c FFF7FEFF 		bl	VXISI2CWrite
 5336              	.LVL712:
3519:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);
 5337              		.loc 1 3519 0
 5338 0730 5321     		movs	r1, #83
 5339 0732 F620     		movs	r0, #246
 5340 0734 FFF7FEFF 		bl	VXISI2CWrite
 5341              	.LVL713:
3520:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);
 5342              		.loc 1 3520 0
 5343 0738 8021     		movs	r1, #128
 5344 073a F720     		movs	r0, #247
 5345 073c FFF7FEFF 		bl	VXISI2CWrite
 5346              	.LVL714:
3521:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);
 5347              		.loc 1 3521 0
 5348 0740 0121     		movs	r1, #1
 5349 0742 F820     		movs	r0, #248
 5350 0744 FFF7FEFF 		bl	VXISI2CWrite
 5351              	.LVL715:
3522:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);
 5352              		.loc 1 3522 0
 5353 0748 0121     		movs	r1, #1
 5354 074a F920     		movs	r0, #249
 5355 074c FFF7FEFF 		bl	VXISI2CWrite
 5356              	.LVL716:
3523:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);
 5357              		.loc 1 3523 0
 5358 0750 0021     		movs	r1, #0
 5359 0752 FA20     		movs	r0, #250
 5360 0754 FFF7FEFF 		bl	VXISI2CWrite
 5361              	.LVL717:
3524:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);
 5362              		.loc 1 3524 0
ARM GAS  /tmp/ccs2VtGF.s 			page 185


 5363 0758 0021     		movs	r1, #0
 5364 075a FB20     		movs	r0, #251
 5365 075c FFF7FEFF 		bl	VXISI2CWrite
 5366              	.LVL718:
3525:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);
 5367              		.loc 1 3525 0
 5368 0760 0021     		movs	r1, #0
 5369 0762 FC20     		movs	r0, #252
 5370 0764 FFF7FEFF 		bl	VXISI2CWrite
 5371              	.LVL719:
3526:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);
 5372              		.loc 1 3526 0
 5373 0768 7021     		movs	r1, #112
 5374 076a FD20     		movs	r0, #253
 5375 076c FFF7FEFF 		bl	VXISI2CWrite
 5376              	.LVL720:
3527:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);
 5377              		.loc 1 3527 0
 5378 0770 4021     		movs	r1, #64
 5379 0772 FE20     		movs	r0, #254
 5380 0774 FFF7FEFF 		bl	VXISI2CWrite
 5381              	.LVL721:
3528:Src/main.c    **** 			 
 5382              		.loc 1 3528 0
 5383 0778 0721     		movs	r1, #7
 5384 077a FF20     		movs	r0, #255
 5385 077c FFF7FEFF 		bl	VXISI2CWrite
 5386              	.LVL722:
3530:Src/main.c    **** 
 5387              		.loc 1 3530 0
 5388 0780 08BD     		pop	{r3, pc}
 5389              		.cfi_endproc
 5390              	.LFE93:
 5392 0782 00BF     		.section	.text.SET_AHD_MDOE,"ax",%progbits
 5393              		.align	1
 5394              		.global	SET_AHD_MDOE
 5395              		.syntax unified
 5396              		.thumb
 5397              		.thumb_func
 5398              		.fpu softvfp
 5400              	SET_AHD_MDOE:
 5401              	.LFB94:
3533:Src/main.c    **** 	Printf("\r\nSET_AHD_MDOE...");
 5402              		.loc 1 3533 0
 5403              		.cfi_startproc
 5404              		@ args = 0, pretend = 0, frame = 0
 5405              		@ frame_needed = 0, uses_anonymous_args = 0
 5406 0000 08B5     		push	{r3, lr}
 5407              	.LCFI42:
 5408              		.cfi_def_cfa_offset 8
 5409              		.cfi_offset 3, -8
 5410              		.cfi_offset 14, -4
3534:Src/main.c    **** 
 5411              		.loc 1 3534 0
 5412 0002 FE48     		ldr	r0, .L212
 5413 0004 FFF7FEFF 		bl	Printf
 5414              	.LVL723:
ARM GAS  /tmp/ccs2VtGF.s 			page 186


3536:Src/main.c    **** 	VXISI2CWrite(0x01,0x00);
 5415              		.loc 1 3536 0
 5416 0008 4221     		movs	r1, #66
 5417 000a 0020     		movs	r0, #0
 5418 000c FFF7FEFF 		bl	VXISI2CWrite
 5419              	.LVL724:
3537:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);
 5420              		.loc 1 3537 0
 5421 0010 0021     		movs	r1, #0
 5422 0012 0120     		movs	r0, #1
 5423 0014 FFF7FEFF 		bl	VXISI2CWrite
 5424              	.LVL725:
3538:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);
 5425              		.loc 1 3538 0
 5426 0018 0021     		movs	r1, #0
 5427 001a 0220     		movs	r0, #2
 5428 001c FFF7FEFF 		bl	VXISI2CWrite
 5429              	.LVL726:
3539:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);
 5430              		.loc 1 3539 0
 5431 0020 7521     		movs	r1, #117
 5432 0022 0320     		movs	r0, #3
 5433 0024 FFF7FEFF 		bl	VXISI2CWrite
 5434              	.LVL727:
3540:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);
 5435              		.loc 1 3540 0
 5436 0028 1821     		movs	r1, #24
 5437 002a 0420     		movs	r0, #4
 5438 002c FFF7FEFF 		bl	VXISI2CWrite
 5439              	.LVL728:
3541:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);
 5440              		.loc 1 3541 0
 5441 0030 8021     		movs	r1, #128
 5442 0032 0520     		movs	r0, #5
 5443 0034 FFF7FEFF 		bl	VXISI2CWrite
 5444              	.LVL729:
3542:Src/main.c    **** 	VXISI2CWrite(0x07,0x0C);
 5445              		.loc 1 3542 0
 5446 0038 2021     		movs	r1, #32
 5447 003a 0620     		movs	r0, #6
 5448 003c FFF7FEFF 		bl	VXISI2CWrite
 5449              	.LVL730:
3543:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);
 5450              		.loc 1 3543 0
 5451 0040 0C21     		movs	r1, #12
 5452 0042 0720     		movs	r0, #7
 5453 0044 FFF7FEFF 		bl	VXISI2CWrite
 5454              	.LVL731:
3544:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);
 5455              		.loc 1 3544 0
 5456 0048 4021     		movs	r1, #64
 5457 004a 0820     		movs	r0, #8
 5458 004c FFF7FEFF 		bl	VXISI2CWrite
 5459              	.LVL732:
3545:Src/main.c    **** 	VXISI2CWrite(0x0A,0x40);
 5460              		.loc 1 3545 0
 5461 0050 0A21     		movs	r1, #10
ARM GAS  /tmp/ccs2VtGF.s 			page 187


 5462 0052 0920     		movs	r0, #9
 5463 0054 FFF7FEFF 		bl	VXISI2CWrite
 5464              	.LVL733:
3546:Src/main.c    **** 	VXISI2CWrite(0x0B,0x0A);
 5465              		.loc 1 3546 0
 5466 0058 4021     		movs	r1, #64
 5467 005a 0A20     		movs	r0, #10
 5468 005c FFF7FEFF 		bl	VXISI2CWrite
 5469              	.LVL734:
3547:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);
 5470              		.loc 1 3547 0
 5471 0060 0A21     		movs	r1, #10
 5472 0062 0B20     		movs	r0, #11
 5473 0064 FFF7FEFF 		bl	VXISI2CWrite
 5474              	.LVL735:
3548:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);
 5475              		.loc 1 3548 0
 5476 0068 0021     		movs	r1, #0
 5477 006a 0C20     		movs	r0, #12
 5478 006c FFF7FEFF 		bl	VXISI2CWrite
 5479              	.LVL736:
3549:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);
 5480              		.loc 1 3549 0
 5481 0070 2021     		movs	r1, #32
 5482 0072 0D20     		movs	r0, #13
 5483 0074 FFF7FEFF 		bl	VXISI2CWrite
 5484              	.LVL737:
3550:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);
 5485              		.loc 1 3550 0
 5486 0078 1021     		movs	r1, #16
 5487 007a 0E20     		movs	r0, #14
 5488 007c FFF7FEFF 		bl	VXISI2CWrite
 5489              	.LVL738:
3551:Src/main.c    **** 	VXISI2CWrite(0x10,0x81);
 5490              		.loc 1 3551 0
 5491 0080 0021     		movs	r1, #0
 5492 0082 0F20     		movs	r0, #15
 5493 0084 FFF7FEFF 		bl	VXISI2CWrite
 5494              	.LVL739:
3552:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);
 5495              		.loc 1 3552 0
 5496 0088 8121     		movs	r1, #129
 5497 008a 1020     		movs	r0, #16
 5498 008c FFF7FEFF 		bl	VXISI2CWrite
 5499              	.LVL740:
3553:Src/main.c    **** 	VXISI2CWrite(0x12,0x74);
 5500              		.loc 1 3553 0
 5501 0090 8221     		movs	r1, #130
 5502 0092 1120     		movs	r0, #17
 5503 0094 FFF7FEFF 		bl	VXISI2CWrite
 5504              	.LVL741:
3554:Src/main.c    **** 	VXISI2CWrite(0x13,0x80);
 5505              		.loc 1 3554 0
 5506 0098 7421     		movs	r1, #116
 5507 009a 1220     		movs	r0, #18
 5508 009c FFF7FEFF 		bl	VXISI2CWrite
 5509              	.LVL742:
ARM GAS  /tmp/ccs2VtGF.s 			page 188


3555:Src/main.c    **** 	VXISI2CWrite(0x14,0x38);
 5510              		.loc 1 3555 0
 5511 00a0 8021     		movs	r1, #128
 5512 00a2 1320     		movs	r0, #19
 5513 00a4 FFF7FEFF 		bl	VXISI2CWrite
 5514              	.LVL743:
3556:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);
 5515              		.loc 1 3556 0
 5516 00a8 3821     		movs	r1, #56
 5517 00aa 1420     		movs	r0, #20
 5518 00ac FFF7FEFF 		bl	VXISI2CWrite
 5519              	.LVL744:
3557:Src/main.c    **** 	VXISI2CWrite(0x16,0xFE);
 5520              		.loc 1 3557 0
 5521 00b0 7821     		movs	r1, #120
 5522 00b2 1520     		movs	r0, #21
 5523 00b4 FFF7FEFF 		bl	VXISI2CWrite
 5524              	.LVL745:
3558:Src/main.c    **** 	VXISI2CWrite(0x17,0x00);
 5525              		.loc 1 3558 0
 5526 00b8 FE21     		movs	r1, #254
 5527 00ba 1620     		movs	r0, #22
 5528 00bc FFF7FEFF 		bl	VXISI2CWrite
 5529              	.LVL746:
3559:Src/main.c    **** 	VXISI2CWrite(0x18,0xC0);
 5530              		.loc 1 3559 0
 5531 00c0 0021     		movs	r1, #0
 5532 00c2 1720     		movs	r0, #23
 5533 00c4 FFF7FEFF 		bl	VXISI2CWrite
 5534              	.LVL747:
3560:Src/main.c    **** 	VXISI2CWrite(0x19,0x01);
 5535              		.loc 1 3560 0
 5536 00c8 C021     		movs	r1, #192
 5537 00ca 1820     		movs	r0, #24
 5538 00cc FFF7FEFF 		bl	VXISI2CWrite
 5539              	.LVL748:
3561:Src/main.c    **** 	VXISI2CWrite(0x1A,0x20);
 5540              		.loc 1 3561 0
 5541 00d0 0121     		movs	r1, #1
 5542 00d2 1920     		movs	r0, #25
 5543 00d4 FFF7FEFF 		bl	VXISI2CWrite
 5544              	.LVL749:
3562:Src/main.c    **** 	VXISI2CWrite(0x1B,0x30);
 5545              		.loc 1 3562 0
 5546 00d8 2021     		movs	r1, #32
 5547 00da 1A20     		movs	r0, #26
 5548 00dc FFF7FEFF 		bl	VXISI2CWrite
 5549              	.LVL750:
3563:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);
 5550              		.loc 1 3563 0
 5551 00e0 3021     		movs	r1, #48
 5552 00e2 1B20     		movs	r0, #27
 5553 00e4 FFF7FEFF 		bl	VXISI2CWrite
 5554              	.LVL751:
3564:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);
 5555              		.loc 1 3564 0
 5556 00e8 0021     		movs	r1, #0
ARM GAS  /tmp/ccs2VtGF.s 			page 189


 5557 00ea 1C20     		movs	r0, #28
 5558 00ec FFF7FEFF 		bl	VXISI2CWrite
 5559              	.LVL752:
3565:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);
 5560              		.loc 1 3565 0
 5561 00f0 0021     		movs	r1, #0
 5562 00f2 1D20     		movs	r0, #29
 5563 00f4 FFF7FEFF 		bl	VXISI2CWrite
 5564              	.LVL753:
3566:Src/main.c    **** 	VXISI2CWrite(0x1F,0xA4);
 5565              		.loc 1 3566 0
 5566 00f8 2021     		movs	r1, #32
 5567 00fa 1E20     		movs	r0, #30
 5568 00fc FFF7FEFF 		bl	VXISI2CWrite
 5569              	.LVL754:
3567:Src/main.c    **** 	VXISI2CWrite(0x20,0x50);
 5570              		.loc 1 3567 0
 5571 0100 A421     		movs	r1, #164
 5572 0102 1F20     		movs	r0, #31
 5573 0104 FFF7FEFF 		bl	VXISI2CWrite
 5574              	.LVL755:
3568:Src/main.c    **** 	VXISI2CWrite(0x21,0xE2);
 5575              		.loc 1 3568 0
 5576 0108 5021     		movs	r1, #80
 5577 010a 2020     		movs	r0, #32
 5578 010c FFF7FEFF 		bl	VXISI2CWrite
 5579              	.LVL756:
3569:Src/main.c    **** 	VXISI2CWrite(0x22,0x87);
 5580              		.loc 1 3569 0
 5581 0110 E221     		movs	r1, #226
 5582 0112 2120     		movs	r0, #33
 5583 0114 FFF7FEFF 		bl	VXISI2CWrite
 5584              	.LVL757:
3570:Src/main.c    **** 	VXISI2CWrite(0x23,0x98);
 5585              		.loc 1 3570 0
 5586 0118 8721     		movs	r1, #135
 5587 011a 2220     		movs	r0, #34
 5588 011c FFF7FEFF 		bl	VXISI2CWrite
 5589              	.LVL758:
3571:Src/main.c    **** 	VXISI2CWrite(0x24,0x80);
 5590              		.loc 1 3571 0
 5591 0120 9821     		movs	r1, #152
 5592 0122 2320     		movs	r0, #35
 5593 0124 FFF7FEFF 		bl	VXISI2CWrite
 5594              	.LVL759:
3572:Src/main.c    **** 	VXISI2CWrite(0x25,0x44);
 5595              		.loc 1 3572 0
 5596 0128 8021     		movs	r1, #128
 5597 012a 2420     		movs	r0, #36
 5598 012c FFF7FEFF 		bl	VXISI2CWrite
 5599              	.LVL760:
3573:Src/main.c    **** 	VXISI2CWrite(0x26,0x65);
 5600              		.loc 1 3573 0
 5601 0130 4421     		movs	r1, #68
 5602 0132 2520     		movs	r0, #37
 5603 0134 FFF7FEFF 		bl	VXISI2CWrite
 5604              	.LVL761:
ARM GAS  /tmp/ccs2VtGF.s 			page 190


3574:Src/main.c    **** 	VXISI2CWrite(0x27,0x38);
 5605              		.loc 1 3574 0
 5606 0138 6521     		movs	r1, #101
 5607 013a 2620     		movs	r0, #38
 5608 013c FFF7FEFF 		bl	VXISI2CWrite
 5609              	.LVL762:
3575:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);
 5610              		.loc 1 3575 0
 5611 0140 3821     		movs	r1, #56
 5612 0142 2720     		movs	r0, #39
 5613 0144 FFF7FEFF 		bl	VXISI2CWrite
 5614              	.LVL763:
3576:Src/main.c    **** 	VXISI2CWrite(0x29,0x00);
 5615              		.loc 1 3576 0
 5616 0148 F021     		movs	r1, #240
 5617 014a 2820     		movs	r0, #40
 5618 014c FFF7FEFF 		bl	VXISI2CWrite
 5619              	.LVL764:
3577:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);
 5620              		.loc 1 3577 0
 5621 0150 0021     		movs	r1, #0
 5622 0152 2920     		movs	r0, #41
 5623 0154 FFF7FEFF 		bl	VXISI2CWrite
 5624              	.LVL765:
3578:Src/main.c    **** 	VXISI2CWrite(0x2B,0x11);
 5625              		.loc 1 3578 0
 5626 0158 0021     		movs	r1, #0
 5627 015a 2A20     		movs	r0, #42
 5628 015c FFF7FEFF 		bl	VXISI2CWrite
 5629              	.LVL766:
3579:Src/main.c    **** 	VXISI2CWrite(0x2C,0x00);
 5630              		.loc 1 3579 0
 5631 0160 1121     		movs	r1, #17
 5632 0162 2B20     		movs	r0, #43
 5633 0164 FFF7FEFF 		bl	VXISI2CWrite
 5634              	.LVL767:
3580:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);
 5635              		.loc 1 3580 0
 5636 0168 0021     		movs	r1, #0
 5637 016a 2C20     		movs	r0, #44
 5638 016c FFF7FEFF 		bl	VXISI2CWrite
 5639              	.LVL768:
3581:Src/main.c    **** 	VXISI2CWrite(0x2E,0x47);
 5640              		.loc 1 3581 0
 5641 0170 0021     		movs	r1, #0
 5642 0172 2D20     		movs	r0, #45
 5643 0174 FFF7FEFF 		bl	VXISI2CWrite
 5644              	.LVL769:
3582:Src/main.c    **** 	VXISI2CWrite(0x2F,0x80);
 5645              		.loc 1 3582 0
 5646 0178 4721     		movs	r1, #71
 5647 017a 2E20     		movs	r0, #46
 5648 017c FFF7FEFF 		bl	VXISI2CWrite
 5649              	.LVL770:
3583:Src/main.c    **** 	VXISI2CWrite(0x30,0x38);
 5650              		.loc 1 3583 0
 5651 0180 8021     		movs	r1, #128
ARM GAS  /tmp/ccs2VtGF.s 			page 191


 5652 0182 2F20     		movs	r0, #47
 5653 0184 FFF7FEFF 		bl	VXISI2CWrite
 5654              	.LVL771:
3584:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);
 5655              		.loc 1 3584 0
 5656 0188 3821     		movs	r1, #56
 5657 018a 3020     		movs	r0, #48
 5658 018c FFF7FEFF 		bl	VXISI2CWrite
 5659              	.LVL772:
3585:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);
 5660              		.loc 1 3585 0
 5661 0190 8021     		movs	r1, #128
 5662 0192 3120     		movs	r0, #49
 5663 0194 FFF7FEFF 		bl	VXISI2CWrite
 5664              	.LVL773:
3586:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);
 5665              		.loc 1 3586 0
 5666 0198 8021     		movs	r1, #128
 5667 019a 3220     		movs	r0, #50
 5668 019c FFF7FEFF 		bl	VXISI2CWrite
 5669              	.LVL774:
3587:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);
 5670              		.loc 1 3587 0
 5671 01a0 8021     		movs	r1, #128
 5672 01a2 3320     		movs	r0, #51
 5673 01a4 FFF7FEFF 		bl	VXISI2CWrite
 5674              	.LVL775:
3588:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);
 5675              		.loc 1 3588 0
 5676 01a8 A021     		movs	r1, #160
 5677 01aa 3420     		movs	r0, #52
 5678 01ac FFF7FEFF 		bl	VXISI2CWrite
 5679              	.LVL776:
3589:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);
 5680              		.loc 1 3589 0
 5681 01b0 1821     		movs	r1, #24
 5682 01b2 3520     		movs	r0, #53
 5683 01b4 FFF7FEFF 		bl	VXISI2CWrite
 5684              	.LVL777:
3590:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);
 5685              		.loc 1 3590 0
 5686 01b8 4621     		movs	r1, #70
 5687 01ba 3620     		movs	r0, #54
 5688 01bc FFF7FEFF 		bl	VXISI2CWrite
 5689              	.LVL778:
3591:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);
 5690              		.loc 1 3591 0
 5691 01c0 6421     		movs	r1, #100
 5692 01c2 3720     		movs	r0, #55
 5693 01c4 FFF7FEFF 		bl	VXISI2CWrite
 5694              	.LVL779:
3592:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);
 5695              		.loc 1 3592 0
 5696 01c8 0021     		movs	r1, #0
 5697 01ca 3820     		movs	r0, #56
 5698 01cc FFF7FEFF 		bl	VXISI2CWrite
 5699              	.LVL780:
ARM GAS  /tmp/ccs2VtGF.s 			page 192


3593:Src/main.c    **** 	VXISI2CWrite(0x3A,0x73);
 5700              		.loc 1 3593 0
 5701 01d0 FF21     		movs	r1, #255
 5702 01d2 3920     		movs	r0, #57
 5703 01d4 FFF7FEFF 		bl	VXISI2CWrite
 5704              	.LVL781:
3594:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);
 5705              		.loc 1 3594 0
 5706 01d8 7321     		movs	r1, #115
 5707 01da 3A20     		movs	r0, #58
 5708 01dc FFF7FEFF 		bl	VXISI2CWrite
 5709              	.LVL782:
3595:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);
 5710              		.loc 1 3595 0
 5711 01e0 8021     		movs	r1, #128
 5712 01e2 3B20     		movs	r0, #59
 5713 01e4 FFF7FEFF 		bl	VXISI2CWrite
 5714              	.LVL783:
3596:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);
 5715              		.loc 1 3596 0
 5716 01e8 8021     		movs	r1, #128
 5717 01ea 3C20     		movs	r0, #60
 5718 01ec FFF7FEFF 		bl	VXISI2CWrite
 5719              	.LVL784:
3597:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);
 5720              		.loc 1 3597 0
 5721 01f0 8021     		movs	r1, #128
 5722 01f2 3D20     		movs	r0, #61
 5723 01f4 FFF7FEFF 		bl	VXISI2CWrite
 5724              	.LVL785:
3598:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);
 5725              		.loc 1 3598 0
 5726 01f8 8021     		movs	r1, #128
 5727 01fa 3E20     		movs	r0, #62
 5728 01fc FFF7FEFF 		bl	VXISI2CWrite
 5729              	.LVL786:
3599:Src/main.c    **** 	VXISI2CWrite(0x40,0x80);
 5730              		.loc 1 3599 0
 5731 0200 8021     		movs	r1, #128
 5732 0202 3F20     		movs	r0, #63
 5733 0204 FFF7FEFF 		bl	VXISI2CWrite
 5734              	.LVL787:
3600:Src/main.c    **** 	VXISI2CWrite(0x41,0x60);
 5735              		.loc 1 3600 0
 5736 0208 8021     		movs	r1, #128
 5737 020a 4020     		movs	r0, #64
 5738 020c FFF7FEFF 		bl	VXISI2CWrite
 5739              	.LVL788:
3601:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);
 5740              		.loc 1 3601 0
 5741 0210 6021     		movs	r1, #96
 5742 0212 4120     		movs	r0, #65
 5743 0214 FFF7FEFF 		bl	VXISI2CWrite
 5744              	.LVL789:
3602:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);
 5745              		.loc 1 3602 0
 5746 0218 5F21     		movs	r1, #95
ARM GAS  /tmp/ccs2VtGF.s 			page 193


 5747 021a 4220     		movs	r0, #66
 5748 021c FFF7FEFF 		bl	VXISI2CWrite
 5749              	.LVL790:
3603:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);
 5750              		.loc 1 3603 0
 5751 0220 3721     		movs	r1, #55
 5752 0222 4320     		movs	r0, #67
 5753 0224 FFF7FEFF 		bl	VXISI2CWrite
 5754              	.LVL791:
3604:Src/main.c    **** 	VXISI2CWrite(0x45,0x00);
 5755              		.loc 1 3604 0
 5756 0228 1421     		movs	r1, #20
 5757 022a 4420     		movs	r0, #68
 5758 022c FFF7FEFF 		bl	VXISI2CWrite
 5759              	.LVL792:
3605:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);
 5760              		.loc 1 3605 0
 5761 0230 0021     		movs	r1, #0
 5762 0232 4520     		movs	r0, #69
 5763 0234 FFF7FEFF 		bl	VXISI2CWrite
 5764              	.LVL793:
3606:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);
 5765              		.loc 1 3606 0
 5766 0238 0021     		movs	r1, #0
 5767 023a 4620     		movs	r0, #70
 5768 023c FFF7FEFF 		bl	VXISI2CWrite
 5769              	.LVL794:
3607:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);
 5770              		.loc 1 3607 0
 5771 0240 0021     		movs	r1, #0
 5772 0242 4720     		movs	r0, #71
 5773 0244 FFF7FEFF 		bl	VXISI2CWrite
 5774              	.LVL795:
3608:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);
 5775              		.loc 1 3608 0
 5776 0248 0021     		movs	r1, #0
 5777 024a 4820     		movs	r0, #72
 5778 024c FFF7FEFF 		bl	VXISI2CWrite
 5779              	.LVL796:
3609:Src/main.c    **** 	VXISI2CWrite(0x4A,0x00);
 5780              		.loc 1 3609 0
 5781 0250 0021     		movs	r1, #0
 5782 0252 4920     		movs	r0, #73
 5783 0254 FFF7FEFF 		bl	VXISI2CWrite
 5784              	.LVL797:
3610:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);
 5785              		.loc 1 3610 0
 5786 0258 0021     		movs	r1, #0
 5787 025a 4A20     		movs	r0, #74
 5788 025c FFF7FEFF 		bl	VXISI2CWrite
 5789              	.LVL798:
3611:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);
 5790              		.loc 1 3611 0
 5791 0260 2021     		movs	r1, #32
 5792 0262 4B20     		movs	r0, #75
 5793 0264 FFF7FEFF 		bl	VXISI2CWrite
 5794              	.LVL799:
ARM GAS  /tmp/ccs2VtGF.s 			page 194


3612:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);
 5795              		.loc 1 3612 0
 5796 0268 0021     		movs	r1, #0
 5797 026a 4C20     		movs	r0, #76
 5798 026c FFF7FEFF 		bl	VXISI2CWrite
 5799              	.LVL800:
3613:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);
 5800              		.loc 1 3613 0
 5801 0270 0021     		movs	r1, #0
 5802 0272 4D20     		movs	r0, #77
 5803 0274 FFF7FEFF 		bl	VXISI2CWrite
 5804              	.LVL801:
3614:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);
 5805              		.loc 1 3614 0
 5806 0278 0021     		movs	r1, #0
 5807 027a 4E20     		movs	r0, #78
 5808 027c FFF7FEFF 		bl	VXISI2CWrite
 5809              	.LVL802:
3615:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);
 5810              		.loc 1 3615 0
 5811 0280 7F21     		movs	r1, #127
 5812 0282 4F20     		movs	r0, #79
 5813 0284 FFF7FEFF 		bl	VXISI2CWrite
 5814              	.LVL803:
3616:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);
 5815              		.loc 1 3616 0
 5816 0288 2021     		movs	r1, #32
 5817 028a 5020     		movs	r0, #80
 5818 028c FFF7FEFF 		bl	VXISI2CWrite
 5819              	.LVL804:
3617:Src/main.c    **** 	VXISI2CWrite(0x52,0xA4);
 5820              		.loc 1 3617 0
 5821 0290 0021     		movs	r1, #0
 5822 0292 5120     		movs	r0, #81
 5823 0294 FFF7FEFF 		bl	VXISI2CWrite
 5824              	.LVL805:
3618:Src/main.c    **** 	VXISI2CWrite(0x53,0xC0);
 5825              		.loc 1 3618 0
 5826 0298 A421     		movs	r1, #164
 5827 029a 5220     		movs	r0, #82
 5828 029c FFF7FEFF 		bl	VXISI2CWrite
 5829              	.LVL806:
3619:Src/main.c    **** 	VXISI2CWrite(0x54,0x42);
 5830              		.loc 1 3619 0
 5831 02a0 C021     		movs	r1, #192
 5832 02a2 5320     		movs	r0, #83
 5833 02a4 FFF7FEFF 		bl	VXISI2CWrite
 5834              	.LVL807:
3620:Src/main.c    **** 	VXISI2CWrite(0x55,0x60);
 5835              		.loc 1 3620 0
 5836 02a8 4221     		movs	r1, #66
 5837 02aa 5420     		movs	r0, #84
 5838 02ac FFF7FEFF 		bl	VXISI2CWrite
 5839              	.LVL808:
3621:Src/main.c    **** 	VXISI2CWrite(0x56,0x5C);
 5840              		.loc 1 3621 0
 5841 02b0 6021     		movs	r1, #96
ARM GAS  /tmp/ccs2VtGF.s 			page 195


 5842 02b2 5520     		movs	r0, #85
 5843 02b4 FFF7FEFF 		bl	VXISI2CWrite
 5844              	.LVL809:
3622:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);
 5845              		.loc 1 3622 0
 5846 02b8 5C21     		movs	r1, #92
 5847 02ba 5620     		movs	r0, #86
 5848 02bc FFF7FEFF 		bl	VXISI2CWrite
 5849              	.LVL810:
3623:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);
 5850              		.loc 1 3623 0
 5851 02c0 0421     		movs	r1, #4
 5852 02c2 5720     		movs	r0, #87
 5853 02c4 FFF7FEFF 		bl	VXISI2CWrite
 5854              	.LVL811:
3624:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);
 5855              		.loc 1 3624 0
 5856 02c8 0021     		movs	r1, #0
 5857 02ca 5820     		movs	r0, #88
 5858 02cc FFF7FEFF 		bl	VXISI2CWrite
 5859              	.LVL812:
3625:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);
 5860              		.loc 1 3625 0
 5861 02d0 0821     		movs	r1, #8
 5862 02d2 5920     		movs	r0, #89
 5863 02d4 FFF7FEFF 		bl	VXISI2CWrite
 5864              	.LVL813:
3626:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);
 5865              		.loc 1 3626 0
 5866 02d8 1021     		movs	r1, #16
 5867 02da 5A20     		movs	r0, #90
 5868 02dc FFF7FEFF 		bl	VXISI2CWrite
 5869              	.LVL814:
3627:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);
 5870              		.loc 1 3627 0
 5871 02e0 0021     		movs	r1, #0
 5872 02e2 5B20     		movs	r0, #91
 5873 02e4 FFF7FEFF 		bl	VXISI2CWrite
 5874              	.LVL815:
3628:Src/main.c    **** 	VXISI2CWrite(0x5D,0xA8);
 5875              		.loc 1 3628 0
 5876 02e8 6821     		movs	r1, #104
 5877 02ea 5C20     		movs	r0, #92
 5878 02ec FFF7FEFF 		bl	VXISI2CWrite
 5879              	.LVL816:
3629:Src/main.c    **** 	VXISI2CWrite(0x5E,0xC0);
 5880              		.loc 1 3629 0
 5881 02f0 A821     		movs	r1, #168
 5882 02f2 5D20     		movs	r0, #93
 5883 02f4 FFF7FEFF 		bl	VXISI2CWrite
 5884              	.LVL817:
3630:Src/main.c    **** 	VXISI2CWrite(0x5F,0x53);
 5885              		.loc 1 3630 0
 5886 02f8 C021     		movs	r1, #192
 5887 02fa 5E20     		movs	r0, #94
 5888 02fc FFF7FEFF 		bl	VXISI2CWrite
 5889              	.LVL818:
ARM GAS  /tmp/ccs2VtGF.s 			page 196


3631:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);
 5890              		.loc 1 3631 0
 5891 0300 5321     		movs	r1, #83
 5892 0302 5F20     		movs	r0, #95
 5893 0304 FFF7FEFF 		bl	VXISI2CWrite
 5894              	.LVL819:
3632:Src/main.c    **** 	VXISI2CWrite(0x61,0xCC);
 5895              		.loc 1 3632 0
 5896 0308 E021     		movs	r1, #224
 5897 030a 6020     		movs	r0, #96
 5898 030c FFF7FEFF 		bl	VXISI2CWrite
 5899              	.LVL820:
3633:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);
 5900              		.loc 1 3633 0
 5901 0310 CC21     		movs	r1, #204
 5902 0312 6120     		movs	r0, #97
 5903 0314 FFF7FEFF 		bl	VXISI2CWrite
 5904              	.LVL821:
3634:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);
 5905              		.loc 1 3634 0
 5906 0318 3321     		movs	r1, #51
 5907 031a 6220     		movs	r0, #98
 5908 031c FFF7FEFF 		bl	VXISI2CWrite
 5909              	.LVL822:
3635:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);
 5910              		.loc 1 3635 0
 5911 0320 0121     		movs	r1, #1
 5912 0322 6320     		movs	r0, #99
 5913 0324 FFF7FEFF 		bl	VXISI2CWrite
 5914              	.LVL823:
3636:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);
 5915              		.loc 1 3636 0
 5916 0328 FF21     		movs	r1, #255
 5917 032a 6420     		movs	r0, #100
 5918 032c FFF7FEFF 		bl	VXISI2CWrite
 5919              	.LVL824:
3637:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);
 5920              		.loc 1 3637 0
 5921 0330 0121     		movs	r1, #1
 5922 0332 6520     		movs	r0, #101
 5923 0334 FFF7FEFF 		bl	VXISI2CWrite
 5924              	.LVL825:
3638:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);
 5925              		.loc 1 3638 0
 5926 0338 FF21     		movs	r1, #255
 5927 033a 6620     		movs	r0, #102
 5928 033c FFF7FEFF 		bl	VXISI2CWrite
 5929              	.LVL826:
3639:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);
 5930              		.loc 1 3639 0
 5931 0340 8921     		movs	r1, #137
 5932 0342 6720     		movs	r0, #103
 5933 0344 FFF7FEFF 		bl	VXISI2CWrite
 5934              	.LVL827:
3640:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);
 5935              		.loc 1 3640 0
 5936 0348 AB21     		movs	r1, #171
ARM GAS  /tmp/ccs2VtGF.s 			page 197


 5937 034a 6820     		movs	r0, #104
 5938 034c FFF7FEFF 		bl	VXISI2CWrite
 5939              	.LVL828:
3641:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);
 5940              		.loc 1 3641 0
 5941 0350 8821     		movs	r1, #136
 5942 0352 6920     		movs	r0, #105
 5943 0354 FFF7FEFF 		bl	VXISI2CWrite
 5944              	.LVL829:
3642:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);
 5945              		.loc 1 3642 0
 5946 0358 6E21     		movs	r1, #110
 5947 035a 6A20     		movs	r0, #106
 5948 035c FFF7FEFF 		bl	VXISI2CWrite
 5949              	.LVL830:
3643:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);
 5950              		.loc 1 3643 0
 5951 0360 6E21     		movs	r1, #110
 5952 0362 6B20     		movs	r0, #107
 5953 0364 FFF7FEFF 		bl	VXISI2CWrite
 5954              	.LVL831:
3644:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);
 5955              		.loc 1 3644 0
 5956 0368 6E21     		movs	r1, #110
 5957 036a 6C20     		movs	r0, #108
 5958 036c FFF7FEFF 		bl	VXISI2CWrite
 5959              	.LVL832:
3645:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);
 5960              		.loc 1 3645 0
 5961 0370 0021     		movs	r1, #0
 5962 0372 6D20     		movs	r0, #109
 5963 0374 FFF7FEFF 		bl	VXISI2CWrite
 5964              	.LVL833:
3646:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);
 5965              		.loc 1 3646 0
 5966 0378 0021     		movs	r1, #0
 5967 037a 6E20     		movs	r0, #110
 5968 037c FFF7FEFF 		bl	VXISI2CWrite
 5969              	.LVL834:
3647:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);
 5970              		.loc 1 3647 0
 5971 0380 0021     		movs	r1, #0
 5972 0382 6F20     		movs	r0, #111
 5973 0384 FFF7FEFF 		bl	VXISI2CWrite
 5974              	.LVL835:
3648:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);
 5975              		.loc 1 3648 0
 5976 0388 0021     		movs	r1, #0
 5977 038a 7020     		movs	r0, #112
 5978 038c FFF7FEFF 		bl	VXISI2CWrite
 5979              	.LVL836:
3649:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);
 5980              		.loc 1 3649 0
 5981 0390 0021     		movs	r1, #0
 5982 0392 7120     		movs	r0, #113
 5983 0394 FFF7FEFF 		bl	VXISI2CWrite
 5984              	.LVL837:
ARM GAS  /tmp/ccs2VtGF.s 			page 198


3650:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);
 5985              		.loc 1 3650 0
 5986 0398 0021     		movs	r1, #0
 5987 039a 7220     		movs	r0, #114
 5988 039c FFF7FEFF 		bl	VXISI2CWrite
 5989              	.LVL838:
3651:Src/main.c    **** 	VXISI2CWrite(0x74,0x06);
 5990              		.loc 1 3651 0
 5991 03a0 0021     		movs	r1, #0
 5992 03a2 7320     		movs	r0, #115
 5993 03a4 FFF7FEFF 		bl	VXISI2CWrite
 5994              	.LVL839:
3652:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);
 5995              		.loc 1 3652 0
 5996 03a8 0621     		movs	r1, #6
 5997 03aa 7420     		movs	r0, #116
 5998 03ac FFF7FEFF 		bl	VXISI2CWrite
 5999              	.LVL840:
3653:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);
 6000              		.loc 1 3653 0
 6001 03b0 FF21     		movs	r1, #255
 6002 03b2 7520     		movs	r0, #117
 6003 03b4 FFF7FEFF 		bl	VXISI2CWrite
 6004              	.LVL841:
3654:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);
 6005              		.loc 1 3654 0
 6006 03b8 FF21     		movs	r1, #255
 6007 03ba 7620     		movs	r0, #118
 6008 03bc FFF7FEFF 		bl	VXISI2CWrite
 6009              	.LVL842:
3655:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);
 6010              		.loc 1 3655 0
 6011 03c0 FF21     		movs	r1, #255
 6012 03c2 7720     		movs	r0, #119
 6013 03c4 FFF7FEFF 		bl	VXISI2CWrite
 6014              	.LVL843:
3656:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);
 6015              		.loc 1 3656 0
 6016 03c8 FF21     		movs	r1, #255
 6017 03ca 7820     		movs	r0, #120
 6018 03cc FFF7FEFF 		bl	VXISI2CWrite
 6019              	.LVL844:
3657:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);
 6020              		.loc 1 3657 0
 6021 03d0 FF21     		movs	r1, #255
 6022 03d2 7920     		movs	r0, #121
 6023 03d4 FFF7FEFF 		bl	VXISI2CWrite
 6024              	.LVL845:
3658:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);
 6025              		.loc 1 3658 0
 6026 03d8 FF21     		movs	r1, #255
 6027 03da 7A20     		movs	r0, #122
 6028 03dc FFF7FEFF 		bl	VXISI2CWrite
 6029              	.LVL846:
3659:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);
 6030              		.loc 1 3659 0
 6031 03e0 FF21     		movs	r1, #255
ARM GAS  /tmp/ccs2VtGF.s 			page 199


 6032 03e2 7B20     		movs	r0, #123
 6033 03e4 FFF7FEFF 		bl	VXISI2CWrite
 6034              	.LVL847:
3660:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);
 6035              		.loc 1 3660 0
 6036 03e8 FF21     		movs	r1, #255
 6037 03ea 7C20     		movs	r0, #124
 6038 03ec FFF7FEFF 		bl	VXISI2CWrite
 6039              	.LVL848:
3661:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);
 6040              		.loc 1 3661 0
 6041 03f0 F021     		movs	r1, #240
 6042 03f2 7D20     		movs	r0, #125
 6043 03f4 FFF7FEFF 		bl	VXISI2CWrite
 6044              	.LVL849:
 6045 03f8 02E0     		b	.L213
 6046              	.L214:
 6047 03fa 00BF     		.align	2
 6048              	.L212:
 6049 03fc 00000000 		.word	.LC37
 6050              	.L213:
3662:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);
 6051              		.loc 1 3662 0
 6052 0400 8021     		movs	r1, #128
 6053 0402 7E20     		movs	r0, #126
 6054 0404 FFF7FEFF 		bl	VXISI2CWrite
 6055              	.LVL850:
3663:Src/main.c    **** 	VXISI2CWrite(0x80,0x01);
 6056              		.loc 1 3663 0
 6057 0408 0021     		movs	r1, #0
 6058 040a 7F20     		movs	r0, #127
 6059 040c FFF7FEFF 		bl	VXISI2CWrite
 6060              	.LVL851:
3664:Src/main.c    **** 	VXISI2CWrite(0x81,0x15);
 6061              		.loc 1 3664 0
 6062 0410 0121     		movs	r1, #1
 6063 0412 8020     		movs	r0, #128
 6064 0414 FFF7FEFF 		bl	VXISI2CWrite
 6065              	.LVL852:
3665:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);
 6066              		.loc 1 3665 0
 6067 0418 1521     		movs	r1, #21
 6068 041a 8120     		movs	r0, #129
 6069 041c FFF7FEFF 		bl	VXISI2CWrite
 6070              	.LVL853:
3666:Src/main.c    **** 	VXISI2CWrite(0x83,0x2D);
 6071              		.loc 1 3666 0
 6072 0420 4021     		movs	r1, #64
 6073 0422 8220     		movs	r0, #130
 6074 0424 FFF7FEFF 		bl	VXISI2CWrite
 6075              	.LVL854:
3667:Src/main.c    **** 	VXISI2CWrite(0x84,0x57);
 6076              		.loc 1 3667 0
 6077 0428 2D21     		movs	r1, #45
 6078 042a 8320     		movs	r0, #131
 6079 042c FFF7FEFF 		bl	VXISI2CWrite
 6080              	.LVL855:
ARM GAS  /tmp/ccs2VtGF.s 			page 200


3668:Src/main.c    **** 	VXISI2CWrite(0x85,0xFD);
 6081              		.loc 1 3668 0
 6082 0430 5721     		movs	r1, #87
 6083 0432 8420     		movs	r0, #132
 6084 0434 FFF7FEFF 		bl	VXISI2CWrite
 6085              	.LVL856:
3669:Src/main.c    **** 	VXISI2CWrite(0x86,0x00);
 6086              		.loc 1 3669 0
 6087 0438 FD21     		movs	r1, #253
 6088 043a 8520     		movs	r0, #133
 6089 043c FFF7FEFF 		bl	VXISI2CWrite
 6090              	.LVL857:
3670:Src/main.c    **** 	VXISI2CWrite(0x87,0x00);
 6091              		.loc 1 3670 0
 6092 0440 0021     		movs	r1, #0
 6093 0442 8620     		movs	r0, #134
 6094 0444 FFF7FEFF 		bl	VXISI2CWrite
 6095              	.LVL858:
3671:Src/main.c    **** 	VXISI2CWrite(0x88,0x00);
 6096              		.loc 1 3671 0
 6097 0448 0021     		movs	r1, #0
 6098 044a 8720     		movs	r0, #135
 6099 044c FFF7FEFF 		bl	VXISI2CWrite
 6100              	.LVL859:
3672:Src/main.c    **** 	VXISI2CWrite(0x89,0x00);
 6101              		.loc 1 3672 0
 6102 0450 0021     		movs	r1, #0
 6103 0452 8820     		movs	r0, #136
 6104 0454 FFF7FEFF 		bl	VXISI2CWrite
 6105              	.LVL860:
3673:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);
 6106              		.loc 1 3673 0
 6107 0458 0021     		movs	r1, #0
 6108 045a 8920     		movs	r0, #137
 6109 045c FFF7FEFF 		bl	VXISI2CWrite
 6110              	.LVL861:
3674:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);
 6111              		.loc 1 3674 0
 6112 0460 0021     		movs	r1, #0
 6113 0462 8A20     		movs	r0, #138
 6114 0464 FFF7FEFF 		bl	VXISI2CWrite
 6115              	.LVL862:
3675:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);
 6116              		.loc 1 3675 0
 6117 0468 7E21     		movs	r1, #126
 6118 046a 8B20     		movs	r0, #139
 6119 046c FFF7FEFF 		bl	VXISI2CWrite
 6120              	.LVL863:
3676:Src/main.c    **** 	VXISI2CWrite(0x8D,0x17);
 6121              		.loc 1 3676 0
 6122 0470 0321     		movs	r1, #3
 6123 0472 8C20     		movs	r0, #140
 6124 0474 FFF7FEFF 		bl	VXISI2CWrite
 6125              	.LVL864:
3677:Src/main.c    **** 	VXISI2CWrite(0x8E,0x8C);
 6126              		.loc 1 3677 0
 6127 0478 1721     		movs	r1, #23
ARM GAS  /tmp/ccs2VtGF.s 			page 201


 6128 047a 8D20     		movs	r0, #141
 6129 047c FFF7FEFF 		bl	VXISI2CWrite
 6130              	.LVL865:
3678:Src/main.c    **** 	VXISI2CWrite(0x8F,0x00);
 6131              		.loc 1 3678 0
 6132 0480 8C21     		movs	r1, #140
 6133 0482 8E20     		movs	r0, #142
 6134 0484 FFF7FEFF 		bl	VXISI2CWrite
 6135              	.LVL866:
3679:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);
 6136              		.loc 1 3679 0
 6137 0488 0021     		movs	r1, #0
 6138 048a 8F20     		movs	r0, #143
 6139 048c FFF7FEFF 		bl	VXISI2CWrite
 6140              	.LVL867:
3680:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);
 6141              		.loc 1 3680 0
 6142 0490 CC21     		movs	r1, #204
 6143 0492 9020     		movs	r0, #144
 6144 0494 FFF7FEFF 		bl	VXISI2CWrite
 6145              	.LVL868:
3681:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);
 6146              		.loc 1 3681 0
 6147 0498 4121     		movs	r1, #65
 6148 049a 9120     		movs	r0, #145
 6149 049c FFF7FEFF 		bl	VXISI2CWrite
 6150              	.LVL869:
3682:Src/main.c    **** 	VXISI2CWrite(0x93,0x84);
 6151              		.loc 1 3682 0
 6152 04a0 C421     		movs	r1, #196
 6153 04a2 9220     		movs	r0, #146
 6154 04a4 FFF7FEFF 		bl	VXISI2CWrite
 6155              	.LVL870:
3683:Src/main.c    **** 	VXISI2CWrite(0x94,0x98);
 6156              		.loc 1 3683 0
 6157 04a8 8421     		movs	r1, #132
 6158 04aa 9320     		movs	r0, #147
 6159 04ac FFF7FEFF 		bl	VXISI2CWrite
 6160              	.LVL871:
3684:Src/main.c    **** 	VXISI2CWrite(0x95,0x80);
 6161              		.loc 1 3684 0
 6162 04b0 9821     		movs	r1, #152
 6163 04b2 9420     		movs	r0, #148
 6164 04b4 FFF7FEFF 		bl	VXISI2CWrite
 6165              	.LVL872:
3685:Src/main.c    **** 	VXISI2CWrite(0x96,0x65);
 6166              		.loc 1 3685 0
 6167 04b8 8021     		movs	r1, #128
 6168 04ba 9520     		movs	r0, #149
 6169 04bc FFF7FEFF 		bl	VXISI2CWrite
 6170              	.LVL873:
3686:Src/main.c    **** 	VXISI2CWrite(0x97,0x70);
 6171              		.loc 1 3686 0
 6172 04c0 6521     		movs	r1, #101
 6173 04c2 9620     		movs	r0, #150
 6174 04c4 FFF7FEFF 		bl	VXISI2CWrite
 6175              	.LVL874:
ARM GAS  /tmp/ccs2VtGF.s 			page 202


3687:Src/main.c    **** 	VXISI2CWrite(0x98,0x29);
 6176              		.loc 1 3687 0
 6177 04c8 7021     		movs	r1, #112
 6178 04ca 9720     		movs	r0, #151
 6179 04cc FFF7FEFF 		bl	VXISI2CWrite
 6180              	.LVL875:
3688:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);
 6181              		.loc 1 3688 0
 6182 04d0 2921     		movs	r1, #41
 6183 04d2 9820     		movs	r0, #152
 6184 04d4 FFF7FEFF 		bl	VXISI2CWrite
 6185              	.LVL876:
3689:Src/main.c    **** 	VXISI2CWrite(0x9A,0x00);
 6186              		.loc 1 3689 0
 6187 04d8 9021     		movs	r1, #144
 6188 04da 9920     		movs	r0, #153
 6189 04dc FFF7FEFF 		bl	VXISI2CWrite
 6190              	.LVL877:
3690:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);
 6191              		.loc 1 3690 0
 6192 04e0 0021     		movs	r1, #0
 6193 04e2 9A20     		movs	r0, #154
 6194 04e4 FFF7FEFF 		bl	VXISI2CWrite
 6195              	.LVL878:
3691:Src/main.c    **** 	VXISI2CWrite(0x9C,0x00);
 6196              		.loc 1 3691 0
 6197 04e8 0421     		movs	r1, #4
 6198 04ea 9B20     		movs	r0, #155
 6199 04ec FFF7FEFF 		bl	VXISI2CWrite
 6200              	.LVL879:
3692:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);
 6201              		.loc 1 3692 0
 6202 04f0 0021     		movs	r1, #0
 6203 04f2 9C20     		movs	r0, #156
 6204 04f4 FFF7FEFF 		bl	VXISI2CWrite
 6205              	.LVL880:
3693:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);
 6206              		.loc 1 3693 0
 6207 04f8 0021     		movs	r1, #0
 6208 04fa 9D20     		movs	r0, #157
 6209 04fc FFF7FEFF 		bl	VXISI2CWrite
 6210              	.LVL881:
3694:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);
 6211              		.loc 1 3694 0
 6212 0500 0421     		movs	r1, #4
 6213 0502 9E20     		movs	r0, #158
 6214 0504 FFF7FEFF 		bl	VXISI2CWrite
 6215              	.LVL882:
3695:Src/main.c    **** 	VXISI2CWrite(0xA0,0x80);
 6216              		.loc 1 3695 0
 6217 0508 6521     		movs	r1, #101
 6218 050a 9F20     		movs	r0, #159
 6219 050c FFF7FEFF 		bl	VXISI2CWrite
 6220              	.LVL883:
3696:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD8);
 6221              		.loc 1 3696 0
 6222 0510 8021     		movs	r1, #128
ARM GAS  /tmp/ccs2VtGF.s 			page 203


 6223 0512 A020     		movs	r0, #160
 6224 0514 FFF7FEFF 		bl	VXISI2CWrite
 6225              	.LVL884:
3697:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);
 6226              		.loc 1 3697 0
 6227 0518 D821     		movs	r1, #216
 6228 051a A120     		movs	r0, #161
 6229 051c FFF7FEFF 		bl	VXISI2CWrite
 6230              	.LVL885:
3698:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);
 6231              		.loc 1 3698 0
 6232 0520 9821     		movs	r1, #152
 6233 0522 A220     		movs	r0, #162
 6234 0524 FFF7FEFF 		bl	VXISI2CWrite
 6235              	.LVL886:
3699:Src/main.c    **** 	VXISI2CWrite(0xA4,0x00);
 6236              		.loc 1 3699 0
 6237 0528 8721     		movs	r1, #135
 6238 052a A320     		movs	r0, #163
 6239 052c FFF7FEFF 		bl	VXISI2CWrite
 6240              	.LVL887:
3700:Src/main.c    **** 	VXISI2CWrite(0xA5,0x80);
 6241              		.loc 1 3700 0
 6242 0530 0021     		movs	r1, #0
 6243 0532 A420     		movs	r0, #164
 6244 0534 FFF7FEFF 		bl	VXISI2CWrite
 6245              	.LVL888:
3701:Src/main.c    **** 	VXISI2CWrite(0xA6,0x00);
 6246              		.loc 1 3701 0
 6247 0538 8021     		movs	r1, #128
 6248 053a A520     		movs	r0, #165
 6249 053c FFF7FEFF 		bl	VXISI2CWrite
 6250              	.LVL889:
3702:Src/main.c    **** 	VXISI2CWrite(0xA7,0x70);
 6251              		.loc 1 3702 0
 6252 0540 0021     		movs	r1, #0
 6253 0542 A620     		movs	r0, #166
 6254 0544 FFF7FEFF 		bl	VXISI2CWrite
 6255              	.LVL890:
3703:Src/main.c    **** 	VXISI2CWrite(0xA8,0x40);
 6256              		.loc 1 3703 0
 6257 0548 7021     		movs	r1, #112
 6258 054a A720     		movs	r0, #167
 6259 054c FFF7FEFF 		bl	VXISI2CWrite
 6260              	.LVL891:
3704:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);
 6261              		.loc 1 3704 0
 6262 0550 4021     		movs	r1, #64
 6263 0552 A820     		movs	r0, #168
 6264 0554 FFF7FEFF 		bl	VXISI2CWrite
 6265              	.LVL892:
3705:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2C);
 6266              		.loc 1 3705 0
 6267 0558 1E21     		movs	r1, #30
 6268 055a A920     		movs	r0, #169
 6269 055c FFF7FEFF 		bl	VXISI2CWrite
 6270              	.LVL893:
ARM GAS  /tmp/ccs2VtGF.s 			page 204


3706:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);
 6271              		.loc 1 3706 0
 6272 0560 2C21     		movs	r1, #44
 6273 0562 AA20     		movs	r0, #170
 6274 0564 FFF7FEFF 		bl	VXISI2CWrite
 6275              	.LVL894:
3707:Src/main.c    **** 	VXISI2CWrite(0xAC,0x90);
 6276              		.loc 1 3707 0
 6277 0568 0021     		movs	r1, #0
 6278 056a AB20     		movs	r0, #171
 6279 056c FFF7FEFF 		bl	VXISI2CWrite
 6280              	.LVL895:
3708:Src/main.c    **** 	VXISI2CWrite(0xAD,0x65);
 6281              		.loc 1 3708 0
 6282 0570 9021     		movs	r1, #144
 6283 0572 AC20     		movs	r0, #172
 6284 0574 FFF7FEFF 		bl	VXISI2CWrite
 6285              	.LVL896:
3709:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);
 6286              		.loc 1 3709 0
 6287 0578 6521     		movs	r1, #101
 6288 057a AD20     		movs	r0, #173
 6289 057c FFF7FEFF 		bl	VXISI2CWrite
 6290              	.LVL897:
3710:Src/main.c    **** 	VXISI2CWrite(0xAF,0x99);
 6291              		.loc 1 3710 0
 6292 0580 6521     		movs	r1, #101
 6293 0582 AE20     		movs	r0, #174
 6294 0584 FFF7FEFF 		bl	VXISI2CWrite
 6295              	.LVL898:
3711:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);
 6296              		.loc 1 3711 0
 6297 0588 9921     		movs	r1, #153
 6298 058a AF20     		movs	r0, #175
 6299 058c FFF7FEFF 		bl	VXISI2CWrite
 6300              	.LVL899:
3712:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);
 6301              		.loc 1 3712 0
 6302 0590 0021     		movs	r1, #0
 6303 0592 B020     		movs	r0, #176
 6304 0594 FFF7FEFF 		bl	VXISI2CWrite
 6305              	.LVL900:
3713:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);
 6306              		.loc 1 3713 0
 6307 0598 0021     		movs	r1, #0
 6308 059a B120     		movs	r0, #177
 6309 059c FFF7FEFF 		bl	VXISI2CWrite
 6310              	.LVL901:
3714:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);
 6311              		.loc 1 3714 0
 6312 05a0 0021     		movs	r1, #0
 6313 05a2 B220     		movs	r0, #178
 6314 05a4 FFF7FEFF 		bl	VXISI2CWrite
 6315              	.LVL902:
3715:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);
 6316              		.loc 1 3715 0
 6317 05a8 0021     		movs	r1, #0
ARM GAS  /tmp/ccs2VtGF.s 			page 205


 6318 05aa B320     		movs	r0, #179
 6319 05ac FFF7FEFF 		bl	VXISI2CWrite
 6320              	.LVL903:
3716:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);
 6321              		.loc 1 3716 0
 6322 05b0 0021     		movs	r1, #0
 6323 05b2 B420     		movs	r0, #180
 6324 05b4 FFF7FEFF 		bl	VXISI2CWrite
 6325              	.LVL904:
3717:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);
 6326              		.loc 1 3717 0
 6327 05b8 0021     		movs	r1, #0
 6328 05ba B520     		movs	r0, #181
 6329 05bc FFF7FEFF 		bl	VXISI2CWrite
 6330              	.LVL905:
3718:Src/main.c    **** 	VXISI2CWrite(0xB7,0x00);
 6331              		.loc 1 3718 0
 6332 05c0 0021     		movs	r1, #0
 6333 05c2 B620     		movs	r0, #182
 6334 05c4 FFF7FEFF 		bl	VXISI2CWrite
 6335              	.LVL906:
3719:Src/main.c    **** 	VXISI2CWrite(0xB8,0x80);
 6336              		.loc 1 3719 0
 6337 05c8 0021     		movs	r1, #0
 6338 05ca B720     		movs	r0, #183
 6339 05cc FFF7FEFF 		bl	VXISI2CWrite
 6340              	.LVL907:
3720:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);
 6341              		.loc 1 3720 0
 6342 05d0 8021     		movs	r1, #128
 6343 05d2 B820     		movs	r0, #184
 6344 05d4 FFF7FEFF 		bl	VXISI2CWrite
 6345              	.LVL908:
3721:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);
 6346              		.loc 1 3721 0
 6347 05d8 0021     		movs	r1, #0
 6348 05da B920     		movs	r0, #185
 6349 05dc FFF7FEFF 		bl	VXISI2CWrite
 6350              	.LVL909:
3722:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);
 6351              		.loc 1 3722 0
 6352 05e0 0121     		movs	r1, #1
 6353 05e2 BA20     		movs	r0, #186
 6354 05e4 FFF7FEFF 		bl	VXISI2CWrite
 6355              	.LVL910:
3723:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);
 6356              		.loc 1 3723 0
 6357 05e8 0021     		movs	r1, #0
 6358 05ea BB20     		movs	r0, #187
 6359 05ec FFF7FEFF 		bl	VXISI2CWrite
 6360              	.LVL911:
3724:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);
 6361              		.loc 1 3724 0
 6362 05f0 9021     		movs	r1, #144
 6363 05f2 BC20     		movs	r0, #188
 6364 05f4 FFF7FEFF 		bl	VXISI2CWrite
 6365              	.LVL912:
ARM GAS  /tmp/ccs2VtGF.s 			page 206


3725:Src/main.c    **** 	VXISI2CWrite(0xBE,0x2C);
 6366              		.loc 1 3725 0
 6367 05f8 0121     		movs	r1, #1
 6368 05fa BD20     		movs	r0, #189
 6369 05fc FFF7FEFF 		bl	VXISI2CWrite
 6370              	.LVL913:
3726:Src/main.c    **** 	VXISI2CWrite(0xBF,0x00);
 6371              		.loc 1 3726 0
 6372 0600 2C21     		movs	r1, #44
 6373 0602 BE20     		movs	r0, #190
 6374 0604 FFF7FEFF 		bl	VXISI2CWrite
 6375              	.LVL914:
3727:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);
 6376              		.loc 1 3727 0
 6377 0608 0021     		movs	r1, #0
 6378 060a BF20     		movs	r0, #191
 6379 060c FFF7FEFF 		bl	VXISI2CWrite
 6380              	.LVL915:
3728:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);
 6381              		.loc 1 3728 0
 6382 0610 0021     		movs	r1, #0
 6383 0612 C020     		movs	r0, #192
 6384 0614 FFF7FEFF 		bl	VXISI2CWrite
 6385              	.LVL916:
3729:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);
 6386              		.loc 1 3729 0
 6387 0618 2021     		movs	r1, #32
 6388 061a C120     		movs	r0, #193
 6389 061c FFF7FEFF 		bl	VXISI2CWrite
 6390              	.LVL917:
3730:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);
 6391              		.loc 1 3730 0
 6392 0620 2021     		movs	r1, #32
 6393 0622 C220     		movs	r0, #194
 6394 0624 FFF7FEFF 		bl	VXISI2CWrite
 6395              	.LVL918:
3731:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);
 6396              		.loc 1 3731 0
 6397 0628 2021     		movs	r1, #32
 6398 062a C320     		movs	r0, #195
 6399 062c FFF7FEFF 		bl	VXISI2CWrite
 6400              	.LVL919:
3732:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);
 6401              		.loc 1 3732 0
 6402 0630 2021     		movs	r1, #32
 6403 0632 C420     		movs	r0, #196
 6404 0634 FFF7FEFF 		bl	VXISI2CWrite
 6405              	.LVL920:
3733:Src/main.c    **** 	VXISI2CWrite(0xC6,0x00);
 6406              		.loc 1 3733 0
 6407 0638 2021     		movs	r1, #32
 6408 063a C520     		movs	r0, #197
 6409 063c FFF7FEFF 		bl	VXISI2CWrite
 6410              	.LVL921:
3734:Src/main.c    **** 	VXISI2CWrite(0xC7,0x00);
 6411              		.loc 1 3734 0
 6412 0640 0021     		movs	r1, #0
ARM GAS  /tmp/ccs2VtGF.s 			page 207


 6413 0642 C620     		movs	r0, #198
 6414 0644 FFF7FEFF 		bl	VXISI2CWrite
 6415              	.LVL922:
3735:Src/main.c    **** 	VXISI2CWrite(0xC8,0x00);
 6416              		.loc 1 3735 0
 6417 0648 0021     		movs	r1, #0
 6418 064a C720     		movs	r0, #199
 6419 064c FFF7FEFF 		bl	VXISI2CWrite
 6420              	.LVL923:
3736:Src/main.c    **** 	VXISI2CWrite(0xC9,0x00);
 6421              		.loc 1 3736 0
 6422 0650 0021     		movs	r1, #0
 6423 0652 C820     		movs	r0, #200
 6424 0654 FFF7FEFF 		bl	VXISI2CWrite
 6425              	.LVL924:
3737:Src/main.c    **** 	VXISI2CWrite(0xCA,0x00);
 6426              		.loc 1 3737 0
 6427 0658 0021     		movs	r1, #0
 6428 065a C920     		movs	r0, #201
 6429 065c FFF7FEFF 		bl	VXISI2CWrite
 6430              	.LVL925:
3738:Src/main.c    **** 	VXISI2CWrite(0xCB,0x00);
 6431              		.loc 1 3738 0
 6432 0660 0021     		movs	r1, #0
 6433 0662 CA20     		movs	r0, #202
 6434 0664 FFF7FEFF 		bl	VXISI2CWrite
 6435              	.LVL926:
3739:Src/main.c    **** 	VXISI2CWrite(0xCC,0x00);
 6436              		.loc 1 3739 0
 6437 0668 0021     		movs	r1, #0
 6438 066a CB20     		movs	r0, #203
 6439 066c FFF7FEFF 		bl	VXISI2CWrite
 6440              	.LVL927:
3740:Src/main.c    **** 	VXISI2CWrite(0xCD,0x00);
 6441              		.loc 1 3740 0
 6442 0670 0021     		movs	r1, #0
 6443 0672 CC20     		movs	r0, #204
 6444 0674 FFF7FEFF 		bl	VXISI2CWrite
 6445              	.LVL928:
3741:Src/main.c    **** 	VXISI2CWrite(0xCE,0x00);
 6446              		.loc 1 3741 0
 6447 0678 0021     		movs	r1, #0
 6448 067a CD20     		movs	r0, #205
 6449 067c FFF7FEFF 		bl	VXISI2CWrite
 6450              	.LVL929:
3742:Src/main.c    **** 	VXISI2CWrite(0xCF,0x00);
 6451              		.loc 1 3742 0
 6452 0680 0021     		movs	r1, #0
 6453 0682 CE20     		movs	r0, #206
 6454 0684 FFF7FEFF 		bl	VXISI2CWrite
 6455              	.LVL930:
3743:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);
 6456              		.loc 1 3743 0
 6457 0688 0021     		movs	r1, #0
 6458 068a CF20     		movs	r0, #207
 6459 068c FFF7FEFF 		bl	VXISI2CWrite
 6460              	.LVL931:
ARM GAS  /tmp/ccs2VtGF.s 			page 208


3744:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);
 6461              		.loc 1 3744 0
 6462 0690 FF21     		movs	r1, #255
 6463 0692 D020     		movs	r0, #208
 6464 0694 FFF7FEFF 		bl	VXISI2CWrite
 6465              	.LVL932:
3745:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);
 6466              		.loc 1 3745 0
 6467 0698 3F21     		movs	r1, #63
 6468 069a D120     		movs	r0, #209
 6469 069c FFF7FEFF 		bl	VXISI2CWrite
 6470              	.LVL933:
3746:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);
 6471              		.loc 1 3746 0
 6472 06a0 C221     		movs	r1, #194
 6473 06a2 D220     		movs	r0, #210
 6474 06a4 FFF7FEFF 		bl	VXISI2CWrite
 6475              	.LVL934:
3747:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);
 6476              		.loc 1 3747 0
 6477 06a8 3F21     		movs	r1, #63
 6478 06aa D320     		movs	r0, #211
 6479 06ac FFF7FEFF 		bl	VXISI2CWrite
 6480              	.LVL935:
3748:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);
 6481              		.loc 1 3748 0
 6482 06b0 0021     		movs	r1, #0
 6483 06b2 D420     		movs	r0, #212
 6484 06b4 FFF7FEFF 		bl	VXISI2CWrite
 6485              	.LVL936:
3749:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);
 6486              		.loc 1 3749 0
 6487 06b8 0021     		movs	r1, #0
 6488 06ba D520     		movs	r0, #213
 6489 06bc FFF7FEFF 		bl	VXISI2CWrite
 6490              	.LVL937:
3750:Src/main.c    **** 	VXISI2CWrite(0xD7,0x0F);
 6491              		.loc 1 3750 0
 6492 06c0 0021     		movs	r1, #0
 6493 06c2 D620     		movs	r0, #214
 6494 06c4 FFF7FEFF 		bl	VXISI2CWrite
 6495              	.LVL938:
3751:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);
 6496              		.loc 1 3751 0
 6497 06c8 0F21     		movs	r1, #15
 6498 06ca D720     		movs	r0, #215
 6499 06cc FFF7FEFF 		bl	VXISI2CWrite
 6500              	.LVL939:
3752:Src/main.c    **** 	VXISI2CWrite(0xD9,0x00);
 6501              		.loc 1 3752 0
 6502 06d0 0021     		movs	r1, #0
 6503 06d2 D820     		movs	r0, #216
 6504 06d4 FFF7FEFF 		bl	VXISI2CWrite
 6505              	.LVL940:
3753:Src/main.c    **** 	VXISI2CWrite(0xDA,0x00);
 6506              		.loc 1 3753 0
 6507 06d8 0021     		movs	r1, #0
ARM GAS  /tmp/ccs2VtGF.s 			page 209


 6508 06da D920     		movs	r0, #217
 6509 06dc FFF7FEFF 		bl	VXISI2CWrite
 6510              	.LVL941:
3754:Src/main.c    **** 	VXISI2CWrite(0xDB,0x00);
 6511              		.loc 1 3754 0
 6512 06e0 0021     		movs	r1, #0
 6513 06e2 DA20     		movs	r0, #218
 6514 06e4 FFF7FEFF 		bl	VXISI2CWrite
 6515              	.LVL942:
3755:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);
 6516              		.loc 1 3755 0
 6517 06e8 0021     		movs	r1, #0
 6518 06ea DB20     		movs	r0, #219
 6519 06ec FFF7FEFF 		bl	VXISI2CWrite
 6520              	.LVL943:
3756:Src/main.c    **** 	VXISI2CWrite(0xDD,0x01);
 6521              		.loc 1 3756 0
 6522 06f0 7721     		movs	r1, #119
 6523 06f2 DC20     		movs	r0, #220
 6524 06f4 FFF7FEFF 		bl	VXISI2CWrite
 6525              	.LVL944:
3757:Src/main.c    **** 	VXISI2CWrite(0xDE,0x5F);
 6526              		.loc 1 3757 0
 6527 06f8 0121     		movs	r1, #1
 6528 06fa DD20     		movs	r0, #221
 6529 06fc FFF7FEFF 		bl	VXISI2CWrite
 6530              	.LVL945:
3758:Src/main.c    **** 	VXISI2CWrite(0xDF,0x96);
 6531              		.loc 1 3758 0
 6532 0700 5F21     		movs	r1, #95
 6533 0702 DE20     		movs	r0, #222
 6534 0704 FFF7FEFF 		bl	VXISI2CWrite
 6535              	.LVL946:
3759:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);
 6536              		.loc 1 3759 0
 6537 0708 9621     		movs	r1, #150
 6538 070a DF20     		movs	r0, #223
 6539 070c FFF7FEFF 		bl	VXISI2CWrite
 6540              	.LVL947:
3760:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);
 6541              		.loc 1 3760 0
 6542 0710 0021     		movs	r1, #0
 6543 0712 E020     		movs	r0, #224
 6544 0714 FFF7FEFF 		bl	VXISI2CWrite
 6545              	.LVL948:
3761:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);
 6546              		.loc 1 3761 0
 6547 0718 0021     		movs	r1, #0
 6548 071a E120     		movs	r0, #225
 6549 071c FFF7FEFF 		bl	VXISI2CWrite
 6550              	.LVL949:
3762:Src/main.c    **** 	VXISI2CWrite(0xE3,0x47);
 6551              		.loc 1 3762 0
 6552 0720 0021     		movs	r1, #0
 6553 0722 E220     		movs	r0, #226
 6554 0724 FFF7FEFF 		bl	VXISI2CWrite
 6555              	.LVL950:
ARM GAS  /tmp/ccs2VtGF.s 			page 210


3763:Src/main.c    **** 	VXISI2CWrite(0xE4,0x3C);
 6556              		.loc 1 3763 0
 6557 0728 4721     		movs	r1, #71
 6558 072a E320     		movs	r0, #227
 6559 072c FFF7FEFF 		bl	VXISI2CWrite
 6560              	.LVL951:
3764:Src/main.c    **** 	VXISI2CWrite(0xE5,0x80);
 6561              		.loc 1 3764 0
 6562 0730 3C21     		movs	r1, #60
 6563 0732 E420     		movs	r0, #228
 6564 0734 FFF7FEFF 		bl	VXISI2CWrite
 6565              	.LVL952:
3765:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);
 6566              		.loc 1 3765 0
 6567 0738 8021     		movs	r1, #128
 6568 073a E520     		movs	r0, #229
 6569 073c FFF7FEFF 		bl	VXISI2CWrite
 6570              	.LVL953:
3766:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);
 6571              		.loc 1 3766 0
 6572 0740 0021     		movs	r1, #0
 6573 0742 E620     		movs	r0, #230
 6574 0744 FFF7FEFF 		bl	VXISI2CWrite
 6575              	.LVL954:
3767:Src/main.c    **** 	VXISI2CWrite(0xE8,0x00);
 6576              		.loc 1 3767 0
 6577 0748 0021     		movs	r1, #0
 6578 074a E720     		movs	r0, #231
 6579 074c FFF7FEFF 		bl	VXISI2CWrite
 6580              	.LVL955:
3768:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);
 6581              		.loc 1 3768 0
 6582 0750 0021     		movs	r1, #0
 6583 0752 E820     		movs	r0, #232
 6584 0754 FFF7FEFF 		bl	VXISI2CWrite
 6585              	.LVL956:
3769:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);
 6586              		.loc 1 3769 0
 6587 0758 0021     		movs	r1, #0
 6588 075a E920     		movs	r0, #233
 6589 075c FFF7FEFF 		bl	VXISI2CWrite
 6590              	.LVL957:
3770:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);
 6591              		.loc 1 3770 0
 6592 0760 0021     		movs	r1, #0
 6593 0762 EA20     		movs	r0, #234
 6594 0764 FFF7FEFF 		bl	VXISI2CWrite
 6595              	.LVL958:
3771:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);
 6596              		.loc 1 3771 0
 6597 0768 0021     		movs	r1, #0
 6598 076a EB20     		movs	r0, #235
 6599 076c FFF7FEFF 		bl	VXISI2CWrite
 6600              	.LVL959:
3772:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);
 6601              		.loc 1 3772 0
 6602 0770 8821     		movs	r1, #136
ARM GAS  /tmp/ccs2VtGF.s 			page 211


 6603 0772 EC20     		movs	r0, #236
 6604 0774 FFF7FEFF 		bl	VXISI2CWrite
 6605              	.LVL960:
3773:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);
 6606              		.loc 1 3773 0
 6607 0778 0021     		movs	r1, #0
 6608 077a ED20     		movs	r0, #237
 6609 077c FFF7FEFF 		bl	VXISI2CWrite
 6610              	.LVL961:
3774:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);
 6611              		.loc 1 3774 0
 6612 0780 0021     		movs	r1, #0
 6613 0782 EE20     		movs	r0, #238
 6614 0784 FFF7FEFF 		bl	VXISI2CWrite
 6615              	.LVL962:
3775:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);
 6616              		.loc 1 3775 0
 6617 0788 0021     		movs	r1, #0
 6618 078a EF20     		movs	r0, #239
 6619 078c FFF7FEFF 		bl	VXISI2CWrite
 6620              	.LVL963:
3776:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);
 6621              		.loc 1 3776 0
 6622 0790 3021     		movs	r1, #48
 6623 0792 F020     		movs	r0, #240
 6624 0794 FFF7FEFF 		bl	VXISI2CWrite
 6625              	.LVL964:
3777:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);
 6626              		.loc 1 3777 0
 6627 0798 4321     		movs	r1, #67
 6628 079a F120     		movs	r0, #241
 6629 079c FFF7FEFF 		bl	VXISI2CWrite
 6630              	.LVL965:
3778:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);
 6631              		.loc 1 3778 0
 6632 07a0 1F21     		movs	r1, #31
 6633 07a2 F220     		movs	r0, #242
 6634 07a4 FFF7FEFF 		bl	VXISI2CWrite
 6635              	.LVL966:
3779:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);
 6636              		.loc 1 3779 0
 6637 07a8 1F21     		movs	r1, #31
 6638 07aa F320     		movs	r0, #243
 6639 07ac FFF7FEFF 		bl	VXISI2CWrite
 6640              	.LVL967:
3780:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);
 6641              		.loc 1 3780 0
 6642 07b0 2221     		movs	r1, #34
 6643 07b2 F420     		movs	r0, #244
 6644 07b4 FFF7FEFF 		bl	VXISI2CWrite
 6645              	.LVL968:
3781:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);
 6646              		.loc 1 3781 0
 6647 07b8 7321     		movs	r1, #115
 6648 07ba F520     		movs	r0, #245
 6649 07bc FFF7FEFF 		bl	VXISI2CWrite
 6650              	.LVL969:
ARM GAS  /tmp/ccs2VtGF.s 			page 212


3782:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);
 6651              		.loc 1 3782 0
 6652 07c0 5321     		movs	r1, #83
 6653 07c2 F620     		movs	r0, #246
 6654 07c4 FFF7FEFF 		bl	VXISI2CWrite
 6655              	.LVL970:
3783:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);
 6656              		.loc 1 3783 0
 6657 07c8 8021     		movs	r1, #128
 6658 07ca F720     		movs	r0, #247
 6659 07cc FFF7FEFF 		bl	VXISI2CWrite
 6660              	.LVL971:
3784:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);
 6661              		.loc 1 3784 0
 6662 07d0 0121     		movs	r1, #1
 6663 07d2 F820     		movs	r0, #248
 6664 07d4 FFF7FEFF 		bl	VXISI2CWrite
 6665              	.LVL972:
3785:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);
 6666              		.loc 1 3785 0
 6667 07d8 0121     		movs	r1, #1
 6668 07da F920     		movs	r0, #249
 6669 07dc FFF7FEFF 		bl	VXISI2CWrite
 6670              	.LVL973:
3786:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);
 6671              		.loc 1 3786 0
 6672 07e0 0021     		movs	r1, #0
 6673 07e2 FA20     		movs	r0, #250
 6674 07e4 FFF7FEFF 		bl	VXISI2CWrite
 6675              	.LVL974:
3787:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);
 6676              		.loc 1 3787 0
 6677 07e8 0021     		movs	r1, #0
 6678 07ea FB20     		movs	r0, #251
 6679 07ec FFF7FEFF 		bl	VXISI2CWrite
 6680              	.LVL975:
3788:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);
 6681              		.loc 1 3788 0
 6682 07f0 0021     		movs	r1, #0
 6683 07f2 FC20     		movs	r0, #252
 6684 07f4 FFF7FEFF 		bl	VXISI2CWrite
 6685              	.LVL976:
3789:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);
 6686              		.loc 1 3789 0
 6687 07f8 7021     		movs	r1, #112
 6688 07fa FD20     		movs	r0, #253
 6689 07fc FFF7FEFF 		bl	VXISI2CWrite
 6690              	.LVL977:
3790:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);
 6691              		.loc 1 3790 0
 6692 0800 4021     		movs	r1, #64
 6693 0802 FE20     		movs	r0, #254
 6694 0804 FFF7FEFF 		bl	VXISI2CWrite
 6695              	.LVL978:
3791:Src/main.c    **** 
 6696              		.loc 1 3791 0
 6697 0808 0721     		movs	r1, #7
ARM GAS  /tmp/ccs2VtGF.s 			page 213


 6698 080a FF20     		movs	r0, #255
 6699 080c FFF7FEFF 		bl	VXISI2CWrite
 6700              	.LVL979:
3793:Src/main.c    **** /**
 6701              		.loc 1 3793 0
 6702 0810 08BD     		pop	{r3, pc}
 6703              		.cfi_endproc
 6704              	.LFE94:
 6706 0812 00BF     		.section	.text.SystemClock_Config,"ax",%progbits
 6707              		.align	1
 6708              		.global	SystemClock_Config
 6709              		.syntax unified
 6710              		.thumb
 6711              		.thumb_func
 6712              		.fpu softvfp
 6714              	SystemClock_Config:
 6715              	.LFB95:
3835:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 6716              		.loc 1 3835 0
 6717              		.cfi_startproc
 6718              		@ args = 0, pretend = 0, frame = 64
 6719              		@ frame_needed = 0, uses_anonymous_args = 0
 6720 0000 70B5     		push	{r4, r5, r6, lr}
 6721              	.LCFI43:
 6722              		.cfi_def_cfa_offset 16
 6723              		.cfi_offset 4, -16
 6724              		.cfi_offset 5, -12
 6725              		.cfi_offset 6, -8
 6726              		.cfi_offset 14, -4
 6727 0002 90B0     		sub	sp, sp, #64
 6728              	.LCFI44:
 6729              		.cfi_def_cfa_offset 80
3836:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 6730              		.loc 1 3836 0
 6731 0004 2022     		movs	r2, #32
 6732 0006 0021     		movs	r1, #0
 6733 0008 07A8     		add	r0, sp, #28
 6734 000a FFF7FEFF 		bl	memset
 6735              	.LVL980:
3837:Src/main.c    **** 
 6736              		.loc 1 3837 0
 6737 000e 0024     		movs	r4, #0
 6738 0010 0194     		str	r4, [sp, #4]
 6739 0012 0294     		str	r4, [sp, #8]
 6740 0014 0394     		str	r4, [sp, #12]
 6741 0016 0494     		str	r4, [sp, #16]
 6742 0018 0594     		str	r4, [sp, #20]
3841:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 6743              		.loc 1 3841 0
 6744 001a 0225     		movs	r5, #2
 6745 001c 0695     		str	r5, [sp, #24]
3842:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 6746              		.loc 1 3842 0
 6747 001e 0126     		movs	r6, #1
 6748 0020 0A96     		str	r6, [sp, #40]
3843:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 6749              		.loc 1 3843 0
ARM GAS  /tmp/ccs2VtGF.s 			page 214


 6750 0022 1023     		movs	r3, #16
 6751 0024 0B93     		str	r3, [sp, #44]
3844:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 6752              		.loc 1 3844 0
 6753 0026 0D95     		str	r5, [sp, #52]
3846:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 6754              		.loc 1 3846 0
 6755 0028 4FF4E013 		mov	r3, #1835008
 6756 002c 0F93     		str	r3, [sp, #60]
3847:Src/main.c    ****   {
 6757              		.loc 1 3847 0
 6758 002e 06A8     		add	r0, sp, #24
 6759 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 6760              	.LVL981:
3853:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 6761              		.loc 1 3853 0
 6762 0034 0F23     		movs	r3, #15
 6763 0036 0193     		str	r3, [sp, #4]
3855:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 6764              		.loc 1 3855 0
 6765 0038 0295     		str	r5, [sp, #8]
3856:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 6766              		.loc 1 3856 0
 6767 003a 0394     		str	r4, [sp, #12]
3857:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 6768              		.loc 1 3857 0
 6769 003c 0494     		str	r4, [sp, #16]
3858:Src/main.c    **** 
 6770              		.loc 1 3858 0
 6771 003e 0594     		str	r4, [sp, #20]
3860:Src/main.c    ****   {
 6772              		.loc 1 3860 0
 6773 0040 3146     		mov	r1, r6
 6774 0042 01A8     		add	r0, sp, #4
 6775 0044 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 6776              	.LVL982:
3864:Src/main.c    **** #endif
 6777              		.loc 1 3864 0
 6778 0048 10B0     		add	sp, sp, #64
 6779              	.LCFI45:
 6780              		.cfi_def_cfa_offset 16
 6781              		@ sp needed
 6782 004a 70BD     		pop	{r4, r5, r6, pc}
 6783              		.cfi_endproc
 6784              	.LFE95:
 6786              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 6787              		.align	1
 6788              		.global	HAL_TIM_PeriodElapsedCallback
 6789              		.syntax unified
 6790              		.thumb
 6791              		.thumb_func
 6792              		.fpu softvfp
 6794              	HAL_TIM_PeriodElapsedCallback:
 6795              	.LFB100:
4223:Src/main.c    **** 
4224:Src/main.c    **** /* USER CODE BEGIN 4 */
4225:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
ARM GAS  /tmp/ccs2VtGF.s 			page 215


4226:Src/main.c    **** {
 6796              		.loc 1 4226 0
 6797              		.cfi_startproc
 6798              		@ args = 0, pretend = 0, frame = 0
 6799              		@ frame_needed = 0, uses_anonymous_args = 0
 6800              		@ link register save eliminated.
 6801              	.LVL983:
4227:Src/main.c    **** //	BYTE TempKey=0;
4228:Src/main.c    **** 
4229:Src/main.c    ****     //10us
4230:Src/main.c    ****     if (htim->Instance == TIM3)
 6802              		.loc 1 4230 0
 6803 0000 0268     		ldr	r2, [r0]
 6804 0002 184B     		ldr	r3, .L221
 6805 0004 9A42     		cmp	r2, r3
 6806 0006 00D0     		beq	.L220
 6807              	.L217:
4231:Src/main.c    ****     {
4232:Src/main.c    **** 	
4233:Src/main.c    **** 	// Timer Counter 
4234:Src/main.c    **** 	tic02++;
4235:Src/main.c    **** 	tic03++;
4236:Src/main.c    **** 	tic04++;
4237:Src/main.c    **** //	tic05++;
4238:Src/main.c    **** 	
4239:Src/main.c    **** 	if(tic02>=100)   
4240:Src/main.c    **** 	{
4241:Src/main.c    **** 	g_usTimerCounter += 1;     ///per 10us  interrupt
4242:Src/main.c    **** 	tic02=0;
4243:Src/main.c    **** 	g_bNotifyTimer0Int=_TRUE;
4244:Src/main.c    **** 	}	
4245:Src/main.c    **** /*
4246:Src/main.c    **** 	if(tic05>=100)////1ms
4247:Src/main.c    **** 	{
4248:Src/main.c    **** 	ucTickCount++;	//for IT66021
4249:Src/main.c    **** 	tic05=0;
4250:Src/main.c    **** 	}
4251:Src/main.c    **** 	*/
4252:Src/main.c    ****         tim3count++ ;
4253:Src/main.c    ****         if (tim3count > 100000 )
4254:Src/main.c    ****         {
4255:Src/main.c    ****             tim3count = 0 ;
4256:Src/main.c    ****             //Test_tim3_printf_Flg  = 1;
4257:Src/main.c    ****             if (OSDStateFlg ==1 )
4258:Src/main.c    ****             {
4259:Src/main.c    ****                 //static tByte enOSD10secOff = 1;   //En16wNumberOSD=1
4260:Src/main.c    ****                 OSDSecCount++ ;
4261:Src/main.c    ****             }
4262:Src/main.c    ****         }
4263:Src/main.c    **** #if 0
4264:Src/main.c    **** 
4265:Src/main.c    **** 		//Kane @HS 2007 0814 Ver1.31>>>>
4266:Src/main.c    **** 	//	if(Time5ms)
4267:Src/main.c    **** 	//	Time5ms--;
4268:Src/main.c    **** 		//if(Time5ms==0)
4269:Src/main.c    **** 		{
4270:Src/main.c    **** 			//if(HAL_GPIO_ReadPin(UP_KEY_GPIO_Port,UP_KEY_Pin)==_FALSE)
ARM GAS  /tmp/ccs2VtGF.s 			page 216


4271:Src/main.c    **** 			//	TempKey|=0x01;
4272:Src/main.c    **** 			//if(HAL_GPIO_ReadPin(DOWN_KEY_GPIO_Port,DOWN_KEY_Pin)==_FALSE)
4273:Src/main.c    **** 			//	TempKey|=0x02;
4274:Src/main.c    **** 			//TempKey=(( (P2&0x60) >> 5) & 0x03);
4275:Src/main.c    **** //			TempKey=((~GPIOB->IDR)&(UP_KEY_Pin|DOWN_KEY_Pin))>>14;
4276:Src/main.c    **** 			TempKey=(((~GPIOB->IDR)&(UP_KEY_Pin|DOWN_KEY_Pin))>>14)&0x03;
4277:Src/main.c    **** 
4278:Src/main.c    **** 			if(updn_reg[3] != TempKey )  // (( (P2&0x60) >> 5) & 0x03))    //Abel for HS SW key ......951102
4279:Src/main.c    **** 			{																						   
4280:Src/main.c    **** 				updn_reg[0] = updn_reg[1];																
4281:Src/main.c    **** 				updn_reg[1] = updn_reg[2];																
4282:Src/main.c    **** 				updn_reg[2] = updn_reg[3];																
4283:Src/main.c    **** 				updn_reg[3] = TempKey;// ( (P2&0x60) >> 5) & 0x03; 
4284:Src/main.c    **** 				ChangeKey = 1;		
4285:Src/main.c    **** 				//else			//william-v1.42-961130
4286:Src/main.c    **** 				//ChangeKey=0;	//william-v1.42-961130
4287:Src/main.c    **** 			//Time5ms = (48-8);
4288:Src/main.c    **** 			//Time5ms = (48+100);
4289:Src/main.c    **** 			
4290:Src/main.c    **** 				
4291:Src/main.c    **** 			}
4292:Src/main.c    **** 		}
4293:Src/main.c    **** 		#endif
4294:Src/main.c    **** #if 0
4295:Src/main.c    ****         if (IR_IRQFlg == 1)
4296:Src/main.c    ****         {
4297:Src/main.c    ****             if (PreIR_IRQ_Index == IR_IRQ_Index )
4298:Src/main.c    ****             {
4299:Src/main.c    ****                 IR_PlusTimeVal++ ;
4300:Src/main.c    **** 
4301:Src/main.c    ****                 //9.2xms + 4.5xms = 13.8ms
4302:Src/main.c    ****                 if (IR_PlusTimeVal > 15000)  //10us
4303:Src/main.c    ****                 {
4304:Src/main.c    **** //                    IR_PlusTimeVal = 0  ;
4305:Src/main.c    **** //                    PreIR_IRQ_Index = 0 ;
4306:Src/main.c    **** //                    IR_IRQ_Index = 0 ;
4307:Src/main.c    **** //                    IR_IRQFlg = 0 ;
4308:Src/main.c    **** 
4309:Src/main.c    ****                     if (IR_ShiftCount >= 32 )
4310:Src/main.c    ****                     {
4311:Src/main.c    ****                         u16Vendor = (tWord)(IR_4BYTE & 0x0000FFFF) ;
4312:Src/main.c    ****                         if (u16Vendor == IR_Vendor_Code_ )
4313:Src/main.c    ****                         {
4314:Src/main.c    ****                             u8IRcode = (tByte)((IR_4BYTE & 0x00FF0000 ) >> 16)  ;
4315:Src/main.c    ****                             u8IRCheckcode  = 0xFF - (tByte)((IR_4BYTE & 0xFF000000 ) >> 24)  ;
4316:Src/main.c    ****                             IR_END_Flg = 1 ;
4317:Src/main.c    ****                         }
4318:Src/main.c    ****                     }
4319:Src/main.c    **** 
4320:Src/main.c    ****                     IR_ShiftCount = 0 ;
4321:Src/main.c    ****                     IR_PlusTimeVal = 0  ;
4322:Src/main.c    ****                     PreIR_IRQ_Index = 0 ;
4323:Src/main.c    ****                     IR_IRQ_Index = 0 ;
4324:Src/main.c    ****                     IR_IRQFlg = 0 ;
4325:Src/main.c    ****                     //memset(aIR_PlusTime , 0 , 40 )  ;
4326:Src/main.c    ****                     IR_4BYTE = 0 ;
4327:Src/main.c    ****                     IR_StartFlg = 0 ;
ARM GAS  /tmp/ccs2VtGF.s 			page 217


4328:Src/main.c    ****                 }
4329:Src/main.c    ****             }
4330:Src/main.c    ****             else
4331:Src/main.c    ****             {
4332:Src/main.c    ****                 if (PreIR_IRQ_Index <= 33)
4333:Src/main.c    ****                 {
4334:Src/main.c    ****                     //aIR_PlusTime[PreIR_IRQ_Index] = IR_PlusTimeVal ;
4335:Src/main.c    ****                     if (IR_StartFlg == 1 )
4336:Src/main.c    ****                     {
4337:Src/main.c    ****                         if (IR_PlusTimeVal >90 )
4338:Src/main.c    ****                         {
4339:Src/main.c    ****                             //IR_4BYTE = IR_4BYTE << 1 ;
4340:Src/main.c    ****                             IR_4BYTE = IR_4BYTE >> 1 ;
4341:Src/main.c    **** 
4342:Src/main.c    ****                             if (IR_PlusTimeVal > 160 )
4343:Src/main.c    ****                             {
4344:Src/main.c    ****                                 //IR_4BYTE = IR_4BYTE | 0x01 ;
4345:Src/main.c    ****                                 IR_4BYTE = IR_4BYTE | 0x80000000 ;
4346:Src/main.c    ****                             }
4347:Src/main.c    ****                             else
4348:Src/main.c    ****                             {
4349:Src/main.c    ****                                 //IR_4BYTE = IR_4BYTE | 0x01 ;
4350:Src/main.c    ****                             }
4351:Src/main.c    ****                             IR_ShiftCount++ ;
4352:Src/main.c    ****                         }
4353:Src/main.c    ****                     }
4354:Src/main.c    **** 
4355:Src/main.c    ****                     if((IR_PlusTimeVal >1250 )&&(IR_PlusTimeVal < 1450))
4356:Src/main.c    ****                     {
4357:Src/main.c    ****                         IR_StartFlg =1 ;
4358:Src/main.c    ****                     }
4359:Src/main.c    ****                 }
4360:Src/main.c    ****                 IR_PlusTimeVal = 0 ;
4361:Src/main.c    ****                 PreIR_IRQ_Index = IR_IRQ_Index ;
4362:Src/main.c    ****             }
4363:Src/main.c    ****         }
4364:Src/main.c    **** #endif
4365:Src/main.c    **** 		///////////////////////////////////////////
4366:Src/main.c    **** 	/*
4367:Src/main.c    **** 		TempKey=0;
4368:Src/main.c    **** 		if(HAL_GPIO_ReadPin(MENU_KEY_GPIO_Port,MENU_KEY_Pin)==_FALSE)
4369:Src/main.c    **** 			TempKey|=0x08;
4370:Src/main.c    **** 		if(HAL_GPIO_ReadPin(POWER_KEY_GPIO_Port,POWER_KEY_Pin)==_FALSE)
4371:Src/main.c    **** 			TempKey|=0x04;
4372:Src/main.c    **** 		if(HAL_GPIO_ReadPin(POWER_KEY_GPIO_Port,POWER_KEY_Pin)==_FALSE)
4373:Src/main.c    **** 			TempKey|=0x04;
4374:Src/main.c    **** 		if(HAL_GPIO_ReadPin(JUMP_KEY_GPIO_Port,JUMP_KEY_Pin)==_FALSE)
4375:Src/main.c    **** 			TempKey|=0x10;
4376:Src/main.c    **** 		if(HAL_GPIO_ReadPin(SOURCE_KEY_GPIO_Port,SOURCE_KEY_Pin)==_FALSE)
4377:Src/main.c    **** 			Te			mpKey|=0x80;
4378:Src/main.c    **** */
4379:Src/main.c    **** #if 0
4380:Src/main.c    **** 	if(tic03==1000)
4381:Src/main.c    **** 		{
4382:Src/main.c    **** 		tic03=0;
4383:Src/main.c    **** 		if(_ReadKey() ) {
4384:Src/main.c    **** 			
ARM GAS  /tmp/ccs2VtGF.s 			page 218


4385:Src/main.c    **** 			if( keytic==3 ) {
4386:Src/main.c    **** 				Key = _ReadKey();
4387:Src/main.c    **** 				RepeatKey = 0;
4388:Src/main.c    **** 				KeyReady = 1;
4389:Src/main.c    **** 			}
4390:Src/main.c    **** 			else if( keytic==100 ) {
4391:Src/main.c    **** 				Key = _ReadKey();
4392:Src/main.c    **** 				KeyReady = 1;
4393:Src/main.c    **** 				keytic = 80-70;
4394:Src/main.c    **** 
4395:Src/main.c    **** 			}
4396:Src/main.c    **** 			keytic++;
4397:Src/main.c    **** 		
4398:Src/main.c    **** 		}
4399:Src/main.c    **** 		else 
4400:Src/main.c    **** 		{
4401:Src/main.c    **** 			keytic = 0;
4402:Src/main.c    **** 			Key=0;
4403:Src/main.c    **** 		}
4404:Src/main.c    **** 		}	
4405:Src/main.c    **** 
4406:Src/main.c    **** 	if(tic04==1000)
4407:Src/main.c    **** 		{
4408:Src/main.c    **** 		tic04=0;
4409:Src/main.c    **** 				if(TP_PRES_DOWN ) {
4410:Src/main.c    **** 					
4411:Src/main.c    **** 					if( tptic==3) {
4412:Src/main.c    **** 						TouchP=TP_PRES_DOWN;
4413:Src/main.c    **** 					}
4414:Src/main.c    **** 					else if(tptic==150)
4415:Src/main.c    **** 						{
4416:Src/main.c    **** 						TouchP=TP_PRES_DOWN;						
4417:Src/main.c    **** 						
4418:Src/main.c    **** 						tptic=4;						
4419:Src/main.c    **** 						}
4420:Src/main.c    **** 				tptic++;
4421:Src/main.c    **** 				}
4422:Src/main.c    **** 				else 
4423:Src/main.c    **** 				{
4424:Src/main.c    **** 					tptic = 0;
4425:Src/main.c    **** 					TouchP=0;
4426:Src/main.c    **** 				}
4427:Src/main.c    **** 
4428:Src/main.c    **** 		}
4429:Src/main.c    **** 	#endif
4430:Src/main.c    ****     }
4431:Src/main.c    **** }
 6808              		.loc 1 4431 0
 6809 0008 7047     		bx	lr
 6810              	.L220:
4234:Src/main.c    **** 	tic03++;
 6811              		.loc 1 4234 0
 6812 000a 174A     		ldr	r2, .L221+4
 6813 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 6814 000e 0133     		adds	r3, r3, #1
 6815 0010 DBB2     		uxtb	r3, r3
 6816 0012 1370     		strb	r3, [r2]
ARM GAS  /tmp/ccs2VtGF.s 			page 219


4235:Src/main.c    **** 	tic04++;
 6817              		.loc 1 4235 0
 6818 0014 1549     		ldr	r1, .L221+8
 6819 0016 0A68     		ldr	r2, [r1]
 6820 0018 0132     		adds	r2, r2, #1
 6821 001a 0A60     		str	r2, [r1]
4236:Src/main.c    **** //	tic05++;
 6822              		.loc 1 4236 0
 6823 001c 1449     		ldr	r1, .L221+12
 6824 001e 0A68     		ldr	r2, [r1]
 6825 0020 0132     		adds	r2, r2, #1
 6826 0022 0A60     		str	r2, [r1]
4239:Src/main.c    **** 	{
 6827              		.loc 1 4239 0
 6828 0024 632B     		cmp	r3, #99
 6829 0026 09D9     		bls	.L219
4241:Src/main.c    **** 	tic02=0;
 6830              		.loc 1 4241 0
 6831 0028 124A     		ldr	r2, .L221+16
 6832 002a 1368     		ldr	r3, [r2]
 6833 002c 0133     		adds	r3, r3, #1
 6834 002e 1360     		str	r3, [r2]
4242:Src/main.c    **** 	g_bNotifyTimer0Int=_TRUE;
 6835              		.loc 1 4242 0
 6836 0030 0D4B     		ldr	r3, .L221+4
 6837 0032 0022     		movs	r2, #0
 6838 0034 1A70     		strb	r2, [r3]
4243:Src/main.c    **** 	}	
 6839              		.loc 1 4243 0
 6840 0036 104B     		ldr	r3, .L221+20
 6841 0038 0122     		movs	r2, #1
 6842 003a 1A60     		str	r2, [r3]
 6843              	.L219:
4252:Src/main.c    ****         if (tim3count > 100000 )
 6844              		.loc 1 4252 0
 6845 003c 0F4B     		ldr	r3, .L221+24
 6846 003e 1A68     		ldr	r2, [r3]
 6847 0040 0132     		adds	r2, r2, #1
 6848 0042 1A60     		str	r2, [r3]
4253:Src/main.c    ****         {
 6849              		.loc 1 4253 0
 6850 0044 1A68     		ldr	r2, [r3]
 6851 0046 0E4B     		ldr	r3, .L221+28
 6852 0048 9A42     		cmp	r2, r3
 6853 004a DDD9     		bls	.L217
4255:Src/main.c    ****             //Test_tim3_printf_Flg  = 1;
 6854              		.loc 1 4255 0
 6855 004c 0B4B     		ldr	r3, .L221+24
 6856 004e 0022     		movs	r2, #0
 6857 0050 1A60     		str	r2, [r3]
4257:Src/main.c    ****             {
 6858              		.loc 1 4257 0
 6859 0052 0C4B     		ldr	r3, .L221+32
 6860 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6861 0056 012B     		cmp	r3, #1
 6862 0058 D6D1     		bne	.L217
4260:Src/main.c    ****             }
ARM GAS  /tmp/ccs2VtGF.s 			page 220


 6863              		.loc 1 4260 0
 6864 005a 0B4A     		ldr	r2, .L221+36
 6865 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 6866 005e 0133     		adds	r3, r3, #1
 6867 0060 1370     		strb	r3, [r2]
 6868              		.loc 1 4431 0
 6869 0062 D1E7     		b	.L217
 6870              	.L222:
 6871              		.align	2
 6872              	.L221:
 6873 0064 00040040 		.word	1073742848
 6874 0068 00000000 		.word	tic02
 6875 006c 00000000 		.word	tic03
 6876 0070 00000000 		.word	tic04
 6877 0074 00000000 		.word	g_usTimerCounter
 6878 0078 00000000 		.word	g_bNotifyTimer0Int
 6879 007c 00000000 		.word	.LANCHOR22
 6880 0080 A0860100 		.word	100000
 6881 0084 00000000 		.word	.LANCHOR14
 6882 0088 00000000 		.word	.LANCHOR15
 6883              		.cfi_endproc
 6884              	.LFE100:
 6886              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 6887              		.align	1
 6888              		.global	HAL_UART_RxCpltCallback
 6889              		.syntax unified
 6890              		.thumb
 6891              		.thumb_func
 6892              		.fpu softvfp
 6894              	HAL_UART_RxCpltCallback:
 6895              	.LFB101:
4432:Src/main.c    **** 
4433:Src/main.c    **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
4434:Src/main.c    **** {
 6896              		.loc 1 4434 0
 6897              		.cfi_startproc
 6898              		@ args = 0, pretend = 0, frame = 0
 6899              		@ frame_needed = 0, uses_anonymous_args = 0
 6900              	.LVL984:
 6901 0000 10B5     		push	{r4, lr}
 6902              	.LCFI46:
 6903              		.cfi_def_cfa_offset 8
 6904              		.cfi_offset 4, -8
 6905              		.cfi_offset 14, -4
 6906 0002 0446     		mov	r4, r0
4435:Src/main.c    ****     if (huart->Instance == USART1)	//current UART
 6907              		.loc 1 4435 0
 6908 0004 0268     		ldr	r2, [r0]
 6909 0006 184B     		ldr	r3, .L231
 6910 0008 9A42     		cmp	r2, r3
 6911 000a 04D0     		beq	.L229
 6912              	.LVL985:
 6913              	.L224:
4436:Src/main.c    ****     {
4437:Src/main.c    **** 
4438:Src/main.c    **** /*
4439:Src/main.c    **** 		if (Rx_indx==0)
ARM GAS  /tmp/ccs2VtGF.s 			page 221


4440:Src/main.c    ****         {
4441:Src/main.c    ****             memset(Rx_Buffer , 0  , RXBUFMAX ) ;
4442:Src/main.c    ****         }
4443:Src/main.c    **** 
4444:Src/main.c    ****         if (Rx_data[0] >= 0x30)
4445:Src/main.c    ****         {
4446:Src/main.c    ****             Rx_Buffer[Rx_indx]=Rx_data[0];	//add data to Rx_Buffer
4447:Src/main.c    ****             Rx_indx++ ;
4448:Src/main.c    ****             if (Rx_indx >= RXBUFMAX )
4449:Src/main.c    ****                 Rx_indx = 0 ;
4450:Src/main.c    ****         }
4451:Src/main.c    ****         else if ((Rx_data[0] == 0x0d) || (Rx_data[0] == 0xa))//if received data = 13
4452:Src/main.c    ****         {
4453:Src/main.c    ****             RxBufIndex = Rx_indx ;
4454:Src/main.c    ****             memcpy(gRxbuf ,Rx_Buffer, Rx_indx ) ;
4455:Src/main.c    ****             Rx_indx=0;
4456:Src/main.c    ****             Transfer_cplt=1;//transfer complete, data is ready to read
4457:Src/main.c    ****         }
4458:Src/main.c    **** */
4459:Src/main.c    **** #if 1
4460:Src/main.c    ****        RS_buf [RS_in++] = Rx_data[0];//USART_ReceiveData(USART1);	
4461:Src/main.c    ****     if( RS_in >= BUF_MAX)  RS_in = 0;
4462:Src/main.c    **** 		
4463:Src/main.c    **** 		//RS_tx(Rx_data[0]);
4464:Src/main.c    **** 
4465:Src/main.c    **** 
4466:Src/main.c    **** //HAL_UART_Receive_IT(&huart1,(uint8_t*)Rx_data, 1);	//activate UART receive interrupt every time
4467:Src/main.c    **** 	HAL_UART_Receive_IT(&huart1,(uint8_t*)Rx_data, 1);	 //activate UART receive interrupt every time
4468:Src/main.c    **** 	#endif
4469:Src/main.c    ****     }
4470:Src/main.c    **** #if 1
4471:Src/main.c    **** if (huart->Instance == USART2)	//current UART2
 6914              		.loc 1 4471 0
 6915 000c 2268     		ldr	r2, [r4]
 6916 000e 174B     		ldr	r3, .L231+4
 6917 0010 9A42     		cmp	r2, r3
 6918 0012 14D0     		beq	.L230
 6919              	.L223:
4472:Src/main.c    ****     {
4473:Src/main.c    **** 
4474:Src/main.c    ****        RS2_buf [RS2_in++] = Rx2_data[0];//USART_ReceiveData(USART1);	
4475:Src/main.c    ****     if( RS2_in >= TOA_BUF_MAX)  RS2_in = 0;
4476:Src/main.c    **** 	HAL_UART_Receive_IT(&huart2,(uint8_t*)Rx2_data, 1);	 //activate UART receive interrupt every time
4477:Src/main.c    ****     }	
4478:Src/main.c    **** #endif
4479:Src/main.c    **** }
 6920              		.loc 1 4479 0
 6921 0014 10BD     		pop	{r4, pc}
 6922              	.LVL986:
 6923              	.L229:
4460:Src/main.c    ****     if( RS_in >= BUF_MAX)  RS_in = 0;
 6924              		.loc 1 4460 0
 6925 0016 1649     		ldr	r1, .L231+8
 6926 0018 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 6927 001a 531C     		adds	r3, r2, #1
 6928 001c DBB2     		uxtb	r3, r3
 6929 001e 0B70     		strb	r3, [r1]
ARM GAS  /tmp/ccs2VtGF.s 			page 222


 6930 0020 1449     		ldr	r1, .L231+12
 6931 0022 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 6932              	.LVL987:
 6933 0024 1449     		ldr	r1, .L231+16
 6934 0026 8854     		strb	r0, [r1, r2]
4461:Src/main.c    **** 		
 6935              		.loc 1 4461 0
 6936 0028 1D2B     		cmp	r3, #29
 6937 002a 02D9     		bls	.L225
4461:Src/main.c    **** 		
 6938              		.loc 1 4461 0 is_stmt 0 discriminator 1
 6939 002c 104B     		ldr	r3, .L231+8
 6940 002e 0022     		movs	r2, #0
 6941 0030 1A70     		strb	r2, [r3]
 6942              	.L225:
4467:Src/main.c    **** 	#endif
 6943              		.loc 1 4467 0 is_stmt 1
 6944 0032 0122     		movs	r2, #1
 6945 0034 0F49     		ldr	r1, .L231+12
 6946 0036 1148     		ldr	r0, .L231+20
 6947 0038 FFF7FEFF 		bl	HAL_UART_Receive_IT
 6948              	.LVL988:
 6949 003c E6E7     		b	.L224
 6950              	.L230:
4474:Src/main.c    ****     if( RS2_in >= TOA_BUF_MAX)  RS2_in = 0;
 6951              		.loc 1 4474 0
 6952 003e 1049     		ldr	r1, .L231+24
 6953 0040 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 6954 0042 531C     		adds	r3, r2, #1
 6955 0044 DBB2     		uxtb	r3, r3
 6956 0046 0B70     		strb	r3, [r1]
 6957 0048 0E49     		ldr	r1, .L231+28
 6958 004a 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 6959 004c 0E49     		ldr	r1, .L231+32
 6960 004e 8854     		strb	r0, [r1, r2]
4475:Src/main.c    **** 	HAL_UART_Receive_IT(&huart2,(uint8_t*)Rx2_data, 1);	 //activate UART receive interrupt every time
 6961              		.loc 1 4475 0
 6962 0050 C72B     		cmp	r3, #199
 6963 0052 02D9     		bls	.L227
4475:Src/main.c    **** 	HAL_UART_Receive_IT(&huart2,(uint8_t*)Rx2_data, 1);	 //activate UART receive interrupt every time
 6964              		.loc 1 4475 0 is_stmt 0 discriminator 1
 6965 0054 0A4B     		ldr	r3, .L231+24
 6966 0056 0022     		movs	r2, #0
 6967 0058 1A70     		strb	r2, [r3]
 6968              	.L227:
4476:Src/main.c    ****     }	
 6969              		.loc 1 4476 0 is_stmt 1
 6970 005a 0122     		movs	r2, #1
 6971 005c 0949     		ldr	r1, .L231+28
 6972 005e 0B48     		ldr	r0, .L231+36
 6973 0060 FFF7FEFF 		bl	HAL_UART_Receive_IT
 6974              	.LVL989:
 6975              		.loc 1 4479 0
 6976 0064 D6E7     		b	.L223
 6977              	.L232:
 6978 0066 00BF     		.align	2
 6979              	.L231:
ARM GAS  /tmp/ccs2VtGF.s 			page 223


 6980 0068 00380140 		.word	1073821696
 6981 006c 00440040 		.word	1073759232
 6982 0070 00000000 		.word	RS_in
 6983 0074 00000000 		.word	.LANCHOR23
 6984 0078 00000000 		.word	RS_buf
 6985 007c 00000000 		.word	huart1
 6986 0080 00000000 		.word	RS2_in
 6987 0084 00000000 		.word	.LANCHOR24
 6988 0088 00000000 		.word	RS2_buf
 6989 008c 00000000 		.word	huart2
 6990              		.cfi_endproc
 6991              	.LFE101:
 6993              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 6994              		.align	1
 6995              		.global	HAL_GPIO_EXTI_Callback
 6996              		.syntax unified
 6997              		.thumb
 6998              		.thumb_func
 6999              		.fpu softvfp
 7001              	HAL_GPIO_EXTI_Callback:
 7002              	.LFB102:
4480:Src/main.c    **** 
4481:Src/main.c    **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
4482:Src/main.c    **** {
 7003              		.loc 1 4482 0
 7004              		.cfi_startproc
 7005              		@ args = 0, pretend = 0, frame = 0
 7006              		@ frame_needed = 0, uses_anonymous_args = 0
 7007              		@ link register save eliminated.
 7008              	.LVL990:
4483:Src/main.c    **** /*
4484:Src/main.c    ****     if(GPIO_Pin == IR_IN_Pin  )
4485:Src/main.c    ****     {
4486:Src/main.c    ****         IR_IRQFlg =1 ;
4487:Src/main.c    **** 
4488:Src/main.c    ****         IR_IRQ_Index++ ;
4489:Src/main.c    ****     }
4490:Src/main.c    **** 	*/
4491:Src/main.c    **** }
 7009              		.loc 1 4491 0
 7010 0000 7047     		bx	lr
 7011              		.cfi_endproc
 7012              	.LFE102:
 7014              		.section	.text.HS_Select_Win,"ax",%progbits
 7015              		.align	1
 7016              		.global	HS_Select_Win
 7017              		.syntax unified
 7018              		.thumb
 7019              		.thumb_func
 7020              		.fpu softvfp
 7022              	HS_Select_Win:
 7023              	.LFB103:
4492:Src/main.c    **** 
4493:Src/main.c    **** void HS_Select_Win(unsigned char WinNum)	//20201214-02
4494:Src/main.c    **** {
 7024              		.loc 1 4494 0
 7025              		.cfi_startproc
ARM GAS  /tmp/ccs2VtGF.s 			page 224


 7026              		@ args = 0, pretend = 0, frame = 0
 7027              		@ frame_needed = 0, uses_anonymous_args = 0
 7028              	.LVL991:
 7029 0000 38B5     		push	{r3, r4, r5, lr}
 7030              	.LCFI47:
 7031              		.cfi_def_cfa_offset 16
 7032              		.cfi_offset 3, -16
 7033              		.cfi_offset 4, -12
 7034              		.cfi_offset 5, -8
 7035              		.cfi_offset 14, -4
4495:Src/main.c    **** 
4496:Src/main.c    **** 	
4497:Src/main.c    **** 	switch (WinNum)
 7036              		.loc 1 4497 0
 7037 0002 0128     		cmp	r0, #1
 7038 0004 34D0     		beq	.L236
4498:Src/main.c    **** 	{
4499:Src/main.c    **** 		default:
4500:Src/main.c    **** 		case 0:
4501:Src/main.c    **** 			VXISI2CWrite( 0x32, 0x00 );
 7039              		.loc 1 4501 0
 7040 0006 0021     		movs	r1, #0
 7041 0008 3220     		movs	r0, #50
 7042              	.LVL992:
 7043 000a FFF7FEFF 		bl	VXISI2CWrite
 7044              	.LVL993:
4502:Src/main.c    **** 			VXISI2CWrite( 0x19, 0x00 );
 7045              		.loc 1 4502 0
 7046 000e 0021     		movs	r1, #0
 7047 0010 1920     		movs	r0, #25
 7048 0012 FFF7FEFF 		bl	VXISI2CWrite
 7049              	.LVL994:
4503:Src/main.c    **** 			SelectInputMode=0;
 7050              		.loc 1 4503 0
 7051 0016 0024     		movs	r4, #0
 7052 0018 404B     		ldr	r3, .L257
 7053 001a 1C70     		strb	r4, [r3]
4504:Src/main.c    **** 			printf("Selected window 0\r\n");
 7054              		.loc 1 4504 0
 7055 001c 4048     		ldr	r0, .L257+4
 7056 001e FFF7FEFF 		bl	puts
 7057              	.LVL995:
4505:Src/main.c    **** 			pVS4210_MutiWindows1.OutputMode =VS4210_1080P_MODE0_w0;						
 7058              		.loc 1 4505 0
 7059 0022 4048     		ldr	r0, .L257+8
 7060 0024 0470     		strb	r4, [r0]
4506:Src/main.c    **** 			pVS4210_MutiWindows1.WindowMap.WMap0 = 1 ;			
 7061              		.loc 1 4506 0
 7062 0026 0123     		movs	r3, #1
 7063 0028 4370     		strb	r3, [r0, #1]
4507:Src/main.c    **** 			VS4210_SetMutiWindows(&pVS4210_MutiWindows1) ;	
 7064              		.loc 1 4507 0
 7065 002a FFF7FEFF 		bl	VS4210_SetMutiWindows
 7066              	.LVL996:
4508:Src/main.c    **** 			//#if (_External_Sync==ON)
4509:Src/main.c    **** 			//VXISI2CWrite( 0x32, 0x00 );
4510:Src/main.c    **** 			  VXISI2CWrite( 0x19, 0x00 );
ARM GAS  /tmp/ccs2VtGF.s 			page 225


 7067              		.loc 1 4510 0
 7068 002e 2146     		mov	r1, r4
 7069 0030 1920     		movs	r0, #25
 7070 0032 FFF7FEFF 		bl	VXISI2CWrite
 7071              	.LVL997:
4511:Src/main.c    **** 			//#endif
4512:Src/main.c    **** 			//msleep(100) ;
4513:Src/main.c    **** 		//	VXISI2CWrite( 0x32, 0x80 );
4514:Src/main.c    **** 			if(CHECK_HDMI720P50())
 7072              		.loc 1 4514 0
 7073 0036 FFF7FEFF 		bl	CHECK_HDMI720P50
 7074              	.LVL998:
 7075 003a 40B9     		cbnz	r0, .L248
4515:Src/main.c    **** 			{
4516:Src/main.c    **** 				dbg_Printf("ch1, HDMI=720P50  no support\r\n") ;
4517:Src/main.c    **** 				Set_Video_Loss_OSD(0,ON);
4518:Src/main.c    **** 			}
4519:Src/main.c    **** 			else
4520:Src/main.c    **** 			{
4521:Src/main.c    **** 				if(bSignal[0]==1)
 7076              		.loc 1 4521 0
 7077 003c 3A4B     		ldr	r3, .L257+12
 7078 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7079 0040 012B     		cmp	r3, #1
 7080 0042 10D0     		beq	.L249
4522:Src/main.c    **** 				{
4523:Src/main.c    **** 				Set_Video_Loss_OSD(0,OFF);
4524:Src/main.c    **** 				}
4525:Src/main.c    **** 				else
4526:Src/main.c    **** 				{
4527:Src/main.c    **** 				Set_Video_Loss_OSD(0,ON);
 7081              		.loc 1 4527 0
 7082 0044 0121     		movs	r1, #1
 7083 0046 0020     		movs	r0, #0
 7084 0048 FFF7FEFF 		bl	Set_Video_Loss_OSD
 7085              	.LVL999:
 7086 004c 2FE0     		b	.L238
 7087              	.L248:
4516:Src/main.c    **** 				Set_Video_Loss_OSD(0,ON);
 7088              		.loc 1 4516 0
 7089 004e 41F2A413 		movw	r3, #4516
 7090 0052 364A     		ldr	r2, .L257+16
 7091 0054 3649     		ldr	r1, .L257+20
 7092 0056 3748     		ldr	r0, .L257+24
 7093 0058 FFF7FEFF 		bl	printf
 7094              	.LVL1000:
4517:Src/main.c    **** 			}
 7095              		.loc 1 4517 0
 7096 005c 0121     		movs	r1, #1
 7097 005e 2046     		mov	r0, r4
 7098 0060 FFF7FEFF 		bl	Set_Video_Loss_OSD
 7099              	.LVL1001:
 7100 0064 23E0     		b	.L238
 7101              	.L249:
4523:Src/main.c    **** 				}
 7102              		.loc 1 4523 0
 7103 0066 0021     		movs	r1, #0
ARM GAS  /tmp/ccs2VtGF.s 			page 226


 7104 0068 0846     		mov	r0, r1
 7105 006a FFF7FEFF 		bl	Set_Video_Loss_OSD
 7106              	.LVL1002:
 7107 006e 1EE0     		b	.L238
 7108              	.LVL1003:
 7109              	.L236:
4528:Src/main.c    **** 				}
4529:Src/main.c    **** 			}
4530:Src/main.c    **** 			#if (_External_Sync==OFF)
4531:Src/main.c    **** 				//SET_HDMI_SYNC_PARA();			
4532:Src/main.c    **** 			#endif
4533:Src/main.c    **** 			break;
4534:Src/main.c    **** 		
4535:Src/main.c    **** 		case 1:
4536:Src/main.c    **** 			VXISI2CWrite( 0x32, 0x00 );
 7110              		.loc 1 4536 0
 7111 0070 0021     		movs	r1, #0
 7112 0072 3220     		movs	r0, #50
 7113              	.LVL1004:
 7114 0074 FFF7FEFF 		bl	VXISI2CWrite
 7115              	.LVL1005:
4537:Src/main.c    **** 			SelectInputMode=1;
 7116              		.loc 1 4537 0
 7117 0078 284C     		ldr	r4, .L257
 7118 007a 0125     		movs	r5, #1
 7119 007c 2570     		strb	r5, [r4]
4538:Src/main.c    **** 			printf("Selected window 1\r\n");
 7120              		.loc 1 4538 0
 7121 007e 2E48     		ldr	r0, .L257+28
 7122 0080 FFF7FEFF 		bl	puts
 7123              	.LVL1006:
4539:Src/main.c    **** 			pVS4210_MutiWindows1.OutputMode =VS4210_1080P_MODE0_w1;
 7124              		.loc 1 4539 0
 7125 0084 2748     		ldr	r0, .L257+8
 7126 0086 0570     		strb	r5, [r0]
4540:Src/main.c    **** 			pVS4210_MutiWindows1.WindowMap.WMap0 = 2 ;
 7127              		.loc 1 4540 0
 7128 0088 0223     		movs	r3, #2
 7129 008a 4370     		strb	r3, [r0, #1]
4541:Src/main.c    **** 			VS4210_SetMutiWindows(&pVS4210_MutiWindows1) ;		
 7130              		.loc 1 4541 0
 7131 008c FFF7FEFF 		bl	VS4210_SetMutiWindows
 7132              	.LVL1007:
4542:Src/main.c    **** 			VXISI2CWrite( 0x19, 0x04 );
 7133              		.loc 1 4542 0
 7134 0090 0421     		movs	r1, #4
 7135 0092 1920     		movs	r0, #25
 7136 0094 FFF7FEFF 		bl	VXISI2CWrite
 7137              	.LVL1008:
4543:Src/main.c    **** 
4544:Src/main.c    **** 		if(SelectInputMode==1)
 7138              		.loc 1 4544 0
 7139 0098 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 7140 009a AB42     		cmp	r3, r5
 7141 009c 0ED0     		beq	.L250
 7142              	.L240:
4545:Src/main.c    **** 		{
ARM GAS  /tmp/ccs2VtGF.s 			page 227


4546:Src/main.c    **** 			if(  mode[0]==7 )
4547:Src/main.c    **** 				{
4548:Src/main.c    **** 			
4549:Src/main.c    **** 				TP_bt1120_1080P_1080P_mode0_w0();
4550:Src/main.c    **** 					printf("(=1)");
4551:Src/main.c    **** 				//VXISI2CWrite(0x10,0x01);
4552:Src/main.c    **** 				//VXISI2CWrite(0x9c,0x0A);
4553:Src/main.c    **** 				Set_Video_Loss_OSD(1,ON);
4554:Src/main.c    **** 
4555:Src/main.c    **** 			}
4556:Src/main.c    **** 			else
4557:Src/main.c    **** 				{
4558:Src/main.c    **** 				
4559:Src/main.c    **** 				printf("(=2)");
4560:Src/main.c    **** 								if(TP_InputMode==5)
4561:Src/main.c    **** 									{
4562:Src/main.c    **** 									TP_bt1120_720P_1080P_mode0_w0();
4563:Src/main.c    **** 									}
4564:Src/main.c    **** 								else if(TP_InputMode==6)
4565:Src/main.c    **** 									{
4566:Src/main.c    **** 									TP_bt1120_1080P_1080P_mode0_w0();
4567:Src/main.c    **** 									}
4568:Src/main.c    **** 								else if(TP_InputMode==0)
4569:Src/main.c    **** 									{
4570:Src/main.c    **** 									TP_bt1120_NTSC_1080P_mode0_w0();
4571:Src/main.c    **** 									}
4572:Src/main.c    **** 								else if(TP_InputMode==1)
4573:Src/main.c    **** 									{
4574:Src/main.c    **** 									TP_bt1120_PAL_1080P_mode0_w0();
4575:Src/main.c    **** 									}
4576:Src/main.c    **** 								else
4577:Src/main.c    **** 									VXISI2CWrite(0x10,0x01);
4578:Src/main.c    **** 
4579:Src/main.c    **** 										
4580:Src/main.c    **** 				}
4581:Src/main.c    **** 
4582:Src/main.c    **** 			#if (_External_Sync==OFF)
4583:Src/main.c    **** 			//SET_AHD_SYNC_PARA();
4584:Src/main.c    **** 			#endif
4585:Src/main.c    **** 		}	
4586:Src/main.c    **** 		// msleep(100) ;
4587:Src/main.c    **** 
4588:Src/main.c    **** 
4589:Src/main.c    **** 
4590:Src/main.c    **** 		
4591:Src/main.c    **** 			if(bSignal[1]==1)
 7143              		.loc 1 4591 0
 7144 009e 224B     		ldr	r3, .L257+12
 7145 00a0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7146 00a2 012B     		cmp	r3, #1
 7147 00a4 35D0     		beq	.L251
4592:Src/main.c    **** 				Set_Video_Loss_OSD(1,OFF);
4593:Src/main.c    **** 			else
4594:Src/main.c    **** 				Set_Video_Loss_OSD(1,ON);
 7148              		.loc 1 4594 0
 7149 00a6 0121     		movs	r1, #1
 7150 00a8 0846     		mov	r0, r1
ARM GAS  /tmp/ccs2VtGF.s 			page 228


 7151 00aa FFF7FEFF 		bl	Set_Video_Loss_OSD
 7152              	.LVL1009:
 7153              	.L238:
4595:Src/main.c    **** 			
4596:Src/main.c    **** 			break;
4597:Src/main.c    **** 		}
4598:Src/main.c    **** 	
4599:Src/main.c    **** 	
4600:Src/main.c    **** 
4601:Src/main.c    ****   		OSDSecCount = 0 ;
 7154              		.loc 1 4601 0
 7155 00ae 234B     		ldr	r3, .L257+32
 7156 00b0 0022     		movs	r2, #0
 7157 00b2 1A70     		strb	r2, [r3]
4602:Src/main.c    **** 		   OSDStateFlg = 1 ;		
 7158              		.loc 1 4602 0
 7159 00b4 224B     		ldr	r3, .L257+36
 7160 00b6 0122     		movs	r2, #1
 7161 00b8 1A70     		strb	r2, [r3]
4603:Src/main.c    **** }
 7162              		.loc 1 4603 0
 7163 00ba 38BD     		pop	{r3, r4, r5, pc}
 7164              	.L250:
4546:Src/main.c    **** 				{
 7165              		.loc 1 4546 0
 7166 00bc 214B     		ldr	r3, .L257+40
 7167 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7168 00c0 072B     		cmp	r3, #7
 7169 00c2 10D0     		beq	.L252
4559:Src/main.c    **** 								if(TP_InputMode==5)
 7170              		.loc 1 4559 0
 7171 00c4 2048     		ldr	r0, .L257+44
 7172 00c6 FFF7FEFF 		bl	printf
 7173              	.LVL1010:
4560:Src/main.c    **** 									{
 7174              		.loc 1 4560 0
 7175 00ca 204B     		ldr	r3, .L257+48
 7176 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7177 00ce 052B     		cmp	r3, #5
 7178 00d0 13D0     		beq	.L253
4564:Src/main.c    **** 									{
 7179              		.loc 1 4564 0
 7180 00d2 062B     		cmp	r3, #6
 7181 00d4 14D0     		beq	.L254
4568:Src/main.c    **** 									{
 7182              		.loc 1 4568 0
 7183 00d6 B3B1     		cbz	r3, .L255
4572:Src/main.c    **** 									{
 7184              		.loc 1 4572 0
 7185 00d8 012B     		cmp	r3, #1
 7186 00da 17D0     		beq	.L256
4577:Src/main.c    **** 
 7187              		.loc 1 4577 0
 7188 00dc 0121     		movs	r1, #1
 7189 00de 1020     		movs	r0, #16
 7190 00e0 FFF7FEFF 		bl	VXISI2CWrite
 7191              	.LVL1011:
ARM GAS  /tmp/ccs2VtGF.s 			page 229


 7192 00e4 DBE7     		b	.L240
 7193              	.L252:
4549:Src/main.c    **** 					printf("(=1)");
 7194              		.loc 1 4549 0
 7195 00e6 FFF7FEFF 		bl	TP_bt1120_1080P_1080P_mode0_w0
 7196              	.LVL1012:
4550:Src/main.c    **** 				//VXISI2CWrite(0x10,0x01);
 7197              		.loc 1 4550 0
 7198 00ea 1948     		ldr	r0, .L257+52
 7199 00ec FFF7FEFF 		bl	printf
 7200              	.LVL1013:
4553:Src/main.c    **** 
 7201              		.loc 1 4553 0
 7202 00f0 2946     		mov	r1, r5
 7203 00f2 2846     		mov	r0, r5
 7204 00f4 FFF7FEFF 		bl	Set_Video_Loss_OSD
 7205              	.LVL1014:
 7206 00f8 D1E7     		b	.L240
 7207              	.L253:
4562:Src/main.c    **** 									}
 7208              		.loc 1 4562 0
 7209 00fa FFF7FEFF 		bl	TP_bt1120_720P_1080P_mode0_w0
 7210              	.LVL1015:
 7211 00fe CEE7     		b	.L240
 7212              	.L254:
4566:Src/main.c    **** 									}
 7213              		.loc 1 4566 0
 7214 0100 FFF7FEFF 		bl	TP_bt1120_1080P_1080P_mode0_w0
 7215              	.LVL1016:
 7216 0104 CBE7     		b	.L240
 7217              	.L255:
4570:Src/main.c    **** 									}
 7218              		.loc 1 4570 0
 7219 0106 FFF7FEFF 		bl	TP_bt1120_NTSC_1080P_mode0_w0
 7220              	.LVL1017:
 7221 010a C8E7     		b	.L240
 7222              	.L256:
4574:Src/main.c    **** 									}
 7223              		.loc 1 4574 0
 7224 010c FFF7FEFF 		bl	TP_bt1120_PAL_1080P_mode0_w0
 7225              	.LVL1018:
 7226 0110 C5E7     		b	.L240
 7227              	.L251:
4592:Src/main.c    **** 			else
 7228              		.loc 1 4592 0
 7229 0112 0021     		movs	r1, #0
 7230 0114 0120     		movs	r0, #1
 7231 0116 FFF7FEFF 		bl	Set_Video_Loss_OSD
 7232              	.LVL1019:
 7233 011a C8E7     		b	.L238
 7234              	.L258:
 7235              		.align	2
 7236              	.L257:
 7237 011c 00000000 		.word	.LANCHOR17
 7238 0120 00000000 		.word	.LC38
 7239 0124 00000000 		.word	pVS4210_MutiWindows1
 7240 0128 00000000 		.word	.LANCHOR9
ARM GAS  /tmp/ccs2VtGF.s 			page 230


 7241 012c 00000000 		.word	.LANCHOR25
 7242 0130 00000000 		.word	.LC20
 7243 0134 14000000 		.word	.LC39
 7244 0138 3C000000 		.word	.LC40
 7245 013c 00000000 		.word	.LANCHOR15
 7246 0140 00000000 		.word	.LANCHOR14
 7247 0144 00000000 		.word	mode
 7248 0148 58000000 		.word	.LC42
 7249 014c 00000000 		.word	TP_InputMode
 7250 0150 50000000 		.word	.LC41
 7251              		.cfi_endproc
 7252              	.LFE103:
 7254              		.section	.text.main_loop,"ax",%progbits
 7255              		.align	1
 7256              		.global	main_loop
 7257              		.syntax unified
 7258              		.thumb
 7259              		.thumb_func
 7260              		.fpu softvfp
 7262              	main_loop:
 7263              	.LFB86:
2060:Src/main.c    **** 
 7264              		.loc 1 2060 0
 7265              		.cfi_startproc
 7266              		@ Volatile: function does not return.
 7267              		@ args = 0, pretend = 0, frame = 0
 7268              		@ frame_needed = 0, uses_anonymous_args = 0
 7269 0000 00B5     		push	{lr}
 7270              	.LCFI48:
 7271              		.cfi_def_cfa_offset 4
 7272              		.cfi_offset 14, -4
 7273 0002 83B0     		sub	sp, sp, #12
 7274              	.LCFI49:
 7275              		.cfi_def_cfa_offset 16
 7276 0004 67E0     		b	.L275
 7277              	.L277:
2080:Src/main.c    **** 		HDMITX_DevLoopProc() ;
 7278              		.loc 1 2080 0
 7279 0006 1346     		mov	r3, r2
 7280 0008 0022     		movs	r2, #0
 7281 000a 1A70     		strb	r2, [r3]
2081:Src/main.c    **** 	}
 7282              		.loc 1 2081 0
 7283 000c FFF7FEFF 		bl	HDMITX_DevLoopProc
 7284              	.LVL1020:
 7285 0010 70E0     		b	.L261
 7286              	.L278:
2116:Src/main.c    **** 			   if (gMode0LoopSecCount > gMode0LoopSecCmpVal)
 7287              		.loc 1 2116 0
 7288 0012 5E4A     		ldr	r2, .L283
 7289 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 7290 0016 0133     		adds	r3, r3, #1
 7291 0018 DBB2     		uxtb	r3, r3
 7292 001a 1370     		strb	r3, [r2]
2117:Src/main.c    **** 			   {
 7293              		.loc 1 2117 0
 7294 001c 5C4A     		ldr	r2, .L283+4
ARM GAS  /tmp/ccs2VtGF.s 			page 231


 7295 001e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7296 0020 9342     		cmp	r3, r2
 7297 0022 40F28580 		bls	.L264
2119:Src/main.c    **** 				   pVS4210_MutiWindows1.OutputMode = VS4210_FULL_MODE0 ;
 7298              		.loc 1 2119 0
 7299 0026 0021     		movs	r1, #0
 7300 0028 584B     		ldr	r3, .L283
 7301 002a 1970     		strb	r1, [r3]
2120:Src/main.c    **** 				   if (pVS4210_MutiWindows1.WindowMap.WMap0 < 4)
 7302              		.loc 1 2120 0
 7303 002c 594B     		ldr	r3, .L283+8
 7304 002e 1970     		strb	r1, [r3]
2121:Src/main.c    **** 				   {
 7305              		.loc 1 2121 0
 7306 0030 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7307 0032 032B     		cmp	r3, #3
 7308 0034 14D8     		bhi	.L265
2123:Src/main.c    **** 				   }
 7309              		.loc 1 2123 0
 7310 0036 0133     		adds	r3, r3, #1
 7311 0038 5649     		ldr	r1, .L283+8
 7312 003a 4B70     		strb	r3, [r1, #1]
 7313              	.L266:
2128:Src/main.c    **** 				   VS4210_SetMutiWindows(&pVS4210_MutiWindows1) ;
 7314              		.loc 1 2128 0
 7315 003c 554C     		ldr	r4, .L283+8
 7316 003e 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 7317 0040 0192     		str	r2, [sp, #4]
 7318 0042 0093     		str	r3, [sp]
 7319 0044 4FF40563 		mov	r3, #2128
 7320 0048 534A     		ldr	r2, .L283+12
 7321 004a 5449     		ldr	r1, .L283+16
 7322 004c 5448     		ldr	r0, .L283+20
 7323 004e FFF7FEFF 		bl	printf
 7324              	.LVL1021:
2129:Src/main.c    **** 				   OSDSecCount = 0 ;
 7325              		.loc 1 2129 0
 7326 0052 2046     		mov	r0, r4
 7327 0054 FFF7FEFF 		bl	VS4210_SetMutiWindows
 7328              	.LVL1022:
2130:Src/main.c    **** 			   }
 7329              		.loc 1 2130 0
 7330 0058 524B     		ldr	r3, .L283+24
 7331 005a 0022     		movs	r2, #0
 7332 005c 1A70     		strb	r2, [r3]
 7333 005e 67E0     		b	.L264
 7334              	.L265:
2126:Src/main.c    **** 				   }
 7335              		.loc 1 2126 0
 7336 0060 4C4B     		ldr	r3, .L283+8
 7337 0062 0121     		movs	r1, #1
 7338 0064 5970     		strb	r1, [r3, #1]
 7339 0066 E9E7     		b	.L266
 7340              	.L279:
2136:Src/main.c    **** 		   }
 7341              		.loc 1 2136 0
 7342 0068 4A4B     		ldr	r3, .L283+8
ARM GAS  /tmp/ccs2VtGF.s 			page 232


 7343 006a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7344 006c 4D4A     		ldr	r2, .L283+24
 7345 006e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7346 0070 0192     		str	r2, [sp, #4]
 7347 0072 0093     		str	r3, [sp]
 7348 0074 40F65803 		movw	r3, #2136
 7349 0078 474A     		ldr	r2, .L283+12
 7350 007a 4849     		ldr	r1, .L283+16
 7351 007c 4A48     		ldr	r0, .L283+28
 7352 007e FFF7FEFF 		bl	printf
 7353              	.LVL1023:
 7354 0082 59E0     		b	.L267
 7355              	.L280:
2145:Src/main.c    **** 			   {
 7356              		.loc 1 2145 0
 7357 0084 474B     		ldr	r3, .L283+24
 7358 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7359 0088 092B     		cmp	r3, #9
 7360 008a 59D9     		bls	.L268
2147:Src/main.c    **** 				   OSDStateFlg = 0 ;
 7361              		.loc 1 2147 0
 7362 008c 0023     		movs	r3, #0
 7363 008e 454A     		ldr	r2, .L283+24
 7364 0090 1370     		strb	r3, [r2]
2148:Src/main.c    **** 				   OSD_Clear_All();
 7365              		.loc 1 2148 0
 7366 0092 464A     		ldr	r2, .L283+32
 7367 0094 1370     		strb	r3, [r2]
2149:Src/main.c    **** 				   ////VXIS_fSetContentOsdOnOff(0) ;
 7368              		.loc 1 2149 0
 7369 0096 FFF7FEFF 		bl	OSD_Clear_All
 7370              	.LVL1024:
 7371 009a 51E0     		b	.L268
 7372              	.L281:
2155:Src/main.c    **** 		   
 7373              		.loc 1 2155 0
 7374 009c 8021     		movs	r1, #128
 7375 009e 3220     		movs	r0, #50
 7376 00a0 FFF7FEFF 		bl	VXISI2CWrite
 7377              	.LVL1025:
 7378 00a4 51E0     		b	.L263
 7379              	.L282:
2191:Src/main.c    **** 				else
 7380              		.loc 1 2191 0
 7381 00a6 FFF7FEFF 		bl	HS_Select_Win
 7382              	.LVL1026:
 7383 00aa 01E0     		b	.L270
 7384              	.L271:
2205:Src/main.c    **** 	}while(AccessEnable == 0);
 7385              		.loc 1 2205 0 discriminator 2
 7386 00ac FFF7FEFF 		bl	Monitor
 7387              	.LVL1027:
 7388              	.L270:
2205:Src/main.c    **** 	}while(AccessEnable == 0);
 7389              		.loc 1 2205 0 is_stmt 0 discriminator 1
 7390 00b0 FFF7FEFF 		bl	RS_ready
 7391              	.LVL1028:
ARM GAS  /tmp/ccs2VtGF.s 			page 233


 7392 00b4 0028     		cmp	r0, #0
 7393 00b6 F9D1     		bne	.L271
2206:Src/main.c    **** 	#endif
 7394              		.loc 1 2206 0 is_stmt 1
 7395 00b8 3D4B     		ldr	r3, .L283+36
 7396 00ba 1B68     		ldr	r3, [r3]
 7397 00bc 002B     		cmp	r3, #0
 7398 00be F7D0     		beq	.L270
 7399 00c0 01E0     		b	.L273
 7400              	.L274:
2209:Src/main.c    **** 		
 7401              		.loc 1 2209 0 discriminator 2
 7402 00c2 FFF7FEFF 		bl	TOAReceivePaser
 7403              	.LVL1029:
 7404              	.L273:
2209:Src/main.c    **** 		
 7405              		.loc 1 2209 0 is_stmt 0 discriminator 1
 7406 00c6 FFF7FEFF 		bl	RS2_ready
 7407              	.LVL1030:
 7408 00ca 0028     		cmp	r0, #0
 7409 00cc F9D1     		bne	.L274
2211:Src/main.c    **** 
 7410              		.loc 1 2211 0 is_stmt 1
 7411 00ce FFF7FEFF 		bl	SysTimerHandler
 7412              	.LVL1031:
2213:Src/main.c    **** 
 7413              		.loc 1 2213 0
 7414 00d2 FFF7FEFF 		bl	Get_2824cIrq
 7415              	.LVL1032:
 7416              	.L275:
2071:Src/main.c    **** 	#endif
 7417              		.loc 1 2071 0
 7418 00d6 364B     		ldr	r3, .L283+36
 7419 00d8 1B68     		ldr	r3, [r3]
 7420 00da 012B     		cmp	r3, #1
 7421 00dc E8D1     		bne	.L270
2074:Src/main.c    **** 	HDMI_AudioModeDetect() ;
 7422              		.loc 1 2074 0
 7423 00de FFF7FEFF 		bl	HDMI_VideoModeDetect
 7424              	.LVL1033:
2075:Src/main.c    **** 
 7425              		.loc 1 2075 0
 7426 00e2 FFF7FEFF 		bl	HDMI_AudioModeDetect
 7427              	.LVL1034:
2077:Src/main.c    **** 	if (TxCount > 10 )
 7428              		.loc 1 2077 0
 7429 00e6 334A     		ldr	r2, .L283+40
 7430 00e8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 7431 00ea 0133     		adds	r3, r3, #1
 7432 00ec DBB2     		uxtb	r3, r3
 7433 00ee 1370     		strb	r3, [r2]
2078:Src/main.c    **** 	{
 7434              		.loc 1 2078 0
 7435 00f0 0A2B     		cmp	r3, #10
 7436 00f2 88D8     		bhi	.L277
 7437              	.L261:
2102:Src/main.c    **** 
ARM GAS  /tmp/ccs2VtGF.s 			page 234


 7438              		.loc 1 2102 0
 7439 00f4 0A20     		movs	r0, #10
 7440 00f6 FFF7FEFF 		bl	msleep
 7441              	.LVL1035:
2104:Src/main.c    **** 	   if (gMode0LoopCount > 100 )
 7442              		.loc 1 2104 0
 7443 00fa 2F4A     		ldr	r2, .L283+44
 7444 00fc 1388     		ldrh	r3, [r2]
 7445 00fe 0133     		adds	r3, r3, #1
 7446 0100 9BB2     		uxth	r3, r3
 7447 0102 1380     		strh	r3, [r2]	@ movhi
2105:Src/main.c    **** 	   {
 7448              		.loc 1 2105 0
 7449 0104 642B     		cmp	r3, #100
 7450 0106 06D9     		bls	.L262
2107:Src/main.c    **** 		   OSDSecCount = OSDSecCount +1 ;
 7451              		.loc 1 2107 0
 7452 0108 1346     		mov	r3, r2
 7453 010a 0022     		movs	r2, #0
 7454 010c 1A80     		strh	r2, [r3]	@ movhi
2108:Src/main.c    **** 	   }
 7455              		.loc 1 2108 0
 7456 010e 254A     		ldr	r2, .L283+24
 7457 0110 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 7458 0112 0133     		adds	r3, r3, #1
 7459 0114 1370     		strb	r3, [r2]
 7460              	.L262:
2111:Src/main.c    **** 	   {
 7461              		.loc 1 2111 0
 7462 0116 234B     		ldr	r3, .L283+24
 7463 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7464 011a 284A     		ldr	r2, .L283+48
 7465 011c 1268     		ldr	r2, [r2]
 7466 011e 9342     		cmp	r3, r2
 7467 0120 13D0     		beq	.L263
2113:Src/main.c    **** 		   if (gMode0LoopFlg == 1)
 7468              		.loc 1 2113 0
 7469 0122 264A     		ldr	r2, .L283+48
 7470 0124 1360     		str	r3, [r2]
2114:Src/main.c    **** 		   {
 7471              		.loc 1 2114 0
 7472 0126 264B     		ldr	r3, .L283+52
 7473 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7474 012a 012B     		cmp	r3, #1
 7475 012c 3FF471AF 		beq	.L278
 7476              	.L264:
2134:Src/main.c    **** 		   {
 7477              		.loc 1 2134 0
 7478 0130 234B     		ldr	r3, .L283+52
 7479 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7480 0134 012B     		cmp	r3, #1
 7481 0136 97D0     		beq	.L279
 7482              	.L267:
2143:Src/main.c    **** 		   {
 7483              		.loc 1 2143 0
 7484 0138 1C4B     		ldr	r3, .L283+32
 7485 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccs2VtGF.s 			page 235


 7486 013c 012B     		cmp	r3, #1
 7487 013e A1D0     		beq	.L280
 7488              	.L268:
2154:Src/main.c    **** 			VXISI2CWrite(0x32,0x80);
 7489              		.loc 1 2154 0
 7490 0140 3220     		movs	r0, #50
 7491 0142 FFF7FEFF 		bl	VXISI2CRead
 7492              	.LVL1036:
 7493 0146 0028     		cmp	r0, #0
 7494 0148 A8D0     		beq	.L281
 7495              	.L263:
2160:Src/main.c    **** 	
 7496              		.loc 1 2160 0
 7497 014a FFF7FEFF 		bl	EQ_Detect
 7498              	.LVL1037:
2178:Src/main.c    **** 		if((CheckSelectInputMode!=SelectInputMode)/*&&(BOOT_ISSUE==0)*/)
 7499              		.loc 1 2178 0
 7500 014e 1021     		movs	r1, #16
 7501 0150 1C48     		ldr	r0, .L283+56
 7502 0152 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 7503              	.LVL1038:
 7504 0156 1C4B     		ldr	r3, .L283+60
 7505 0158 1870     		strb	r0, [r3]
2179:Src/main.c    **** 		{
 7506              		.loc 1 2179 0
 7507 015a 1C4B     		ldr	r3, .L283+64
 7508 015c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7509 015e 9842     		cmp	r0, r3
 7510 0160 A6D0     		beq	.L270
2181:Src/main.c    **** 			CheckSelectInputMode=HDMI_SELECT_GET();
 7511              		.loc 1 2181 0
 7512 0162 3220     		movs	r0, #50
 7513 0164 FFF7FEFF 		bl	msleep
 7514              	.LVL1039:
2182:Src/main.c    **** 
 7515              		.loc 1 2182 0
 7516 0168 1021     		movs	r1, #16
 7517 016a 1648     		ldr	r0, .L283+56
 7518 016c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 7519              	.LVL1040:
 7520 0170 154B     		ldr	r3, .L283+60
 7521 0172 1870     		strb	r0, [r3]
2184:Src/main.c    **** 				{
 7522              		.loc 1 2184 0
 7523 0174 154B     		ldr	r3, .L283+64
 7524 0176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7525 0178 9842     		cmp	r0, r3
 7526 017a 99D0     		beq	.L270
2186:Src/main.c    **** 
 7527              		.loc 1 2186 0
 7528 017c 134B     		ldr	r3, .L283+64
 7529 017e 1870     		strb	r0, [r3]
2190:Src/main.c    **** 					HS_Select_Win(1);
 7530              		.loc 1 2190 0
 7531 0180 0128     		cmp	r0, #1
 7532 0182 90D0     		beq	.L282
2193:Src/main.c    **** 				}
ARM GAS  /tmp/ccs2VtGF.s 			page 236


 7533              		.loc 1 2193 0
 7534 0184 0020     		movs	r0, #0
 7535 0186 FFF7FEFF 		bl	HS_Select_Win
 7536              	.LVL1041:
 7537 018a 91E7     		b	.L270
 7538              	.L284:
 7539              		.align	2
 7540              	.L283:
 7541 018c 00000000 		.word	.LANCHOR30
 7542 0190 00000000 		.word	.LANCHOR31
 7543 0194 00000000 		.word	pVS4210_MutiWindows1
 7544 0198 00000000 		.word	.LANCHOR32
 7545 019c 00000000 		.word	.LC20
 7546 01a0 00000000 		.word	.LC43
 7547 01a4 00000000 		.word	.LANCHOR15
 7548 01a8 24000000 		.word	.LC44
 7549 01ac 00000000 		.word	.LANCHOR14
 7550 01b0 00000000 		.word	AccessEnable
 7551 01b4 00000000 		.word	.LANCHOR26
 7552 01b8 00000000 		.word	.LANCHOR27
 7553 01bc 00000000 		.word	.LANCHOR28
 7554 01c0 00000000 		.word	.LANCHOR29
 7555 01c4 00080140 		.word	1073809408
 7556 01c8 00000000 		.word	.LANCHOR33
 7557 01cc 00000000 		.word	.LANCHOR17
 7558              		.cfi_endproc
 7559              	.LFE86:
 7561              		.section	.text.main,"ax",%progbits
 7562              		.align	1
 7563              		.global	main
 7564              		.syntax unified
 7565              		.thumb
 7566              		.thumb_func
 7567              		.fpu softvfp
 7569              	main:
 7570              	.LFB85:
1749:Src/main.c    ****   /* USER CODE BEGIN 1 */
 7571              		.loc 1 1749 0
 7572              		.cfi_startproc
 7573              		@ args = 0, pretend = 0, frame = 0
 7574              		@ frame_needed = 0, uses_anonymous_args = 0
 7575 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 7576              	.LCFI50:
 7577              		.cfi_def_cfa_offset 28
 7578              		.cfi_offset 4, -28
 7579              		.cfi_offset 5, -24
 7580              		.cfi_offset 6, -20
 7581              		.cfi_offset 7, -16
 7582              		.cfi_offset 8, -12
 7583              		.cfi_offset 9, -8
 7584              		.cfi_offset 14, -4
 7585 0004 83B0     		sub	sp, sp, #12
 7586              	.LCFI51:
 7587              		.cfi_def_cfa_offset 40
1768:Src/main.c    ****   
 7588              		.loc 1 1768 0
 7589 0006 FFF7FEFF 		bl	HAL_Init
ARM GAS  /tmp/ccs2VtGF.s 			page 237


 7590              	.LVL1042:
1775:Src/main.c    **** 
 7591              		.loc 1 1775 0
 7592 000a FFF7FEFF 		bl	SystemClock_Config
 7593              	.LVL1043:
1779:Src/main.c    **** 
 7594              		.loc 1 1779 0
 7595 000e FFF7FEFF 		bl	InitialTimerEvent
 7596              	.LVL1044:
1784:Src/main.c    ****  // LCDPowerOFF();
 7597              		.loc 1 1784 0
 7598 0012 FFF7FEFF 		bl	MX_GPIO_Init
 7599              	.LVL1045:
1799:Src/main.c    ****   MX_USART1_UART_Init();
 7600              		.loc 1 1799 0
 7601 0016 FFF7FEFF 		bl	MX_TIM3_Init
 7602              	.LVL1046:
1800:Src/main.c    ****   MX_USART2_UART_Init();
 7603              		.loc 1 1800 0
 7604 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 7605              	.LVL1047:
1801:Src/main.c    **** //  MX_ADC1_Init();
 7606              		.loc 1 1801 0
 7607 001e FFF7FEFF 		bl	MX_USART2_UART_Init
 7608              	.LVL1048:
1808:Src/main.c    ****  SW_I2C1_Init() ;
 7609              		.loc 1 1808 0
 7610 0022 FFF7FEFF 		bl	SW_I2C0_Init
 7611              	.LVL1049:
1809:Src/main.c    ****  SW_I2C2_Init() ;
 7612              		.loc 1 1809 0
 7613 0026 FFF7FEFF 		bl	SW_I2C1_Init
 7614              	.LVL1050:
1810:Src/main.c    ****  SW_I2C3_Init() ;
 7615              		.loc 1 1810 0
 7616 002a FFF7FEFF 		bl	SW_I2C2_Init
 7617              	.LVL1051:
1811:Src/main.c    **** 
 7618              		.loc 1 1811 0
 7619 002e FFF7FEFF 		bl	SW_I2C3_Init
 7620              	.LVL1052:
1818:Src/main.c    **** SET_Audio_Mute(ON);
 7621              		.loc 1 1818 0
 7622 0032 0121     		movs	r1, #1
 7623 0034 0020     		movs	r0, #0
 7624 0036 FFF7FEFF 		bl	Set_Video_Loss_OSD
 7625              	.LVL1053:
1819:Src/main.c    **** 
 7626              		.loc 1 1819 0
 7627 003a 0120     		movs	r0, #1
 7628 003c FFF7FEFF 		bl	SET_Audio_Mute
 7629              	.LVL1054:
1824:Src/main.c    ****   HAL_UART_Receive_IT(&huart1,(uint8_t*)Rx_data, 1);	//activate UART receive interrupt every time
 7630              		.loc 1 1824 0
 7631 0040 3220     		movs	r0, #50
 7632 0042 FFF7FEFF 		bl	msleep
 7633              	.LVL1055:
ARM GAS  /tmp/ccs2VtGF.s 			page 238


1825:Src/main.c    ****   HAL_UART_Receive_IT(&huart2,(uint8_t*)Rx2_data, 1);	//activate UART receive interrupt every time
 7634              		.loc 1 1825 0
 7635 0046 0122     		movs	r2, #1
 7636 0048 5749     		ldr	r1, .L292
 7637 004a 5848     		ldr	r0, .L292+4
 7638 004c FFF7FEFF 		bl	HAL_UART_Receive_IT
 7639              	.LVL1056:
1826:Src/main.c    **** 
 7640              		.loc 1 1826 0
 7641 0050 0122     		movs	r2, #1
 7642 0052 5749     		ldr	r1, .L292+8
 7643 0054 5748     		ldr	r0, .L292+12
 7644 0056 FFF7FEFF 		bl	HAL_UART_Receive_IT
 7645              	.LVL1057:
1830:Src/main.c    ****  TP2824_SET_REST(0);
 7646              		.loc 1 1830 0
 7647 005a 574D     		ldr	r5, .L292+16
 7648 005c 0022     		movs	r2, #0
 7649 005e 4FF48051 		mov	r1, #4096
 7650 0062 2846     		mov	r0, r5
 7651 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 7652              	.LVL1058:
1831:Src/main.c    **** 
 7653              		.loc 1 1831 0
 7654 0068 544C     		ldr	r4, .L292+20
 7655 006a 0022     		movs	r2, #0
 7656 006c 0221     		movs	r1, #2
 7657 006e 2046     		mov	r0, r4
 7658 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 7659              	.LVL1059:
1833:Src/main.c    ****   //HAL_GPIO_WritePin(TP2824_RST_GPIO_Port, VS_RST_Pin, 1); //VS4210 RST
 7660              		.loc 1 1833 0
 7661 0074 6420     		movs	r0, #100
 7662 0076 FFF7FEFF 		bl	msleep
 7663              	.LVL1060:
1836:Src/main.c    ****  TP2824_SET_REST(1);
 7664              		.loc 1 1836 0
 7665 007a 0122     		movs	r2, #1
 7666 007c 4FF48051 		mov	r1, #4096
 7667 0080 2846     		mov	r0, r5
 7668 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 7669              	.LVL1061:
1837:Src/main.c    **** 
 7670              		.loc 1 1837 0
 7671 0086 0122     		movs	r2, #1
 7672 0088 0221     		movs	r1, #2
 7673 008a 2046     		mov	r0, r4
 7674 008c FFF7FEFF 		bl	HAL_GPIO_WritePin
 7675              	.LVL1062:
1851:Src/main.c    ****   {
 7676              		.loc 1 1851 0
 7677 0090 0024     		movs	r4, #0
 7678 0092 20E0     		b	.L286
 7679              	.LVL1063:
 7680              	.L287:
1853:Src/main.c    ****       dbg_Printf("Init HDMI RX,Chip(%d)....\r\n",(int)i ) ;
 7681              		.loc 1 1853 0 discriminator 3
ARM GAS  /tmp/ccs2VtGF.s 			page 239


 7682 0094 4A4B     		ldr	r3, .L292+24
 7683 0096 1C70     		strb	r4, [r3]
1854:Src/main.c    ****       InitHDMIRX(0);
 7684              		.loc 1 1854 0 discriminator 3
 7685 0098 4A4E     		ldr	r6, .L292+28
 7686 009a 4B4D     		ldr	r5, .L292+32
 7687 009c 0094     		str	r4, [sp]
 7688 009e 40F23E73 		movw	r3, #1854
 7689 00a2 3246     		mov	r2, r6
 7690 00a4 2946     		mov	r1, r5
 7691 00a6 4948     		ldr	r0, .L292+36
 7692 00a8 FFF7FEFF 		bl	printf
 7693              	.LVL1064:
1855:Src/main.c    ****       HDMIRX_WriteI2C_Byte(0x89 ,0x80);
 7694              		.loc 1 1855 0 discriminator 3
 7695 00ac 0020     		movs	r0, #0
 7696 00ae FFF7FEFF 		bl	InitHDMIRX
 7697              	.LVL1065:
1856:Src/main.c    **** 
 7698              		.loc 1 1856 0 discriminator 3
 7699 00b2 8021     		movs	r1, #128
 7700 00b4 8920     		movs	r0, #137
 7701 00b6 FFF7FEFF 		bl	HDMIRX_WriteI2C_Byte
 7702              	.LVL1066:
1859:Src/main.c    ****       dbg_Printf("IT66021 chip num=%d , 02reg=0x%02x\r\n", (int )i , (int)val ) ;
 7703              		.loc 1 1859 0 discriminator 3
 7704 00ba 0220     		movs	r0, #2
 7705 00bc FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 7706              	.LVL1067:
1860:Src/main.c    **** #endif
 7707              		.loc 1 1860 0 discriminator 3
 7708 00c0 0190     		str	r0, [sp, #4]
 7709 00c2 0094     		str	r4, [sp]
 7710 00c4 40F24473 		movw	r3, #1860
 7711 00c8 3246     		mov	r2, r6
 7712 00ca 2946     		mov	r1, r5
 7713 00cc 4048     		ldr	r0, .L292+40
 7714              	.LVL1068:
 7715 00ce FFF7FEFF 		bl	printf
 7716              	.LVL1069:
1851:Src/main.c    ****   {
 7717              		.loc 1 1851 0 discriminator 3
 7718 00d2 0134     		adds	r4, r4, #1
 7719              	.LVL1070:
 7720 00d4 E4B2     		uxtb	r4, r4
 7721              	.LVL1071:
 7722              	.L286:
1851:Src/main.c    ****   {
 7723              		.loc 1 1851 0 is_stmt 0 discriminator 1
 7724 00d6 012C     		cmp	r4, #1
 7725 00d8 DCD9     		bls	.L287
1873:Src/main.c    **** 	  #endif
 7726              		.loc 1 1873 0 is_stmt 1
 7727 00da 3E4C     		ldr	r4, .L292+44
 7728              	.LVL1072:
 7729 00dc 0025     		movs	r5, #0
 7730 00de 2570     		strb	r5, [r4]
ARM GAS  /tmp/ccs2VtGF.s 			page 240


1876:Src/main.c    ****   pVS4210_MutiWindows1.OutputSize = _OUTPUT_1080P60 ;
 7731              		.loc 1 1876 0
 7732 00e0 6571     		strb	r5, [r4, #5]
1877:Src/main.c    **** 	#ifdef VS4210_SELECT_WIN1	//20201211-02
 7733              		.loc 1 1877 0
 7734 00e2 0126     		movs	r6, #1
 7735 00e4 A671     		strb	r6, [r4, #6]
1884:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap1 = 2 ; //set ch2 = video2
 7736              		.loc 1 1884 0
 7737 00e6 6670     		strb	r6, [r4, #1]
1885:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap2 = 3 ; //set ch3 = video3
 7738              		.loc 1 1885 0
 7739 00e8 0223     		movs	r3, #2
 7740 00ea A370     		strb	r3, [r4, #2]
1886:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap3 = 4 ; //set ch4 = video4
 7741              		.loc 1 1886 0
 7742 00ec 0327     		movs	r7, #3
 7743 00ee E770     		strb	r7, [r4, #3]
1887:Src/main.c    **** 	#endif
 7744              		.loc 1 1887 0
 7745 00f0 0423     		movs	r3, #4
 7746 00f2 2371     		strb	r3, [r4, #4]
1891:Src/main.c    **** 
 7747              		.loc 1 1891 0
 7748 00f4 3849     		ldr	r1, .L292+48
 7749 00f6 0F20     		movs	r0, #15
 7750 00f8 FFF7FEFF 		bl	VXOSD_UseFont_init
 7751              	.LVL1073:
1893:Src/main.c    **** #endif
 7752              		.loc 1 1893 0
 7753 00fc FFF7FEFF 		bl	main_init
 7754              	.LVL1074:
1901:Src/main.c    **** 
 7755              		.loc 1 1901 0
 7756 0100 FFF7FEFF 		bl	Init_TP280x_RegSet
 7757              	.LVL1075:
1905:Src/main.c    ****    dbg_Printf("VS4210 chip ID = 0x%02x\r\n",(int)val) ;
 7758              		.loc 1 1905 0
 7759 0104 2846     		mov	r0, r5
 7760 0106 FFF7FEFF 		bl	VXISI2CRead
 7761              	.LVL1076:
1906:Src/main.c    ****    dbg_Printf("VS4210 Init. (Startting...)\r\n") ;
 7762              		.loc 1 1906 0
 7763 010a DFF8B890 		ldr	r9, .L292+28
 7764 010e DFF8B880 		ldr	r8, .L292+32
 7765 0112 0090     		str	r0, [sp]
 7766 0114 40F27273 		movw	r3, #1906
 7767 0118 4A46     		mov	r2, r9
 7768 011a 4146     		mov	r1, r8
 7769 011c 2F48     		ldr	r0, .L292+52
 7770              	.LVL1077:
 7771 011e FFF7FEFF 		bl	printf
 7772              	.LVL1078:
1907:Src/main.c    **** #endif
 7773              		.loc 1 1907 0
 7774 0122 40F27373 		movw	r3, #1907
 7775 0126 4A46     		mov	r2, r9
ARM GAS  /tmp/ccs2VtGF.s 			page 241


 7776 0128 4146     		mov	r1, r8
 7777 012a 2D48     		ldr	r0, .L292+56
 7778 012c FFF7FEFF 		bl	printf
 7779              	.LVL1079:
1910:Src/main.c    ****   //pVS4210_MutiWindows1.DrawOSDFlg = 0x00 ;  //Enable OSD, bit1=Title, bit0 = bar
 7780              		.loc 1 1910 0
 7781 0130 E771     		strb	r7, [r4, #7]
1920:Src/main.c    ****   //pVS4210_MutiWindows1.OutputSize = _OUTPUT_720P60 ;
 7782              		.loc 1 1920 0
 7783 0132 A671     		strb	r6, [r4, #6]
1923:Src/main.c    ****   pVS4210_MutiWindows1.DrawBoxColor= _EN_DRAWBOX_COLOR_White ;
 7784              		.loc 1 1923 0
 7785 0134 2572     		strb	r5, [r4, #8]
1924:Src/main.c    ****   VXIS_fSetOsdx2(0) ;
 7786              		.loc 1 1924 0
 7787 0136 6572     		strb	r5, [r4, #9]
1925:Src/main.c    **** 
 7788              		.loc 1 1925 0
 7789 0138 2846     		mov	r0, r5
 7790 013a FFF7FEFF 		bl	VXIS_fSetOsdx2
 7791              	.LVL1080:
1927:Src/main.c    **** 
 7792              		.loc 1 1927 0
 7793 013e 2046     		mov	r0, r4
 7794 0140 FFF7FEFF 		bl	VS4210_SetMutiWindows
 7795              	.LVL1081:
1929:Src/main.c    ****   {
 7796              		.loc 1 1929 0
 7797 0144 E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
 7798 0146 3BB1     		cbz	r3, .L288
1931:Src/main.c    ****         Tim1_count = 0 ;
 7799              		.loc 1 1931 0
 7800 0148 264B     		ldr	r3, .L292+60
 7801 014a 1E60     		str	r6, [r3]
1932:Src/main.c    ****         OSDStateFlg = 1 ;
 7802              		.loc 1 1932 0
 7803 014c 2649     		ldr	r1, .L292+64
 7804 014e 0D60     		str	r5, [r1]
1933:Src/main.c    ****         OSDSecCount = 0 ;
 7805              		.loc 1 1933 0
 7806 0150 2649     		ldr	r1, .L292+68
 7807 0152 0E70     		strb	r6, [r1]
1934:Src/main.c    ****   }  
 7808              		.loc 1 1934 0
 7809 0154 264A     		ldr	r2, .L292+72
 7810 0156 1570     		strb	r5, [r2]
 7811              	.L288:
1937:Src/main.c    **** memset(&ExOsdContent[1] ,_spc , (EXTERNOSDNUMBER+1) *2 ) ;
 7812              		.loc 1 1937 0
 7813 0158 2648     		ldr	r0, .L292+76
 7814 015a 5D23     		movs	r3, #93
 7815 015c 00F8013B 		strb	r3, [r0], #1
1938:Src/main.c    **** exosdLen = 4*EXTERNOSDNUMBER + 4  ;
 7816              		.loc 1 1938 0
 7817 0160 2022     		movs	r2, #32
 7818 0162 6D21     		movs	r1, #109
 7819 0164 FFF7FEFF 		bl	memset
ARM GAS  /tmp/ccs2VtGF.s 			page 242


 7820              	.LVL1082:
1941:Src/main.c    **** for (i = exosdStart ; i <= exosdLen ;i = i+2 )
 7821              		.loc 1 1941 0
 7822 0168 0122     		movs	r2, #1
1942:Src/main.c    **** {
 7823              		.loc 1 1942 0
 7824 016a 2123     		movs	r3, #33
 7825 016c 0AE0     		b	.L289
 7826              	.LVL1083:
 7827              	.L290:
1944:Src/main.c    **** 	ExOsdContent[i+1] = _spc ;
 7828              		.loc 1 1944 0 discriminator 3
 7829 016e 02F17F00 		add	r0, r2, #127
 7830 0172 2049     		ldr	r1, .L292+76
 7831 0174 C854     		strb	r0, [r1, r3]
1945:Src/main.c    **** 	j++ ;
 7832              		.loc 1 1945 0 discriminator 3
 7833 0176 581C     		adds	r0, r3, #1
 7834 0178 6D24     		movs	r4, #109
 7835 017a 0C54     		strb	r4, [r1, r0]
1946:Src/main.c    **** }
 7836              		.loc 1 1946 0 discriminator 3
 7837 017c 0132     		adds	r2, r2, #1
 7838              	.LVL1084:
 7839 017e D2B2     		uxtb	r2, r2
 7840              	.LVL1085:
1942:Src/main.c    **** {
 7841              		.loc 1 1942 0 discriminator 3
 7842 0180 0233     		adds	r3, r3, #2
 7843              	.LVL1086:
 7844 0182 DBB2     		uxtb	r3, r3
 7845              	.LVL1087:
 7846              	.L289:
1942:Src/main.c    **** {
 7847              		.loc 1 1942 0 is_stmt 0 discriminator 1
 7848 0184 402B     		cmp	r3, #64
 7849 0186 F2D9     		bls	.L290
1948:Src/main.c    ****   exosdLen = EXTERNOSDNUMBER *2  ;
 7850              		.loc 1 1948 0 is_stmt 1
 7851 0188 1F22     		movs	r2, #31
 7852              	.LVL1088:
 7853 018a 6D21     		movs	r1, #109
 7854 018c 1A48     		ldr	r0, .L292+80
 7855 018e FFF7FEFF 		bl	memset
 7856              	.LVL1089:
1951:Src/main.c    **** //test@end
 7857              		.loc 1 1951 0
 7858 0192 0020     		movs	r0, #0
 7859 0194 FFF7FEFF 		bl	Audio_Sel
 7860              	.LVL1090:
2014:Src/main.c    ****   /* USER CODE END 2 */
 7861              		.loc 1 2014 0
 7862 0198 1848     		ldr	r0, .L292+84
 7863 019a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 7864              	.LVL1091:
2031:Src/main.c    **** 
 7865              		.loc 1 2031 0
ARM GAS  /tmp/ccs2VtGF.s 			page 243


 7866 019e 1848     		ldr	r0, .L292+88
 7867 01a0 FFF7FEFF 		bl	printf
 7868              	.LVL1092:
2044:Src/main.c    **** 	
 7869              		.loc 1 2044 0
 7870 01a4 FFF7FEFF 		bl	main_loop
 7871              	.LVL1093:
 7872              	.L293:
 7873              		.align	2
 7874              	.L292:
 7875 01a8 00000000 		.word	.LANCHOR23
 7876 01ac 00000000 		.word	huart1
 7877 01b0 00000000 		.word	.LANCHOR24
 7878 01b4 00000000 		.word	huart2
 7879 01b8 000C0140 		.word	1073810432
 7880 01bc 00100140 		.word	1073811456
 7881 01c0 00000000 		.word	gHDMI_Index
 7882 01c4 00000000 		.word	.LANCHOR34
 7883 01c8 00000000 		.word	.LC20
 7884 01cc 00000000 		.word	.LC45
 7885 01d0 28000000 		.word	.LC46
 7886 01d4 00000000 		.word	pVS4210_MutiWindows1
 7887 01d8 00000000 		.word	UserDefineFont1
 7888 01dc 58000000 		.word	.LC47
 7889 01e0 7C000000 		.word	.LC48
 7890 01e4 00000000 		.word	.LANCHOR12
 7891 01e8 00000000 		.word	.LANCHOR13
 7892 01ec 00000000 		.word	.LANCHOR14
 7893 01f0 00000000 		.word	.LANCHOR15
 7894 01f4 00000000 		.word	ExOsdContent
 7895 01f8 3F000000 		.word	ExOsdContent+63
 7896 01fc 00000000 		.word	htim3
 7897 0200 A4000000 		.word	.LC49
 7898              		.cfi_endproc
 7899              	.LFE85:
 7901              		.section	.text.Error_Handler,"ax",%progbits
 7902              		.align	1
 7903              		.global	Error_Handler
 7904              		.syntax unified
 7905              		.thumb
 7906              		.thumb_func
 7907              		.fpu softvfp
 7909              	Error_Handler:
 7910              	.LFB104:
4604:Src/main.c    **** 
4605:Src/main.c    **** /* USER CODE END 4 */
4606:Src/main.c    **** 
4607:Src/main.c    **** /**
4608:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
4609:Src/main.c    ****   * @retval None
4610:Src/main.c    ****   */
4611:Src/main.c    **** void Error_Handler(void)
4612:Src/main.c    **** {
 7911              		.loc 1 4612 0
 7912              		.cfi_startproc
 7913              		@ args = 0, pretend = 0, frame = 0
 7914              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccs2VtGF.s 			page 244


 7915              		@ link register save eliminated.
4613:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
4614:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
4615:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
4616:Src/main.c    **** }
 7916              		.loc 1 4616 0
 7917 0000 7047     		bx	lr
 7918              		.cfi_endproc
 7919              	.LFE104:
 7921              		.global	OSDStateFlg
 7922              		.global	OSDSecCount
 7923              		.comm	pVS4210_JointKind1,10,4
 7924              		.global	gRxLoopFlg
 7925              		.comm	gabVXIS_Input_mirrorH,4,4
 7926              		.global	OSD_Show_Flg
 7927              		.global	Tim1_count
 7928              		.comm	pVS4210_MutiWindows1,10,4
 7929              		.global	TxCount
 7930              		.global	bSignal
 7931              		.global	gMode0LoopSecCmpVal
 7932              		.global	gMode0LoopSecCount
 7933              		.global	gMode0LoopFlg
 7934              		.global	gMode0LoopCount
 7935              		.global	gbAUDO_INDEX
 7936              		.comm	gPrebAUDO_INDEX,1,1
 7937              		.comm	gPreAudioSampleFreq,1,1
 7938              		.global	CheckSelectInputMode
 7939              		.global	SelectInputMode
 7940              		.global	OSDPreSecCount
 7941              		.global	PrebVXIS_InputMode
 7942              		.comm	ExOsdContent,256,4
 7943              		.global	CURRENT_CH
 7944              		.global	BOOT_ISSUE
 7945              		.global	OSD_SPEAKER
 7946              		.global	OSD_MIRROR
 7947              		.comm	CAMR_M,1,1
 7948              		.comm	CAMC_M,1,1
 7949              		.comm	CAMB_M,1,1
 7950              		.comm	CAMA_M,1,1
 7951              		.comm	Priority,1,1
 7952              		.comm	SelectModeType,1,1
 7953              		.global	tptic
 7954              		.global	keytic
 7955              		.global	PowerFlag
 7956              		.comm	TimeStep,1,1
 7957              		.global	PWMLevel
 7958              		.global	AutoDayNightDelay
 7959              		.global	LightSensor_ADC
 7960              		.global	DayNightLevel
 7961              		.comm	DebugLevel,1,1
 7962              		.global	half_scaler
 7963              		.comm	ManVidRes,1,1
 7964              		.global	VS8812_ADDR
 7965              		.global	VS4210_ADDR
 7966              		.comm	htim2,64,4
 7967              		.comm	hadc1,48,4
 7968              		.comm	huart2,64,4
ARM GAS  /tmp/ccs2VtGF.s 			page 245


 7969              		.comm	huart1,64,4
 7970              		.comm	htim3,64,4
 7971              		.comm	newInRes,4,4
 7972              		.section	.bss.AutoDayNightDelay,"aw",%nobits
 7973              		.set	.LANCHOR20,. + 0
 7976              	AutoDayNightDelay:
 7977 0000 00       		.space	1
 7978              		.section	.bss.CURRENT_CH,"aw",%nobits
 7979              		.set	.LANCHOR7,. + 0
 7982              	CURRENT_CH:
 7983 0000 00       		.space	1
 7984              		.section	.bss.CheckSelectInputMode,"aw",%nobits
 7985              		.set	.LANCHOR33,. + 0
 7988              	CheckSelectInputMode:
 7989 0000 00       		.space	1
 7990              		.section	.bss.DayNightLevel,"aw",%nobits
 7991              		.set	.LANCHOR18,. + 0
 7994              	DayNightLevel:
 7995 0000 00       		.space	1
 7996              		.section	.bss.DebugFlg,"aw",%nobits
 7997              		.align	2
 8000              	DebugFlg:
 8001 0000 00000000 		.space	4
 8002              		.section	.bss.IR_4BYTE,"aw",%nobits
 8003              		.align	2
 8006              	IR_4BYTE:
 8007 0000 00000000 		.space	4
 8008              		.section	.bss.IR_Code,"aw",%nobits
 8011              	IR_Code:
 8012 0000 00       		.space	1
 8013              		.section	.bss.IR_END_Flg,"aw",%nobits
 8016              	IR_END_Flg:
 8017 0000 00       		.space	1
 8018              		.section	.bss.IR_IRQFlg,"aw",%nobits
 8021              	IR_IRQFlg:
 8022 0000 00       		.space	1
 8023              		.section	.bss.IR_IRQ_Index,"aw",%nobits
 8026              	IR_IRQ_Index:
 8027 0000 00       		.space	1
 8028              		.section	.bss.IR_PlusTimeVal,"aw",%nobits
 8029              		.align	1
 8032              	IR_PlusTimeVal:
 8033 0000 0000     		.space	2
 8034              		.section	.bss.IR_ShiftCount,"aw",%nobits
 8037              	IR_ShiftCount:
 8038 0000 00       		.space	1
 8039              		.section	.bss.IR_StartFlg,"aw",%nobits
 8042              	IR_StartFlg:
 8043 0000 00       		.space	1
 8044              		.section	.bss.LightSensor_ADC,"aw",%nobits
 8045              		.align	1
 8048              	LightSensor_ADC:
 8049 0000 0000     		.space	2
 8050              		.section	.bss.OSDSecCount,"aw",%nobits
 8051              		.set	.LANCHOR15,. + 0
 8054              	OSDSecCount:
 8055 0000 00       		.space	1
ARM GAS  /tmp/ccs2VtGF.s 			page 246


 8056              		.section	.bss.OSD_MIRROR,"aw",%nobits
 8057              		.align	2
 8058              		.set	.LANCHOR5,. + 0
 8061              	OSD_MIRROR:
 8062 0000 00000000 		.space	4
 8063              		.section	.bss.OSD_SPEAKER,"aw",%nobits
 8064              		.align	2
 8065              		.set	.LANCHOR6,. + 0
 8068              	OSD_SPEAKER:
 8069 0000 00000000 		.space	4
 8070              		.section	.bss.OSD_Show_Flg,"aw",%nobits
 8071              		.align	2
 8072              		.set	.LANCHOR12,. + 0
 8075              	OSD_Show_Flg:
 8076 0000 00000000 		.space	4
 8077              		.section	.bss.PreIR_Code,"aw",%nobits
 8080              	PreIR_Code:
 8081 0000 00       		.space	1
 8082              		.section	.bss.PreIR_IRQ_Index,"aw",%nobits
 8085              	PreIR_IRQ_Index:
 8086 0000 00       		.space	1
 8087              		.section	.bss.Rx2_data,"aw",%nobits
 8088              		.align	2
 8089              		.set	.LANCHOR24,. + 0
 8092              	Rx2_data:
 8093 0000 0000     		.space	2
 8094              		.section	.bss.RxBufIndex,"aw",%nobits
 8095              		.align	2
 8096              		.set	.LANCHOR3,. + 0
 8099              	RxBufIndex:
 8100 0000 00000000 		.space	4
 8101              		.section	.bss.Rx_data,"aw",%nobits
 8102              		.align	2
 8103              		.set	.LANCHOR23,. + 0
 8106              	Rx_data:
 8107 0000 0000     		.space	2
 8108              		.section	.bss.Rx_indx,"aw",%nobits
 8109              		.align	2
 8112              	Rx_indx:
 8113 0000 00000000 		.space	4
 8114              		.section	.bss.RxiCount,"aw",%nobits
 8115              		.align	2
 8118              	RxiCount:
 8119 0000 00000000 		.space	4
 8120              		.section	.bss.SelectInputMode,"aw",%nobits
 8121              		.set	.LANCHOR17,. + 0
 8124              	SelectInputMode:
 8125 0000 00       		.space	1
 8126              		.section	.bss.Tim1_count,"aw",%nobits
 8127              		.align	2
 8128              		.set	.LANCHOR13,. + 0
 8131              	Tim1_count:
 8132 0000 00000000 		.space	4
 8133              		.section	.bss.Transfer_cplt,"aw",%nobits
 8134              		.set	.LANCHOR2,. + 0
 8137              	Transfer_cplt:
 8138 0000 00       		.space	1
ARM GAS  /tmp/ccs2VtGF.s 			page 247


 8139              		.section	.bss.TxCount,"aw",%nobits
 8140              		.set	.LANCHOR26,. + 0
 8143              	TxCount:
 8144 0000 00       		.space	1
 8145              		.section	.bss.TxiCount,"aw",%nobits
 8146              		.align	2
 8149              	TxiCount:
 8150 0000 00000000 		.space	4
 8151              		.section	.bss.bOldSignal,"aw",%nobits
 8152              		.align	2
 8153              		.set	.LANCHOR10,. + 0
 8156              	bOldSignal:
 8157 0000 00000000 		.space	4
 8158              		.section	.bss.bSignal,"aw",%nobits
 8159              		.align	2
 8160              		.set	.LANCHOR9,. + 0
 8163              	bSignal:
 8164 0000 00000000 		.space	4
 8165              		.section	.bss.gAudioSampleFreq,"aw",%nobits
 8166              		.align	2
 8167              		.set	.LANCHOR1,. + 0
 8170              	gAudioSampleFreq:
 8171 0000 00000000 		.space	4
 8172              		.section	.bss.gMode0LoopCount,"aw",%nobits
 8173              		.align	1
 8174              		.set	.LANCHOR27,. + 0
 8177              	gMode0LoopCount:
 8178 0000 0000     		.space	2
 8179              		.section	.bss.gMode0LoopFlg,"aw",%nobits
 8180              		.set	.LANCHOR29,. + 0
 8183              	gMode0LoopFlg:
 8184 0000 00       		.space	1
 8185              		.section	.bss.gMode0LoopSecCount,"aw",%nobits
 8186              		.set	.LANCHOR30,. + 0
 8189              	gMode0LoopSecCount:
 8190 0000 00       		.space	1
 8191              		.section	.bss.gRxbuf,"aw",%nobits
 8192              		.align	2
 8193              		.set	.LANCHOR4,. + 0
 8196              	gRxbuf:
 8197 0000 00000000 		.space	50
 8197      00000000 
 8197      00000000 
 8197      00000000 
 8197      00000000 
 8198              		.section	.bss.gbAUDO_INDEX,"aw",%nobits
 8199              		.set	.LANCHOR0,. + 0
 8202              	gbAUDO_INDEX:
 8203 0000 00       		.space	1
 8204              		.section	.bss.half_scaler,"aw",%nobits
 8207              	half_scaler:
 8208 0000 00       		.space	1
 8209              		.section	.bss.keytic,"aw",%nobits
 8212              	keytic:
 8213 0000 00       		.space	1
 8214              		.section	.bss.tim3count,"aw",%nobits
 8215              		.align	2
ARM GAS  /tmp/ccs2VtGF.s 			page 248


 8216              		.set	.LANCHOR22,. + 0
 8219              	tim3count:
 8220 0000 00000000 		.space	4
 8221              		.section	.bss.tptic,"aw",%nobits
 8224              	tptic:
 8225 0000 00       		.space	1
 8226              		.section	.bss.u16Vendor,"aw",%nobits
 8227              		.align	1
 8230              	u16Vendor:
 8231 0000 0000     		.space	2
 8232              		.section	.bss.u8IRCheckcode,"aw",%nobits
 8235              	u8IRCheckcode:
 8236 0000 00       		.space	1
 8237              		.section	.bss.u8IRcode,"aw",%nobits
 8240              	u8IRcode:
 8241 0000 00       		.space	1
 8242              		.section	.bss.u8PowerFlg,"aw",%nobits
 8245              	u8PowerFlg:
 8246 0000 00       		.space	1
 8247              		.section	.data.BOOT_ISSUE,"aw",%progbits
 8250              	BOOT_ISSUE:
 8251 0000 01       		.byte	1
 8252              		.section	.data.OSDPreSecCount,"aw",%progbits
 8253              		.align	2
 8254              		.set	.LANCHOR28,. + 0
 8257              	OSDPreSecCount:
 8258 0000 FFFFFFFF 		.word	-1
 8259              		.section	.data.OSDStateFlg,"aw",%progbits
 8260              		.set	.LANCHOR14,. + 0
 8263              	OSDStateFlg:
 8264 0000 01       		.byte	1
 8265              		.section	.data.PWMLevel,"aw",%progbits
 8266              		.set	.LANCHOR19,. + 0
 8269              	PWMLevel:
 8270 0000 80       		.byte	-128
 8271              		.section	.data.PowerFlag,"aw",%progbits
 8272              		.set	.LANCHOR21,. + 0
 8275              	PowerFlag:
 8276 0000 01       		.byte	1
 8277              		.section	.data.PrebVXIS_InputMode,"aw",%progbits
 8278              		.align	2
 8279              		.set	.LANCHOR16,. + 0
 8282              	PrebVXIS_InputMode:
 8283 0000 FA       		.byte	-6
 8284 0001 FA       		.byte	-6
 8285 0002 FA       		.byte	-6
 8286 0003 FA       		.byte	-6
 8287              		.section	.data.VS4210_ADDR,"aw",%progbits
 8290              	VS4210_ADDR:
 8291 0000 40       		.byte	64
 8292              		.section	.data.VS8812_ADDR,"aw",%progbits
 8295              	VS8812_ADDR:
 8296 0000 12       		.byte	18
 8297              		.section	.data.gMode0LoopSecCmpVal,"aw",%progbits
 8298              		.set	.LANCHOR31,. + 0
 8301              	gMode0LoopSecCmpVal:
 8302 0000 0A       		.byte	10
ARM GAS  /tmp/ccs2VtGF.s 			page 249


 8303              		.section	.data.gRxLoopFlg,"aw",%progbits
 8306              	gRxLoopFlg:
 8307 0000 01       		.byte	1
 8308              		.section	.rodata.CHECK_HDMI720P50.str1.4,"aMS",%progbits,1
 8309              		.align	2
 8310              	.LC20:
 8311 0000 5372632F 		.ascii	"Src/main.c\000"
 8311      6D61696E 
 8311      2E6300
 8312 000b 00       		.space	1
 8313              	.LC21:
 8314 000c 25732C25 		.ascii	"%s,%s,%d:ch%d, InputMode=%d \015\012\000"
 8314      732C2564 
 8314      3A636825 
 8314      642C2049 
 8314      6E707574 
 8315              		.section	.rodata.GetRS232_CMD.str1.4,"aMS",%progbits,1
 8316              		.align	2
 8317              	.LC1:
 8318 0000 52784275 		.ascii	"RxBufIndex=%d,str=%s\015\012\000"
 8318      66496E64 
 8318      65783D25 
 8318      642C7374 
 8318      723D2573 
 8319 0017 00       		.space	1
 8320              	.LC2:
 8321 0018 49724E75 		.ascii	"IrNum=0x%02x\015\012\000"
 8321      6D3D3078 
 8321      25303278 
 8321      0D0A00
 8322              		.section	.rodata.HDMI_VideoModeDetect.str1.4,"aMS",%progbits,1
 8323              		.align	2
 8324              	.LC22:
 8325 0000 25732C25 		.ascii	"%s,%s,%d:##ch%d, VS4210_Rx_NoSignal\015\012\000"
 8325      732C2564 
 8325      3A232363 
 8325      6825642C 
 8325      20565334 
 8326 0026 0000     		.space	2
 8327              	.LC23:
 8328 0028 25732C25 		.ascii	"%s,%s,%d:ch%d, HDMI=720P50 no support\015\012\000"
 8328      732C2564 
 8328      3A636825 
 8328      642C2048 
 8328      444D493D 
 8329              		.section	.rodata.HS_Select_Win.str1.4,"aMS",%progbits,1
 8330              		.align	2
 8331              	.LC38:
 8332 0000 53656C65 		.ascii	"Selected window 0\015\000"
 8332      63746564 
 8332      2077696E 
 8332      646F7720 
 8332      300D00
 8333 0013 00       		.space	1
 8334              	.LC39:
 8335 0014 25732C25 		.ascii	"%s,%s,%d:ch1, HDMI=720P50  no support\015\012\000"
 8335      732C2564 
ARM GAS  /tmp/ccs2VtGF.s 			page 250


 8335      3A636831 
 8335      2C204844 
 8335      4D493D37 
 8336              	.LC40:
 8337 003c 53656C65 		.ascii	"Selected window 1\015\000"
 8337      63746564 
 8337      2077696E 
 8337      646F7720 
 8337      310D00
 8338 004f 00       		.space	1
 8339              	.LC41:
 8340 0050 283D3129 		.ascii	"(=1)\000"
 8340      00
 8341 0055 000000   		.space	3
 8342              	.LC42:
 8343 0058 283D3229 		.ascii	"(=2)\000"
 8343      00
 8344              		.section	.rodata.SET_AHD_MDOE.str1.4,"aMS",%progbits,1
 8345              		.align	2
 8346              	.LC37:
 8347 0000 0D0A5345 		.ascii	"\015\012SET_AHD_MDOE...\000"
 8347      545F4148 
 8347      445F4D44 
 8347      4F452E2E 
 8347      2E00
 8348              		.section	.rodata.SET_Audio_Mute.str1.4,"aMS",%progbits,1
 8349              		.align	2
 8350              	.LC0:
 8351 0000 282A5345 		.ascii	"(*SET_Audio_Mute=%d)\000"
 8351      545F4175 
 8351      64696F5F 
 8351      4D757465 
 8351      3D256429 
 8352              		.section	.rodata.SET_VS4210_1280_720_out.str1.4,"aMS",%progbits,1
 8353              		.align	2
 8354              	.LC36:
 8355 0000 0D0A5345 		.ascii	"\015\012SET_VS4210_1280_720_out\000"
 8355      545F5653 
 8355      34323130 
 8355      5F313238 
 8355      305F3732 
 8356              		.section	.rodata.SET_VS4210_720_480_out.str1.4,"aMS",%progbits,1
 8357              		.align	2
 8358              	.LC35:
 8359 0000 0D0A5345 		.ascii	"\015\012SET_VS4210_720_480_out \000"
 8359      545F5653 
 8359      34323130 
 8359      5F373230 
 8359      5F343830 
 8360              		.section	.rodata.TP_bt1120_1080P_1080P_mode0_w0.str1.4,"aMS",%progbits,1
 8361              		.align	2
 8362              	.LC31:
 8363 0000 0D0A4C6F 		.ascii	"\015\012Loading VS4210 AHD table 1080P... \000"
 8363      6164696E 
 8363      67205653 
 8363      34323130 
 8363      20414844 
ARM GAS  /tmp/ccs2VtGF.s 			page 251


 8364              		.section	.rodata.TP_bt1120_720P_1080P_mode0_w0.str1.4,"aMS",%progbits,1
 8365              		.align	2
 8366              	.LC32:
 8367 0000 0D0A4C6F 		.ascii	"\015\012Loading VS4210 AHD table 720P... \000"
 8367      6164696E 
 8367      67205653 
 8367      34323130 
 8367      20414844 
 8368              		.section	.rodata.TP_bt1120_NTSC_1080P_mode0_w0.str1.4,"aMS",%progbits,1
 8369              		.align	2
 8370              	.LC33:
 8371 0000 0D0A4C6F 		.ascii	"\015\012Loading VS4210 AHD table NTSC... \000"
 8371      6164696E 
 8371      67205653 
 8371      34323130 
 8371      20414844 
 8372              		.section	.rodata.TP_bt1120_PAL_1080P_mode0_w0.str1.4,"aMS",%progbits,1
 8373              		.align	2
 8374              	.LC34:
 8375 0000 0D0A4C6F 		.ascii	"\015\012Loading VS4210 AHD table PAL... \000"
 8375      6164696E 
 8375      67205653 
 8375      34323130 
 8375      20414844 
 8376              		.section	.rodata.WaitPowerOn.str1.4,"aMS",%progbits,1
 8377              		.align	2
 8378              	.LC29:
 8379 0000 0D0A2850 		.ascii	"\015\012(Power off..)\000"
 8379      6F776572 
 8379      206F6666 
 8379      2E2E2900 
 8380              	.LC30:
 8381 0010 0D0A2850 		.ascii	"\015\012(Power ON..)\000"
 8381      6F776572 
 8381      204F4E2E 
 8381      2E2900
 8382              		.section	.rodata.__FUNCTION__.9366,"a",%progbits
 8383              		.align	2
 8384              		.set	.LANCHOR8,. + 0
 8387              	__FUNCTION__.9366:
 8388 0000 43484543 		.ascii	"CHECK_HDMI720P50\000"
 8388      4B5F4844 
 8388      4D493732 
 8388      30503530 
 8388      00
 8389              		.section	.rodata.__FUNCTION__.9371,"a",%progbits
 8390              		.align	2
 8391              		.set	.LANCHOR11,. + 0
 8394              	__FUNCTION__.9371:
 8395 0000 48444D49 		.ascii	"HDMI_VideoModeDetect\000"
 8395      5F566964 
 8395      656F4D6F 
 8395      64654465 
 8395      74656374 
 8396              		.section	.rodata.__FUNCTION__.9418,"a",%progbits
 8397              		.align	2
 8398              		.set	.LANCHOR34,. + 0
ARM GAS  /tmp/ccs2VtGF.s 			page 252


 8401              	__FUNCTION__.9418:
 8402 0000 6D61696E 		.ascii	"main\000"
 8402      00
 8403              		.section	.rodata.__FUNCTION__.9429,"a",%progbits
 8404              		.align	2
 8405              		.set	.LANCHOR32,. + 0
 8408              	__FUNCTION__.9429:
 8409 0000 6D61696E 		.ascii	"main_loop\000"
 8409      5F6C6F6F 
 8409      7000
 8410              		.section	.rodata.__FUNCTION__.9508,"a",%progbits
 8411              		.align	2
 8412              		.set	.LANCHOR25,. + 0
 8415              	__FUNCTION__.9508:
 8416 0000 48535F53 		.ascii	"HS_Select_Win\000"
 8416      656C6563 
 8416      745F5769 
 8416      6E00
 8417              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 8418              		.align	2
 8419              	.LC45:
 8420 0000 25732C25 		.ascii	"%s,%s,%d:Init HDMI RX,Chip(%d)....\015\012\000"
 8420      732C2564 
 8420      3A496E69 
 8420      74204844 
 8420      4D492052 
 8421 0025 000000   		.space	3
 8422              	.LC46:
 8423 0028 25732C25 		.ascii	"%s,%s,%d:IT66021 chip num=%d , 02reg=0x%02x\015\012"
 8423      732C2564 
 8423      3A495436 
 8423      36303231 
 8423      20636869 
 8424 0055 00       		.ascii	"\000"
 8425 0056 0000     		.space	2
 8426              	.LC47:
 8427 0058 25732C25 		.ascii	"%s,%s,%d:VS4210 chip ID = 0x%02x\015\012\000"
 8427      732C2564 
 8427      3A565334 
 8427      32313020 
 8427      63686970 
 8428 007b 00       		.space	1
 8429              	.LC48:
 8430 007c 25732C25 		.ascii	"%s,%s,%d:VS4210 Init. (Startting...)\015\012\000"
 8430      732C2564 
 8430      3A565334 
 8430      32313020 
 8430      496E6974 
 8431 00a3 00       		.space	1
 8432              	.LC49:
 8433 00a4 0D0A4D61 		.ascii	"\015\012Main Loop...\000"
 8433      696E204C 
 8433      6F6F702E 
 8433      2E2E00
 8434              		.section	.rodata.main_init.str1.4,"aMS",%progbits,1
 8435              		.align	2
 8436              	.LC24:
ARM GAS  /tmp/ccs2VtGF.s 			page 253


 8437 0000 0D0A5072 		.ascii	"\015\012Prev.FW:%04x\015\012\000"
 8437      65762E46 
 8437      573A2530 
 8437      34780D0A 
 8437      00
 8438 0011 000000   		.space	3
 8439              	.LC25:
 8440 0014 0D0A4375 		.ascii	"\015\012Curr.FW:%04x\000"
 8440      72722E46 
 8440      573A2530 
 8440      347800
 8441 0023 00       		.space	1
 8442              	.LC26:
 8443 0024 0D0A5B4D 		.ascii	"\015\012[MSG]main_init()=> rev != FWVER & call Clea"
 8443      53475D6D 
 8443      61696E5F 
 8443      696E6974 
 8443      28293D3E 
 8444 0051 72426173 		.ascii	"rBasicEE()\015\012\000"
 8444      69634545 
 8444      28290D0A 
 8444      00
 8445 005e 0000     		.space	2
 8446              	.LC27:
 8447 0060 0D0A4361 		.ascii	"\015\012Cannot access EEPROM!!!!\000"
 8447      6E6E6F74 
 8447      20616363 
 8447      65737320 
 8447      45455052 
 8448 007b 00       		.space	1
 8449              	.LC28:
 8450 007c 0D0A4E6F 		.ascii	"\015\012No initialize\000"
 8450      20696E69 
 8450      7469616C 
 8450      697A6500 
 8451              		.section	.rodata.main_loop.str1.4,"aMS",%progbits,1
 8452              		.align	2
 8453              	.LC43:
 8454 0000 25732C25 		.ascii	"%s,%s,%d:LOOP CH=%d,SMP Sec=%d\015\012\000"
 8454      732C2564 
 8454      3A4C4F4F 
 8454      50204348 
 8454      3D25642C 
 8455 0021 000000   		.space	3
 8456              	.LC44:
 8457 0024 25732C25 		.ascii	"%s,%s,%d:Loop CH=%d,SecCount=%d\015\012\000"
 8457      732C2564 
 8457      3A4C6F6F 
 8457      70204348 
 8457      3D25642C 
 8458              		.section	.rodata.setloopoutmode.str1.4,"aMS",%progbits,1
 8459              		.align	2
 8460              	.LC3:
 8461 0000 56533432 		.ascii	"VS4210_MODE0_w0\015\000"
 8461      31305F4D 
 8461      4F444530 
 8461      5F77300D 
ARM GAS  /tmp/ccs2VtGF.s 			page 254


 8461      00
 8462 0011 000000   		.space	3
 8463              	.LC4:
 8464 0014 56533432 		.ascii	"VS4210_MODE0_w1\015\000"
 8464      31305F4D 
 8464      4F444530 
 8464      5F77310D 
 8464      00
 8465 0025 000000   		.space	3
 8466              	.LC5:
 8467 0028 56533432 		.ascii	"VS4210_MODE0_w2\015\000"
 8467      31305F4D 
 8467      4F444530 
 8467      5F77320D 
 8467      00
 8468 0039 000000   		.space	3
 8469              	.LC6:
 8470 003c 56533432 		.ascii	"VS4210_MODE0_w3\015\000"
 8470      31305F4D 
 8470      4F444530 
 8470      5F77330D 
 8470      00
 8471 004d 000000   		.space	3
 8472              	.LC7:
 8473 0050 56533432 		.ascii	"VS4210_MODE1\015\000"
 8473      31305F4D 
 8473      4F444531 
 8473      0D00
 8474 005e 0000     		.space	2
 8475              	.LC8:
 8476 0060 56533432 		.ascii	"VS4210_MODE2\015\000"
 8476      31305F4D 
 8476      4F444532 
 8476      0D00
 8477 006e 0000     		.space	2
 8478              	.LC9:
 8479 0070 56533432 		.ascii	"VS4210_MODE12 ch1 ch2\015\000"
 8479      31305F4D 
 8479      4F444531 
 8479      32206368 
 8479      31206368 
 8480 0087 00       		.space	1
 8481              	.LC10:
 8482 0088 56533432 		.ascii	"VS4210_MODE12 ch1 ch4\015\000"
 8482      31305F4D 
 8482      4F444531 
 8482      32206368 
 8482      31206368 
 8483 009f 00       		.space	1
 8484              	.LC11:
 8485 00a0 56533432 		.ascii	"VS4210_MODE12 ch4 ch2\015\000"
 8485      31305F4D 
 8485      4F444531 
 8485      32206368 
 8485      34206368 
 8486 00b7 00       		.space	1
 8487              	.LC12:
ARM GAS  /tmp/ccs2VtGF.s 			page 255


 8488 00b8 56533432 		.ascii	"VS4210_MODE12 ch4 ch3\015\000"
 8488      31305F4D 
 8488      4F444531 
 8488      32206368 
 8488      34206368 
 8489 00cf 00       		.space	1
 8490              	.LC13:
 8491 00d0 56533432 		.ascii	"VS4210_MODE12 ch2 ch1\015\000"
 8491      31305F4D 
 8491      4F444531 
 8491      32206368 
 8491      32206368 
 8492 00e7 00       		.space	1
 8493              	.LC14:
 8494 00e8 56533432 		.ascii	"VS4210_MODE12 ch2 ch3\015\000"
 8494      31305F4D 
 8494      4F444531 
 8494      32206368 
 8494      32206368 
 8495 00ff 00       		.space	1
 8496              	.LC15:
 8497 0100 56533432 		.ascii	"VS4210_MODE12 ch2 ch4\015\000"
 8497      31305F4D 
 8497      4F444531 
 8497      32206368 
 8497      32206368 
 8498 0117 00       		.space	1
 8499              	.LC16:
 8500 0118 56533432 		.ascii	"VS4210_MODE12 ch1 ch3\015\000"
 8500      31305F4D 
 8500      4F444531 
 8500      32206368 
 8500      31206368 
 8501 012f 00       		.space	1
 8502              	.LC17:
 8503 0130 56533432 		.ascii	"VS4210_MODE12 ch3 ch2\015\000"
 8503      31305F4D 
 8503      4F444531 
 8503      32206368 
 8503      33206368 
 8504 0147 00       		.space	1
 8505              	.LC18:
 8506 0148 56533432 		.ascii	"VS4210_MODE12 ch3 ch4\015\000"
 8506      31305F4D 
 8506      4F444531 
 8506      32206368 
 8506      33206368 
 8507 015f 00       		.space	1
 8508              	.LC19:
 8509 0160 56533432 		.ascii	"VS4210_MODE12 ch3 ch1\015\000"
 8509      31305F4D 
 8509      4F444531 
 8509      32206368 
 8509      33206368 
 8510              		.text
 8511              	.Letext0:
 8512              		.file 2 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_
ARM GAS  /tmp/ccs2VtGF.s 			page 256


 8513              		.file 3 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 8514              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 8515              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 8516              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 8517              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 8518              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 8519              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 8520              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 8521              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 8522              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 8523              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 8524              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 8525              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 8526              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 8527              		.file 17 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 8528              		.file 18 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 8529              		.file 19 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/st
 8530              		.file 20 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 8531              		.file 21 "VS4210/VXIS_Extern_Define.h"
 8532              		.file 22 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 8533              		.file 23 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/ctype.h"
 8534              		.file 24 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/errno.h"
 8535              		.file 25 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/unistd.h"
 8536              		.file 26 "sw_i2c/VX_swi2c.h"
 8537              		.file 27 "VS4210/VS4210.h"
 8538              		.file 28 "TP2824/tpinc/TP2802.h"
 8539              		.file 29 "VS4210/audio.h"
 8540              		.file 30 "VS4210/GT911.h"
 8541              		.file 31 "VS4210/VX_OSD_Simple.h"
 8542              		.file 32 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdio.h"
 8543              		.file 33 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 8544              		.file 34 "<built-in>"
 8545              		.file 35 "VS4210/Printf.h"
 8546              		.file 36 "VS4210/ite66121.h"
 8547              		.file 37 "VS4210/monitor.h"
 8548              		.file 38 "VS4210/TOA_Protocol.h"
 8549              		.file 39 "sw_i2c/sw_i2c0.h"
 8550              		.file 40 "sw_i2c/sw_i2c1.h"
 8551              		.file 41 "sw_i2c/sw_i2c2.h"
 8552              		.file 42 "Inc/main.h"
 8553              		.file 43 "VS4210/HDMI_RX_lib.h"
 8554              		.file 44 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/string.h"
 8555              		.file 45 "VS4210/keyremo.h"
 8556              		.file 46 "VS4210/Etc_eep.h"
ARM GAS  /tmp/ccs2VtGF.s 			page 257


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccs2VtGF.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccs2VtGF.s:22     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccs2VtGF.s:171    .text.MX_GPIO_Init:00000000000000c8 $d
     /tmp/ccs2VtGF.s:179    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccs2VtGF.s:185    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccs2VtGF.s:256    .text.MX_TIM3_Init:000000000000004c $d
                            *COM*:0000000000000040 htim3
     /tmp/ccs2VtGF.s:262    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccs2VtGF.s:268    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccs2VtGF.s:308    .text.MX_USART1_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart1
     /tmp/ccs2VtGF.s:314    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccs2VtGF.s:320    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccs2VtGF.s:360    .text.MX_USART2_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart2
     /tmp/ccs2VtGF.s:366    .text.HDMI_AudioModeDetect:0000000000000000 $t
     /tmp/ccs2VtGF.s:372    .text.HDMI_AudioModeDetect:0000000000000000 HDMI_AudioModeDetect
     /tmp/ccs2VtGF.s:436    .text.HDMI_AudioModeDetect:0000000000000050 $d
                            *COM*:0000000000000001 gPreAudioSampleFreq
     /tmp/ccs2VtGF.s:444    .text._write:0000000000000000 $t
     /tmp/ccs2VtGF.s:451    .text._write:0000000000000000 _write
     /tmp/ccs2VtGF.s:503    .text._write:0000000000000030 $d
     /tmp/ccs2VtGF.s:508    .text.Audio_Sel:0000000000000000 $t
     /tmp/ccs2VtGF.s:515    .text.Audio_Sel:0000000000000000 Audio_Sel
     /tmp/ccs2VtGF.s:537    .text.Audio_Sel:000000000000000e $d
     /tmp/ccs2VtGF.s:767    .text.Audio_Sel:0000000000000170 $d
     /tmp/ccs2VtGF.s:776    .text.SET_Audio_Mute:0000000000000000 $t
     /tmp/ccs2VtGF.s:783    .text.SET_Audio_Mute:0000000000000000 SET_Audio_Mute
     /tmp/ccs2VtGF.s:827    .text.SET_Audio_Mute:0000000000000028 $d
     /tmp/ccs2VtGF.s:833    .text.InitialTimerEvent:0000000000000000 $t
     /tmp/ccs2VtGF.s:840    .text.InitialTimerEvent:0000000000000000 InitialTimerEvent
     /tmp/ccs2VtGF.s:860    .text.GetRS232_CMD:0000000000000000 $t
     /tmp/ccs2VtGF.s:867    .text.GetRS232_CMD:0000000000000000 GetRS232_CMD
     /tmp/ccs2VtGF.s:949    .text.GetRS232_CMD:0000000000000060 $d
     /tmp/ccs2VtGF.s:958    .text.setloopoutmode:0000000000000000 $t
     /tmp/ccs2VtGF.s:965    .text.setloopoutmode:0000000000000000 setloopoutmode
     /tmp/ccs2VtGF.s:985    .text.setloopoutmode:000000000000000c $d
     /tmp/ccs2VtGF.s:1005   .text.setloopoutmode:0000000000000034 $t
     /tmp/ccs2VtGF.s:1549   .text.setloopoutmode:00000000000002f0 $d
                            *COM*:000000000000000a pVS4210_JointKind1
                            *COM*:0000000000000001 CAMA_M
                            *COM*:0000000000000004 gabVXIS_Input_mirrorH
                            *COM*:0000000000000001 CAMB_M
                            *COM*:0000000000000001 CAMC_M
                            *COM*:0000000000000001 CAMR_M
     /tmp/ccs2VtGF.s:1575   .text.setloopoutmode:000000000000034c $t
     /tmp/ccs2VtGF.s:1694   .text.setloopoutmode:00000000000003e8 $d
     /tmp/ccs2VtGF.s:1709   .text.CHECK_HDMI720P50:0000000000000000 $t
     /tmp/ccs2VtGF.s:1716   .text.CHECK_HDMI720P50:0000000000000000 CHECK_HDMI720P50
     /tmp/ccs2VtGF.s:1824   .text.CHECK_HDMI720P50:0000000000000068 $d
     /tmp/ccs2VtGF.s:1833   .text.HDMI_VideoModeDetect:0000000000000000 $t
     /tmp/ccs2VtGF.s:1839   .text.HDMI_VideoModeDetect:0000000000000000 HDMI_VideoModeDetect
     /tmp/ccs2VtGF.s:2175   .text.HDMI_VideoModeDetect:00000000000001e8 $d
                            *COM*:0000000000000004 newInRes
                            *COM*:000000000000000a pVS4210_MutiWindows1
ARM GAS  /tmp/ccs2VtGF.s 			page 258


     /tmp/ccs2VtGF.s:2202   .text.main_init:0000000000000000 $t
     /tmp/ccs2VtGF.s:2209   .text.main_init:0000000000000000 main_init
     /tmp/ccs2VtGF.s:2304   .text.main_init:0000000000000074 $d
                            *COM*:0000000000000001 DebugLevel
     /tmp/ccs2VtGF.s:2314   .text.LCDPowerON:0000000000000000 $t
     /tmp/ccs2VtGF.s:2321   .text.LCDPowerON:0000000000000000 LCDPowerON
     /tmp/ccs2VtGF.s:2334   .text.LCDPowerOFF:0000000000000000 $t
     /tmp/ccs2VtGF.s:2341   .text.LCDPowerOFF:0000000000000000 LCDPowerOFF
     /tmp/ccs2VtGF.s:2354   .text.uComOnChipInitial:0000000000000000 $t
     /tmp/ccs2VtGF.s:2361   .text.uComOnChipInitial:0000000000000000 uComOnChipInitial
     /tmp/ccs2VtGF.s:2396   .text.uComOnChipInitial:0000000000000024 $d
     /tmp/ccs2VtGF.s:2401   .text.user_pwm_setvalue:0000000000000000 $t
     /tmp/ccs2VtGF.s:2408   .text.user_pwm_setvalue:0000000000000000 user_pwm_setvalue
     /tmp/ccs2VtGF.s:2455   .text.user_pwm_setvalue:0000000000000028 $d
                            *COM*:0000000000000040 htim2
     /tmp/ccs2VtGF.s:2460   .text.AdjustAutoDayNight:0000000000000000 $t
     /tmp/ccs2VtGF.s:2467   .text.AdjustAutoDayNight:0000000000000000 AdjustAutoDayNight
     /tmp/ccs2VtGF.s:2590   .text.AdjustAutoDayNight:000000000000008c $d
     /tmp/ccs2VtGF.s:2597   .text.LoadEEPROM:0000000000000000 $t
     /tmp/ccs2VtGF.s:2604   .text.LoadEEPROM:0000000000000000 LoadEEPROM
     /tmp/ccs2VtGF.s:2617   .text.WaitPowerOn:0000000000000000 $t
     /tmp/ccs2VtGF.s:2624   .text.WaitPowerOn:0000000000000000 WaitPowerOn
     /tmp/ccs2VtGF.s:2729   .text.WaitPowerOn:0000000000000084 $d
     /tmp/ccs2VtGF.s:2736   .text.VS4210_FULL88init2:0000000000000000 $t
     /tmp/ccs2VtGF.s:2743   .text.VS4210_FULL88init2:0000000000000000 VS4210_FULL88init2
     /tmp/ccs2VtGF.s:2787   .text.VS4210_FULL88init2:000000000000001c $d
     /tmp/ccs2VtGF.s:2792   .text.TP_bt1120_1080P_1080P_mode0_w0:0000000000000000 $t
     /tmp/ccs2VtGF.s:2799   .text.TP_bt1120_1080P_1080P_mode0_w0:0000000000000000 TP_bt1120_1080P_1080P_mode0_w0
     /tmp/ccs2VtGF.s:2823   .text.TP_bt1120_1080P_1080P_mode0_w0:0000000000000010 $d
     /tmp/ccs2VtGF.s:2829   .text.TP_bt1120_720P_1080P_mode0_w0:0000000000000000 $t
     /tmp/ccs2VtGF.s:2836   .text.TP_bt1120_720P_1080P_mode0_w0:0000000000000000 TP_bt1120_720P_1080P_mode0_w0
     /tmp/ccs2VtGF.s:2865   .text.TP_bt1120_720P_1080P_mode0_w0:0000000000000018 $d
     /tmp/ccs2VtGF.s:2871   .text.TP_bt1120_NTSC_1080P_mode0_w0:0000000000000000 $t
     /tmp/ccs2VtGF.s:2878   .text.TP_bt1120_NTSC_1080P_mode0_w0:0000000000000000 TP_bt1120_NTSC_1080P_mode0_w0
     /tmp/ccs2VtGF.s:2902   .text.TP_bt1120_NTSC_1080P_mode0_w0:0000000000000010 $d
     /tmp/ccs2VtGF.s:2908   .text.TP_bt1120_PAL_1080P_mode0_w0:0000000000000000 $t
     /tmp/ccs2VtGF.s:2915   .text.TP_bt1120_PAL_1080P_mode0_w0:0000000000000000 TP_bt1120_PAL_1080P_mode0_w0
     /tmp/ccs2VtGF.s:2939   .text.TP_bt1120_PAL_1080P_mode0_w0:0000000000000010 $d
     /tmp/ccs2VtGF.s:2945   .text.SET_VS4210_720_480_out:0000000000000000 $t
     /tmp/ccs2VtGF.s:2952   .text.SET_VS4210_720_480_out:0000000000000000 SET_VS4210_720_480_out
     /tmp/ccs2VtGF.s:3601   .text.SET_VS4210_720_480_out:00000000000003fc $d
     /tmp/ccs2VtGF.s:3604   .text.SET_VS4210_720_480_out:0000000000000400 $t
     /tmp/ccs2VtGF.s:4169   .text.SET_VS4210_1280_720_out:0000000000000000 $t
     /tmp/ccs2VtGF.s:4176   .text.SET_VS4210_1280_720_out:0000000000000000 SET_VS4210_1280_720_out
     /tmp/ccs2VtGF.s:4825   .text.SET_VS4210_1280_720_out:00000000000003fc $d
     /tmp/ccs2VtGF.s:4828   .text.SET_VS4210_1280_720_out:0000000000000400 $t
     /tmp/ccs2VtGF.s:5393   .text.SET_AHD_MDOE:0000000000000000 $t
     /tmp/ccs2VtGF.s:5400   .text.SET_AHD_MDOE:0000000000000000 SET_AHD_MDOE
     /tmp/ccs2VtGF.s:6049   .text.SET_AHD_MDOE:00000000000003fc $d
     /tmp/ccs2VtGF.s:6052   .text.SET_AHD_MDOE:0000000000000400 $t
     /tmp/ccs2VtGF.s:6707   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccs2VtGF.s:6714   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccs2VtGF.s:6787   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccs2VtGF.s:6794   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccs2VtGF.s:6873   .text.HAL_TIM_PeriodElapsedCallback:0000000000000064 $d
     /tmp/ccs2VtGF.s:6887   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccs2VtGF.s:6894   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
ARM GAS  /tmp/ccs2VtGF.s 			page 259


     /tmp/ccs2VtGF.s:6980   .text.HAL_UART_RxCpltCallback:0000000000000068 $d
     /tmp/ccs2VtGF.s:6994   .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/ccs2VtGF.s:7001   .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/ccs2VtGF.s:7015   .text.HS_Select_Win:0000000000000000 $t
     /tmp/ccs2VtGF.s:7022   .text.HS_Select_Win:0000000000000000 HS_Select_Win
     /tmp/ccs2VtGF.s:7237   .text.HS_Select_Win:000000000000011c $d
     /tmp/ccs2VtGF.s:7255   .text.main_loop:0000000000000000 $t
     /tmp/ccs2VtGF.s:7262   .text.main_loop:0000000000000000 main_loop
     /tmp/ccs2VtGF.s:7541   .text.main_loop:000000000000018c $d
     /tmp/ccs2VtGF.s:7562   .text.main:0000000000000000 $t
     /tmp/ccs2VtGF.s:7569   .text.main:0000000000000000 main
     /tmp/ccs2VtGF.s:7875   .text.main:00000000000001a8 $d
                            *COM*:0000000000000100 ExOsdContent
     /tmp/ccs2VtGF.s:7902   .text.Error_Handler:0000000000000000 $t
     /tmp/ccs2VtGF.s:7909   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccs2VtGF.s:8263   .data.OSDStateFlg:0000000000000000 OSDStateFlg
     /tmp/ccs2VtGF.s:8054   .bss.OSDSecCount:0000000000000000 OSDSecCount
     /tmp/ccs2VtGF.s:8306   .data.gRxLoopFlg:0000000000000000 gRxLoopFlg
     /tmp/ccs2VtGF.s:8075   .bss.OSD_Show_Flg:0000000000000000 OSD_Show_Flg
     /tmp/ccs2VtGF.s:8131   .bss.Tim1_count:0000000000000000 Tim1_count
     /tmp/ccs2VtGF.s:8143   .bss.TxCount:0000000000000000 TxCount
     /tmp/ccs2VtGF.s:8163   .bss.bSignal:0000000000000000 bSignal
     /tmp/ccs2VtGF.s:8301   .data.gMode0LoopSecCmpVal:0000000000000000 gMode0LoopSecCmpVal
     /tmp/ccs2VtGF.s:8189   .bss.gMode0LoopSecCount:0000000000000000 gMode0LoopSecCount
     /tmp/ccs2VtGF.s:8183   .bss.gMode0LoopFlg:0000000000000000 gMode0LoopFlg
     /tmp/ccs2VtGF.s:8177   .bss.gMode0LoopCount:0000000000000000 gMode0LoopCount
     /tmp/ccs2VtGF.s:8202   .bss.gbAUDO_INDEX:0000000000000000 gbAUDO_INDEX
                            *COM*:0000000000000001 gPrebAUDO_INDEX
     /tmp/ccs2VtGF.s:7988   .bss.CheckSelectInputMode:0000000000000000 CheckSelectInputMode
     /tmp/ccs2VtGF.s:8124   .bss.SelectInputMode:0000000000000000 SelectInputMode
     /tmp/ccs2VtGF.s:8257   .data.OSDPreSecCount:0000000000000000 OSDPreSecCount
     /tmp/ccs2VtGF.s:8282   .data.PrebVXIS_InputMode:0000000000000000 PrebVXIS_InputMode
     /tmp/ccs2VtGF.s:7982   .bss.CURRENT_CH:0000000000000000 CURRENT_CH
     /tmp/ccs2VtGF.s:8250   .data.BOOT_ISSUE:0000000000000000 BOOT_ISSUE
     /tmp/ccs2VtGF.s:8068   .bss.OSD_SPEAKER:0000000000000000 OSD_SPEAKER
     /tmp/ccs2VtGF.s:8061   .bss.OSD_MIRROR:0000000000000000 OSD_MIRROR
                            *COM*:0000000000000001 Priority
                            *COM*:0000000000000001 SelectModeType
     /tmp/ccs2VtGF.s:8224   .bss.tptic:0000000000000000 tptic
     /tmp/ccs2VtGF.s:8212   .bss.keytic:0000000000000000 keytic
     /tmp/ccs2VtGF.s:8275   .data.PowerFlag:0000000000000000 PowerFlag
                            *COM*:0000000000000001 TimeStep
     /tmp/ccs2VtGF.s:8269   .data.PWMLevel:0000000000000000 PWMLevel
     /tmp/ccs2VtGF.s:7976   .bss.AutoDayNightDelay:0000000000000000 AutoDayNightDelay
     /tmp/ccs2VtGF.s:8048   .bss.LightSensor_ADC:0000000000000000 LightSensor_ADC
     /tmp/ccs2VtGF.s:7994   .bss.DayNightLevel:0000000000000000 DayNightLevel
     /tmp/ccs2VtGF.s:8207   .bss.half_scaler:0000000000000000 half_scaler
                            *COM*:0000000000000001 ManVidRes
     /tmp/ccs2VtGF.s:8295   .data.VS8812_ADDR:0000000000000000 VS8812_ADDR
     /tmp/ccs2VtGF.s:8290   .data.VS4210_ADDR:0000000000000000 VS4210_ADDR
                            *COM*:0000000000000030 hadc1
     /tmp/ccs2VtGF.s:7977   .bss.AutoDayNightDelay:0000000000000000 $d
     /tmp/ccs2VtGF.s:7983   .bss.CURRENT_CH:0000000000000000 $d
     /tmp/ccs2VtGF.s:7989   .bss.CheckSelectInputMode:0000000000000000 $d
     /tmp/ccs2VtGF.s:7995   .bss.DayNightLevel:0000000000000000 $d
     /tmp/ccs2VtGF.s:7997   .bss.DebugFlg:0000000000000000 $d
     /tmp/ccs2VtGF.s:8000   .bss.DebugFlg:0000000000000000 DebugFlg
ARM GAS  /tmp/ccs2VtGF.s 			page 260


     /tmp/ccs2VtGF.s:8003   .bss.IR_4BYTE:0000000000000000 $d
     /tmp/ccs2VtGF.s:8006   .bss.IR_4BYTE:0000000000000000 IR_4BYTE
     /tmp/ccs2VtGF.s:8011   .bss.IR_Code:0000000000000000 IR_Code
     /tmp/ccs2VtGF.s:8012   .bss.IR_Code:0000000000000000 $d
     /tmp/ccs2VtGF.s:8016   .bss.IR_END_Flg:0000000000000000 IR_END_Flg
     /tmp/ccs2VtGF.s:8017   .bss.IR_END_Flg:0000000000000000 $d
     /tmp/ccs2VtGF.s:8021   .bss.IR_IRQFlg:0000000000000000 IR_IRQFlg
     /tmp/ccs2VtGF.s:8022   .bss.IR_IRQFlg:0000000000000000 $d
     /tmp/ccs2VtGF.s:8026   .bss.IR_IRQ_Index:0000000000000000 IR_IRQ_Index
     /tmp/ccs2VtGF.s:8027   .bss.IR_IRQ_Index:0000000000000000 $d
     /tmp/ccs2VtGF.s:8029   .bss.IR_PlusTimeVal:0000000000000000 $d
     /tmp/ccs2VtGF.s:8032   .bss.IR_PlusTimeVal:0000000000000000 IR_PlusTimeVal
     /tmp/ccs2VtGF.s:8037   .bss.IR_ShiftCount:0000000000000000 IR_ShiftCount
     /tmp/ccs2VtGF.s:8038   .bss.IR_ShiftCount:0000000000000000 $d
     /tmp/ccs2VtGF.s:8042   .bss.IR_StartFlg:0000000000000000 IR_StartFlg
     /tmp/ccs2VtGF.s:8043   .bss.IR_StartFlg:0000000000000000 $d
     /tmp/ccs2VtGF.s:8045   .bss.LightSensor_ADC:0000000000000000 $d
     /tmp/ccs2VtGF.s:8055   .bss.OSDSecCount:0000000000000000 $d
     /tmp/ccs2VtGF.s:8057   .bss.OSD_MIRROR:0000000000000000 $d
     /tmp/ccs2VtGF.s:8064   .bss.OSD_SPEAKER:0000000000000000 $d
     /tmp/ccs2VtGF.s:8071   .bss.OSD_Show_Flg:0000000000000000 $d
     /tmp/ccs2VtGF.s:8080   .bss.PreIR_Code:0000000000000000 PreIR_Code
     /tmp/ccs2VtGF.s:8081   .bss.PreIR_Code:0000000000000000 $d
     /tmp/ccs2VtGF.s:8085   .bss.PreIR_IRQ_Index:0000000000000000 PreIR_IRQ_Index
     /tmp/ccs2VtGF.s:8086   .bss.PreIR_IRQ_Index:0000000000000000 $d
     /tmp/ccs2VtGF.s:8088   .bss.Rx2_data:0000000000000000 $d
     /tmp/ccs2VtGF.s:8092   .bss.Rx2_data:0000000000000000 Rx2_data
     /tmp/ccs2VtGF.s:8095   .bss.RxBufIndex:0000000000000000 $d
     /tmp/ccs2VtGF.s:8099   .bss.RxBufIndex:0000000000000000 RxBufIndex
     /tmp/ccs2VtGF.s:8102   .bss.Rx_data:0000000000000000 $d
     /tmp/ccs2VtGF.s:8106   .bss.Rx_data:0000000000000000 Rx_data
     /tmp/ccs2VtGF.s:8109   .bss.Rx_indx:0000000000000000 $d
     /tmp/ccs2VtGF.s:8112   .bss.Rx_indx:0000000000000000 Rx_indx
     /tmp/ccs2VtGF.s:8115   .bss.RxiCount:0000000000000000 $d
     /tmp/ccs2VtGF.s:8118   .bss.RxiCount:0000000000000000 RxiCount
     /tmp/ccs2VtGF.s:8125   .bss.SelectInputMode:0000000000000000 $d
     /tmp/ccs2VtGF.s:8127   .bss.Tim1_count:0000000000000000 $d
     /tmp/ccs2VtGF.s:8137   .bss.Transfer_cplt:0000000000000000 Transfer_cplt
     /tmp/ccs2VtGF.s:8138   .bss.Transfer_cplt:0000000000000000 $d
     /tmp/ccs2VtGF.s:8144   .bss.TxCount:0000000000000000 $d
     /tmp/ccs2VtGF.s:8146   .bss.TxiCount:0000000000000000 $d
     /tmp/ccs2VtGF.s:8149   .bss.TxiCount:0000000000000000 TxiCount
     /tmp/ccs2VtGF.s:8152   .bss.bOldSignal:0000000000000000 $d
     /tmp/ccs2VtGF.s:8156   .bss.bOldSignal:0000000000000000 bOldSignal
     /tmp/ccs2VtGF.s:8159   .bss.bSignal:0000000000000000 $d
     /tmp/ccs2VtGF.s:8166   .bss.gAudioSampleFreq:0000000000000000 $d
     /tmp/ccs2VtGF.s:8170   .bss.gAudioSampleFreq:0000000000000000 gAudioSampleFreq
     /tmp/ccs2VtGF.s:8173   .bss.gMode0LoopCount:0000000000000000 $d
     /tmp/ccs2VtGF.s:8184   .bss.gMode0LoopFlg:0000000000000000 $d
     /tmp/ccs2VtGF.s:8190   .bss.gMode0LoopSecCount:0000000000000000 $d
     /tmp/ccs2VtGF.s:8192   .bss.gRxbuf:0000000000000000 $d
     /tmp/ccs2VtGF.s:8196   .bss.gRxbuf:0000000000000000 gRxbuf
     /tmp/ccs2VtGF.s:8203   .bss.gbAUDO_INDEX:0000000000000000 $d
     /tmp/ccs2VtGF.s:8208   .bss.half_scaler:0000000000000000 $d
     /tmp/ccs2VtGF.s:8213   .bss.keytic:0000000000000000 $d
     /tmp/ccs2VtGF.s:8215   .bss.tim3count:0000000000000000 $d
     /tmp/ccs2VtGF.s:8219   .bss.tim3count:0000000000000000 tim3count
ARM GAS  /tmp/ccs2VtGF.s 			page 261


     /tmp/ccs2VtGF.s:8225   .bss.tptic:0000000000000000 $d
     /tmp/ccs2VtGF.s:8227   .bss.u16Vendor:0000000000000000 $d
     /tmp/ccs2VtGF.s:8230   .bss.u16Vendor:0000000000000000 u16Vendor
     /tmp/ccs2VtGF.s:8235   .bss.u8IRCheckcode:0000000000000000 u8IRCheckcode
     /tmp/ccs2VtGF.s:8236   .bss.u8IRCheckcode:0000000000000000 $d
     /tmp/ccs2VtGF.s:8240   .bss.u8IRcode:0000000000000000 u8IRcode
     /tmp/ccs2VtGF.s:8241   .bss.u8IRcode:0000000000000000 $d
     /tmp/ccs2VtGF.s:8245   .bss.u8PowerFlg:0000000000000000 u8PowerFlg
     /tmp/ccs2VtGF.s:8246   .bss.u8PowerFlg:0000000000000000 $d
     /tmp/ccs2VtGF.s:8253   .data.OSDPreSecCount:0000000000000000 $d
     /tmp/ccs2VtGF.s:8278   .data.PrebVXIS_InputMode:0000000000000000 $d
     /tmp/ccs2VtGF.s:8309   .rodata.CHECK_HDMI720P50.str1.4:0000000000000000 $d
     /tmp/ccs2VtGF.s:8316   .rodata.GetRS232_CMD.str1.4:0000000000000000 $d
     /tmp/ccs2VtGF.s:8323   .rodata.HDMI_VideoModeDetect.str1.4:0000000000000000 $d
     /tmp/ccs2VtGF.s:8330   .rodata.HS_Select_Win.str1.4:0000000000000000 $d
     /tmp/ccs2VtGF.s:8345   .rodata.SET_AHD_MDOE.str1.4:0000000000000000 $d
     /tmp/ccs2VtGF.s:8349   .rodata.SET_Audio_Mute.str1.4:0000000000000000 $d
     /tmp/ccs2VtGF.s:8353   .rodata.SET_VS4210_1280_720_out.str1.4:0000000000000000 $d
     /tmp/ccs2VtGF.s:8357   .rodata.SET_VS4210_720_480_out.str1.4:0000000000000000 $d
     /tmp/ccs2VtGF.s:8361   .rodata.TP_bt1120_1080P_1080P_mode0_w0.str1.4:0000000000000000 $d
     /tmp/ccs2VtGF.s:8365   .rodata.TP_bt1120_720P_1080P_mode0_w0.str1.4:0000000000000000 $d
     /tmp/ccs2VtGF.s:8369   .rodata.TP_bt1120_NTSC_1080P_mode0_w0.str1.4:0000000000000000 $d
     /tmp/ccs2VtGF.s:8373   .rodata.TP_bt1120_PAL_1080P_mode0_w0.str1.4:0000000000000000 $d
     /tmp/ccs2VtGF.s:8377   .rodata.WaitPowerOn.str1.4:0000000000000000 $d
     /tmp/ccs2VtGF.s:8383   .rodata.__FUNCTION__.9366:0000000000000000 $d
     /tmp/ccs2VtGF.s:8387   .rodata.__FUNCTION__.9366:0000000000000000 __FUNCTION__.9366
     /tmp/ccs2VtGF.s:8390   .rodata.__FUNCTION__.9371:0000000000000000 $d
     /tmp/ccs2VtGF.s:8394   .rodata.__FUNCTION__.9371:0000000000000000 __FUNCTION__.9371
     /tmp/ccs2VtGF.s:8397   .rodata.__FUNCTION__.9418:0000000000000000 $d
     /tmp/ccs2VtGF.s:8401   .rodata.__FUNCTION__.9418:0000000000000000 __FUNCTION__.9418
     /tmp/ccs2VtGF.s:8404   .rodata.__FUNCTION__.9429:0000000000000000 $d
     /tmp/ccs2VtGF.s:8408   .rodata.__FUNCTION__.9429:0000000000000000 __FUNCTION__.9429
     /tmp/ccs2VtGF.s:8411   .rodata.__FUNCTION__.9508:0000000000000000 $d
     /tmp/ccs2VtGF.s:8415   .rodata.__FUNCTION__.9508:0000000000000000 __FUNCTION__.9508
     /tmp/ccs2VtGF.s:8418   .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccs2VtGF.s:8435   .rodata.main_init.str1.4:0000000000000000 $d
     /tmp/ccs2VtGF.s:8452   .rodata.main_loop.str1.4:0000000000000000 $d
     /tmp/ccs2VtGF.s:8459   .rodata.setloopoutmode.str1.4:0000000000000000 $d
     /tmp/ccs2VtGF.s:542    .text.Audio_Sel:0000000000000013 $d
     /tmp/ccs2VtGF.s:542    .text.Audio_Sel:0000000000000014 $t

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_UART_Init
getHDMIRXAudioInfo
HDMI_Tx_SetAudioFs
gHDMI_Index
HAL_UART_Transmit
__errno
Printf
MCUTimerInitialTimerEvent
printf
strtol
ARM GAS  /tmp/ccs2VtGF.s 			page 262


puts
VS4210_SetMutiWindows
AudioMute
MCUTimerCancelTimerEvent
MCUTimerActiveTimerEvent
AUDIO_SELECT
HDMIRX_ReadI2C_Byte
gbVXIS_InputMode
CheckHDMIRX
VS4210_Rx_NoSignal
Set_Video_Loss_OSD
GetHDMI_InputMode
VS4210_SetInModeOutMode
VS4210_SetInputSizeHV
VXISI2CWrite
PreVState
VState
gHTotal
gVActive
gHActive
gVTotal
GetFWRevEE
delay
SaveFWRevEE
ClearBasicEE
HAL_TIM_PWM_ConfigChannel
HAL_TIM_PWM_Start
PowerLED
WriteEEP
TriggerHandler
SysTimerHandler
EQ_Detect
GT9147_Scan
CheckKeyIn
CheckTrigger
VS4210_Addr_88param
VS4210_TP_bt1120_1080P_1080P_mode0_w0_88param
VS4210_TP_bt1120_720P_1080P_mode0_w0_88param
VS4210_TP_bt1120_NTSC_1080P_mode0_w0_88param
VS4210_TP_bt1120_PAL_1080P_mode0_w0_88param
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
tic02
tic03
tic04
g_usTimerCounter
g_bNotifyTimer0Int
HAL_UART_Receive_IT
RS_in
RS_buf
RS2_in
RS2_buf
mode
TP_InputMode
HDMITX_DevLoopProc
OSD_Clear_All
ARM GAS  /tmp/ccs2VtGF.s 			page 263


Monitor
RS_ready
TOAReceivePaser
RS2_ready
Get_2824cIrq
msleep
VXISI2CRead
HAL_GPIO_ReadPin
AccessEnable
HAL_Init
SW_I2C0_Init
SW_I2C1_Init
SW_I2C2_Init
SW_I2C3_Init
InitHDMIRX
HDMIRX_WriteI2C_Byte
VXOSD_UseFont_init
Init_TP280x_RegSet
VXIS_fSetOsdx2
HAL_TIM_Base_Start_IT
UserDefineFont1
