ARM GAS  /tmp/ccQZgaDW.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	MX_GPIO_Init:
  23              	.LFB98:
  24              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include <stdio.h>
  27:Src/main.c    **** #include <stdlib.h>
  28:Src/main.c    **** #include <ctype.h>
  29:Src/main.c    **** #include <errno.h>
  30:Src/main.c    **** #ifdef __GNUC__
  31:Src/main.c    ****     #include <sys/unistd.h>
  32:Src/main.c    **** #endif
  33:Src/main.c    **** 
  34:Src/main.c    **** #include "VXIS_Extern_Define.h"
ARM GAS  /tmp/ccQZgaDW.s 			page 2


  35:Src/main.c    **** #include "sw_i2c0.h"  //TP2824
  36:Src/main.c    **** #include "sw_i2c1.h"  //VS4210
  37:Src/main.c    **** #include "sw_i2c2.h"  //IT66121
  38:Src/main.c    **** #include "VX_swi2c.h"
  39:Src/main.c    **** #include "ite66121.h"
  40:Src/main.c    **** #include "HDMI_RX_lib.h"
  41:Src/main.c    **** #include "VS4210.h"
  42:Src/main.c    **** #include "IRdef.h"
  43:Src/main.c    **** #include "TP2802.h"
  44:Src/main.c    **** #include "VX_OSD_Simple.h"
  45:Src/main.c    **** #include "monitor.h"
  46:Src/main.c    **** #include "Printf.h"
  47:Src/main.c    **** #include "Etc_eep.h"
  48:Src/main.c    **** #include 	"audio.h"
  49:Src/main.c    **** #include "keyremo.h"
  50:Src/main.c    **** #include "VX8812.h"
  51:Src/main.c    **** #include "HDMI_RX_lib.h"
  52:Src/main.c    **** 
  53:Src/main.c    **** #include "TOA_Protocol.h"
  54:Src/main.c    **** 
  55:Src/main.c    **** //#include "VS4210_param_Mode88.h"
  56:Src/main.c    **** //#include "VS4210_param_Modex26.h"
  57:Src/main.c    **** 
  58:Src/main.c    **** #include "GT911.h"
  59:Src/main.c    **** //#include "exOSDfont.h"
  60:Src/main.c    **** 
  61:Src/main.c    **** //#include "it660x.h"
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END Includes */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  66:Src/main.c    **** /* USER CODE BEGIN PTD */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END PTD */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  71:Src/main.c    **** /* USER CODE BEGIN PD */
  72:Src/main.c    **** #define RXBUFMAX 50
  73:Src/main.c    **** #define IR_Vendor_Code_ 0xFF00
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE END PD */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  78:Src/main.c    **** /* USER CODE BEGIN PM */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE END PM */
  81:Src/main.c    **** 
  82:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  83:Src/main.c    **** TIM_HandleTypeDef htim3;
  84:Src/main.c    **** 
  85:Src/main.c    **** UART_HandleTypeDef huart1;
  86:Src/main.c    **** UART_HandleTypeDef huart2;
  87:Src/main.c    **** 
  88:Src/main.c    **** ADC_HandleTypeDef hadc1;
  89:Src/main.c    **** TIM_HandleTypeDef htim2;
  90:Src/main.c    **** 
  91:Src/main.c    **** /* USER CODE BEGIN PV */
ARM GAS  /tmp/ccQZgaDW.s 			page 3


  92:Src/main.c    **** volatile tByte VS4210_ADDR = 0x40 ;
  93:Src/main.c    **** volatile tByte VS8812_ADDR = 0x12 ;
  94:Src/main.c    **** #define OSD_OFF_SEC 10
  95:Src/main.c    **** 
  96:Src/main.c    **** //RX
  97:Src/main.c    **** tByte	ManVidRes;
  98:Src/main.c    **** tByte	half_scaler = 0;
  99:Src/main.c    **** tByte	DebugLevel;
 100:Src/main.c    **** tByte	DayNightLevel=0;
 101:Src/main.c    **** tWord LightSensor_ADC=0;
 102:Src/main.c    **** BYTE AutoDayNightDelay=0;
 103:Src/main.c    **** DATA BYTE PWMLevel=0x80;
 104:Src/main.c    **** BYTE TimeStep;
 105:Src/main.c    **** BYTE	PowerFlag=1;
 106:Src/main.c    **** DATA BYTE keytic=0,tptic=0;
 107:Src/main.c    **** BYTE	SelectModeType;
 108:Src/main.c    **** BYTE	Priority;
 109:Src/main.c    **** BYTE CAMA_M;	
 110:Src/main.c    **** BYTE CAMB_M;	
 111:Src/main.c    **** BYTE CAMC_M;	
 112:Src/main.c    **** BYTE CAMR_M;
 113:Src/main.c    **** BYTE OSD_MIRROR[4]={0,0,0,0};
 114:Src/main.c    **** BYTE OSD_SPEAKER[4]={0,0,0,0};
 115:Src/main.c    **** BYTE BOOT_ISSUE=1;
 116:Src/main.c    **** BYTE CURRENT_CH=0;
 117:Src/main.c    **** tByte ExOsdContent[256] ;
 118:Src/main.c    **** tByte PrebVXIS_InputMode[4]= {250,250,250,250} ;
 119:Src/main.c    **** 
 120:Src/main.c    **** int OSDPreSecCount =-1 ;
 121:Src/main.c    **** BYTE SelectInputMode=0;///0=HDMI , 1=AHD
 122:Src/main.c    **** BYTE CheckSelectInputMode=0;///0=HDMI , 1=AHD
 123:Src/main.c    **** 
 124:Src/main.c    **** //audio
 125:Src/main.c    **** tByte gPreAudioSampleFreq ;
 126:Src/main.c    **** tByte gPrebAUDO_INDEX  ;
 127:Src/main.c    **** tByte gbAUDO_INDEX = 0  ;
 128:Src/main.c    **** static tByte gAudioSampleFreq[4] ;
 129:Src/main.c    **** 
 130:Src/main.c    **** tWord gMode0LoopCount = 0 ;
 131:Src/main.c    **** tByte gMode0LoopFlg = 0 ;
 132:Src/main.c    **** tByte gMode0LoopSecCount = 0 ;
 133:Src/main.c    **** tByte gMode0LoopSecCmpVal = 10 ;
 134:Src/main.c    **** 
 135:Src/main.c    **** //Rx
 136:Src/main.c    **** static tByte bOldSignal[4] ;
 137:Src/main.c    **** tByte bSignal[4]= {0,0,0,0} ;
 138:Src/main.c    **** extern tByte PreVState[4] ;
 139:Src/main.c    **** extern tByte VState[4] ;
 140:Src/main.c    **** extern tByte AState[4] ;
 141:Src/main.c    **** 
 142:Src/main.c    **** //Tx
 143:Src/main.c    **** tByte TxCount = 0 ;
 144:Src/main.c    **** 
 145:Src/main.c    **** T_VS4210_MutiWindows pVS4210_MutiWindows1 ;
 146:Src/main.c    **** unsigned int volatile Tim1_count=0;
 147:Src/main.c    **** bit OSD_Show_Flg = 0 ;
 148:Src/main.c    **** 
ARM GAS  /tmp/ccQZgaDW.s 			page 4


 149:Src/main.c    **** static int TimeOutCount ;
 150:Src/main.c    **** 
 151:Src/main.c    **** extern DATA BYTE keytic;
 152:Src/main.c    **** extern 	DATA BYTE Key;
 153:Src/main.c    **** extern 	bit KeyReady, RepeatKey;
 154:Src/main.c    **** 
 155:Src/main.c    **** extern BYTE  updn_reg[4];
 156:Src/main.c    **** extern BYTE Time5ms;
 157:Src/main.c    **** extern bit ChangeKey;
 158:Src/main.c    **** extern tByte RS_buf[BUF_MAX];
 159:Src/main.c    **** extern  tByte RS2_buf[TOA_BUF_MAX];
 160:Src/main.c    **** extern  tByte	 RS_in, RS2_in;
 161:Src/main.c    **** extern BYTE tic02;
 162:Src/main.c    **** extern WORD tic03,tic04,tic05;
 163:Src/main.c    **** extern volatile WORD  g_usTimerCounter;
 164:Src/main.c    **** extern volatile bit g_bNotifyTimer0Int;
 165:Src/main.c    **** extern BYTE	AudioVol;
 166:Src/main.c    **** extern BYTE NowModeState;
 167:Src/main.c    **** extern BYTE Disp_Input;
 168:Src/main.c    **** extern BYTE OSD_LOCKF;
 169:Src/main.c    **** extern BYTE TriggerFlag;
 170:Src/main.c    **** 
 171:Src/main.c    **** extern BYTE	MainSetSelectMode[13];
 172:Src/main.c    **** /*extern*/ tByte gabVXIS_Input_mirrorH[4];
 173:Src/main.c    **** extern tByte gWindowNum ;
 174:Src/main.c    **** 
 175:Src/main.c    **** extern BYTE TP_ACTION;
 176:Src/main.c    **** extern BYTE TP_PRES_DOWN;
 177:Src/main.c    **** extern BYTE TouchP;
 178:Src/main.c    **** extern USHORT ucTickCount;
 179:Src/main.c    **** extern bit   AccessEnable;
 180:Src/main.c    **** extern tByte TP_InputMode;
 181:Src/main.c    **** extern tByte mode[0];
 182:Src/main.c    **** 
 183:Src/main.c    **** extern tcByte VS4210_TP_bt1120_1080P_1080P_mode0_w0_88param[VS4210_INIT_NUMBER] ;
 184:Src/main.c    **** extern tcByte VS4210_TP_bt1120_720P_1080P_mode0_w0_88param[VS4210_INIT_NUMBER] ;
 185:Src/main.c    **** extern tcByte VS4210_TP_bt1120_NTSC_1080P_mode0_w0_88param[VS4210_INIT_NUMBER] ;
 186:Src/main.c    **** extern tcByte VS4210_TP_bt1120_PAL_1080P_mode0_w0_88param[VS4210_INIT_NUMBER] ;
 187:Src/main.c    **** 
 188:Src/main.c    **** //Extern OSD 20200110-01
 189:Src/main.c    **** extern const unsigned char UserDefineFont1[40*(4+23+1)] ; //extern OSD
 190:Src/main.c    **** 
 191:Src/main.c    **** extern tcByte VS4210_hdmi1080P_1080P_mode0_w0_88param[VS4210_INIT_NUMBER];
 192:Src/main.c    **** extern tcByte VS4210_Addr_88param[VS4210_INIT_NUMBER];
 193:Src/main.c    **** 
 194:Src/main.c    **** tByte volatile gRxLoopFlg = 1 ;
 195:Src/main.c    **** T_VS4210_MutiWindows pVS4210_JointKind1 ;
 196:Src/main.c    **** 
 197:Src/main.c    **** static volatile tByte  u8PowerFlg  = 0 ;
 198:Src/main.c    **** /*static volatile */tByte  OSDSecCount = 0 ;
 199:Src/main.c    **** //static volatile 
 200:Src/main.c    **** 	tByte  OSDStateFlg = 1 ;
 201:Src/main.c    **** static volatile tByte  IR_ShiftCount = 0 ;
 202:Src/main.c    **** static volatile tDWord IR_4BYTE = 0 ;
 203:Src/main.c    **** static volatile tWord  u16Vendor ;
 204:Src/main.c    **** static volatile tByte  u8IRcode ;
 205:Src/main.c    **** static volatile tByte  u8IRCheckcode ;
ARM GAS  /tmp/ccQZgaDW.s 			page 5


 206:Src/main.c    **** static volatile tByte  PreIR_Code = 0 ;
 207:Src/main.c    **** static volatile tByte  IR_Code = 0 ;
 208:Src/main.c    **** static volatile tByte  IR_StartFlg = 0 ;
 209:Src/main.c    **** static volatile tByte  IR_END_Flg = 0 ;
 210:Src/main.c    **** static volatile tByte  IR_IRQFlg = 0 ;
 211:Src/main.c    **** static volatile tByte  PreIR_IRQ_Index = 0 ;
 212:Src/main.c    **** static volatile tByte  IR_IRQ_Index = 0 ;
 213:Src/main.c    **** static volatile tWord  IR_PlusTimeVal = 0 ;
 214:Src/main.c    **** static volatile tDWord tim3count = 0 ; //10us
 215:Src/main.c    **** 
 216:Src/main.c    **** static volatile tDWord TxiCount = 0 ;
 217:Src/main.c    **** static volatile tDWord RxiCount = 0 ;
 218:Src/main.c    **** 
 219:Src/main.c    **** static char Rx_data[2],Rx2_data[2]/*, Rx_Buffer[RXBUFMAX]*/, Transfer_cplt;
 220:Src/main.c    **** static volatile int Rx_indx = 0 ;
 221:Src/main.c    **** static volatile int RxBufIndex= 0 ;
 222:Src/main.c    **** static char gRxbuf[RXBUFMAX] ;
 223:Src/main.c    **** 
 224:Src/main.c    **** static volatile int DebugFlg = 0 ;
 225:Src/main.c    **** 
 226:Src/main.c    **** //static int OutMapLoopModeIndex = VS4210_LOOP_MODE_NUMBER ;
 227:Src/main.c    **** //static tByte OutMapLoopOutSizeIndex ;
 228:Src/main.c    **** 
 229:Src/main.c    **** /* USER CODE END PV */
 230:Src/main.c    **** 
 231:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 232:Src/main.c    **** void SystemClock_Config(void);
 233:Src/main.c    **** //static void MX_ADC1_Init(void);
 234:Src/main.c    **** //static void MX_TIM2_Init(void);
 235:Src/main.c    **** static void MX_GPIO_Init(void);
 236:Src/main.c    **** static void MX_TIM3_Init(void);
 237:Src/main.c    **** static void MX_USART1_UART_Init(void);
 238:Src/main.c    **** static void MX_USART2_UART_Init(void);
 239:Src/main.c    **** 
 240:Src/main.c    **** extern void MCUTimerInitialTimerEvent(void);
 241:Src/main.c    **** extern void MCUTimerActiveTimerEvent(WORD usTime, BYTE ucEventID);
 242:Src/main.c    **** extern BYTE RS_ready(void);
 243:Src/main.c    **** extern BYTE RS2_ready(void);
 244:Src/main.c    **** 
 245:Src/main.c    **** extern void SysTimerHandler(void);
 246:Src/main.c    **** 
 247:Src/main.c    **** 
 248:Src/main.c    **** /* USER CODE BEGIN PFP */
 249:Src/main.c    **** #ifdef __GNUC__
 250:Src/main.c    **** 
 251:Src/main.c    **** // With GCC/RAISONANCE, small printf (option LD Linker->Libraries->Small printf
 252:Src/main.c    **** 
 253:Src/main.c    **** //   set to 'Yes') calls __io_putchar()
 254:Src/main.c    **** 
 255:Src/main.c    **** int _write(int file, char *data, int len)
 256:Src/main.c    **** {
 257:Src/main.c    ****     if ((file != STDOUT_FILENO) && (file != STDERR_FILENO))
 258:Src/main.c    ****     {
 259:Src/main.c    ****         errno = EBADF;
 260:Src/main.c    ****         return -1;
 261:Src/main.c    ****     }
 262:Src/main.c    ****     // arbitrary timeout 1000
ARM GAS  /tmp/ccQZgaDW.s 			page 6


 263:Src/main.c    ****     HAL_StatusTypeDef status =
 264:Src/main.c    ****         HAL_UART_Transmit(&huart1, (uint8_t*)data, (uint16_t)len, 1000);
 265:Src/main.c    ****     // return # of bytes written - as best we can tell
 266:Src/main.c    ****     return (status == HAL_OK ? len : 0);
 267:Src/main.c    **** }
 268:Src/main.c    **** #else
 269:Src/main.c    **** int fputc(int ch, FILE *f)
 270:Src/main.c    **** {
 271:Src/main.c    ****     /* Place your implementation of fputc here */
 272:Src/main.c    ****     /* e.g. write a character to the USART */
 273:Src/main.c    ****     HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 100);
 274:Src/main.c    ****     return ch;
 275:Src/main.c    **** }
 276:Src/main.c    **** #endif
 277:Src/main.c    **** 
 278:Src/main.c    **** void Audio_Sel(unsigned char mode )
 279:Src/main.c    **** {
 280:Src/main.c    ****     gbAUDO_INDEX = mode ;
 281:Src/main.c    ****     switch(mode)
 282:Src/main.c    ****     {
 283:Src/main.c    ****     case HDMI_AUDIO_NONE:
 284:Src/main.c    **** //        A_AUDIO = 1 ;
 285:Src/main.c    **** //        B_AUDIO = 1 ;
 286:Src/main.c    **** //        H1_AUDIO= 1 ;
 287:Src/main.c    **** //        H2_AUDIO= 1 ;
 288:Src/main.c    **** //        H3_AUDIO= 1 ;
 289:Src/main.c    **** //        H4_AUDIO= 1 ;
 290:Src/main.c    ****   //mask by ryan@20210126             HAL_GPIO_WritePin(A_AUDIO_GPIO_Port, A_AUDIO_Pin, GPIO_PIN_SE
 291:Src/main.c    ****         HAL_GPIO_WritePin(B_AUDIO_GPIO_Port, B_AUDIO_Pin, GPIO_PIN_SET);
 292:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 293:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 294:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 295:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 296:Src/main.c    ****         break ;
 297:Src/main.c    **** 
 298:Src/main.c    ****     case HDMI_AUDIO_1:
 299:Src/main.c    **** //        A_AUDIO = 0 ;
 300:Src/main.c    **** //        B_AUDIO = 1 ;
 301:Src/main.c    **** //        H1_AUDIO= 0 ;
 302:Src/main.c    **** //        H2_AUDIO= 1 ;
 303:Src/main.c    **** //        H3_AUDIO= 1 ;
 304:Src/main.c    **** //        H4_AUDIO= 1 ;
 305:Src/main.c    **** 
 306:Src/main.c    ****   //mask by ryan@20210126      HAL_GPIO_WritePin(A_AUDIO_GPIO_Port, A_AUDIO_Pin, GPIO_PIN_RESET);
 307:Src/main.c    ****         HAL_GPIO_WritePin(B_AUDIO_GPIO_Port, B_AUDIO_Pin, GPIO_PIN_SET);
 308:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_RESET);
 309:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 310:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 311:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 312:Src/main.c    **** 
 313:Src/main.c    ****         HDMI_Tx_SetAudioFs(gAudioSampleFreq[0])  ;
 314:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[0] ;
 315:Src/main.c    ****         break ;
 316:Src/main.c    **** 
 317:Src/main.c    ****     case HDMI_AUDIO_2:
 318:Src/main.c    **** //        A_AUDIO = 0 ;
 319:Src/main.c    **** //        B_AUDIO = 1 ;
ARM GAS  /tmp/ccQZgaDW.s 			page 7


 320:Src/main.c    **** //        H1_AUDIO= 1 ;
 321:Src/main.c    **** //        H2_AUDIO= 0 ;
 322:Src/main.c    **** //        H3_AUDIO= 1 ;
 323:Src/main.c    **** //        H4_AUDIO= 1 ;
 324:Src/main.c    **** 
 325:Src/main.c    ****   //mask by ryan@20210126             HAL_GPIO_WritePin(A_AUDIO_GPIO_Port, A_AUDIO_Pin, GPIO_PIN_RE
 326:Src/main.c    ****         HAL_GPIO_WritePin(B_AUDIO_GPIO_Port, B_AUDIO_Pin, GPIO_PIN_SET);
 327:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 328:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_RESET);
 329:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 330:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 331:Src/main.c    **** 
 332:Src/main.c    ****         HDMI_Tx_SetAudioFs(gAudioSampleFreq[1])  ;
 333:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[1] ;
 334:Src/main.c    ****         break ;
 335:Src/main.c    **** 
 336:Src/main.c    ****     case HDMI_AUDIO_3:
 337:Src/main.c    **** //        A_AUDIO = 1 ;
 338:Src/main.c    **** //        B_AUDIO = 0 ;
 339:Src/main.c    **** //        H1_AUDIO= 1 ;
 340:Src/main.c    **** //        H2_AUDIO= 1 ;
 341:Src/main.c    **** //        H3_AUDIO= 0 ;
 342:Src/main.c    **** //        H4_AUDIO= 1 ;
 343:Src/main.c    ****    //mask by ryan@20210126            HAL_GPIO_WritePin(A_AUDIO_GPIO_Port, A_AUDIO_Pin, GPIO_PIN_SE
 344:Src/main.c    ****         HAL_GPIO_WritePin(B_AUDIO_GPIO_Port, B_AUDIO_Pin, GPIO_PIN_RESET);
 345:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 346:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 347:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_RESET);
 348:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 349:Src/main.c    **** 
 350:Src/main.c    ****         HDMI_Tx_SetAudioFs(gAudioSampleFreq[2])  ;
 351:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[2] ;
 352:Src/main.c    ****         break ;
 353:Src/main.c    **** 
 354:Src/main.c    ****     case HDMI_AUDIO_4:
 355:Src/main.c    **** //        A_AUDIO = 1 ;
 356:Src/main.c    **** //        B_AUDIO = 0 ;
 357:Src/main.c    **** //        H1_AUDIO= 1 ;
 358:Src/main.c    **** //        H2_AUDIO= 1 ;
 359:Src/main.c    **** //        H3_AUDIO= 1 ;
 360:Src/main.c    **** //        H4_AUDIO= 0 ;
 361:Src/main.c    ****   //mask by ryan@20210126             HAL_GPIO_WritePin(A_AUDIO_GPIO_Port, A_AUDIO_Pin, GPIO_PIN_SE
 362:Src/main.c    ****         HAL_GPIO_WritePin(B_AUDIO_GPIO_Port, B_AUDIO_Pin, GPIO_PIN_RESET);
 363:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 364:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 365:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 366:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_RESET);
 367:Src/main.c    **** 
 368:Src/main.c    ****         HDMI_Tx_SetAudioFs(gAudioSampleFreq[3])  ;
 369:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[3] ;
 370:Src/main.c    ****         break ;
 371:Src/main.c    ****     }
 372:Src/main.c    **** }
 373:Src/main.c    **** 
 374:Src/main.c    **** void SET_Audio_Mute(unsigned char mode )
 375:Src/main.c    **** {
 376:Src/main.c    **** 
ARM GAS  /tmp/ccQZgaDW.s 			page 8


 377:Src/main.c    **** if(mode==ON)
 378:Src/main.c    **** 	HAL_GPIO_WritePin(AUD_I2C_MUTE_Port,AUD_I2C_MUTE_Pin, GPIO_PIN_RESET);
 379:Src/main.c    **** else
 380:Src/main.c    **** 	HAL_GPIO_WritePin(AUD_I2C_MUTE_Port,AUD_I2C_MUTE_Pin, GPIO_PIN_SET);
 381:Src/main.c    **** 
 382:Src/main.c    **** Printf("(*SET_Audio_Mute=%d)",(WORD)mode);
 383:Src/main.c    **** 
 384:Src/main.c    **** }
 385:Src/main.c    **** 
 386:Src/main.c    **** //Sleep
 387:Src/main.c    **** /*
 388:Src/main.c    **** void msleep(unsigned int i )
 389:Src/main.c    **** {
 390:Src/main.c    ****     HAL_Delay(i);
 391:Src/main.c    **** }
 392:Src/main.c    **** */
 393:Src/main.c    **** 
 394:Src/main.c    **** /* USER CODE END PFP */
 395:Src/main.c    **** 
 396:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 397:Src/main.c    **** /* USER CODE BEGIN 0 */
 398:Src/main.c    **** 
 399:Src/main.c    **** void InitialTimerEvent(void)
 400:Src/main.c    **** {
 401:Src/main.c    **** 	MCUTimerInitialTimerEvent();  //clear all of timer event	
 402:Src/main.c    **** 
 403:Src/main.c    **** 		#if (_DEBUG_MESSAGE_SysTimerEvent==ON)
 404:Src/main.c    ****   		//MCUTimerActiveTimerEvent(SEC(10), _SYSTEM_TIMER_EVENT_SHOW_WORKING_TIMER);//for timer
 405:Src/main.c    **** 
 406:Src/main.c    **** 
 407:Src/main.c    **** 
 408:Src/main.c    **** 		   //	MCUTimerActiveTimerEvent(SEC(6), _SYSTEM_TIMER_EVENT_BOOT_VIDEO_DETECT);//for timer
 409:Src/main.c    ****   		//MCUTimerActiveTimerEvent(SEC(5), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);//for timer
 410:Src/main.c    **** 
 411:Src/main.c    **** //	MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_UART2_CHECK);//for test
 412:Src/main.c    **** 		
 413:Src/main.c    ****      		#endif
 414:Src/main.c    **** //MCUTimerActiveTimerEvent(SEC(5), _SYSTEM_TIMER_EVENT_VIDEO_RESET);			
 415:Src/main.c    **** 	/*		
 416:Src/main.c    ****      	MCUTimerActiveTimerEvent(SEC(5-2), _SYSTEM_TIMER_EVENT_BOOT_VIDEO_DETECT);//for timer
 417:Src/main.c    **** 	MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_LIGHT_SENSOR_CHECK);//for timer
 418:Src/main.c    **** 	MCUTimerActiveTimerEvent(100, _SYSTEM_TIMER_EVENT_GRN_ON);
 419:Src/main.c    **** 	MCUTimerActiveTimerEvent(SEC(1),  _SYSTEM_TIMER_EVENT_ADC_CHECK);
 420:Src/main.c    **** 	*/
 421:Src/main.c    **** }
 422:Src/main.c    **** 
 423:Src/main.c    **** void GetRS232_CMD(void)
 424:Src/main.c    **** {
 425:Src/main.c    ****     char achstr[3] ;
 426:Src/main.c    ****     char *endptr ;
 427:Src/main.c    ****     long IrNum  ;
 428:Src/main.c    ****     if (Transfer_cplt == 1)
 429:Src/main.c    ****     {
 430:Src/main.c    ****         Transfer_cplt = 0 ;
 431:Src/main.c    ****         printf("RxBufIndex=%d,str=%s\r\n",RxBufIndex, gRxbuf);
 432:Src/main.c    ****         if ( RxBufIndex >= 4 )
 433:Src/main.c    ****         {
ARM GAS  /tmp/ccQZgaDW.s 			page 9


 434:Src/main.c    ****             if ((gRxbuf[0] =='G') && (gRxbuf[3]=='g'))
 435:Src/main.c    ****             {
 436:Src/main.c    ****                 achstr[2] = '\0' ;
 437:Src/main.c    ****                 memcpy(&achstr[0], &gRxbuf[1], 2 ) ;
 438:Src/main.c    ****                 IrNum = strtol(achstr, &endptr, 16) ;
 439:Src/main.c    ****                 printf("IrNum=0x%02x\r\n",(int)IrNum);
 440:Src/main.c    ****             }
 441:Src/main.c    ****             else if ((gRxbuf[0] =='S') && (gRxbuf[5]=='s'))
 442:Src/main.c    ****             {                
 443:Src/main.c    ****             }
 444:Src/main.c    ****         }
 445:Src/main.c    ****     }
 446:Src/main.c    **** }
 447:Src/main.c    **** 
 448:Src/main.c    **** //static
 449:Src/main.c    **** 	void setloopoutmode(int index)
 450:Src/main.c    **** {
 451:Src/main.c    **** /*
 452:Src/main.c    **** 	pVS4210_JointKind1.AudioChannel = HDMI_AUDIO_NONE ;
 453:Src/main.c    **** 	  pVS4210_JointKind1.DrawBoxFlg =1 ;
 454:Src/main.c    **** 	  pVS4210_JointKind1.DrawOSDFlg =0x03 ; //bits 0 ,1
 455:Src/main.c    **** //	pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE1 ;
 456:Src/main.c    **** 	  pVS4210_JointKind1.OutputSize = _OUTPUT_800x480;//_OUTPUT_1080P60 ;
 457:Src/main.c    **** */
 458:Src/main.c    ****     switch(index)
 459:Src/main.c    ****     {
 460:Src/main.c    ****     case VS4210_LOOP_MODE0_w0:
 461:Src/main.c    ****     {
 462:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE0_w0 ;
 463:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 464:Src/main.c    **** 	 OSD_MIRROR[0]=CAMA_M;
 465:Src/main.c    **** 	 gabVXIS_Input_mirrorH[0]=CAMA_M;
 466:Src/main.c    ****         printf("VS4210_MODE0_w0\r\n") ;
 467:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 468:Src/main.c    ****         break ;
 469:Src/main.c    ****     }
 470:Src/main.c    ****     case VS4210_LOOP_MODE0_w1:
 471:Src/main.c    ****     {
 472:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE0_w1 ;
 473:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 474:Src/main.c    ****    	 OSD_MIRROR[0]=CAMB_M;
 475:Src/main.c    **** 	 gabVXIS_Input_mirrorH[1]=CAMB_M; 
 476:Src/main.c    **** 	 OSD_SPEAKER[0]=ON;
 477:Src/main.c    ****         printf("VS4210_MODE0_w1\r\n") ;
 478:Src/main.c    ****         break ;
 479:Src/main.c    ****     }
 480:Src/main.c    ****     case VS4210_LOOP_MODE0_w2:
 481:Src/main.c    ****     {
 482:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE0_w2 ;
 483:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 484:Src/main.c    **** 	 OSD_MIRROR[0]=CAMC_M;	
 485:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 	 
 486:Src/main.c    **** 	 OSD_SPEAKER[0]=ON;
 487:Src/main.c    ****         printf("VS4210_MODE0_w2\r\n") ;
 488:Src/main.c    ****         break ;
 489:Src/main.c    ****     }
 490:Src/main.c    ****     case VS4210_LOOP_MODE0_w3:
ARM GAS  /tmp/ccQZgaDW.s 			page 10


 491:Src/main.c    ****     {
 492:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE0_w3 ;
 493:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 494:Src/main.c    ****    	OSD_MIRROR[0]=CAMR_M;	
 495:Src/main.c    **** 	gabVXIS_Input_mirrorH[3]=CAMR_M; 		
 496:Src/main.c    ****   	OSD_SPEAKER[0]=ON;
 497:Src/main.c    ****         printf("VS4210_MODE0_w3\r\n") ;
 498:Src/main.c    ****         break ;
 499:Src/main.c    ****     }
 500:Src/main.c    ****     case VS4210_LOOP_MODE1:
 501:Src/main.c    ****     {
 502:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE1 ;
 503:Src/main.c    **** 	
 504:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 505:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 506:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 507:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 508:Src/main.c    ****    	  OSD_MIRROR[0]=CAMA_M;	
 509:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 510:Src/main.c    ****    	  OSD_MIRROR[2]=CAMC_M;	
 511:Src/main.c    ****    	  OSD_MIRROR[3]=CAMR_M;	
 512:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
 513:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 514:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 		  
 515:Src/main.c    **** 	gabVXIS_Input_mirrorH[3]=CAMR_M; 		  
 516:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
 517:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;
 518:Src/main.c    **** 	  OSD_SPEAKER[2]=OFF;
 519:Src/main.c    **** 	  OSD_SPEAKER[3]=ON;
 520:Src/main.c    **** 
 521:Src/main.c    ****         printf("VS4210_MODE1\r\n") ;
 522:Src/main.c    ****         break ;
 523:Src/main.c    ****     }
 524:Src/main.c    **** 	
 525:Src/main.c    ****     case VS4210_LOOP_MODE2:
 526:Src/main.c    ****     {
 527:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE2 ;
 528:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 529:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 530:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 531:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 532:Src/main.c    ****         printf("VS4210_MODE2\r\n") ;
 533:Src/main.c    ****         break ;
 534:Src/main.c    ****     }
 535:Src/main.c    **** 	#if 0
 536:Src/main.c    ****     case VS4210_LOOP_MODE8:
 537:Src/main.c    ****     {
 538:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 539:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 540:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 541:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 542:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 543:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 544:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 545:Src/main.c    ****    	  OSD_MIRROR[2]=CAMC_M;	
 546:Src/main.c    ****    	  OSD_MIRROR[3]=CAMR_M;	
 547:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
ARM GAS  /tmp/ccQZgaDW.s 			page 11


 548:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 549:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 		  
 550:Src/main.c    **** 	gabVXIS_Input_mirrorH[3]=CAMR_M;	  
 551:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 552:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;
 553:Src/main.c    **** 	  OSD_SPEAKER[2]=OFF;
 554:Src/main.c    ****         printf("VS4210_MODE8 ch1 ch2 ch3\r\n") ;
 555:Src/main.c    ****         break ;
 556:Src/main.c    ****     }
 557:Src/main.c    **** 	    case VS4210_LOOP_MODE8_412:
 558:Src/main.c    ****     {
 559:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 560:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 561:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 562:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =2 ;
 563:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =0 ;
 564:Src/main.c    **** 	  OSD_MIRROR[0]=CAMR_M;	
 565:Src/main.c    ****    	  OSD_MIRROR[1]=CAMA_M;	
 566:Src/main.c    ****    	  OSD_MIRROR[2]=CAMB_M;	
 567:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMR_M; 		  
 568:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 569:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMB_M; 		  
 570:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 571:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;
 572:Src/main.c    **** 	  OSD_SPEAKER[2]=OFF;
 573:Src/main.c    **** 	  
 574:Src/main.c    ****       //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 575:Src/main.c    ****         printf("VS4210_MODE8 ch4 ch1 ch2\r\n") ;
 576:Src/main.c    ****         break ;
 577:Src/main.c    ****     }
 578:Src/main.c    ****      case VS4210_LOOP_MODE8_123:
 579:Src/main.c    **** 	 {
 580:Src/main.c    **** 			 pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 581:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 582:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 583:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 584:Src/main.c    **** 		   OSD_MIRROR[0]=CAMA_M; 
 585:Src/main.c    **** 		   OSD_MIRROR[1]=CAMB_M; 
 586:Src/main.c    **** 		   OSD_MIRROR[2]=CAMC_M; 
 587:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
 588:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 589:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 		   
 590:Src/main.c    **** 		   OSD_SPEAKER[0]=ON;
 591:Src/main.c    **** 		   OSD_SPEAKER[1]=OFF;
 592:Src/main.c    **** 		   OSD_SPEAKER[2]=OFF;
 593:Src/main.c    **** 		   
 594:Src/main.c    **** 		   //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 595:Src/main.c    **** 			 printf("VS4210_MODE8 ch1 ch2 ch3\r\n") ;
 596:Src/main.c    **** 			 break ;
 597:Src/main.c    **** 		 }
 598:Src/main.c    ****   case VS4210_LOOP_MODE8_124:
 599:Src/main.c    **** 	 {
 600:Src/main.c    **** 			 pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 601:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 602:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 603:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap2 =4 ;
 604:Src/main.c    **** 		   OSD_MIRROR[0]=CAMA_M; 
ARM GAS  /tmp/ccQZgaDW.s 			page 12


 605:Src/main.c    **** 		   OSD_MIRROR[1]=CAMB_M; 
 606:Src/main.c    **** 		   OSD_MIRROR[2]=CAMR_M; 
 607:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
 608:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 609:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMR_M; 		   
 610:Src/main.c    **** 		   OSD_SPEAKER[0]=OFF;
 611:Src/main.c    **** 		   OSD_SPEAKER[1]=OFF;
 612:Src/main.c    **** 		   OSD_SPEAKER[2]=ON;
 613:Src/main.c    **** 		   
 614:Src/main.c    **** 		   //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 615:Src/main.c    **** 			 printf("VS4210_MODE8 ch1 ch2 ch4\r\n") ;
 616:Src/main.c    **** 			 break ;
 617:Src/main.c    **** 		 }	 
 618:Src/main.c    ****   case VS4210_LOOP_MODE8_134:
 619:Src/main.c    **** 	 {
 620:Src/main.c    **** 			 pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 621:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 622:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 623:Src/main.c    **** 			 pVS4210_JointKind1.WindowMap.WMap2 =4 ;
 624:Src/main.c    **** 		   OSD_MIRROR[0]=CAMA_M; 
 625:Src/main.c    **** 		   OSD_MIRROR[1]=CAMC_M; 
 626:Src/main.c    **** 		   OSD_MIRROR[2]=CAMR_M; 
 627:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
 628:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 		  
 629:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMR_M; 		   
 630:Src/main.c    **** 		   OSD_SPEAKER[0]=OFF;
 631:Src/main.c    **** 		   OSD_SPEAKER[1]=OFF;
 632:Src/main.c    **** 		   OSD_SPEAKER[2]=ON;
 633:Src/main.c    **** 		   //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 634:Src/main.c    **** 			 printf("VS4210_MODE8 ch1 ch3 ch4\r\n") ;
 635:Src/main.c    **** 			 break ;
 636:Src/main.c    **** 		 }	 
 637:Src/main.c    **** //=============
 638:Src/main.c    **** case VS4210_LOOP_MODE8_213:
 639:Src/main.c    ****    {
 640:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 641:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 642:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 643:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 644:Src/main.c    **** 		 OSD_MIRROR[0]=CAMB_M; 
 645:Src/main.c    **** 		 OSD_MIRROR[1]=CAMA_M; 
 646:Src/main.c    **** 		 OSD_MIRROR[2]=CAMC_M; 
 647:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMB_M; 		  
 648:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 649:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 			 
 650:Src/main.c    **** 		 OSD_SPEAKER[0]=ON;
 651:Src/main.c    **** 		 OSD_SPEAKER[1]=OFF;
 652:Src/main.c    **** 		 OSD_SPEAKER[2]=OFF;
 653:Src/main.c    **** 		 
 654:Src/main.c    **** 		 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 655:Src/main.c    **** 		   printf("VS4210_MODE8 ch2 ch1 ch3\r\n") ;
 656:Src/main.c    **** 		   break ;
 657:Src/main.c    **** 	   }   
 658:Src/main.c    **** case VS4210_LOOP_MODE8_214:
 659:Src/main.c    ****    {
 660:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 661:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =2 ;
ARM GAS  /tmp/ccQZgaDW.s 			page 13


 662:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 663:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =4 ;
 664:Src/main.c    **** 		 OSD_MIRROR[0]=CAMB_M; 
 665:Src/main.c    **** 		 OSD_MIRROR[1]=CAMA_M; 
 666:Src/main.c    **** 		 OSD_MIRROR[2]=CAMR_M; 
 667:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMB_M; 		  
 668:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 669:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMR_M; 			 
 670:Src/main.c    **** 		 OSD_SPEAKER[0]=OFF;
 671:Src/main.c    **** 		 OSD_SPEAKER[1]=OFF;
 672:Src/main.c    **** 		 OSD_SPEAKER[2]=ON;
 673:Src/main.c    **** 		 
 674:Src/main.c    **** 		 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 675:Src/main.c    **** 		   printf("VS4210_MODE8 ch2 ch1 ch4\r\n") ;
 676:Src/main.c    **** 		   break ;
 677:Src/main.c    **** 	   }   
 678:Src/main.c    **** case VS4210_LOOP_MODE8_234:
 679:Src/main.c    ****    {
 680:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 681:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 682:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 683:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =4 ;
 684:Src/main.c    **** 		 OSD_MIRROR[0]=CAMA_M; 
 685:Src/main.c    **** 		 OSD_MIRROR[1]=CAMC_M; 
 686:Src/main.c    **** 		 OSD_MIRROR[2]=CAMR_M; 
 687:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
 688:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 		  
 689:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMR_M; 			 
 690:Src/main.c    **** 		 OSD_SPEAKER[0]=OFF;
 691:Src/main.c    **** 		 OSD_SPEAKER[1]=OFF;
 692:Src/main.c    **** 		 OSD_SPEAKER[2]=ON;
 693:Src/main.c    **** 		 
 694:Src/main.c    **** 		 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 695:Src/main.c    **** 		   printf("VS4210_MODE8 ch2 ch3 ch4\r\n") ;
 696:Src/main.c    **** 		   break ;
 697:Src/main.c    **** 	   }   
 698:Src/main.c    **** 
 699:Src/main.c    **** //=============
 700:Src/main.c    **** case VS4210_LOOP_MODE8_312:
 701:Src/main.c    ****    {
 702:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 703:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 704:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 705:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =2 ;
 706:Src/main.c    **** 		 OSD_MIRROR[0]=CAMC_M; 
 707:Src/main.c    **** 		 OSD_MIRROR[1]=CAMA_M; 
 708:Src/main.c    **** 		 OSD_MIRROR[2]=CAMB_M; 
 709:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMC_M; 		  
 710:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 711:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMB_M; 		 
 712:Src/main.c    **** 		 OSD_SPEAKER[0]=ON;
 713:Src/main.c    **** 		 OSD_SPEAKER[1]=OFF;
 714:Src/main.c    **** 		 OSD_SPEAKER[2]=OFF;	 
 715:Src/main.c    **** 		 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 716:Src/main.c    **** 		   printf("VS4210_MODE8 ch3 ch1 ch2\r\n") ;
 717:Src/main.c    **** 		   break ;
 718:Src/main.c    **** 	   }   
ARM GAS  /tmp/ccQZgaDW.s 			page 14


 719:Src/main.c    **** case VS4210_LOOP_MODE8_314:
 720:Src/main.c    ****    {
 721:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 722:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 723:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 724:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =4 ;
 725:Src/main.c    **** 		 OSD_MIRROR[0]=CAMC_M; 
 726:Src/main.c    **** 		 OSD_MIRROR[1]=CAMA_M; 
 727:Src/main.c    **** 		 OSD_MIRROR[2]=CAMR_M; 
 728:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMC_M; 		  
 729:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 730:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMR_M; 		 
 731:Src/main.c    **** 		 OSD_SPEAKER[0]=OFF;
 732:Src/main.c    **** 		 OSD_SPEAKER[1]=OFF;
 733:Src/main.c    **** 		 OSD_SPEAKER[2]=ON;	 
 734:Src/main.c    **** 		 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 735:Src/main.c    **** 		   printf("VS4210_MODE8 ch3 ch1 ch4\r\n") ;
 736:Src/main.c    **** 		   break ;
 737:Src/main.c    **** 	   }   
 738:Src/main.c    **** case VS4210_LOOP_MODE8_324:
 739:Src/main.c    ****    {
 740:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 741:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 742:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 743:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =4 ;
 744:Src/main.c    **** 		 OSD_MIRROR[0]=CAMC_M; 
 745:Src/main.c    **** 		 OSD_MIRROR[1]=CAMB_M; 
 746:Src/main.c    **** 		 OSD_MIRROR[2]=CAMR_M; 
 747:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMC_M; 		  
 748:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 749:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMR_M; 			 
 750:Src/main.c    **** 		 OSD_SPEAKER[0]=OFF;
 751:Src/main.c    **** 		 OSD_SPEAKER[1]=OFF;
 752:Src/main.c    **** 		 OSD_SPEAKER[2]=ON;	 
 753:Src/main.c    **** 		 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 754:Src/main.c    **** 		   printf("VS4210_MODE8 ch3 ch2 ch4\r\n") ;
 755:Src/main.c    **** 		   break ;
 756:Src/main.c    **** 	   }   
 757:Src/main.c    **** //=============
 758:Src/main.c    **** 
 759:Src/main.c    **** 		case VS4210_LOOP_MODE8_413:
 760:Src/main.c    **** 		   {
 761:Src/main.c    **** 				   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 762:Src/main.c    **** 				   pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 763:Src/main.c    **** 				   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 764:Src/main.c    **** 				   pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 765:Src/main.c    **** 				 OSD_MIRROR[0]=CAMR_M; 
 766:Src/main.c    **** 				 OSD_MIRROR[1]=CAMA_M; 
 767:Src/main.c    **** 				 OSD_MIRROR[2]=CAMC_M; 
 768:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMR_M; 		  
 769:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 770:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 				 
 771:Src/main.c    **** 				 OSD_SPEAKER[0]=ON;
 772:Src/main.c    **** 				 OSD_SPEAKER[1]=OFF;
 773:Src/main.c    **** 				 OSD_SPEAKER[2]=OFF;  
 774:Src/main.c    **** 				 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 775:Src/main.c    **** 				   printf("VS4210_MODE8 ch4 ch1 ch3\r\n") ;
ARM GAS  /tmp/ccQZgaDW.s 			page 15


 776:Src/main.c    **** 				   break ;
 777:Src/main.c    **** 			   }   
 778:Src/main.c    **** 		case VS4210_LOOP_MODE8_423:
 779:Src/main.c    **** 		   {
 780:Src/main.c    **** 				   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE8 ;
 781:Src/main.c    **** 				   pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 782:Src/main.c    **** 				   pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 783:Src/main.c    **** 				   pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 784:Src/main.c    **** 				 OSD_MIRROR[0]=CAMR_M; 
 785:Src/main.c    **** 				 OSD_MIRROR[1]=CAMB_M; 
 786:Src/main.c    **** 				 OSD_MIRROR[2]=CAMC_M; 
 787:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMR_M; 		  
 788:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 789:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 					 
 790:Src/main.c    **** 				 OSD_SPEAKER[0]=ON;
 791:Src/main.c    **** 				 OSD_SPEAKER[1]=OFF;
 792:Src/main.c    **** 				 OSD_SPEAKER[2]=OFF;  
 793:Src/main.c    **** 				 //  pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 794:Src/main.c    **** 				   printf("VS4210_MODE8 ch4 ch2 ch3\r\n") ;
 795:Src/main.c    **** 				   break ;
 796:Src/main.c    **** 			   }   
 797:Src/main.c    **** 
 798:Src/main.c    **** 		//=============
 799:Src/main.c    **** 	    case VS4210_LOOP_MODE10_123:
 800:Src/main.c    ****     {
 801:Src/main.c    ****   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE10 ;
 802:Src/main.c    **** 
 803:Src/main.c    **** pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 804:Src/main.c    **** pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 805:Src/main.c    **** pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 806:Src/main.c    **** 	pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 807:Src/main.c    **** 
 808:Src/main.c    **** 	OSD_MIRROR[0]=CAMR_M; 
 809:Src/main.c    **** 	OSD_MIRROR[1]=CAMA_M; 
 810:Src/main.c    **** 	OSD_MIRROR[2]=CAMB_M; 
 811:Src/main.c    **** 	OSD_MIRROR[3]=CAMC_M; 
 812:Src/main.c    **** 
 813:Src/main.c    **** gabVXIS_Input_mirrorH[0]=CAMR_M;		  
 814:Src/main.c    **** gabVXIS_Input_mirrorH[1]=CAMA_M;		  
 815:Src/main.c    **** gabVXIS_Input_mirrorH[2]=CAMB_M;		
 816:Src/main.c    **** gabVXIS_Input_mirrorH[3]=CAMC_M;		  
 817:Src/main.c    **** 
 818:Src/main.c    **** 	OSD_SPEAKER[0]=ON;
 819:Src/main.c    **** 	OSD_SPEAKER[1]=OFF;
 820:Src/main.c    **** 	OSD_SPEAKER[2]=OFF;
 821:Src/main.c    **** 	OSD_SPEAKER[3]=OFF;
 822:Src/main.c    **** 
 823:Src/main.c    **** 
 824:Src/main.c    ****      //   pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 825:Src/main.c    ****         printf("VS4210_MODE10 ch1 ch2 ch3\r\n") ;
 826:Src/main.c    ****         break ;
 827:Src/main.c    ****     }
 828:Src/main.c    **** case VS4210_LOOP_MODE10_412:
 829:Src/main.c    **** 	{
 830:Src/main.c    **** 	   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE10 ;
 831:Src/main.c    **** 	   pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 832:Src/main.c    **** 	   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
ARM GAS  /tmp/ccQZgaDW.s 			page 16


 833:Src/main.c    **** 	   pVS4210_JointKind1.WindowMap.WMap2 =2 ;
 834:Src/main.c    **** 	    pVS4210_JointKind1.WindowMap.WMap3 =0 ;
 835:Src/main.c    **** 	  OSD_MIRROR[0]=CAMR_M;	
 836:Src/main.c    ****    	  OSD_MIRROR[1]=CAMA_M;	
 837:Src/main.c    ****    	  OSD_MIRROR[2]=CAMB_M;	
 838:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMR_M; 		  
 839:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 840:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMB_M; 	  
 841:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 842:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;
 843:Src/main.c    **** 	  OSD_SPEAKER[2]=OFF;
 844:Src/main.c    **** 	//	 pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 845:Src/main.c    **** 	   printf("VS4210_MODE10 ch4 ch1 ch2\r\n") ;
 846:Src/main.c    **** 		break;
 847:Src/main.c    ****     	}
 848:Src/main.c    **** 	case VS4210_LOOP_MODE10_413:
 849:Src/main.c    **** 		{
 850:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE10 ;
 851:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 852:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 853:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 854:Src/main.c    **** 		  OSD_MIRROR[0]=CAMR_M; 
 855:Src/main.c    **** 		  OSD_MIRROR[1]=CAMA_M; 
 856:Src/main.c    **** 		  OSD_MIRROR[2]=CAMC_M; 
 857:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMR_M; 		  
 858:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M; 		  
 859:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 			  
 860:Src/main.c    **** 		  OSD_SPEAKER[0]=ON;
 861:Src/main.c    **** 		  OSD_SPEAKER[1]=OFF;
 862:Src/main.c    **** 		  OSD_SPEAKER[2]=OFF;
 863:Src/main.c    **** 		//	 pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 864:Src/main.c    **** 		   printf("VS4210_MODE10 ch4 ch1 ch3\r\n") ;
 865:Src/main.c    **** 			break;
 866:Src/main.c    **** 			}
 867:Src/main.c    **** 	case VS4210_LOOP_MODE10_423:
 868:Src/main.c    **** 		{
 869:Src/main.c    **** 		   pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE10 ;
 870:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 871:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 872:Src/main.c    **** 		   pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 873:Src/main.c    **** 		  OSD_MIRROR[0]=CAMR_M; 
 874:Src/main.c    **** 		  OSD_MIRROR[1]=CAMB_M; 
 875:Src/main.c    **** 		  OSD_MIRROR[2]=CAMC_M; 
 876:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMR_M; 		  
 877:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 878:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 			  
 879:Src/main.c    **** 		  OSD_SPEAKER[0]=ON;
 880:Src/main.c    **** 		  OSD_SPEAKER[1]=OFF;
 881:Src/main.c    **** 		  OSD_SPEAKER[2]=OFF;
 882:Src/main.c    **** 		//	 pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 883:Src/main.c    **** 		   printf("VS4210_MODE10 ch4 ch2 ch3\r\n") ;
 884:Src/main.c    **** 			break;
 885:Src/main.c    **** 			}
 886:Src/main.c    **** 
 887:Src/main.c    ****     case VS4210_LOOP_MODE9:
 888:Src/main.c    ****     {
 889:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE9 ;
ARM GAS  /tmp/ccQZgaDW.s 			page 17


 890:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 891:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 892:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 893:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 894:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 895:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 896:Src/main.c    ****    	  OSD_MIRROR[2]=CAMC_M;	
 897:Src/main.c    ****    	  OSD_MIRROR[3]=CAMR_M;	
 898:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
 899:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 900:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 		  
 901:Src/main.c    **** 	gabVXIS_Input_mirrorH[3]=CAMR_M; 	  
 902:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
 903:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;
 904:Src/main.c    **** 	  OSD_SPEAKER[2]=OFF;
 905:Src/main.c    **** 	  OSD_SPEAKER[3]=ON;	  
 906:Src/main.c    ****         printf("VS4210_MODE9\r\n") ;
 907:Src/main.c    ****         break ;
 908:Src/main.c    ****     }
 909:Src/main.c    **** 	#endif
 910:Src/main.c    ****     case VS4210_LOOP_MODE12_12:
 911:Src/main.c    ****     {
 912:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 913:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 914:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 915:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 916:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 917:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
 918:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
 919:Src/main.c    ****   	OSD_SPEAKER[0]=ON;
 920:Src/main.c    ****   	OSD_SPEAKER[1]=OFF;
 921:Src/main.c    ****         printf("VS4210_MODE12 ch1 ch2\r\n") ;
 922:Src/main.c    ****         break ;
 923:Src/main.c    ****     }
 924:Src/main.c    **** 	case VS4210_LOOP_MODE12_14:
 925:Src/main.c    ****       {
 926:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 927:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 928:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =4 ;
 929:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 930:Src/main.c    ****    	  OSD_MIRROR[1]=CAMR_M;
 931:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
 932:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
 933:Src/main.c    ****   	OSD_SPEAKER[0]=OFF;
 934:Src/main.c    ****   	OSD_SPEAKER[1]=ON;	  
 935:Src/main.c    ****         printf("VS4210_MODE12 ch1 ch4\r\n") ;	
 936:Src/main.c    **** 	break;
 937:Src/main.c    ****     	}
 938:Src/main.c    **** 	case VS4210_LOOP_MODE12_42:
 939:Src/main.c    ****       {
 940:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 941:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 942:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 943:Src/main.c    **** 	  OSD_MIRROR[0]=CAMR_M;	
 944:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 945:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMR_M;			  
 946:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
ARM GAS  /tmp/ccQZgaDW.s 			page 18


 947:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 948:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 949:Src/main.c    ****         printf("VS4210_MODE12 ch4 ch2\r\n") ;	
 950:Src/main.c    **** 	break;
 951:Src/main.c    ****     	}
 952:Src/main.c    **** 	case VS4210_LOOP_MODE12_43:
 953:Src/main.c    ****       {
 954:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 955:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 956:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 957:Src/main.c    **** 	  OSD_MIRROR[0]=CAMR_M;	
 958:Src/main.c    ****    	  OSD_MIRROR[1]=CAMC_M;	
 959:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMR_M;			  
 960:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 	  
 961:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 962:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 963:Src/main.c    ****         printf("VS4210_MODE12 ch4 ch3\r\n") ;	
 964:Src/main.c    **** 	break;
 965:Src/main.c    ****     	}
 966:Src/main.c    **** 	//==============
 967:Src/main.c    **** 	case VS4210_LOOP_MODE12_21:
 968:Src/main.c    ****       {
 969:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 970:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 971:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 972:Src/main.c    **** 	  OSD_MIRROR[0]=CAMB_M;	
 973:Src/main.c    ****    	  OSD_MIRROR[1]=CAMA_M;	
 974:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMB_M;			  
 975:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
 976:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 977:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 978:Src/main.c    ****         printf("VS4210_MODE12 ch2 ch1\r\n") ;	
 979:Src/main.c    **** 	break;
 980:Src/main.c    ****     	}
 981:Src/main.c    **** 	case VS4210_LOOP_MODE12_23:
 982:Src/main.c    ****       {
 983:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 984:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 985:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 986:Src/main.c    **** 	  OSD_MIRROR[0]=CAMB_M;	
 987:Src/main.c    ****    	  OSD_MIRROR[1]=CAMC_M;	
 988:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMB_M;			  
 989:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 	  
 990:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 991:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 992:Src/main.c    ****         printf("VS4210_MODE12 ch2 ch3\r\n") ;	
 993:Src/main.c    **** 	break;
 994:Src/main.c    ****     	}
 995:Src/main.c    **** 	case VS4210_LOOP_MODE12_24:
 996:Src/main.c    ****       {
 997:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
 998:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2;
 999:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =4 ;
1000:Src/main.c    **** 	  OSD_MIRROR[0]=CAMB_M;	
1001:Src/main.c    ****    	  OSD_MIRROR[1]=CAMR_M;	
1002:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMB_M;			  
1003:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
ARM GAS  /tmp/ccQZgaDW.s 			page 19


1004:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
1005:Src/main.c    **** 	  OSD_SPEAKER[1]=ON;		  
1006:Src/main.c    ****         printf("VS4210_MODE12 ch2 ch4\r\n") ;	
1007:Src/main.c    **** 	break;
1008:Src/main.c    ****     	}
1009:Src/main.c    **** 
1010:Src/main.c    **** 	//==============
1011:Src/main.c    **** 	case VS4210_LOOP_MODE12_13:
1012:Src/main.c    ****       {
1013:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
1014:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
1015:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =3 ;
1016:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
1017:Src/main.c    ****    	  OSD_MIRROR[1]=CAMC_M;	
1018:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
1019:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 	  
1020:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
1021:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;	
1022:Src/main.c    **** 	  
1023:Src/main.c    ****         printf("VS4210_MODE12 ch1 ch3\r\n") ;	
1024:Src/main.c    **** 	break;
1025:Src/main.c    ****     	}
1026:Src/main.c    **** 	case VS4210_LOOP_MODE12_32:
1027:Src/main.c    ****       {
1028:Src/main.c    ****        pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
1029:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =3 ;
1030:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
1031:Src/main.c    **** 	  OSD_MIRROR[0]=CAMC_M;	
1032:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
1033:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMC_M;			  
1034:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
1035:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
1036:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;	
1037:Src/main.c    **** 	  
1038:Src/main.c    ****         printf("VS4210_MODE12 ch3 ch2\r\n") ;	
1039:Src/main.c    **** 	break;
1040:Src/main.c    ****     	}
1041:Src/main.c    **** 
1042:Src/main.c    ****     case VS4210_LOOP_MODE12_34:
1043:Src/main.c    ****     {
1044:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
1045:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =3 ;
1046:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =4 ;
1047:Src/main.c    **** 	  OSD_MIRROR[0]=CAMC_M;	
1048:Src/main.c    ****    	  OSD_MIRROR[1]=CAMR_M;	
1049:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMC_M;			  
1050:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
1051:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
1052:Src/main.c    **** 	  OSD_SPEAKER[1]=ON;	
1053:Src/main.c    **** 	  
1054:Src/main.c    ****         printf("VS4210_MODE12 ch3 ch4\r\n") ;
1055:Src/main.c    ****         break ;
1056:Src/main.c    ****     }
1057:Src/main.c    **** //========================
1058:Src/main.c    **** 
1059:Src/main.c    **** case VS4210_LOOP_MODE12_31:
1060:Src/main.c    ****   {
ARM GAS  /tmp/ccQZgaDW.s 			page 20


1061:Src/main.c    ****    pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE12 ;
1062:Src/main.c    **** 	pVS4210_JointKind1.WindowMap.WMap0 =3 ;
1063:Src/main.c    **** 	pVS4210_JointKind1.WindowMap.WMap1 =1 ;
1064:Src/main.c    ****   OSD_MIRROR[0]=CAMC_M; 
1065:Src/main.c    ****   OSD_MIRROR[1]=CAMA_M; 
1066:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMC_M;			  
1067:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M;   
1068:Src/main.c    ****   OSD_SPEAKER[0]=ON;
1069:Src/main.c    ****   OSD_SPEAKER[1]=OFF;	
1070:Src/main.c    ****   
1071:Src/main.c    **** 	printf("VS4210_MODE12 ch3 ch1\r\n") ;	
1072:Src/main.c    **** break;
1073:Src/main.c    **** 	}
1074:Src/main.c    **** 
1075:Src/main.c    **** //=======================
1076:Src/main.c    **** #if 0
1077:Src/main.c    ****     case VS4210_LOOP_MODE14:
1078:Src/main.c    ****     {
1079:Src/main.c    ****         pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE14 ;
1080:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
1081:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
1082:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
1083:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
1084:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
1085:Src/main.c    ****    	  OSD_MIRROR[2]=CAMC_M;	
1086:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
1087:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
1088:Src/main.c    **** 	  gabVXIS_Input_mirrorH[2]=CAMC_M;		
1089:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
1090:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;	
1091:Src/main.c    **** 	  OSD_SPEAKER[3]=OFF;	
1092:Src/main.c    **** 	  
1093:Src/main.c    ****         printf("VS4210_MODE14 ch1 ch2\r\n") ;
1094:Src/main.c    ****         break ;
1095:Src/main.c    ****     }
1096:Src/main.c    **** #endif
1097:Src/main.c    ****     }
1098:Src/main.c    **** 
1099:Src/main.c    **** 	
1100:Src/main.c    **** VS4210_SetMutiWindows(&pVS4210_JointKind1) ;
1101:Src/main.c    **** 
1102:Src/main.c    **** //AUDIO_SELECT(index);
1103:Src/main.c    **** AudioMute(ON);
1104:Src/main.c    **** 
1105:Src/main.c    **** MCUTimerCancelTimerEvent( _SYSTEM_TIMER_EVENT_AUDIO_CHANNEL_SELECT);
1106:Src/main.c    **** MCUTimerActiveTimerEvent(SEC(1),  _SYSTEM_TIMER_EVENT_AUDIO_CHANNEL_SELECT);
1107:Src/main.c    **** AUDIO_SELECT(index);
1108:Src/main.c    **** 
1109:Src/main.c    **** CURRENT_CH=index;
1110:Src/main.c    **** 
1111:Src/main.c    **** //ChangeVol(0);
1112:Src/main.c    **** 
1113:Src/main.c    **** }
1114:Src/main.c    **** 
1115:Src/main.c    **** /*
1116:Src/main.c    **** static int GetKet_State(void)
1117:Src/main.c    **** {
ARM GAS  /tmp/ccQZgaDW.s 			page 21


1118:Src/main.c    ****     int re = 0  ;
1119:Src/main.c    **** 
1120:Src/main.c    **** 	#if 0
1121:Src/main.c    ****     if (HAL_GPIO_ReadPin(SW1_GPIO_Port, SW1_Pin ) == 0)
1122:Src/main.c    ****     {
1123:Src/main.c    ****         re =1 ;
1124:Src/main.c    **** 		  re =0 ;
1125:Src/main.c    ****      //   printf("SW1 Key\r\n") ;
1126:Src/main.c    ****     }
1127:Src/main.c    ****     else if (HAL_GPIO_ReadPin(SW2_GPIO_Port, SW2_Pin ) == 0)
1128:Src/main.c    ****     {
1129:Src/main.c    ****         re =2 ;
1130:Src/main.c    **** 		 re =0 ;
1131:Src/main.c    ****     //    printf("SW2 Key\r\n") ;
1132:Src/main.c    ****     }
1133:Src/main.c    ****     else if (HAL_GPIO_ReadPin(SW3_GPIO_Port, SW3_Pin ) == 0)
1134:Src/main.c    ****     {
1135:Src/main.c    ****         re =3 ;
1136:Src/main.c    ****         printf("SW3 Key\r\n") ;
1137:Src/main.c    ****     }
1138:Src/main.c    ****     else if (HAL_GPIO_ReadPin(SW4_GPIO_Port, SW4_Pin ) == 0)
1139:Src/main.c    ****     {
1140:Src/main.c    ****         re =4 ;
1141:Src/main.c    ****         printf("SW4 Key\r\n") ;
1142:Src/main.c    ****     }
1143:Src/main.c    ****     else if (HAL_GPIO_ReadPin(SW5_GPIO_Port, SW5_Pin ) == 0)
1144:Src/main.c    ****     {
1145:Src/main.c    ****        // re =5 ;
1146:Src/main.c    ****       //  printf("SW5 Key\r\n") ;
1147:Src/main.c    ****       Monitor(); 
1148:Src/main.c    ****     }
1149:Src/main.c    ****     else if (HAL_GPIO_ReadPin(SW6_GPIO_Port, SW6_Pin ) == 0)
1150:Src/main.c    ****     {
1151:Src/main.c    ****         re =6 ;
1152:Src/main.c    ****         printf("SW6 Key\r\n") ;
1153:Src/main.c    ****     }
1154:Src/main.c    ****     else if (HAL_GPIO_ReadPin(SW7_GPIO_Port, SW7_Pin ) == 0)
1155:Src/main.c    ****     {
1156:Src/main.c    ****         re =7 ;
1157:Src/main.c    ****         printf("SW7 Key\r\n") ;
1158:Src/main.c    ****     }
1159:Src/main.c    **** #endif
1160:Src/main.c    **** 
1161:Src/main.c    ****     return re ;
1162:Src/main.c    **** }
1163:Src/main.c    **** */
1164:Src/main.c    **** 	static void HDMI_VideoModeDetect(void)
1165:Src/main.c    **** 	{
1166:Src/main.c    **** 		tByte i  ;
1167:Src/main.c    **** 	
1168:Src/main.c    **** 		for(i = 0 ; i< 2/*4*/ ; i++ )
1169:Src/main.c    **** 		{
1170:Src/main.c    **** 			gHDMI_Index = i ;
1171:Src/main.c    **** 			//--- Start --- 20201214-01
1172:Src/main.c    **** 			if( i == 1 )
1173:Src/main.c    **** 			{
1174:Src/main.c    **** 				if( newInRes[0] == _OSD_No_Signal )
ARM GAS  /tmp/ccQZgaDW.s 			page 22


1175:Src/main.c    **** 					bSignal[gHDMI_Index] = 0;
1176:Src/main.c    **** 				else
1177:Src/main.c    **** 					bSignal[gHDMI_Index] = 1;
1178:Src/main.c    **** 			}
1179:Src/main.c    **** 			else
1180:Src/main.c    **** 			//--- End ---
1181:Src/main.c    **** 			bSignal[gHDMI_Index] = CheckHDMIRX();
1182:Src/main.c    **** 
1183:Src/main.c    **** 			//if( (i == 1 )&&(bSignal[1]==1))
1184:Src/main.c    **** 			//{
1185:Src/main.c    **** 			//dbg_Printf("ch%d, InputMode=%d \r\n", (int)(i+1),(int) gbVXIS_InputMode[i] ) ;
1186:Src/main.c    **** 			//}
1187:Src/main.c    **** 			
1188:Src/main.c    **** 			if (PreVState[gHDMI_Index] != VState[gHDMI_Index]  )
1189:Src/main.c    **** 			{
1190:Src/main.c    **** 				PreVState[gHDMI_Index]	= VState[gHDMI_Index] ;
1191:Src/main.c    **** 			}
1192:Src/main.c    **** 	
1193:Src/main.c    **** 			if(bSignal[gHDMI_Index] != bOldSignal[gHDMI_Index] )
1194:Src/main.c    **** 			{
1195:Src/main.c    **** 				bOldSignal[gHDMI_Index] = bSignal[gHDMI_Index] ;
1196:Src/main.c    **** 	
1197:Src/main.c    **** 				if(bSignal[gHDMI_Index] == 0 )
1198:Src/main.c    **** 				{
1199:Src/main.c    **** 					VS4210_Rx_NoSignal(i) ;
1200:Src/main.c    **** 					dbg_Printf("##ch%d, VS4210_Rx_NoSignal\r\n", (int)(i+1) ) ;
1201:Src/main.c    **** 					if (pVS4210_MutiWindows1.DrawOSDFlg != 0)
1202:Src/main.c    **** 					{
1203:Src/main.c    **** 						OSD_Show_Flg = 1 ;
1204:Src/main.c    **** 						Tim1_count = 0 ;
1205:Src/main.c    **** 						OSDStateFlg = 1 ;
1206:Src/main.c    **** 						OSDSecCount = 0 ;
1207:Src/main.c    **** 					}
1208:Src/main.c    **** 					gbVXIS_InputMode[gHDMI_Index] =_OSD_No_Signal ;
1209:Src/main.c    **** 					PrebVXIS_InputMode[gHDMI_Index] = _OSD_No_Signal ;
1210:Src/main.c    **** 
1211:Src/main.c    **** 					if((SelectInputMode==_HDMI_Input)&&(gHDMI_Index==0))
1212:Src/main.c    **** 						Set_Video_Loss_OSD(0,ON);
1213:Src/main.c    **** 					//MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);	
1214:Src/main.c    **** 					//VXISI2CWrite(0x9C,0x0A);
1215:Src/main.c    **** 						SET_Audio_Mute(ON);
1216:Src/main.c    **** 				}
1217:Src/main.c    **** 			}
1218:Src/main.c    **** 	
1219:Src/main.c    **** 			if( bSignal[gHDMI_Index] == 1  )
1220:Src/main.c    **** 			{
1221:Src/main.c    **** 				//--- Start --- 20201214-01
1222:Src/main.c    **** 				if( i == 1 )
1223:Src/main.c    **** 					gbVXIS_InputMode[gHDMI_Index] = newInRes[0];
1224:Src/main.c    **** 				else
1225:Src/main.c    **** 				//--- End ---
1226:Src/main.c    **** 				gbVXIS_InputMode[gHDMI_Index] = GetHDMI_InputMode(gHDMI_Index ) ;
1227:Src/main.c    **** 
1228:Src/main.c    **** 			}
1229:Src/main.c    **** 	
1230:Src/main.c    **** 			if (gbVXIS_InputMode[gHDMI_Index] != PrebVXIS_InputMode[gHDMI_Index] )
1231:Src/main.c    **** 			{
ARM GAS  /tmp/ccQZgaDW.s 			page 23


1232:Src/main.c    **** 				PrebVXIS_InputMode[gHDMI_Index] = gbVXIS_InputMode[gHDMI_Index] ;
1233:Src/main.c    **** 	
1234:Src/main.c    **** 				if (gbVXIS_InputMode[gHDMI_Index] != _OSD_No_Signal)
1235:Src/main.c    **** 				{
1236:Src/main.c    **** 					VS4210_SetInModeOutMode(i , gbVXIS_InputMode[i] , pVS4210_MutiWindows1.OutputMode );
1237:Src/main.c    **** 
1238:Src/main.c    **** 					if((SelectInputMode==_AHD_Input)&&(gHDMI_Index==1))			
1239:Src/main.c    **** 					VXISI2CWrite( 0x19, 0x01 );
1240:Src/main.c    **** 							
1241:Src/main.c    **** 							
1242:Src/main.c    **** 					VS4210_SetInputSizeHV(i ,gHActive[i], gVActive[i], gHTotal[i] ,gVTotal[i] ) ;
1243:Src/main.c    **** 
1244:Src/main.c    **** 
1245:Src/main.c    **** 					dbg_Printf("ch%d, InputMode=%d \r\n", (int)(i+1),(int) gbVXIS_InputMode[i] ) ;
1246:Src/main.c    **** 
1247:Src/main.c    **** 						#if 0
1248:Src/main.c    **** 						if(gbVXIS_InputMode[i]==6)
1249:Src/main.c    **** 						{
1250:Src/main.c    **** 						printf("(set reg.)");
1251:Src/main.c    **** 						 VXISI2CWrite(0x08,0x21);
1252:Src/main.c    **** 						 VXISI2CWrite(0x0A,0x21);
1253:Src/main.c    **** 						 VXISI2CWrite(0x74,0x02);
1254:Src/main.c    **** 						 VXISI2CWrite(0x82,0x40);
1255:Src/main.c    **** 						}
1256:Src/main.c    **** 						#endif
1257:Src/main.c    **** 					if (pVS4210_MutiWindows1.DrawOSDFlg != 0)
1258:Src/main.c    **** 					{
1259:Src/main.c    **** 						OSD_Show_Flg = 1 ;
1260:Src/main.c    **** 						Tim1_count = 0 ;
1261:Src/main.c    **** 						OSDStateFlg = 1 ;
1262:Src/main.c    **** 						OSDSecCount = 0 ;
1263:Src/main.c    **** 					}
1264:Src/main.c    **** 
1265:Src/main.c    **** 						if((SelectInputMode==_HDMI_Input)&&(gHDMI_Index==0))
1266:Src/main.c    **** 						Set_Video_Loss_OSD(0,OFF);	
1267:Src/main.c    **** 
1268:Src/main.c    **** 						if((SelectInputMode==_AHD_Input)&&(gHDMI_Index==1))
1269:Src/main.c    **** 							{
1270:Src/main.c    **** 							MCUTimerActiveTimerEvent(SEC(1), _SYSTEM_TIMER_EVENT_VIDEO_RESET);
1271:Src/main.c    **** 							}
1272:Src/main.c    **** 						
1273:Src/main.c    **** 						if(gHDMI_Index==0)
1274:Src/main.c    **** 						SET_Audio_Mute(OFF);	
1275:Src/main.c    **** 						//MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);
1276:Src/main.c    **** 				}
1277:Src/main.c    **** 			}
1278:Src/main.c    **** 		}
1279:Src/main.c    **** 	}
1280:Src/main.c    **** 
1281:Src/main.c    **** static void HDMI_AudioModeDetect(void)
1282:Src/main.c    **** {
1283:Src/main.c    ****     tByte pbAudioSampleFreq, pbValidCh ;
1284:Src/main.c    ****     pbAudioSampleFreq = 0 ;
1285:Src/main.c    **** 
1286:Src/main.c    ****     getHDMIRXAudioInfo(&pbAudioSampleFreq , &pbValidCh ) ;
1287:Src/main.c    **** 
1288:Src/main.c    ****     if (gbAUDO_INDEX != HDMI_AUDIO_NONE )
ARM GAS  /tmp/ccQZgaDW.s 			page 24


1289:Src/main.c    ****     {
1290:Src/main.c    ****         if (gbAUDO_INDEX  == gHDMI_Index )
1291:Src/main.c    ****         {
1292:Src/main.c    ****             if (gPreAudioSampleFreq != pbAudioSampleFreq)
1293:Src/main.c    ****             {
1294:Src/main.c    ****                 gPreAudioSampleFreq = pbAudioSampleFreq ;
1295:Src/main.c    ****                 HDMI_Tx_SetAudioFs(gPreAudioSampleFreq )  ;
1296:Src/main.c    ****             }
1297:Src/main.c    ****         }
1298:Src/main.c    ****     }
1299:Src/main.c    ****     gAudioSampleFreq[gHDMI_Index] = pbAudioSampleFreq ;
1300:Src/main.c    **** }
1301:Src/main.c    **** 
1302:Src/main.c    **** //=============================================================================
1303:Src/main.c    **** //    Main Initialize Routine
1304:Src/main.c    **** //=============================================================================
1305:Src/main.c    **** void main_init (void)
1306:Src/main.c    **** {
1307:Src/main.c    **** 
1308:Src/main.c    **** 	WORD	rev;
1309:Src/main.c    **** 
1310:Src/main.c    **** 		rev = GetFWRevEE();
1311:Src/main.c    **** 		Printf("\r\nPrev.FW:%04x\r\n", rev);
1312:Src/main.c    **** 		
1313:Src/main.c    **** 		if( GetFWRevEE()!=FWVER )	// exist EEPROM
1314:Src/main.c    **** 		{					
1315:Src/main.c    **** 			Printf("\r\nCurr.FW:%04x", (WORD)FWVER);
1316:Src/main.c    **** 			SaveFWRevEE(FWVER);
1317:Src/main.c    **** 			Printf("\r\nCurr.FW:%04x", (WORD)GetFWRevEE());
1318:Src/main.c    **** 		}
1319:Src/main.c    **** 
1320:Src/main.c    **** 		if( GetFWRevEE()==FWVER )
1321:Src/main.c    **** 		{					// exist EEPROM
1322:Src/main.c    **** 			if( rev != FWVER ) 
1323:Src/main.c    **** 				{
1324:Src/main.c    **** 				ClearBasicEE();
1325:Src/main.c    **** 			
1326:Src/main.c    **** 			Printf("\r\n[MSG]main_init()=> rev != FWVER & call ClearBasicEE()\r\n");  //pinchi test
1327:Src/main.c    **** 				}
1328:Src/main.c    **** 			else
1329:Src/main.c    **** 				{
1330:Src/main.c    **** 				;//DebugLevel = GetDebugLevelEE();
1331:Src/main.c    **** 
1332:Src/main.c    **** 				}
1333:Src/main.c    **** 		}
1334:Src/main.c    **** 		else 
1335:Src/main.c    **** 		{
1336:Src/main.c    **** 			Printf("\r\nCannot access EEPROM!!!!");
1337:Src/main.c    **** 			Printf("\r\nNo initialize");
1338:Src/main.c    **** 			DebugLevel = 0xff;
1339:Src/main.c    **** 			return;
1340:Src/main.c    **** 		}
1341:Src/main.c    **** 
1342:Src/main.c    **** 
1343:Src/main.c    **** 	delay(100);
1344:Src/main.c    **** 	
1345:Src/main.c    **** 
ARM GAS  /tmp/ccQZgaDW.s 			page 25


1346:Src/main.c    **** //	SET_POWER_STATUS(_POWER_STATUS_OFF);
1347:Src/main.c    **** //	SET_TARGET_POWER_STATUS(_POWER_STATUS_NORMAL);
1348:Src/main.c    **** 
1349:Src/main.c    **** }
1350:Src/main.c    **** 
1351:Src/main.c    **** 
1352:Src/main.c    **** void AdjustAutoDayNight(BYTE val)
1353:Src/main.c    **** {
1354:Src/main.c    **** //	BYTE page;
1355:Src/main.c    **** 	BYTE PWMLevelTemp=0;
1356:Src/main.c    **** 	val=0xff-val;
1357:Src/main.c    **** 
1358:Src/main.c    **** 	#if 1//ryan@20170928
1359:Src/main.c    **** 	if(val>=0&&val<100)
1360:Src/main.c    **** 		PWMLevelTemp=0+70;
1361:Src/main.c    **** 	else if(val>=100&&val<140)
1362:Src/main.c    **** 		PWMLevelTemp=20+70;//20;
1363:Src/main.c    **** 	else if(val>=140&&val<180)
1364:Src/main.c    **** 		PWMLevelTemp=40+70;//50;
1365:Src/main.c    **** 	else if(val>=180&&val<220)
1366:Src/main.c    **** 		PWMLevelTemp=60+70;//65;
1367:Src/main.c    **** 	else if(val>=220&&val<=255)//andy 20110414
1368:Src/main.c    **** 	{
1369:Src/main.c    **** 		//#ifdef AWT
1370:Src/main.c    **** 		PWMLevelTemp=75+70;//80;
1371:Src/main.c    **** 		//#else
1372:Src/main.c    **** 		//PWMLevelTemp=115;
1373:Src/main.c    **** 		//#endif
1374:Src/main.c    **** 		//	PWMLevelTemp=128;
1375:Src/main.c    **** 	}
1376:Src/main.c    **** 
1377:Src/main.c    **** 	#else
1378:Src/main.c    **** 	if(val>=0&&val<100)
1379:Src/main.c    **** 		PWMLevelTemp=0;
1380:Src/main.c    **** 	else if(val>=100&&val<140)
1381:Src/main.c    **** 		PWMLevelTemp=30;//20;
1382:Src/main.c    **** 	else if(val>=140&&val<180)
1383:Src/main.c    **** 		PWMLevelTemp=60;//50;
1384:Src/main.c    **** 	else if(val>=180&&val<220)
1385:Src/main.c    **** 		PWMLevelTemp=80;//65;
1386:Src/main.c    **** 	else if(val>=220&&val<=255)//andy 20110414
1387:Src/main.c    **** 	{
1388:Src/main.c    **** 		//#ifdef AWT
1389:Src/main.c    **** 		PWMLevelTemp=110;//80;
1390:Src/main.c    **** 		//#else
1391:Src/main.c    **** 		//PWMLevelTemp=115;
1392:Src/main.c    **** 		//#endif
1393:Src/main.c    **** 	}
1394:Src/main.c    **** 	#endif
1395:Src/main.c    **** 	//else
1396:Src/main.c    **** 	//	PWMLevelTemp=0;
1397:Src/main.c    **** 
1398:Src/main.c    **** 
1399:Src/main.c    **** 	if(DayNightLevel==1)
1400:Src/main.c    **** 	{
1401:Src/main.c    **** 		//if(AutoDayNightDelay<(5+5+5))
1402:Src/main.c    **** 	//		AutoDayNightDelay++;
ARM GAS  /tmp/ccQZgaDW.s 			page 26


1403:Src/main.c    **** 		//else
1404:Src/main.c    **** 		{
1405:Src/main.c    **** 			if(PWMLevel > PWMLevelTemp)
1406:Src/main.c    **** 				PWMLevel-=1;
1407:Src/main.c    **** 			else if(PWMLevel < PWMLevelTemp)
1408:Src/main.c    **** 				PWMLevel+=1;
1409:Src/main.c    **** 
1410:Src/main.c    **** 			AutoDayNightDelay=0;
1411:Src/main.c    **** 		}
1412:Src/main.c    **** 
1413:Src/main.c    **** 	//	PWMLevel=PWMLevelTemp;
1414:Src/main.c    **** 
1415:Src/main.c    **** 		
1416:Src/main.c    **** 	//	Printf("(PWMLevel1=%02x %02x)",(WORD)PWMLevel,(WORD)PWMLevelTemp);
1417:Src/main.c    **** 
1418:Src/main.c    **** 	user_pwm_setvalue(PWMLevel*15);
1419:Src/main.c    **** 
1420:Src/main.c    **** 	}
1421:Src/main.c    **** 	else
1422:Src/main.c    **** 	{
1423:Src/main.c    **** 	//	PWMLevel=PWMLevelTemp;
1424:Src/main.c    **** 		PWMLevel=255/*0x80*/;
1425:Src/main.c    **** 	//		Printf("(PWMLevel2=%02x)",(WORD)PWMLevel);
1426:Src/main.c    **** 	user_pwm_setvalue(_PWMLevelMax);
1427:Src/main.c    **** 	}
1428:Src/main.c    **** 	
1429:Src/main.c    **** #if 0
1430:Src/main.c    **** 
1431:Src/main.c    **** 	//Printf("\r\nLADC0=%02x",(WORD)val);
1432:Src/main.c    **** 	page = ReadTW88( 0xff );
1433:Src/main.c    **** 	WriteTW88( 0xff, 0x00 );		// set page 0
1434:Src/main.c    **** 	WriteTW88( 0xbe, ((ReadTW88(0xbe) & 0xcf) | 0x10) );	// set active Low control, if want active hig
1435:Src/main.c    **** 	//WriteTW88( 0xc4, ((ReadTW88(0xc4) & 0x80)|(val>>2)) );	// set pwm number
1436:Src/main.c    **** 	WriteTW88( 0xc4, ((ReadTW88(0xc4) & 0x80)|(PWMLevel)) );	// set pwm number
1437:Src/main.c    **** 	WriteTW88( 0xff, page );
1438:Src/main.c    **** 	
1439:Src/main.c    **** 	#endif
1440:Src/main.c    **** 	/*
1441:Src/main.c    **** 	if(DayNightLevel==0)
1442:Src/main.c    **** 	user_pwm_setvalue(4000);
1443:Src/main.c    **** 	else
1444:Src/main.c    **** 	user_pwm_setvalue(PWMLevel*15);
1445:Src/main.c    **** */		
1446:Src/main.c    **** }
1447:Src/main.c    **** void LCDPowerON(void)
1448:Src/main.c    **** {
1449:Src/main.c    **** /*
1450:Src/main.c    **** 	Printf("(LCDPowerON)");
1451:Src/main.c    **** 
1452:Src/main.c    **** 	TTLI1_RES(OFF);
1453:Src/main.c    **** 	PANEL_EN(ON);
1454:Src/main.c    **** 	msleep(50) ;
1455:Src/main.c    **** 	msleep(100) ;///for new 7in panel  	LCM : TH070800480NYR40S1-L
1456:Src/main.c    **** //	MCUTimerDelayXms(50);
1457:Src/main.c    **** 	LCD_PWR(ON);
1458:Src/main.c    **** 
1459:Src/main.c    **** 	msleep(50) ;
ARM GAS  /tmp/ccQZgaDW.s 			page 27


1460:Src/main.c    **** 
1461:Src/main.c    **** //	MCUTimerDelayXms(50);
1462:Src/main.c    **** 	BL_ENABLE(ON);
1463:Src/main.c    **** HAL_GPIO_WritePin(PA7_GPIO_Port, PA7_Pin, 0);
1464:Src/main.c    **** 
1465:Src/main.c    **** //	BL_PWM(ON);
1466:Src/main.c    **** 
1467:Src/main.c    **** AudioMute(OFF);
1468:Src/main.c    **** */
1469:Src/main.c    **** 
1470:Src/main.c    **** }
1471:Src/main.c    **** 
1472:Src/main.c    **** void LCDPowerOFF(void)
1473:Src/main.c    **** {
1474:Src/main.c    **** /*
1475:Src/main.c    **** 	Printf("(LCDPowerOFF)");
1476:Src/main.c    **** 
1477:Src/main.c    **** #if 0
1478:Src/main.c    **** 
1479:Src/main.c    **** 	TTLI1_RES(OFF);
1480:Src/main.c    **** 	PANEL_EN(ON);
1481:Src/main.c    **** 	msleep(50) ;
1482:Src/main.c    **** //	MCUTimerDelayXms(50);
1483:Src/main.c    **** 	LCD_PWR(ON);
1484:Src/main.c    **** 
1485:Src/main.c    **** 	msleep(50) ;
1486:Src/main.c    **** 
1487:Src/main.c    **** //	MCUTimerDelayXms(50);
1488:Src/main.c    **** 	BL_ENABLE(ON);
1489:Src/main.c    **** //	BL_PWM(ON);
1490:Src/main.c    **** 
1491:Src/main.c    **** #else
1492:Src/main.c    **** 	BL_ENABLE(OFF);
1493:Src/main.c    **** HAL_GPIO_WritePin(PA7_GPIO_Port, PA7_Pin, 1); 
1494:Src/main.c    **** 
1495:Src/main.c    **** //	BL_PWM(OFF);
1496:Src/main.c    **** //	msleep(50) ;
1497:Src/main.c    **** //	MCUTimerDelayXms(50);
1498:Src/main.c    **** 	TTLI1_RES(ON);
1499:Src/main.c    **** 	PANEL_EN(OFF);
1500:Src/main.c    **** //	MCUTimerDelayXms(50);
1501:Src/main.c    **** //	msleep(50) ;
1502:Src/main.c    **** 
1503:Src/main.c    **** 	LCD_PWR(OFF);
1504:Src/main.c    **** #endif
1505:Src/main.c    **** 
1506:Src/main.c    **** AudioMute(ON);
1507:Src/main.c    **** */
1508:Src/main.c    **** }
1509:Src/main.c    **** 
1510:Src/main.c    **** 
1511:Src/main.c    **** /* USER CODE END 0 */
1512:Src/main.c    **** 
1513:Src/main.c    **** /**
1514:Src/main.c    ****   * @brief  The application entry point.
1515:Src/main.c    ****   * @retval int
1516:Src/main.c    ****   */
ARM GAS  /tmp/ccQZgaDW.s 			page 28


1517:Src/main.c    **** 
1518:Src/main.c    **** void uComOnChipInitial(void)
1519:Src/main.c    **** {
1520:Src/main.c    **** 
1521:Src/main.c    **** //power reset
1522:Src/main.c    **** 
1523:Src/main.c    **** //power
1524:Src/main.c    **** PCON3V3_TP(ON);      
1525:Src/main.c    **** PCON1V2_TP(ON);      
1526:Src/main.c    **** 
1527:Src/main.c    **** VS4210_RST(OFF);   
1528:Src/main.c    **** 
1529:Src/main.c    **** #if 0
1530:Src/main.c    **** 
1531:Src/main.c    **** 	Set_USART1();
1532:Src/main.c    **** 
1533:Src/main.c    **** 
1534:Src/main.c    **** 	//Set_USART2();
1535:Src/main.c    **** 	//Set_USB();
1536:Src/main.c    **** 	//USB_Interrupts_Config();
1537:Src/main.c    **** 	Set_GPIO_Port();
1538:Src/main.c    **** 
1539:Src/main.c    **** 	//AUDIO_OUT_Flag=ReadEEP(0xae);
1540:Src/main.c    **** 	MUTE_OUT(1);
1541:Src/main.c    **** 
1542:Src/main.c    **** 
1543:Src/main.c    **** 
1544:Src/main.c    **** 	Set_Timer();
1545:Src/main.c    **** 	Set_Init_GPIO();
1546:Src/main.c    **** 
1547:Src/main.c    **** 	TIM4_PWM(0);
1548:Src/main.c    **** 	Set_Battery_ADC();
1549:Src/main.c    **** 
1550:Src/main.c    **** 	EXTI_Configuration();
1551:Src/main.c    **** 
1552:Src/main.c    **** 	//Set_I2C_Port();
1553:Src/main.c    **** 	//Set_IR_Port();
1554:Src/main.c    **** 	//Set_ADC_Port();
1555:Src/main.c    **** 	
1556:Src/main.c    **** GPIO_SetBits(GPIOA, GPIO_Pin_1);//TW8816 reset
1557:Src/main.c    **** GPIO_ResetBits(GPIOA, GPIO_Pin_0);//TW8816 reset
1558:Src/main.c    **** 
1559:Src/main.c    **** GPIO_SetBits(GPIOA, GPIO_Pin_12);//ryan@20150525
1560:Src/main.c    **** GPIO_SetBits(GPIOA, GPIO_Pin_13);//ryan@20150525
1561:Src/main.c    **** GPIO_SetBits(GPIOA, GPIO_Pin_14);//ryan@20150525
1562:Src/main.c    **** 
1563:Src/main.c    **** GPIO_SetBits(GPIOC, GPIO_Pin_9);//ryan@20150525
1564:Src/main.c    **** GPIO_SetBits(GPIOC, GPIO_Pin_13);//ryan@20150525
1565:Src/main.c    **** GPIO_SetBits(GPIOC, GPIO_Pin_14);//ryan@20150525
1566:Src/main.c    **** GPIO_SetBits(GPIOC, GPIO_Pin_15);//ryan@20150525
1567:Src/main.c    **** 
1568:Src/main.c    **** GPIO_SetBits(GPIOC, GPIO_Pin_7);//ryan@20150525
1569:Src/main.c    **** 
1570:Src/main.c    **** //GPIO_ResetBits(GPIOC, GPIO_Pin_8);//ryan@20150525
1571:Src/main.c    **** PC_SW(1);//MP board
1572:Src/main.c    **** DC_OUT(0);//MP board
1573:Src/main.c    **** 	
ARM GAS  /tmp/ccQZgaDW.s 			page 29


1574:Src/main.c    **** 
1575:Src/main.c    **** #if __USE_SPI_FLASH__ == 1
1576:Src/main.c    **** 	Reset_SPI();
1577:Src/main.c    **** 	Set_SPI();
1578:Src/main.c    **** #endif
1579:Src/main.c    **** 
1580:Src/main.c    **** 	//Set_USBClock();
1581:Src/main.c    **** 	//USB_Interrupts_Config();
1582:Src/main.c    **** 	//USB_Init();
1583:Src/main.c    **** 
1584:Src/main.c    **** #endif
1585:Src/main.c    **** 
1586:Src/main.c    **** }
1587:Src/main.c    **** 
1588:Src/main.c    **** void user_pwm_setvalue(uint16_t value)
1589:Src/main.c    **** {
1590:Src/main.c    ****     TIM_OC_InitTypeDef sConfigOC;
1591:Src/main.c    ****   
1592:Src/main.c    ****     sConfigOC.OCMode = TIM_OCMODE_PWM1;
1593:Src/main.c    ****     sConfigOC.Pulse = value;
1594:Src/main.c    ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1595:Src/main.c    ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1596:Src/main.c    ****     HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3);
1597:Src/main.c    ****     HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);  
1598:Src/main.c    **** }
1599:Src/main.c    **** 
1600:Src/main.c    **** void LoadEEPROM (void)
1601:Src/main.c    **** {
1602:Src/main.c    **** #if 0
1603:Src/main.c    **** 	 PowerFlag = ReadEEP(EEP_Powerflag);
1604:Src/main.c    **** 	 SelectModeType = ReadEEP(EEP_SelectMode);
1605:Src/main.c    **** 
1606:Src/main.c    **** 	OSD_LOCKF= ReadEEP(EEP_ONOFFChoice);
1607:Src/main.c    **** 	Disp_Input = ReadEEP(EEP_COSDMode); 
1608:Src/main.c    **** 		
1609:Src/main.c    **** 	 TimeStep = ReadEEP(EEP_TimeStep);
1610:Src/main.c    **** 	 Priority=ReadEEP(EEP_PRIORITY);
1611:Src/main.c    **** 	 DayNightLevel= ReadEEP(EEP_AutoMode);
1612:Src/main.c    **** 	 NowModeState = ReadEEP(EEP_NowModeState);
1613:Src/main.c    **** 	
1614:Src/main.c    **** 	AudioVol = GetAudioVolEE();
1615:Src/main.c    **** 	CAMA_M= ReadEEP(EEP_CAMAMode);
1616:Src/main.c    **** 	CAMB_M= ReadEEP(EEP_CAMBMode);
1617:Src/main.c    **** 	CAMC_M= ReadEEP(EEP_CAMCMode);
1618:Src/main.c    **** 	CAMR_M= ReadEEP(EEP_CAMRMode);
1619:Src/main.c    **** 
1620:Src/main.c    **** 	AudioVol = GetAudioVolEE();
1621:Src/main.c    **** 
1622:Src/main.c    **** #endif
1623:Src/main.c    **** }
1624:Src/main.c    **** 
1625:Src/main.c    **** void WaitPowerOn(void)
1626:Src/main.c    **** {
1627:Src/main.c    **** BYTE val;
1628:Src/main.c    **** 	PowerLED(_SYSTEM_TIMER_EVENT_RED_ON);
1629:Src/main.c    **** 
1630:Src/main.c    **** 	LCDPowerOFF();
ARM GAS  /tmp/ccQZgaDW.s 			page 30


1631:Src/main.c    **** 	
1632:Src/main.c    **** 	MCUTimerCancelTimerEvent( _USER_TIMER_EVENT_PANEL_BACKLIGHT_ON);
1633:Src/main.c    **** 
1634:Src/main.c    **** 	Printf("\r\n(Power off..)");
1635:Src/main.c    **** 		
1636:Src/main.c    **** 	while(1) 
1637:Src/main.c    **** 	{	
1638:Src/main.c    **** 
1639:Src/main.c    **** 			CheckKeyIn();
1640:Src/main.c    **** 			if(PowerFlag==ON)
1641:Src/main.c    **** 			{
1642:Src/main.c    **** 				//PowerFlag=ON;
1643:Src/main.c    **** 				WriteEEP(EEP_Powerflag,PowerFlag);//2007.3.28 Justin
1644:Src/main.c    **** 				break;		//poweron
1645:Src/main.c    **** 			}
1646:Src/main.c    **** 			
1647:Src/main.c    **** 		  val=CheckTrigger();
1648:Src/main.c    **** 		 
1649:Src/main.c    **** //		  TriggerHandler(val);
1650:Src/main.c    **** 
1651:Src/main.c    **** 		if(val!=0)
1652:Src/main.c    **** 		{	
1653:Src/main.c    **** 			  PowerLED(_SYSTEM_TIMER_EVENT_GRN_ON);
1654:Src/main.c    **** 			TriggerHandler(val);
1655:Src/main.c    **** 			//	AudioMute(OFF);
1656:Src/main.c    **** 			//DisplayInput();		//william v0.2 20120223
1657:Src/main.c    **** 			/*
1658:Src/main.c    **** 			if(!(TriggerMode==0x08))
1659:Src/main.c    **** 			{
1660:Src/main.c    **** 				//Printf("\r\n(**PowerFlag=%02x)",(WORD)PowerFlag);
1661:Src/main.c    **** 				LCDPowerON(1);//修正power on時顯示太慢問題
1662:Src/main.c    **** 				AudioMute(1);
1663:Src/main.c    **** 			}
1664:Src/main.c    **** 			*/
1665:Src/main.c    **** 			
1666:Src/main.c    **** 		}
1667:Src/main.c    **** 		else
1668:Src/main.c    **** 		{
1669:Src/main.c    **** 			//Printf("\r\n(*NO-TRIG)");
1670:Src/main.c    **** 			TriggerHandler(val);  //Pinchi 20140922 add for AWT ML072Q
1671:Src/main.c    **** 
1672:Src/main.c    **** 
1673:Src/main.c    **** 				if(TriggerFlag==0)
1674:Src/main.c    **** 				{
1675:Src/main.c    **** 				//PowerOff();
1676:Src/main.c    **** 			//	AudioMute(ON);
1677:Src/main.c    **** 				
1678:Src/main.c    **** 				//PowerLED(_SYSTEM_TIMER_EVENT_RED_ON);
1679:Src/main.c    **** 				/*
1680:Src/main.c    **** 				if(live_out_state==1)	////live out issue 
1681:Src/main.c    **** 				{
1682:Src/main.c    **** 				live_out_state=0;
1683:Src/main.c    **** 				SetNowMode();
1684:Src/main.c    **** 				Panel_power=0;
1685:Src/main.c    **** 				}
1686:Src/main.c    **** 				*/
1687:Src/main.c    **** 				}
ARM GAS  /tmp/ccQZgaDW.s 			page 31


1688:Src/main.c    **** 			
1689:Src/main.c    **** 		//	TriggerHandler(val);  //Pinchi 20140922 move to above for AWT ML072Q	
1690:Src/main.c    **** 		}		  
1691:Src/main.c    **** 
1692:Src/main.c    **** 		   SysTimerHandler();
1693:Src/main.c    **** 		   	  EQ_Detect();	 
1694:Src/main.c    **** 			  
1695:Src/main.c    **** //			  	if((GT9147_Scan(1)>=_TOUCH_COUNT_1)&&(TP_ACTION==ON))
1696:Src/main.c    **** 					if(GT9147_Scan(1)>=_TOUCH_COUNT_1)
1697:Src/main.c    **** 
1698:Src/main.c    **** 					PowerFlag=ON;
1699:Src/main.c    **** 					
1700:Src/main.c    ****    	}
1701:Src/main.c    **** 
1702:Src/main.c    **** 	PowerLED(_SYSTEM_TIMER_EVENT_GRN_ON);
1703:Src/main.c    **** //	SHOWOSDINFO();	
1704:Src/main.c    **** 	
1705:Src/main.c    **** //		if((NowModeState==JumpMode)&&(TriggerFlag==0))
1706:Src/main.c    **** //			 ShowJUMPOSD();
1707:Src/main.c    **** 		
1708:Src/main.c    **** 	MCUTimerCancelTimerEvent(_USER_TIMER_EVENT_DISPLAY_DISABLE);
1709:Src/main.c    **** 	MCUTimerActiveTimerEvent(SEC(2),_USER_TIMER_EVENT_DISPLAY_DISABLE);
1710:Src/main.c    **** 
1711:Src/main.c    **** 	
1712:Src/main.c    **** 
1713:Src/main.c    **** MCUTimerActiveTimerEvent(SEC(1),  _USER_TIMER_EVENT_PANEL_BACKLIGHT_ON);
1714:Src/main.c    **** //LCDPowerON();
1715:Src/main.c    **** Printf("\r\n(Power ON..)");		
1716:Src/main.c    **** 
1717:Src/main.c    **** 
1718:Src/main.c    **** }
1719:Src/main.c    **** 
1720:Src/main.c    **** 
1721:Src/main.c    **** int main(void)
1722:Src/main.c    **** {
1723:Src/main.c    ****   /* USER CODE BEGIN 1 */
1724:Src/main.c    ****   TimeOutCount = 0 ;
1725:Src/main.c    **** 
1726:Src/main.c    ****     tByte i ;
1727:Src/main.c    ****     tByte j ;
1728:Src/main.c    ****     tByte exosdLen ;
1729:Src/main.c    ****     tByte exosdStart ;
1730:Src/main.c    **** #ifdef VICTOR_DEBUG
1731:Src/main.c    ****     tByte val ;
1732:Src/main.c    **** #endif
1733:Src/main.c    ****   //  int keystate ;
1734:Src/main.c    **** 
1735:Src/main.c    ****   /* USER CODE END 1 */
1736:Src/main.c    **** 
1737:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
1738:Src/main.c    **** 
1739:Src/main.c    ****   /* Reset of all peripherals, Initializes the F
1740:Src/main.c    ****    sh interface and the Systick. */
1741:Src/main.c    ****   HAL_Init();
1742:Src/main.c    ****   
1743:Src/main.c    ****   /* USER CODE BEGIN Init */
1744:Src/main.c    **** 
ARM GAS  /tmp/ccQZgaDW.s 			page 32


1745:Src/main.c    ****   /* USER CODE END Init */
1746:Src/main.c    **** 
1747:Src/main.c    ****   /* Configure the system clock */
1748:Src/main.c    ****   SystemClock_Config();
1749:Src/main.c    **** 
1750:Src/main.c    ****   
1751:Src/main.c    ****   /* USER CODE BEGIN SysInit */
1752:Src/main.c    ****   InitialTimerEvent();
1753:Src/main.c    **** 
1754:Src/main.c    ****   /* USER CODE END SysInit */
1755:Src/main.c    **** 
1756:Src/main.c    ****   /* Initialize all configured peripherals */
1757:Src/main.c    ****   MX_GPIO_Init();
1758:Src/main.c    ****  // LCDPowerOFF();
1759:Src/main.c    **** // AudioMute(ON);
1760:Src/main.c    **** 
1761:Src/main.c    **** //SET_PCA9554PW(_Shutter_SW,OFF);
1762:Src/main.c    ****  // SET_PCA9554PW(_CCD12_SW,ON);
1763:Src/main.c    **** //SET_PCA9554PW(_PCON5V_AUDIO,ON);
1764:Src/main.c    ****  //SET_PCA9554PW(_COL_PW_5V,OFF);
1765:Src/main.c    **** 
1766:Src/main.c    **** //  HAL_GPIO_WritePin(GREEN_LED_GPIO_Port, GREEN_LED_Pin , GPIO_PIN_SET);
1767:Src/main.c    **** //  HAL_GPIO_WritePin(RED_LED_GPIO_Port, RED_LED_Pin , GPIO_PIN_SET); 
1768:Src/main.c    **** 
1769:Src/main.c    ****  // PowerLED(_SYSTEM_TIMER_EVENT_GRN_ON);
1770:Src/main.c    **** 
1771:Src/main.c    **** //  MX_TIM2_Init();
1772:Src/main.c    ****   MX_TIM3_Init();
1773:Src/main.c    ****   MX_USART1_UART_Init();
1774:Src/main.c    ****   MX_USART2_UART_Init();
1775:Src/main.c    **** //  MX_ADC1_Init();
1776:Src/main.c    ****   
1777:Src/main.c    ****   /* USER CODE BEGIN 2 */
1778:Src/main.c    **** 
1779:Src/main.c    **** //HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_3);	
1780:Src/main.c    ****   
1781:Src/main.c    ****  SW_I2C0_Init() ;
1782:Src/main.c    ****  SW_I2C1_Init() ;
1783:Src/main.c    ****  SW_I2C2_Init() ;
1784:Src/main.c    ****  SW_I2C3_Init() ;
1785:Src/main.c    **** 
1786:Src/main.c    **** //user_pwm_setvalue(2000);
1787:Src/main.c    **** 
1788:Src/main.c    ****   //uComOnChipInitial();
1789:Src/main.c    ****   
1790:Src/main.c    **** // if((SelectInputMode==_HDMI_Input)&&(gHDMI_Index==0))
1791:Src/main.c    **** Set_Video_Loss_OSD(0,ON);
1792:Src/main.c    **** SET_Audio_Mute(ON);
1793:Src/main.c    **** 
1794:Src/main.c    **** 
1795:Src/main.c    ****  // GT9147_Init();
1796:Src/main.c    **** #if 1
1797:Src/main.c    ****   msleep(50) ;
1798:Src/main.c    ****   HAL_UART_Receive_IT(&huart1,(uint8_t*)Rx_data, 1);	//activate UART receive interrupt every time
1799:Src/main.c    ****   HAL_UART_Receive_IT(&huart2,(uint8_t*)Rx2_data, 1);	//activate UART receive interrupt every time
1800:Src/main.c    **** 
1801:Src/main.c    ****  // HAL_GPIO_WritePin(TP2824_RST_GPIO_Port, VS_RST_Pin, 0); //RX RST
ARM GAS  /tmp/ccQZgaDW.s 			page 33


1802:Src/main.c    ****  //HAL_GPIO_WritePin(TX_RST_GPIO_Port, VS_RST_Pin, 0); //TX RST
1803:Src/main.c    ****   HAL_GPIO_WritePin(VS_RST_GPIO_Port, VS_RST_Pin, 0); //VS4210 RST
1804:Src/main.c    ****  TP2824_SET_REST(0);
1805:Src/main.c    **** 
1806:Src/main.c    ****   msleep(100) ;
1807:Src/main.c    ****   //HAL_GPIO_WritePin(TP2824_RST_GPIO_Port, VS_RST_Pin, 1); //VS4210 RST
1808:Src/main.c    **** // HAL_GPIO_WritePin(TX_RST_GPIO_Port, VS_RST_Pin, 1); //TX RST
1809:Src/main.c    ****   HAL_GPIO_WritePin(VS_RST_GPIO_Port, VS_RST_Pin, 1); //VS4210 RST
1810:Src/main.c    ****  TP2824_SET_REST(1);
1811:Src/main.c    **** 
1812:Src/main.c    **** #endif
1813:Src/main.c    **** //LCDPowerON();
1814:Src/main.c    **** // SET_PCA9554PW(_COL_PW_5V,ON); 
1815:Src/main.c    **** 
1816:Src/main.c    ****   //I2CWrite(VS9988_ADDR, 0x01, 0x5A);  //reset
1817:Src/main.c    **** //  printf("\r\nVS4210 sdk2.0 Compiled %s %s !\r\n",__DATE__ , __TIME__);
1818:Src/main.c    **** // val = VXISI2CRead(0x00) ;
1819:Src/main.c    **** //  printf("VS4210 ID = 0x%02X !\r\n", (int)val );
1820:Src/main.c    **** 
1821:Src/main.c    ****   //Init_TP280x_RegSet();
1822:Src/main.c    **** 
1823:Src/main.c    ****   // RX Init
1824:Src/main.c    ****   for (i = 0 ; i < HDMI_IN_NUMBER ; i++ )
1825:Src/main.c    ****   {
1826:Src/main.c    ****       gHDMI_Index = i ;
1827:Src/main.c    ****       dbg_Printf("Init HDMI RX,Chip(%d)....\r\n",(int)i ) ;
1828:Src/main.c    ****       InitHDMIRX(0);
1829:Src/main.c    ****       HDMIRX_WriteI2C_Byte(0x89 ,0x80);
1830:Src/main.c    **** 
1831:Src/main.c    **** #ifdef VICTOR_DEBUG
1832:Src/main.c    ****       val = HDMIRX_ReadI2C_Byte(0x02) ;
1833:Src/main.c    ****       dbg_Printf("IT66021 chip num=%d , 02reg=0x%02x\r\n", (int )i , (int)val ) ;
1834:Src/main.c    **** #endif
1835:Src/main.c    ****   }
1836:Src/main.c    ****   
1837:Src/main.c    **** //  dbg_Printf("Init HDMI Tx....\r\n") ;
1838:Src/main.c    ****  //  HDMI_Tx_Init();
1839:Src/main.c    **** 
1840:Src/main.c    ****    if (HDMI_IN_NUMBER == 4 )
1841:Src/main.c    ****     pVS4210_MutiWindows1.OutputMode = VS4210_1080P_MODE1 ;  // 4windows
1842:Src/main.c    ****   else
1843:Src/main.c    **** 	  #ifdef VS4210_SELECT_WIN1	//20201211-02
1844:Src/main.c    **** 	  pVS4210_MutiWindows1.OutputMode =VS4210_1080P_MODE0_w1;
1845:Src/main.c    **** 	  #else
1846:Src/main.c    ****       pVS4210_MutiWindows1.OutputMode =VS4210_1080P_MODE0_w0;/// VS4210_1080P_MODE12 ;  
1847:Src/main.c    **** 	  #endif
1848:Src/main.c    **** 
1849:Src/main.c    ****   pVS4210_MutiWindows1.AudioChannel = HDMI_AUDIO_1 ;
1850:Src/main.c    ****   pVS4210_MutiWindows1.OutputSize = _OUTPUT_1080P60 ;
1851:Src/main.c    **** 	#ifdef VS4210_SELECT_WIN1	//20201211-02
1852:Src/main.c    **** 	pVS4210_MutiWindows1.WindowMap.WMap0 = 2 ;
1853:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap1 = 1 ; //set ch2 = video2
1854:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap2 = 3 ; //set ch3 = video3
1855:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap3 = 4 ; //set ch4 = video4
1856:Src/main.c    **** 	#else
1857:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap0 = 1 ; //set ch1 = video1
1858:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap1 = 2 ; //set ch2 = video2
ARM GAS  /tmp/ccQZgaDW.s 			page 34


1859:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap2 = 3 ; //set ch3 = video3
1860:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap3 = 4 ; //set ch4 = video4
1861:Src/main.c    **** 	#endif
1862:Src/main.c    **** #if 1
1863:Src/main.c    **** //Extern OSD 20200110-01
1864:Src/main.c    **** VXOSD_UseFont_init(EXTERNOSDNUMBER ,&UserDefineFont1[0] ) ;
1865:Src/main.c    **** 
1866:Src/main.c    **** main_init();
1867:Src/main.c    **** #endif
1868:Src/main.c    **** 
1869:Src/main.c    **** #ifdef  _SUPPORT_EDID_RAM_
1870:Src/main.c    **** //interval EDID ryan@20200917
1871:Src/main.c    **** //SETIT66021EDID();
1872:Src/main.c    **** #endif
1873:Src/main.c    **** 
1874:Src/main.c    ****    Init_TP280x_RegSet();
1875:Src/main.c    **** 
1876:Src/main.c    ****    //test@start
1877:Src/main.c    **** #ifdef VICTOR_DEBUG
1878:Src/main.c    ****    val = VXISI2CRead(0x00) ;
1879:Src/main.c    ****    dbg_Printf("VS4210 chip ID = 0x%02x\r\n",(int)val) ;
1880:Src/main.c    ****    dbg_Printf("VS4210 Init. (Startting...)\r\n") ;
1881:Src/main.c    **** #endif
1882:Src/main.c    **** 
1883:Src/main.c    ****  pVS4210_MutiWindows1.DrawOSDFlg = 0x03 ;  //Enable OSD, bit1=Title, bit0 = bar
1884:Src/main.c    ****   //pVS4210_MutiWindows1.DrawOSDFlg = 0x00 ;  //Enable OSD, bit1=Title, bit0 = bar
1885:Src/main.c    ****   //pVS4210_MutiWindows1.OutputMode = VS4210_1080P_MODE1 ;  // 4windows
1886:Src/main.c    ****   //pVS4210_MutiWindows1.OutputMode = VS4210_1080P_MODE6 ;  // 1_3 windows
1887:Src/main.c    ****   //pVS4210_MutiWindows1.OutputMode = VS4210_1080P_MODE12 ;  // 4windows
1888:Src/main.c    **** //  pVS4210_MutiWindows1.WindowMap.WMap0 = 1 ; //set ch1 = video1
1889:Src/main.c    **** //  pVS4210_MutiWindows1.WindowMap.WMap1 = 2 ; //set ch2 = video2
1890:Src/main.c    **** //  pVS4210_MutiWindows1.WindowMap.WMap2 = 3 ; //set ch3 = video3
1891:Src/main.c    **** //  pVS4210_MutiWindows1.WindowMap.WMap3 = 4 ; //set ch4 = video4
1892:Src/main.c    ****   //pVS4210_MutiWindows1.AudioChannel = HDMI_AUDIO_1 ;
1893:Src/main.c    ****   pVS4210_MutiWindows1.OutputSize = _OUTPUT_1080P60 ;
1894:Src/main.c    ****   //pVS4210_MutiWindows1.OutputSize = _OUTPUT_720P60 ;
1895:Src/main.c    ****   //pVS4210_MutiWindows1.DrawBoxFlg =1 ;
1896:Src/main.c    ****   pVS4210_MutiWindows1.DrawBoxFlg =0 ;
1897:Src/main.c    ****   pVS4210_MutiWindows1.DrawBoxColor= _EN_DRAWBOX_COLOR_White ;
1898:Src/main.c    ****   VXIS_fSetOsdx2(0) ;
1899:Src/main.c    **** 
1900:Src/main.c    ****   VS4210_SetMutiWindows(&pVS4210_MutiWindows1) ;
1901:Src/main.c    **** 
1902:Src/main.c    ****   if (pVS4210_MutiWindows1.DrawOSDFlg != 0)
1903:Src/main.c    ****   {
1904:Src/main.c    ****         OSD_Show_Flg = 1 ;
1905:Src/main.c    ****         Tim1_count = 0 ;
1906:Src/main.c    ****         OSDStateFlg = 1 ;
1907:Src/main.c    ****         OSDSecCount = 0 ;
1908:Src/main.c    ****   }  
1909:Src/main.c    **** 
1910:Src/main.c    **** ExOsdContent[0] = 3*  ((EXTERNOSDNUMBER *2) +1) ;
1911:Src/main.c    **** memset(&ExOsdContent[1] ,_spc , (EXTERNOSDNUMBER+1) *2 ) ;
1912:Src/main.c    **** exosdLen = 4*EXTERNOSDNUMBER + 4  ;
1913:Src/main.c    **** exosdStart = (EXTERNOSDNUMBER +1) *2 +1 ;
1914:Src/main.c    **** j = 1 ;
1915:Src/main.c    **** for (i = exosdStart ; i <= exosdLen ;i = i+2 )
ARM GAS  /tmp/ccQZgaDW.s 			page 35


1916:Src/main.c    **** {
1917:Src/main.c    **** 	ExOsdContent[i] = 0x7F + j ;
1918:Src/main.c    **** 	ExOsdContent[i+1] = _spc ;
1919:Src/main.c    **** 	j++ ;
1920:Src/main.c    **** }
1921:Src/main.c    **** memset(&ExOsdContent[4*EXTERNOSDNUMBER +3] ,_spc ,EXTERNOSDNUMBER *2 +1   ) ;
1922:Src/main.c    ****   exosdLen = EXTERNOSDNUMBER *2  ;
1923:Src/main.c    **** 
1924:Src/main.c    **** Audio_Sel(HDMI_AUDIO_1) ;
1925:Src/main.c    **** //test@end
1926:Src/main.c    **** 
1927:Src/main.c    **** /*
1928:Src/main.c    **** //xxxxx 2013-0801
1929:Src/main.c    **** IT6602HPDCtrl(1,0);	// HDMI port , set HPD = 0
1930:Src/main.c    **** //xxxxx
1931:Src/main.c    **** 
1932:Src/main.c    ****     delay1ms(1000);	//for power sequence
1933:Src/main.c    **** 
1934:Src/main.c    **** IT6602_fsm_init();
1935:Src/main.c    **** */
1936:Src/main.c    **** 
1937:Src/main.c    **** 
1938:Src/main.c    **** #if 0
1939:Src/main.c    **** //PowerLED(_SYSTEM_TIMER_EVENT_GRN_ON);
1940:Src/main.c    **** 
1941:Src/main.c    **** //load eeprom data
1942:Src/main.c    **** //LoadEEPROM();
1943:Src/main.c    **** 
1944:Src/main.c    **** //RX
1945:Src/main.c    ****   ManVidRes = RES1920X1080 ; //0x01
1946:Src/main.c    **** //Init_TP280x_RegSet();
1947:Src/main.c    **** 
1948:Src/main.c    **** //TX
1949:Src/main.c    ****   //VS9988_Set_Format(gbVXIS_InputMode, gbVXIS_OuputModeflg, gbVXIS_OuputChannel  )	;
1950:Src/main.c    ****   //gbVXIS_InputMode = _OSD_NO_SINGLE ;
1951:Src/main.c    ****   //VS9988_BlueScreen() ;
1952:Src/main.c    ****   //VXOSD_SetOnOff(0) ;
1953:Src/main.c    **** 
1954:Src/main.c    ****   //HDMI_Tx_Init() ;
1955:Src/main.c    **** 
1956:Src/main.c    ****   //VS4210 SW Reset@start
1957:Src/main.c    ****     VXISI2CWrite( 0x01 , 0x5A); //Reset
1958:Src/main.c    **** 
1959:Src/main.c    **** 
1960:Src/main.c    ****   //VS4210 SW Reset@end
1961:Src/main.c    ****   //VS4210_SwitchChip(0x40, 0 ) ;c8 cc8
1962:Src/main.c    ****   pVS4210_JointKind1.AudioChannel = HDMI_AUDIO_NONE ;
1963:Src/main.c    ****   pVS4210_JointKind1.DrawBoxFlg =1 ;
1964:Src/main.c    ****   pVS4210_JointKind1.DrawOSDFlg =0x03 ; //bits 0 ,1
1965:Src/main.c    ****   //pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE0_w0 ;
1966:Src/main.c    ****  // pVS4210_JointKind1.OutputMode = VS4210_1080P_MODE1 ;
1967:Src/main.c    **** pVS4210_JointKind1.OutputMode =VS4210_1080P_MODE0_w0;/* VS4210_1080P_MODE1 ;*/
1968:Src/main.c    ****   pVS4210_JointKind1.OutputSize = _OUTPUT_1080P60 ;///*_OUTPUT_800x480;*/
1969:Src/main.c    **** 
1970:Src/main.c    **** //LCDPowerON();
1971:Src/main.c    **** 
1972:Src/main.c    **** //VS4210_Rx_NoSignal(3) ;
ARM GAS  /tmp/ccQZgaDW.s 			page 36


1973:Src/main.c    **** 
1974:Src/main.c    ****  setloopoutmode(0) ;
1975:Src/main.c    **** // SetNowMode();	
1976:Src/main.c    **** 
1977:Src/main.c    ****     VS4210_Rx_NoSignal(0) ;
1978:Src/main.c    ****   VS4210_Rx_NoSignal(1) ;
1979:Src/main.c    ****   VS4210_Rx_NoSignal(2) ;
1980:Src/main.c    ****   VS4210_Rx_NoSignal(3) ;
1981:Src/main.c    ****   
1982:Src/main.c    ****   #endif
1983:Src/main.c    **** // LCDPowerON();
1984:Src/main.c    **** // SetNowMode();  
1985:Src/main.c    ****   //void VS4210_Rx_NoSignal(tByte ch )
1986:Src/main.c    **** 
1987:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim3) ;
1988:Src/main.c    ****   /* USER CODE END 2 */
1989:Src/main.c    ****  
1990:Src/main.c    ****   /* Infinite loop */
1991:Src/main.c    ****   /* USER CODE BEGIN WHILE */
1992:Src/main.c    **** 
1993:Src/main.c    **** //SetNowMode();  
1994:Src/main.c    **** 
1995:Src/main.c    ****  // 	LoadVideoData();
1996:Src/main.c    **** 
1997:Src/main.c    **** //	  AudioMute(OFF);
1998:Src/main.c    **** 	//  LCDPowerON();
1999:Src/main.c    **** 
2000:Src/main.c    **** //	SET_VX8812_SD_Video_Out(_NTSC);
2001:Src/main.c    **** //	SET_VX8812_SD_Video_Out(_PAL);
2002:Src/main.c    **** 
2003:Src/main.c    **** //  Printf("\r\nMain Loop...");
2004:Src/main.c    ****   printf("\r\nMain Loop...");
2005:Src/main.c    **** 
2006:Src/main.c    ****   //VXISI2CWrite(0x08,0x21);
2007:Src/main.c    ****   //VXISI2CWrite(0x0A,0x21);
2008:Src/main.c    ****   //VXISI2CWrite(0x74,0x02);
2009:Src/main.c    ****   //VXISI2CWrite(0x82,0x40);
2010:Src/main.c    **** //  VS4210_FULL88init2(VS4210_hdmi1080P_1080P_mode0_w0_88param);
2011:Src/main.c    **** 
2012:Src/main.c    ****   while (1)
2013:Src/main.c    ****   {
2014:Src/main.c    ****     /* USER CODE END WHILE */
2015:Src/main.c    **** 
2016:Src/main.c    **** //	if(PowerFlag==ON)///power offf
2017:Src/main.c    **** 	 main_loop();
2018:Src/main.c    **** 	
2019:Src/main.c    **** //	WaitPowerOn();
2020:Src/main.c    **** 
2021:Src/main.c    **** 	//user_pwm_setvalue(500);
2022:Src/main.c    **** 
2023:Src/main.c    ****     /* USER CODE BEGIN 3 */
2024:Src/main.c    **** 
2025:Src/main.c    **** 
2026:Src/main.c    **** 
2027:Src/main.c    **** 
2028:Src/main.c    ****   }
2029:Src/main.c    ****   /* USER CODE END 3 */
ARM GAS  /tmp/ccQZgaDW.s 			page 37


2030:Src/main.c    **** }
2031:Src/main.c    **** 
2032:Src/main.c    **** void main_loop(void)
2033:Src/main.c    **** {
2034:Src/main.c    **** 
2035:Src/main.c    **** //BYTE val;
2036:Src/main.c    **** //USHORT loopinterval;
2037:Src/main.c    **** 
2038:Src/main.c    **** //VXISI2CWrite(0xf0,0xb5);
2039:Src/main.c    **** 
2040:Src/main.c    **** while(1)
2041:Src/main.c    **** {
2042:Src/main.c    **** 
2043:Src/main.c    **** #if (_DEBUG_MESSAGE_Monitor==ON)
2044:Src/main.c    **** 	if(AccessEnable==1)
2045:Src/main.c    **** 	#endif
2046:Src/main.c    **** {
2047:Src/main.c    **** 	HDMI_VideoModeDetect() ;
2048:Src/main.c    **** 	HDMI_AudioModeDetect() ;
2049:Src/main.c    **** 
2050:Src/main.c    **** 	TxCount++ ;
2051:Src/main.c    **** 	if (TxCount > 10 )
2052:Src/main.c    **** 	{
2053:Src/main.c    **** 		TxCount = 0 ;
2054:Src/main.c    **** 		HDMITX_DevLoopProc() ;
2055:Src/main.c    **** 	}
2056:Src/main.c    **** 	
2057:Src/main.c    **** //	GetRS232_CMD();
2058:Src/main.c    **** 	//getmcukeystate() ;
2059:Src/main.c    **** 	/*
2060:Src/main.c    **** 	if (IR_END_Flg ==1 )
2061:Src/main.c    **** 	{
2062:Src/main.c    **** 		IR_END_Flg = 0 ;
2063:Src/main.c    **** 		if (u8IRcode == u8IRCheckcode )
2064:Src/main.c    **** 		{
2065:Src/main.c    **** 			dbg_Printf("Vendor=0x%04x,IR=0x%02x\r\n",(int) u16Vendor,(int) u8IRcode) ;
2066:Src/main.c    **** 			if (u16Vendor == IR_Vendor_Code_)
2067:Src/main.c    **** 			{
2068:Src/main.c    **** 				ir_process(u8IRcode) ;
2069:Src/main.c    **** 				u16Vendor =0 ;
2070:Src/main.c    **** 			}
2071:Src/main.c    **** 		}
2072:Src/main.c    **** 	}
2073:Src/main.c    **** 	*/
2074:Src/main.c    **** 
2075:Src/main.c    **** 	msleep(10) ;
2076:Src/main.c    **** 
2077:Src/main.c    **** 	   gMode0LoopCount++ ;
2078:Src/main.c    **** 	   if (gMode0LoopCount > 100 )
2079:Src/main.c    **** 	   {
2080:Src/main.c    **** 		   gMode0LoopCount = 0 ;
2081:Src/main.c    **** 		   OSDSecCount = OSDSecCount +1 ;
2082:Src/main.c    **** 	   }
2083:Src/main.c    **** 	
2084:Src/main.c    **** 	   if (OSDPreSecCount != OSDSecCount)
2085:Src/main.c    **** 	   {
2086:Src/main.c    **** 		   OSDPreSecCount = OSDSecCount ;
ARM GAS  /tmp/ccQZgaDW.s 			page 38


2087:Src/main.c    **** 		   if (gMode0LoopFlg == 1)
2088:Src/main.c    **** 		   {
2089:Src/main.c    **** 			   gMode0LoopSecCount ++ ;
2090:Src/main.c    **** 			   if (gMode0LoopSecCount > gMode0LoopSecCmpVal)
2091:Src/main.c    **** 			   {
2092:Src/main.c    **** 				   gMode0LoopSecCount = 0 ;
2093:Src/main.c    **** 				   pVS4210_MutiWindows1.OutputMode = VS4210_FULL_MODE0 ;
2094:Src/main.c    **** 				   if (pVS4210_MutiWindows1.WindowMap.WMap0 < 4)
2095:Src/main.c    **** 				   {
2096:Src/main.c    **** 					   pVS4210_MutiWindows1.WindowMap.WMap0 = pVS4210_MutiWindows1.WindowMap.WMap0 +1 ;
2097:Src/main.c    **** 				   }
2098:Src/main.c    **** 				   else {
2099:Src/main.c    **** 					   pVS4210_MutiWindows1.WindowMap.WMap0 = 1 ;
2100:Src/main.c    **** 				   }
2101:Src/main.c    **** 				   dbg_Printf("LOOP CH=%d,SMP Sec=%d\r\n",pVS4210_MutiWindows1.WindowMap.WMap0, gMode0LoopSecCm
2102:Src/main.c    **** 				   VS4210_SetMutiWindows(&pVS4210_MutiWindows1) ;
2103:Src/main.c    **** 				   OSDSecCount = 0 ;
2104:Src/main.c    **** 			   }
2105:Src/main.c    **** 		   }
2106:Src/main.c    **** 	
2107:Src/main.c    **** 		   if (gMode0LoopFlg == 1)
2108:Src/main.c    **** 		   {
2109:Src/main.c    **** 		    dbg_Printf("Loop CH=%d,SecCount=%d\r\n",pVS4210_MutiWindows1.WindowMap.WMap0, OSDSecCount)  ;
2110:Src/main.c    **** 		   }
2111:Src/main.c    **** 		   else
2112:Src/main.c    **** 		   {
2113:Src/main.c    **** 		  //dbg_Printf("OSDSecCount=%d\r\n", OSDSecCount)  ;
2114:Src/main.c    **** 		   }
2115:Src/main.c    **** 	
2116:Src/main.c    **** 		   if (OSDStateFlg == 1 )
2117:Src/main.c    **** 		   {
2118:Src/main.c    **** 			   if (OSDSecCount >= OSD_OFF_SEC )
2119:Src/main.c    **** 			   {
2120:Src/main.c    **** 				   OSDSecCount = 0 ;
2121:Src/main.c    **** 				   OSDStateFlg = 0 ;
2122:Src/main.c    **** 				   OSD_Clear_All();
2123:Src/main.c    **** 				   ////VXIS_fSetContentOsdOnOff(0) ;
2124:Src/main.c    **** 			   }
2125:Src/main.c    **** 		   }
2126:Src/main.c    **** 
2127:Src/main.c    **** 		if(VXISI2CRead(0x32)==0 )///CONTRAST
2128:Src/main.c    **** 			VXISI2CWrite(0x32,0x80);
2129:Src/main.c    **** 		   
2130:Src/main.c    **** 	   }
2131:Src/main.c    **** 
2132:Src/main.c    **** 
2133:Src/main.c    **** 	EQ_Detect();
2134:Src/main.c    **** 	
2135:Src/main.c    **** #if (_Source_Switch==ON)
2136:Src/main.c    **** 
2137:Src/main.c    **** 	#if (_Only_AHD_Mode==ON)
2138:Src/main.c    **** 		if((SelectInputMode!=1))
2139:Src/main.c    **** 		{
2140:Src/main.c    **** 			msleep(50) ;
2141:Src/main.c    **** 
2142:Src/main.c    **** 			if((SelectInputMode!=1))
2143:Src/main.c    **** 				{
ARM GAS  /tmp/ccQZgaDW.s 			page 39


2144:Src/main.c    **** 				SelectInputMode=1;
2145:Src/main.c    **** 
2146:Src/main.c    **** 					HS_Select_Win(1);
2147:Src/main.c    **** 				}
2148:Src/main.c    **** 		}	
2149:Src/main.c    **** 
2150:Src/main.c    **** 	#else
2151:Src/main.c    **** 	CheckSelectInputMode=HDMI_SELECT_GET();
2152:Src/main.c    **** 		if((CheckSelectInputMode!=SelectInputMode)/*&&(BOOT_ISSUE==0)*/)
2153:Src/main.c    **** 		{
2154:Src/main.c    **** 			msleep(50) ;
2155:Src/main.c    **** 			CheckSelectInputMode=HDMI_SELECT_GET();
2156:Src/main.c    **** 
2157:Src/main.c    **** 			if((CheckSelectInputMode!=SelectInputMode)/*&&(BOOT_ISSUE==0)*/)
2158:Src/main.c    **** 				{
2159:Src/main.c    **** 				SelectInputMode=CheckSelectInputMode;
2160:Src/main.c    **** 
2161:Src/main.c    **** 			//	HS_Select_Win(HDMI_SELECT_GET());
2162:Src/main.c    **** 
2163:Src/main.c    **** 				if(SelectInputMode==1)
2164:Src/main.c    **** 					HS_Select_Win(1);
2165:Src/main.c    **** 				else
2166:Src/main.c    **** 				HS_Select_Win(0);
2167:Src/main.c    **** 				}
2168:Src/main.c    **** 		}	
2169:Src/main.c    **** 
2170:Src/main.c    **** 		
2171:Src/main.c    **** 	#endif
2172:Src/main.c    **** 
2173:Src/main.c    **** #endif
2174:Src/main.c    **** }
2175:Src/main.c    **** 
2176:Src/main.c    **** 	#if (_DEBUG_MESSAGE_Monitor==ON)
2177:Src/main.c    **** 	do {	//20201211-04
2178:Src/main.c    **** 	while( RS_ready())	Monitor();	
2179:Src/main.c    **** 	}while(AccessEnable == 0);
2180:Src/main.c    **** 	#endif
2181:Src/main.c    **** 
2182:Src/main.c    **** while( RS2_ready())     TOAReceivePaser();
2183:Src/main.c    **** 		
2184:Src/main.c    **** 	      SysTimerHandler();
2185:Src/main.c    **** 
2186:Src/main.c    **** 		Get_2824cIrq();//check tp2824 COC
2187:Src/main.c    **** 
2188:Src/main.c    **** 
2189:Src/main.c    **** 
2190:Src/main.c    **** #if 0
2191:Src/main.c    **** 		  loopinterval += getloopTicCount();
2192:Src/main.c    **** 		  
2193:Src/main.c    **** 					  ///////////////////////////
2194:Src/main.c    **** 					  // sys main flow
2195:Src/main.c    **** 					  ///////////////////////////
2196:Src/main.c    **** 					  if( loopinterval >=MS_LOOP) //execute once each 50m second
2197:Src/main.c    **** 					  {
2198:Src/main.c    **** 				    //printf("loopinterval\n");
2199:Src/main.c    **** 		  
2200:Src/main.c    **** 					   loopinterval =0;
ARM GAS  /tmp/ccQZgaDW.s 			page 40


2201:Src/main.c    **** 				//	 IT6602_fsm();
2202:Src/main.c    **** 					 }
2203:Src/main.c    **** #endif	
2204:Src/main.c    **** 	/*
2205:Src/main.c    **** 		CheckKeyIn();
2206:Src/main.c    **** 
2207:Src/main.c    **** 	CheckTouchP();
2208:Src/main.c    **** 	
2209:Src/main.c    **** 	  EQ_Detect();	 
2210:Src/main.c    **** 
2211:Src/main.c    **** 	if( GT9147_Scan(1)==_TOUCH_COUNT_4 ) break;		
2212:Src/main.c    **** 	
2213:Src/main.c    **** 		  val=CheckTrigger();
2214:Src/main.c    **** 		  TriggerHandler(val);
2215:Src/main.c    **** 
2216:Src/main.c    **** 	if( !CheckKeyIn() ) break;			// POWEROFF
2217:Src/main.c    **** 	*/
2218:Src/main.c    **** 	
2219:Src/main.c    **** 	}
2220:Src/main.c    **** 
2221:Src/main.c    **** }
2222:Src/main.c    **** 
2223:Src/main.c    **** /* static*/ void VS4210_FULL88init2( tcByte *Valn )
2224:Src/main.c    ****  {
2225:Src/main.c    **** 	 tByte i ;
2226:Src/main.c    **** 	 tByte addr ;
2227:Src/main.c    **** 	 tByte i2cVal ;
2228:Src/main.c    **** 	 tcByte *Addrn ; 
2229:Src/main.c    **** 	 Addrn = &VS4210_Addr_88param[0] ; 
2230:Src/main.c    ****  
2231:Src/main.c    **** 	 for (i=0 ; i< VS4210_INIT_NUMBER ; i++)
2232:Src/main.c    **** 	 {
2233:Src/main.c    **** 		 addr	= Addrn[i] ;
2234:Src/main.c    **** 		 i2cVal = Valn[i];
2235:Src/main.c    **** 		 VXISI2CWrite( addr,i2cVal);
2236:Src/main.c    **** 	 }
2237:Src/main.c    ****  }
2238:Src/main.c    **** 
2239:Src/main.c    **** void TP_bt1120_1080P_1080P_mode0_w0(void)
2240:Src/main.c    **** {
2241:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table 1080P... ");
2242:Src/main.c    **** #if 1
2243:Src/main.c    **** 
2244:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_1080P_1080P_mode0_w0_88param);
2245:Src/main.c    **** #else
2246:Src/main.c    **** 
2247:Src/main.c    **** VXISI2CWrite(0x00,0x42); 
2248:Src/main.c    **** VXISI2CWrite(0x01,0x00); 
2249:Src/main.c    **** VXISI2CWrite(0x02,0x00); 
2250:Src/main.c    **** VXISI2CWrite(0x03,0x75); 
2251:Src/main.c    **** VXISI2CWrite(0x04,0x18); 
2252:Src/main.c    **** VXISI2CWrite(0x05,0x80); 
2253:Src/main.c    **** VXISI2CWrite(0x06,0x20); 
2254:Src/main.c    **** VXISI2CWrite(0x07,0x0C); 
2255:Src/main.c    **** VXISI2CWrite(0x08,0x40); 
2256:Src/main.c    **** VXISI2CWrite(0x09,0x0A); 
2257:Src/main.c    **** VXISI2CWrite(0x0A,0x40); 
ARM GAS  /tmp/ccQZgaDW.s 			page 41


2258:Src/main.c    **** VXISI2CWrite(0x0B,0x0A); 
2259:Src/main.c    **** VXISI2CWrite(0x0C,0x00); 
2260:Src/main.c    **** VXISI2CWrite(0x0D,0x20); 
2261:Src/main.c    **** VXISI2CWrite(0x0E,0x10); 
2262:Src/main.c    **** VXISI2CWrite(0x0F,0x00); 
2263:Src/main.c    **** VXISI2CWrite(0x10,0x81); 
2264:Src/main.c    **** VXISI2CWrite(0x11,0x82); 
2265:Src/main.c    **** VXISI2CWrite(0x12,0x74); 
2266:Src/main.c    **** VXISI2CWrite(0x13,0x80); 
2267:Src/main.c    **** VXISI2CWrite(0x14,0x38); 
2268:Src/main.c    **** VXISI2CWrite(0x15,0x78); 
2269:Src/main.c    **** VXISI2CWrite(0x16,0xFE); 
2270:Src/main.c    **** VXISI2CWrite(0x17,0x00); 
2271:Src/main.c    **** VXISI2CWrite(0x18,0xC0); 
2272:Src/main.c    **** VXISI2CWrite(0x19,0x01); 
2273:Src/main.c    **** VXISI2CWrite(0x1A,0x20); 
2274:Src/main.c    **** VXISI2CWrite(0x1B,0x30); 
2275:Src/main.c    **** VXISI2CWrite(0x1C,0x00); 
2276:Src/main.c    **** VXISI2CWrite(0x1D,0x00); 
2277:Src/main.c    **** VXISI2CWrite(0x1E,0x20); 
2278:Src/main.c    **** VXISI2CWrite(0x1F,0xA4); 
2279:Src/main.c    **** VXISI2CWrite(0x20,0x50); 
2280:Src/main.c    **** VXISI2CWrite(0x21,0xE2); 
2281:Src/main.c    **** VXISI2CWrite(0x22,0x87); 
2282:Src/main.c    **** VXISI2CWrite(0x23,0x98); 
2283:Src/main.c    **** VXISI2CWrite(0x24,0x80); 
2284:Src/main.c    **** VXISI2CWrite(0x25,0x44); 
2285:Src/main.c    **** VXISI2CWrite(0x26,0x65); 
2286:Src/main.c    **** VXISI2CWrite(0x27,0x38); 
2287:Src/main.c    **** VXISI2CWrite(0x28,0xF0); 
2288:Src/main.c    **** VXISI2CWrite(0x29,0x00); 
2289:Src/main.c    **** VXISI2CWrite(0x2A,0x00); 
2290:Src/main.c    **** VXISI2CWrite(0x2B,0x11); 
2291:Src/main.c    **** VXISI2CWrite(0x2C,0x00); 
2292:Src/main.c    **** VXISI2CWrite(0x2D,0x00); 
2293:Src/main.c    **** VXISI2CWrite(0x2E,0x47); 
2294:Src/main.c    **** VXISI2CWrite(0x2F,0x80); 
2295:Src/main.c    **** VXISI2CWrite(0x30,0x38); 
2296:Src/main.c    **** VXISI2CWrite(0x31,0x80); 
2297:Src/main.c    **** VXISI2CWrite(0x32,0x80); 
2298:Src/main.c    **** VXISI2CWrite(0x33,0x80); 
2299:Src/main.c    **** VXISI2CWrite(0x34,0xA0); 
2300:Src/main.c    **** VXISI2CWrite(0x35,0x18); 
2301:Src/main.c    **** VXISI2CWrite(0x36,0x46); 
2302:Src/main.c    **** VXISI2CWrite(0x37,0x64); 
2303:Src/main.c    **** VXISI2CWrite(0x38,0x00); 
2304:Src/main.c    **** VXISI2CWrite(0x39,0xFF); 
2305:Src/main.c    **** VXISI2CWrite(0x3A,0x00); 
2306:Src/main.c    **** VXISI2CWrite(0x3B,0x80); 
2307:Src/main.c    **** VXISI2CWrite(0x3C,0x80); 
2308:Src/main.c    **** VXISI2CWrite(0x3D,0x80); 
2309:Src/main.c    **** VXISI2CWrite(0x3E,0x80); 
2310:Src/main.c    **** VXISI2CWrite(0x3F,0x80); 
2311:Src/main.c    **** //VXISI2CWrite(0xVXISI2C)
2312:Src/main.c    **** VXISI2CWrite(0x41,0x60); 
2313:Src/main.c    **** VXISI2CWrite(0x42,0x5F); 
2314:Src/main.c    **** VXISI2CWrite(0x43,0x37); 
ARM GAS  /tmp/ccQZgaDW.s 			page 42


2315:Src/main.c    **** VXISI2CWrite(0x44,0x14); 
2316:Src/main.c    **** VXISI2CWrite(0x45,0x00); 
2317:Src/main.c    **** VXISI2CWrite(0x46,0x00); 
2318:Src/main.c    **** VXISI2CWrite(0x47,0x00); 
2319:Src/main.c    **** VXISI2CWrite(0x48,0x00); 
2320:Src/main.c    **** VXISI2CWrite(0x49,0x00); 
2321:Src/main.c    **** VXISI2CWrite(0x4A,0x00); 
2322:Src/main.c    **** VXISI2CWrite(0x4B,0x20); 
2323:Src/main.c    **** VXISI2CWrite(0x4C,0x00); 
2324:Src/main.c    **** VXISI2CWrite(0x4D,0x00); 
2325:Src/main.c    **** VXISI2CWrite(0x4E,0x00); 
2326:Src/main.c    **** VXISI2CWrite(0x4F,0x7F); 
2327:Src/main.c    **** VXISI2CWrite(0x50,0x20); 
2328:Src/main.c    **** VXISI2CWrite(0x51,0x05); 
2329:Src/main.c    **** VXISI2CWrite(0x52,0x00); 
2330:Src/main.c    **** VXISI2CWrite(0x53,0x06); 
2331:Src/main.c    **** VXISI2CWrite(0x54,0x00); 
2332:Src/main.c    **** VXISI2CWrite(0x55,0xB4); 
2333:Src/main.c    **** VXISI2CWrite(0x56,0x3D); 
2334:Src/main.c    **** VXISI2CWrite(0x57,0x04); 
2335:Src/main.c    **** VXISI2CWrite(0x58,0x00); 
2336:Src/main.c    **** VXISI2CWrite(0x59,0x08); 
2337:Src/main.c    **** VXISI2CWrite(0x5A,0x10); 
2338:Src/main.c    **** VXISI2CWrite(0x5B,0x00); 
2339:Src/main.c    **** VXISI2CWrite(0x5C,0x68); 
2340:Src/main.c    **** VXISI2CWrite(0x5D,0x40); 
2341:Src/main.c    **** VXISI2CWrite(0x5E,0x0A); 
2342:Src/main.c    **** VXISI2CWrite(0x5F,0x00); 
2343:Src/main.c    **** VXISI2CWrite(0x60,0xB4); 
2344:Src/main.c    **** VXISI2CWrite(0x61,0x51); 
2345:Src/main.c    **** VXISI2CWrite(0x62,0x33); 
2346:Src/main.c    **** VXISI2CWrite(0x63,0x01); 
2347:Src/main.c    **** VXISI2CWrite(0x64,0xFF); 
2348:Src/main.c    **** VXISI2CWrite(0x65,0x01); 
2349:Src/main.c    **** VXISI2CWrite(0x66,0xFF); 
2350:Src/main.c    **** VXISI2CWrite(0x67,0x89); 
2351:Src/main.c    **** VXISI2CWrite(0x68,0xAB); 
2352:Src/main.c    **** VXISI2CWrite(0x69,0x88); 
2353:Src/main.c    **** VXISI2CWrite(0x6A,0x6E); 
2354:Src/main.c    **** VXISI2CWrite(0x6B,0x6E); 
2355:Src/main.c    **** VXISI2CWrite(0x6C,0x6E); 
2356:Src/main.c    **** VXISI2CWrite(0x6D,0x00); 
2357:Src/main.c    **** VXISI2CWrite(0x6E,0x00); 
2358:Src/main.c    **** VXISI2CWrite(0x6F,0x00); 
2359:Src/main.c    **** VXISI2CWrite(0x70,0x00); 
2360:Src/main.c    **** VXISI2CWrite(0x71,0x00); 
2361:Src/main.c    **** VXISI2CWrite(0x72,0x00); 
2362:Src/main.c    **** VXISI2CWrite(0x73,0x00); 
2363:Src/main.c    **** VXISI2CWrite(0x74,0x06); 
2364:Src/main.c    **** VXISI2CWrite(0x75,0xFF); 
2365:Src/main.c    **** VXISI2CWrite(0x76,0xFF); 
2366:Src/main.c    **** VXISI2CWrite(0x77,0xFF); 
2367:Src/main.c    **** VXISI2CWrite(0x78,0xFF); 
2368:Src/main.c    **** VXISI2CWrite(0x79,0xFF); 
2369:Src/main.c    **** VXISI2CWrite(0x7A,0xFF); 
2370:Src/main.c    **** VXISI2CWrite(0x7B,0xFF); 
2371:Src/main.c    **** VXISI2CWrite(0x7C,0xFF); 
ARM GAS  /tmp/ccQZgaDW.s 			page 43


2372:Src/main.c    **** VXISI2CWrite(0x7D,0xF0); 
2373:Src/main.c    **** VXISI2CWrite(0x7E,0x80); 
2374:Src/main.c    **** VXISI2CWrite(0x7F,0x00); 
2375:Src/main.c    **** VXISI2CWrite(0x80,0x01); 
2376:Src/main.c    **** VXISI2CWrite(0x81,0x15); 
2377:Src/main.c    **** VXISI2CWrite(0x82,0x40); 
2378:Src/main.c    **** VXISI2CWrite(0x83,0x2D); 
2379:Src/main.c    **** VXISI2CWrite(0x84,0x57); 
2380:Src/main.c    **** VXISI2CWrite(0x85,0xFD); 
2381:Src/main.c    **** VXISI2CWrite(0x86,0x00); 
2382:Src/main.c    **** VXISI2CWrite(0x87,0x00); 
2383:Src/main.c    **** VXISI2CWrite(0x88,0x00); 
2384:Src/main.c    **** VXISI2CWrite(0x89,0x00); 
2385:Src/main.c    **** VXISI2CWrite(0x8A,0x00); 
2386:Src/main.c    **** VXISI2CWrite(0x8B,0x7E); 
2387:Src/main.c    **** VXISI2CWrite(0x8C,0x03); 
2388:Src/main.c    **** VXISI2CWrite(0x8D,0x17); 
2389:Src/main.c    **** VXISI2CWrite(0x8E,0x8C); 
2390:Src/main.c    **** VXISI2CWrite(0x8F,0x00); 
2391:Src/main.c    **** VXISI2CWrite(0x90,0xCC); 
2392:Src/main.c    **** VXISI2CWrite(0x91,0x41); 
2393:Src/main.c    **** VXISI2CWrite(0x92,0xC4); 
2394:Src/main.c    **** VXISI2CWrite(0x93,0x84); 
2395:Src/main.c    **** VXISI2CWrite(0x94,0x98); 
2396:Src/main.c    **** VXISI2CWrite(0x95,0x80); 
2397:Src/main.c    **** VXISI2CWrite(0x96,0x65); 
2398:Src/main.c    **** VXISI2CWrite(0x97,0x70); 
2399:Src/main.c    **** VXISI2CWrite(0x98,0x29); 
2400:Src/main.c    **** VXISI2CWrite(0x99,0x90); 
2401:Src/main.c    **** VXISI2CWrite(0x9A,0x80); 
2402:Src/main.c    **** VXISI2CWrite(0x9B,0x04); 
2403:Src/main.c    **** VXISI2CWrite(0x9C,0x00); 
2404:Src/main.c    **** VXISI2CWrite(0x9D,0x00); 
2405:Src/main.c    **** VXISI2CWrite(0x9E,0x04); 
2406:Src/main.c    **** VXISI2CWrite(0x9F,0x65); 
2407:Src/main.c    **** VXISI2CWrite(0xA0,0x80); 
2408:Src/main.c    **** VXISI2CWrite(0xA1,0xD8); 
2409:Src/main.c    **** VXISI2CWrite(0xA2,0x98); 
2410:Src/main.c    **** VXISI2CWrite(0xA3,0x87); 
2411:Src/main.c    **** VXISI2CWrite(0xA4,0x00); 
2412:Src/main.c    **** VXISI2CWrite(0xA5,0x80); 
2413:Src/main.c    **** VXISI2CWrite(0xA6,0x00); 
2414:Src/main.c    **** VXISI2CWrite(0xA7,0x70); 
2415:Src/main.c    **** VXISI2CWrite(0xA8,0x40); 
2416:Src/main.c    **** VXISI2CWrite(0xA9,0x1E); 
2417:Src/main.c    **** VXISI2CWrite(0xAA,0x2C); 
2418:Src/main.c    **** VXISI2CWrite(0xAB,0x00); 
2419:Src/main.c    **** VXISI2CWrite(0xAC,0x90); 
2420:Src/main.c    **** VXISI2CWrite(0xAD,0x65); 
2421:Src/main.c    **** VXISI2CWrite(0xAE,0x65); 
2422:Src/main.c    **** VXISI2CWrite(0xAF,0x99); 
2423:Src/main.c    **** VXISI2CWrite(0xB0,0x00); 
2424:Src/main.c    **** VXISI2CWrite(0xB1,0x00); 
2425:Src/main.c    **** VXISI2CWrite(0xB2,0x00); 
2426:Src/main.c    **** VXISI2CWrite(0xB3,0x00); 
2427:Src/main.c    **** VXISI2CWrite(0xB4,0x00); 
2428:Src/main.c    **** VXISI2CWrite(0xB5,0x00); 
ARM GAS  /tmp/ccQZgaDW.s 			page 44


2429:Src/main.c    **** VXISI2CWrite(0xB6,0x00); 
2430:Src/main.c    **** VXISI2CWrite(0xB7,0x00); 
2431:Src/main.c    **** VXISI2CWrite(0xB8,0x80); 
2432:Src/main.c    **** VXISI2CWrite(0xB9,0x00); 
2433:Src/main.c    **** VXISI2CWrite(0xBA,0x01); 
2434:Src/main.c    **** VXISI2CWrite(0xBB,0x00); 
2435:Src/main.c    **** VXISI2CWrite(0xBC,0x90); 
2436:Src/main.c    **** VXISI2CWrite(0xBD,0x01); 
2437:Src/main.c    **** VXISI2CWrite(0xBE,0x2C); 
2438:Src/main.c    **** VXISI2CWrite(0xBF,0x00); 
2439:Src/main.c    **** VXISI2CWrite(0xC0,0x00); 
2440:Src/main.c    **** VXISI2CWrite(0xC1,0x20); 
2441:Src/main.c    **** VXISI2CWrite(0xC2,0x20); 
2442:Src/main.c    **** VXISI2CWrite(0xC3,0x20); 
2443:Src/main.c    **** VXISI2CWrite(0xC4,0x20); 
2444:Src/main.c    **** VXISI2CWrite(0xC5,0x20); 
2445:Src/main.c    **** VXISI2CWrite(0xC6,0x00); 
2446:Src/main.c    **** VXISI2CWrite(0xC7,0x00); 
2447:Src/main.c    **** VXISI2CWrite(0xC8,0x00); 
2448:Src/main.c    **** VXISI2CWrite(0xC9,0x00); 
2449:Src/main.c    **** VXISI2CWrite(0xCA,0x00); 
2450:Src/main.c    **** VXISI2CWrite(0xCB,0x00); 
2451:Src/main.c    **** VXISI2CWrite(0xCC,0x00); 
2452:Src/main.c    **** VXISI2CWrite(0xCD,0x00); 
2453:Src/main.c    **** VXISI2CWrite(0xCE,0x00); 
2454:Src/main.c    **** VXISI2CWrite(0xCF,0x00); 
2455:Src/main.c    **** VXISI2CWrite(0xD0,0xFF); 
2456:Src/main.c    **** VXISI2CWrite(0xD1,0x3F); 
2457:Src/main.c    **** VXISI2CWrite(0xD2,0xC2); 
2458:Src/main.c    **** VXISI2CWrite(0xD3,0x3F); 
2459:Src/main.c    **** VXISI2CWrite(0xD4,0x00); 
2460:Src/main.c    **** VXISI2CWrite(0xD5,0x00); 
2461:Src/main.c    **** VXISI2CWrite(0xD6,0x00); 
2462:Src/main.c    **** VXISI2CWrite(0xD7,0x0F); 
2463:Src/main.c    **** VXISI2CWrite(0xD8,0x00); 
2464:Src/main.c    **** VXISI2CWrite(0xD9,0x00); 
2465:Src/main.c    **** VXISI2CWrite(0xDA,0x00); 
2466:Src/main.c    **** VXISI2CWrite(0xDB,0x00); 
2467:Src/main.c    **** VXISI2CWrite(0xDC,0x77); 
2468:Src/main.c    **** VXISI2CWrite(0xDD,0x01); 
2469:Src/main.c    **** VXISI2CWrite(0xDE,0x5F); 
2470:Src/main.c    **** VXISI2CWrite(0xDF,0x96); 
2471:Src/main.c    **** VXISI2CWrite(0xE0,0x00); 
2472:Src/main.c    **** VXISI2CWrite(0xE1,0x00); 
2473:Src/main.c    **** VXISI2CWrite(0xE2,0x00); 
2474:Src/main.c    **** VXISI2CWrite(0xE3,0x47); 
2475:Src/main.c    **** VXISI2CWrite(0xE4,0x3C); 
2476:Src/main.c    **** VXISI2CWrite(0xE5,0x80); 
2477:Src/main.c    **** VXISI2CWrite(0xE6,0x00); 
2478:Src/main.c    **** VXISI2CWrite(0xE7,0x00); 
2479:Src/main.c    **** VXISI2CWrite(0xE8,0x00); 
2480:Src/main.c    **** VXISI2CWrite(0xE9,0x00); 
2481:Src/main.c    **** VXISI2CWrite(0xEA,0x00); 
2482:Src/main.c    **** VXISI2CWrite(0xEB,0x00); 
2483:Src/main.c    **** VXISI2CWrite(0xEC,0x88); 
2484:Src/main.c    **** VXISI2CWrite(0xED,0x00); 
2485:Src/main.c    **** VXISI2CWrite(0xEE,0x00); 
ARM GAS  /tmp/ccQZgaDW.s 			page 45


2486:Src/main.c    **** VXISI2CWrite(0xEF,0x00); 
2487:Src/main.c    **** VXISI2CWrite(0xF0,0x30); 
2488:Src/main.c    **** VXISI2CWrite(0xF1,0x43); 
2489:Src/main.c    **** VXISI2CWrite(0xF2,0x1F); 
2490:Src/main.c    **** VXISI2CWrite(0xF3,0x1F); 
2491:Src/main.c    **** VXISI2CWrite(0xF4,0x22); 
2492:Src/main.c    **** VXISI2CWrite(0xF5,0x73); 
2493:Src/main.c    **** VXISI2CWrite(0xF6,0x53); 
2494:Src/main.c    **** VXISI2CWrite(0xF7,0x80); 
2495:Src/main.c    **** VXISI2CWrite(0xF8,0x01); 
2496:Src/main.c    **** VXISI2CWrite(0xF9,0x01); 
2497:Src/main.c    **** VXISI2CWrite(0xFA,0x00); 
2498:Src/main.c    **** VXISI2CWrite(0xFB,0x00); 
2499:Src/main.c    **** VXISI2CWrite(0xFC,0x00); 
2500:Src/main.c    **** VXISI2CWrite(0xFD,0x70); 
2501:Src/main.c    **** VXISI2CWrite(0xFE,0x18); 
2502:Src/main.c    **** VXISI2CWrite(0xFF,0x07); 
2503:Src/main.c    **** 
2504:Src/main.c    **** 
2505:Src/main.c    **** /*
2506:Src/main.c    **** VXISI2CWrite(0x01,0x00);
2507:Src/main.c    **** VXISI2CWrite(0x02,0x00);
2508:Src/main.c    **** VXISI2CWrite(0x03,0x75);
2509:Src/main.c    **** VXISI2CWrite(0x04,0x18);
2510:Src/main.c    **** VXISI2CWrite(0x05,0x80);
2511:Src/main.c    **** VXISI2CWrite(0x06,0x20);
2512:Src/main.c    **** VXISI2CWrite(0x07,0x0C);
2513:Src/main.c    **** VXISI2CWrite(0x08,0x21);
2514:Src/main.c    **** VXISI2CWrite(0x09,0x0A);
2515:Src/main.c    **** VXISI2CWrite(0x0A,0x21);
2516:Src/main.c    **** VXISI2CWrite(0x0B,0x0A);
2517:Src/main.c    **** VXISI2CWrite(0x0C,0x00);
2518:Src/main.c    **** VXISI2CWrite(0x0D,0x20);
2519:Src/main.c    **** VXISI2CWrite(0x0E,0x10);
2520:Src/main.c    **** VXISI2CWrite(0x0F,0x00);
2521:Src/main.c    **** VXISI2CWrite(0x10,0x81);
2522:Src/main.c    **** VXISI2CWrite(0x11,0x82);
2523:Src/main.c    **** VXISI2CWrite(0x12,0x00);
2524:Src/main.c    **** VXISI2CWrite(0x13,0x00);
2525:Src/main.c    **** VXISI2CWrite(0x14,0x00);
2526:Src/main.c    **** VXISI2CWrite(0x15,0x78);
2527:Src/main.c    **** VXISI2CWrite(0x16,0xFE);
2528:Src/main.c    **** VXISI2CWrite(0x17,0x00);
2529:Src/main.c    **** VXISI2CWrite(0x18,0xC0);
2530:Src/main.c    **** VXISI2CWrite(0x19,0x01);
2531:Src/main.c    **** VXISI2CWrite(0x1A,0x36);
2532:Src/main.c    **** VXISI2CWrite(0x1B,0x30);
2533:Src/main.c    **** VXISI2CWrite(0x1C,0x00);
2534:Src/main.c    **** VXISI2CWrite(0x1D,0x00);
2535:Src/main.c    **** VXISI2CWrite(0x1E,0x20);
2536:Src/main.c    **** VXISI2CWrite(0x1F,0x00);
2537:Src/main.c    **** VXISI2CWrite(0x20,0x00);
2538:Src/main.c    **** VXISI2CWrite(0x21,0x00);
2539:Src/main.c    **** VXISI2CWrite(0x22,0xA7);
2540:Src/main.c    **** VXISI2CWrite(0x23,0x50);
2541:Src/main.c    **** VXISI2CWrite(0x24,0x80);
2542:Src/main.c    **** VXISI2CWrite(0x25,0x44);
ARM GAS  /tmp/ccQZgaDW.s 			page 46


2543:Src/main.c    **** VXISI2CWrite(0x26,0x65);
2544:Src/main.c    **** VXISI2CWrite(0x27,0x38);
2545:Src/main.c    **** VXISI2CWrite(0x28,0xF0);
2546:Src/main.c    **** VXISI2CWrite(0x29,0x00);
2547:Src/main.c    **** VXISI2CWrite(0x2A,0x00);
2548:Src/main.c    **** VXISI2CWrite(0x2B,0x11);
2549:Src/main.c    **** VXISI2CWrite(0x2C,0x00);
2550:Src/main.c    **** VXISI2CWrite(0x2D,0x00);
2551:Src/main.c    **** VXISI2CWrite(0x2E,0x47);
2552:Src/main.c    **** VXISI2CWrite(0x2F,0x80);
2553:Src/main.c    **** VXISI2CWrite(0x30,0x38);
2554:Src/main.c    **** VXISI2CWrite(0x31,0x80);
2555:Src/main.c    **** //VXISI2CWrite(0x32,0x80);
2556:Src/main.c    **** VXISI2CWrite(0x33,0x80);
2557:Src/main.c    **** VXISI2CWrite(0x34,0xA0);
2558:Src/main.c    **** VXISI2CWrite(0x35,0x18);
2559:Src/main.c    **** VXISI2CWrite(0x36,0x46);
2560:Src/main.c    **** VXISI2CWrite(0x37,0x64);
2561:Src/main.c    **** VXISI2CWrite(0x38,0x00);
2562:Src/main.c    **** VXISI2CWrite(0x39,0xFF);
2563:Src/main.c    **** VXISI2CWrite(0x3A,0x1B);
2564:Src/main.c    **** VXISI2CWrite(0x3B,0x80);
2565:Src/main.c    **** VXISI2CWrite(0x3C,0x80);
2566:Src/main.c    **** VXISI2CWrite(0x3D,0x80);
2567:Src/main.c    **** VXISI2CWrite(0x3E,0x80);
2568:Src/main.c    **** VXISI2CWrite(0x3F,0x80);
2569:Src/main.c    **** VXISI2CWrite(0x40,0x80);
2570:Src/main.c    **** VXISI2CWrite(0x41,0x60);
2571:Src/main.c    **** VXISI2CWrite(0x42,0x5F);
2572:Src/main.c    **** VXISI2CWrite(0x43,0x37);
2573:Src/main.c    **** VXISI2CWrite(0x44,0x14);
2574:Src/main.c    **** VXISI2CWrite(0x45,0x06);
2575:Src/main.c    **** VXISI2CWrite(0x46,0x00);
2576:Src/main.c    **** VXISI2CWrite(0x47,0x00);
2577:Src/main.c    **** VXISI2CWrite(0x48,0x00);
2578:Src/main.c    **** VXISI2CWrite(0x49,0x00);
2579:Src/main.c    **** VXISI2CWrite(0x4B,0x20);
2580:Src/main.c    **** VXISI2CWrite(0x4C,0x00);
2581:Src/main.c    **** VXISI2CWrite(0x4D,0x00);
2582:Src/main.c    **** VXISI2CWrite(0x4E,0x00);
2583:Src/main.c    **** VXISI2CWrite(0x4F,0x7F);
2584:Src/main.c    **** VXISI2CWrite(0x50,0x20);
2585:Src/main.c    **** VXISI2CWrite(0x51,0x20);
2586:Src/main.c    **** VXISI2CWrite(0x52,0x00);
2587:Src/main.c    **** VXISI2CWrite(0x53,0x04);
2588:Src/main.c    **** VXISI2CWrite(0x54,0x00);
2589:Src/main.c    **** VXISI2CWrite(0x55,0xA0);
2590:Src/main.c    **** VXISI2CWrite(0x56,0x40);
2591:Src/main.c    **** VXISI2CWrite(0x57,0x04);
2592:Src/main.c    **** VXISI2CWrite(0x58,0x10);
2593:Src/main.c    **** VXISI2CWrite(0x59,0x08);
2594:Src/main.c    **** VXISI2CWrite(0x5A,0x10);
2595:Src/main.c    **** VXISI2CWrite(0x5B,0x00);
2596:Src/main.c    **** VXISI2CWrite(0x5C,0x68);
2597:Src/main.c    **** VXISI2CWrite(0x5D,0x84);
2598:Src/main.c    **** VXISI2CWrite(0x5E,0x08);
2599:Src/main.c    **** VXISI2CWrite(0x5F,0x21);
ARM GAS  /tmp/ccQZgaDW.s 			page 47


2600:Src/main.c    **** VXISI2CWrite(0x60,0x20);
2601:Src/main.c    **** VXISI2CWrite(0x61,0xB0);
2602:Src/main.c    **** VXISI2CWrite(0x62,0x33);
2603:Src/main.c    **** VXISI2CWrite(0x63,0x01);
2604:Src/main.c    **** VXISI2CWrite(0x64,0xFF);
2605:Src/main.c    **** VXISI2CWrite(0x65,0x01);
2606:Src/main.c    **** VXISI2CWrite(0x66,0xFF);
2607:Src/main.c    **** VXISI2CWrite(0x67,0x89);
2608:Src/main.c    **** VXISI2CWrite(0x68,0xAB);
2609:Src/main.c    **** VXISI2CWrite(0x69,0x28);
2610:Src/main.c    **** VXISI2CWrite(0x6A,0x6E);
2611:Src/main.c    **** VXISI2CWrite(0x6B,0x6E);
2612:Src/main.c    **** VXISI2CWrite(0x6C,0x6E);
2613:Src/main.c    **** VXISI2CWrite(0x6D,0x00);
2614:Src/main.c    **** VXISI2CWrite(0x6E,0x00);
2615:Src/main.c    **** VXISI2CWrite(0x6F,0x00);
2616:Src/main.c    **** VXISI2CWrite(0x70,0x00);
2617:Src/main.c    **** VXISI2CWrite(0x71,0x00);
2618:Src/main.c    **** VXISI2CWrite(0x72,0x00);
2619:Src/main.c    **** VXISI2CWrite(0x73,0x00);
2620:Src/main.c    **** VXISI2CWrite(0x74,0x00);
2621:Src/main.c    **** VXISI2CWrite(0x75,0xFF);
2622:Src/main.c    **** VXISI2CWrite(0x76,0xFF);
2623:Src/main.c    **** VXISI2CWrite(0x77,0xFF);
2624:Src/main.c    **** VXISI2CWrite(0x78,0xFF);
2625:Src/main.c    **** VXISI2CWrite(0x79,0xFF);
2626:Src/main.c    **** VXISI2CWrite(0x7A,0xFF);
2627:Src/main.c    **** VXISI2CWrite(0x7B,0xFF);
2628:Src/main.c    **** VXISI2CWrite(0x7C,0xFF);
2629:Src/main.c    **** VXISI2CWrite(0x7D,0xF0);
2630:Src/main.c    **** VXISI2CWrite(0x7E,0x80);
2631:Src/main.c    **** VXISI2CWrite(0x7F,0x00);
2632:Src/main.c    **** VXISI2CWrite(0x80,0x00);
2633:Src/main.c    **** VXISI2CWrite(0x81,0x34);
2634:Src/main.c    **** VXISI2CWrite(0x82,0x40);
2635:Src/main.c    **** VXISI2CWrite(0x83,0x05);
2636:Src/main.c    **** VXISI2CWrite(0x84,0x57);
2637:Src/main.c    **** VXISI2CWrite(0x85,0xFD);
2638:Src/main.c    **** VXISI2CWrite(0x86,0x04);
2639:Src/main.c    **** VXISI2CWrite(0x87,0x24);
2640:Src/main.c    **** VXISI2CWrite(0x88,0x94);
2641:Src/main.c    **** VXISI2CWrite(0x89,0x58);
2642:Src/main.c    **** VXISI2CWrite(0x8A,0x00);
2643:Src/main.c    **** VXISI2CWrite(0x8B,0x7E);
2644:Src/main.c    **** VXISI2CWrite(0x8C,0x03);
2645:Src/main.c    **** VXISI2CWrite(0x8D,0x2C);
2646:Src/main.c    **** VXISI2CWrite(0x8E,0x8C);
2647:Src/main.c    **** VXISI2CWrite(0x8F,0x00);
2648:Src/main.c    **** VXISI2CWrite(0x90,0xCC);
2649:Src/main.c    **** VXISI2CWrite(0x91,0x41);
2650:Src/main.c    **** VXISI2CWrite(0x92,0xC4);
2651:Src/main.c    **** VXISI2CWrite(0x93,0x84);
2652:Src/main.c    **** VXISI2CWrite(0x94,0x98);
2653:Src/main.c    **** VXISI2CWrite(0x95,0x80);
2654:Src/main.c    **** VXISI2CWrite(0x96,0x65);
2655:Src/main.c    **** VXISI2CWrite(0x97,0x70);
2656:Src/main.c    **** VXISI2CWrite(0x98,0x29);
ARM GAS  /tmp/ccQZgaDW.s 			page 48


2657:Src/main.c    **** VXISI2CWrite(0x99,0x90);
2658:Src/main.c    **** VXISI2CWrite(0x9A,0x00);
2659:Src/main.c    **** VXISI2CWrite(0x9B,0x04);
2660:Src/main.c    **** //VXISI2CWrite(0x9C,0x0A);
2661:Src/main.c    **** VXISI2CWrite(0x9D,0x00);
2662:Src/main.c    **** VXISI2CWrite(0x9E,0x04);
2663:Src/main.c    **** VXISI2CWrite(0x9F,0x65);
2664:Src/main.c    **** VXISI2CWrite(0xA0,0x80);
2665:Src/main.c    **** VXISI2CWrite(0xA1,0xD8);
2666:Src/main.c    **** VXISI2CWrite(0xA2,0x98);
2667:Src/main.c    **** VXISI2CWrite(0xA3,0x87);
2668:Src/main.c    **** VXISI2CWrite(0xA4,0x00);
2669:Src/main.c    **** VXISI2CWrite(0xA5,0x80);
2670:Src/main.c    **** VXISI2CWrite(0xA6,0x00);
2671:Src/main.c    **** VXISI2CWrite(0xA7,0x70);
2672:Src/main.c    **** VXISI2CWrite(0xA8,0x40);
2673:Src/main.c    **** VXISI2CWrite(0xA9,0x1E);
2674:Src/main.c    **** VXISI2CWrite(0xAA,0x2C);
2675:Src/main.c    **** VXISI2CWrite(0xAB,0x00);
2676:Src/main.c    **** VXISI2CWrite(0xAC,0x90);
2677:Src/main.c    **** VXISI2CWrite(0xAD,0x65);
2678:Src/main.c    **** VXISI2CWrite(0xAE,0x65);
2679:Src/main.c    **** VXISI2CWrite(0xAF,0x99);
2680:Src/main.c    **** VXISI2CWrite(0xB0,0x00);
2681:Src/main.c    **** VXISI2CWrite(0xB1,0x00);
2682:Src/main.c    **** VXISI2CWrite(0xB2,0x00);
2683:Src/main.c    **** VXISI2CWrite(0xB3,0x00);
2684:Src/main.c    **** VXISI2CWrite(0xB4,0x00);
2685:Src/main.c    **** VXISI2CWrite(0xB5,0x00);
2686:Src/main.c    **** VXISI2CWrite(0xB6,0x00);
2687:Src/main.c    **** VXISI2CWrite(0xB8,0x00);
2688:Src/main.c    **** VXISI2CWrite(0xB9,0x00);
2689:Src/main.c    **** VXISI2CWrite(0xBA,0x00);
2690:Src/main.c    **** VXISI2CWrite(0xBB,0x00);
2691:Src/main.c    **** VXISI2CWrite(0xBC,0x90);
2692:Src/main.c    **** VXISI2CWrite(0xBD,0x01);
2693:Src/main.c    **** VXISI2CWrite(0xBE,0xA5);
2694:Src/main.c    **** VXISI2CWrite(0xC0,0x00);
2695:Src/main.c    **** VXISI2CWrite(0xC1,0x20);
2696:Src/main.c    **** VXISI2CWrite(0xC2,0x20);
2697:Src/main.c    **** VXISI2CWrite(0xC3,0x20);
2698:Src/main.c    **** VXISI2CWrite(0xC4,0x20);
2699:Src/main.c    **** VXISI2CWrite(0xC5,0x20);
2700:Src/main.c    **** VXISI2CWrite(0xD0,0xFF);
2701:Src/main.c    **** VXISI2CWrite(0xD1,0x3F);
2702:Src/main.c    **** VXISI2CWrite(0xD2,0xC2);
2703:Src/main.c    **** VXISI2CWrite(0xD3,0x3F);
2704:Src/main.c    **** VXISI2CWrite(0xD4,0x00);
2705:Src/main.c    **** VXISI2CWrite(0xD5,0x00);
2706:Src/main.c    **** VXISI2CWrite(0xD6,0x00);
2707:Src/main.c    **** VXISI2CWrite(0xD7,0x00);
2708:Src/main.c    **** VXISI2CWrite(0xD8,0x00);
2709:Src/main.c    **** VXISI2CWrite(0xDC,0x77);
2710:Src/main.c    **** VXISI2CWrite(0xDD,0x01);
2711:Src/main.c    **** VXISI2CWrite(0xDE,0xA5);
2712:Src/main.c    **** VXISI2CWrite(0xDF,0xE5);
2713:Src/main.c    **** VXISI2CWrite(0xE0,0x00);
ARM GAS  /tmp/ccQZgaDW.s 			page 49


2714:Src/main.c    **** VXISI2CWrite(0xE1,0x00);
2715:Src/main.c    **** VXISI2CWrite(0xE2,0x00);
2716:Src/main.c    **** VXISI2CWrite(0xE3,0x47);
2717:Src/main.c    **** VXISI2CWrite(0xE4,0x3C);
2718:Src/main.c    **** VXISI2CWrite(0xE5,0x80);
2719:Src/main.c    **** VXISI2CWrite(0xE6,0x00);
2720:Src/main.c    **** VXISI2CWrite(0xE7,0x00);
2721:Src/main.c    **** VXISI2CWrite(0xE8,0x00);
2722:Src/main.c    **** VXISI2CWrite(0xE9,0x00);
2723:Src/main.c    **** VXISI2CWrite(0xEA,0x00);
2724:Src/main.c    **** VXISI2CWrite(0xEB,0x00);
2725:Src/main.c    **** VXISI2CWrite(0xEC,0x88);
2726:Src/main.c    **** VXISI2CWrite(0xED,0x00);
2727:Src/main.c    **** VXISI2CWrite(0xEE,0x00);
2728:Src/main.c    **** VXISI2CWrite(0xEF,0x00);
2729:Src/main.c    **** VXISI2CWrite(0xF0,0x35);
2730:Src/main.c    **** VXISI2CWrite(0xF1,0x43);
2731:Src/main.c    **** VXISI2CWrite(0xF2,0x1F);
2732:Src/main.c    **** VXISI2CWrite(0xF3,0x1F);
2733:Src/main.c    **** VXISI2CWrite(0xF4,0x22);
2734:Src/main.c    **** VXISI2CWrite(0xF5,0x73);
2735:Src/main.c    **** VXISI2CWrite(0xF6,0x53);
2736:Src/main.c    **** VXISI2CWrite(0xF7,0x80);
2737:Src/main.c    **** VXISI2CWrite(0xF8,0x01);
2738:Src/main.c    **** VXISI2CWrite(0xF9,0x01);
2739:Src/main.c    **** VXISI2CWrite(0xFA,0x00);
2740:Src/main.c    **** VXISI2CWrite(0xFB,0x00);
2741:Src/main.c    **** VXISI2CWrite(0xFC,0x00);
2742:Src/main.c    **** VXISI2CWrite(0xFD,0x00);
2743:Src/main.c    **** VXISI2CWrite(0xFE,0x00);
2744:Src/main.c    **** VXISI2CWrite(0xFF,0x00);
2745:Src/main.c    **** */
2746:Src/main.c    **** #endif
2747:Src/main.c    **** 
2748:Src/main.c    **** }
2749:Src/main.c    **** 
2750:Src/main.c    **** void TP_bt1120_720P_1080P_mode0_w0(void)
2751:Src/main.c    **** {
2752:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table 720P... ");
2753:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_720P_1080P_mode0_w0_88param);
2754:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);
2755:Src/main.c    **** 
2756:Src/main.c    **** }
2757:Src/main.c    **** 
2758:Src/main.c    **** void TP_bt1120_NTSC_1080P_mode0_w0(void)
2759:Src/main.c    **** {
2760:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table NTSC... ");
2761:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_NTSC_1080P_mode0_w0_88param);
2762:Src/main.c    **** }
2763:Src/main.c    **** 
2764:Src/main.c    **** void TP_bt1120_PAL_1080P_mode0_w0(void)
2765:Src/main.c    **** {
2766:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table PAL... ");
2767:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_PAL_1080P_mode0_w0_88param);
2768:Src/main.c    **** 	#if 0
2769:Src/main.c    **** 	VXISI2CWrite(0x01,0x00);	
2770:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);	
ARM GAS  /tmp/ccQZgaDW.s 			page 50


2771:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);	
2772:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);	
2773:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);	
2774:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);	
2775:Src/main.c    **** 	VXISI2CWrite(0x07,0x08);	
2776:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);	
2777:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);	
2778:Src/main.c    **** 	VXISI2CWrite(0x0A,0x40);	
2779:Src/main.c    **** 	VXISI2CWrite(0x0B,0x09);	
2780:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);	
2781:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);	
2782:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);	
2783:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);	
2784:Src/main.c    **** 	VXISI2CWrite(0x10,0xA1);	
2785:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);	
2786:Src/main.c    **** 	VXISI2CWrite(0x12,0x21);	
2787:Src/main.c    **** 	VXISI2CWrite(0x13,0xD0);	
2788:Src/main.c    **** 	VXISI2CWrite(0x14,0x20);	
2789:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);	
2790:Src/main.c    **** 	VXISI2CWrite(0x16,0xFF);	
2791:Src/main.c    **** 	VXISI2CWrite(0x17,0x01);	
2792:Src/main.c    **** 	VXISI2CWrite(0x18,0xC0);	
2793:Src/main.c    **** 	VXISI2CWrite(0x19,0x01);	
2794:Src/main.c    **** 	VXISI2CWrite(0x1A,0x26);	
2795:Src/main.c    **** 	VXISI2CWrite(0x1B,0x14);	
2796:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);	
2797:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);	
2798:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);	
2799:Src/main.c    **** 	VXISI2CWrite(0x1F,0x31);	
2800:Src/main.c    **** 	VXISI2CWrite(0x20,0x60);	
2801:Src/main.c    **** 	VXISI2CWrite(0x21,0x39);	
2802:Src/main.c    **** 	VXISI2CWrite(0x22,0x97);	
2803:Src/main.c    **** 	VXISI2CWrite(0x23,0x48);	
2804:Src/main.c    **** 	VXISI2CWrite(0x24,0xBC);	
2805:Src/main.c    **** 	VXISI2CWrite(0x25,0x11);	
2806:Src/main.c    **** 	VXISI2CWrite(0x26,0x38);	
2807:Src/main.c    **** 	VXISI2CWrite(0x27,0x20);	
2808:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);	
2809:Src/main.c    **** 	VXISI2CWrite(0x29,0x40);	
2810:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);	
2811:Src/main.c    **** 	VXISI2CWrite(0x2B,0x00);	
2812:Src/main.c    **** 	VXISI2CWrite(0x2C,0xFF);	
2813:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);	
2814:Src/main.c    **** 	VXISI2CWrite(0x2E,0x17);	
2815:Src/main.c    **** 	VXISI2CWrite(0x2F,0xBC);	
2816:Src/main.c    **** 	VXISI2CWrite(0x30,0x20);	
2817:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);	
2818:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);	
2819:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);	
2820:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);	
2821:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);	
2822:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);	
2823:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);	
2824:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);	
2825:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);	
2826:Src/main.c    **** 	VXISI2CWrite(0x3A,0x15);	
2827:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);	
ARM GAS  /tmp/ccQZgaDW.s 			page 51


2828:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);	
2829:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);	
2830:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);	
2831:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);	
2832:Src/main.c    **** 	//VXISI2CWrite(0xVXI);SI2CWr
2833:Src/main.c    **** 	VXISI2CWrite(0x41,0x60);	
2834:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);	
2835:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);	
2836:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);	
2837:Src/main.c    **** 	VXISI2CWrite(0x45,0x05);	
2838:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);	
2839:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);	
2840:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);	
2841:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);	
2842:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);	
2843:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);	
2844:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);	
2845:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);	
2846:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);	
2847:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);	
2848:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);	
2849:Src/main.c    **** 	VXISI2CWrite(0x52,0x00);	
2850:Src/main.c    **** 	VXISI2CWrite(0x53,0x04);	
2851:Src/main.c    **** 	VXISI2CWrite(0x54,0x00);	
2852:Src/main.c    **** 	VXISI2CWrite(0x55,0xE0);	
2853:Src/main.c    **** 	VXISI2CWrite(0x56,0x40);	
2854:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);	
2855:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);	
2856:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);	
2857:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);	
2858:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);	
2859:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);	
2860:Src/main.c    **** 	VXISI2CWrite(0x5D,0x40);	
2861:Src/main.c    **** 	VXISI2CWrite(0x5E,0x08);	
2862:Src/main.c    **** 	VXISI2CWrite(0x5F,0x00);	
2863:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);	
2864:Src/main.c    **** 	VXISI2CWrite(0x61,0x54);	
2865:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);	
2866:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);	
2867:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);	
2868:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);	
2869:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);	
2870:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);	
2871:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);	
2872:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);	
2873:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);	
2874:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);	
2875:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);	
2876:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);	
2877:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);	
2878:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);	
2879:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);	
2880:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);	
2881:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);	
2882:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);	
2883:Src/main.c    **** 	VXISI2CWrite(0x74,0x06);	
2884:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);	
ARM GAS  /tmp/ccQZgaDW.s 			page 52


2885:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);	
2886:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);	
2887:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);	
2888:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);	
2889:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);	
2890:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);	
2891:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);	
2892:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);	
2893:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);	
2894:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);	
2895:Src/main.c    **** 	VXISI2CWrite(0x80,0x01);	
2896:Src/main.c    **** 	VXISI2CWrite(0x81,0x34);	
2897:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);	
2898:Src/main.c    **** 	VXISI2CWrite(0x83,0x2D);	
2899:Src/main.c    **** 	VXISI2CWrite(0x84,0x6F);	
2900:Src/main.c    **** 	VXISI2CWrite(0x85,0x00);	
2901:Src/main.c    **** 	VXISI2CWrite(0x86,0x00);	
2902:Src/main.c    **** 	VXISI2CWrite(0x87,0x00);	
2903:Src/main.c    **** 	VXISI2CWrite(0x88,0x13);	
2904:Src/main.c    **** 	VXISI2CWrite(0x89,0x1B);	
2905:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);	
2906:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);	
2907:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);	
2908:Src/main.c    **** 	VXISI2CWrite(0x8D,0x17);	
2909:Src/main.c    **** 	VXISI2CWrite(0x8E,0xB0);	
2910:Src/main.c    **** 	VXISI2CWrite(0x8F,0x14);	
2911:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);	
2912:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);	
2913:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);	
2914:Src/main.c    **** 	VXISI2CWrite(0x93,0x81);	
2915:Src/main.c    **** 	VXISI2CWrite(0x94,0xC9);	
2916:Src/main.c    **** 	VXISI2CWrite(0x95,0xBC);	
2917:Src/main.c    **** 	VXISI2CWrite(0x96,0xF5);	
2918:Src/main.c    **** 	VXISI2CWrite(0x97,0x70);	
2919:Src/main.c    **** 	VXISI2CWrite(0x98,0x15);	
2920:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);	
2921:Src/main.c    **** 	VXISI2CWrite(0x9A,0x80);	
2922:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);	
2923:Src/main.c    **** 	VXISI2CWrite(0x9C,0x00);	
2924:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);	
2925:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);	
2926:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);	
2927:Src/main.c    **** 	VXISI2CWrite(0xA0,0x3B);	
2928:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD0);	
2929:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);	
2930:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);	
2931:Src/main.c    **** 	VXISI2CWrite(0xA4,0x20);	
2932:Src/main.c    **** 	VXISI2CWrite(0xA5,0x38);	
2933:Src/main.c    **** 	VXISI2CWrite(0xA6,0xFD);	
2934:Src/main.c    **** 	VXISI2CWrite(0xA7,0x50);	
2935:Src/main.c    **** 	VXISI2CWrite(0xA8,0x40);	
2936:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);	
2937:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2E);	
2938:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);	
2939:Src/main.c    **** 	VXISI2CWrite(0xAC,0x84);	
2940:Src/main.c    **** 	VXISI2CWrite(0xAD,0xF5);	
2941:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);	
ARM GAS  /tmp/ccQZgaDW.s 			page 53


2942:Src/main.c    **** 	VXISI2CWrite(0xAF,0x9B);	
2943:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);	
2944:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);	
2945:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);	
2946:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);	
2947:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);	
2948:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);	
2949:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);	
2950:Src/main.c    **** 	VXISI2CWrite(0xB8,0x01);	
2951:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);	
2952:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);	
2953:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);	
2954:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);	
2955:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);	
2956:Src/main.c    **** 	VXISI2CWrite(0xBE,0x1D);	
2957:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);	
2958:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);	
2959:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);	
2960:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);	
2961:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);	
2962:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);	
2963:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);	
2964:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);	
2965:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);	
2966:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);	
2967:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);	
2968:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);	
2969:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);	
2970:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);	
2971:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);	
2972:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);	
2973:Src/main.c    **** 	VXISI2CWrite(0xDD,0x00);	
2974:Src/main.c    **** 	VXISI2CWrite(0xDE,0xD3);	
2975:Src/main.c    **** 	VXISI2CWrite(0xDF,0x49);	
2976:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);	
2977:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);	
2978:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);	
2979:Src/main.c    **** 	VXISI2CWrite(0xE3,0x17);	
2980:Src/main.c    **** 	VXISI2CWrite(0xE4,0xE0);	
2981:Src/main.c    **** 	VXISI2CWrite(0xE5,0xBC);	
2982:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);	
2983:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);	
2984:Src/main.c    **** 	VXISI2CWrite(0xE8,0x00);	
2985:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);	
2986:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);	
2987:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);	
2988:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);	
2989:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);	
2990:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);	
2991:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);	
2992:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);	
2993:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);	
2994:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);	
2995:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);	
2996:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);	
2997:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);	
2998:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);	
ARM GAS  /tmp/ccQZgaDW.s 			page 54


2999:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);	
3000:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);	
3001:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);	
3002:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);	
3003:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);	
3004:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);	
3005:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);	
3006:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);	
3007:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);	
3008:Src/main.c    **** #endif
3009:Src/main.c    **** 
3010:Src/main.c    **** }
3011:Src/main.c    **** void SET_VS4210_720_480_out(void)
3012:Src/main.c    **** {
3013:Src/main.c    **** 	Printf("\r\nSET_VS4210_720_480_out ");
3014:Src/main.c    **** 
3015:Src/main.c    **** 	VXISI2CWrite(0x01,0x00);
3016:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);
3017:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);
3018:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);
3019:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);
3020:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);
3021:Src/main.c    **** 	VXISI2CWrite(0x07,0x08);
3022:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);
3023:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);
3024:Src/main.c    **** 	VXISI2CWrite(0x0A,0x41);
3025:Src/main.c    **** 	VXISI2CWrite(0x0B,0x07);
3026:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);
3027:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);
3028:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);
3029:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);
3030:Src/main.c    **** 	VXISI2CWrite(0x10,0x80);
3031:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);
3032:Src/main.c    **** 	VXISI2CWrite(0x12,0x21);
3033:Src/main.c    **** 	VXISI2CWrite(0x13,0xD0);
3034:Src/main.c    **** 	VXISI2CWrite(0x14,0xE0);
3035:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);
3036:Src/main.c    **** 	VXISI2CWrite(0x16,0xFE);
3037:Src/main.c    **** 	VXISI2CWrite(0x17,0x00);
3038:Src/main.c    **** 	VXISI2CWrite(0x18,0xC8);
3039:Src/main.c    **** 	VXISI2CWrite(0x19,0x00);
3040:Src/main.c    **** 	VXISI2CWrite(0x1A,0x23);
3041:Src/main.c    **** 	VXISI2CWrite(0x1B,0x00);
3042:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);
3043:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);
3044:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);
3045:Src/main.c    **** 	VXISI2CWrite(0x1F,0x32);
3046:Src/main.c    **** 	VXISI2CWrite(0x20,0x5A);
3047:Src/main.c    **** 	VXISI2CWrite(0x21,0x0D);
3048:Src/main.c    **** 	VXISI2CWrite(0x22,0x32);
3049:Src/main.c    **** 	VXISI2CWrite(0x23,0x5A);
3050:Src/main.c    **** 	VXISI2CWrite(0x24,0xD0);
3051:Src/main.c    **** 	VXISI2CWrite(0x25,0x21);
3052:Src/main.c    **** 	VXISI2CWrite(0x26,0x0D);
3053:Src/main.c    **** 	VXISI2CWrite(0x27,0xE0);
3054:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);
3055:Src/main.c    **** 	VXISI2CWrite(0x29,0x00);
ARM GAS  /tmp/ccQZgaDW.s 			page 55


3056:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);
3057:Src/main.c    **** 	VXISI2CWrite(0x2B,0x01);
3058:Src/main.c    **** 	VXISI2CWrite(0x2C,0xFF);
3059:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);
3060:Src/main.c    **** 	VXISI2CWrite(0x2E,0x12);
3061:Src/main.c    **** 	VXISI2CWrite(0x2F,0xD0);
3062:Src/main.c    **** 	VXISI2CWrite(0x30,0xE0);
3063:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);
3064:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);
3065:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);
3066:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);
3067:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);
3068:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);
3069:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);
3070:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);
3071:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);
3072:Src/main.c    **** 	VXISI2CWrite(0x3A,0x03);
3073:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);
3074:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);
3075:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);
3076:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);
3077:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);
3078:Src/main.c    **** 	//VXISI2CWrite(0xVXISI);2CWrite(0x80
3079:Src/main.c    **** 	VXISI2CWrite(0x41,0x60);
3080:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);
3081:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);
3082:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);
3083:Src/main.c    **** 	VXISI2CWrite(0x45,0x04);
3084:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);
3085:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);
3086:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);
3087:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);
3088:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);
3089:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);
3090:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);
3091:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);
3092:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);
3093:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);
3094:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);
3095:Src/main.c    **** 	VXISI2CWrite(0x52,0x00);
3096:Src/main.c    **** 	VXISI2CWrite(0x53,0x04);
3097:Src/main.c    **** 	VXISI2CWrite(0x54,0x00);
3098:Src/main.c    **** 	VXISI2CWrite(0x55,0xE0);
3099:Src/main.c    **** 	VXISI2CWrite(0x56,0x40);
3100:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);
3101:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);
3102:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);
3103:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);
3104:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);
3105:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);
3106:Src/main.c    **** 	VXISI2CWrite(0x5D,0x40);
3107:Src/main.c    **** 	VXISI2CWrite(0x5E,0x08);
3108:Src/main.c    **** 	VXISI2CWrite(0x5F,0x00);
3109:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);
3110:Src/main.c    **** 	VXISI2CWrite(0x61,0x54);
3111:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);
3112:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);
ARM GAS  /tmp/ccQZgaDW.s 			page 56


3113:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);
3114:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);
3115:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);
3116:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);
3117:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);
3118:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);
3119:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);
3120:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);
3121:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);
3122:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);
3123:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);
3124:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);
3125:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);
3126:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);
3127:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);
3128:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);
3129:Src/main.c    **** 	VXISI2CWrite(0x74,0x00);
3130:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);
3131:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);
3132:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);
3133:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);
3134:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);
3135:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);
3136:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);
3137:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);
3138:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);
3139:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);
3140:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);
3141:Src/main.c    **** 	VXISI2CWrite(0x80,0x00);
3142:Src/main.c    **** 	VXISI2CWrite(0x81,0x34);
3143:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);
3144:Src/main.c    **** 	VXISI2CWrite(0x83,0x05);
3145:Src/main.c    **** 	VXISI2CWrite(0x84,0x59);
3146:Src/main.c    **** 	VXISI2CWrite(0x85,0xFD);
3147:Src/main.c    **** 	VXISI2CWrite(0x86,0x04);
3148:Src/main.c    **** 	VXISI2CWrite(0x87,0x24);
3149:Src/main.c    **** 	VXISI2CWrite(0x88,0x94);
3150:Src/main.c    **** 	VXISI2CWrite(0x89,0x58);
3151:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);
3152:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);
3153:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);
3154:Src/main.c    **** 	VXISI2CWrite(0x8D,0x2C);
3155:Src/main.c    **** 	VXISI2CWrite(0x8E,0x8C);
3156:Src/main.c    **** 	VXISI2CWrite(0x8F,0x00);
3157:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);
3158:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);
3159:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);
3160:Src/main.c    **** 	VXISI2CWrite(0x93,0x31);
3161:Src/main.c    **** 	VXISI2CWrite(0x94,0x87);
3162:Src/main.c    **** 	VXISI2CWrite(0x95,0xD0);
3163:Src/main.c    **** 	VXISI2CWrite(0x96,0xF3);
3164:Src/main.c    **** 	VXISI2CWrite(0x97,0x20);
3165:Src/main.c    **** 	VXISI2CWrite(0x98,0x11);
3166:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);
3167:Src/main.c    **** 	VXISI2CWrite(0x9A,0xFF);
3168:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);
3169:Src/main.c    **** 	VXISI2CWrite(0x9C,0x0A);
ARM GAS  /tmp/ccQZgaDW.s 			page 57


3170:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);
3171:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);
3172:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);
3173:Src/main.c    **** 	VXISI2CWrite(0xA0,0x2F);
3174:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD9);
3175:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);
3176:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);
3177:Src/main.c    **** 	VXISI2CWrite(0xA4,0xE1);
3178:Src/main.c    **** 	VXISI2CWrite(0xA5,0x38);
3179:Src/main.c    **** 	VXISI2CWrite(0xA6,0xC2);
3180:Src/main.c    **** 	VXISI2CWrite(0xA7,0x70);
3181:Src/main.c    **** 	VXISI2CWrite(0xA8,0x00);
3182:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);
3183:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2E);
3184:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);
3185:Src/main.c    **** 	VXISI2CWrite(0xAC,0x84);
3186:Src/main.c    **** 	VXISI2CWrite(0xAD,0xF3);
3187:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);
3188:Src/main.c    **** 	VXISI2CWrite(0xAF,0x99);
3189:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);
3190:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);
3191:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);
3192:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);
3193:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);
3194:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);
3195:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);
3196:Src/main.c    **** 	VXISI2CWrite(0xB8,0x80);
3197:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);
3198:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);
3199:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);
3200:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);
3201:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);
3202:Src/main.c    **** 	VXISI2CWrite(0xBE,0x2C);
3203:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);
3204:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);
3205:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);
3206:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);
3207:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);
3208:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);
3209:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);
3210:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);
3211:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);
3212:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);
3213:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);
3214:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);
3215:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);
3216:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);
3217:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);
3218:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);
3219:Src/main.c    **** 	VXISI2CWrite(0xDD,0x00);
3220:Src/main.c    **** 	VXISI2CWrite(0xDE,0xAF);
3221:Src/main.c    **** 	VXISI2CWrite(0xDF,0xEF);
3222:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);
3223:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);
3224:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);
3225:Src/main.c    **** 	VXISI2CWrite(0xE3,0x12);
3226:Src/main.c    **** 	VXISI2CWrite(0xE4,0xE2);
ARM GAS  /tmp/ccQZgaDW.s 			page 58


3227:Src/main.c    **** 	VXISI2CWrite(0xE5,0xD0);
3228:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);
3229:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);
3230:Src/main.c    **** 	VXISI2CWrite(0xE8,0x0F);
3231:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);
3232:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);
3233:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);
3234:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);
3235:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);
3236:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);
3237:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);
3238:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);
3239:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);
3240:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);
3241:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);
3242:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);
3243:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);
3244:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);
3245:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);
3246:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);
3247:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);
3248:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);
3249:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);
3250:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);
3251:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);
3252:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);
3253:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);
3254:Src/main.c    **** 					 
3255:Src/main.c    **** 
3256:Src/main.c    **** 
3257:Src/main.c    **** }
3258:Src/main.c    **** 
3259:Src/main.c    **** void SET_VS4210_1280_720_out(void)
3260:Src/main.c    **** {
3261:Src/main.c    **** 	Printf("\r\nSET_VS4210_1280_720_out");
3262:Src/main.c    **** 
3263:Src/main.c    **** 	VXISI2CWrite(0x01,0x00);
3264:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);
3265:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);
3266:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);
3267:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);
3268:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);
3269:Src/main.c    **** 	VXISI2CWrite(0x07,0x08);
3270:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);
3271:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);
3272:Src/main.c    **** 	VXISI2CWrite(0x0A,0x41);
3273:Src/main.c    **** 	VXISI2CWrite(0x0B,0x07);
3274:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);
3275:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);
3276:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);
3277:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);
3278:Src/main.c    **** 	VXISI2CWrite(0x10,0x80);
3279:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);
3280:Src/main.c    **** 	VXISI2CWrite(0x12,0x21);
3281:Src/main.c    **** 	VXISI2CWrite(0x13,0xD0);
3282:Src/main.c    **** 	VXISI2CWrite(0x14,0xE0);
3283:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);
ARM GAS  /tmp/ccQZgaDW.s 			page 59


3284:Src/main.c    **** 	VXISI2CWrite(0x16,0xFE);
3285:Src/main.c    **** 	VXISI2CWrite(0x17,0x00);
3286:Src/main.c    **** 	VXISI2CWrite(0x18,0xC8);
3287:Src/main.c    **** 	VXISI2CWrite(0x19,0x00);
3288:Src/main.c    **** 	VXISI2CWrite(0x1A,0x23);
3289:Src/main.c    **** 	VXISI2CWrite(0x1B,0x00);
3290:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);
3291:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);
3292:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);
3293:Src/main.c    **** 	VXISI2CWrite(0x1F,0x32);
3294:Src/main.c    **** 	VXISI2CWrite(0x20,0x5A);
3295:Src/main.c    **** 	VXISI2CWrite(0x21,0x0D);
3296:Src/main.c    **** 	VXISI2CWrite(0x22,0x32);
3297:Src/main.c    **** 	VXISI2CWrite(0x23,0x5A);
3298:Src/main.c    **** 	VXISI2CWrite(0x24,0xD0);
3299:Src/main.c    **** 	VXISI2CWrite(0x25,0x21);
3300:Src/main.c    **** 	VXISI2CWrite(0x26,0x0D);
3301:Src/main.c    **** 	VXISI2CWrite(0x27,0xE0);
3302:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);
3303:Src/main.c    **** 	VXISI2CWrite(0x29,0x00);
3304:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);
3305:Src/main.c    **** 	VXISI2CWrite(0x2B,0x01);
3306:Src/main.c    **** 	VXISI2CWrite(0x2C,0xFF);
3307:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);
3308:Src/main.c    **** 	VXISI2CWrite(0x2E,0x12);
3309:Src/main.c    **** 	VXISI2CWrite(0x2F,0xD0);
3310:Src/main.c    **** 	VXISI2CWrite(0x30,0xE0);
3311:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);
3312:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);
3313:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);
3314:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);
3315:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);
3316:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);
3317:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);
3318:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);
3319:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);
3320:Src/main.c    **** 	VXISI2CWrite(0x3A,0x03);
3321:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);
3322:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);
3323:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);
3324:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);
3325:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);
3326:Src/main.c    **** 	//VXISI2CWrite(0xVXISI);2CWrite(0x80
3327:Src/main.c    **** 	VXISI2CWrite(0x41,0x60);
3328:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);
3329:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);
3330:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);
3331:Src/main.c    **** 	VXISI2CWrite(0x45,0x04);
3332:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);
3333:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);
3334:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);
3335:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);
3336:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);
3337:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);
3338:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);
3339:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);
3340:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);
ARM GAS  /tmp/ccQZgaDW.s 			page 60


3341:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);
3342:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);
3343:Src/main.c    **** 	VXISI2CWrite(0x52,0x00);
3344:Src/main.c    **** 	VXISI2CWrite(0x53,0x04);
3345:Src/main.c    **** 	VXISI2CWrite(0x54,0x00);
3346:Src/main.c    **** 	VXISI2CWrite(0x55,0xE0);
3347:Src/main.c    **** 	VXISI2CWrite(0x56,0x40);
3348:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);
3349:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);
3350:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);
3351:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);
3352:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);
3353:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);
3354:Src/main.c    **** 	VXISI2CWrite(0x5D,0x40);
3355:Src/main.c    **** 	VXISI2CWrite(0x5E,0x08);
3356:Src/main.c    **** 	VXISI2CWrite(0x5F,0x00);
3357:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);
3358:Src/main.c    **** 	VXISI2CWrite(0x61,0x54);
3359:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);
3360:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);
3361:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);
3362:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);
3363:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);
3364:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);
3365:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);
3366:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);
3367:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);
3368:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);
3369:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);
3370:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);
3371:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);
3372:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);
3373:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);
3374:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);
3375:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);
3376:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);
3377:Src/main.c    **** 	VXISI2CWrite(0x74,0x00);
3378:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);
3379:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);
3380:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);
3381:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);
3382:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);
3383:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);
3384:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);
3385:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);
3386:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);
3387:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);
3388:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);
3389:Src/main.c    **** 	VXISI2CWrite(0x80,0x00);
3390:Src/main.c    **** 	VXISI2CWrite(0x81,0x34);
3391:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);
3392:Src/main.c    **** 	VXISI2CWrite(0x83,0x05);
3393:Src/main.c    **** 	VXISI2CWrite(0x84,0x59);
3394:Src/main.c    **** 	VXISI2CWrite(0x85,0xFD);
3395:Src/main.c    **** 	VXISI2CWrite(0x86,0x04);
3396:Src/main.c    **** 	VXISI2CWrite(0x87,0x24);
3397:Src/main.c    **** 	VXISI2CWrite(0x88,0x94);
ARM GAS  /tmp/ccQZgaDW.s 			page 61


3398:Src/main.c    **** 	VXISI2CWrite(0x89,0x58);
3399:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);
3400:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);
3401:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);
3402:Src/main.c    **** 	VXISI2CWrite(0x8D,0x2C);
3403:Src/main.c    **** 	VXISI2CWrite(0x8E,0x8C);
3404:Src/main.c    **** 	VXISI2CWrite(0x8F,0x00);
3405:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);
3406:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);
3407:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);
3408:Src/main.c    **** 	VXISI2CWrite(0x93,0x31);
3409:Src/main.c    **** 	VXISI2CWrite(0x94,0x87);
3410:Src/main.c    **** 	VXISI2CWrite(0x95,0xD0);
3411:Src/main.c    **** 	VXISI2CWrite(0x96,0xF3);
3412:Src/main.c    **** 	VXISI2CWrite(0x97,0x20);
3413:Src/main.c    **** 	VXISI2CWrite(0x98,0x11);
3414:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);
3415:Src/main.c    **** 	VXISI2CWrite(0x9A,0xFF);
3416:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);
3417:Src/main.c    **** 	VXISI2CWrite(0x9C,0x0A);
3418:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);
3419:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);
3420:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);
3421:Src/main.c    **** 	VXISI2CWrite(0xA0,0x2F);
3422:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD9);
3423:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);
3424:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);
3425:Src/main.c    **** 	VXISI2CWrite(0xA4,0xE1);
3426:Src/main.c    **** 	VXISI2CWrite(0xA5,0x38);
3427:Src/main.c    **** 	VXISI2CWrite(0xA6,0xC2);
3428:Src/main.c    **** 	VXISI2CWrite(0xA7,0x70);
3429:Src/main.c    **** 	VXISI2CWrite(0xA8,0x00);
3430:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);
3431:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2E);
3432:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);
3433:Src/main.c    **** 	VXISI2CWrite(0xAC,0x84);
3434:Src/main.c    **** 	VXISI2CWrite(0xAD,0xF3);
3435:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);
3436:Src/main.c    **** 	VXISI2CWrite(0xAF,0x99);
3437:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);
3438:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);
3439:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);
3440:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);
3441:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);
3442:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);
3443:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);
3444:Src/main.c    **** 	VXISI2CWrite(0xB8,0x80);
3445:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);
3446:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);
3447:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);
3448:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);
3449:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);
3450:Src/main.c    **** 	VXISI2CWrite(0xBE,0x2C);
3451:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);
3452:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);
3453:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);
3454:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);
ARM GAS  /tmp/ccQZgaDW.s 			page 62


3455:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);
3456:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);
3457:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);
3458:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);
3459:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);
3460:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);
3461:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);
3462:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);
3463:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);
3464:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);
3465:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);
3466:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);
3467:Src/main.c    **** 	VXISI2CWrite(0xDD,0x00);
3468:Src/main.c    **** 	VXISI2CWrite(0xDE,0xAF);
3469:Src/main.c    **** 	VXISI2CWrite(0xDF,0xEF);
3470:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);
3471:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);
3472:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);
3473:Src/main.c    **** 	VXISI2CWrite(0xE3,0x12);
3474:Src/main.c    **** 	VXISI2CWrite(0xE4,0xE2);
3475:Src/main.c    **** 	VXISI2CWrite(0xE5,0xD0);
3476:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);
3477:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);
3478:Src/main.c    **** 	VXISI2CWrite(0xE8,0x0F);
3479:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);
3480:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);
3481:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);
3482:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);
3483:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);
3484:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);
3485:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);
3486:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);
3487:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);
3488:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);
3489:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);
3490:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);
3491:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);
3492:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);
3493:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);
3494:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);
3495:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);
3496:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);
3497:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);
3498:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);
3499:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);
3500:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);
3501:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);
3502:Src/main.c    **** 			 
3503:Src/main.c    **** }
3504:Src/main.c    **** 
3505:Src/main.c    **** void SET_AHD_MDOE(void)
3506:Src/main.c    **** {
3507:Src/main.c    **** 	Printf("\r\nSET_AHD_MDOE...");
3508:Src/main.c    **** 
3509:Src/main.c    **** 	VXISI2CWrite(0x00,0x42);
3510:Src/main.c    **** 	VXISI2CWrite(0x01,0x00);
3511:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);
ARM GAS  /tmp/ccQZgaDW.s 			page 63


3512:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);
3513:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);
3514:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);
3515:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);
3516:Src/main.c    **** 	VXISI2CWrite(0x07,0x0C);
3517:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);
3518:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);
3519:Src/main.c    **** 	VXISI2CWrite(0x0A,0x40);
3520:Src/main.c    **** 	VXISI2CWrite(0x0B,0x0A);
3521:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);
3522:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);
3523:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);
3524:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);
3525:Src/main.c    **** 	VXISI2CWrite(0x10,0x81);
3526:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);
3527:Src/main.c    **** 	VXISI2CWrite(0x12,0x74);
3528:Src/main.c    **** 	VXISI2CWrite(0x13,0x80);
3529:Src/main.c    **** 	VXISI2CWrite(0x14,0x38);
3530:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);
3531:Src/main.c    **** 	VXISI2CWrite(0x16,0xFE);
3532:Src/main.c    **** 	VXISI2CWrite(0x17,0x00);
3533:Src/main.c    **** 	VXISI2CWrite(0x18,0xC0);
3534:Src/main.c    **** 	VXISI2CWrite(0x19,0x01);
3535:Src/main.c    **** 	VXISI2CWrite(0x1A,0x20);
3536:Src/main.c    **** 	VXISI2CWrite(0x1B,0x30);
3537:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);
3538:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);
3539:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);
3540:Src/main.c    **** 	VXISI2CWrite(0x1F,0xA4);
3541:Src/main.c    **** 	VXISI2CWrite(0x20,0x50);
3542:Src/main.c    **** 	VXISI2CWrite(0x21,0xE2);
3543:Src/main.c    **** 	VXISI2CWrite(0x22,0x87);
3544:Src/main.c    **** 	VXISI2CWrite(0x23,0x98);
3545:Src/main.c    **** 	VXISI2CWrite(0x24,0x80);
3546:Src/main.c    **** 	VXISI2CWrite(0x25,0x44);
3547:Src/main.c    **** 	VXISI2CWrite(0x26,0x65);
3548:Src/main.c    **** 	VXISI2CWrite(0x27,0x38);
3549:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);
3550:Src/main.c    **** 	VXISI2CWrite(0x29,0x00);
3551:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);
3552:Src/main.c    **** 	VXISI2CWrite(0x2B,0x11);
3553:Src/main.c    **** 	VXISI2CWrite(0x2C,0x00);
3554:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);
3555:Src/main.c    **** 	VXISI2CWrite(0x2E,0x47);
3556:Src/main.c    **** 	VXISI2CWrite(0x2F,0x80);
3557:Src/main.c    **** 	VXISI2CWrite(0x30,0x38);
3558:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);
3559:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);
3560:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);
3561:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);
3562:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);
3563:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);
3564:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);
3565:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);
3566:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);
3567:Src/main.c    **** 	VXISI2CWrite(0x3A,0x73);
3568:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);
ARM GAS  /tmp/ccQZgaDW.s 			page 64


3569:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);
3570:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);
3571:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);
3572:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);
3573:Src/main.c    **** 	VXISI2CWrite(0x40,0x80);
3574:Src/main.c    **** 	VXISI2CWrite(0x41,0x60);
3575:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);
3576:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);
3577:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);
3578:Src/main.c    **** 	VXISI2CWrite(0x45,0x00);
3579:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);
3580:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);
3581:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);
3582:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);
3583:Src/main.c    **** 	VXISI2CWrite(0x4A,0x00);
3584:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);
3585:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);
3586:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);
3587:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);
3588:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);
3589:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);
3590:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);
3591:Src/main.c    **** 	VXISI2CWrite(0x52,0xA4);
3592:Src/main.c    **** 	VXISI2CWrite(0x53,0xC0);
3593:Src/main.c    **** 	VXISI2CWrite(0x54,0x42);
3594:Src/main.c    **** 	VXISI2CWrite(0x55,0x60);
3595:Src/main.c    **** 	VXISI2CWrite(0x56,0x5C);
3596:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);
3597:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);
3598:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);
3599:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);
3600:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);
3601:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);
3602:Src/main.c    **** 	VXISI2CWrite(0x5D,0xA8);
3603:Src/main.c    **** 	VXISI2CWrite(0x5E,0xC0);
3604:Src/main.c    **** 	VXISI2CWrite(0x5F,0x53);
3605:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);
3606:Src/main.c    **** 	VXISI2CWrite(0x61,0xCC);
3607:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);
3608:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);
3609:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);
3610:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);
3611:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);
3612:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);
3613:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);
3614:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);
3615:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);
3616:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);
3617:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);
3618:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);
3619:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);
3620:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);
3621:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);
3622:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);
3623:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);
3624:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);
3625:Src/main.c    **** 	VXISI2CWrite(0x74,0x06);
ARM GAS  /tmp/ccQZgaDW.s 			page 65


3626:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);
3627:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);
3628:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);
3629:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);
3630:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);
3631:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);
3632:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);
3633:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);
3634:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);
3635:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);
3636:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);
3637:Src/main.c    **** 	VXISI2CWrite(0x80,0x01);
3638:Src/main.c    **** 	VXISI2CWrite(0x81,0x15);
3639:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);
3640:Src/main.c    **** 	VXISI2CWrite(0x83,0x2D);
3641:Src/main.c    **** 	VXISI2CWrite(0x84,0x57);
3642:Src/main.c    **** 	VXISI2CWrite(0x85,0xFD);
3643:Src/main.c    **** 	VXISI2CWrite(0x86,0x00);
3644:Src/main.c    **** 	VXISI2CWrite(0x87,0x00);
3645:Src/main.c    **** 	VXISI2CWrite(0x88,0x00);
3646:Src/main.c    **** 	VXISI2CWrite(0x89,0x00);
3647:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);
3648:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);
3649:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);
3650:Src/main.c    **** 	VXISI2CWrite(0x8D,0x17);
3651:Src/main.c    **** 	VXISI2CWrite(0x8E,0x8C);
3652:Src/main.c    **** 	VXISI2CWrite(0x8F,0x00);
3653:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);
3654:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);
3655:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);
3656:Src/main.c    **** 	VXISI2CWrite(0x93,0x84);
3657:Src/main.c    **** 	VXISI2CWrite(0x94,0x98);
3658:Src/main.c    **** 	VXISI2CWrite(0x95,0x80);
3659:Src/main.c    **** 	VXISI2CWrite(0x96,0x65);
3660:Src/main.c    **** 	VXISI2CWrite(0x97,0x70);
3661:Src/main.c    **** 	VXISI2CWrite(0x98,0x29);
3662:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);
3663:Src/main.c    **** 	VXISI2CWrite(0x9A,0x00);
3664:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);
3665:Src/main.c    **** 	VXISI2CWrite(0x9C,0x00);
3666:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);
3667:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);
3668:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);
3669:Src/main.c    **** 	VXISI2CWrite(0xA0,0x80);
3670:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD8);
3671:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);
3672:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);
3673:Src/main.c    **** 	VXISI2CWrite(0xA4,0x00);
3674:Src/main.c    **** 	VXISI2CWrite(0xA5,0x80);
3675:Src/main.c    **** 	VXISI2CWrite(0xA6,0x00);
3676:Src/main.c    **** 	VXISI2CWrite(0xA7,0x70);
3677:Src/main.c    **** 	VXISI2CWrite(0xA8,0x40);
3678:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);
3679:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2C);
3680:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);
3681:Src/main.c    **** 	VXISI2CWrite(0xAC,0x90);
3682:Src/main.c    **** 	VXISI2CWrite(0xAD,0x65);
ARM GAS  /tmp/ccQZgaDW.s 			page 66


3683:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);
3684:Src/main.c    **** 	VXISI2CWrite(0xAF,0x99);
3685:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);
3686:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);
3687:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);
3688:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);
3689:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);
3690:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);
3691:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);
3692:Src/main.c    **** 	VXISI2CWrite(0xB7,0x00);
3693:Src/main.c    **** 	VXISI2CWrite(0xB8,0x80);
3694:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);
3695:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);
3696:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);
3697:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);
3698:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);
3699:Src/main.c    **** 	VXISI2CWrite(0xBE,0x2C);
3700:Src/main.c    **** 	VXISI2CWrite(0xBF,0x00);
3701:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);
3702:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);
3703:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);
3704:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);
3705:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);
3706:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);
3707:Src/main.c    **** 	VXISI2CWrite(0xC6,0x00);
3708:Src/main.c    **** 	VXISI2CWrite(0xC7,0x00);
3709:Src/main.c    **** 	VXISI2CWrite(0xC8,0x00);
3710:Src/main.c    **** 	VXISI2CWrite(0xC9,0x00);
3711:Src/main.c    **** 	VXISI2CWrite(0xCA,0x00);
3712:Src/main.c    **** 	VXISI2CWrite(0xCB,0x00);
3713:Src/main.c    **** 	VXISI2CWrite(0xCC,0x00);
3714:Src/main.c    **** 	VXISI2CWrite(0xCD,0x00);
3715:Src/main.c    **** 	VXISI2CWrite(0xCE,0x00);
3716:Src/main.c    **** 	VXISI2CWrite(0xCF,0x00);
3717:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);
3718:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);
3719:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);
3720:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);
3721:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);
3722:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);
3723:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);
3724:Src/main.c    **** 	VXISI2CWrite(0xD7,0x0F);
3725:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);
3726:Src/main.c    **** 	VXISI2CWrite(0xD9,0x00);
3727:Src/main.c    **** 	VXISI2CWrite(0xDA,0x00);
3728:Src/main.c    **** 	VXISI2CWrite(0xDB,0x00);
3729:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);
3730:Src/main.c    **** 	VXISI2CWrite(0xDD,0x01);
3731:Src/main.c    **** 	VXISI2CWrite(0xDE,0x5F);
3732:Src/main.c    **** 	VXISI2CWrite(0xDF,0x96);
3733:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);
3734:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);
3735:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);
3736:Src/main.c    **** 	VXISI2CWrite(0xE3,0x47);
3737:Src/main.c    **** 	VXISI2CWrite(0xE4,0x3C);
3738:Src/main.c    **** 	VXISI2CWrite(0xE5,0x80);
3739:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);
ARM GAS  /tmp/ccQZgaDW.s 			page 67


3740:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);
3741:Src/main.c    **** 	VXISI2CWrite(0xE8,0x00);
3742:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);
3743:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);
3744:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);
3745:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);
3746:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);
3747:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);
3748:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);
3749:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);
3750:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);
3751:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);
3752:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);
3753:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);
3754:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);
3755:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);
3756:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);
3757:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);
3758:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);
3759:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);
3760:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);
3761:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);
3762:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);
3763:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);
3764:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);
3765:Src/main.c    **** 
3766:Src/main.c    **** }
3767:Src/main.c    **** /**
3768:Src/main.c    ****   * @brief System Clock Configuration
3769:Src/main.c    ****   * @retval None
3770:Src/main.c    ****   */
3771:Src/main.c    ****   #if 0//crystal
3772:Src/main.c    **** 
3773:Src/main.c    ****   void SystemClock_Config(void)
3774:Src/main.c    ****   {
3775:Src/main.c    **** 	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
3776:Src/main.c    **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
3777:Src/main.c    ****   
3778:Src/main.c    **** 	/** Initializes the CPU, AHB and APB busses clocks 
3779:Src/main.c    **** 	*/
3780:Src/main.c    **** 	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
3781:Src/main.c    **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
3782:Src/main.c    **** 	RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
3783:Src/main.c    **** 	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
3784:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
3785:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
3786:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
3787:Src/main.c    **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
3788:Src/main.c    **** 	{
3789:Src/main.c    **** 	  Error_Handler();
3790:Src/main.c    **** 	}
3791:Src/main.c    **** 	/** Initializes the CPU, AHB and APB busses clocks 
3792:Src/main.c    **** 	*/
3793:Src/main.c    **** 	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
3794:Src/main.c    **** 								|RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
3795:Src/main.c    **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
3796:Src/main.c    **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /tmp/ccQZgaDW.s 			page 68


3797:Src/main.c    **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
3798:Src/main.c    **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
3799:Src/main.c    ****   
3800:Src/main.c    **** 	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
3801:Src/main.c    **** 	{
3802:Src/main.c    **** 	  Error_Handler();
3803:Src/main.c    **** 	}
3804:Src/main.c    ****   }
3805:Src/main.c    **** 
3806:Src/main.c    ****   #else
3807:Src/main.c    **** void SystemClock_Config(void)
3808:Src/main.c    **** {
3809:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
3810:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
3811:Src/main.c    **** 
3812:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
3813:Src/main.c    ****   */
3814:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
3815:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
3816:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
3817:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
3818:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
3819:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
3820:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
3821:Src/main.c    ****   {
3822:Src/main.c    ****     Error_Handler();
3823:Src/main.c    ****   }
3824:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
3825:Src/main.c    ****   */
3826:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
3827:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
3828:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
3829:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
3830:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
3831:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
3832:Src/main.c    **** 
3833:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
3834:Src/main.c    ****   {
3835:Src/main.c    ****     Error_Handler();
3836:Src/main.c    ****   }
3837:Src/main.c    **** }
3838:Src/main.c    **** #endif
3839:Src/main.c    **** /**
3840:Src/main.c    ****   * @brief ADC1 Initialization Function.
3841:Src/main.c    ****   * @param None
3842:Src/main.c    ****   * @retval None
3843:Src/main.c    ****   */
3844:Src/main.c    ****   #if 0
3845:Src/main.c    **** static void MX_ADC1_Init(void)
3846:Src/main.c    **** {
3847:Src/main.c    **** 
3848:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
3849:Src/main.c    **** 
3850:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
3851:Src/main.c    **** 
3852:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
3853:Src/main.c    **** 
ARM GAS  /tmp/ccQZgaDW.s 			page 69


3854:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
3855:Src/main.c    **** 
3856:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
3857:Src/main.c    ****   /** Common config 
3858:Src/main.c    ****   */
3859:Src/main.c    ****   hadc1.Instance = ADC1;
3860:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
3861:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
3862:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
3863:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
3864:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
3865:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
3866:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
3867:Src/main.c    ****   {
3868:Src/main.c    ****     Error_Handler();
3869:Src/main.c    ****   }
3870:Src/main.c    ****   /** Configure Regular Channel 
3871:Src/main.c    ****   */
3872:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_13;
3873:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
3874:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
3875:Src/main.c    ****   /*
3876:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
3877:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
3878:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
3879:Src/main.c    ****   sConfig.Offset = 0;
3880:Src/main.c    ****   */
3881:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
3882:Src/main.c    ****   {
3883:Src/main.c    ****     Error_Handler();
3884:Src/main.c    ****   }
3885:Src/main.c    **** 
3886:Src/main.c    **** 
3887:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
3888:Src/main.c    **** HAL_ADC_MspInit(&hadc1);
3889:Src/main.c    **** 
3890:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
3891:Src/main.c    **** 
3892:Src/main.c    **** }
3893:Src/main.c    **** #endif
3894:Src/main.c    **** /**
3895:Src/main.c    ****   * @brief TIM2 Initialization Function
3896:Src/main.c    ****   * @param None
3897:Src/main.c    ****   * @retval None
3898:Src/main.c    ****   */
3899:Src/main.c    ****   #if 0
3900:Src/main.c    **** static void MX_TIM2_Init(void)
3901:Src/main.c    **** {
3902:Src/main.c    **** 
3903:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
3904:Src/main.c    **** 
3905:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
3906:Src/main.c    ****   ///TIM_ClockConfigTypeDef sClockSourceConfig = {0};
3907:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
3908:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
3909:Src/main.c    **** 
3910:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
ARM GAS  /tmp/ccQZgaDW.s 			page 70


3911:Src/main.c    **** 
3912:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
3913:Src/main.c    ****   htim2.Instance = TIM2;
3914:Src/main.c    ****   htim2.Init.Prescaler = (35/4);
3915:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
3916:Src/main.c    ****   htim2.Init.Period = 4000;
3917:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
3918:Src/main.c    ****  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE; 
3919:Src/main.c    **** /*
3920:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
3921:Src/main.c    **** 	{
3922:Src/main.c    **** 	  Error_Handler();
3923:Src/main.c    **** 	}
3924:Src/main.c    **** 	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
3925:Src/main.c    **** 	if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
3926:Src/main.c    **** 	{
3927:Src/main.c    **** 	  Error_Handler();
3928:Src/main.c    **** 	}
3929:Src/main.c    **** */
3930:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
3931:Src/main.c    ****   {
3932:Src/main.c    ****    Error_Handler();
3933:Src/main.c    ****   }
3934:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
3935:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
3936:Src/main.c    **** 
3937:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
3938:Src/main.c    ****   {
3939:Src/main.c    ****    Error_Handler();
3940:Src/main.c    ****   }
3941:Src/main.c    ****   
3942:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
3943:Src/main.c    **** //  sConfigOC.Pulse = 4000;
3944:Src/main.c    ****   sConfigOC.Pulse = 0;
3945:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
3946:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
3947:Src/main.c    **** 
3948:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
3949:Src/main.c    ****   {
3950:Src/main.c    ****    Error_Handler();
3951:Src/main.c    ****   }
3952:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
3953:Src/main.c    **** 
3954:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
3955:Src/main.c    ****   HAL_TIM_MspPostInit(&htim2);
3956:Src/main.c    **** 
3957:Src/main.c    **** //TIMOCInitStructure.TIM_Pulse =(period); 						   
3958:Src/main.c    **** 
3959:Src/main.c    **** //TIMOCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;	   
3960:Src/main.c    **** //TIMOCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
3961:Src/main.c    **** //TIM_OC3Init(TIM3, &TIMOCInitStructure); 				   
3962:Src/main.c    **** 				   
3963:Src/main.c    **** 
3964:Src/main.c    **** //TIM_Cmd(TIM3, ENABLE);
3965:Src/main.c    **** 
3966:Src/main.c    **** }
3967:Src/main.c    **** #endif
ARM GAS  /tmp/ccQZgaDW.s 			page 71


3968:Src/main.c    **** /**
3969:Src/main.c    ****   * @brief TIM3 Initialization Function
3970:Src/main.c    ****   * @param None
3971:Src/main.c    ****   * @retval None
3972:Src/main.c    ****   */
3973:Src/main.c    **** static void MX_TIM3_Init(void)
3974:Src/main.c    **** {
3975:Src/main.c    **** 
3976:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 0 */
3977:Src/main.c    **** 
3978:Src/main.c    ****   /* USER CODE END TIM3_Init 0 */
3979:Src/main.c    **** 
3980:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
3981:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
3982:Src/main.c    **** 
3983:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 1 */
3984:Src/main.c    **** 
3985:Src/main.c    ****   /* USER CODE END TIM3_Init 1 */
3986:Src/main.c    ****   htim3.Instance = TIM3;
3987:Src/main.c    ****   htim3.Init.Prescaler = 35;
3988:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
3989:Src/main.c    ****   htim3.Init.Period = 9;
3990:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
3991:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
3992:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
3993:Src/main.c    ****   {
3994:Src/main.c    ****     Error_Handler();
3995:Src/main.c    ****   }
3996:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
3997:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
3998:Src/main.c    ****   {
3999:Src/main.c    ****     Error_Handler();
4000:Src/main.c    ****   }
4001:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
4002:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
4003:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
4004:Src/main.c    ****   {
4005:Src/main.c    ****     Error_Handler();
4006:Src/main.c    ****   }
4007:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 2 */
4008:Src/main.c    **** 
4009:Src/main.c    ****   /* USER CODE END TIM3_Init 2 */
4010:Src/main.c    **** 
4011:Src/main.c    **** }
4012:Src/main.c    **** 
4013:Src/main.c    **** /**
4014:Src/main.c    ****   * @brief USART1 Initialization Function
4015:Src/main.c    ****   * @param None
4016:Src/main.c    ****   * @retval None
4017:Src/main.c    ****   */
4018:Src/main.c    **** static void MX_USART1_UART_Init(void)
4019:Src/main.c    **** {
4020:Src/main.c    **** 
4021:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
4022:Src/main.c    **** 
4023:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
4024:Src/main.c    **** 
ARM GAS  /tmp/ccQZgaDW.s 			page 72


4025:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
4026:Src/main.c    **** 
4027:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
4028:Src/main.c    ****   huart1.Instance = USART1;
4029:Src/main.c    **** //  huart1.Init.BaudRate = 9600;
4030:Src/main.c    ****   huart1.Init.BaudRate = 115200;
4031:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
4032:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
4033:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
4034:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
4035:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
4036:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
4037:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
4038:Src/main.c    ****   {
4039:Src/main.c    ****     Error_Handler();
4040:Src/main.c    ****   }
4041:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
4042:Src/main.c    **** 
4043:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
4044:Src/main.c    **** 
4045:Src/main.c    **** }
4046:Src/main.c    **** 
4047:Src/main.c    **** /**
4048:Src/main.c    ****   * @brief USART2 Initialization Function
4049:Src/main.c    ****   * @param None
4050:Src/main.c    ****   * @retval None
4051:Src/main.c    ****   */
4052:Src/main.c    **** static void MX_USART2_UART_Init(void)
4053:Src/main.c    **** {
4054:Src/main.c    **** 
4055:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
4056:Src/main.c    **** 
4057:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
4058:Src/main.c    **** 
4059:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
4060:Src/main.c    **** 
4061:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
4062:Src/main.c    ****   huart2.Instance = USART2;
4063:Src/main.c    ****   huart2.Init.BaudRate = 38400;
4064:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
4065:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
4066:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
4067:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
4068:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
4069:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
4070:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
4071:Src/main.c    ****   {
4072:Src/main.c    ****     Error_Handler();
4073:Src/main.c    ****   }
4074:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
4075:Src/main.c    **** 
4076:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
4077:Src/main.c    **** 
4078:Src/main.c    **** }
4079:Src/main.c    **** 
4080:Src/main.c    **** /**
4081:Src/main.c    ****   * @brief GPIO Initialization Function
ARM GAS  /tmp/ccQZgaDW.s 			page 73


4082:Src/main.c    ****   * @param None
4083:Src/main.c    ****   * @retval None
4084:Src/main.c    ****   */
4085:Src/main.c    **** static void MX_GPIO_Init(void)
4086:Src/main.c    **** {
  25              		.loc 1 4086 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 32
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 56
4087:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 4087 0
  41 0004 0025     		movs	r5, #0
  42 0006 0495     		str	r5, [sp, #16]
  43 0008 0595     		str	r5, [sp, #20]
  44 000a 0695     		str	r5, [sp, #24]
  45 000c 0795     		str	r5, [sp, #28]
  46              	.LBB2:
4088:Src/main.c    **** 
4089:Src/main.c    ****   /* GPIO Ports Clock Enable */
4090:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  47              		.loc 1 4090 0
  48 000e 2E4B     		ldr	r3, .L3
  49 0010 9A69     		ldr	r2, [r3, #24]
  50 0012 42F00402 		orr	r2, r2, #4
  51 0016 9A61     		str	r2, [r3, #24]
  52 0018 9A69     		ldr	r2, [r3, #24]
  53 001a 02F00402 		and	r2, r2, #4
  54 001e 0092     		str	r2, [sp]
  55 0020 009A     		ldr	r2, [sp]
  56              	.LBE2:
  57              	.LBB3:
4091:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  58              		.loc 1 4091 0
  59 0022 9A69     		ldr	r2, [r3, #24]
  60 0024 42F00802 		orr	r2, r2, #8
  61 0028 9A61     		str	r2, [r3, #24]
  62 002a 9A69     		ldr	r2, [r3, #24]
  63 002c 02F00802 		and	r2, r2, #8
  64 0030 0192     		str	r2, [sp, #4]
  65 0032 019A     		ldr	r2, [sp, #4]
  66              	.LBE3:
  67              	.LBB4:
4092:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  68              		.loc 1 4092 0
  69 0034 9A69     		ldr	r2, [r3, #24]
  70 0036 42F01002 		orr	r2, r2, #16
ARM GAS  /tmp/ccQZgaDW.s 			page 74


  71 003a 9A61     		str	r2, [r3, #24]
  72 003c 9A69     		ldr	r2, [r3, #24]
  73 003e 02F01002 		and	r2, r2, #16
  74 0042 0292     		str	r2, [sp, #8]
  75 0044 029A     		ldr	r2, [sp, #8]
  76              	.LBE4:
  77              	.LBB5:
4093:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  78              		.loc 1 4093 0
  79 0046 9A69     		ldr	r2, [r3, #24]
  80 0048 42F02002 		orr	r2, r2, #32
  81 004c 9A61     		str	r2, [r3, #24]
  82 004e 9B69     		ldr	r3, [r3, #24]
  83 0050 03F02003 		and	r3, r3, #32
  84 0054 0393     		str	r3, [sp, #12]
  85 0056 039B     		ldr	r3, [sp, #12]
  86              	.LBE5:
4094:Src/main.c    **** 
4095:Src/main.c    ****   /*Configure GPIO pin Output Level */
4096:Src/main.c    **** HAL_GPIO_WritePin(GPIOA, /*TX_RST_Pin|TP2824_RST_Pin|*/VS_RST_Pin, GPIO_PIN_SET);
  87              		.loc 1 4096 0
  88 0058 1C4F     		ldr	r7, .L3+4
  89 005a 0122     		movs	r2, #1
  90 005c 4FF48051 		mov	r1, #4096
  91 0060 3846     		mov	r0, r7
  92 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL0:
4097:Src/main.c    **** 
4098:Src/main.c    ****   /*Configure GPIO pins : TX_RST_Pin TP2824_RST_Pin VS_RST_Pin */
4099:Src/main.c    ****   GPIO_InitStruct.Pin = VIDEO_LOSS;
  94              		.loc 1 4099 0
  95 0066 2023     		movs	r3, #32
  96 0068 0493     		str	r3, [sp, #16]
4100:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  97              		.loc 1 4100 0
  98 006a 0124     		movs	r4, #1
  99 006c 0594     		str	r4, [sp, #20]
4101:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 100              		.loc 1 4101 0
 101 006e 0694     		str	r4, [sp, #24]
4102:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 102              		.loc 1 4102 0
 103 0070 0226     		movs	r6, #2
 104 0072 0796     		str	r6, [sp, #28]
4103:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 105              		.loc 1 4103 0
 106 0074 04A9     		add	r1, sp, #16
 107 0076 3846     		mov	r0, r7
 108 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 109              	.LVL1:
4104:Src/main.c    **** 
4105:Src/main.c    ****   GPIO_InitStruct.Pin = HDMI_SELECT;
 110              		.loc 1 4105 0
 111 007c 1023     		movs	r3, #16
 112 007e 0493     		str	r3, [sp, #16]
4106:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 113              		.loc 1 4106 0
ARM GAS  /tmp/ccQZgaDW.s 			page 75


 114 0080 0595     		str	r5, [sp, #20]
4107:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 115              		.loc 1 4107 0
 116 0082 0694     		str	r4, [sp, #24]
4108:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 117              		.loc 1 4108 0
 118 0084 0DEB0301 		add	r1, sp, r3
 119 0088 3846     		mov	r0, r7
 120 008a FFF7FEFF 		bl	HAL_GPIO_Init
 121              	.LVL2:
4109:Src/main.c    **** 
4110:Src/main.c    **** 
4111:Src/main.c    ****   /*Configure GPIO pin : IR_IN_Pin */
4112:Src/main.c    **** /*
4113:Src/main.c    ****   GPIO_InitStruct.Pin = IR_IN_Pin;
4114:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
4115:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
4116:Src/main.c    ****   HAL_GPIO_Init(IR_IN_GPIO_Port, &GPIO_InitStruct);
4117:Src/main.c    **** */
4118:Src/main.c    ****   /*Configure GPIO pin : RX1_Pin */
4119:Src/main.c    ****   /*
4120:Src/main.c    ****   GPIO_InitStruct.Pin = RX1_Pin;
4121:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
4122:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
4123:Src/main.c    ****   HAL_GPIO_Init(RX1_GPIO_Port, &GPIO_InitStruct);
4124:Src/main.c    **** */
4125:Src/main.c    **** #if 0
4126:Src/main.c    ****    GPIO_InitStruct.Pin =DOWN_KEY_Pin|UP_KEY_Pin|MENU_KEY_Pin|POWER_KEY_Pin/*|TOUCH_INT*/;
4127:Src/main.c    ****   // GPIO_InitStruct.Pin =MENU_KEY_Pin|POWER_KEY_Pin;
4128:Src/main.c    ****    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
4129:Src/main.c    ****    GPIO_InitStruct.Pull = GPIO_PULLUP;
4130:Src/main.c    ****    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
4131:Src/main.c    **** #endif
4132:Src/main.c    **** 
4133:Src/main.c    ****   GPIO_InitStruct.Pin =(/*PANEL_EN_Pin|*//*TOUCH_RESET|*/VS_RST_Pin|STM_SCL_Pin|STM_SDA_Pin);
 122              		.loc 1 4133 0
 123 008e 4FF4E053 		mov	r3, #7168
 124 0092 0493     		str	r3, [sp, #16]
4134:Src/main.c    **** //  GPIO_InitStruct.Pin =(PANEL_EN_Pin|TOUCH_RESET);
4135:Src/main.c    **** //  GPIO_InitStruct.Pin =(PANEL_EN_Pin|BL_PWM_Pin);
4136:Src/main.c    ****    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;//GPIO_MODE_OUTPUT_PP;///GPIO_MODE_OUTPUT_OD;
 125              		.loc 1 4136 0
 126 0094 0594     		str	r4, [sp, #20]
4137:Src/main.c    ****    GPIO_InitStruct.Pull =GPIO_PULLUP;// GPIO_PULLUP;
 127              		.loc 1 4137 0
 128 0096 0694     		str	r4, [sp, #24]
4138:Src/main.c    ****    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 129              		.loc 1 4138 0
 130 0098 0796     		str	r6, [sp, #28]
4139:Src/main.c    ****    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 131              		.loc 1 4139 0
 132 009a 04A9     		add	r1, sp, #16
 133 009c 0C48     		ldr	r0, .L3+8
 134 009e FFF7FEFF 		bl	HAL_GPIO_Init
 135              	.LVL3:
4140:Src/main.c    ****   /*Configure GPIO pins : SW1_Pin SW2_Pin SW3_Pin SW4_Pin 
4141:Src/main.c    ****                            SW5_Pin SW6_Pin SW7_Pin */
ARM GAS  /tmp/ccQZgaDW.s 			page 76


4142:Src/main.c    **** //  GPIO_InitStruct.Pin = SW1_Pin|SW2_Pin|SW3_Pin|SW4_Pin 
4143:Src/main.c    ****    //                      |SW5_Pin|SW6_Pin|SW7_Pin|DOWN_KEY_Pin|UP_KEY_Pin|MENU_KEY_Pin|POWER_KEY_
4144:Src/main.c    ****   /*
4145:Src/main.c    **** 
4146:Src/main.c    ****   GPIO_InitStruct.Pin =DOWN_KEY_Pin|UP_KEY_Pin|MENU_KEY_Pin|POWER_KEY_Pin|TOUCH_INT;
4147:Src/main.c    ****  // GPIO_InitStruct.Pin =MENU_KEY_Pin|POWER_KEY_Pin;
4148:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
4149:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
4150:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
4151:Src/main.c    **** */
4152:Src/main.c    **** /*
4153:Src/main.c    ****   GPIO_InitStruct.Pin =DOWN_KEY_Pin|UP_KEY_Pin;
4154:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
4155:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
4156:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
4157:Src/main.c    **** */
4158:Src/main.c    ****   GPIO_InitStruct.Pin =TP2824_REST/*LCD_PWR_Pin|TTLI1_RES_Pin|AUD_SEL2_Pin|GREEN_LED_Pin |RED_LED_P
 136              		.loc 1 4158 0
 137 00a2 0496     		str	r6, [sp, #16]
4159:Src/main.c    **** //  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
4160:Src/main.c    **** //   GPIO_InitStruct.Pull = GPIO_PULLUP;
4161:Src/main.c    ****    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 138              		.loc 1 4161 0
 139 00a4 0594     		str	r4, [sp, #20]
4162:Src/main.c    ****    GPIO_InitStruct.Pull = GPIO_PULLUP;
 140              		.loc 1 4162 0
 141 00a6 0694     		str	r4, [sp, #24]
4163:Src/main.c    **** 
4164:Src/main.c    ****    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 142              		.loc 1 4164 0
 143 00a8 0796     		str	r6, [sp, #28]
4165:Src/main.c    ****    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 144              		.loc 1 4165 0
 145 00aa 0A4E     		ldr	r6, .L3+12
 146 00ac 04A9     		add	r1, sp, #16
 147 00ae 3046     		mov	r0, r6
 148 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 149              	.LVL4:
4166:Src/main.c    **** 
4167:Src/main.c    **** 
4168:Src/main.c    **** //  GPIO_InitStruct.Pin =GREEN_LED_Pin|RED_LED_Pin;
4169:Src/main.c    ****   // GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
4170:Src/main.c    ****    //GPIO_InitStruct.Pull = GPIO_NOPULL;
4171:Src/main.c    ****    //GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
4172:Src/main.c    ****    //HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
4173:Src/main.c    **** 
4174:Src/main.c    ****   GPIO_InitStruct.Pin = TP2824_IRQ|MCU_WAKEUP|AUD_I2C_MUTE_Pin/*| JUMP_KEY_Pin*/;
 150              		.loc 1 4174 0
 151 00b4 4923     		movs	r3, #73
 152 00b6 0493     		str	r3, [sp, #16]
4175:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 153              		.loc 1 4175 0
 154 00b8 0595     		str	r5, [sp, #20]
4176:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 155              		.loc 1 4176 0
 156 00ba 0694     		str	r4, [sp, #24]
4177:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
ARM GAS  /tmp/ccQZgaDW.s 			page 77


 157              		.loc 1 4177 0
 158 00bc 04A9     		add	r1, sp, #16
 159 00be 3046     		mov	r0, r6
 160 00c0 FFF7FEFF 		bl	HAL_GPIO_Init
 161              	.LVL5:
4178:Src/main.c    **** 
4179:Src/main.c    **** /*
4180:Src/main.c    ****   GPIO_InitStruct.Pin =AUD_SEL1_Pin;
4181:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
4182:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
4183:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
4184:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
4185:Src/main.c    ****   */
4186:Src/main.c    **** 
4187:Src/main.c    **** 
4188:Src/main.c    **** 	
4189:Src/main.c    **** 
4190:Src/main.c    ****   /* EXTI interrupt init*/
4191:Src/main.c    **** /*
4192:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI2_IRQn, 0, 0);
4193:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI2_IRQn);
4194:Src/main.c    **** */
4195:Src/main.c    **** }
 162              		.loc 1 4195 0
 163 00c4 09B0     		add	sp, sp, #36
 164              	.LCFI2:
 165              		.cfi_def_cfa_offset 20
 166              		@ sp needed
 167 00c6 F0BD     		pop	{r4, r5, r6, r7, pc}
 168              	.L4:
 169              		.align	2
 170              	.L3:
 171 00c8 00100240 		.word	1073876992
 172 00cc 00080140 		.word	1073809408
 173 00d0 000C0140 		.word	1073810432
 174 00d4 00100140 		.word	1073811456
 175              		.cfi_endproc
 176              	.LFE98:
 178              		.section	.text.MX_TIM3_Init,"ax",%progbits
 179              		.align	1
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu softvfp
 185              	MX_TIM3_Init:
 186              	.LFB95:
3974:Src/main.c    **** 
 187              		.loc 1 3974 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 24
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191 0000 30B5     		push	{r4, r5, lr}
 192              	.LCFI3:
 193              		.cfi_def_cfa_offset 12
 194              		.cfi_offset 4, -12
 195              		.cfi_offset 5, -8
 196              		.cfi_offset 14, -4
ARM GAS  /tmp/ccQZgaDW.s 			page 78


 197 0002 87B0     		sub	sp, sp, #28
 198              	.LCFI4:
 199              		.cfi_def_cfa_offset 40
3980:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 200              		.loc 1 3980 0
 201 0004 0024     		movs	r4, #0
 202 0006 0294     		str	r4, [sp, #8]
 203 0008 0394     		str	r4, [sp, #12]
 204 000a 0494     		str	r4, [sp, #16]
 205 000c 0594     		str	r4, [sp, #20]
3981:Src/main.c    **** 
 206              		.loc 1 3981 0
 207 000e 0094     		str	r4, [sp]
 208 0010 0194     		str	r4, [sp, #4]
3986:Src/main.c    ****   htim3.Init.Prescaler = 35;
 209              		.loc 1 3986 0
 210 0012 0E4D     		ldr	r5, .L7
 211 0014 0E4B     		ldr	r3, .L7+4
 212 0016 2B60     		str	r3, [r5]
3987:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 213              		.loc 1 3987 0
 214 0018 2323     		movs	r3, #35
 215 001a 6B60     		str	r3, [r5, #4]
3988:Src/main.c    ****   htim3.Init.Period = 9;
 216              		.loc 1 3988 0
 217 001c AC60     		str	r4, [r5, #8]
3989:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 218              		.loc 1 3989 0
 219 001e 0923     		movs	r3, #9
 220 0020 EB60     		str	r3, [r5, #12]
3990:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 221              		.loc 1 3990 0
 222 0022 2C61     		str	r4, [r5, #16]
3991:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 223              		.loc 1 3991 0
 224 0024 8023     		movs	r3, #128
 225 0026 AB61     		str	r3, [r5, #24]
3992:Src/main.c    ****   {
 226              		.loc 1 3992 0
 227 0028 2846     		mov	r0, r5
 228 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 229              	.LVL6:
3996:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 230              		.loc 1 3996 0
 231 002e 4FF48053 		mov	r3, #4096
 232 0032 0293     		str	r3, [sp, #8]
3997:Src/main.c    ****   {
 233              		.loc 1 3997 0
 234 0034 02A9     		add	r1, sp, #8
 235 0036 2846     		mov	r0, r5
 236 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 237              	.LVL7:
4001:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 238              		.loc 1 4001 0
 239 003c 0094     		str	r4, [sp]
4002:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 240              		.loc 1 4002 0
ARM GAS  /tmp/ccQZgaDW.s 			page 79


 241 003e 0194     		str	r4, [sp, #4]
4003:Src/main.c    ****   {
 242              		.loc 1 4003 0
 243 0040 6946     		mov	r1, sp
 244 0042 2846     		mov	r0, r5
 245 0044 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 246              	.LVL8:
4011:Src/main.c    **** 
 247              		.loc 1 4011 0
 248 0048 07B0     		add	sp, sp, #28
 249              	.LCFI5:
 250              		.cfi_def_cfa_offset 12
 251              		@ sp needed
 252 004a 30BD     		pop	{r4, r5, pc}
 253              	.L8:
 254              		.align	2
 255              	.L7:
 256 004c 00000000 		.word	htim3
 257 0050 00040040 		.word	1073742848
 258              		.cfi_endproc
 259              	.LFE95:
 261              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 262              		.align	1
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 266              		.fpu softvfp
 268              	MX_USART1_UART_Init:
 269              	.LFB96:
4019:Src/main.c    **** 
 270              		.loc 1 4019 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274 0000 08B5     		push	{r3, lr}
 275              	.LCFI6:
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 3, -8
 278              		.cfi_offset 14, -4
4028:Src/main.c    **** //  huart1.Init.BaudRate = 9600;
 279              		.loc 1 4028 0
 280 0002 0848     		ldr	r0, .L11
 281 0004 084B     		ldr	r3, .L11+4
 282 0006 0360     		str	r3, [r0]
4030:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 283              		.loc 1 4030 0
 284 0008 4FF4E133 		mov	r3, #115200
 285 000c 4360     		str	r3, [r0, #4]
4031:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 286              		.loc 1 4031 0
 287 000e 0023     		movs	r3, #0
 288 0010 8360     		str	r3, [r0, #8]
4032:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 289              		.loc 1 4032 0
 290 0012 C360     		str	r3, [r0, #12]
4033:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 291              		.loc 1 4033 0
ARM GAS  /tmp/ccQZgaDW.s 			page 80


 292 0014 0361     		str	r3, [r0, #16]
4034:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 293              		.loc 1 4034 0
 294 0016 0C22     		movs	r2, #12
 295 0018 4261     		str	r2, [r0, #20]
4035:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 296              		.loc 1 4035 0
 297 001a 8361     		str	r3, [r0, #24]
4036:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 298              		.loc 1 4036 0
 299 001c C361     		str	r3, [r0, #28]
4037:Src/main.c    ****   {
 300              		.loc 1 4037 0
 301 001e FFF7FEFF 		bl	HAL_UART_Init
 302              	.LVL9:
4045:Src/main.c    **** 
 303              		.loc 1 4045 0
 304 0022 08BD     		pop	{r3, pc}
 305              	.L12:
 306              		.align	2
 307              	.L11:
 308 0024 00000000 		.word	huart1
 309 0028 00380140 		.word	1073821696
 310              		.cfi_endproc
 311              	.LFE96:
 313              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 314              		.align	1
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 318              		.fpu softvfp
 320              	MX_USART2_UART_Init:
 321              	.LFB97:
4053:Src/main.c    **** 
 322              		.loc 1 4053 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326 0000 08B5     		push	{r3, lr}
 327              	.LCFI7:
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 3, -8
 330              		.cfi_offset 14, -4
4062:Src/main.c    ****   huart2.Init.BaudRate = 38400;
 331              		.loc 1 4062 0
 332 0002 0848     		ldr	r0, .L15
 333 0004 084B     		ldr	r3, .L15+4
 334 0006 0360     		str	r3, [r0]
4063:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 335              		.loc 1 4063 0
 336 0008 4FF41643 		mov	r3, #38400
 337 000c 4360     		str	r3, [r0, #4]
4064:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 338              		.loc 1 4064 0
 339 000e 0023     		movs	r3, #0
 340 0010 8360     		str	r3, [r0, #8]
4065:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
ARM GAS  /tmp/ccQZgaDW.s 			page 81


 341              		.loc 1 4065 0
 342 0012 C360     		str	r3, [r0, #12]
4066:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 343              		.loc 1 4066 0
 344 0014 0361     		str	r3, [r0, #16]
4067:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 345              		.loc 1 4067 0
 346 0016 0C22     		movs	r2, #12
 347 0018 4261     		str	r2, [r0, #20]
4068:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 348              		.loc 1 4068 0
 349 001a 8361     		str	r3, [r0, #24]
4069:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 350              		.loc 1 4069 0
 351 001c C361     		str	r3, [r0, #28]
4070:Src/main.c    ****   {
 352              		.loc 1 4070 0
 353 001e FFF7FEFF 		bl	HAL_UART_Init
 354              	.LVL10:
4078:Src/main.c    **** 
 355              		.loc 1 4078 0
 356 0022 08BD     		pop	{r3, pc}
 357              	.L16:
 358              		.align	2
 359              	.L15:
 360 0024 00000000 		.word	huart2
 361 0028 00440040 		.word	1073759232
 362              		.cfi_endproc
 363              	.LFE97:
 365              		.section	.text.HDMI_AudioModeDetect,"ax",%progbits
 366              		.align	1
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 370              		.fpu softvfp
 372              	HDMI_AudioModeDetect:
 373              	.LFB75:
1282:Src/main.c    ****     tByte pbAudioSampleFreq, pbValidCh ;
 374              		.loc 1 1282 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 8
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378 0000 00B5     		push	{lr}
 379              	.LCFI8:
 380              		.cfi_def_cfa_offset 4
 381              		.cfi_offset 14, -4
 382 0002 83B0     		sub	sp, sp, #12
 383              	.LCFI9:
 384              		.cfi_def_cfa_offset 16
1284:Src/main.c    **** 
 385              		.loc 1 1284 0
 386 0004 0023     		movs	r3, #0
 387 0006 8DF80730 		strb	r3, [sp, #7]
1286:Src/main.c    **** 
 388              		.loc 1 1286 0
 389 000a 0DF10601 		add	r1, sp, #6
 390 000e 0DF10700 		add	r0, sp, #7
ARM GAS  /tmp/ccQZgaDW.s 			page 82


 391 0012 FFF7FEFF 		bl	getHDMIRXAudioInfo
 392              	.LVL11:
1288:Src/main.c    ****     {
 393              		.loc 1 1288 0
 394 0016 0E4B     		ldr	r3, .L21
 395 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 396 001a 042B     		cmp	r3, #4
 397 001c 03D0     		beq	.L18
1290:Src/main.c    ****         {
 398              		.loc 1 1290 0
 399 001e 0D4A     		ldr	r2, .L21+4
 400 0020 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 401 0022 9342     		cmp	r3, r2
 402 0024 08D0     		beq	.L20
 403              	.L18:
1299:Src/main.c    **** }
 404              		.loc 1 1299 0
 405 0026 0B4B     		ldr	r3, .L21+4
 406 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 407 002a 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 408 002e 0A4A     		ldr	r2, .L21+8
 409 0030 D154     		strb	r1, [r2, r3]
1300:Src/main.c    **** 
 410              		.loc 1 1300 0
 411 0032 03B0     		add	sp, sp, #12
 412              	.LCFI10:
 413              		.cfi_remember_state
 414              		.cfi_def_cfa_offset 4
 415              		@ sp needed
 416 0034 5DF804FB 		ldr	pc, [sp], #4
 417              	.L20:
 418              	.LCFI11:
 419              		.cfi_restore_state
1292:Src/main.c    ****             {
 420              		.loc 1 1292 0
 421 0038 084B     		ldr	r3, .L21+12
 422 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 423 003c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 424 0040 8342     		cmp	r3, r0
 425 0042 F0D0     		beq	.L18
1294:Src/main.c    ****                 HDMI_Tx_SetAudioFs(gPreAudioSampleFreq )  ;
 426              		.loc 1 1294 0
 427 0044 054B     		ldr	r3, .L21+12
 428 0046 1870     		strb	r0, [r3]
1295:Src/main.c    ****             }
 429              		.loc 1 1295 0
 430 0048 FFF7FEFF 		bl	HDMI_Tx_SetAudioFs
 431              	.LVL12:
 432 004c EBE7     		b	.L18
 433              	.L22:
 434 004e 00BF     		.align	2
 435              	.L21:
 436 0050 00000000 		.word	.LANCHOR0
 437 0054 00000000 		.word	gHDMI_Index
 438 0058 00000000 		.word	.LANCHOR1
 439 005c 00000000 		.word	gPreAudioSampleFreq
 440              		.cfi_endproc
ARM GAS  /tmp/ccQZgaDW.s 			page 83


 441              	.LFE75:
 443              		.section	.text._write,"ax",%progbits
 444              		.align	1
 445              		.global	_write
 446              		.syntax unified
 447              		.thumb
 448              		.thumb_func
 449              		.fpu softvfp
 451              	_write:
 452              	.LFB68:
 256:Src/main.c    ****     if ((file != STDOUT_FILENO) && (file != STDERR_FILENO))
 453              		.loc 1 256 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457              	.LVL13:
 458 0000 10B5     		push	{r4, lr}
 459              	.LCFI12:
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 4, -8
 462              		.cfi_offset 14, -4
 257:Src/main.c    ****     {
 463              		.loc 1 257 0
 464 0002 0138     		subs	r0, r0, #1
 465              	.LVL14:
 466 0004 0128     		cmp	r0, #1
 467 0006 09D8     		bhi	.L28
 468 0008 1446     		mov	r4, r2
 263:Src/main.c    ****         HAL_UART_Transmit(&huart1, (uint8_t*)data, (uint16_t)len, 1000);
 469              		.loc 1 263 0
 470 000a 4FF47A73 		mov	r3, #1000
 471 000e 92B2     		uxth	r2, r2
 472              	.LVL15:
 473 0010 0748     		ldr	r0, .L30
 474              	.LVL16:
 475 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 476              	.LVL17:
 266:Src/main.c    **** }
 477              		.loc 1 266 0
 478 0016 40B1     		cbz	r0, .L29
 479 0018 0020     		movs	r0, #0
 480              	.LVL18:
 481              	.L23:
 267:Src/main.c    **** #else
 482              		.loc 1 267 0
 483 001a 10BD     		pop	{r4, pc}
 484              	.LVL19:
 485              	.L28:
 259:Src/main.c    ****         return -1;
 486              		.loc 1 259 0
 487 001c FFF7FEFF 		bl	__errno
 488              	.LVL20:
 489 0020 0923     		movs	r3, #9
 490 0022 0360     		str	r3, [r0]
 260:Src/main.c    ****     }
 491              		.loc 1 260 0
 492 0024 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccQZgaDW.s 			page 84


 493 0028 F7E7     		b	.L23
 494              	.LVL21:
 495              	.L29:
 266:Src/main.c    **** }
 496              		.loc 1 266 0
 497 002a 2046     		mov	r0, r4
 498              	.LVL22:
 499 002c F5E7     		b	.L23
 500              	.L31:
 501 002e 00BF     		.align	2
 502              	.L30:
 503 0030 00000000 		.word	huart1
 504              		.cfi_endproc
 505              	.LFE68:
 507              		.section	.text.Audio_Sel,"ax",%progbits
 508              		.align	1
 509              		.global	Audio_Sel
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 513              		.fpu softvfp
 515              	Audio_Sel:
 516              	.LFB69:
 279:Src/main.c    ****     gbAUDO_INDEX = mode ;
 517              		.loc 1 279 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521              	.LVL23:
 522 0000 38B5     		push	{r3, r4, r5, lr}
 523              	.LCFI13:
 524              		.cfi_def_cfa_offset 16
 525              		.cfi_offset 3, -16
 526              		.cfi_offset 4, -12
 527              		.cfi_offset 5, -8
 528              		.cfi_offset 14, -4
 280:Src/main.c    ****     switch(mode)
 529              		.loc 1 280 0
 530 0002 5B4B     		ldr	r3, .L41
 531 0004 1870     		strb	r0, [r3]
 281:Src/main.c    ****     {
 532              		.loc 1 281 0
 533 0006 0428     		cmp	r0, #4
 534 0008 20D8     		bhi	.L32
 535 000a DFE800F0 		tbb	[pc, r0]
 536              	.L35:
 537 000e 20       		.byte	(.L34-.L35)/2
 538 000f 44       		.byte	(.L36-.L35)/2
 539 0010 68       		.byte	(.L37-.L35)/2
 540 0011 8C       		.byte	(.L38-.L35)/2
 541 0012 03       		.byte	(.L39-.L35)/2
 542 0013 00       		.p2align 1
 543              	.L39:
 291:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 544              		.loc 1 291 0
 545 0014 574D     		ldr	r5, .L41+4
 546 0016 0122     		movs	r2, #1
ARM GAS  /tmp/ccQZgaDW.s 			page 85


 547 0018 4021     		movs	r1, #64
 548 001a 2846     		mov	r0, r5
 549              	.LVL24:
 550 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 551              	.LVL25:
 292:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 552              		.loc 1 292 0
 553 0020 554C     		ldr	r4, .L41+8
 554 0022 0122     		movs	r2, #1
 555 0024 2021     		movs	r1, #32
 556 0026 2046     		mov	r0, r4
 557 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 558              	.LVL26:
 293:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 559              		.loc 1 293 0
 560 002c 0122     		movs	r2, #1
 561 002e 1021     		movs	r1, #16
 562 0030 2046     		mov	r0, r4
 563 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 564              	.LVL27:
 294:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 565              		.loc 1 294 0
 566 0036 0122     		movs	r2, #1
 567 0038 0821     		movs	r1, #8
 568 003a 2046     		mov	r0, r4
 569 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 570              	.LVL28:
 295:Src/main.c    ****         break ;
 571              		.loc 1 295 0
 572 0040 0122     		movs	r2, #1
 573 0042 4FF40041 		mov	r1, #32768
 574 0046 2846     		mov	r0, r5
 575 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 576              	.LVL29:
 577              	.L32:
 372:Src/main.c    **** 
 578              		.loc 1 372 0
 579 004c 38BD     		pop	{r3, r4, r5, pc}
 580              	.LVL30:
 581              	.L34:
 307:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_RESET);
 582              		.loc 1 307 0
 583 004e 494D     		ldr	r5, .L41+4
 584 0050 0122     		movs	r2, #1
 585 0052 4021     		movs	r1, #64
 586 0054 2846     		mov	r0, r5
 587              	.LVL31:
 588 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 589              	.LVL32:
 308:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 590              		.loc 1 308 0
 591 005a 474C     		ldr	r4, .L41+8
 592 005c 0022     		movs	r2, #0
 593 005e 2021     		movs	r1, #32
 594 0060 2046     		mov	r0, r4
 595 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 596              	.LVL33:
ARM GAS  /tmp/ccQZgaDW.s 			page 86


 309:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 597              		.loc 1 309 0
 598 0066 0122     		movs	r2, #1
 599 0068 1021     		movs	r1, #16
 600 006a 2046     		mov	r0, r4
 601 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 602              	.LVL34:
 310:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 603              		.loc 1 310 0
 604 0070 0122     		movs	r2, #1
 605 0072 0821     		movs	r1, #8
 606 0074 2046     		mov	r0, r4
 607 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 608              	.LVL35:
 311:Src/main.c    **** 
 609              		.loc 1 311 0
 610 007a 0122     		movs	r2, #1
 611 007c 4FF40041 		mov	r1, #32768
 612 0080 2846     		mov	r0, r5
 613 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 614              	.LVL36:
 313:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[0] ;
 615              		.loc 1 313 0
 616 0086 3D4C     		ldr	r4, .L41+12
 617 0088 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 618 008a FFF7FEFF 		bl	HDMI_Tx_SetAudioFs
 619              	.LVL37:
 314:Src/main.c    ****         break ;
 620              		.loc 1 314 0
 621 008e 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 622 0090 3B4B     		ldr	r3, .L41+16
 623 0092 1A70     		strb	r2, [r3]
 315:Src/main.c    **** 
 624              		.loc 1 315 0
 625 0094 DAE7     		b	.L32
 626              	.LVL38:
 627              	.L36:
 326:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 628              		.loc 1 326 0
 629 0096 374D     		ldr	r5, .L41+4
 630 0098 0122     		movs	r2, #1
 631 009a 4021     		movs	r1, #64
 632 009c 2846     		mov	r0, r5
 633              	.LVL39:
 634 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 635              	.LVL40:
 327:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_RESET);
 636              		.loc 1 327 0
 637 00a2 354C     		ldr	r4, .L41+8
 638 00a4 0122     		movs	r2, #1
 639 00a6 2021     		movs	r1, #32
 640 00a8 2046     		mov	r0, r4
 641 00aa FFF7FEFF 		bl	HAL_GPIO_WritePin
 642              	.LVL41:
 328:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 643              		.loc 1 328 0
 644 00ae 0022     		movs	r2, #0
ARM GAS  /tmp/ccQZgaDW.s 			page 87


 645 00b0 1021     		movs	r1, #16
 646 00b2 2046     		mov	r0, r4
 647 00b4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 648              	.LVL42:
 329:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 649              		.loc 1 329 0
 650 00b8 0122     		movs	r2, #1
 651 00ba 0821     		movs	r1, #8
 652 00bc 2046     		mov	r0, r4
 653 00be FFF7FEFF 		bl	HAL_GPIO_WritePin
 654              	.LVL43:
 330:Src/main.c    **** 
 655              		.loc 1 330 0
 656 00c2 0122     		movs	r2, #1
 657 00c4 4FF40041 		mov	r1, #32768
 658 00c8 2846     		mov	r0, r5
 659 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
 660              	.LVL44:
 332:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[1] ;
 661              		.loc 1 332 0
 662 00ce 2B4C     		ldr	r4, .L41+12
 663 00d0 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 664 00d2 FFF7FEFF 		bl	HDMI_Tx_SetAudioFs
 665              	.LVL45:
 333:Src/main.c    ****         break ;
 666              		.loc 1 333 0
 667 00d6 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 668 00d8 294B     		ldr	r3, .L41+16
 669 00da 1A70     		strb	r2, [r3]
 334:Src/main.c    **** 
 670              		.loc 1 334 0
 671 00dc B6E7     		b	.L32
 672              	.LVL46:
 673              	.L37:
 344:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 674              		.loc 1 344 0
 675 00de 254D     		ldr	r5, .L41+4
 676 00e0 0022     		movs	r2, #0
 677 00e2 4021     		movs	r1, #64
 678 00e4 2846     		mov	r0, r5
 679              	.LVL47:
 680 00e6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 681              	.LVL48:
 345:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 682              		.loc 1 345 0
 683 00ea 234C     		ldr	r4, .L41+8
 684 00ec 0122     		movs	r2, #1
 685 00ee 2021     		movs	r1, #32
 686 00f0 2046     		mov	r0, r4
 687 00f2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 688              	.LVL49:
 346:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_RESET);
 689              		.loc 1 346 0
 690 00f6 0122     		movs	r2, #1
 691 00f8 1021     		movs	r1, #16
 692 00fa 2046     		mov	r0, r4
 693 00fc FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccQZgaDW.s 			page 88


 694              	.LVL50:
 347:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_SET);
 695              		.loc 1 347 0
 696 0100 0022     		movs	r2, #0
 697 0102 0821     		movs	r1, #8
 698 0104 2046     		mov	r0, r4
 699 0106 FFF7FEFF 		bl	HAL_GPIO_WritePin
 700              	.LVL51:
 348:Src/main.c    **** 
 701              		.loc 1 348 0
 702 010a 0122     		movs	r2, #1
 703 010c 4FF40041 		mov	r1, #32768
 704 0110 2846     		mov	r0, r5
 705 0112 FFF7FEFF 		bl	HAL_GPIO_WritePin
 706              	.LVL52:
 350:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[2] ;
 707              		.loc 1 350 0
 708 0116 194C     		ldr	r4, .L41+12
 709 0118 A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 710 011a FFF7FEFF 		bl	HDMI_Tx_SetAudioFs
 711              	.LVL53:
 351:Src/main.c    ****         break ;
 712              		.loc 1 351 0
 713 011e A278     		ldrb	r2, [r4, #2]	@ zero_extendqisi2
 714 0120 174B     		ldr	r3, .L41+16
 715 0122 1A70     		strb	r2, [r3]
 352:Src/main.c    **** 
 716              		.loc 1 352 0
 717 0124 92E7     		b	.L32
 718              	.LVL54:
 719              	.L38:
 362:Src/main.c    ****         HAL_GPIO_WritePin(H1_AUDIO_GPIO_Port, H1_AUDIO_Pin, GPIO_PIN_SET);
 720              		.loc 1 362 0
 721 0126 134D     		ldr	r5, .L41+4
 722 0128 0022     		movs	r2, #0
 723 012a 4021     		movs	r1, #64
 724 012c 2846     		mov	r0, r5
 725              	.LVL55:
 726 012e FFF7FEFF 		bl	HAL_GPIO_WritePin
 727              	.LVL56:
 363:Src/main.c    ****         HAL_GPIO_WritePin(H2_AUDIO_GPIO_Port, H2_AUDIO_Pin, GPIO_PIN_SET);
 728              		.loc 1 363 0
 729 0132 114C     		ldr	r4, .L41+8
 730 0134 0122     		movs	r2, #1
 731 0136 2021     		movs	r1, #32
 732 0138 2046     		mov	r0, r4
 733 013a FFF7FEFF 		bl	HAL_GPIO_WritePin
 734              	.LVL57:
 364:Src/main.c    ****         HAL_GPIO_WritePin(H3_AUDIO_GPIO_Port, H3_AUDIO_Pin, GPIO_PIN_SET);
 735              		.loc 1 364 0
 736 013e 0122     		movs	r2, #1
 737 0140 1021     		movs	r1, #16
 738 0142 2046     		mov	r0, r4
 739 0144 FFF7FEFF 		bl	HAL_GPIO_WritePin
 740              	.LVL58:
 365:Src/main.c    ****         HAL_GPIO_WritePin(H4_AUDIO_GPIO_Port, H4_AUDIO_Pin, GPIO_PIN_RESET);
 741              		.loc 1 365 0
ARM GAS  /tmp/ccQZgaDW.s 			page 89


 742 0148 0122     		movs	r2, #1
 743 014a 0821     		movs	r1, #8
 744 014c 2046     		mov	r0, r4
 745 014e FFF7FEFF 		bl	HAL_GPIO_WritePin
 746              	.LVL59:
 366:Src/main.c    **** 
 747              		.loc 1 366 0
 748 0152 0022     		movs	r2, #0
 749 0154 4FF40041 		mov	r1, #32768
 750 0158 2846     		mov	r0, r5
 751 015a FFF7FEFF 		bl	HAL_GPIO_WritePin
 752              	.LVL60:
 368:Src/main.c    ****         gPreAudioSampleFreq = gAudioSampleFreq[3] ;
 753              		.loc 1 368 0
 754 015e 074C     		ldr	r4, .L41+12
 755 0160 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 756 0162 FFF7FEFF 		bl	HDMI_Tx_SetAudioFs
 757              	.LVL61:
 369:Src/main.c    ****         break ;
 758              		.loc 1 369 0
 759 0166 E278     		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 760 0168 054B     		ldr	r3, .L41+16
 761 016a 1A70     		strb	r2, [r3]
 372:Src/main.c    **** 
 762              		.loc 1 372 0
 763 016c 6EE7     		b	.L32
 764              	.L42:
 765 016e 00BF     		.align	2
 766              	.L41:
 767 0170 00000000 		.word	.LANCHOR0
 768 0174 00080140 		.word	1073809408
 769 0178 000C0140 		.word	1073810432
 770 017c 00000000 		.word	.LANCHOR1
 771 0180 00000000 		.word	gPreAudioSampleFreq
 772              		.cfi_endproc
 773              	.LFE69:
 775              		.section	.text.SET_Audio_Mute,"ax",%progbits
 776              		.align	1
 777              		.global	SET_Audio_Mute
 778              		.syntax unified
 779              		.thumb
 780              		.thumb_func
 781              		.fpu softvfp
 783              	SET_Audio_Mute:
 784              	.LFB70:
 375:Src/main.c    **** 
 785              		.loc 1 375 0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 0, uses_anonymous_args = 0
 789              	.LVL62:
 790 0000 10B5     		push	{r4, lr}
 791              	.LCFI14:
 792              		.cfi_def_cfa_offset 8
 793              		.cfi_offset 4, -8
 794              		.cfi_offset 14, -4
 795 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccQZgaDW.s 			page 90


 377:Src/main.c    **** 	HAL_GPIO_WritePin(AUD_I2C_MUTE_Port,AUD_I2C_MUTE_Pin, GPIO_PIN_RESET);
 796              		.loc 1 377 0
 797 0004 0128     		cmp	r0, #1
 798 0006 09D0     		beq	.L47
 380:Src/main.c    **** 
 799              		.loc 1 380 0
 800 0008 0122     		movs	r2, #1
 801 000a 0821     		movs	r1, #8
 802 000c 0648     		ldr	r0, .L48
 803              	.LVL63:
 804 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 805              	.LVL64:
 806              	.L45:
 382:Src/main.c    **** 
 807              		.loc 1 382 0
 808 0012 2146     		mov	r1, r4
 809 0014 0548     		ldr	r0, .L48+4
 810 0016 FFF7FEFF 		bl	Printf
 811              	.LVL65:
 384:Src/main.c    **** 
 812              		.loc 1 384 0
 813 001a 10BD     		pop	{r4, pc}
 814              	.LVL66:
 815              	.L47:
 378:Src/main.c    **** else
 816              		.loc 1 378 0
 817 001c 0022     		movs	r2, #0
 818 001e 0821     		movs	r1, #8
 819 0020 0148     		ldr	r0, .L48
 820              	.LVL67:
 821 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 822              	.LVL68:
 823 0026 F4E7     		b	.L45
 824              	.L49:
 825              		.align	2
 826              	.L48:
 827 0028 00100140 		.word	1073811456
 828 002c 00000000 		.word	.LC0
 829              		.cfi_endproc
 830              	.LFE70:
 832              		.section	.text.HDMI_VideoModeDetect,"ax",%progbits
 833              		.align	1
 834              		.syntax unified
 835              		.thumb
 836              		.thumb_func
 837              		.fpu softvfp
 839              	HDMI_VideoModeDetect:
 840              	.LFB74:
1165:Src/main.c    **** 		tByte i  ;
 841              		.loc 1 1165 0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845 0000 30B5     		push	{r4, r5, lr}
 846              	.LCFI15:
 847              		.cfi_def_cfa_offset 12
 848              		.cfi_offset 4, -12
ARM GAS  /tmp/ccQZgaDW.s 			page 91


 849              		.cfi_offset 5, -8
 850              		.cfi_offset 14, -4
 851 0002 83B0     		sub	sp, sp, #12
 852              	.LCFI16:
 853              		.cfi_def_cfa_offset 24
 854              	.LVL69:
1168:Src/main.c    **** 		{
 855              		.loc 1 1168 0
 856 0004 0024     		movs	r4, #0
 857 0006 58E0     		b	.L51
 858              	.LVL70:
 859              	.L74:
1174:Src/main.c    **** 					bSignal[gHDMI_Index] = 0;
 860              		.loc 1 1174 0
 861 0008 6E4B     		ldr	r3, .L78
 862 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 863 000c 142B     		cmp	r3, #20
 864 000e 03D0     		beq	.L68
1177:Src/main.c    **** 			}
 865              		.loc 1 1177 0
 866 0010 6D4B     		ldr	r3, .L78+4
 867 0012 0122     		movs	r2, #1
 868 0014 1A55     		strb	r2, [r3, r4]
 869 0016 5CE0     		b	.L54
 870              	.L68:
1175:Src/main.c    **** 				else
 871              		.loc 1 1175 0
 872 0018 6B4B     		ldr	r3, .L78+4
 873 001a 0022     		movs	r2, #0
 874 001c 1A55     		strb	r2, [r3, r4]
 875 001e 58E0     		b	.L54
 876              	.L75:
1199:Src/main.c    **** 					dbg_Printf("##ch%d, VS4210_Rx_NoSignal\r\n", (int)(i+1) ) ;
 877              		.loc 1 1199 0
 878 0020 2046     		mov	r0, r4
 879 0022 FFF7FEFF 		bl	VS4210_Rx_NoSignal
 880              	.LVL71:
1200:Src/main.c    **** 					if (pVS4210_MutiWindows1.DrawOSDFlg != 0)
 881              		.loc 1 1200 0
 882 0026 631C     		adds	r3, r4, #1
 883 0028 0093     		str	r3, [sp]
 884 002a 4FF49663 		mov	r3, #1200
 885 002e 674A     		ldr	r2, .L78+8
 886 0030 6749     		ldr	r1, .L78+12
 887 0032 6848     		ldr	r0, .L78+16
 888 0034 FFF7FEFF 		bl	printf
 889              	.LVL72:
1201:Src/main.c    **** 					{
 890              		.loc 1 1201 0
 891 0038 674B     		ldr	r3, .L78+20
 892 003a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 893 003c 4BB1     		cbz	r3, .L57
1203:Src/main.c    **** 						Tim1_count = 0 ;
 894              		.loc 1 1203 0
 895 003e 0122     		movs	r2, #1
 896 0040 664B     		ldr	r3, .L78+24
 897 0042 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccQZgaDW.s 			page 92


1204:Src/main.c    **** 						OSDStateFlg = 1 ;
 898              		.loc 1 1204 0
 899 0044 0023     		movs	r3, #0
 900 0046 6649     		ldr	r1, .L78+28
 901 0048 0B60     		str	r3, [r1]
1205:Src/main.c    **** 						OSDSecCount = 0 ;
 902              		.loc 1 1205 0
 903 004a 6649     		ldr	r1, .L78+32
 904 004c 0A70     		strb	r2, [r1]
1206:Src/main.c    **** 					}
 905              		.loc 1 1206 0
 906 004e 664A     		ldr	r2, .L78+36
 907 0050 1370     		strb	r3, [r2]
 908              	.L57:
1208:Src/main.c    **** 					PrebVXIS_InputMode[gHDMI_Index] = _OSD_No_Signal ;
 909              		.loc 1 1208 0
 910 0052 664B     		ldr	r3, .L78+40
 911 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 912 0056 1422     		movs	r2, #20
 913 0058 6549     		ldr	r1, .L78+44
 914 005a CA54     		strb	r2, [r1, r3]
1209:Src/main.c    **** 
 915              		.loc 1 1209 0
 916 005c 6549     		ldr	r1, .L78+48
 917 005e CA54     		strb	r2, [r1, r3]
1211:Src/main.c    **** 						Set_Video_Loss_OSD(0,ON);
 918              		.loc 1 1211 0
 919 0060 654A     		ldr	r2, .L78+52
 920 0062 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 921 0064 02B9     		cbnz	r2, .L58
1211:Src/main.c    **** 						Set_Video_Loss_OSD(0,ON);
 922              		.loc 1 1211 0 is_stmt 0 discriminator 1
 923 0066 1BB1     		cbz	r3, .L69
 924              	.L58:
1215:Src/main.c    **** 				}
 925              		.loc 1 1215 0 is_stmt 1
 926 0068 0120     		movs	r0, #1
 927 006a FFF7FEFF 		bl	SET_Audio_Mute
 928              	.LVL73:
 929 006e 44E0     		b	.L56
 930              	.L69:
1212:Src/main.c    **** 					//MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);	
 931              		.loc 1 1212 0
 932 0070 0121     		movs	r1, #1
 933 0072 0020     		movs	r0, #0
 934 0074 FFF7FEFF 		bl	Set_Video_Loss_OSD
 935              	.LVL74:
 936 0078 F6E7     		b	.L58
 937              	.L76:
1222:Src/main.c    **** 					gbVXIS_InputMode[gHDMI_Index] = newInRes[0];
 938              		.loc 1 1222 0
 939 007a 012C     		cmp	r4, #1
 940 007c 05D0     		beq	.L70
1226:Src/main.c    **** 
 941              		.loc 1 1226 0
 942 007e 2846     		mov	r0, r5
 943 0080 FFF7FEFF 		bl	GetHDMI_InputMode
ARM GAS  /tmp/ccQZgaDW.s 			page 93


 944              	.LVL75:
 945 0084 5A4B     		ldr	r3, .L78+44
 946 0086 5855     		strb	r0, [r3, r5]
 947 0088 3DE0     		b	.L59
 948              	.L70:
1223:Src/main.c    **** 				else
 949              		.loc 1 1223 0
 950 008a 4E4B     		ldr	r3, .L78
 951 008c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 952 008e 584B     		ldr	r3, .L78+44
 953 0090 5A55     		strb	r2, [r3, r5]
 954 0092 38E0     		b	.L59
 955              	.L77:
1238:Src/main.c    **** 					VXISI2CWrite( 0x19, 0x01 );
 956              		.loc 1 1238 0 discriminator 1
 957 0094 554B     		ldr	r3, .L78+40
 958 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 959 0098 012B     		cmp	r3, #1
 960 009a 4CD1     		bne	.L62
1239:Src/main.c    **** 							
 961              		.loc 1 1239 0
 962 009c 0121     		movs	r1, #1
 963 009e 1920     		movs	r0, #25
 964 00a0 FFF7FEFF 		bl	VXISI2CWrite
 965              	.LVL76:
 966 00a4 47E0     		b	.L62
 967              	.L64:
1268:Src/main.c    **** 							{
 968              		.loc 1 1268 0
 969 00a6 544B     		ldr	r3, .L78+52
 970 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971 00aa 012B     		cmp	r3, #1
 972 00ac 79D0     		beq	.L71
 973              	.L65:
1273:Src/main.c    **** 						SET_Audio_Mute(OFF);	
 974              		.loc 1 1273 0
 975 00ae 4F4B     		ldr	r3, .L78+40
 976 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 977 00b2 002B     		cmp	r3, #0
 978 00b4 7FD0     		beq	.L72
 979              	.L61:
1168:Src/main.c    **** 		{
 980              		.loc 1 1168 0 discriminator 2
 981 00b6 0134     		adds	r4, r4, #1
 982              	.LVL77:
 983 00b8 E4B2     		uxtb	r4, r4
 984              	.LVL78:
 985              	.L51:
1168:Src/main.c    **** 		{
 986              		.loc 1 1168 0 is_stmt 0 discriminator 1
 987 00ba 012C     		cmp	r4, #1
 988 00bc 7FD8     		bhi	.L73
1170:Src/main.c    **** 			//--- Start --- 20201214-01
 989              		.loc 1 1170 0 is_stmt 1
 990 00be 4B4B     		ldr	r3, .L78+40
 991 00c0 1C70     		strb	r4, [r3]
1172:Src/main.c    **** 			{
ARM GAS  /tmp/ccQZgaDW.s 			page 94


 992              		.loc 1 1172 0
 993 00c2 012C     		cmp	r4, #1
 994 00c4 A0D0     		beq	.L74
1181:Src/main.c    **** 
 995              		.loc 1 1181 0
 996 00c6 FFF7FEFF 		bl	CheckHDMIRX
 997              	.LVL79:
 998 00ca 484B     		ldr	r3, .L78+40
 999 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1000 00ce 3E4A     		ldr	r2, .L78+4
 1001 00d0 D054     		strb	r0, [r2, r3]
 1002              	.L54:
1188:Src/main.c    **** 			{
 1003              		.loc 1 1188 0
 1004 00d2 464B     		ldr	r3, .L78+40
 1005 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1006 00d6 494A     		ldr	r2, .L78+56
 1007 00d8 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 1008 00da 494A     		ldr	r2, .L78+60
 1009 00dc D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1010 00de 9142     		cmp	r1, r2
 1011 00e0 01D0     		beq	.L55
1190:Src/main.c    **** 			}
 1012              		.loc 1 1190 0
 1013 00e2 4649     		ldr	r1, .L78+56
 1014 00e4 CA54     		strb	r2, [r1, r3]
 1015              	.L55:
1193:Src/main.c    **** 			{
 1016              		.loc 1 1193 0
 1017 00e6 384A     		ldr	r2, .L78+4
 1018 00e8 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1019 00ea 4649     		ldr	r1, .L78+64
 1020 00ec C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1021 00ee 8A42     		cmp	r2, r1
 1022 00f0 03D0     		beq	.L56
1195:Src/main.c    **** 	
 1023              		.loc 1 1195 0
 1024 00f2 4449     		ldr	r1, .L78+64
 1025 00f4 CA54     		strb	r2, [r1, r3]
1197:Src/main.c    **** 				{
 1026              		.loc 1 1197 0
 1027 00f6 002A     		cmp	r2, #0
 1028 00f8 92D0     		beq	.L75
 1029              	.L56:
1219:Src/main.c    **** 			{
 1030              		.loc 1 1219 0
 1031 00fa 3C4B     		ldr	r3, .L78+40
 1032 00fc 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 1033 00fe 324B     		ldr	r3, .L78+4
 1034 0100 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 1035 0102 012B     		cmp	r3, #1
 1036 0104 B9D0     		beq	.L76
 1037              	.L59:
1230:Src/main.c    **** 			{
 1038              		.loc 1 1230 0
 1039 0106 394B     		ldr	r3, .L78+40
 1040 0108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccQZgaDW.s 			page 95


 1041 010a 394A     		ldr	r2, .L78+44
 1042 010c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1043 010e 3949     		ldr	r1, .L78+48
 1044 0110 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1045 0112 8A42     		cmp	r2, r1
 1046 0114 CFD0     		beq	.L61
1232:Src/main.c    **** 	
 1047              		.loc 1 1232 0
 1048 0116 3749     		ldr	r1, .L78+48
 1049 0118 CA54     		strb	r2, [r1, r3]
1234:Src/main.c    **** 				{
 1050              		.loc 1 1234 0
 1051 011a 142A     		cmp	r2, #20
 1052 011c CBD0     		beq	.L61
1236:Src/main.c    **** 
 1053              		.loc 1 1236 0
 1054 011e 2546     		mov	r5, r4
 1055 0120 2D4B     		ldr	r3, .L78+20
 1056 0122 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1057 0124 324B     		ldr	r3, .L78+44
 1058 0126 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 1059 0128 2046     		mov	r0, r4
 1060 012a FFF7FEFF 		bl	VS4210_SetInModeOutMode
 1061              	.LVL80:
1238:Src/main.c    **** 					VXISI2CWrite( 0x19, 0x01 );
 1062              		.loc 1 1238 0
 1063 012e 324B     		ldr	r3, .L78+52
 1064 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1065 0132 012B     		cmp	r3, #1
 1066 0134 AED0     		beq	.L77
 1067              	.L62:
1242:Src/main.c    **** 
 1068              		.loc 1 1242 0
 1069 0136 344B     		ldr	r3, .L78+68
 1070 0138 33F81530 		ldrh	r3, [r3, r5, lsl #1]
 1071 013c 334A     		ldr	r2, .L78+72
 1072 013e 32F81520 		ldrh	r2, [r2, r5, lsl #1]
 1073 0142 3349     		ldr	r1, .L78+76
 1074 0144 31F81510 		ldrh	r1, [r1, r5, lsl #1]
 1075 0148 3248     		ldr	r0, .L78+80
 1076 014a 30F81500 		ldrh	r0, [r0, r5, lsl #1]
 1077 014e 0090     		str	r0, [sp]
 1078 0150 2046     		mov	r0, r4
 1079 0152 FFF7FEFF 		bl	VS4210_SetInputSizeHV
 1080              	.LVL81:
1245:Src/main.c    **** 
 1081              		.loc 1 1245 0
 1082 0156 264B     		ldr	r3, .L78+44
 1083 0158 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 1084 015a 0193     		str	r3, [sp, #4]
 1085 015c 0135     		adds	r5, r5, #1
 1086 015e 0095     		str	r5, [sp]
 1087 0160 40F2DD43 		movw	r3, #1245
 1088 0164 194A     		ldr	r2, .L78+8
 1089 0166 1A49     		ldr	r1, .L78+12
 1090 0168 2B48     		ldr	r0, .L78+84
 1091 016a FFF7FEFF 		bl	printf
ARM GAS  /tmp/ccQZgaDW.s 			page 96


 1092              	.LVL82:
1257:Src/main.c    **** 					{
 1093              		.loc 1 1257 0
 1094 016e 1A4B     		ldr	r3, .L78+20
 1095 0170 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 1096 0172 4BB1     		cbz	r3, .L63
1259:Src/main.c    **** 						Tim1_count = 0 ;
 1097              		.loc 1 1259 0
 1098 0174 0122     		movs	r2, #1
 1099 0176 194B     		ldr	r3, .L78+24
 1100 0178 1A60     		str	r2, [r3]
1260:Src/main.c    **** 						OSDStateFlg = 1 ;
 1101              		.loc 1 1260 0
 1102 017a 0023     		movs	r3, #0
 1103 017c 1849     		ldr	r1, .L78+28
 1104 017e 0B60     		str	r3, [r1]
1261:Src/main.c    **** 						OSDSecCount = 0 ;
 1105              		.loc 1 1261 0
 1106 0180 1849     		ldr	r1, .L78+32
 1107 0182 0A70     		strb	r2, [r1]
1262:Src/main.c    **** 					}
 1108              		.loc 1 1262 0
 1109 0184 184A     		ldr	r2, .L78+36
 1110 0186 1370     		strb	r3, [r2]
 1111              	.L63:
1265:Src/main.c    **** 						Set_Video_Loss_OSD(0,OFF);	
 1112              		.loc 1 1265 0
 1113 0188 1B4B     		ldr	r3, .L78+52
 1114 018a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1115 018c 002B     		cmp	r3, #0
 1116 018e 8AD1     		bne	.L64
1265:Src/main.c    **** 						Set_Video_Loss_OSD(0,OFF);	
 1117              		.loc 1 1265 0 is_stmt 0 discriminator 1
 1118 0190 164B     		ldr	r3, .L78+40
 1119 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1120 0194 002B     		cmp	r3, #0
 1121 0196 86D1     		bne	.L64
1266:Src/main.c    **** 
 1122              		.loc 1 1266 0 is_stmt 1
 1123 0198 0021     		movs	r1, #0
 1124 019a 0846     		mov	r0, r1
 1125 019c FFF7FEFF 		bl	Set_Video_Loss_OSD
 1126              	.LVL83:
 1127 01a0 81E7     		b	.L64
 1128              	.L71:
1268:Src/main.c    **** 							{
 1129              		.loc 1 1268 0 discriminator 1
 1130 01a2 124B     		ldr	r3, .L78+40
 1131 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1132 01a6 012B     		cmp	r3, #1
 1133 01a8 81D1     		bne	.L65
1270:Src/main.c    **** 							}
 1134              		.loc 1 1270 0
 1135 01aa 4021     		movs	r1, #64
 1136 01ac 4FF47A70 		mov	r0, #1000
 1137 01b0 FFF7FEFF 		bl	MCUTimerActiveTimerEvent
 1138              	.LVL84:
ARM GAS  /tmp/ccQZgaDW.s 			page 97


 1139 01b4 7BE7     		b	.L65
 1140              	.L72:
1274:Src/main.c    **** 						//MCUTimerActiveTimerEvent(SEC(2), _SYSTEM_TIMER_EVENT_SET_VIDEO_LOSS);
 1141              		.loc 1 1274 0
 1142 01b6 0020     		movs	r0, #0
 1143 01b8 FFF7FEFF 		bl	SET_Audio_Mute
 1144              	.LVL85:
 1145 01bc 7BE7     		b	.L61
 1146              	.L73:
1279:Src/main.c    **** 
 1147              		.loc 1 1279 0
 1148 01be 03B0     		add	sp, sp, #12
 1149              	.LCFI17:
 1150              		.cfi_def_cfa_offset 12
 1151              		@ sp needed
 1152 01c0 30BD     		pop	{r4, r5, pc}
 1153              	.LVL86:
 1154              	.L79:
 1155 01c2 00BF     		.align	2
 1156              	.L78:
 1157 01c4 00000000 		.word	newInRes
 1158 01c8 00000000 		.word	.LANCHOR2
 1159 01cc 00000000 		.word	.LANCHOR4
 1160 01d0 00000000 		.word	.LC1
 1161 01d4 0C000000 		.word	.LC2
 1162 01d8 00000000 		.word	pVS4210_MutiWindows1
 1163 01dc 00000000 		.word	.LANCHOR5
 1164 01e0 00000000 		.word	.LANCHOR6
 1165 01e4 00000000 		.word	.LANCHOR7
 1166 01e8 00000000 		.word	.LANCHOR8
 1167 01ec 00000000 		.word	gHDMI_Index
 1168 01f0 00000000 		.word	gbVXIS_InputMode
 1169 01f4 00000000 		.word	.LANCHOR9
 1170 01f8 00000000 		.word	.LANCHOR10
 1171 01fc 00000000 		.word	PreVState
 1172 0200 00000000 		.word	VState
 1173 0204 00000000 		.word	.LANCHOR3
 1174 0208 00000000 		.word	gHTotal
 1175 020c 00000000 		.word	gVActive
 1176 0210 00000000 		.word	gHActive
 1177 0214 00000000 		.word	gVTotal
 1178 0218 34000000 		.word	.LC3
 1179              		.cfi_endproc
 1180              	.LFE74:
 1182              		.section	.text.InitialTimerEvent,"ax",%progbits
 1183              		.align	1
 1184              		.global	InitialTimerEvent
 1185              		.syntax unified
 1186              		.thumb
 1187              		.thumb_func
 1188              		.fpu softvfp
 1190              	InitialTimerEvent:
 1191              	.LFB71:
 400:Src/main.c    **** 	MCUTimerInitialTimerEvent();  //clear all of timer event	
 1192              		.loc 1 400 0
 1193              		.cfi_startproc
 1194              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccQZgaDW.s 			page 98


 1195              		@ frame_needed = 0, uses_anonymous_args = 0
 1196 0000 08B5     		push	{r3, lr}
 1197              	.LCFI18:
 1198              		.cfi_def_cfa_offset 8
 1199              		.cfi_offset 3, -8
 1200              		.cfi_offset 14, -4
 401:Src/main.c    **** 
 1201              		.loc 1 401 0
 1202 0002 FFF7FEFF 		bl	MCUTimerInitialTimerEvent
 1203              	.LVL87:
 421:Src/main.c    **** 
 1204              		.loc 1 421 0
 1205 0006 08BD     		pop	{r3, pc}
 1206              		.cfi_endproc
 1207              	.LFE71:
 1209              		.section	.text.GetRS232_CMD,"ax",%progbits
 1210              		.align	1
 1211              		.global	GetRS232_CMD
 1212              		.syntax unified
 1213              		.thumb
 1214              		.thumb_func
 1215              		.fpu softvfp
 1217              	GetRS232_CMD:
 1218              	.LFB72:
 424:Src/main.c    ****     char achstr[3] ;
 1219              		.loc 1 424 0
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 8
 1222              		@ frame_needed = 0, uses_anonymous_args = 0
 428:Src/main.c    ****     {
 1223              		.loc 1 428 0
 1224 0000 174B     		ldr	r3, .L90
 1225 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1226 0004 012B     		cmp	r3, #1
 1227 0006 00D0     		beq	.L88
 1228 0008 7047     		bx	lr
 1229              	.L88:
 424:Src/main.c    ****     char achstr[3] ;
 1230              		.loc 1 424 0
 1231 000a 10B5     		push	{r4, lr}
 1232              	.LCFI19:
 1233              		.cfi_def_cfa_offset 8
 1234              		.cfi_offset 4, -8
 1235              		.cfi_offset 14, -4
 1236 000c 82B0     		sub	sp, sp, #8
 1237              	.LCFI20:
 1238              		.cfi_def_cfa_offset 16
 430:Src/main.c    ****         printf("RxBufIndex=%d,str=%s\r\n",RxBufIndex, gRxbuf);
 1239              		.loc 1 430 0
 1240 000e 144B     		ldr	r3, .L90
 1241 0010 0022     		movs	r2, #0
 1242 0012 1A70     		strb	r2, [r3]
 431:Src/main.c    ****         if ( RxBufIndex >= 4 )
 1243              		.loc 1 431 0
 1244 0014 134C     		ldr	r4, .L90+4
 1245 0016 2168     		ldr	r1, [r4]
 1246 0018 134A     		ldr	r2, .L90+8
ARM GAS  /tmp/ccQZgaDW.s 			page 99


 1247 001a 1448     		ldr	r0, .L90+12
 1248 001c FFF7FEFF 		bl	printf
 1249              	.LVL88:
 432:Src/main.c    ****         {
 1250              		.loc 1 432 0
 1251 0020 2368     		ldr	r3, [r4]
 1252 0022 032B     		cmp	r3, #3
 1253 0024 03DD     		ble	.L82
 434:Src/main.c    ****             {
 1254              		.loc 1 434 0
 1255 0026 104B     		ldr	r3, .L90+8
 1256 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1257 002a 472B     		cmp	r3, #71
 1258 002c 01D0     		beq	.L89
 1259              	.L82:
 446:Src/main.c    **** 
 1260              		.loc 1 446 0
 1261 002e 02B0     		add	sp, sp, #8
 1262              	.LCFI21:
 1263              		.cfi_remember_state
 1264              		.cfi_def_cfa_offset 8
 1265              		@ sp needed
 1266 0030 10BD     		pop	{r4, pc}
 1267              	.L89:
 1268              	.LCFI22:
 1269              		.cfi_restore_state
 434:Src/main.c    ****             {
 1270              		.loc 1 434 0 discriminator 1
 1271 0032 0D4B     		ldr	r3, .L90+8
 1272 0034 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1273 0036 672B     		cmp	r3, #103
 1274 0038 F9D1     		bne	.L82
 436:Src/main.c    ****                 memcpy(&achstr[0], &gRxbuf[1], 2 ) ;
 1275              		.loc 1 436 0
 1276 003a 0023     		movs	r3, #0
 1277 003c 8DF80630 		strb	r3, [sp, #6]
 437:Src/main.c    ****                 IrNum = strtol(achstr, &endptr, 16) ;
 1278              		.loc 1 437 0
 1279 0040 094B     		ldr	r3, .L90+8
 1280 0042 B3F80130 		ldrh	r3, [r3, #1]	@ unaligned
 1281 0046 ADF80430 		strh	r3, [sp, #4]	@ movhi
 438:Src/main.c    ****                 printf("IrNum=0x%02x\r\n",(int)IrNum);
 1282              		.loc 1 438 0
 1283 004a 1022     		movs	r2, #16
 1284 004c 6946     		mov	r1, sp
 1285 004e 01A8     		add	r0, sp, #4
 1286 0050 FFF7FEFF 		bl	strtol
 1287              	.LVL89:
 439:Src/main.c    ****             }
 1288              		.loc 1 439 0
 1289 0054 0146     		mov	r1, r0
 1290 0056 0648     		ldr	r0, .L90+16
 1291              	.LVL90:
 1292 0058 FFF7FEFF 		bl	printf
 1293              	.LVL91:
 446:Src/main.c    **** 
 1294              		.loc 1 446 0
ARM GAS  /tmp/ccQZgaDW.s 			page 100


 1295 005c E7E7     		b	.L82
 1296              	.L91:
 1297 005e 00BF     		.align	2
 1298              	.L90:
 1299 0060 00000000 		.word	.LANCHOR11
 1300 0064 00000000 		.word	.LANCHOR12
 1301 0068 00000000 		.word	.LANCHOR13
 1302 006c 00000000 		.word	.LC4
 1303 0070 18000000 		.word	.LC5
 1304              		.cfi_endproc
 1305              	.LFE72:
 1307              		.section	.text.setloopoutmode,"ax",%progbits
 1308              		.align	1
 1309              		.global	setloopoutmode
 1310              		.syntax unified
 1311              		.thumb
 1312              		.thumb_func
 1313              		.fpu softvfp
 1315              	setloopoutmode:
 1316              	.LFB73:
 450:Src/main.c    **** /*
 1317              		.loc 1 450 0
 1318              		.cfi_startproc
 1319              		@ args = 0, pretend = 0, frame = 0
 1320              		@ frame_needed = 0, uses_anonymous_args = 0
 1321              	.LVL92:
 1322 0000 70B5     		push	{r4, r5, r6, lr}
 1323              	.LCFI23:
 1324              		.cfi_def_cfa_offset 16
 1325              		.cfi_offset 4, -16
 1326              		.cfi_offset 5, -12
 1327              		.cfi_offset 6, -8
 1328              		.cfi_offset 14, -4
 1329 0002 0446     		mov	r4, r0
 458:Src/main.c    ****     {
 1330              		.loc 1 458 0
 1331 0004 1328     		cmp	r0, #19
 1332 0006 25D8     		bhi	.L93
 1333 0008 DFE810F0 		tbh	[pc, r0, lsl #1]
 1334              	.L95:
 1335 000c 1400     		.2byte	(.L94-.L95)/2
 1336 000e 3900     		.2byte	(.L96-.L95)/2
 1337 0010 4A00     		.2byte	(.L97-.L95)/2
 1338 0012 5C00     		.2byte	(.L98-.L95)/2
 1339 0014 6E00     		.2byte	(.L99-.L95)/2
 1340 0016 9500     		.2byte	(.L100-.L95)/2
 1341 0018 2400     		.2byte	(.L93-.L95)/2
 1342 001a 2400     		.2byte	(.L93-.L95)/2
 1343 001c 2400     		.2byte	(.L93-.L95)/2
 1344 001e A400     		.2byte	(.L101-.L95)/2
 1345 0020 BA01     		.2byte	(.L102-.L95)/2
 1346 0022 BD00     		.2byte	(.L103-.L95)/2
 1347 0024 D600     		.2byte	(.L104-.L95)/2
 1348 0026 F000     		.2byte	(.L105-.L95)/2
 1349 0028 0A01     		.2byte	(.L106-.L95)/2
 1350 002a 2501     		.2byte	(.L107-.L95)/2
 1351 002c 3F01     		.2byte	(.L108-.L95)/2
ARM GAS  /tmp/ccQZgaDW.s 			page 101


 1352 002e 5901     		.2byte	(.L109-.L95)/2
 1353 0030 D401     		.2byte	(.L110-.L95)/2
 1354 0032 A001     		.2byte	(.L111-.L95)/2
 1355              		.p2align 1
 1356              	.L94:
 462:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 1357              		.loc 1 462 0
 1358 0034 AE4B     		ldr	r3, .L113
 1359 0036 0022     		movs	r2, #0
 1360 0038 1A70     		strb	r2, [r3]
 463:Src/main.c    **** 	 OSD_MIRROR[0]=CAMA_M;
 1361              		.loc 1 463 0
 1362 003a 0125     		movs	r5, #1
 1363 003c 5D70     		strb	r5, [r3, #1]
 464:Src/main.c    **** 	 gabVXIS_Input_mirrorH[0]=CAMA_M;
 1364              		.loc 1 464 0
 1365 003e AD4B     		ldr	r3, .L113+4
 1366 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1367 0042 AD4A     		ldr	r2, .L113+8
 1368 0044 1370     		strb	r3, [r2]
 465:Src/main.c    ****         printf("VS4210_MODE0_w0\r\n") ;
 1369              		.loc 1 465 0
 1370 0046 AD4A     		ldr	r2, .L113+12
 1371 0048 1370     		strb	r3, [r2]
 466:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 1372              		.loc 1 466 0
 1373 004a AD48     		ldr	r0, .L113+16
 1374              	.LVL93:
 1375 004c FFF7FEFF 		bl	puts
 1376              	.LVL94:
 467:Src/main.c    ****         break ;
 1377              		.loc 1 467 0
 1378 0050 AC4B     		ldr	r3, .L113+20
 1379 0052 1D70     		strb	r5, [r3]
 1380              	.L93:
1100:Src/main.c    **** 
 1381              		.loc 1 1100 0
 1382 0054 A648     		ldr	r0, .L113
 1383 0056 FFF7FEFF 		bl	VS4210_SetMutiWindows
 1384              	.LVL95:
1103:Src/main.c    **** 
 1385              		.loc 1 1103 0
 1386 005a 0120     		movs	r0, #1
 1387 005c FFF7FEFF 		bl	AudioMute
 1388              	.LVL96:
1105:Src/main.c    **** MCUTimerActiveTimerEvent(SEC(1),  _SYSTEM_TIMER_EVENT_AUDIO_CHANNEL_SELECT);
 1389              		.loc 1 1105 0
 1390 0060 3B20     		movs	r0, #59
 1391 0062 FFF7FEFF 		bl	MCUTimerCancelTimerEvent
 1392              	.LVL97:
1106:Src/main.c    **** AUDIO_SELECT(index);
 1393              		.loc 1 1106 0
 1394 0066 3B21     		movs	r1, #59
 1395 0068 4FF47A70 		mov	r0, #1000
 1396 006c FFF7FEFF 		bl	MCUTimerActiveTimerEvent
 1397              	.LVL98:
1107:Src/main.c    **** 
ARM GAS  /tmp/ccQZgaDW.s 			page 102


 1398              		.loc 1 1107 0
 1399 0070 E4B2     		uxtb	r4, r4
 1400              	.LVL99:
 1401 0072 2046     		mov	r0, r4
 1402 0074 FFF7FEFF 		bl	AUDIO_SELECT
 1403              	.LVL100:
1109:Src/main.c    **** 
 1404              		.loc 1 1109 0
 1405 0078 A34B     		ldr	r3, .L113+24
 1406 007a 1C70     		strb	r4, [r3]
1113:Src/main.c    **** 
 1407              		.loc 1 1113 0
 1408 007c 70BD     		pop	{r4, r5, r6, pc}
 1409              	.LVL101:
 1410              	.L96:
 472:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 1411              		.loc 1 472 0
 1412 007e 9C4A     		ldr	r2, .L113
 1413 0080 0123     		movs	r3, #1
 1414 0082 1370     		strb	r3, [r2]
 473:Src/main.c    ****    	 OSD_MIRROR[0]=CAMB_M;
 1415              		.loc 1 473 0
 1416 0084 0221     		movs	r1, #2
 1417 0086 5170     		strb	r1, [r2, #1]
 474:Src/main.c    **** 	 gabVXIS_Input_mirrorH[1]=CAMB_M; 
 1418              		.loc 1 474 0
 1419 0088 A04A     		ldr	r2, .L113+28
 1420 008a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1421 008c 9A49     		ldr	r1, .L113+8
 1422 008e 0A70     		strb	r2, [r1]
 475:Src/main.c    **** 	 OSD_SPEAKER[0]=ON;
 1423              		.loc 1 475 0
 1424 0090 9A49     		ldr	r1, .L113+12
 1425 0092 4A70     		strb	r2, [r1, #1]
 476:Src/main.c    ****         printf("VS4210_MODE0_w1\r\n") ;
 1426              		.loc 1 476 0
 1427 0094 9B4A     		ldr	r2, .L113+20
 1428 0096 1370     		strb	r3, [r2]
 477:Src/main.c    ****         break ;
 1429              		.loc 1 477 0
 1430 0098 9D48     		ldr	r0, .L113+32
 1431              	.LVL102:
 1432 009a FFF7FEFF 		bl	puts
 1433              	.LVL103:
 478:Src/main.c    ****     }
 1434              		.loc 1 478 0
 1435 009e D9E7     		b	.L93
 1436              	.LVL104:
 1437              	.L97:
 482:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 1438              		.loc 1 482 0
 1439 00a0 934B     		ldr	r3, .L113
 1440 00a2 0222     		movs	r2, #2
 1441 00a4 1A70     		strb	r2, [r3]
 483:Src/main.c    **** 	 OSD_MIRROR[0]=CAMC_M;	
 1442              		.loc 1 483 0
 1443 00a6 0322     		movs	r2, #3
ARM GAS  /tmp/ccQZgaDW.s 			page 103


 1444 00a8 5A70     		strb	r2, [r3, #1]
 484:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 	 
 1445              		.loc 1 484 0
 1446 00aa 9A4B     		ldr	r3, .L113+36
 1447 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1448 00ae 924A     		ldr	r2, .L113+8
 1449 00b0 1370     		strb	r3, [r2]
 485:Src/main.c    **** 	 OSD_SPEAKER[0]=ON;
 1450              		.loc 1 485 0
 1451 00b2 924A     		ldr	r2, .L113+12
 1452 00b4 9370     		strb	r3, [r2, #2]
 486:Src/main.c    ****         printf("VS4210_MODE0_w2\r\n") ;
 1453              		.loc 1 486 0
 1454 00b6 934B     		ldr	r3, .L113+20
 1455 00b8 0122     		movs	r2, #1
 1456 00ba 1A70     		strb	r2, [r3]
 487:Src/main.c    ****         break ;
 1457              		.loc 1 487 0
 1458 00bc 9648     		ldr	r0, .L113+40
 1459              	.LVL105:
 1460 00be FFF7FEFF 		bl	puts
 1461              	.LVL106:
 488:Src/main.c    ****     }
 1462              		.loc 1 488 0
 1463 00c2 C7E7     		b	.L93
 1464              	.LVL107:
 1465              	.L98:
 492:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 1466              		.loc 1 492 0
 1467 00c4 8A4B     		ldr	r3, .L113
 1468 00c6 0322     		movs	r2, #3
 1469 00c8 1A70     		strb	r2, [r3]
 493:Src/main.c    ****    	OSD_MIRROR[0]=CAMR_M;	
 1470              		.loc 1 493 0
 1471 00ca 0422     		movs	r2, #4
 1472 00cc 5A70     		strb	r2, [r3, #1]
 494:Src/main.c    **** 	gabVXIS_Input_mirrorH[3]=CAMR_M; 		
 1473              		.loc 1 494 0
 1474 00ce 934B     		ldr	r3, .L113+44
 1475 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1476 00d2 894A     		ldr	r2, .L113+8
 1477 00d4 1370     		strb	r3, [r2]
 495:Src/main.c    ****   	OSD_SPEAKER[0]=ON;
 1478              		.loc 1 495 0
 1479 00d6 894A     		ldr	r2, .L113+12
 1480 00d8 D370     		strb	r3, [r2, #3]
 496:Src/main.c    ****         printf("VS4210_MODE0_w3\r\n") ;
 1481              		.loc 1 496 0
 1482 00da 8A4B     		ldr	r3, .L113+20
 1483 00dc 0122     		movs	r2, #1
 1484 00de 1A70     		strb	r2, [r3]
 497:Src/main.c    ****         break ;
 1485              		.loc 1 497 0
 1486 00e0 8F48     		ldr	r0, .L113+48
 1487              	.LVL108:
 1488 00e2 FFF7FEFF 		bl	puts
 1489              	.LVL109:
ARM GAS  /tmp/ccQZgaDW.s 			page 104


 498:Src/main.c    ****     }
 1490              		.loc 1 498 0
 1491 00e6 B5E7     		b	.L93
 1492              	.LVL110:
 1493              	.L99:
 502:Src/main.c    **** 	
 1494              		.loc 1 502 0
 1495 00e8 814B     		ldr	r3, .L113
 1496 00ea 1022     		movs	r2, #16
 1497 00ec 1A70     		strb	r2, [r3]
 504:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 1498              		.loc 1 504 0
 1499 00ee 0121     		movs	r1, #1
 1500 00f0 5970     		strb	r1, [r3, #1]
 505:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 1501              		.loc 1 505 0
 1502 00f2 0222     		movs	r2, #2
 1503 00f4 9A70     		strb	r2, [r3, #2]
 506:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 1504              		.loc 1 506 0
 1505 00f6 0322     		movs	r2, #3
 1506 00f8 DA70     		strb	r2, [r3, #3]
 507:Src/main.c    ****    	  OSD_MIRROR[0]=CAMA_M;	
 1507              		.loc 1 507 0
 1508 00fa 0422     		movs	r2, #4
 1509 00fc 1A71     		strb	r2, [r3, #4]
 508:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 1510              		.loc 1 508 0
 1511 00fe 7D4B     		ldr	r3, .L113+4
 1512 0100 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 1513 0102 7D4B     		ldr	r3, .L113+8
 1514 0104 1E70     		strb	r6, [r3]
 509:Src/main.c    ****    	  OSD_MIRROR[2]=CAMC_M;	
 1515              		.loc 1 509 0
 1516 0106 814A     		ldr	r2, .L113+28
 1517 0108 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 1518 010a 5D70     		strb	r5, [r3, #1]
 510:Src/main.c    ****    	  OSD_MIRROR[3]=CAMR_M;	
 1519              		.loc 1 510 0
 1520 010c 814A     		ldr	r2, .L113+36
 1521 010e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1522              	.LVL111:
 1523 0110 9870     		strb	r0, [r3, #2]
 511:Src/main.c    **** 	gabVXIS_Input_mirrorH[0]=CAMA_M; 		  
 1524              		.loc 1 511 0
 1525 0112 824A     		ldr	r2, .L113+44
 1526 0114 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1527 0116 DA70     		strb	r2, [r3, #3]
 512:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 		  
 1528              		.loc 1 512 0
 1529 0118 784B     		ldr	r3, .L113+12
 1530 011a 1E70     		strb	r6, [r3]
 513:Src/main.c    **** 	gabVXIS_Input_mirrorH[2]=CAMC_M; 		  
 1531              		.loc 1 513 0
 1532 011c 5D70     		strb	r5, [r3, #1]
 514:Src/main.c    **** 	gabVXIS_Input_mirrorH[3]=CAMR_M; 		  
 1533              		.loc 1 514 0
ARM GAS  /tmp/ccQZgaDW.s 			page 105


 1534 011e 9870     		strb	r0, [r3, #2]
 515:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
 1535              		.loc 1 515 0
 1536 0120 DA70     		strb	r2, [r3, #3]
 516:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;
 1537              		.loc 1 516 0
 1538 0122 784B     		ldr	r3, .L113+20
 1539 0124 0022     		movs	r2, #0
 1540 0126 1A70     		strb	r2, [r3]
 517:Src/main.c    **** 	  OSD_SPEAKER[2]=OFF;
 1541              		.loc 1 517 0
 1542 0128 5A70     		strb	r2, [r3, #1]
 518:Src/main.c    **** 	  OSD_SPEAKER[3]=ON;
 1543              		.loc 1 518 0
 1544 012a 9A70     		strb	r2, [r3, #2]
 519:Src/main.c    **** 
 1545              		.loc 1 519 0
 1546 012c D970     		strb	r1, [r3, #3]
 521:Src/main.c    ****         break ;
 1547              		.loc 1 521 0
 1548 012e 7D48     		ldr	r0, .L113+52
 1549 0130 FFF7FEFF 		bl	puts
 1550              	.LVL112:
 522:Src/main.c    ****     }
 1551              		.loc 1 522 0
 1552 0134 8EE7     		b	.L93
 1553              	.LVL113:
 1554              	.L100:
 527:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 1555              		.loc 1 527 0
 1556 0136 6E4B     		ldr	r3, .L113
 1557 0138 2022     		movs	r2, #32
 1558 013a 1A70     		strb	r2, [r3]
 528:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 1559              		.loc 1 528 0
 1560 013c 0122     		movs	r2, #1
 1561 013e 5A70     		strb	r2, [r3, #1]
 529:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap2 =3 ;
 1562              		.loc 1 529 0
 1563 0140 0222     		movs	r2, #2
 1564 0142 9A70     		strb	r2, [r3, #2]
 530:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap3 =4 ;
 1565              		.loc 1 530 0
 1566 0144 0322     		movs	r2, #3
 1567 0146 DA70     		strb	r2, [r3, #3]
 531:Src/main.c    ****         printf("VS4210_MODE2\r\n") ;
 1568              		.loc 1 531 0
 1569 0148 0422     		movs	r2, #4
 1570 014a 1A71     		strb	r2, [r3, #4]
 532:Src/main.c    ****         break ;
 1571              		.loc 1 532 0
 1572 014c 7648     		ldr	r0, .L113+56
 1573              	.LVL114:
 1574 014e FFF7FEFF 		bl	puts
 1575              	.LVL115:
 533:Src/main.c    ****     }
 1576              		.loc 1 533 0
ARM GAS  /tmp/ccQZgaDW.s 			page 106


 1577 0152 7FE7     		b	.L93
 1578              	.LVL116:
 1579              	.L101:
 912:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 1580              		.loc 1 912 0
 1581 0154 664B     		ldr	r3, .L113
 1582 0156 4022     		movs	r2, #64
 1583 0158 1A70     		strb	r2, [r3]
 913:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 1584              		.loc 1 913 0
 1585 015a 0122     		movs	r2, #1
 1586 015c 5A70     		strb	r2, [r3, #1]
 914:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 1587              		.loc 1 914 0
 1588 015e 0221     		movs	r1, #2
 1589 0160 9970     		strb	r1, [r3, #2]
 915:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 1590              		.loc 1 915 0
 1591 0162 644B     		ldr	r3, .L113+4
 1592 0164 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1593              	.LVL117:
 1594 0166 644B     		ldr	r3, .L113+8
 1595 0168 1870     		strb	r0, [r3]
 916:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
 1596              		.loc 1 916 0
 1597 016a 6849     		ldr	r1, .L113+28
 1598 016c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1599 016e 5970     		strb	r1, [r3, #1]
 917:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
 1600              		.loc 1 917 0
 1601 0170 624B     		ldr	r3, .L113+12
 1602 0172 1870     		strb	r0, [r3]
 918:Src/main.c    ****   	OSD_SPEAKER[0]=ON;
 1603              		.loc 1 918 0
 1604 0174 5970     		strb	r1, [r3, #1]
 919:Src/main.c    ****   	OSD_SPEAKER[1]=OFF;
 1605              		.loc 1 919 0
 1606 0176 634B     		ldr	r3, .L113+20
 1607 0178 1A70     		strb	r2, [r3]
 920:Src/main.c    ****         printf("VS4210_MODE12 ch1 ch2\r\n") ;
 1608              		.loc 1 920 0
 1609 017a 0022     		movs	r2, #0
 1610 017c 5A70     		strb	r2, [r3, #1]
 921:Src/main.c    ****         break ;
 1611              		.loc 1 921 0
 1612 017e 6B48     		ldr	r0, .L113+60
 1613 0180 FFF7FEFF 		bl	puts
 1614              	.LVL118:
 922:Src/main.c    ****     }
 1615              		.loc 1 922 0
 1616 0184 66E7     		b	.L93
 1617              	.LVL119:
 1618              	.L103:
 926:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 1619              		.loc 1 926 0
 1620 0186 5A4B     		ldr	r3, .L113
 1621 0188 4022     		movs	r2, #64
ARM GAS  /tmp/ccQZgaDW.s 			page 107


 1622 018a 1A70     		strb	r2, [r3]
 927:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =4 ;
 1623              		.loc 1 927 0
 1624 018c 0122     		movs	r2, #1
 1625 018e 5A70     		strb	r2, [r3, #1]
 928:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 1626              		.loc 1 928 0
 1627 0190 0421     		movs	r1, #4
 1628 0192 9970     		strb	r1, [r3, #2]
 929:Src/main.c    ****    	  OSD_MIRROR[1]=CAMR_M;
 1629              		.loc 1 929 0
 1630 0194 574B     		ldr	r3, .L113+4
 1631 0196 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1632              	.LVL120:
 1633 0198 574B     		ldr	r3, .L113+8
 1634 019a 1870     		strb	r0, [r3]
 930:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
 1635              		.loc 1 930 0
 1636 019c 5F49     		ldr	r1, .L113+44
 1637 019e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1638 01a0 5970     		strb	r1, [r3, #1]
 931:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
 1639              		.loc 1 931 0
 1640 01a2 564B     		ldr	r3, .L113+12
 1641 01a4 1870     		strb	r0, [r3]
 932:Src/main.c    ****   	OSD_SPEAKER[0]=OFF;
 1642              		.loc 1 932 0
 1643 01a6 5970     		strb	r1, [r3, #1]
 933:Src/main.c    ****   	OSD_SPEAKER[1]=ON;	  
 1644              		.loc 1 933 0
 1645 01a8 564B     		ldr	r3, .L113+20
 1646 01aa 0021     		movs	r1, #0
 1647 01ac 1970     		strb	r1, [r3]
 934:Src/main.c    ****         printf("VS4210_MODE12 ch1 ch4\r\n") ;	
 1648              		.loc 1 934 0
 1649 01ae 5A70     		strb	r2, [r3, #1]
 935:Src/main.c    **** 	break;
 1650              		.loc 1 935 0
 1651 01b0 5F48     		ldr	r0, .L113+64
 1652 01b2 FFF7FEFF 		bl	puts
 1653              	.LVL121:
 936:Src/main.c    ****     	}
 1654              		.loc 1 936 0
 1655 01b6 4DE7     		b	.L93
 1656              	.LVL122:
 1657              	.L104:
 940:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 1658              		.loc 1 940 0
 1659 01b8 4D4B     		ldr	r3, .L113
 1660 01ba 4022     		movs	r2, #64
 1661 01bc 1A70     		strb	r2, [r3]
 941:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 1662              		.loc 1 941 0
 1663 01be 0422     		movs	r2, #4
 1664 01c0 5A70     		strb	r2, [r3, #1]
 942:Src/main.c    **** 	  OSD_MIRROR[0]=CAMR_M;	
 1665              		.loc 1 942 0
ARM GAS  /tmp/ccQZgaDW.s 			page 108


 1666 01c2 0222     		movs	r2, #2
 1667 01c4 9A70     		strb	r2, [r3, #2]
 943:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 1668              		.loc 1 943 0
 1669 01c6 554B     		ldr	r3, .L113+44
 1670 01c8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1671 01ca 4B4B     		ldr	r3, .L113+8
 1672 01cc 1970     		strb	r1, [r3]
 944:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMR_M;			  
 1673              		.loc 1 944 0
 1674 01ce 4F4A     		ldr	r2, .L113+28
 1675 01d0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1676 01d2 5A70     		strb	r2, [r3, #1]
 945:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
 1677              		.loc 1 945 0
 1678 01d4 494B     		ldr	r3, .L113+12
 1679 01d6 1970     		strb	r1, [r3]
 946:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 1680              		.loc 1 946 0
 1681 01d8 5A70     		strb	r2, [r3, #1]
 947:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 1682              		.loc 1 947 0
 1683 01da 4A4B     		ldr	r3, .L113+20
 1684 01dc 0122     		movs	r2, #1
 1685 01de 1A70     		strb	r2, [r3]
 948:Src/main.c    ****         printf("VS4210_MODE12 ch4 ch2\r\n") ;	
 1686              		.loc 1 948 0
 1687 01e0 0022     		movs	r2, #0
 1688 01e2 5A70     		strb	r2, [r3, #1]
 949:Src/main.c    **** 	break;
 1689              		.loc 1 949 0
 1690 01e4 5348     		ldr	r0, .L113+68
 1691              	.LVL123:
 1692 01e6 FFF7FEFF 		bl	puts
 1693              	.LVL124:
 950:Src/main.c    ****     	}
 1694              		.loc 1 950 0
 1695 01ea 33E7     		b	.L93
 1696              	.LVL125:
 1697              	.L105:
 954:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =4 ;
 1698              		.loc 1 954 0
 1699 01ec 404B     		ldr	r3, .L113
 1700 01ee 4022     		movs	r2, #64
 1701 01f0 1A70     		strb	r2, [r3]
 955:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 1702              		.loc 1 955 0
 1703 01f2 0422     		movs	r2, #4
 1704 01f4 5A70     		strb	r2, [r3, #1]
 956:Src/main.c    **** 	  OSD_MIRROR[0]=CAMR_M;	
 1705              		.loc 1 956 0
 1706 01f6 0322     		movs	r2, #3
 1707 01f8 9A70     		strb	r2, [r3, #2]
 957:Src/main.c    ****    	  OSD_MIRROR[1]=CAMC_M;	
 1708              		.loc 1 957 0
 1709 01fa 484B     		ldr	r3, .L113+44
 1710 01fc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccQZgaDW.s 			page 109


 1711 01fe 3E4B     		ldr	r3, .L113+8
 1712 0200 1970     		strb	r1, [r3]
 958:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMR_M;			  
 1713              		.loc 1 958 0
 1714 0202 444A     		ldr	r2, .L113+36
 1715 0204 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1716 0206 5A70     		strb	r2, [r3, #1]
 959:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 	  
 1717              		.loc 1 959 0
 1718 0208 3C4B     		ldr	r3, .L113+12
 1719 020a 1970     		strb	r1, [r3]
 960:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 1720              		.loc 1 960 0
 1721 020c 5A70     		strb	r2, [r3, #1]
 961:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 1722              		.loc 1 961 0
 1723 020e 3D4B     		ldr	r3, .L113+20
 1724 0210 0122     		movs	r2, #1
 1725 0212 1A70     		strb	r2, [r3]
 962:Src/main.c    ****         printf("VS4210_MODE12 ch4 ch3\r\n") ;	
 1726              		.loc 1 962 0
 1727 0214 0022     		movs	r2, #0
 1728 0216 5A70     		strb	r2, [r3, #1]
 963:Src/main.c    **** 	break;
 1729              		.loc 1 963 0
 1730 0218 4748     		ldr	r0, .L113+72
 1731              	.LVL126:
 1732 021a FFF7FEFF 		bl	puts
 1733              	.LVL127:
 964:Src/main.c    ****     	}
 1734              		.loc 1 964 0
 1735 021e 19E7     		b	.L93
 1736              	.LVL128:
 1737              	.L106:
 969:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 1738              		.loc 1 969 0
 1739 0220 334B     		ldr	r3, .L113
 1740 0222 4022     		movs	r2, #64
 1741 0224 1A70     		strb	r2, [r3]
 970:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 1742              		.loc 1 970 0
 1743 0226 0222     		movs	r2, #2
 1744 0228 5A70     		strb	r2, [r3, #1]
 971:Src/main.c    **** 	  OSD_MIRROR[0]=CAMB_M;	
 1745              		.loc 1 971 0
 1746 022a 0122     		movs	r2, #1
 1747 022c 9A70     		strb	r2, [r3, #2]
 972:Src/main.c    ****    	  OSD_MIRROR[1]=CAMA_M;	
 1748              		.loc 1 972 0
 1749 022e 374B     		ldr	r3, .L113+28
 1750 0230 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1751 0232 314B     		ldr	r3, .L113+8
 1752 0234 1970     		strb	r1, [r3]
 973:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMB_M;			  
 1753              		.loc 1 973 0
 1754 0236 2F48     		ldr	r0, .L113+4
 1755              	.LVL129:
ARM GAS  /tmp/ccQZgaDW.s 			page 110


 1756 0238 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1757 023a 5870     		strb	r0, [r3, #1]
 974:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
 1758              		.loc 1 974 0
 1759 023c 2F4B     		ldr	r3, .L113+12
 1760 023e 1970     		strb	r1, [r3]
 975:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 1761              		.loc 1 975 0
 1762 0240 3649     		ldr	r1, .L113+44
 1763 0242 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1764 0244 5970     		strb	r1, [r3, #1]
 976:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 1765              		.loc 1 976 0
 1766 0246 2F4B     		ldr	r3, .L113+20
 1767 0248 1A70     		strb	r2, [r3]
 977:Src/main.c    ****         printf("VS4210_MODE12 ch2 ch1\r\n") ;	
 1768              		.loc 1 977 0
 1769 024a 0022     		movs	r2, #0
 1770 024c 5A70     		strb	r2, [r3, #1]
 978:Src/main.c    **** 	break;
 1771              		.loc 1 978 0
 1772 024e 3B48     		ldr	r0, .L113+76
 1773 0250 FFF7FEFF 		bl	puts
 1774              	.LVL130:
 979:Src/main.c    ****     	}
 1775              		.loc 1 979 0
 1776 0254 FEE6     		b	.L93
 1777              	.LVL131:
 1778              	.L107:
 983:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2 ;
 1779              		.loc 1 983 0
 1780 0256 264B     		ldr	r3, .L113
 1781 0258 4022     		movs	r2, #64
 1782 025a 1A70     		strb	r2, [r3]
 984:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 1783              		.loc 1 984 0
 1784 025c 0222     		movs	r2, #2
 1785 025e 5A70     		strb	r2, [r3, #1]
 985:Src/main.c    **** 	  OSD_MIRROR[0]=CAMB_M;	
 1786              		.loc 1 985 0
 1787 0260 0322     		movs	r2, #3
 1788 0262 9A70     		strb	r2, [r3, #2]
 986:Src/main.c    ****    	  OSD_MIRROR[1]=CAMC_M;	
 1789              		.loc 1 986 0
 1790 0264 294B     		ldr	r3, .L113+28
 1791 0266 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1792 0268 234B     		ldr	r3, .L113+8
 1793 026a 1970     		strb	r1, [r3]
 987:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMB_M;			  
 1794              		.loc 1 987 0
 1795 026c 294A     		ldr	r2, .L113+36
 1796 026e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1797 0270 5A70     		strb	r2, [r3, #1]
 988:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 	  
 1798              		.loc 1 988 0
 1799 0272 224B     		ldr	r3, .L113+12
 1800 0274 1970     		strb	r1, [r3]
ARM GAS  /tmp/ccQZgaDW.s 			page 111


 989:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 1801              		.loc 1 989 0
 1802 0276 5A70     		strb	r2, [r3, #1]
 990:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;		  
 1803              		.loc 1 990 0
 1804 0278 224B     		ldr	r3, .L113+20
 1805 027a 0122     		movs	r2, #1
 1806 027c 1A70     		strb	r2, [r3]
 991:Src/main.c    ****         printf("VS4210_MODE12 ch2 ch3\r\n") ;	
 1807              		.loc 1 991 0
 1808 027e 0022     		movs	r2, #0
 1809 0280 5A70     		strb	r2, [r3, #1]
 992:Src/main.c    **** 	break;
 1810              		.loc 1 992 0
 1811 0282 2F48     		ldr	r0, .L113+80
 1812              	.LVL132:
 1813 0284 FFF7FEFF 		bl	puts
 1814              	.LVL133:
 993:Src/main.c    ****     	}
 1815              		.loc 1 993 0
 1816 0288 E4E6     		b	.L93
 1817              	.LVL134:
 1818              	.L108:
 997:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =2;
 1819              		.loc 1 997 0
 1820 028a 194B     		ldr	r3, .L113
 1821 028c 4022     		movs	r2, #64
 1822 028e 1A70     		strb	r2, [r3]
 998:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =4 ;
 1823              		.loc 1 998 0
 1824 0290 0222     		movs	r2, #2
 1825 0292 5A70     		strb	r2, [r3, #1]
 999:Src/main.c    **** 	  OSD_MIRROR[0]=CAMB_M;	
 1826              		.loc 1 999 0
 1827 0294 0422     		movs	r2, #4
 1828 0296 9A70     		strb	r2, [r3, #2]
1000:Src/main.c    ****    	  OSD_MIRROR[1]=CAMR_M;	
 1829              		.loc 1 1000 0
 1830 0298 1C4B     		ldr	r3, .L113+28
 1831 029a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1832 029c 164B     		ldr	r3, .L113+8
 1833 029e 1970     		strb	r1, [r3]
1001:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMB_M;			  
 1834              		.loc 1 1001 0
 1835 02a0 1E4A     		ldr	r2, .L113+44
 1836 02a2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1837 02a4 5A70     		strb	r2, [r3, #1]
1002:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
 1838              		.loc 1 1002 0
 1839 02a6 154B     		ldr	r3, .L113+12
 1840 02a8 1970     		strb	r1, [r3]
1003:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
 1841              		.loc 1 1003 0
 1842 02aa 5A70     		strb	r2, [r3, #1]
1004:Src/main.c    **** 	  OSD_SPEAKER[1]=ON;		  
 1843              		.loc 1 1004 0
 1844 02ac 154B     		ldr	r3, .L113+20
ARM GAS  /tmp/ccQZgaDW.s 			page 112


 1845 02ae 0022     		movs	r2, #0
 1846 02b0 1A70     		strb	r2, [r3]
1005:Src/main.c    ****         printf("VS4210_MODE12 ch2 ch4\r\n") ;	
 1847              		.loc 1 1005 0
 1848 02b2 0122     		movs	r2, #1
 1849 02b4 5A70     		strb	r2, [r3, #1]
1006:Src/main.c    **** 	break;
 1850              		.loc 1 1006 0
 1851 02b6 2348     		ldr	r0, .L113+84
 1852              	.LVL135:
 1853 02b8 FFF7FEFF 		bl	puts
 1854              	.LVL136:
1007:Src/main.c    ****     	}
 1855              		.loc 1 1007 0
 1856 02bc CAE6     		b	.L93
 1857              	.LVL137:
 1858              	.L109:
1013:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =1 ;
 1859              		.loc 1 1013 0
 1860 02be 0C4B     		ldr	r3, .L113
 1861 02c0 4022     		movs	r2, #64
 1862 02c2 1A70     		strb	r2, [r3]
1014:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =3 ;
 1863              		.loc 1 1014 0
 1864 02c4 0122     		movs	r2, #1
 1865 02c6 5A70     		strb	r2, [r3, #1]
1015:Src/main.c    **** 	  OSD_MIRROR[0]=CAMA_M;	
 1866              		.loc 1 1015 0
 1867 02c8 0321     		movs	r1, #3
 1868 02ca 9970     		strb	r1, [r3, #2]
1016:Src/main.c    ****    	  OSD_MIRROR[1]=CAMC_M;	
 1869              		.loc 1 1016 0
 1870 02cc 094B     		ldr	r3, .L113+4
 1871 02ce 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1872              	.LVL138:
 1873 02d0 094B     		ldr	r3, .L113+8
 1874 02d2 1870     		strb	r0, [r3]
1017:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMA_M;			  
 1875              		.loc 1 1017 0
 1876 02d4 0F49     		ldr	r1, .L113+36
 1877 02d6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1878 02d8 5970     		strb	r1, [r3, #1]
1018:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMC_M; 	  
 1879              		.loc 1 1018 0
 1880 02da 084B     		ldr	r3, .L113+12
 1881 02dc 1870     		strb	r0, [r3]
1019:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 1882              		.loc 1 1019 0
 1883 02de 5970     		strb	r1, [r3, #1]
1020:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;	
 1884              		.loc 1 1020 0
 1885 02e0 084B     		ldr	r3, .L113+20
 1886 02e2 1A70     		strb	r2, [r3]
1021:Src/main.c    **** 	  
 1887              		.loc 1 1021 0
 1888 02e4 0022     		movs	r2, #0
 1889 02e6 5A70     		strb	r2, [r3, #1]
ARM GAS  /tmp/ccQZgaDW.s 			page 113


1023:Src/main.c    **** 	break;
 1890              		.loc 1 1023 0
 1891 02e8 1748     		ldr	r0, .L113+88
 1892 02ea FFF7FEFF 		bl	puts
 1893              	.LVL139:
1024:Src/main.c    ****     	}
 1894              		.loc 1 1024 0
 1895 02ee B1E6     		b	.L93
 1896              	.L114:
 1897              		.align	2
 1898              	.L113:
 1899 02f0 00000000 		.word	pVS4210_JointKind1
 1900 02f4 00000000 		.word	CAMA_M
 1901 02f8 00000000 		.word	.LANCHOR14
 1902 02fc 00000000 		.word	gabVXIS_Input_mirrorH
 1903 0300 00000000 		.word	.LC6
 1904 0304 00000000 		.word	.LANCHOR15
 1905 0308 00000000 		.word	.LANCHOR16
 1906 030c 00000000 		.word	CAMB_M
 1907 0310 14000000 		.word	.LC7
 1908 0314 00000000 		.word	CAMC_M
 1909 0318 28000000 		.word	.LC8
 1910 031c 00000000 		.word	CAMR_M
 1911 0320 3C000000 		.word	.LC9
 1912 0324 50000000 		.word	.LC10
 1913 0328 60000000 		.word	.LC11
 1914 032c 70000000 		.word	.LC12
 1915 0330 88000000 		.word	.LC13
 1916 0334 A0000000 		.word	.LC14
 1917 0338 B8000000 		.word	.LC15
 1918 033c D0000000 		.word	.LC16
 1919 0340 E8000000 		.word	.LC17
 1920 0344 00010000 		.word	.LC18
 1921 0348 18010000 		.word	.LC19
 1922              	.LVL140:
 1923              	.L111:
1028:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 1924              		.loc 1 1028 0
 1925 034c 264B     		ldr	r3, .L115
 1926 034e 4022     		movs	r2, #64
 1927 0350 1A70     		strb	r2, [r3]
1029:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =2 ;
 1928              		.loc 1 1029 0
 1929 0352 0322     		movs	r2, #3
 1930 0354 5A70     		strb	r2, [r3, #1]
1030:Src/main.c    **** 	  OSD_MIRROR[0]=CAMC_M;	
 1931              		.loc 1 1030 0
 1932 0356 0222     		movs	r2, #2
 1933 0358 9A70     		strb	r2, [r3, #2]
1031:Src/main.c    ****    	  OSD_MIRROR[1]=CAMB_M;	
 1934              		.loc 1 1031 0
 1935 035a 244B     		ldr	r3, .L115+4
 1936 035c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1937 035e 244B     		ldr	r3, .L115+8
 1938 0360 1970     		strb	r1, [r3]
1032:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMC_M;			  
 1939              		.loc 1 1032 0
ARM GAS  /tmp/ccQZgaDW.s 			page 114


 1940 0362 244A     		ldr	r2, .L115+12
 1941 0364 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1942 0366 5A70     		strb	r2, [r3, #1]
1033:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMB_M; 	  
 1943              		.loc 1 1033 0
 1944 0368 234B     		ldr	r3, .L115+16
 1945 036a 1970     		strb	r1, [r3]
1034:Src/main.c    **** 	  OSD_SPEAKER[0]=ON;
 1946              		.loc 1 1034 0
 1947 036c 5A70     		strb	r2, [r3, #1]
1035:Src/main.c    **** 	  OSD_SPEAKER[1]=OFF;	
 1948              		.loc 1 1035 0
 1949 036e 234B     		ldr	r3, .L115+20
 1950 0370 0122     		movs	r2, #1
 1951 0372 1A70     		strb	r2, [r3]
1036:Src/main.c    **** 	  
 1952              		.loc 1 1036 0
 1953 0374 0022     		movs	r2, #0
 1954 0376 5A70     		strb	r2, [r3, #1]
1038:Src/main.c    **** 	break;
 1955              		.loc 1 1038 0
 1956 0378 2148     		ldr	r0, .L115+24
 1957              	.LVL141:
 1958 037a FFF7FEFF 		bl	puts
 1959              	.LVL142:
1039:Src/main.c    ****     	}
 1960              		.loc 1 1039 0
 1961 037e 69E6     		b	.L93
 1962              	.LVL143:
 1963              	.L102:
1044:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 1964              		.loc 1 1044 0
 1965 0380 194B     		ldr	r3, .L115
 1966 0382 4022     		movs	r2, #64
 1967 0384 1A70     		strb	r2, [r3]
1045:Src/main.c    ****         pVS4210_JointKind1.WindowMap.WMap1 =4 ;
 1968              		.loc 1 1045 0
 1969 0386 0322     		movs	r2, #3
 1970 0388 5A70     		strb	r2, [r3, #1]
1046:Src/main.c    **** 	  OSD_MIRROR[0]=CAMC_M;	
 1971              		.loc 1 1046 0
 1972 038a 0422     		movs	r2, #4
 1973 038c 9A70     		strb	r2, [r3, #2]
1047:Src/main.c    ****    	  OSD_MIRROR[1]=CAMR_M;	
 1974              		.loc 1 1047 0
 1975 038e 174B     		ldr	r3, .L115+4
 1976 0390 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1977 0392 174B     		ldr	r3, .L115+8
 1978 0394 1970     		strb	r1, [r3]
1048:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMC_M;			  
 1979              		.loc 1 1048 0
 1980 0396 1B4A     		ldr	r2, .L115+28
 1981 0398 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1982 039a 5A70     		strb	r2, [r3, #1]
1049:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMR_M; 	  
 1983              		.loc 1 1049 0
 1984 039c 164B     		ldr	r3, .L115+16
ARM GAS  /tmp/ccQZgaDW.s 			page 115


 1985 039e 1970     		strb	r1, [r3]
1050:Src/main.c    **** 	  OSD_SPEAKER[0]=OFF;
 1986              		.loc 1 1050 0
 1987 03a0 5A70     		strb	r2, [r3, #1]
1051:Src/main.c    **** 	  OSD_SPEAKER[1]=ON;	
 1988              		.loc 1 1051 0
 1989 03a2 164B     		ldr	r3, .L115+20
 1990 03a4 0022     		movs	r2, #0
 1991 03a6 1A70     		strb	r2, [r3]
1052:Src/main.c    **** 	  
 1992              		.loc 1 1052 0
 1993 03a8 0122     		movs	r2, #1
 1994 03aa 5A70     		strb	r2, [r3, #1]
1054:Src/main.c    ****         break ;
 1995              		.loc 1 1054 0
 1996 03ac 1648     		ldr	r0, .L115+32
 1997              	.LVL144:
 1998 03ae FFF7FEFF 		bl	puts
 1999              	.LVL145:
1055:Src/main.c    ****     }
 2000              		.loc 1 1055 0
 2001 03b2 4FE6     		b	.L93
 2002              	.LVL146:
 2003              	.L110:
1061:Src/main.c    **** 	pVS4210_JointKind1.WindowMap.WMap0 =3 ;
 2004              		.loc 1 1061 0
 2005 03b4 0C4B     		ldr	r3, .L115
 2006 03b6 4022     		movs	r2, #64
 2007 03b8 1A70     		strb	r2, [r3]
1062:Src/main.c    **** 	pVS4210_JointKind1.WindowMap.WMap1 =1 ;
 2008              		.loc 1 1062 0
 2009 03ba 0322     		movs	r2, #3
 2010 03bc 5A70     		strb	r2, [r3, #1]
1063:Src/main.c    ****   OSD_MIRROR[0]=CAMC_M; 
 2011              		.loc 1 1063 0
 2012 03be 0122     		movs	r2, #1
 2013 03c0 9A70     		strb	r2, [r3, #2]
1064:Src/main.c    ****   OSD_MIRROR[1]=CAMA_M; 
 2014              		.loc 1 1064 0
 2015 03c2 0A4B     		ldr	r3, .L115+4
 2016 03c4 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2017              	.LVL147:
 2018 03c6 0A4B     		ldr	r3, .L115+8
 2019 03c8 1870     		strb	r0, [r3]
1065:Src/main.c    ****        gabVXIS_Input_mirrorH[0]=CAMC_M;			  
 2020              		.loc 1 1065 0
 2021 03ca 1049     		ldr	r1, .L115+36
 2022 03cc 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 2023 03ce 5970     		strb	r1, [r3, #1]
1066:Src/main.c    **** 	gabVXIS_Input_mirrorH[1]=CAMA_M;   
 2024              		.loc 1 1066 0
 2025 03d0 094B     		ldr	r3, .L115+16
 2026 03d2 1870     		strb	r0, [r3]
1067:Src/main.c    ****   OSD_SPEAKER[0]=ON;
 2027              		.loc 1 1067 0
 2028 03d4 5970     		strb	r1, [r3, #1]
1068:Src/main.c    ****   OSD_SPEAKER[1]=OFF;	
ARM GAS  /tmp/ccQZgaDW.s 			page 116


 2029              		.loc 1 1068 0
 2030 03d6 094B     		ldr	r3, .L115+20
 2031 03d8 1A70     		strb	r2, [r3]
1069:Src/main.c    ****   
 2032              		.loc 1 1069 0
 2033 03da 0022     		movs	r2, #0
 2034 03dc 5A70     		strb	r2, [r3, #1]
1071:Src/main.c    **** break;
 2035              		.loc 1 1071 0
 2036 03de 0C48     		ldr	r0, .L115+40
 2037 03e0 FFF7FEFF 		bl	puts
 2038              	.LVL148:
1072:Src/main.c    **** 	}
 2039              		.loc 1 1072 0
 2040 03e4 36E6     		b	.L93
 2041              	.L116:
 2042 03e6 00BF     		.align	2
 2043              	.L115:
 2044 03e8 00000000 		.word	pVS4210_JointKind1
 2045 03ec 00000000 		.word	CAMC_M
 2046 03f0 00000000 		.word	.LANCHOR14
 2047 03f4 00000000 		.word	CAMB_M
 2048 03f8 00000000 		.word	gabVXIS_Input_mirrorH
 2049 03fc 00000000 		.word	.LANCHOR15
 2050 0400 30010000 		.word	.LC20
 2051 0404 00000000 		.word	CAMR_M
 2052 0408 48010000 		.word	.LC21
 2053 040c 00000000 		.word	CAMA_M
 2054 0410 60010000 		.word	.LC22
 2055              		.cfi_endproc
 2056              	.LFE73:
 2058              		.section	.text.main_init,"ax",%progbits
 2059              		.align	1
 2060              		.global	main_init
 2061              		.syntax unified
 2062              		.thumb
 2063              		.thumb_func
 2064              		.fpu softvfp
 2066              	main_init:
 2067              	.LFB76:
1306:Src/main.c    **** 
 2068              		.loc 1 1306 0
 2069              		.cfi_startproc
 2070              		@ args = 0, pretend = 0, frame = 0
 2071              		@ frame_needed = 0, uses_anonymous_args = 0
 2072 0000 38B5     		push	{r3, r4, r5, lr}
 2073              	.LCFI24:
 2074              		.cfi_def_cfa_offset 16
 2075              		.cfi_offset 3, -16
 2076              		.cfi_offset 4, -12
 2077              		.cfi_offset 5, -8
 2078              		.cfi_offset 14, -4
1310:Src/main.c    **** 		Printf("\r\nPrev.FW:%04x\r\n", rev);
 2079              		.loc 1 1310 0
 2080 0002 FFF7FEFF 		bl	GetFWRevEE
 2081              	.LVL149:
 2082 0006 0446     		mov	r4, r0
ARM GAS  /tmp/ccQZgaDW.s 			page 117


 2083              	.LVL150:
1311:Src/main.c    **** 		
 2084              		.loc 1 1311 0
 2085 0008 0146     		mov	r1, r0
 2086 000a 1A48     		ldr	r0, .L125
 2087              	.LVL151:
 2088 000c FFF7FEFF 		bl	Printf
 2089              	.LVL152:
1313:Src/main.c    **** 		{					
 2090              		.loc 1 1313 0
 2091 0010 FFF7FEFF 		bl	GetFWRevEE
 2092              	.LVL153:
 2093 0014 41F20103 		movw	r3, #4097
 2094 0018 9842     		cmp	r0, r3
 2095 001a 0BD1     		bne	.L123
 2096              	.L118:
1320:Src/main.c    **** 		{					// exist EEPROM
 2097              		.loc 1 1320 0
 2098 001c FFF7FEFF 		bl	GetFWRevEE
 2099              	.LVL154:
 2100 0020 41F20103 		movw	r3, #4097
 2101 0024 9842     		cmp	r0, r3
 2102 0026 1BD1     		bne	.L119
1322:Src/main.c    **** 				{
 2103              		.loc 1 1322 0
 2104 0028 9C42     		cmp	r4, r3
 2105 002a 13D1     		bne	.L124
 2106              	.L120:
1343:Src/main.c    **** 	
 2107              		.loc 1 1343 0
 2108 002c 6420     		movs	r0, #100
 2109 002e FFF7FEFF 		bl	delay
 2110              	.LVL155:
 2111              	.L117:
1349:Src/main.c    **** 
 2112              		.loc 1 1349 0
 2113 0032 38BD     		pop	{r3, r4, r5, pc}
 2114              	.LVL156:
 2115              	.L123:
1315:Src/main.c    **** 			SaveFWRevEE(FWVER);
 2116              		.loc 1 1315 0
 2117 0034 104D     		ldr	r5, .L125+4
 2118 0036 1946     		mov	r1, r3
 2119 0038 2846     		mov	r0, r5
 2120 003a FFF7FEFF 		bl	Printf
 2121              	.LVL157:
1316:Src/main.c    **** 			Printf("\r\nCurr.FW:%04x", (WORD)GetFWRevEE());
 2122              		.loc 1 1316 0
 2123 003e 41F20100 		movw	r0, #4097
 2124 0042 FFF7FEFF 		bl	SaveFWRevEE
 2125              	.LVL158:
1317:Src/main.c    **** 		}
 2126              		.loc 1 1317 0
 2127 0046 FFF7FEFF 		bl	GetFWRevEE
 2128              	.LVL159:
 2129 004a 0146     		mov	r1, r0
 2130 004c 2846     		mov	r0, r5
ARM GAS  /tmp/ccQZgaDW.s 			page 118


 2131 004e FFF7FEFF 		bl	Printf
 2132              	.LVL160:
 2133 0052 E3E7     		b	.L118
 2134              	.L124:
1324:Src/main.c    **** 			
 2135              		.loc 1 1324 0
 2136 0054 FFF7FEFF 		bl	ClearBasicEE
 2137              	.LVL161:
1326:Src/main.c    **** 				}
 2138              		.loc 1 1326 0
 2139 0058 0848     		ldr	r0, .L125+8
 2140 005a FFF7FEFF 		bl	Printf
 2141              	.LVL162:
 2142 005e E5E7     		b	.L120
 2143              	.L119:
1336:Src/main.c    **** 			Printf("\r\nNo initialize");
 2144              		.loc 1 1336 0
 2145 0060 0748     		ldr	r0, .L125+12
 2146 0062 FFF7FEFF 		bl	Printf
 2147              	.LVL163:
1337:Src/main.c    **** 			DebugLevel = 0xff;
 2148              		.loc 1 1337 0
 2149 0066 0748     		ldr	r0, .L125+16
 2150 0068 FFF7FEFF 		bl	Printf
 2151              	.LVL164:
1338:Src/main.c    **** 			return;
 2152              		.loc 1 1338 0
 2153 006c 064B     		ldr	r3, .L125+20
 2154 006e FF22     		movs	r2, #255
 2155 0070 1A70     		strb	r2, [r3]
1339:Src/main.c    **** 		}
 2156              		.loc 1 1339 0
 2157 0072 DEE7     		b	.L117
 2158              	.L126:
 2159              		.align	2
 2160              	.L125:
 2161 0074 00000000 		.word	.LC23
 2162 0078 14000000 		.word	.LC24
 2163 007c 24000000 		.word	.LC25
 2164 0080 60000000 		.word	.LC26
 2165 0084 7C000000 		.word	.LC27
 2166 0088 00000000 		.word	DebugLevel
 2167              		.cfi_endproc
 2168              	.LFE76:
 2170              		.section	.text.LCDPowerON,"ax",%progbits
 2171              		.align	1
 2172              		.global	LCDPowerON
 2173              		.syntax unified
 2174              		.thumb
 2175              		.thumb_func
 2176              		.fpu softvfp
 2178              	LCDPowerON:
 2179              	.LFB78:
1448:Src/main.c    **** /*
 2180              		.loc 1 1448 0
 2181              		.cfi_startproc
 2182              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccQZgaDW.s 			page 119


 2183              		@ frame_needed = 0, uses_anonymous_args = 0
 2184              		@ link register save eliminated.
1470:Src/main.c    **** 
 2185              		.loc 1 1470 0
 2186 0000 7047     		bx	lr
 2187              		.cfi_endproc
 2188              	.LFE78:
 2190              		.section	.text.LCDPowerOFF,"ax",%progbits
 2191              		.align	1
 2192              		.global	LCDPowerOFF
 2193              		.syntax unified
 2194              		.thumb
 2195              		.thumb_func
 2196              		.fpu softvfp
 2198              	LCDPowerOFF:
 2199              	.LFB79:
1473:Src/main.c    **** /*
 2200              		.loc 1 1473 0
 2201              		.cfi_startproc
 2202              		@ args = 0, pretend = 0, frame = 0
 2203              		@ frame_needed = 0, uses_anonymous_args = 0
 2204              		@ link register save eliminated.
1508:Src/main.c    **** 
 2205              		.loc 1 1508 0
 2206 0000 7047     		bx	lr
 2207              		.cfi_endproc
 2208              	.LFE79:
 2210              		.section	.text.uComOnChipInitial,"ax",%progbits
 2211              		.align	1
 2212              		.global	uComOnChipInitial
 2213              		.syntax unified
 2214              		.thumb
 2215              		.thumb_func
 2216              		.fpu softvfp
 2218              	uComOnChipInitial:
 2219              	.LFB80:
1519:Src/main.c    **** 
 2220              		.loc 1 1519 0
 2221              		.cfi_startproc
 2222              		@ args = 0, pretend = 0, frame = 0
 2223              		@ frame_needed = 0, uses_anonymous_args = 0
 2224 0000 10B5     		push	{r4, lr}
 2225              	.LCFI25:
 2226              		.cfi_def_cfa_offset 8
 2227              		.cfi_offset 4, -8
 2228              		.cfi_offset 14, -4
1524:Src/main.c    **** PCON1V2_TP(ON);      
 2229              		.loc 1 1524 0
 2230 0002 084C     		ldr	r4, .L131
 2231 0004 0022     		movs	r2, #0
 2232 0006 4021     		movs	r1, #64
 2233 0008 2046     		mov	r0, r4
 2234 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 2235              	.LVL165:
1525:Src/main.c    **** 
 2236              		.loc 1 1525 0
 2237 000e 0022     		movs	r2, #0
ARM GAS  /tmp/ccQZgaDW.s 			page 120


 2238 0010 2021     		movs	r1, #32
 2239 0012 2046     		mov	r0, r4
 2240 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2241              	.LVL166:
1527:Src/main.c    **** 
 2242              		.loc 1 1527 0
 2243 0018 0122     		movs	r2, #1
 2244 001a 1021     		movs	r1, #16
 2245 001c 2046     		mov	r0, r4
 2246 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 2247              	.LVL167:
1586:Src/main.c    **** 
 2248              		.loc 1 1586 0
 2249 0022 10BD     		pop	{r4, pc}
 2250              	.L132:
 2251              		.align	2
 2252              	.L131:
 2253 0024 00080140 		.word	1073809408
 2254              		.cfi_endproc
 2255              	.LFE80:
 2257              		.section	.text.user_pwm_setvalue,"ax",%progbits
 2258              		.align	1
 2259              		.global	user_pwm_setvalue
 2260              		.syntax unified
 2261              		.thumb
 2262              		.thumb_func
 2263              		.fpu softvfp
 2265              	user_pwm_setvalue:
 2266              	.LFB81:
1589:Src/main.c    ****     TIM_OC_InitTypeDef sConfigOC;
 2267              		.loc 1 1589 0
 2268              		.cfi_startproc
 2269              		@ args = 0, pretend = 0, frame = 32
 2270              		@ frame_needed = 0, uses_anonymous_args = 0
 2271              	.LVL168:
 2272 0000 10B5     		push	{r4, lr}
 2273              	.LCFI26:
 2274              		.cfi_def_cfa_offset 8
 2275              		.cfi_offset 4, -8
 2276              		.cfi_offset 14, -4
 2277 0002 88B0     		sub	sp, sp, #32
 2278              	.LCFI27:
 2279              		.cfi_def_cfa_offset 40
1592:Src/main.c    ****     sConfigOC.Pulse = value;
 2280              		.loc 1 1592 0
 2281 0004 6023     		movs	r3, #96
 2282 0006 0193     		str	r3, [sp, #4]
1593:Src/main.c    ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2283              		.loc 1 1593 0
 2284 0008 0290     		str	r0, [sp, #8]
1594:Src/main.c    ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2285              		.loc 1 1594 0
 2286 000a 0023     		movs	r3, #0
 2287 000c 0393     		str	r3, [sp, #12]
1595:Src/main.c    ****     HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3);
 2288              		.loc 1 1595 0
 2289 000e 0593     		str	r3, [sp, #20]
ARM GAS  /tmp/ccQZgaDW.s 			page 121


1596:Src/main.c    ****     HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);  
 2290              		.loc 1 1596 0
 2291 0010 054C     		ldr	r4, .L135
 2292 0012 0822     		movs	r2, #8
 2293 0014 01A9     		add	r1, sp, #4
 2294 0016 2046     		mov	r0, r4
 2295              	.LVL169:
 2296 0018 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2297              	.LVL170:
1597:Src/main.c    **** }
 2298              		.loc 1 1597 0
 2299 001c 0821     		movs	r1, #8
 2300 001e 2046     		mov	r0, r4
 2301 0020 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 2302              	.LVL171:
1598:Src/main.c    **** 
 2303              		.loc 1 1598 0
 2304 0024 08B0     		add	sp, sp, #32
 2305              	.LCFI28:
 2306              		.cfi_def_cfa_offset 8
 2307              		@ sp needed
 2308 0026 10BD     		pop	{r4, pc}
 2309              	.L136:
 2310              		.align	2
 2311              	.L135:
 2312 0028 00000000 		.word	htim2
 2313              		.cfi_endproc
 2314              	.LFE81:
 2316              		.section	.text.AdjustAutoDayNight,"ax",%progbits
 2317              		.align	1
 2318              		.global	AdjustAutoDayNight
 2319              		.syntax unified
 2320              		.thumb
 2321              		.thumb_func
 2322              		.fpu softvfp
 2324              	AdjustAutoDayNight:
 2325              	.LFB77:
1353:Src/main.c    **** //	BYTE page;
 2326              		.loc 1 1353 0
 2327              		.cfi_startproc
 2328              		@ args = 0, pretend = 0, frame = 0
 2329              		@ frame_needed = 0, uses_anonymous_args = 0
 2330              	.LVL172:
 2331 0000 08B5     		push	{r3, lr}
 2332              	.LCFI29:
 2333              		.cfi_def_cfa_offset 8
 2334              		.cfi_offset 3, -8
 2335              		.cfi_offset 14, -4
 2336              	.LVL173:
1356:Src/main.c    **** 
 2337              		.loc 1 1356 0
 2338 0002 C043     		mvns	r0, r0
 2339              	.LVL174:
 2340 0004 C0B2     		uxtb	r0, r0
 2341              	.LVL175:
1359:Src/main.c    **** 		PWMLevelTemp=0+70;
 2342              		.loc 1 1359 0
ARM GAS  /tmp/ccQZgaDW.s 			page 122


 2343 0006 6328     		cmp	r0, #99
 2344 0008 12D9     		bls	.L143
1361:Src/main.c    **** 		PWMLevelTemp=20+70;//20;
 2345              		.loc 1 1361 0
 2346 000a A0F16403 		sub	r3, r0, #100
 2347 000e DBB2     		uxtb	r3, r3
 2348 0010 272B     		cmp	r3, #39
 2349 0012 24D9     		bls	.L144
1363:Src/main.c    **** 		PWMLevelTemp=40+70;//50;
 2350              		.loc 1 1363 0
 2351 0014 00F17403 		add	r3, r0, #116
 2352 0018 DBB2     		uxtb	r3, r3
 2353 001a 272B     		cmp	r3, #39
 2354 001c 21D9     		bls	.L145
1365:Src/main.c    **** 		PWMLevelTemp=60+70;//65;
 2355              		.loc 1 1365 0
 2356 001e 00F14C03 		add	r3, r0, #76
 2357 0022 DBB2     		uxtb	r3, r3
 2358 0024 272B     		cmp	r3, #39
 2359 0026 1ED9     		bls	.L146
1367:Src/main.c    **** 	{
 2360              		.loc 1 1367 0
 2361 0028 DB28     		cmp	r0, #219
 2362 002a 1ED8     		bhi	.L147
1355:Src/main.c    **** 	val=0xff-val;
 2363              		.loc 1 1355 0
 2364 002c 0022     		movs	r2, #0
 2365 002e 00E0     		b	.L138
 2366              	.L143:
1360:Src/main.c    **** 	else if(val>=100&&val<140)
 2367              		.loc 1 1360 0
 2368 0030 4622     		movs	r2, #70
 2369              	.L138:
 2370              	.LVL176:
1399:Src/main.c    **** 	{
 2371              		.loc 1 1399 0
 2372 0032 164B     		ldr	r3, .L149
 2373 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2374 0036 012B     		cmp	r3, #1
 2375 0038 1FD1     		bne	.L139
1405:Src/main.c    **** 				PWMLevel-=1;
 2376              		.loc 1 1405 0
 2377 003a 154B     		ldr	r3, .L149+4
 2378 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2379 003e 9342     		cmp	r3, r2
 2380 0040 15D9     		bls	.L140
1406:Src/main.c    **** 			else if(PWMLevel < PWMLevelTemp)
 2381              		.loc 1 1406 0
 2382 0042 013B     		subs	r3, r3, #1
 2383 0044 124A     		ldr	r2, .L149+4
 2384              	.LVL177:
 2385 0046 1370     		strb	r3, [r2]
 2386              	.L141:
1410:Src/main.c    **** 		}
 2387              		.loc 1 1410 0
 2388 0048 124B     		ldr	r3, .L149+8
 2389 004a 0022     		movs	r2, #0
ARM GAS  /tmp/ccQZgaDW.s 			page 123


 2390 004c 1A70     		strb	r2, [r3]
1418:Src/main.c    **** 
 2391              		.loc 1 1418 0
 2392 004e 104B     		ldr	r3, .L149+4
 2393 0050 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2394              	.LVL178:
 2395 0052 C0EB0010 		rsb	r0, r0, r0, lsl #4
 2396 0056 80B2     		uxth	r0, r0
 2397 0058 FFF7FEFF 		bl	user_pwm_setvalue
 2398              	.LVL179:
 2399              	.L137:
1446:Src/main.c    **** void LCDPowerON(void)
 2400              		.loc 1 1446 0
 2401 005c 08BD     		pop	{r3, pc}
 2402              	.LVL180:
 2403              	.L144:
1362:Src/main.c    **** 	else if(val>=140&&val<180)
 2404              		.loc 1 1362 0
 2405 005e 5A22     		movs	r2, #90
 2406 0060 E7E7     		b	.L138
 2407              	.L145:
1364:Src/main.c    **** 	else if(val>=180&&val<220)
 2408              		.loc 1 1364 0
 2409 0062 6E22     		movs	r2, #110
 2410 0064 E5E7     		b	.L138
 2411              	.L146:
1366:Src/main.c    **** 	else if(val>=220&&val<=255)//andy 20110414
 2412              		.loc 1 1366 0
 2413 0066 8222     		movs	r2, #130
 2414 0068 E3E7     		b	.L138
 2415              	.L147:
1370:Src/main.c    **** 		//#else
 2416              		.loc 1 1370 0
 2417 006a 9122     		movs	r2, #145
 2418 006c E1E7     		b	.L138
 2419              	.LVL181:
 2420              	.L140:
1407:Src/main.c    **** 				PWMLevel+=1;
 2421              		.loc 1 1407 0
 2422 006e 9342     		cmp	r3, r2
 2423 0070 EAD2     		bcs	.L141
1408:Src/main.c    **** 
 2424              		.loc 1 1408 0
 2425 0072 0133     		adds	r3, r3, #1
 2426 0074 064A     		ldr	r2, .L149+4
 2427              	.LVL182:
 2428 0076 1370     		strb	r3, [r2]
 2429 0078 E6E7     		b	.L141
 2430              	.LVL183:
 2431              	.L139:
1424:Src/main.c    **** 	//		Printf("(PWMLevel2=%02x)",(WORD)PWMLevel);
 2432              		.loc 1 1424 0
 2433 007a 054B     		ldr	r3, .L149+4
 2434 007c FF22     		movs	r2, #255
 2435              	.LVL184:
 2436 007e 1A70     		strb	r2, [r3]
1426:Src/main.c    **** 	}
ARM GAS  /tmp/ccQZgaDW.s 			page 124


 2437              		.loc 1 1426 0
 2438 0080 4FF47A60 		mov	r0, #4000
 2439              	.LVL185:
 2440 0084 FFF7FEFF 		bl	user_pwm_setvalue
 2441              	.LVL186:
1446:Src/main.c    **** void LCDPowerON(void)
 2442              		.loc 1 1446 0
 2443 0088 E8E7     		b	.L137
 2444              	.L150:
 2445 008a 00BF     		.align	2
 2446              	.L149:
 2447 008c 00000000 		.word	.LANCHOR17
 2448 0090 00000000 		.word	.LANCHOR18
 2449 0094 00000000 		.word	.LANCHOR19
 2450              		.cfi_endproc
 2451              	.LFE77:
 2453              		.section	.text.LoadEEPROM,"ax",%progbits
 2454              		.align	1
 2455              		.global	LoadEEPROM
 2456              		.syntax unified
 2457              		.thumb
 2458              		.thumb_func
 2459              		.fpu softvfp
 2461              	LoadEEPROM:
 2462              	.LFB82:
1601:Src/main.c    **** #if 0
 2463              		.loc 1 1601 0
 2464              		.cfi_startproc
 2465              		@ args = 0, pretend = 0, frame = 0
 2466              		@ frame_needed = 0, uses_anonymous_args = 0
 2467              		@ link register save eliminated.
1623:Src/main.c    **** 
 2468              		.loc 1 1623 0
 2469 0000 7047     		bx	lr
 2470              		.cfi_endproc
 2471              	.LFE82:
 2473              		.section	.text.WaitPowerOn,"ax",%progbits
 2474              		.align	1
 2475              		.global	WaitPowerOn
 2476              		.syntax unified
 2477              		.thumb
 2478              		.thumb_func
 2479              		.fpu softvfp
 2481              	WaitPowerOn:
 2482              	.LFB83:
1626:Src/main.c    **** BYTE val;
 2483              		.loc 1 1626 0
 2484              		.cfi_startproc
 2485              		@ args = 0, pretend = 0, frame = 0
 2486              		@ frame_needed = 0, uses_anonymous_args = 0
 2487 0000 10B5     		push	{r4, lr}
 2488              	.LCFI30:
 2489              		.cfi_def_cfa_offset 8
 2490              		.cfi_offset 4, -8
 2491              		.cfi_offset 14, -4
1628:Src/main.c    **** 
 2492              		.loc 1 1628 0
ARM GAS  /tmp/ccQZgaDW.s 			page 125


 2493 0002 2C20     		movs	r0, #44
 2494 0004 FFF7FEFF 		bl	PowerLED
 2495              	.LVL187:
1632:Src/main.c    **** 
 2496              		.loc 1 1632 0
 2497 0008 1120     		movs	r0, #17
 2498 000a FFF7FEFF 		bl	MCUTimerCancelTimerEvent
 2499              	.LVL188:
1634:Src/main.c    **** 		
 2500              		.loc 1 1634 0
 2501 000e 1D48     		ldr	r0, .L162
 2502 0010 FFF7FEFF 		bl	Printf
 2503              	.LVL189:
 2504 0014 20E0     		b	.L156
 2505              	.L161:
1643:Src/main.c    **** 				break;		//poweron
 2506              		.loc 1 1643 0
 2507 0016 AB20     		movs	r0, #171
 2508 0018 FFF7FEFF 		bl	WriteEEP
 2509              	.LVL190:
1702:Src/main.c    **** //	SHOWOSDINFO();	
 2510              		.loc 1 1702 0
 2511 001c 2A20     		movs	r0, #42
 2512 001e FFF7FEFF 		bl	PowerLED
 2513              	.LVL191:
1708:Src/main.c    **** 	MCUTimerActiveTimerEvent(SEC(2),_USER_TIMER_EVENT_DISPLAY_DISABLE);
 2514              		.loc 1 1708 0
 2515 0022 0F20     		movs	r0, #15
 2516 0024 FFF7FEFF 		bl	MCUTimerCancelTimerEvent
 2517              	.LVL192:
1709:Src/main.c    **** 
 2518              		.loc 1 1709 0
 2519 0028 0F21     		movs	r1, #15
 2520 002a 4FF4FA60 		mov	r0, #2000
 2521 002e FFF7FEFF 		bl	MCUTimerActiveTimerEvent
 2522              	.LVL193:
1713:Src/main.c    **** //LCDPowerON();
 2523              		.loc 1 1713 0
 2524 0032 1121     		movs	r1, #17
 2525 0034 4FF47A70 		mov	r0, #1000
 2526 0038 FFF7FEFF 		bl	MCUTimerActiveTimerEvent
 2527              	.LVL194:
1715:Src/main.c    **** 
 2528              		.loc 1 1715 0
 2529 003c 1248     		ldr	r0, .L162+4
 2530 003e FFF7FEFF 		bl	Printf
 2531              	.LVL195:
1718:Src/main.c    **** 
 2532              		.loc 1 1718 0
 2533 0042 10BD     		pop	{r4, pc}
 2534              	.LVL196:
 2535              	.L154:
1670:Src/main.c    **** 
 2536              		.loc 1 1670 0
 2537 0044 FFF7FEFF 		bl	TriggerHandler
 2538              	.LVL197:
 2539              	.L155:
ARM GAS  /tmp/ccQZgaDW.s 			page 126


1692:Src/main.c    **** 		   	  EQ_Detect();	 
 2540              		.loc 1 1692 0
 2541 0048 FFF7FEFF 		bl	SysTimerHandler
 2542              	.LVL198:
1693:Src/main.c    **** 			  
 2543              		.loc 1 1693 0
 2544 004c FFF7FEFF 		bl	EQ_Detect
 2545              	.LVL199:
1696:Src/main.c    **** 
 2546              		.loc 1 1696 0
 2547 0050 0120     		movs	r0, #1
 2548 0052 FFF7FEFF 		bl	GT9147_Scan
 2549              	.LVL200:
 2550 0056 88B9     		cbnz	r0, .L160
 2551              	.L156:
1639:Src/main.c    **** 			if(PowerFlag==ON)
 2552              		.loc 1 1639 0
 2553 0058 FFF7FEFF 		bl	CheckKeyIn
 2554              	.LVL201:
1640:Src/main.c    **** 			{
 2555              		.loc 1 1640 0
 2556 005c 0B4B     		ldr	r3, .L162+8
 2557 005e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2558 0060 0129     		cmp	r1, #1
 2559 0062 D8D0     		beq	.L161
1647:Src/main.c    **** 		 
 2560              		.loc 1 1647 0
 2561 0064 FFF7FEFF 		bl	CheckTrigger
 2562              	.LVL202:
1651:Src/main.c    **** 		{	
 2563              		.loc 1 1651 0
 2564 0068 0446     		mov	r4, r0
 2565 006a 0028     		cmp	r0, #0
 2566 006c EAD0     		beq	.L154
1653:Src/main.c    **** 			TriggerHandler(val);
 2567              		.loc 1 1653 0
 2568 006e 2A20     		movs	r0, #42
 2569              	.LVL203:
 2570 0070 FFF7FEFF 		bl	PowerLED
 2571              	.LVL204:
1654:Src/main.c    **** 			//	AudioMute(OFF);
 2572              		.loc 1 1654 0
 2573 0074 2046     		mov	r0, r4
 2574 0076 FFF7FEFF 		bl	TriggerHandler
 2575              	.LVL205:
 2576 007a E5E7     		b	.L155
 2577              	.L160:
1698:Src/main.c    **** 					
 2578              		.loc 1 1698 0
 2579 007c 034B     		ldr	r3, .L162+8
 2580 007e 0122     		movs	r2, #1
 2581 0080 1A70     		strb	r2, [r3]
 2582 0082 E9E7     		b	.L156
 2583              	.L163:
 2584              		.align	2
 2585              	.L162:
 2586 0084 00000000 		.word	.LC28
ARM GAS  /tmp/ccQZgaDW.s 			page 127


 2587 0088 10000000 		.word	.LC29
 2588 008c 00000000 		.word	.LANCHOR20
 2589              		.cfi_endproc
 2590              	.LFE83:
 2592              		.section	.text.VS4210_FULL88init2,"ax",%progbits
 2593              		.align	1
 2594              		.global	VS4210_FULL88init2
 2595              		.syntax unified
 2596              		.thumb
 2597              		.thumb_func
 2598              		.fpu softvfp
 2600              	VS4210_FULL88init2:
 2601              	.LFB86:
2224:Src/main.c    **** 	 tByte i ;
 2602              		.loc 1 2224 0
 2603              		.cfi_startproc
 2604              		@ args = 0, pretend = 0, frame = 0
 2605              		@ frame_needed = 0, uses_anonymous_args = 0
 2606              	.LVL206:
 2607 0000 38B5     		push	{r3, r4, r5, lr}
 2608              	.LCFI31:
 2609              		.cfi_def_cfa_offset 16
 2610              		.cfi_offset 3, -16
 2611              		.cfi_offset 4, -12
 2612              		.cfi_offset 5, -8
 2613              		.cfi_offset 14, -4
 2614 0002 0546     		mov	r5, r0
 2615              	.LVL207:
2231:Src/main.c    **** 	 {
 2616              		.loc 1 2231 0
 2617 0004 0024     		movs	r4, #0
 2618 0006 06E0     		b	.L165
 2619              	.LVL208:
 2620              	.L166:
2235:Src/main.c    **** 	 }
 2621              		.loc 1 2235 0 discriminator 3
 2622 0008 295D     		ldrb	r1, [r5, r4]	@ zero_extendqisi2
 2623              	.LVL209:
 2624 000a 044B     		ldr	r3, .L168
 2625 000c 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 2626              	.LVL210:
 2627 000e FFF7FEFF 		bl	VXISI2CWrite
 2628              	.LVL211:
2231:Src/main.c    **** 	 {
 2629              		.loc 1 2231 0 discriminator 3
 2630 0012 0134     		adds	r4, r4, #1
 2631              	.LVL212:
 2632 0014 E4B2     		uxtb	r4, r4
 2633              	.LVL213:
 2634              	.L165:
2231:Src/main.c    **** 	 {
 2635              		.loc 1 2231 0 is_stmt 0 discriminator 1
 2636 0016 572C     		cmp	r4, #87
 2637 0018 F6D9     		bls	.L166
2237:Src/main.c    **** 
 2638              		.loc 1 2237 0 is_stmt 1
 2639 001a 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccQZgaDW.s 			page 128


 2640              	.LVL214:
 2641              	.L169:
 2642              		.align	2
 2643              	.L168:
 2644 001c 00000000 		.word	VS4210_Addr_88param
 2645              		.cfi_endproc
 2646              	.LFE86:
 2648              		.section	.text.TP_bt1120_1080P_1080P_mode0_w0,"ax",%progbits
 2649              		.align	1
 2650              		.global	TP_bt1120_1080P_1080P_mode0_w0
 2651              		.syntax unified
 2652              		.thumb
 2653              		.thumb_func
 2654              		.fpu softvfp
 2656              	TP_bt1120_1080P_1080P_mode0_w0:
 2657              	.LFB87:
2240:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table 1080P... ");
 2658              		.loc 1 2240 0
 2659              		.cfi_startproc
 2660              		@ args = 0, pretend = 0, frame = 0
 2661              		@ frame_needed = 0, uses_anonymous_args = 0
 2662 0000 08B5     		push	{r3, lr}
 2663              	.LCFI32:
 2664              		.cfi_def_cfa_offset 8
 2665              		.cfi_offset 3, -8
 2666              		.cfi_offset 14, -4
2241:Src/main.c    **** #if 1
 2667              		.loc 1 2241 0
 2668 0002 0348     		ldr	r0, .L172
 2669 0004 FFF7FEFF 		bl	Printf
 2670              	.LVL215:
2244:Src/main.c    **** #else
 2671              		.loc 1 2244 0
 2672 0008 0248     		ldr	r0, .L172+4
 2673 000a FFF7FEFF 		bl	VS4210_FULL88init2
 2674              	.LVL216:
2748:Src/main.c    **** 
 2675              		.loc 1 2748 0
 2676 000e 08BD     		pop	{r3, pc}
 2677              	.L173:
 2678              		.align	2
 2679              	.L172:
 2680 0010 00000000 		.word	.LC30
 2681 0014 00000000 		.word	VS4210_TP_bt1120_1080P_1080P_mode0_w0_88param
 2682              		.cfi_endproc
 2683              	.LFE87:
 2685              		.section	.text.TP_bt1120_720P_1080P_mode0_w0,"ax",%progbits
 2686              		.align	1
 2687              		.global	TP_bt1120_720P_1080P_mode0_w0
 2688              		.syntax unified
 2689              		.thumb
 2690              		.thumb_func
 2691              		.fpu softvfp
 2693              	TP_bt1120_720P_1080P_mode0_w0:
 2694              	.LFB88:
2751:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table 720P... ");
 2695              		.loc 1 2751 0
ARM GAS  /tmp/ccQZgaDW.s 			page 129


 2696              		.cfi_startproc
 2697              		@ args = 0, pretend = 0, frame = 0
 2698              		@ frame_needed = 0, uses_anonymous_args = 0
 2699 0000 08B5     		push	{r3, lr}
 2700              	.LCFI33:
 2701              		.cfi_def_cfa_offset 8
 2702              		.cfi_offset 3, -8
 2703              		.cfi_offset 14, -4
2752:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_720P_1080P_mode0_w0_88param);
 2704              		.loc 1 2752 0
 2705 0002 0548     		ldr	r0, .L176
 2706 0004 FFF7FEFF 		bl	Printf
 2707              	.LVL217:
2753:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);
 2708              		.loc 1 2753 0
 2709 0008 0448     		ldr	r0, .L176+4
 2710 000a FFF7FEFF 		bl	VS4210_FULL88init2
 2711              	.LVL218:
2754:Src/main.c    **** 
 2712              		.loc 1 2754 0
 2713 000e 1021     		movs	r1, #16
 2714 0010 D720     		movs	r0, #215
 2715 0012 FFF7FEFF 		bl	VXISI2CWrite
 2716              	.LVL219:
2756:Src/main.c    **** 
 2717              		.loc 1 2756 0
 2718 0016 08BD     		pop	{r3, pc}
 2719              	.L177:
 2720              		.align	2
 2721              	.L176:
 2722 0018 00000000 		.word	.LC31
 2723 001c 00000000 		.word	VS4210_TP_bt1120_720P_1080P_mode0_w0_88param
 2724              		.cfi_endproc
 2725              	.LFE88:
 2727              		.section	.text.TP_bt1120_NTSC_1080P_mode0_w0,"ax",%progbits
 2728              		.align	1
 2729              		.global	TP_bt1120_NTSC_1080P_mode0_w0
 2730              		.syntax unified
 2731              		.thumb
 2732              		.thumb_func
 2733              		.fpu softvfp
 2735              	TP_bt1120_NTSC_1080P_mode0_w0:
 2736              	.LFB89:
2759:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table NTSC... ");
 2737              		.loc 1 2759 0
 2738              		.cfi_startproc
 2739              		@ args = 0, pretend = 0, frame = 0
 2740              		@ frame_needed = 0, uses_anonymous_args = 0
 2741 0000 08B5     		push	{r3, lr}
 2742              	.LCFI34:
 2743              		.cfi_def_cfa_offset 8
 2744              		.cfi_offset 3, -8
 2745              		.cfi_offset 14, -4
2760:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_NTSC_1080P_mode0_w0_88param);
 2746              		.loc 1 2760 0
 2747 0002 0348     		ldr	r0, .L180
 2748 0004 FFF7FEFF 		bl	Printf
ARM GAS  /tmp/ccQZgaDW.s 			page 130


 2749              	.LVL220:
2761:Src/main.c    **** }
 2750              		.loc 1 2761 0
 2751 0008 0248     		ldr	r0, .L180+4
 2752 000a FFF7FEFF 		bl	VS4210_FULL88init2
 2753              	.LVL221:
2762:Src/main.c    **** 
 2754              		.loc 1 2762 0
 2755 000e 08BD     		pop	{r3, pc}
 2756              	.L181:
 2757              		.align	2
 2758              	.L180:
 2759 0010 00000000 		.word	.LC32
 2760 0014 00000000 		.word	VS4210_TP_bt1120_NTSC_1080P_mode0_w0_88param
 2761              		.cfi_endproc
 2762              	.LFE89:
 2764              		.section	.text.TP_bt1120_PAL_1080P_mode0_w0,"ax",%progbits
 2765              		.align	1
 2766              		.global	TP_bt1120_PAL_1080P_mode0_w0
 2767              		.syntax unified
 2768              		.thumb
 2769              		.thumb_func
 2770              		.fpu softvfp
 2772              	TP_bt1120_PAL_1080P_mode0_w0:
 2773              	.LFB90:
2765:Src/main.c    **** 	Printf("\r\nLoading VS4210 AHD table PAL... ");
 2774              		.loc 1 2765 0
 2775              		.cfi_startproc
 2776              		@ args = 0, pretend = 0, frame = 0
 2777              		@ frame_needed = 0, uses_anonymous_args = 0
 2778 0000 08B5     		push	{r3, lr}
 2779              	.LCFI35:
 2780              		.cfi_def_cfa_offset 8
 2781              		.cfi_offset 3, -8
 2782              		.cfi_offset 14, -4
2766:Src/main.c    **** 	VS4210_FULL88init2(VS4210_TP_bt1120_PAL_1080P_mode0_w0_88param);
 2783              		.loc 1 2766 0
 2784 0002 0348     		ldr	r0, .L184
 2785 0004 FFF7FEFF 		bl	Printf
 2786              	.LVL222:
2767:Src/main.c    **** 	#if 0
 2787              		.loc 1 2767 0
 2788 0008 0248     		ldr	r0, .L184+4
 2789 000a FFF7FEFF 		bl	VS4210_FULL88init2
 2790              	.LVL223:
3010:Src/main.c    **** void SET_VS4210_720_480_out(void)
 2791              		.loc 1 3010 0
 2792 000e 08BD     		pop	{r3, pc}
 2793              	.L185:
 2794              		.align	2
 2795              	.L184:
 2796 0010 00000000 		.word	.LC33
 2797 0014 00000000 		.word	VS4210_TP_bt1120_PAL_1080P_mode0_w0_88param
 2798              		.cfi_endproc
 2799              	.LFE90:
 2801              		.section	.text.SET_VS4210_720_480_out,"ax",%progbits
 2802              		.align	1
ARM GAS  /tmp/ccQZgaDW.s 			page 131


 2803              		.global	SET_VS4210_720_480_out
 2804              		.syntax unified
 2805              		.thumb
 2806              		.thumb_func
 2807              		.fpu softvfp
 2809              	SET_VS4210_720_480_out:
 2810              	.LFB91:
3012:Src/main.c    **** 	Printf("\r\nSET_VS4210_720_480_out ");
 2811              		.loc 1 3012 0
 2812              		.cfi_startproc
 2813              		@ args = 0, pretend = 0, frame = 0
 2814              		@ frame_needed = 0, uses_anonymous_args = 0
 2815 0000 08B5     		push	{r3, lr}
 2816              	.LCFI36:
 2817              		.cfi_def_cfa_offset 8
 2818              		.cfi_offset 3, -8
 2819              		.cfi_offset 14, -4
3013:Src/main.c    **** 
 2820              		.loc 1 3013 0
 2821 0002 FE48     		ldr	r0, .L188
 2822 0004 FFF7FEFF 		bl	Printf
 2823              	.LVL224:
3015:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);
 2824              		.loc 1 3015 0
 2825 0008 0021     		movs	r1, #0
 2826 000a 0120     		movs	r0, #1
 2827 000c FFF7FEFF 		bl	VXISI2CWrite
 2828              	.LVL225:
3016:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);
 2829              		.loc 1 3016 0
 2830 0010 0021     		movs	r1, #0
 2831 0012 0220     		movs	r0, #2
 2832 0014 FFF7FEFF 		bl	VXISI2CWrite
 2833              	.LVL226:
3017:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);
 2834              		.loc 1 3017 0
 2835 0018 7521     		movs	r1, #117
 2836 001a 0320     		movs	r0, #3
 2837 001c FFF7FEFF 		bl	VXISI2CWrite
 2838              	.LVL227:
3018:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);
 2839              		.loc 1 3018 0
 2840 0020 1821     		movs	r1, #24
 2841 0022 0420     		movs	r0, #4
 2842 0024 FFF7FEFF 		bl	VXISI2CWrite
 2843              	.LVL228:
3019:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);
 2844              		.loc 1 3019 0
 2845 0028 8021     		movs	r1, #128
 2846 002a 0520     		movs	r0, #5
 2847 002c FFF7FEFF 		bl	VXISI2CWrite
 2848              	.LVL229:
3020:Src/main.c    **** 	VXISI2CWrite(0x07,0x08);
 2849              		.loc 1 3020 0
 2850 0030 2021     		movs	r1, #32
 2851 0032 0620     		movs	r0, #6
 2852 0034 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccQZgaDW.s 			page 132


 2853              	.LVL230:
3021:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);
 2854              		.loc 1 3021 0
 2855 0038 0821     		movs	r1, #8
 2856 003a 0720     		movs	r0, #7
 2857 003c FFF7FEFF 		bl	VXISI2CWrite
 2858              	.LVL231:
3022:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);
 2859              		.loc 1 3022 0
 2860 0040 4021     		movs	r1, #64
 2861 0042 0820     		movs	r0, #8
 2862 0044 FFF7FEFF 		bl	VXISI2CWrite
 2863              	.LVL232:
3023:Src/main.c    **** 	VXISI2CWrite(0x0A,0x41);
 2864              		.loc 1 3023 0
 2865 0048 0A21     		movs	r1, #10
 2866 004a 0920     		movs	r0, #9
 2867 004c FFF7FEFF 		bl	VXISI2CWrite
 2868              	.LVL233:
3024:Src/main.c    **** 	VXISI2CWrite(0x0B,0x07);
 2869              		.loc 1 3024 0
 2870 0050 4121     		movs	r1, #65
 2871 0052 0A20     		movs	r0, #10
 2872 0054 FFF7FEFF 		bl	VXISI2CWrite
 2873              	.LVL234:
3025:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);
 2874              		.loc 1 3025 0
 2875 0058 0721     		movs	r1, #7
 2876 005a 0B20     		movs	r0, #11
 2877 005c FFF7FEFF 		bl	VXISI2CWrite
 2878              	.LVL235:
3026:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);
 2879              		.loc 1 3026 0
 2880 0060 0021     		movs	r1, #0
 2881 0062 0C20     		movs	r0, #12
 2882 0064 FFF7FEFF 		bl	VXISI2CWrite
 2883              	.LVL236:
3027:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);
 2884              		.loc 1 3027 0
 2885 0068 2021     		movs	r1, #32
 2886 006a 0D20     		movs	r0, #13
 2887 006c FFF7FEFF 		bl	VXISI2CWrite
 2888              	.LVL237:
3028:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);
 2889              		.loc 1 3028 0
 2890 0070 1021     		movs	r1, #16
 2891 0072 0E20     		movs	r0, #14
 2892 0074 FFF7FEFF 		bl	VXISI2CWrite
 2893              	.LVL238:
3029:Src/main.c    **** 	VXISI2CWrite(0x10,0x80);
 2894              		.loc 1 3029 0
 2895 0078 0021     		movs	r1, #0
 2896 007a 0F20     		movs	r0, #15
 2897 007c FFF7FEFF 		bl	VXISI2CWrite
 2898              	.LVL239:
3030:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);
 2899              		.loc 1 3030 0
ARM GAS  /tmp/ccQZgaDW.s 			page 133


 2900 0080 8021     		movs	r1, #128
 2901 0082 1020     		movs	r0, #16
 2902 0084 FFF7FEFF 		bl	VXISI2CWrite
 2903              	.LVL240:
3031:Src/main.c    **** 	VXISI2CWrite(0x12,0x21);
 2904              		.loc 1 3031 0
 2905 0088 8221     		movs	r1, #130
 2906 008a 1120     		movs	r0, #17
 2907 008c FFF7FEFF 		bl	VXISI2CWrite
 2908              	.LVL241:
3032:Src/main.c    **** 	VXISI2CWrite(0x13,0xD0);
 2909              		.loc 1 3032 0
 2910 0090 2121     		movs	r1, #33
 2911 0092 1220     		movs	r0, #18
 2912 0094 FFF7FEFF 		bl	VXISI2CWrite
 2913              	.LVL242:
3033:Src/main.c    **** 	VXISI2CWrite(0x14,0xE0);
 2914              		.loc 1 3033 0
 2915 0098 D021     		movs	r1, #208
 2916 009a 1320     		movs	r0, #19
 2917 009c FFF7FEFF 		bl	VXISI2CWrite
 2918              	.LVL243:
3034:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);
 2919              		.loc 1 3034 0
 2920 00a0 E021     		movs	r1, #224
 2921 00a2 1420     		movs	r0, #20
 2922 00a4 FFF7FEFF 		bl	VXISI2CWrite
 2923              	.LVL244:
3035:Src/main.c    **** 	VXISI2CWrite(0x16,0xFE);
 2924              		.loc 1 3035 0
 2925 00a8 7821     		movs	r1, #120
 2926 00aa 1520     		movs	r0, #21
 2927 00ac FFF7FEFF 		bl	VXISI2CWrite
 2928              	.LVL245:
3036:Src/main.c    **** 	VXISI2CWrite(0x17,0x00);
 2929              		.loc 1 3036 0
 2930 00b0 FE21     		movs	r1, #254
 2931 00b2 1620     		movs	r0, #22
 2932 00b4 FFF7FEFF 		bl	VXISI2CWrite
 2933              	.LVL246:
3037:Src/main.c    **** 	VXISI2CWrite(0x18,0xC8);
 2934              		.loc 1 3037 0
 2935 00b8 0021     		movs	r1, #0
 2936 00ba 1720     		movs	r0, #23
 2937 00bc FFF7FEFF 		bl	VXISI2CWrite
 2938              	.LVL247:
3038:Src/main.c    **** 	VXISI2CWrite(0x19,0x00);
 2939              		.loc 1 3038 0
 2940 00c0 C821     		movs	r1, #200
 2941 00c2 1820     		movs	r0, #24
 2942 00c4 FFF7FEFF 		bl	VXISI2CWrite
 2943              	.LVL248:
3039:Src/main.c    **** 	VXISI2CWrite(0x1A,0x23);
 2944              		.loc 1 3039 0
 2945 00c8 0021     		movs	r1, #0
 2946 00ca 1920     		movs	r0, #25
 2947 00cc FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccQZgaDW.s 			page 134


 2948              	.LVL249:
3040:Src/main.c    **** 	VXISI2CWrite(0x1B,0x00);
 2949              		.loc 1 3040 0
 2950 00d0 2321     		movs	r1, #35
 2951 00d2 1A20     		movs	r0, #26
 2952 00d4 FFF7FEFF 		bl	VXISI2CWrite
 2953              	.LVL250:
3041:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);
 2954              		.loc 1 3041 0
 2955 00d8 0021     		movs	r1, #0
 2956 00da 1B20     		movs	r0, #27
 2957 00dc FFF7FEFF 		bl	VXISI2CWrite
 2958              	.LVL251:
3042:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);
 2959              		.loc 1 3042 0
 2960 00e0 0021     		movs	r1, #0
 2961 00e2 1C20     		movs	r0, #28
 2962 00e4 FFF7FEFF 		bl	VXISI2CWrite
 2963              	.LVL252:
3043:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);
 2964              		.loc 1 3043 0
 2965 00e8 0021     		movs	r1, #0
 2966 00ea 1D20     		movs	r0, #29
 2967 00ec FFF7FEFF 		bl	VXISI2CWrite
 2968              	.LVL253:
3044:Src/main.c    **** 	VXISI2CWrite(0x1F,0x32);
 2969              		.loc 1 3044 0
 2970 00f0 2021     		movs	r1, #32
 2971 00f2 1E20     		movs	r0, #30
 2972 00f4 FFF7FEFF 		bl	VXISI2CWrite
 2973              	.LVL254:
3045:Src/main.c    **** 	VXISI2CWrite(0x20,0x5A);
 2974              		.loc 1 3045 0
 2975 00f8 3221     		movs	r1, #50
 2976 00fa 1F20     		movs	r0, #31
 2977 00fc FFF7FEFF 		bl	VXISI2CWrite
 2978              	.LVL255:
3046:Src/main.c    **** 	VXISI2CWrite(0x21,0x0D);
 2979              		.loc 1 3046 0
 2980 0100 5A21     		movs	r1, #90
 2981 0102 2020     		movs	r0, #32
 2982 0104 FFF7FEFF 		bl	VXISI2CWrite
 2983              	.LVL256:
3047:Src/main.c    **** 	VXISI2CWrite(0x22,0x32);
 2984              		.loc 1 3047 0
 2985 0108 0D21     		movs	r1, #13
 2986 010a 2120     		movs	r0, #33
 2987 010c FFF7FEFF 		bl	VXISI2CWrite
 2988              	.LVL257:
3048:Src/main.c    **** 	VXISI2CWrite(0x23,0x5A);
 2989              		.loc 1 3048 0
 2990 0110 3221     		movs	r1, #50
 2991 0112 2220     		movs	r0, #34
 2992 0114 FFF7FEFF 		bl	VXISI2CWrite
 2993              	.LVL258:
3049:Src/main.c    **** 	VXISI2CWrite(0x24,0xD0);
 2994              		.loc 1 3049 0
ARM GAS  /tmp/ccQZgaDW.s 			page 135


 2995 0118 5A21     		movs	r1, #90
 2996 011a 2320     		movs	r0, #35
 2997 011c FFF7FEFF 		bl	VXISI2CWrite
 2998              	.LVL259:
3050:Src/main.c    **** 	VXISI2CWrite(0x25,0x21);
 2999              		.loc 1 3050 0
 3000 0120 D021     		movs	r1, #208
 3001 0122 2420     		movs	r0, #36
 3002 0124 FFF7FEFF 		bl	VXISI2CWrite
 3003              	.LVL260:
3051:Src/main.c    **** 	VXISI2CWrite(0x26,0x0D);
 3004              		.loc 1 3051 0
 3005 0128 2121     		movs	r1, #33
 3006 012a 2520     		movs	r0, #37
 3007 012c FFF7FEFF 		bl	VXISI2CWrite
 3008              	.LVL261:
3052:Src/main.c    **** 	VXISI2CWrite(0x27,0xE0);
 3009              		.loc 1 3052 0
 3010 0130 0D21     		movs	r1, #13
 3011 0132 2620     		movs	r0, #38
 3012 0134 FFF7FEFF 		bl	VXISI2CWrite
 3013              	.LVL262:
3053:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);
 3014              		.loc 1 3053 0
 3015 0138 E021     		movs	r1, #224
 3016 013a 2720     		movs	r0, #39
 3017 013c FFF7FEFF 		bl	VXISI2CWrite
 3018              	.LVL263:
3054:Src/main.c    **** 	VXISI2CWrite(0x29,0x00);
 3019              		.loc 1 3054 0
 3020 0140 F021     		movs	r1, #240
 3021 0142 2820     		movs	r0, #40
 3022 0144 FFF7FEFF 		bl	VXISI2CWrite
 3023              	.LVL264:
3055:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);
 3024              		.loc 1 3055 0
 3025 0148 0021     		movs	r1, #0
 3026 014a 2920     		movs	r0, #41
 3027 014c FFF7FEFF 		bl	VXISI2CWrite
 3028              	.LVL265:
3056:Src/main.c    **** 	VXISI2CWrite(0x2B,0x01);
 3029              		.loc 1 3056 0
 3030 0150 0021     		movs	r1, #0
 3031 0152 2A20     		movs	r0, #42
 3032 0154 FFF7FEFF 		bl	VXISI2CWrite
 3033              	.LVL266:
3057:Src/main.c    **** 	VXISI2CWrite(0x2C,0xFF);
 3034              		.loc 1 3057 0
 3035 0158 0121     		movs	r1, #1
 3036 015a 2B20     		movs	r0, #43
 3037 015c FFF7FEFF 		bl	VXISI2CWrite
 3038              	.LVL267:
3058:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);
 3039              		.loc 1 3058 0
 3040 0160 FF21     		movs	r1, #255
 3041 0162 2C20     		movs	r0, #44
 3042 0164 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccQZgaDW.s 			page 136


 3043              	.LVL268:
3059:Src/main.c    **** 	VXISI2CWrite(0x2E,0x12);
 3044              		.loc 1 3059 0
 3045 0168 0021     		movs	r1, #0
 3046 016a 2D20     		movs	r0, #45
 3047 016c FFF7FEFF 		bl	VXISI2CWrite
 3048              	.LVL269:
3060:Src/main.c    **** 	VXISI2CWrite(0x2F,0xD0);
 3049              		.loc 1 3060 0
 3050 0170 1221     		movs	r1, #18
 3051 0172 2E20     		movs	r0, #46
 3052 0174 FFF7FEFF 		bl	VXISI2CWrite
 3053              	.LVL270:
3061:Src/main.c    **** 	VXISI2CWrite(0x30,0xE0);
 3054              		.loc 1 3061 0
 3055 0178 D021     		movs	r1, #208
 3056 017a 2F20     		movs	r0, #47
 3057 017c FFF7FEFF 		bl	VXISI2CWrite
 3058              	.LVL271:
3062:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);
 3059              		.loc 1 3062 0
 3060 0180 E021     		movs	r1, #224
 3061 0182 3020     		movs	r0, #48
 3062 0184 FFF7FEFF 		bl	VXISI2CWrite
 3063              	.LVL272:
3063:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);
 3064              		.loc 1 3063 0
 3065 0188 8021     		movs	r1, #128
 3066 018a 3120     		movs	r0, #49
 3067 018c FFF7FEFF 		bl	VXISI2CWrite
 3068              	.LVL273:
3064:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);
 3069              		.loc 1 3064 0
 3070 0190 8021     		movs	r1, #128
 3071 0192 3220     		movs	r0, #50
 3072 0194 FFF7FEFF 		bl	VXISI2CWrite
 3073              	.LVL274:
3065:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);
 3074              		.loc 1 3065 0
 3075 0198 8021     		movs	r1, #128
 3076 019a 3320     		movs	r0, #51
 3077 019c FFF7FEFF 		bl	VXISI2CWrite
 3078              	.LVL275:
3066:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);
 3079              		.loc 1 3066 0
 3080 01a0 A021     		movs	r1, #160
 3081 01a2 3420     		movs	r0, #52
 3082 01a4 FFF7FEFF 		bl	VXISI2CWrite
 3083              	.LVL276:
3067:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);
 3084              		.loc 1 3067 0
 3085 01a8 1821     		movs	r1, #24
 3086 01aa 3520     		movs	r0, #53
 3087 01ac FFF7FEFF 		bl	VXISI2CWrite
 3088              	.LVL277:
3068:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);
 3089              		.loc 1 3068 0
ARM GAS  /tmp/ccQZgaDW.s 			page 137


 3090 01b0 4621     		movs	r1, #70
 3091 01b2 3620     		movs	r0, #54
 3092 01b4 FFF7FEFF 		bl	VXISI2CWrite
 3093              	.LVL278:
3069:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);
 3094              		.loc 1 3069 0
 3095 01b8 6421     		movs	r1, #100
 3096 01ba 3720     		movs	r0, #55
 3097 01bc FFF7FEFF 		bl	VXISI2CWrite
 3098              	.LVL279:
3070:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);
 3099              		.loc 1 3070 0
 3100 01c0 0021     		movs	r1, #0
 3101 01c2 3820     		movs	r0, #56
 3102 01c4 FFF7FEFF 		bl	VXISI2CWrite
 3103              	.LVL280:
3071:Src/main.c    **** 	VXISI2CWrite(0x3A,0x03);
 3104              		.loc 1 3071 0
 3105 01c8 FF21     		movs	r1, #255
 3106 01ca 3920     		movs	r0, #57
 3107 01cc FFF7FEFF 		bl	VXISI2CWrite
 3108              	.LVL281:
3072:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);
 3109              		.loc 1 3072 0
 3110 01d0 0321     		movs	r1, #3
 3111 01d2 3A20     		movs	r0, #58
 3112 01d4 FFF7FEFF 		bl	VXISI2CWrite
 3113              	.LVL282:
3073:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);
 3114              		.loc 1 3073 0
 3115 01d8 8021     		movs	r1, #128
 3116 01da 3B20     		movs	r0, #59
 3117 01dc FFF7FEFF 		bl	VXISI2CWrite
 3118              	.LVL283:
3074:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);
 3119              		.loc 1 3074 0
 3120 01e0 8021     		movs	r1, #128
 3121 01e2 3C20     		movs	r0, #60
 3122 01e4 FFF7FEFF 		bl	VXISI2CWrite
 3123              	.LVL284:
3075:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);
 3124              		.loc 1 3075 0
 3125 01e8 8021     		movs	r1, #128
 3126 01ea 3D20     		movs	r0, #61
 3127 01ec FFF7FEFF 		bl	VXISI2CWrite
 3128              	.LVL285:
3076:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);
 3129              		.loc 1 3076 0
 3130 01f0 8021     		movs	r1, #128
 3131 01f2 3E20     		movs	r0, #62
 3132 01f4 FFF7FEFF 		bl	VXISI2CWrite
 3133              	.LVL286:
3077:Src/main.c    **** 	//VXISI2CWrite(0xVXISI);2CWrite(0x80
 3134              		.loc 1 3077 0
 3135 01f8 8021     		movs	r1, #128
 3136 01fa 3F20     		movs	r0, #63
 3137 01fc FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccQZgaDW.s 			page 138


 3138              	.LVL287:
3079:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);
 3139              		.loc 1 3079 0
 3140 0200 6021     		movs	r1, #96
 3141 0202 4120     		movs	r0, #65
 3142 0204 FFF7FEFF 		bl	VXISI2CWrite
 3143              	.LVL288:
3080:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);
 3144              		.loc 1 3080 0
 3145 0208 5F21     		movs	r1, #95
 3146 020a 4220     		movs	r0, #66
 3147 020c FFF7FEFF 		bl	VXISI2CWrite
 3148              	.LVL289:
3081:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);
 3149              		.loc 1 3081 0
 3150 0210 3721     		movs	r1, #55
 3151 0212 4320     		movs	r0, #67
 3152 0214 FFF7FEFF 		bl	VXISI2CWrite
 3153              	.LVL290:
3082:Src/main.c    **** 	VXISI2CWrite(0x45,0x04);
 3154              		.loc 1 3082 0
 3155 0218 1421     		movs	r1, #20
 3156 021a 4420     		movs	r0, #68
 3157 021c FFF7FEFF 		bl	VXISI2CWrite
 3158              	.LVL291:
3083:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);
 3159              		.loc 1 3083 0
 3160 0220 0421     		movs	r1, #4
 3161 0222 4520     		movs	r0, #69
 3162 0224 FFF7FEFF 		bl	VXISI2CWrite
 3163              	.LVL292:
3084:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);
 3164              		.loc 1 3084 0
 3165 0228 0021     		movs	r1, #0
 3166 022a 4620     		movs	r0, #70
 3167 022c FFF7FEFF 		bl	VXISI2CWrite
 3168              	.LVL293:
3085:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);
 3169              		.loc 1 3085 0
 3170 0230 0021     		movs	r1, #0
 3171 0232 4720     		movs	r0, #71
 3172 0234 FFF7FEFF 		bl	VXISI2CWrite
 3173              	.LVL294:
3086:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);
 3174              		.loc 1 3086 0
 3175 0238 0021     		movs	r1, #0
 3176 023a 4820     		movs	r0, #72
 3177 023c FFF7FEFF 		bl	VXISI2CWrite
 3178              	.LVL295:
3087:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);
 3179              		.loc 1 3087 0
 3180 0240 0021     		movs	r1, #0
 3181 0242 4920     		movs	r0, #73
 3182 0244 FFF7FEFF 		bl	VXISI2CWrite
 3183              	.LVL296:
3088:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);
 3184              		.loc 1 3088 0
ARM GAS  /tmp/ccQZgaDW.s 			page 139


 3185 0248 2021     		movs	r1, #32
 3186 024a 4B20     		movs	r0, #75
 3187 024c FFF7FEFF 		bl	VXISI2CWrite
 3188              	.LVL297:
3089:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);
 3189              		.loc 1 3089 0
 3190 0250 0021     		movs	r1, #0
 3191 0252 4C20     		movs	r0, #76
 3192 0254 FFF7FEFF 		bl	VXISI2CWrite
 3193              	.LVL298:
3090:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);
 3194              		.loc 1 3090 0
 3195 0258 0021     		movs	r1, #0
 3196 025a 4D20     		movs	r0, #77
 3197 025c FFF7FEFF 		bl	VXISI2CWrite
 3198              	.LVL299:
3091:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);
 3199              		.loc 1 3091 0
 3200 0260 0021     		movs	r1, #0
 3201 0262 4E20     		movs	r0, #78
 3202 0264 FFF7FEFF 		bl	VXISI2CWrite
 3203              	.LVL300:
3092:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);
 3204              		.loc 1 3092 0
 3205 0268 7F21     		movs	r1, #127
 3206 026a 4F20     		movs	r0, #79
 3207 026c FFF7FEFF 		bl	VXISI2CWrite
 3208              	.LVL301:
3093:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);
 3209              		.loc 1 3093 0
 3210 0270 2021     		movs	r1, #32
 3211 0272 5020     		movs	r0, #80
 3212 0274 FFF7FEFF 		bl	VXISI2CWrite
 3213              	.LVL302:
3094:Src/main.c    **** 	VXISI2CWrite(0x52,0x00);
 3214              		.loc 1 3094 0
 3215 0278 0021     		movs	r1, #0
 3216 027a 5120     		movs	r0, #81
 3217 027c FFF7FEFF 		bl	VXISI2CWrite
 3218              	.LVL303:
3095:Src/main.c    **** 	VXISI2CWrite(0x53,0x04);
 3219              		.loc 1 3095 0
 3220 0280 0021     		movs	r1, #0
 3221 0282 5220     		movs	r0, #82
 3222 0284 FFF7FEFF 		bl	VXISI2CWrite
 3223              	.LVL304:
3096:Src/main.c    **** 	VXISI2CWrite(0x54,0x00);
 3224              		.loc 1 3096 0
 3225 0288 0421     		movs	r1, #4
 3226 028a 5320     		movs	r0, #83
 3227 028c FFF7FEFF 		bl	VXISI2CWrite
 3228              	.LVL305:
3097:Src/main.c    **** 	VXISI2CWrite(0x55,0xE0);
 3229              		.loc 1 3097 0
 3230 0290 0021     		movs	r1, #0
 3231 0292 5420     		movs	r0, #84
 3232 0294 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccQZgaDW.s 			page 140


 3233              	.LVL306:
3098:Src/main.c    **** 	VXISI2CWrite(0x56,0x40);
 3234              		.loc 1 3098 0
 3235 0298 E021     		movs	r1, #224
 3236 029a 5520     		movs	r0, #85
 3237 029c FFF7FEFF 		bl	VXISI2CWrite
 3238              	.LVL307:
3099:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);
 3239              		.loc 1 3099 0
 3240 02a0 4021     		movs	r1, #64
 3241 02a2 5620     		movs	r0, #86
 3242 02a4 FFF7FEFF 		bl	VXISI2CWrite
 3243              	.LVL308:
3100:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);
 3244              		.loc 1 3100 0
 3245 02a8 0421     		movs	r1, #4
 3246 02aa 5720     		movs	r0, #87
 3247 02ac FFF7FEFF 		bl	VXISI2CWrite
 3248              	.LVL309:
3101:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);
 3249              		.loc 1 3101 0
 3250 02b0 0021     		movs	r1, #0
 3251 02b2 5820     		movs	r0, #88
 3252 02b4 FFF7FEFF 		bl	VXISI2CWrite
 3253              	.LVL310:
3102:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);
 3254              		.loc 1 3102 0
 3255 02b8 0821     		movs	r1, #8
 3256 02ba 5920     		movs	r0, #89
 3257 02bc FFF7FEFF 		bl	VXISI2CWrite
 3258              	.LVL311:
3103:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);
 3259              		.loc 1 3103 0
 3260 02c0 1021     		movs	r1, #16
 3261 02c2 5A20     		movs	r0, #90
 3262 02c4 FFF7FEFF 		bl	VXISI2CWrite
 3263              	.LVL312:
3104:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);
 3264              		.loc 1 3104 0
 3265 02c8 0021     		movs	r1, #0
 3266 02ca 5B20     		movs	r0, #91
 3267 02cc FFF7FEFF 		bl	VXISI2CWrite
 3268              	.LVL313:
3105:Src/main.c    **** 	VXISI2CWrite(0x5D,0x40);
 3269              		.loc 1 3105 0
 3270 02d0 6821     		movs	r1, #104
 3271 02d2 5C20     		movs	r0, #92
 3272 02d4 FFF7FEFF 		bl	VXISI2CWrite
 3273              	.LVL314:
3106:Src/main.c    **** 	VXISI2CWrite(0x5E,0x08);
 3274              		.loc 1 3106 0
 3275 02d8 4021     		movs	r1, #64
 3276 02da 5D20     		movs	r0, #93
 3277 02dc FFF7FEFF 		bl	VXISI2CWrite
 3278              	.LVL315:
3107:Src/main.c    **** 	VXISI2CWrite(0x5F,0x00);
 3279              		.loc 1 3107 0
ARM GAS  /tmp/ccQZgaDW.s 			page 141


 3280 02e0 0821     		movs	r1, #8
 3281 02e2 5E20     		movs	r0, #94
 3282 02e4 FFF7FEFF 		bl	VXISI2CWrite
 3283              	.LVL316:
3108:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);
 3284              		.loc 1 3108 0
 3285 02e8 0021     		movs	r1, #0
 3286 02ea 5F20     		movs	r0, #95
 3287 02ec FFF7FEFF 		bl	VXISI2CWrite
 3288              	.LVL317:
3109:Src/main.c    **** 	VXISI2CWrite(0x61,0x54);
 3289              		.loc 1 3109 0
 3290 02f0 E021     		movs	r1, #224
 3291 02f2 6020     		movs	r0, #96
 3292 02f4 FFF7FEFF 		bl	VXISI2CWrite
 3293              	.LVL318:
3110:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);
 3294              		.loc 1 3110 0
 3295 02f8 5421     		movs	r1, #84
 3296 02fa 6120     		movs	r0, #97
 3297 02fc FFF7FEFF 		bl	VXISI2CWrite
 3298              	.LVL319:
3111:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);
 3299              		.loc 1 3111 0
 3300 0300 3321     		movs	r1, #51
 3301 0302 6220     		movs	r0, #98
 3302 0304 FFF7FEFF 		bl	VXISI2CWrite
 3303              	.LVL320:
3112:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);
 3304              		.loc 1 3112 0
 3305 0308 0121     		movs	r1, #1
 3306 030a 6320     		movs	r0, #99
 3307 030c FFF7FEFF 		bl	VXISI2CWrite
 3308              	.LVL321:
3113:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);
 3309              		.loc 1 3113 0
 3310 0310 FF21     		movs	r1, #255
 3311 0312 6420     		movs	r0, #100
 3312 0314 FFF7FEFF 		bl	VXISI2CWrite
 3313              	.LVL322:
3114:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);
 3314              		.loc 1 3114 0
 3315 0318 0121     		movs	r1, #1
 3316 031a 6520     		movs	r0, #101
 3317 031c FFF7FEFF 		bl	VXISI2CWrite
 3318              	.LVL323:
3115:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);
 3319              		.loc 1 3115 0
 3320 0320 FF21     		movs	r1, #255
 3321 0322 6620     		movs	r0, #102
 3322 0324 FFF7FEFF 		bl	VXISI2CWrite
 3323              	.LVL324:
3116:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);
 3324              		.loc 1 3116 0
 3325 0328 8921     		movs	r1, #137
 3326 032a 6720     		movs	r0, #103
 3327 032c FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccQZgaDW.s 			page 142


 3328              	.LVL325:
3117:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);
 3329              		.loc 1 3117 0
 3330 0330 AB21     		movs	r1, #171
 3331 0332 6820     		movs	r0, #104
 3332 0334 FFF7FEFF 		bl	VXISI2CWrite
 3333              	.LVL326:
3118:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);
 3334              		.loc 1 3118 0
 3335 0338 8821     		movs	r1, #136
 3336 033a 6920     		movs	r0, #105
 3337 033c FFF7FEFF 		bl	VXISI2CWrite
 3338              	.LVL327:
3119:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);
 3339              		.loc 1 3119 0
 3340 0340 6E21     		movs	r1, #110
 3341 0342 6A20     		movs	r0, #106
 3342 0344 FFF7FEFF 		bl	VXISI2CWrite
 3343              	.LVL328:
3120:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);
 3344              		.loc 1 3120 0
 3345 0348 6E21     		movs	r1, #110
 3346 034a 6B20     		movs	r0, #107
 3347 034c FFF7FEFF 		bl	VXISI2CWrite
 3348              	.LVL329:
3121:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);
 3349              		.loc 1 3121 0
 3350 0350 6E21     		movs	r1, #110
 3351 0352 6C20     		movs	r0, #108
 3352 0354 FFF7FEFF 		bl	VXISI2CWrite
 3353              	.LVL330:
3122:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);
 3354              		.loc 1 3122 0
 3355 0358 0021     		movs	r1, #0
 3356 035a 6D20     		movs	r0, #109
 3357 035c FFF7FEFF 		bl	VXISI2CWrite
 3358              	.LVL331:
3123:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);
 3359              		.loc 1 3123 0
 3360 0360 0021     		movs	r1, #0
 3361 0362 6E20     		movs	r0, #110
 3362 0364 FFF7FEFF 		bl	VXISI2CWrite
 3363              	.LVL332:
3124:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);
 3364              		.loc 1 3124 0
 3365 0368 0021     		movs	r1, #0
 3366 036a 6F20     		movs	r0, #111
 3367 036c FFF7FEFF 		bl	VXISI2CWrite
 3368              	.LVL333:
3125:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);
 3369              		.loc 1 3125 0
 3370 0370 0021     		movs	r1, #0
 3371 0372 7020     		movs	r0, #112
 3372 0374 FFF7FEFF 		bl	VXISI2CWrite
 3373              	.LVL334:
3126:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);
 3374              		.loc 1 3126 0
ARM GAS  /tmp/ccQZgaDW.s 			page 143


 3375 0378 0021     		movs	r1, #0
 3376 037a 7120     		movs	r0, #113
 3377 037c FFF7FEFF 		bl	VXISI2CWrite
 3378              	.LVL335:
3127:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);
 3379              		.loc 1 3127 0
 3380 0380 0021     		movs	r1, #0
 3381 0382 7220     		movs	r0, #114
 3382 0384 FFF7FEFF 		bl	VXISI2CWrite
 3383              	.LVL336:
3128:Src/main.c    **** 	VXISI2CWrite(0x74,0x00);
 3384              		.loc 1 3128 0
 3385 0388 0021     		movs	r1, #0
 3386 038a 7320     		movs	r0, #115
 3387 038c FFF7FEFF 		bl	VXISI2CWrite
 3388              	.LVL337:
3129:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);
 3389              		.loc 1 3129 0
 3390 0390 0021     		movs	r1, #0
 3391 0392 7420     		movs	r0, #116
 3392 0394 FFF7FEFF 		bl	VXISI2CWrite
 3393              	.LVL338:
3130:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);
 3394              		.loc 1 3130 0
 3395 0398 FF21     		movs	r1, #255
 3396 039a 7520     		movs	r0, #117
 3397 039c FFF7FEFF 		bl	VXISI2CWrite
 3398              	.LVL339:
3131:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);
 3399              		.loc 1 3131 0
 3400 03a0 FF21     		movs	r1, #255
 3401 03a2 7620     		movs	r0, #118
 3402 03a4 FFF7FEFF 		bl	VXISI2CWrite
 3403              	.LVL340:
3132:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);
 3404              		.loc 1 3132 0
 3405 03a8 FF21     		movs	r1, #255
 3406 03aa 7720     		movs	r0, #119
 3407 03ac FFF7FEFF 		bl	VXISI2CWrite
 3408              	.LVL341:
3133:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);
 3409              		.loc 1 3133 0
 3410 03b0 FF21     		movs	r1, #255
 3411 03b2 7820     		movs	r0, #120
 3412 03b4 FFF7FEFF 		bl	VXISI2CWrite
 3413              	.LVL342:
3134:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);
 3414              		.loc 1 3134 0
 3415 03b8 FF21     		movs	r1, #255
 3416 03ba 7920     		movs	r0, #121
 3417 03bc FFF7FEFF 		bl	VXISI2CWrite
 3418              	.LVL343:
3135:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);
 3419              		.loc 1 3135 0
 3420 03c0 FF21     		movs	r1, #255
 3421 03c2 7A20     		movs	r0, #122
 3422 03c4 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccQZgaDW.s 			page 144


 3423              	.LVL344:
3136:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);
 3424              		.loc 1 3136 0
 3425 03c8 FF21     		movs	r1, #255
 3426 03ca 7B20     		movs	r0, #123
 3427 03cc FFF7FEFF 		bl	VXISI2CWrite
 3428              	.LVL345:
3137:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);
 3429              		.loc 1 3137 0
 3430 03d0 FF21     		movs	r1, #255
 3431 03d2 7C20     		movs	r0, #124
 3432 03d4 FFF7FEFF 		bl	VXISI2CWrite
 3433              	.LVL346:
3138:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);
 3434              		.loc 1 3138 0
 3435 03d8 F021     		movs	r1, #240
 3436 03da 7D20     		movs	r0, #125
 3437 03dc FFF7FEFF 		bl	VXISI2CWrite
 3438              	.LVL347:
3139:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);
 3439              		.loc 1 3139 0
 3440 03e0 8021     		movs	r1, #128
 3441 03e2 7E20     		movs	r0, #126
 3442 03e4 FFF7FEFF 		bl	VXISI2CWrite
 3443              	.LVL348:
3140:Src/main.c    **** 	VXISI2CWrite(0x80,0x00);
 3444              		.loc 1 3140 0
 3445 03e8 0021     		movs	r1, #0
 3446 03ea 7F20     		movs	r0, #127
 3447 03ec FFF7FEFF 		bl	VXISI2CWrite
 3448              	.LVL349:
3141:Src/main.c    **** 	VXISI2CWrite(0x81,0x34);
 3449              		.loc 1 3141 0
 3450 03f0 0021     		movs	r1, #0
 3451 03f2 8020     		movs	r0, #128
 3452 03f4 FFF7FEFF 		bl	VXISI2CWrite
 3453              	.LVL350:
 3454 03f8 02E0     		b	.L189
 3455              	.L190:
 3456 03fa 00BF     		.align	2
 3457              	.L188:
 3458 03fc 00000000 		.word	.LC34
 3459              	.L189:
3142:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);
 3460              		.loc 1 3142 0
 3461 0400 3421     		movs	r1, #52
 3462 0402 8120     		movs	r0, #129
 3463 0404 FFF7FEFF 		bl	VXISI2CWrite
 3464              	.LVL351:
3143:Src/main.c    **** 	VXISI2CWrite(0x83,0x05);
 3465              		.loc 1 3143 0
 3466 0408 4021     		movs	r1, #64
 3467 040a 8220     		movs	r0, #130
 3468 040c FFF7FEFF 		bl	VXISI2CWrite
 3469              	.LVL352:
3144:Src/main.c    **** 	VXISI2CWrite(0x84,0x59);
 3470              		.loc 1 3144 0
ARM GAS  /tmp/ccQZgaDW.s 			page 145


 3471 0410 0521     		movs	r1, #5
 3472 0412 8320     		movs	r0, #131
 3473 0414 FFF7FEFF 		bl	VXISI2CWrite
 3474              	.LVL353:
3145:Src/main.c    **** 	VXISI2CWrite(0x85,0xFD);
 3475              		.loc 1 3145 0
 3476 0418 5921     		movs	r1, #89
 3477 041a 8420     		movs	r0, #132
 3478 041c FFF7FEFF 		bl	VXISI2CWrite
 3479              	.LVL354:
3146:Src/main.c    **** 	VXISI2CWrite(0x86,0x04);
 3480              		.loc 1 3146 0
 3481 0420 FD21     		movs	r1, #253
 3482 0422 8520     		movs	r0, #133
 3483 0424 FFF7FEFF 		bl	VXISI2CWrite
 3484              	.LVL355:
3147:Src/main.c    **** 	VXISI2CWrite(0x87,0x24);
 3485              		.loc 1 3147 0
 3486 0428 0421     		movs	r1, #4
 3487 042a 8620     		movs	r0, #134
 3488 042c FFF7FEFF 		bl	VXISI2CWrite
 3489              	.LVL356:
3148:Src/main.c    **** 	VXISI2CWrite(0x88,0x94);
 3490              		.loc 1 3148 0
 3491 0430 2421     		movs	r1, #36
 3492 0432 8720     		movs	r0, #135
 3493 0434 FFF7FEFF 		bl	VXISI2CWrite
 3494              	.LVL357:
3149:Src/main.c    **** 	VXISI2CWrite(0x89,0x58);
 3495              		.loc 1 3149 0
 3496 0438 9421     		movs	r1, #148
 3497 043a 8820     		movs	r0, #136
 3498 043c FFF7FEFF 		bl	VXISI2CWrite
 3499              	.LVL358:
3150:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);
 3500              		.loc 1 3150 0
 3501 0440 5821     		movs	r1, #88
 3502 0442 8920     		movs	r0, #137
 3503 0444 FFF7FEFF 		bl	VXISI2CWrite
 3504              	.LVL359:
3151:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);
 3505              		.loc 1 3151 0
 3506 0448 0021     		movs	r1, #0
 3507 044a 8A20     		movs	r0, #138
 3508 044c FFF7FEFF 		bl	VXISI2CWrite
 3509              	.LVL360:
3152:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);
 3510              		.loc 1 3152 0
 3511 0450 7E21     		movs	r1, #126
 3512 0452 8B20     		movs	r0, #139
 3513 0454 FFF7FEFF 		bl	VXISI2CWrite
 3514              	.LVL361:
3153:Src/main.c    **** 	VXISI2CWrite(0x8D,0x2C);
 3515              		.loc 1 3153 0
 3516 0458 0321     		movs	r1, #3
 3517 045a 8C20     		movs	r0, #140
 3518 045c FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccQZgaDW.s 			page 146


 3519              	.LVL362:
3154:Src/main.c    **** 	VXISI2CWrite(0x8E,0x8C);
 3520              		.loc 1 3154 0
 3521 0460 2C21     		movs	r1, #44
 3522 0462 8D20     		movs	r0, #141
 3523 0464 FFF7FEFF 		bl	VXISI2CWrite
 3524              	.LVL363:
3155:Src/main.c    **** 	VXISI2CWrite(0x8F,0x00);
 3525              		.loc 1 3155 0
 3526 0468 8C21     		movs	r1, #140
 3527 046a 8E20     		movs	r0, #142
 3528 046c FFF7FEFF 		bl	VXISI2CWrite
 3529              	.LVL364:
3156:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);
 3530              		.loc 1 3156 0
 3531 0470 0021     		movs	r1, #0
 3532 0472 8F20     		movs	r0, #143
 3533 0474 FFF7FEFF 		bl	VXISI2CWrite
 3534              	.LVL365:
3157:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);
 3535              		.loc 1 3157 0
 3536 0478 CC21     		movs	r1, #204
 3537 047a 9020     		movs	r0, #144
 3538 047c FFF7FEFF 		bl	VXISI2CWrite
 3539              	.LVL366:
3158:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);
 3540              		.loc 1 3158 0
 3541 0480 4121     		movs	r1, #65
 3542 0482 9120     		movs	r0, #145
 3543 0484 FFF7FEFF 		bl	VXISI2CWrite
 3544              	.LVL367:
3159:Src/main.c    **** 	VXISI2CWrite(0x93,0x31);
 3545              		.loc 1 3159 0
 3546 0488 C421     		movs	r1, #196
 3547 048a 9220     		movs	r0, #146
 3548 048c FFF7FEFF 		bl	VXISI2CWrite
 3549              	.LVL368:
3160:Src/main.c    **** 	VXISI2CWrite(0x94,0x87);
 3550              		.loc 1 3160 0
 3551 0490 3121     		movs	r1, #49
 3552 0492 9320     		movs	r0, #147
 3553 0494 FFF7FEFF 		bl	VXISI2CWrite
 3554              	.LVL369:
3161:Src/main.c    **** 	VXISI2CWrite(0x95,0xD0);
 3555              		.loc 1 3161 0
 3556 0498 8721     		movs	r1, #135
 3557 049a 9420     		movs	r0, #148
 3558 049c FFF7FEFF 		bl	VXISI2CWrite
 3559              	.LVL370:
3162:Src/main.c    **** 	VXISI2CWrite(0x96,0xF3);
 3560              		.loc 1 3162 0
 3561 04a0 D021     		movs	r1, #208
 3562 04a2 9520     		movs	r0, #149
 3563 04a4 FFF7FEFF 		bl	VXISI2CWrite
 3564              	.LVL371:
3163:Src/main.c    **** 	VXISI2CWrite(0x97,0x20);
 3565              		.loc 1 3163 0
ARM GAS  /tmp/ccQZgaDW.s 			page 147


 3566 04a8 F321     		movs	r1, #243
 3567 04aa 9620     		movs	r0, #150
 3568 04ac FFF7FEFF 		bl	VXISI2CWrite
 3569              	.LVL372:
3164:Src/main.c    **** 	VXISI2CWrite(0x98,0x11);
 3570              		.loc 1 3164 0
 3571 04b0 2021     		movs	r1, #32
 3572 04b2 9720     		movs	r0, #151
 3573 04b4 FFF7FEFF 		bl	VXISI2CWrite
 3574              	.LVL373:
3165:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);
 3575              		.loc 1 3165 0
 3576 04b8 1121     		movs	r1, #17
 3577 04ba 9820     		movs	r0, #152
 3578 04bc FFF7FEFF 		bl	VXISI2CWrite
 3579              	.LVL374:
3166:Src/main.c    **** 	VXISI2CWrite(0x9A,0xFF);
 3580              		.loc 1 3166 0
 3581 04c0 9021     		movs	r1, #144
 3582 04c2 9920     		movs	r0, #153
 3583 04c4 FFF7FEFF 		bl	VXISI2CWrite
 3584              	.LVL375:
3167:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);
 3585              		.loc 1 3167 0
 3586 04c8 FF21     		movs	r1, #255
 3587 04ca 9A20     		movs	r0, #154
 3588 04cc FFF7FEFF 		bl	VXISI2CWrite
 3589              	.LVL376:
3168:Src/main.c    **** 	VXISI2CWrite(0x9C,0x0A);
 3590              		.loc 1 3168 0
 3591 04d0 0421     		movs	r1, #4
 3592 04d2 9B20     		movs	r0, #155
 3593 04d4 FFF7FEFF 		bl	VXISI2CWrite
 3594              	.LVL377:
3169:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);
 3595              		.loc 1 3169 0
 3596 04d8 0A21     		movs	r1, #10
 3597 04da 9C20     		movs	r0, #156
 3598 04dc FFF7FEFF 		bl	VXISI2CWrite
 3599              	.LVL378:
3170:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);
 3600              		.loc 1 3170 0
 3601 04e0 0021     		movs	r1, #0
 3602 04e2 9D20     		movs	r0, #157
 3603 04e4 FFF7FEFF 		bl	VXISI2CWrite
 3604              	.LVL379:
3171:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);
 3605              		.loc 1 3171 0
 3606 04e8 0421     		movs	r1, #4
 3607 04ea 9E20     		movs	r0, #158
 3608 04ec FFF7FEFF 		bl	VXISI2CWrite
 3609              	.LVL380:
3172:Src/main.c    **** 	VXISI2CWrite(0xA0,0x2F);
 3610              		.loc 1 3172 0
 3611 04f0 6521     		movs	r1, #101
 3612 04f2 9F20     		movs	r0, #159
 3613 04f4 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccQZgaDW.s 			page 148


 3614              	.LVL381:
3173:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD9);
 3615              		.loc 1 3173 0
 3616 04f8 2F21     		movs	r1, #47
 3617 04fa A020     		movs	r0, #160
 3618 04fc FFF7FEFF 		bl	VXISI2CWrite
 3619              	.LVL382:
3174:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);
 3620              		.loc 1 3174 0
 3621 0500 D921     		movs	r1, #217
 3622 0502 A120     		movs	r0, #161
 3623 0504 FFF7FEFF 		bl	VXISI2CWrite
 3624              	.LVL383:
3175:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);
 3625              		.loc 1 3175 0
 3626 0508 9821     		movs	r1, #152
 3627 050a A220     		movs	r0, #162
 3628 050c FFF7FEFF 		bl	VXISI2CWrite
 3629              	.LVL384:
3176:Src/main.c    **** 	VXISI2CWrite(0xA4,0xE1);
 3630              		.loc 1 3176 0
 3631 0510 8721     		movs	r1, #135
 3632 0512 A320     		movs	r0, #163
 3633 0514 FFF7FEFF 		bl	VXISI2CWrite
 3634              	.LVL385:
3177:Src/main.c    **** 	VXISI2CWrite(0xA5,0x38);
 3635              		.loc 1 3177 0
 3636 0518 E121     		movs	r1, #225
 3637 051a A420     		movs	r0, #164
 3638 051c FFF7FEFF 		bl	VXISI2CWrite
 3639              	.LVL386:
3178:Src/main.c    **** 	VXISI2CWrite(0xA6,0xC2);
 3640              		.loc 1 3178 0
 3641 0520 3821     		movs	r1, #56
 3642 0522 A520     		movs	r0, #165
 3643 0524 FFF7FEFF 		bl	VXISI2CWrite
 3644              	.LVL387:
3179:Src/main.c    **** 	VXISI2CWrite(0xA7,0x70);
 3645              		.loc 1 3179 0
 3646 0528 C221     		movs	r1, #194
 3647 052a A620     		movs	r0, #166
 3648 052c FFF7FEFF 		bl	VXISI2CWrite
 3649              	.LVL388:
3180:Src/main.c    **** 	VXISI2CWrite(0xA8,0x00);
 3650              		.loc 1 3180 0
 3651 0530 7021     		movs	r1, #112
 3652 0532 A720     		movs	r0, #167
 3653 0534 FFF7FEFF 		bl	VXISI2CWrite
 3654              	.LVL389:
3181:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);
 3655              		.loc 1 3181 0
 3656 0538 0021     		movs	r1, #0
 3657 053a A820     		movs	r0, #168
 3658 053c FFF7FEFF 		bl	VXISI2CWrite
 3659              	.LVL390:
3182:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2E);
 3660              		.loc 1 3182 0
ARM GAS  /tmp/ccQZgaDW.s 			page 149


 3661 0540 1E21     		movs	r1, #30
 3662 0542 A920     		movs	r0, #169
 3663 0544 FFF7FEFF 		bl	VXISI2CWrite
 3664              	.LVL391:
3183:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);
 3665              		.loc 1 3183 0
 3666 0548 2E21     		movs	r1, #46
 3667 054a AA20     		movs	r0, #170
 3668 054c FFF7FEFF 		bl	VXISI2CWrite
 3669              	.LVL392:
3184:Src/main.c    **** 	VXISI2CWrite(0xAC,0x84);
 3670              		.loc 1 3184 0
 3671 0550 0021     		movs	r1, #0
 3672 0552 AB20     		movs	r0, #171
 3673 0554 FFF7FEFF 		bl	VXISI2CWrite
 3674              	.LVL393:
3185:Src/main.c    **** 	VXISI2CWrite(0xAD,0xF3);
 3675              		.loc 1 3185 0
 3676 0558 8421     		movs	r1, #132
 3677 055a AC20     		movs	r0, #172
 3678 055c FFF7FEFF 		bl	VXISI2CWrite
 3679              	.LVL394:
3186:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);
 3680              		.loc 1 3186 0
 3681 0560 F321     		movs	r1, #243
 3682 0562 AD20     		movs	r0, #173
 3683 0564 FFF7FEFF 		bl	VXISI2CWrite
 3684              	.LVL395:
3187:Src/main.c    **** 	VXISI2CWrite(0xAF,0x99);
 3685              		.loc 1 3187 0
 3686 0568 6521     		movs	r1, #101
 3687 056a AE20     		movs	r0, #174
 3688 056c FFF7FEFF 		bl	VXISI2CWrite
 3689              	.LVL396:
3188:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);
 3690              		.loc 1 3188 0
 3691 0570 9921     		movs	r1, #153
 3692 0572 AF20     		movs	r0, #175
 3693 0574 FFF7FEFF 		bl	VXISI2CWrite
 3694              	.LVL397:
3189:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);
 3695              		.loc 1 3189 0
 3696 0578 0021     		movs	r1, #0
 3697 057a B020     		movs	r0, #176
 3698 057c FFF7FEFF 		bl	VXISI2CWrite
 3699              	.LVL398:
3190:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);
 3700              		.loc 1 3190 0
 3701 0580 0021     		movs	r1, #0
 3702 0582 B120     		movs	r0, #177
 3703 0584 FFF7FEFF 		bl	VXISI2CWrite
 3704              	.LVL399:
3191:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);
 3705              		.loc 1 3191 0
 3706 0588 0021     		movs	r1, #0
 3707 058a B220     		movs	r0, #178
 3708 058c FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccQZgaDW.s 			page 150


 3709              	.LVL400:
3192:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);
 3710              		.loc 1 3192 0
 3711 0590 0021     		movs	r1, #0
 3712 0592 B320     		movs	r0, #179
 3713 0594 FFF7FEFF 		bl	VXISI2CWrite
 3714              	.LVL401:
3193:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);
 3715              		.loc 1 3193 0
 3716 0598 0021     		movs	r1, #0
 3717 059a B420     		movs	r0, #180
 3718 059c FFF7FEFF 		bl	VXISI2CWrite
 3719              	.LVL402:
3194:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);
 3720              		.loc 1 3194 0
 3721 05a0 0021     		movs	r1, #0
 3722 05a2 B520     		movs	r0, #181
 3723 05a4 FFF7FEFF 		bl	VXISI2CWrite
 3724              	.LVL403:
3195:Src/main.c    **** 	VXISI2CWrite(0xB8,0x80);
 3725              		.loc 1 3195 0
 3726 05a8 0021     		movs	r1, #0
 3727 05aa B620     		movs	r0, #182
 3728 05ac FFF7FEFF 		bl	VXISI2CWrite
 3729              	.LVL404:
3196:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);
 3730              		.loc 1 3196 0
 3731 05b0 8021     		movs	r1, #128
 3732 05b2 B820     		movs	r0, #184
 3733 05b4 FFF7FEFF 		bl	VXISI2CWrite
 3734              	.LVL405:
3197:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);
 3735              		.loc 1 3197 0
 3736 05b8 0021     		movs	r1, #0
 3737 05ba B920     		movs	r0, #185
 3738 05bc FFF7FEFF 		bl	VXISI2CWrite
 3739              	.LVL406:
3198:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);
 3740              		.loc 1 3198 0
 3741 05c0 0121     		movs	r1, #1
 3742 05c2 BA20     		movs	r0, #186
 3743 05c4 FFF7FEFF 		bl	VXISI2CWrite
 3744              	.LVL407:
3199:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);
 3745              		.loc 1 3199 0
 3746 05c8 0021     		movs	r1, #0
 3747 05ca BB20     		movs	r0, #187
 3748 05cc FFF7FEFF 		bl	VXISI2CWrite
 3749              	.LVL408:
3200:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);
 3750              		.loc 1 3200 0
 3751 05d0 9021     		movs	r1, #144
 3752 05d2 BC20     		movs	r0, #188
 3753 05d4 FFF7FEFF 		bl	VXISI2CWrite
 3754              	.LVL409:
3201:Src/main.c    **** 	VXISI2CWrite(0xBE,0x2C);
 3755              		.loc 1 3201 0
ARM GAS  /tmp/ccQZgaDW.s 			page 151


 3756 05d8 0121     		movs	r1, #1
 3757 05da BD20     		movs	r0, #189
 3758 05dc FFF7FEFF 		bl	VXISI2CWrite
 3759              	.LVL410:
3202:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);
 3760              		.loc 1 3202 0
 3761 05e0 2C21     		movs	r1, #44
 3762 05e2 BE20     		movs	r0, #190
 3763 05e4 FFF7FEFF 		bl	VXISI2CWrite
 3764              	.LVL411:
3203:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);
 3765              		.loc 1 3203 0
 3766 05e8 0021     		movs	r1, #0
 3767 05ea C020     		movs	r0, #192
 3768 05ec FFF7FEFF 		bl	VXISI2CWrite
 3769              	.LVL412:
3204:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);
 3770              		.loc 1 3204 0
 3771 05f0 2021     		movs	r1, #32
 3772 05f2 C120     		movs	r0, #193
 3773 05f4 FFF7FEFF 		bl	VXISI2CWrite
 3774              	.LVL413:
3205:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);
 3775              		.loc 1 3205 0
 3776 05f8 2021     		movs	r1, #32
 3777 05fa C220     		movs	r0, #194
 3778 05fc FFF7FEFF 		bl	VXISI2CWrite
 3779              	.LVL414:
3206:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);
 3780              		.loc 1 3206 0
 3781 0600 2021     		movs	r1, #32
 3782 0602 C320     		movs	r0, #195
 3783 0604 FFF7FEFF 		bl	VXISI2CWrite
 3784              	.LVL415:
3207:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);
 3785              		.loc 1 3207 0
 3786 0608 2021     		movs	r1, #32
 3787 060a C420     		movs	r0, #196
 3788 060c FFF7FEFF 		bl	VXISI2CWrite
 3789              	.LVL416:
3208:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);
 3790              		.loc 1 3208 0
 3791 0610 2021     		movs	r1, #32
 3792 0612 C520     		movs	r0, #197
 3793 0614 FFF7FEFF 		bl	VXISI2CWrite
 3794              	.LVL417:
3209:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);
 3795              		.loc 1 3209 0
 3796 0618 FF21     		movs	r1, #255
 3797 061a D020     		movs	r0, #208
 3798 061c FFF7FEFF 		bl	VXISI2CWrite
 3799              	.LVL418:
3210:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);
 3800              		.loc 1 3210 0
 3801 0620 3F21     		movs	r1, #63
 3802 0622 D120     		movs	r0, #209
 3803 0624 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccQZgaDW.s 			page 152


 3804              	.LVL419:
3211:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);
 3805              		.loc 1 3211 0
 3806 0628 C221     		movs	r1, #194
 3807 062a D220     		movs	r0, #210
 3808 062c FFF7FEFF 		bl	VXISI2CWrite
 3809              	.LVL420:
3212:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);
 3810              		.loc 1 3212 0
 3811 0630 3F21     		movs	r1, #63
 3812 0632 D320     		movs	r0, #211
 3813 0634 FFF7FEFF 		bl	VXISI2CWrite
 3814              	.LVL421:
3213:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);
 3815              		.loc 1 3213 0
 3816 0638 0021     		movs	r1, #0
 3817 063a D420     		movs	r0, #212
 3818 063c FFF7FEFF 		bl	VXISI2CWrite
 3819              	.LVL422:
3214:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);
 3820              		.loc 1 3214 0
 3821 0640 0021     		movs	r1, #0
 3822 0642 D520     		movs	r0, #213
 3823 0644 FFF7FEFF 		bl	VXISI2CWrite
 3824              	.LVL423:
3215:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);
 3825              		.loc 1 3215 0
 3826 0648 0021     		movs	r1, #0
 3827 064a D620     		movs	r0, #214
 3828 064c FFF7FEFF 		bl	VXISI2CWrite
 3829              	.LVL424:
3216:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);
 3830              		.loc 1 3216 0
 3831 0650 1021     		movs	r1, #16
 3832 0652 D720     		movs	r0, #215
 3833 0654 FFF7FEFF 		bl	VXISI2CWrite
 3834              	.LVL425:
3217:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);
 3835              		.loc 1 3217 0
 3836 0658 0021     		movs	r1, #0
 3837 065a D820     		movs	r0, #216
 3838 065c FFF7FEFF 		bl	VXISI2CWrite
 3839              	.LVL426:
3218:Src/main.c    **** 	VXISI2CWrite(0xDD,0x00);
 3840              		.loc 1 3218 0
 3841 0660 7721     		movs	r1, #119
 3842 0662 DC20     		movs	r0, #220
 3843 0664 FFF7FEFF 		bl	VXISI2CWrite
 3844              	.LVL427:
3219:Src/main.c    **** 	VXISI2CWrite(0xDE,0xAF);
 3845              		.loc 1 3219 0
 3846 0668 0021     		movs	r1, #0
 3847 066a DD20     		movs	r0, #221
 3848 066c FFF7FEFF 		bl	VXISI2CWrite
 3849              	.LVL428:
3220:Src/main.c    **** 	VXISI2CWrite(0xDF,0xEF);
 3850              		.loc 1 3220 0
ARM GAS  /tmp/ccQZgaDW.s 			page 153


 3851 0670 AF21     		movs	r1, #175
 3852 0672 DE20     		movs	r0, #222
 3853 0674 FFF7FEFF 		bl	VXISI2CWrite
 3854              	.LVL429:
3221:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);
 3855              		.loc 1 3221 0
 3856 0678 EF21     		movs	r1, #239
 3857 067a DF20     		movs	r0, #223
 3858 067c FFF7FEFF 		bl	VXISI2CWrite
 3859              	.LVL430:
3222:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);
 3860              		.loc 1 3222 0
 3861 0680 0021     		movs	r1, #0
 3862 0682 E020     		movs	r0, #224
 3863 0684 FFF7FEFF 		bl	VXISI2CWrite
 3864              	.LVL431:
3223:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);
 3865              		.loc 1 3223 0
 3866 0688 0021     		movs	r1, #0
 3867 068a E120     		movs	r0, #225
 3868 068c FFF7FEFF 		bl	VXISI2CWrite
 3869              	.LVL432:
3224:Src/main.c    **** 	VXISI2CWrite(0xE3,0x12);
 3870              		.loc 1 3224 0
 3871 0690 0021     		movs	r1, #0
 3872 0692 E220     		movs	r0, #226
 3873 0694 FFF7FEFF 		bl	VXISI2CWrite
 3874              	.LVL433:
3225:Src/main.c    **** 	VXISI2CWrite(0xE4,0xE2);
 3875              		.loc 1 3225 0
 3876 0698 1221     		movs	r1, #18
 3877 069a E320     		movs	r0, #227
 3878 069c FFF7FEFF 		bl	VXISI2CWrite
 3879              	.LVL434:
3226:Src/main.c    **** 	VXISI2CWrite(0xE5,0xD0);
 3880              		.loc 1 3226 0
 3881 06a0 E221     		movs	r1, #226
 3882 06a2 E420     		movs	r0, #228
 3883 06a4 FFF7FEFF 		bl	VXISI2CWrite
 3884              	.LVL435:
3227:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);
 3885              		.loc 1 3227 0
 3886 06a8 D021     		movs	r1, #208
 3887 06aa E520     		movs	r0, #229
 3888 06ac FFF7FEFF 		bl	VXISI2CWrite
 3889              	.LVL436:
3228:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);
 3890              		.loc 1 3228 0
 3891 06b0 0021     		movs	r1, #0
 3892 06b2 E620     		movs	r0, #230
 3893 06b4 FFF7FEFF 		bl	VXISI2CWrite
 3894              	.LVL437:
3229:Src/main.c    **** 	VXISI2CWrite(0xE8,0x0F);
 3895              		.loc 1 3229 0
 3896 06b8 0021     		movs	r1, #0
 3897 06ba E720     		movs	r0, #231
 3898 06bc FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccQZgaDW.s 			page 154


 3899              	.LVL438:
3230:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);
 3900              		.loc 1 3230 0
 3901 06c0 0F21     		movs	r1, #15
 3902 06c2 E820     		movs	r0, #232
 3903 06c4 FFF7FEFF 		bl	VXISI2CWrite
 3904              	.LVL439:
3231:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);
 3905              		.loc 1 3231 0
 3906 06c8 0021     		movs	r1, #0
 3907 06ca E920     		movs	r0, #233
 3908 06cc FFF7FEFF 		bl	VXISI2CWrite
 3909              	.LVL440:
3232:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);
 3910              		.loc 1 3232 0
 3911 06d0 0021     		movs	r1, #0
 3912 06d2 EA20     		movs	r0, #234
 3913 06d4 FFF7FEFF 		bl	VXISI2CWrite
 3914              	.LVL441:
3233:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);
 3915              		.loc 1 3233 0
 3916 06d8 0021     		movs	r1, #0
 3917 06da EB20     		movs	r0, #235
 3918 06dc FFF7FEFF 		bl	VXISI2CWrite
 3919              	.LVL442:
3234:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);
 3920              		.loc 1 3234 0
 3921 06e0 8821     		movs	r1, #136
 3922 06e2 EC20     		movs	r0, #236
 3923 06e4 FFF7FEFF 		bl	VXISI2CWrite
 3924              	.LVL443:
3235:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);
 3925              		.loc 1 3235 0
 3926 06e8 0021     		movs	r1, #0
 3927 06ea ED20     		movs	r0, #237
 3928 06ec FFF7FEFF 		bl	VXISI2CWrite
 3929              	.LVL444:
3236:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);
 3930              		.loc 1 3236 0
 3931 06f0 0021     		movs	r1, #0
 3932 06f2 EE20     		movs	r0, #238
 3933 06f4 FFF7FEFF 		bl	VXISI2CWrite
 3934              	.LVL445:
3237:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);
 3935              		.loc 1 3237 0
 3936 06f8 0021     		movs	r1, #0
 3937 06fa EF20     		movs	r0, #239
 3938 06fc FFF7FEFF 		bl	VXISI2CWrite
 3939              	.LVL446:
3238:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);
 3940              		.loc 1 3238 0
 3941 0700 3021     		movs	r1, #48
 3942 0702 F020     		movs	r0, #240
 3943 0704 FFF7FEFF 		bl	VXISI2CWrite
 3944              	.LVL447:
3239:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);
 3945              		.loc 1 3239 0
ARM GAS  /tmp/ccQZgaDW.s 			page 155


 3946 0708 4321     		movs	r1, #67
 3947 070a F120     		movs	r0, #241
 3948 070c FFF7FEFF 		bl	VXISI2CWrite
 3949              	.LVL448:
3240:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);
 3950              		.loc 1 3240 0
 3951 0710 1F21     		movs	r1, #31
 3952 0712 F220     		movs	r0, #242
 3953 0714 FFF7FEFF 		bl	VXISI2CWrite
 3954              	.LVL449:
3241:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);
 3955              		.loc 1 3241 0
 3956 0718 1F21     		movs	r1, #31
 3957 071a F320     		movs	r0, #243
 3958 071c FFF7FEFF 		bl	VXISI2CWrite
 3959              	.LVL450:
3242:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);
 3960              		.loc 1 3242 0
 3961 0720 2221     		movs	r1, #34
 3962 0722 F420     		movs	r0, #244
 3963 0724 FFF7FEFF 		bl	VXISI2CWrite
 3964              	.LVL451:
3243:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);
 3965              		.loc 1 3243 0
 3966 0728 7321     		movs	r1, #115
 3967 072a F520     		movs	r0, #245
 3968 072c FFF7FEFF 		bl	VXISI2CWrite
 3969              	.LVL452:
3244:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);
 3970              		.loc 1 3244 0
 3971 0730 5321     		movs	r1, #83
 3972 0732 F620     		movs	r0, #246
 3973 0734 FFF7FEFF 		bl	VXISI2CWrite
 3974              	.LVL453:
3245:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);
 3975              		.loc 1 3245 0
 3976 0738 8021     		movs	r1, #128
 3977 073a F720     		movs	r0, #247
 3978 073c FFF7FEFF 		bl	VXISI2CWrite
 3979              	.LVL454:
3246:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);
 3980              		.loc 1 3246 0
 3981 0740 0121     		movs	r1, #1
 3982 0742 F820     		movs	r0, #248
 3983 0744 FFF7FEFF 		bl	VXISI2CWrite
 3984              	.LVL455:
3247:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);
 3985              		.loc 1 3247 0
 3986 0748 0121     		movs	r1, #1
 3987 074a F920     		movs	r0, #249
 3988 074c FFF7FEFF 		bl	VXISI2CWrite
 3989              	.LVL456:
3248:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);
 3990              		.loc 1 3248 0
 3991 0750 0021     		movs	r1, #0
 3992 0752 FA20     		movs	r0, #250
 3993 0754 FFF7FEFF 		bl	VXISI2CWrite
ARM GAS  /tmp/ccQZgaDW.s 			page 156


 3994              	.LVL457:
3249:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);
 3995              		.loc 1 3249 0
 3996 0758 0021     		movs	r1, #0
 3997 075a FB20     		movs	r0, #251
 3998 075c FFF7FEFF 		bl	VXISI2CWrite
 3999              	.LVL458:
3250:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);
 4000              		.loc 1 3250 0
 4001 0760 0021     		movs	r1, #0
 4002 0762 FC20     		movs	r0, #252
 4003 0764 FFF7FEFF 		bl	VXISI2CWrite
 4004              	.LVL459:
3251:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);
 4005              		.loc 1 3251 0
 4006 0768 7021     		movs	r1, #112
 4007 076a FD20     		movs	r0, #253
 4008 076c FFF7FEFF 		bl	VXISI2CWrite
 4009              	.LVL460:
3252:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);
 4010              		.loc 1 3252 0
 4011 0770 4021     		movs	r1, #64
 4012 0772 FE20     		movs	r0, #254
 4013 0774 FFF7FEFF 		bl	VXISI2CWrite
 4014              	.LVL461:
3253:Src/main.c    **** 					 
 4015              		.loc 1 3253 0
 4016 0778 0721     		movs	r1, #7
 4017 077a FF20     		movs	r0, #255
 4018 077c FFF7FEFF 		bl	VXISI2CWrite
 4019              	.LVL462:
3257:Src/main.c    **** 
 4020              		.loc 1 3257 0
 4021 0780 08BD     		pop	{r3, pc}
 4022              		.cfi_endproc
 4023              	.LFE91:
 4025 0782 00BF     		.section	.text.SET_VS4210_1280_720_out,"ax",%progbits
 4026              		.align	1
 4027              		.global	SET_VS4210_1280_720_out
 4028              		.syntax unified
 4029              		.thumb
 4030              		.thumb_func
 4031              		.fpu softvfp
 4033              	SET_VS4210_1280_720_out:
 4034              	.LFB92:
3260:Src/main.c    **** 	Printf("\r\nSET_VS4210_1280_720_out");
 4035              		.loc 1 3260 0
 4036              		.cfi_startproc
 4037              		@ args = 0, pretend = 0, frame = 0
 4038              		@ frame_needed = 0, uses_anonymous_args = 0
 4039 0000 08B5     		push	{r3, lr}
 4040              	.LCFI37:
 4041              		.cfi_def_cfa_offset 8
 4042              		.cfi_offset 3, -8
 4043              		.cfi_offset 14, -4
3261:Src/main.c    **** 
 4044              		.loc 1 3261 0
ARM GAS  /tmp/ccQZgaDW.s 			page 157


 4045 0002 FE48     		ldr	r0, .L193
 4046 0004 FFF7FEFF 		bl	Printf
 4047              	.LVL463:
3263:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);
 4048              		.loc 1 3263 0
 4049 0008 0021     		movs	r1, #0
 4050 000a 0120     		movs	r0, #1
 4051 000c FFF7FEFF 		bl	VXISI2CWrite
 4052              	.LVL464:
3264:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);
 4053              		.loc 1 3264 0
 4054 0010 0021     		movs	r1, #0
 4055 0012 0220     		movs	r0, #2
 4056 0014 FFF7FEFF 		bl	VXISI2CWrite
 4057              	.LVL465:
3265:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);
 4058              		.loc 1 3265 0
 4059 0018 7521     		movs	r1, #117
 4060 001a 0320     		movs	r0, #3
 4061 001c FFF7FEFF 		bl	VXISI2CWrite
 4062              	.LVL466:
3266:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);
 4063              		.loc 1 3266 0
 4064 0020 1821     		movs	r1, #24
 4065 0022 0420     		movs	r0, #4
 4066 0024 FFF7FEFF 		bl	VXISI2CWrite
 4067              	.LVL467:
3267:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);
 4068              		.loc 1 3267 0
 4069 0028 8021     		movs	r1, #128
 4070 002a 0520     		movs	r0, #5
 4071 002c FFF7FEFF 		bl	VXISI2CWrite
 4072              	.LVL468:
3268:Src/main.c    **** 	VXISI2CWrite(0x07,0x08);
 4073              		.loc 1 3268 0
 4074 0030 2021     		movs	r1, #32
 4075 0032 0620     		movs	r0, #6
 4076 0034 FFF7FEFF 		bl	VXISI2CWrite
 4077              	.LVL469:
3269:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);
 4078              		.loc 1 3269 0
 4079 0038 0821     		movs	r1, #8
 4080 003a 0720     		movs	r0, #7
 4081 003c FFF7FEFF 		bl	VXISI2CWrite
 4082              	.LVL470:
3270:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);
 4083              		.loc 1 3270 0
 4084 0040 4021     		movs	r1, #64
 4085 0042 0820     		movs	r0, #8
 4086 0044 FFF7FEFF 		bl	VXISI2CWrite
 4087              	.LVL471:
3271:Src/main.c    **** 	VXISI2CWrite(0x0A,0x41);
 4088              		.loc 1 3271 0
 4089 0048 0A21     		movs	r1, #10
 4090 004a 0920     		movs	r0, #9
 4091 004c FFF7FEFF 		bl	VXISI2CWrite
 4092              	.LVL472:
ARM GAS  /tmp/ccQZgaDW.s 			page 158


3272:Src/main.c    **** 	VXISI2CWrite(0x0B,0x07);
 4093              		.loc 1 3272 0
 4094 0050 4121     		movs	r1, #65
 4095 0052 0A20     		movs	r0, #10
 4096 0054 FFF7FEFF 		bl	VXISI2CWrite
 4097              	.LVL473:
3273:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);
 4098              		.loc 1 3273 0
 4099 0058 0721     		movs	r1, #7
 4100 005a 0B20     		movs	r0, #11
 4101 005c FFF7FEFF 		bl	VXISI2CWrite
 4102              	.LVL474:
3274:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);
 4103              		.loc 1 3274 0
 4104 0060 0021     		movs	r1, #0
 4105 0062 0C20     		movs	r0, #12
 4106 0064 FFF7FEFF 		bl	VXISI2CWrite
 4107              	.LVL475:
3275:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);
 4108              		.loc 1 3275 0
 4109 0068 2021     		movs	r1, #32
 4110 006a 0D20     		movs	r0, #13
 4111 006c FFF7FEFF 		bl	VXISI2CWrite
 4112              	.LVL476:
3276:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);
 4113              		.loc 1 3276 0
 4114 0070 1021     		movs	r1, #16
 4115 0072 0E20     		movs	r0, #14
 4116 0074 FFF7FEFF 		bl	VXISI2CWrite
 4117              	.LVL477:
3277:Src/main.c    **** 	VXISI2CWrite(0x10,0x80);
 4118              		.loc 1 3277 0
 4119 0078 0021     		movs	r1, #0
 4120 007a 0F20     		movs	r0, #15
 4121 007c FFF7FEFF 		bl	VXISI2CWrite
 4122              	.LVL478:
3278:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);
 4123              		.loc 1 3278 0
 4124 0080 8021     		movs	r1, #128
 4125 0082 1020     		movs	r0, #16
 4126 0084 FFF7FEFF 		bl	VXISI2CWrite
 4127              	.LVL479:
3279:Src/main.c    **** 	VXISI2CWrite(0x12,0x21);
 4128              		.loc 1 3279 0
 4129 0088 8221     		movs	r1, #130
 4130 008a 1120     		movs	r0, #17
 4131 008c FFF7FEFF 		bl	VXISI2CWrite
 4132              	.LVL480:
3280:Src/main.c    **** 	VXISI2CWrite(0x13,0xD0);
 4133              		.loc 1 3280 0
 4134 0090 2121     		movs	r1, #33
 4135 0092 1220     		movs	r0, #18
 4136 0094 FFF7FEFF 		bl	VXISI2CWrite
 4137              	.LVL481:
3281:Src/main.c    **** 	VXISI2CWrite(0x14,0xE0);
 4138              		.loc 1 3281 0
 4139 0098 D021     		movs	r1, #208
ARM GAS  /tmp/ccQZgaDW.s 			page 159


 4140 009a 1320     		movs	r0, #19
 4141 009c FFF7FEFF 		bl	VXISI2CWrite
 4142              	.LVL482:
3282:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);
 4143              		.loc 1 3282 0
 4144 00a0 E021     		movs	r1, #224
 4145 00a2 1420     		movs	r0, #20
 4146 00a4 FFF7FEFF 		bl	VXISI2CWrite
 4147              	.LVL483:
3283:Src/main.c    **** 	VXISI2CWrite(0x16,0xFE);
 4148              		.loc 1 3283 0
 4149 00a8 7821     		movs	r1, #120
 4150 00aa 1520     		movs	r0, #21
 4151 00ac FFF7FEFF 		bl	VXISI2CWrite
 4152              	.LVL484:
3284:Src/main.c    **** 	VXISI2CWrite(0x17,0x00);
 4153              		.loc 1 3284 0
 4154 00b0 FE21     		movs	r1, #254
 4155 00b2 1620     		movs	r0, #22
 4156 00b4 FFF7FEFF 		bl	VXISI2CWrite
 4157              	.LVL485:
3285:Src/main.c    **** 	VXISI2CWrite(0x18,0xC8);
 4158              		.loc 1 3285 0
 4159 00b8 0021     		movs	r1, #0
 4160 00ba 1720     		movs	r0, #23
 4161 00bc FFF7FEFF 		bl	VXISI2CWrite
 4162              	.LVL486:
3286:Src/main.c    **** 	VXISI2CWrite(0x19,0x00);
 4163              		.loc 1 3286 0
 4164 00c0 C821     		movs	r1, #200
 4165 00c2 1820     		movs	r0, #24
 4166 00c4 FFF7FEFF 		bl	VXISI2CWrite
 4167              	.LVL487:
3287:Src/main.c    **** 	VXISI2CWrite(0x1A,0x23);
 4168              		.loc 1 3287 0
 4169 00c8 0021     		movs	r1, #0
 4170 00ca 1920     		movs	r0, #25
 4171 00cc FFF7FEFF 		bl	VXISI2CWrite
 4172              	.LVL488:
3288:Src/main.c    **** 	VXISI2CWrite(0x1B,0x00);
 4173              		.loc 1 3288 0
 4174 00d0 2321     		movs	r1, #35
 4175 00d2 1A20     		movs	r0, #26
 4176 00d4 FFF7FEFF 		bl	VXISI2CWrite
 4177              	.LVL489:
3289:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);
 4178              		.loc 1 3289 0
 4179 00d8 0021     		movs	r1, #0
 4180 00da 1B20     		movs	r0, #27
 4181 00dc FFF7FEFF 		bl	VXISI2CWrite
 4182              	.LVL490:
3290:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);
 4183              		.loc 1 3290 0
 4184 00e0 0021     		movs	r1, #0
 4185 00e2 1C20     		movs	r0, #28
 4186 00e4 FFF7FEFF 		bl	VXISI2CWrite
 4187              	.LVL491:
ARM GAS  /tmp/ccQZgaDW.s 			page 160


3291:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);
 4188              		.loc 1 3291 0
 4189 00e8 0021     		movs	r1, #0
 4190 00ea 1D20     		movs	r0, #29
 4191 00ec FFF7FEFF 		bl	VXISI2CWrite
 4192              	.LVL492:
3292:Src/main.c    **** 	VXISI2CWrite(0x1F,0x32);
 4193              		.loc 1 3292 0
 4194 00f0 2021     		movs	r1, #32
 4195 00f2 1E20     		movs	r0, #30
 4196 00f4 FFF7FEFF 		bl	VXISI2CWrite
 4197              	.LVL493:
3293:Src/main.c    **** 	VXISI2CWrite(0x20,0x5A);
 4198              		.loc 1 3293 0
 4199 00f8 3221     		movs	r1, #50
 4200 00fa 1F20     		movs	r0, #31
 4201 00fc FFF7FEFF 		bl	VXISI2CWrite
 4202              	.LVL494:
3294:Src/main.c    **** 	VXISI2CWrite(0x21,0x0D);
 4203              		.loc 1 3294 0
 4204 0100 5A21     		movs	r1, #90
 4205 0102 2020     		movs	r0, #32
 4206 0104 FFF7FEFF 		bl	VXISI2CWrite
 4207              	.LVL495:
3295:Src/main.c    **** 	VXISI2CWrite(0x22,0x32);
 4208              		.loc 1 3295 0
 4209 0108 0D21     		movs	r1, #13
 4210 010a 2120     		movs	r0, #33
 4211 010c FFF7FEFF 		bl	VXISI2CWrite
 4212              	.LVL496:
3296:Src/main.c    **** 	VXISI2CWrite(0x23,0x5A);
 4213              		.loc 1 3296 0
 4214 0110 3221     		movs	r1, #50
 4215 0112 2220     		movs	r0, #34
 4216 0114 FFF7FEFF 		bl	VXISI2CWrite
 4217              	.LVL497:
3297:Src/main.c    **** 	VXISI2CWrite(0x24,0xD0);
 4218              		.loc 1 3297 0
 4219 0118 5A21     		movs	r1, #90
 4220 011a 2320     		movs	r0, #35
 4221 011c FFF7FEFF 		bl	VXISI2CWrite
 4222              	.LVL498:
3298:Src/main.c    **** 	VXISI2CWrite(0x25,0x21);
 4223              		.loc 1 3298 0
 4224 0120 D021     		movs	r1, #208
 4225 0122 2420     		movs	r0, #36
 4226 0124 FFF7FEFF 		bl	VXISI2CWrite
 4227              	.LVL499:
3299:Src/main.c    **** 	VXISI2CWrite(0x26,0x0D);
 4228              		.loc 1 3299 0
 4229 0128 2121     		movs	r1, #33
 4230 012a 2520     		movs	r0, #37
 4231 012c FFF7FEFF 		bl	VXISI2CWrite
 4232              	.LVL500:
3300:Src/main.c    **** 	VXISI2CWrite(0x27,0xE0);
 4233              		.loc 1 3300 0
 4234 0130 0D21     		movs	r1, #13
ARM GAS  /tmp/ccQZgaDW.s 			page 161


 4235 0132 2620     		movs	r0, #38
 4236 0134 FFF7FEFF 		bl	VXISI2CWrite
 4237              	.LVL501:
3301:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);
 4238              		.loc 1 3301 0
 4239 0138 E021     		movs	r1, #224
 4240 013a 2720     		movs	r0, #39
 4241 013c FFF7FEFF 		bl	VXISI2CWrite
 4242              	.LVL502:
3302:Src/main.c    **** 	VXISI2CWrite(0x29,0x00);
 4243              		.loc 1 3302 0
 4244 0140 F021     		movs	r1, #240
 4245 0142 2820     		movs	r0, #40
 4246 0144 FFF7FEFF 		bl	VXISI2CWrite
 4247              	.LVL503:
3303:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);
 4248              		.loc 1 3303 0
 4249 0148 0021     		movs	r1, #0
 4250 014a 2920     		movs	r0, #41
 4251 014c FFF7FEFF 		bl	VXISI2CWrite
 4252              	.LVL504:
3304:Src/main.c    **** 	VXISI2CWrite(0x2B,0x01);
 4253              		.loc 1 3304 0
 4254 0150 0021     		movs	r1, #0
 4255 0152 2A20     		movs	r0, #42
 4256 0154 FFF7FEFF 		bl	VXISI2CWrite
 4257              	.LVL505:
3305:Src/main.c    **** 	VXISI2CWrite(0x2C,0xFF);
 4258              		.loc 1 3305 0
 4259 0158 0121     		movs	r1, #1
 4260 015a 2B20     		movs	r0, #43
 4261 015c FFF7FEFF 		bl	VXISI2CWrite
 4262              	.LVL506:
3306:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);
 4263              		.loc 1 3306 0
 4264 0160 FF21     		movs	r1, #255
 4265 0162 2C20     		movs	r0, #44
 4266 0164 FFF7FEFF 		bl	VXISI2CWrite
 4267              	.LVL507:
3307:Src/main.c    **** 	VXISI2CWrite(0x2E,0x12);
 4268              		.loc 1 3307 0
 4269 0168 0021     		movs	r1, #0
 4270 016a 2D20     		movs	r0, #45
 4271 016c FFF7FEFF 		bl	VXISI2CWrite
 4272              	.LVL508:
3308:Src/main.c    **** 	VXISI2CWrite(0x2F,0xD0);
 4273              		.loc 1 3308 0
 4274 0170 1221     		movs	r1, #18
 4275 0172 2E20     		movs	r0, #46
 4276 0174 FFF7FEFF 		bl	VXISI2CWrite
 4277              	.LVL509:
3309:Src/main.c    **** 	VXISI2CWrite(0x30,0xE0);
 4278              		.loc 1 3309 0
 4279 0178 D021     		movs	r1, #208
 4280 017a 2F20     		movs	r0, #47
 4281 017c FFF7FEFF 		bl	VXISI2CWrite
 4282              	.LVL510:
ARM GAS  /tmp/ccQZgaDW.s 			page 162


3310:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);
 4283              		.loc 1 3310 0
 4284 0180 E021     		movs	r1, #224
 4285 0182 3020     		movs	r0, #48
 4286 0184 FFF7FEFF 		bl	VXISI2CWrite
 4287              	.LVL511:
3311:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);
 4288              		.loc 1 3311 0
 4289 0188 8021     		movs	r1, #128
 4290 018a 3120     		movs	r0, #49
 4291 018c FFF7FEFF 		bl	VXISI2CWrite
 4292              	.LVL512:
3312:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);
 4293              		.loc 1 3312 0
 4294 0190 8021     		movs	r1, #128
 4295 0192 3220     		movs	r0, #50
 4296 0194 FFF7FEFF 		bl	VXISI2CWrite
 4297              	.LVL513:
3313:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);
 4298              		.loc 1 3313 0
 4299 0198 8021     		movs	r1, #128
 4300 019a 3320     		movs	r0, #51
 4301 019c FFF7FEFF 		bl	VXISI2CWrite
 4302              	.LVL514:
3314:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);
 4303              		.loc 1 3314 0
 4304 01a0 A021     		movs	r1, #160
 4305 01a2 3420     		movs	r0, #52
 4306 01a4 FFF7FEFF 		bl	VXISI2CWrite
 4307              	.LVL515:
3315:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);
 4308              		.loc 1 3315 0
 4309 01a8 1821     		movs	r1, #24
 4310 01aa 3520     		movs	r0, #53
 4311 01ac FFF7FEFF 		bl	VXISI2CWrite
 4312              	.LVL516:
3316:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);
 4313              		.loc 1 3316 0
 4314 01b0 4621     		movs	r1, #70
 4315 01b2 3620     		movs	r0, #54
 4316 01b4 FFF7FEFF 		bl	VXISI2CWrite
 4317              	.LVL517:
3317:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);
 4318              		.loc 1 3317 0
 4319 01b8 6421     		movs	r1, #100
 4320 01ba 3720     		movs	r0, #55
 4321 01bc FFF7FEFF 		bl	VXISI2CWrite
 4322              	.LVL518:
3318:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);
 4323              		.loc 1 3318 0
 4324 01c0 0021     		movs	r1, #0
 4325 01c2 3820     		movs	r0, #56
 4326 01c4 FFF7FEFF 		bl	VXISI2CWrite
 4327              	.LVL519:
3319:Src/main.c    **** 	VXISI2CWrite(0x3A,0x03);
 4328              		.loc 1 3319 0
 4329 01c8 FF21     		movs	r1, #255
ARM GAS  /tmp/ccQZgaDW.s 			page 163


 4330 01ca 3920     		movs	r0, #57
 4331 01cc FFF7FEFF 		bl	VXISI2CWrite
 4332              	.LVL520:
3320:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);
 4333              		.loc 1 3320 0
 4334 01d0 0321     		movs	r1, #3
 4335 01d2 3A20     		movs	r0, #58
 4336 01d4 FFF7FEFF 		bl	VXISI2CWrite
 4337              	.LVL521:
3321:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);
 4338              		.loc 1 3321 0
 4339 01d8 8021     		movs	r1, #128
 4340 01da 3B20     		movs	r0, #59
 4341 01dc FFF7FEFF 		bl	VXISI2CWrite
 4342              	.LVL522:
3322:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);
 4343              		.loc 1 3322 0
 4344 01e0 8021     		movs	r1, #128
 4345 01e2 3C20     		movs	r0, #60
 4346 01e4 FFF7FEFF 		bl	VXISI2CWrite
 4347              	.LVL523:
3323:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);
 4348              		.loc 1 3323 0
 4349 01e8 8021     		movs	r1, #128
 4350 01ea 3D20     		movs	r0, #61
 4351 01ec FFF7FEFF 		bl	VXISI2CWrite
 4352              	.LVL524:
3324:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);
 4353              		.loc 1 3324 0
 4354 01f0 8021     		movs	r1, #128
 4355 01f2 3E20     		movs	r0, #62
 4356 01f4 FFF7FEFF 		bl	VXISI2CWrite
 4357              	.LVL525:
3325:Src/main.c    **** 	//VXISI2CWrite(0xVXISI);2CWrite(0x80
 4358              		.loc 1 3325 0
 4359 01f8 8021     		movs	r1, #128
 4360 01fa 3F20     		movs	r0, #63
 4361 01fc FFF7FEFF 		bl	VXISI2CWrite
 4362              	.LVL526:
3327:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);
 4363              		.loc 1 3327 0
 4364 0200 6021     		movs	r1, #96
 4365 0202 4120     		movs	r0, #65
 4366 0204 FFF7FEFF 		bl	VXISI2CWrite
 4367              	.LVL527:
3328:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);
 4368              		.loc 1 3328 0
 4369 0208 5F21     		movs	r1, #95
 4370 020a 4220     		movs	r0, #66
 4371 020c FFF7FEFF 		bl	VXISI2CWrite
 4372              	.LVL528:
3329:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);
 4373              		.loc 1 3329 0
 4374 0210 3721     		movs	r1, #55
 4375 0212 4320     		movs	r0, #67
 4376 0214 FFF7FEFF 		bl	VXISI2CWrite
 4377              	.LVL529:
ARM GAS  /tmp/ccQZgaDW.s 			page 164


3330:Src/main.c    **** 	VXISI2CWrite(0x45,0x04);
 4378              		.loc 1 3330 0
 4379 0218 1421     		movs	r1, #20
 4380 021a 4420     		movs	r0, #68
 4381 021c FFF7FEFF 		bl	VXISI2CWrite
 4382              	.LVL530:
3331:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);
 4383              		.loc 1 3331 0
 4384 0220 0421     		movs	r1, #4
 4385 0222 4520     		movs	r0, #69
 4386 0224 FFF7FEFF 		bl	VXISI2CWrite
 4387              	.LVL531:
3332:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);
 4388              		.loc 1 3332 0
 4389 0228 0021     		movs	r1, #0
 4390 022a 4620     		movs	r0, #70
 4391 022c FFF7FEFF 		bl	VXISI2CWrite
 4392              	.LVL532:
3333:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);
 4393              		.loc 1 3333 0
 4394 0230 0021     		movs	r1, #0
 4395 0232 4720     		movs	r0, #71
 4396 0234 FFF7FEFF 		bl	VXISI2CWrite
 4397              	.LVL533:
3334:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);
 4398              		.loc 1 3334 0
 4399 0238 0021     		movs	r1, #0
 4400 023a 4820     		movs	r0, #72
 4401 023c FFF7FEFF 		bl	VXISI2CWrite
 4402              	.LVL534:
3335:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);
 4403              		.loc 1 3335 0
 4404 0240 0021     		movs	r1, #0
 4405 0242 4920     		movs	r0, #73
 4406 0244 FFF7FEFF 		bl	VXISI2CWrite
 4407              	.LVL535:
3336:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);
 4408              		.loc 1 3336 0
 4409 0248 2021     		movs	r1, #32
 4410 024a 4B20     		movs	r0, #75
 4411 024c FFF7FEFF 		bl	VXISI2CWrite
 4412              	.LVL536:
3337:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);
 4413              		.loc 1 3337 0
 4414 0250 0021     		movs	r1, #0
 4415 0252 4C20     		movs	r0, #76
 4416 0254 FFF7FEFF 		bl	VXISI2CWrite
 4417              	.LVL537:
3338:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);
 4418              		.loc 1 3338 0
 4419 0258 0021     		movs	r1, #0
 4420 025a 4D20     		movs	r0, #77
 4421 025c FFF7FEFF 		bl	VXISI2CWrite
 4422              	.LVL538:
3339:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);
 4423              		.loc 1 3339 0
 4424 0260 0021     		movs	r1, #0
ARM GAS  /tmp/ccQZgaDW.s 			page 165


 4425 0262 4E20     		movs	r0, #78
 4426 0264 FFF7FEFF 		bl	VXISI2CWrite
 4427              	.LVL539:
3340:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);
 4428              		.loc 1 3340 0
 4429 0268 7F21     		movs	r1, #127
 4430 026a 4F20     		movs	r0, #79
 4431 026c FFF7FEFF 		bl	VXISI2CWrite
 4432              	.LVL540:
3341:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);
 4433              		.loc 1 3341 0
 4434 0270 2021     		movs	r1, #32
 4435 0272 5020     		movs	r0, #80
 4436 0274 FFF7FEFF 		bl	VXISI2CWrite
 4437              	.LVL541:
3342:Src/main.c    **** 	VXISI2CWrite(0x52,0x00);
 4438              		.loc 1 3342 0
 4439 0278 0021     		movs	r1, #0
 4440 027a 5120     		movs	r0, #81
 4441 027c FFF7FEFF 		bl	VXISI2CWrite
 4442              	.LVL542:
3343:Src/main.c    **** 	VXISI2CWrite(0x53,0x04);
 4443              		.loc 1 3343 0
 4444 0280 0021     		movs	r1, #0
 4445 0282 5220     		movs	r0, #82
 4446 0284 FFF7FEFF 		bl	VXISI2CWrite
 4447              	.LVL543:
3344:Src/main.c    **** 	VXISI2CWrite(0x54,0x00);
 4448              		.loc 1 3344 0
 4449 0288 0421     		movs	r1, #4
 4450 028a 5320     		movs	r0, #83
 4451 028c FFF7FEFF 		bl	VXISI2CWrite
 4452              	.LVL544:
3345:Src/main.c    **** 	VXISI2CWrite(0x55,0xE0);
 4453              		.loc 1 3345 0
 4454 0290 0021     		movs	r1, #0
 4455 0292 5420     		movs	r0, #84
 4456 0294 FFF7FEFF 		bl	VXISI2CWrite
 4457              	.LVL545:
3346:Src/main.c    **** 	VXISI2CWrite(0x56,0x40);
 4458              		.loc 1 3346 0
 4459 0298 E021     		movs	r1, #224
 4460 029a 5520     		movs	r0, #85
 4461 029c FFF7FEFF 		bl	VXISI2CWrite
 4462              	.LVL546:
3347:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);
 4463              		.loc 1 3347 0
 4464 02a0 4021     		movs	r1, #64
 4465 02a2 5620     		movs	r0, #86
 4466 02a4 FFF7FEFF 		bl	VXISI2CWrite
 4467              	.LVL547:
3348:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);
 4468              		.loc 1 3348 0
 4469 02a8 0421     		movs	r1, #4
 4470 02aa 5720     		movs	r0, #87
 4471 02ac FFF7FEFF 		bl	VXISI2CWrite
 4472              	.LVL548:
ARM GAS  /tmp/ccQZgaDW.s 			page 166


3349:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);
 4473              		.loc 1 3349 0
 4474 02b0 0021     		movs	r1, #0
 4475 02b2 5820     		movs	r0, #88
 4476 02b4 FFF7FEFF 		bl	VXISI2CWrite
 4477              	.LVL549:
3350:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);
 4478              		.loc 1 3350 0
 4479 02b8 0821     		movs	r1, #8
 4480 02ba 5920     		movs	r0, #89
 4481 02bc FFF7FEFF 		bl	VXISI2CWrite
 4482              	.LVL550:
3351:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);
 4483              		.loc 1 3351 0
 4484 02c0 1021     		movs	r1, #16
 4485 02c2 5A20     		movs	r0, #90
 4486 02c4 FFF7FEFF 		bl	VXISI2CWrite
 4487              	.LVL551:
3352:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);
 4488              		.loc 1 3352 0
 4489 02c8 0021     		movs	r1, #0
 4490 02ca 5B20     		movs	r0, #91
 4491 02cc FFF7FEFF 		bl	VXISI2CWrite
 4492              	.LVL552:
3353:Src/main.c    **** 	VXISI2CWrite(0x5D,0x40);
 4493              		.loc 1 3353 0
 4494 02d0 6821     		movs	r1, #104
 4495 02d2 5C20     		movs	r0, #92
 4496 02d4 FFF7FEFF 		bl	VXISI2CWrite
 4497              	.LVL553:
3354:Src/main.c    **** 	VXISI2CWrite(0x5E,0x08);
 4498              		.loc 1 3354 0
 4499 02d8 4021     		movs	r1, #64
 4500 02da 5D20     		movs	r0, #93
 4501 02dc FFF7FEFF 		bl	VXISI2CWrite
 4502              	.LVL554:
3355:Src/main.c    **** 	VXISI2CWrite(0x5F,0x00);
 4503              		.loc 1 3355 0
 4504 02e0 0821     		movs	r1, #8
 4505 02e2 5E20     		movs	r0, #94
 4506 02e4 FFF7FEFF 		bl	VXISI2CWrite
 4507              	.LVL555:
3356:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);
 4508              		.loc 1 3356 0
 4509 02e8 0021     		movs	r1, #0
 4510 02ea 5F20     		movs	r0, #95
 4511 02ec FFF7FEFF 		bl	VXISI2CWrite
 4512              	.LVL556:
3357:Src/main.c    **** 	VXISI2CWrite(0x61,0x54);
 4513              		.loc 1 3357 0
 4514 02f0 E021     		movs	r1, #224
 4515 02f2 6020     		movs	r0, #96
 4516 02f4 FFF7FEFF 		bl	VXISI2CWrite
 4517              	.LVL557:
3358:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);
 4518              		.loc 1 3358 0
 4519 02f8 5421     		movs	r1, #84
ARM GAS  /tmp/ccQZgaDW.s 			page 167


 4520 02fa 6120     		movs	r0, #97
 4521 02fc FFF7FEFF 		bl	VXISI2CWrite
 4522              	.LVL558:
3359:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);
 4523              		.loc 1 3359 0
 4524 0300 3321     		movs	r1, #51
 4525 0302 6220     		movs	r0, #98
 4526 0304 FFF7FEFF 		bl	VXISI2CWrite
 4527              	.LVL559:
3360:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);
 4528              		.loc 1 3360 0
 4529 0308 0121     		movs	r1, #1
 4530 030a 6320     		movs	r0, #99
 4531 030c FFF7FEFF 		bl	VXISI2CWrite
 4532              	.LVL560:
3361:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);
 4533              		.loc 1 3361 0
 4534 0310 FF21     		movs	r1, #255
 4535 0312 6420     		movs	r0, #100
 4536 0314 FFF7FEFF 		bl	VXISI2CWrite
 4537              	.LVL561:
3362:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);
 4538              		.loc 1 3362 0
 4539 0318 0121     		movs	r1, #1
 4540 031a 6520     		movs	r0, #101
 4541 031c FFF7FEFF 		bl	VXISI2CWrite
 4542              	.LVL562:
3363:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);
 4543              		.loc 1 3363 0
 4544 0320 FF21     		movs	r1, #255
 4545 0322 6620     		movs	r0, #102
 4546 0324 FFF7FEFF 		bl	VXISI2CWrite
 4547              	.LVL563:
3364:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);
 4548              		.loc 1 3364 0
 4549 0328 8921     		movs	r1, #137
 4550 032a 6720     		movs	r0, #103
 4551 032c FFF7FEFF 		bl	VXISI2CWrite
 4552              	.LVL564:
3365:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);
 4553              		.loc 1 3365 0
 4554 0330 AB21     		movs	r1, #171
 4555 0332 6820     		movs	r0, #104
 4556 0334 FFF7FEFF 		bl	VXISI2CWrite
 4557              	.LVL565:
3366:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);
 4558              		.loc 1 3366 0
 4559 0338 8821     		movs	r1, #136
 4560 033a 6920     		movs	r0, #105
 4561 033c FFF7FEFF 		bl	VXISI2CWrite
 4562              	.LVL566:
3367:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);
 4563              		.loc 1 3367 0
 4564 0340 6E21     		movs	r1, #110
 4565 0342 6A20     		movs	r0, #106
 4566 0344 FFF7FEFF 		bl	VXISI2CWrite
 4567              	.LVL567:
ARM GAS  /tmp/ccQZgaDW.s 			page 168


3368:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);
 4568              		.loc 1 3368 0
 4569 0348 6E21     		movs	r1, #110
 4570 034a 6B20     		movs	r0, #107
 4571 034c FFF7FEFF 		bl	VXISI2CWrite
 4572              	.LVL568:
3369:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);
 4573              		.loc 1 3369 0
 4574 0350 6E21     		movs	r1, #110
 4575 0352 6C20     		movs	r0, #108
 4576 0354 FFF7FEFF 		bl	VXISI2CWrite
 4577              	.LVL569:
3370:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);
 4578              		.loc 1 3370 0
 4579 0358 0021     		movs	r1, #0
 4580 035a 6D20     		movs	r0, #109
 4581 035c FFF7FEFF 		bl	VXISI2CWrite
 4582              	.LVL570:
3371:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);
 4583              		.loc 1 3371 0
 4584 0360 0021     		movs	r1, #0
 4585 0362 6E20     		movs	r0, #110
 4586 0364 FFF7FEFF 		bl	VXISI2CWrite
 4587              	.LVL571:
3372:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);
 4588              		.loc 1 3372 0
 4589 0368 0021     		movs	r1, #0
 4590 036a 6F20     		movs	r0, #111
 4591 036c FFF7FEFF 		bl	VXISI2CWrite
 4592              	.LVL572:
3373:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);
 4593              		.loc 1 3373 0
 4594 0370 0021     		movs	r1, #0
 4595 0372 7020     		movs	r0, #112
 4596 0374 FFF7FEFF 		bl	VXISI2CWrite
 4597              	.LVL573:
3374:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);
 4598              		.loc 1 3374 0
 4599 0378 0021     		movs	r1, #0
 4600 037a 7120     		movs	r0, #113
 4601 037c FFF7FEFF 		bl	VXISI2CWrite
 4602              	.LVL574:
3375:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);
 4603              		.loc 1 3375 0
 4604 0380 0021     		movs	r1, #0
 4605 0382 7220     		movs	r0, #114
 4606 0384 FFF7FEFF 		bl	VXISI2CWrite
 4607              	.LVL575:
3376:Src/main.c    **** 	VXISI2CWrite(0x74,0x00);
 4608              		.loc 1 3376 0
 4609 0388 0021     		movs	r1, #0
 4610 038a 7320     		movs	r0, #115
 4611 038c FFF7FEFF 		bl	VXISI2CWrite
 4612              	.LVL576:
3377:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);
 4613              		.loc 1 3377 0
 4614 0390 0021     		movs	r1, #0
ARM GAS  /tmp/ccQZgaDW.s 			page 169


 4615 0392 7420     		movs	r0, #116
 4616 0394 FFF7FEFF 		bl	VXISI2CWrite
 4617              	.LVL577:
3378:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);
 4618              		.loc 1 3378 0
 4619 0398 FF21     		movs	r1, #255
 4620 039a 7520     		movs	r0, #117
 4621 039c FFF7FEFF 		bl	VXISI2CWrite
 4622              	.LVL578:
3379:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);
 4623              		.loc 1 3379 0
 4624 03a0 FF21     		movs	r1, #255
 4625 03a2 7620     		movs	r0, #118
 4626 03a4 FFF7FEFF 		bl	VXISI2CWrite
 4627              	.LVL579:
3380:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);
 4628              		.loc 1 3380 0
 4629 03a8 FF21     		movs	r1, #255
 4630 03aa 7720     		movs	r0, #119
 4631 03ac FFF7FEFF 		bl	VXISI2CWrite
 4632              	.LVL580:
3381:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);
 4633              		.loc 1 3381 0
 4634 03b0 FF21     		movs	r1, #255
 4635 03b2 7820     		movs	r0, #120
 4636 03b4 FFF7FEFF 		bl	VXISI2CWrite
 4637              	.LVL581:
3382:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);
 4638              		.loc 1 3382 0
 4639 03b8 FF21     		movs	r1, #255
 4640 03ba 7920     		movs	r0, #121
 4641 03bc FFF7FEFF 		bl	VXISI2CWrite
 4642              	.LVL582:
3383:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);
 4643              		.loc 1 3383 0
 4644 03c0 FF21     		movs	r1, #255
 4645 03c2 7A20     		movs	r0, #122
 4646 03c4 FFF7FEFF 		bl	VXISI2CWrite
 4647              	.LVL583:
3384:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);
 4648              		.loc 1 3384 0
 4649 03c8 FF21     		movs	r1, #255
 4650 03ca 7B20     		movs	r0, #123
 4651 03cc FFF7FEFF 		bl	VXISI2CWrite
 4652              	.LVL584:
3385:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);
 4653              		.loc 1 3385 0
 4654 03d0 FF21     		movs	r1, #255
 4655 03d2 7C20     		movs	r0, #124
 4656 03d4 FFF7FEFF 		bl	VXISI2CWrite
 4657              	.LVL585:
3386:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);
 4658              		.loc 1 3386 0
 4659 03d8 F021     		movs	r1, #240
 4660 03da 7D20     		movs	r0, #125
 4661 03dc FFF7FEFF 		bl	VXISI2CWrite
 4662              	.LVL586:
ARM GAS  /tmp/ccQZgaDW.s 			page 170


3387:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);
 4663              		.loc 1 3387 0
 4664 03e0 8021     		movs	r1, #128
 4665 03e2 7E20     		movs	r0, #126
 4666 03e4 FFF7FEFF 		bl	VXISI2CWrite
 4667              	.LVL587:
3388:Src/main.c    **** 	VXISI2CWrite(0x80,0x00);
 4668              		.loc 1 3388 0
 4669 03e8 0021     		movs	r1, #0
 4670 03ea 7F20     		movs	r0, #127
 4671 03ec FFF7FEFF 		bl	VXISI2CWrite
 4672              	.LVL588:
3389:Src/main.c    **** 	VXISI2CWrite(0x81,0x34);
 4673              		.loc 1 3389 0
 4674 03f0 0021     		movs	r1, #0
 4675 03f2 8020     		movs	r0, #128
 4676 03f4 FFF7FEFF 		bl	VXISI2CWrite
 4677              	.LVL589:
 4678 03f8 02E0     		b	.L194
 4679              	.L195:
 4680 03fa 00BF     		.align	2
 4681              	.L193:
 4682 03fc 00000000 		.word	.LC35
 4683              	.L194:
3390:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);
 4684              		.loc 1 3390 0
 4685 0400 3421     		movs	r1, #52
 4686 0402 8120     		movs	r0, #129
 4687 0404 FFF7FEFF 		bl	VXISI2CWrite
 4688              	.LVL590:
3391:Src/main.c    **** 	VXISI2CWrite(0x83,0x05);
 4689              		.loc 1 3391 0
 4690 0408 4021     		movs	r1, #64
 4691 040a 8220     		movs	r0, #130
 4692 040c FFF7FEFF 		bl	VXISI2CWrite
 4693              	.LVL591:
3392:Src/main.c    **** 	VXISI2CWrite(0x84,0x59);
 4694              		.loc 1 3392 0
 4695 0410 0521     		movs	r1, #5
 4696 0412 8320     		movs	r0, #131
 4697 0414 FFF7FEFF 		bl	VXISI2CWrite
 4698              	.LVL592:
3393:Src/main.c    **** 	VXISI2CWrite(0x85,0xFD);
 4699              		.loc 1 3393 0
 4700 0418 5921     		movs	r1, #89
 4701 041a 8420     		movs	r0, #132
 4702 041c FFF7FEFF 		bl	VXISI2CWrite
 4703              	.LVL593:
3394:Src/main.c    **** 	VXISI2CWrite(0x86,0x04);
 4704              		.loc 1 3394 0
 4705 0420 FD21     		movs	r1, #253
 4706 0422 8520     		movs	r0, #133
 4707 0424 FFF7FEFF 		bl	VXISI2CWrite
 4708              	.LVL594:
3395:Src/main.c    **** 	VXISI2CWrite(0x87,0x24);
 4709              		.loc 1 3395 0
 4710 0428 0421     		movs	r1, #4
ARM GAS  /tmp/ccQZgaDW.s 			page 171


 4711 042a 8620     		movs	r0, #134
 4712 042c FFF7FEFF 		bl	VXISI2CWrite
 4713              	.LVL595:
3396:Src/main.c    **** 	VXISI2CWrite(0x88,0x94);
 4714              		.loc 1 3396 0
 4715 0430 2421     		movs	r1, #36
 4716 0432 8720     		movs	r0, #135
 4717 0434 FFF7FEFF 		bl	VXISI2CWrite
 4718              	.LVL596:
3397:Src/main.c    **** 	VXISI2CWrite(0x89,0x58);
 4719              		.loc 1 3397 0
 4720 0438 9421     		movs	r1, #148
 4721 043a 8820     		movs	r0, #136
 4722 043c FFF7FEFF 		bl	VXISI2CWrite
 4723              	.LVL597:
3398:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);
 4724              		.loc 1 3398 0
 4725 0440 5821     		movs	r1, #88
 4726 0442 8920     		movs	r0, #137
 4727 0444 FFF7FEFF 		bl	VXISI2CWrite
 4728              	.LVL598:
3399:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);
 4729              		.loc 1 3399 0
 4730 0448 0021     		movs	r1, #0
 4731 044a 8A20     		movs	r0, #138
 4732 044c FFF7FEFF 		bl	VXISI2CWrite
 4733              	.LVL599:
3400:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);
 4734              		.loc 1 3400 0
 4735 0450 7E21     		movs	r1, #126
 4736 0452 8B20     		movs	r0, #139
 4737 0454 FFF7FEFF 		bl	VXISI2CWrite
 4738              	.LVL600:
3401:Src/main.c    **** 	VXISI2CWrite(0x8D,0x2C);
 4739              		.loc 1 3401 0
 4740 0458 0321     		movs	r1, #3
 4741 045a 8C20     		movs	r0, #140
 4742 045c FFF7FEFF 		bl	VXISI2CWrite
 4743              	.LVL601:
3402:Src/main.c    **** 	VXISI2CWrite(0x8E,0x8C);
 4744              		.loc 1 3402 0
 4745 0460 2C21     		movs	r1, #44
 4746 0462 8D20     		movs	r0, #141
 4747 0464 FFF7FEFF 		bl	VXISI2CWrite
 4748              	.LVL602:
3403:Src/main.c    **** 	VXISI2CWrite(0x8F,0x00);
 4749              		.loc 1 3403 0
 4750 0468 8C21     		movs	r1, #140
 4751 046a 8E20     		movs	r0, #142
 4752 046c FFF7FEFF 		bl	VXISI2CWrite
 4753              	.LVL603:
3404:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);
 4754              		.loc 1 3404 0
 4755 0470 0021     		movs	r1, #0
 4756 0472 8F20     		movs	r0, #143
 4757 0474 FFF7FEFF 		bl	VXISI2CWrite
 4758              	.LVL604:
ARM GAS  /tmp/ccQZgaDW.s 			page 172


3405:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);
 4759              		.loc 1 3405 0
 4760 0478 CC21     		movs	r1, #204
 4761 047a 9020     		movs	r0, #144
 4762 047c FFF7FEFF 		bl	VXISI2CWrite
 4763              	.LVL605:
3406:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);
 4764              		.loc 1 3406 0
 4765 0480 4121     		movs	r1, #65
 4766 0482 9120     		movs	r0, #145
 4767 0484 FFF7FEFF 		bl	VXISI2CWrite
 4768              	.LVL606:
3407:Src/main.c    **** 	VXISI2CWrite(0x93,0x31);
 4769              		.loc 1 3407 0
 4770 0488 C421     		movs	r1, #196
 4771 048a 9220     		movs	r0, #146
 4772 048c FFF7FEFF 		bl	VXISI2CWrite
 4773              	.LVL607:
3408:Src/main.c    **** 	VXISI2CWrite(0x94,0x87);
 4774              		.loc 1 3408 0
 4775 0490 3121     		movs	r1, #49
 4776 0492 9320     		movs	r0, #147
 4777 0494 FFF7FEFF 		bl	VXISI2CWrite
 4778              	.LVL608:
3409:Src/main.c    **** 	VXISI2CWrite(0x95,0xD0);
 4779              		.loc 1 3409 0
 4780 0498 8721     		movs	r1, #135
 4781 049a 9420     		movs	r0, #148
 4782 049c FFF7FEFF 		bl	VXISI2CWrite
 4783              	.LVL609:
3410:Src/main.c    **** 	VXISI2CWrite(0x96,0xF3);
 4784              		.loc 1 3410 0
 4785 04a0 D021     		movs	r1, #208
 4786 04a2 9520     		movs	r0, #149
 4787 04a4 FFF7FEFF 		bl	VXISI2CWrite
 4788              	.LVL610:
3411:Src/main.c    **** 	VXISI2CWrite(0x97,0x20);
 4789              		.loc 1 3411 0
 4790 04a8 F321     		movs	r1, #243
 4791 04aa 9620     		movs	r0, #150
 4792 04ac FFF7FEFF 		bl	VXISI2CWrite
 4793              	.LVL611:
3412:Src/main.c    **** 	VXISI2CWrite(0x98,0x11);
 4794              		.loc 1 3412 0
 4795 04b0 2021     		movs	r1, #32
 4796 04b2 9720     		movs	r0, #151
 4797 04b4 FFF7FEFF 		bl	VXISI2CWrite
 4798              	.LVL612:
3413:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);
 4799              		.loc 1 3413 0
 4800 04b8 1121     		movs	r1, #17
 4801 04ba 9820     		movs	r0, #152
 4802 04bc FFF7FEFF 		bl	VXISI2CWrite
 4803              	.LVL613:
3414:Src/main.c    **** 	VXISI2CWrite(0x9A,0xFF);
 4804              		.loc 1 3414 0
 4805 04c0 9021     		movs	r1, #144
ARM GAS  /tmp/ccQZgaDW.s 			page 173


 4806 04c2 9920     		movs	r0, #153
 4807 04c4 FFF7FEFF 		bl	VXISI2CWrite
 4808              	.LVL614:
3415:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);
 4809              		.loc 1 3415 0
 4810 04c8 FF21     		movs	r1, #255
 4811 04ca 9A20     		movs	r0, #154
 4812 04cc FFF7FEFF 		bl	VXISI2CWrite
 4813              	.LVL615:
3416:Src/main.c    **** 	VXISI2CWrite(0x9C,0x0A);
 4814              		.loc 1 3416 0
 4815 04d0 0421     		movs	r1, #4
 4816 04d2 9B20     		movs	r0, #155
 4817 04d4 FFF7FEFF 		bl	VXISI2CWrite
 4818              	.LVL616:
3417:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);
 4819              		.loc 1 3417 0
 4820 04d8 0A21     		movs	r1, #10
 4821 04da 9C20     		movs	r0, #156
 4822 04dc FFF7FEFF 		bl	VXISI2CWrite
 4823              	.LVL617:
3418:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);
 4824              		.loc 1 3418 0
 4825 04e0 0021     		movs	r1, #0
 4826 04e2 9D20     		movs	r0, #157
 4827 04e4 FFF7FEFF 		bl	VXISI2CWrite
 4828              	.LVL618:
3419:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);
 4829              		.loc 1 3419 0
 4830 04e8 0421     		movs	r1, #4
 4831 04ea 9E20     		movs	r0, #158
 4832 04ec FFF7FEFF 		bl	VXISI2CWrite
 4833              	.LVL619:
3420:Src/main.c    **** 	VXISI2CWrite(0xA0,0x2F);
 4834              		.loc 1 3420 0
 4835 04f0 6521     		movs	r1, #101
 4836 04f2 9F20     		movs	r0, #159
 4837 04f4 FFF7FEFF 		bl	VXISI2CWrite
 4838              	.LVL620:
3421:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD9);
 4839              		.loc 1 3421 0
 4840 04f8 2F21     		movs	r1, #47
 4841 04fa A020     		movs	r0, #160
 4842 04fc FFF7FEFF 		bl	VXISI2CWrite
 4843              	.LVL621:
3422:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);
 4844              		.loc 1 3422 0
 4845 0500 D921     		movs	r1, #217
 4846 0502 A120     		movs	r0, #161
 4847 0504 FFF7FEFF 		bl	VXISI2CWrite
 4848              	.LVL622:
3423:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);
 4849              		.loc 1 3423 0
 4850 0508 9821     		movs	r1, #152
 4851 050a A220     		movs	r0, #162
 4852 050c FFF7FEFF 		bl	VXISI2CWrite
 4853              	.LVL623:
ARM GAS  /tmp/ccQZgaDW.s 			page 174


3424:Src/main.c    **** 	VXISI2CWrite(0xA4,0xE1);
 4854              		.loc 1 3424 0
 4855 0510 8721     		movs	r1, #135
 4856 0512 A320     		movs	r0, #163
 4857 0514 FFF7FEFF 		bl	VXISI2CWrite
 4858              	.LVL624:
3425:Src/main.c    **** 	VXISI2CWrite(0xA5,0x38);
 4859              		.loc 1 3425 0
 4860 0518 E121     		movs	r1, #225
 4861 051a A420     		movs	r0, #164
 4862 051c FFF7FEFF 		bl	VXISI2CWrite
 4863              	.LVL625:
3426:Src/main.c    **** 	VXISI2CWrite(0xA6,0xC2);
 4864              		.loc 1 3426 0
 4865 0520 3821     		movs	r1, #56
 4866 0522 A520     		movs	r0, #165
 4867 0524 FFF7FEFF 		bl	VXISI2CWrite
 4868              	.LVL626:
3427:Src/main.c    **** 	VXISI2CWrite(0xA7,0x70);
 4869              		.loc 1 3427 0
 4870 0528 C221     		movs	r1, #194
 4871 052a A620     		movs	r0, #166
 4872 052c FFF7FEFF 		bl	VXISI2CWrite
 4873              	.LVL627:
3428:Src/main.c    **** 	VXISI2CWrite(0xA8,0x00);
 4874              		.loc 1 3428 0
 4875 0530 7021     		movs	r1, #112
 4876 0532 A720     		movs	r0, #167
 4877 0534 FFF7FEFF 		bl	VXISI2CWrite
 4878              	.LVL628:
3429:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);
 4879              		.loc 1 3429 0
 4880 0538 0021     		movs	r1, #0
 4881 053a A820     		movs	r0, #168
 4882 053c FFF7FEFF 		bl	VXISI2CWrite
 4883              	.LVL629:
3430:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2E);
 4884              		.loc 1 3430 0
 4885 0540 1E21     		movs	r1, #30
 4886 0542 A920     		movs	r0, #169
 4887 0544 FFF7FEFF 		bl	VXISI2CWrite
 4888              	.LVL630:
3431:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);
 4889              		.loc 1 3431 0
 4890 0548 2E21     		movs	r1, #46
 4891 054a AA20     		movs	r0, #170
 4892 054c FFF7FEFF 		bl	VXISI2CWrite
 4893              	.LVL631:
3432:Src/main.c    **** 	VXISI2CWrite(0xAC,0x84);
 4894              		.loc 1 3432 0
 4895 0550 0021     		movs	r1, #0
 4896 0552 AB20     		movs	r0, #171
 4897 0554 FFF7FEFF 		bl	VXISI2CWrite
 4898              	.LVL632:
3433:Src/main.c    **** 	VXISI2CWrite(0xAD,0xF3);
 4899              		.loc 1 3433 0
 4900 0558 8421     		movs	r1, #132
ARM GAS  /tmp/ccQZgaDW.s 			page 175


 4901 055a AC20     		movs	r0, #172
 4902 055c FFF7FEFF 		bl	VXISI2CWrite
 4903              	.LVL633:
3434:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);
 4904              		.loc 1 3434 0
 4905 0560 F321     		movs	r1, #243
 4906 0562 AD20     		movs	r0, #173
 4907 0564 FFF7FEFF 		bl	VXISI2CWrite
 4908              	.LVL634:
3435:Src/main.c    **** 	VXISI2CWrite(0xAF,0x99);
 4909              		.loc 1 3435 0
 4910 0568 6521     		movs	r1, #101
 4911 056a AE20     		movs	r0, #174
 4912 056c FFF7FEFF 		bl	VXISI2CWrite
 4913              	.LVL635:
3436:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);
 4914              		.loc 1 3436 0
 4915 0570 9921     		movs	r1, #153
 4916 0572 AF20     		movs	r0, #175
 4917 0574 FFF7FEFF 		bl	VXISI2CWrite
 4918              	.LVL636:
3437:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);
 4919              		.loc 1 3437 0
 4920 0578 0021     		movs	r1, #0
 4921 057a B020     		movs	r0, #176
 4922 057c FFF7FEFF 		bl	VXISI2CWrite
 4923              	.LVL637:
3438:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);
 4924              		.loc 1 3438 0
 4925 0580 0021     		movs	r1, #0
 4926 0582 B120     		movs	r0, #177
 4927 0584 FFF7FEFF 		bl	VXISI2CWrite
 4928              	.LVL638:
3439:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);
 4929              		.loc 1 3439 0
 4930 0588 0021     		movs	r1, #0
 4931 058a B220     		movs	r0, #178
 4932 058c FFF7FEFF 		bl	VXISI2CWrite
 4933              	.LVL639:
3440:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);
 4934              		.loc 1 3440 0
 4935 0590 0021     		movs	r1, #0
 4936 0592 B320     		movs	r0, #179
 4937 0594 FFF7FEFF 		bl	VXISI2CWrite
 4938              	.LVL640:
3441:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);
 4939              		.loc 1 3441 0
 4940 0598 0021     		movs	r1, #0
 4941 059a B420     		movs	r0, #180
 4942 059c FFF7FEFF 		bl	VXISI2CWrite
 4943              	.LVL641:
3442:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);
 4944              		.loc 1 3442 0
 4945 05a0 0021     		movs	r1, #0
 4946 05a2 B520     		movs	r0, #181
 4947 05a4 FFF7FEFF 		bl	VXISI2CWrite
 4948              	.LVL642:
ARM GAS  /tmp/ccQZgaDW.s 			page 176


3443:Src/main.c    **** 	VXISI2CWrite(0xB8,0x80);
 4949              		.loc 1 3443 0
 4950 05a8 0021     		movs	r1, #0
 4951 05aa B620     		movs	r0, #182
 4952 05ac FFF7FEFF 		bl	VXISI2CWrite
 4953              	.LVL643:
3444:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);
 4954              		.loc 1 3444 0
 4955 05b0 8021     		movs	r1, #128
 4956 05b2 B820     		movs	r0, #184
 4957 05b4 FFF7FEFF 		bl	VXISI2CWrite
 4958              	.LVL644:
3445:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);
 4959              		.loc 1 3445 0
 4960 05b8 0021     		movs	r1, #0
 4961 05ba B920     		movs	r0, #185
 4962 05bc FFF7FEFF 		bl	VXISI2CWrite
 4963              	.LVL645:
3446:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);
 4964              		.loc 1 3446 0
 4965 05c0 0121     		movs	r1, #1
 4966 05c2 BA20     		movs	r0, #186
 4967 05c4 FFF7FEFF 		bl	VXISI2CWrite
 4968              	.LVL646:
3447:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);
 4969              		.loc 1 3447 0
 4970 05c8 0021     		movs	r1, #0
 4971 05ca BB20     		movs	r0, #187
 4972 05cc FFF7FEFF 		bl	VXISI2CWrite
 4973              	.LVL647:
3448:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);
 4974              		.loc 1 3448 0
 4975 05d0 9021     		movs	r1, #144
 4976 05d2 BC20     		movs	r0, #188
 4977 05d4 FFF7FEFF 		bl	VXISI2CWrite
 4978              	.LVL648:
3449:Src/main.c    **** 	VXISI2CWrite(0xBE,0x2C);
 4979              		.loc 1 3449 0
 4980 05d8 0121     		movs	r1, #1
 4981 05da BD20     		movs	r0, #189
 4982 05dc FFF7FEFF 		bl	VXISI2CWrite
 4983              	.LVL649:
3450:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);
 4984              		.loc 1 3450 0
 4985 05e0 2C21     		movs	r1, #44
 4986 05e2 BE20     		movs	r0, #190
 4987 05e4 FFF7FEFF 		bl	VXISI2CWrite
 4988              	.LVL650:
3451:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);
 4989              		.loc 1 3451 0
 4990 05e8 0021     		movs	r1, #0
 4991 05ea C020     		movs	r0, #192
 4992 05ec FFF7FEFF 		bl	VXISI2CWrite
 4993              	.LVL651:
3452:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);
 4994              		.loc 1 3452 0
 4995 05f0 2021     		movs	r1, #32
ARM GAS  /tmp/ccQZgaDW.s 			page 177


 4996 05f2 C120     		movs	r0, #193
 4997 05f4 FFF7FEFF 		bl	VXISI2CWrite
 4998              	.LVL652:
3453:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);
 4999              		.loc 1 3453 0
 5000 05f8 2021     		movs	r1, #32
 5001 05fa C220     		movs	r0, #194
 5002 05fc FFF7FEFF 		bl	VXISI2CWrite
 5003              	.LVL653:
3454:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);
 5004              		.loc 1 3454 0
 5005 0600 2021     		movs	r1, #32
 5006 0602 C320     		movs	r0, #195
 5007 0604 FFF7FEFF 		bl	VXISI2CWrite
 5008              	.LVL654:
3455:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);
 5009              		.loc 1 3455 0
 5010 0608 2021     		movs	r1, #32
 5011 060a C420     		movs	r0, #196
 5012 060c FFF7FEFF 		bl	VXISI2CWrite
 5013              	.LVL655:
3456:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);
 5014              		.loc 1 3456 0
 5015 0610 2021     		movs	r1, #32
 5016 0612 C520     		movs	r0, #197
 5017 0614 FFF7FEFF 		bl	VXISI2CWrite
 5018              	.LVL656:
3457:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);
 5019              		.loc 1 3457 0
 5020 0618 FF21     		movs	r1, #255
 5021 061a D020     		movs	r0, #208
 5022 061c FFF7FEFF 		bl	VXISI2CWrite
 5023              	.LVL657:
3458:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);
 5024              		.loc 1 3458 0
 5025 0620 3F21     		movs	r1, #63
 5026 0622 D120     		movs	r0, #209
 5027 0624 FFF7FEFF 		bl	VXISI2CWrite
 5028              	.LVL658:
3459:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);
 5029              		.loc 1 3459 0
 5030 0628 C221     		movs	r1, #194
 5031 062a D220     		movs	r0, #210
 5032 062c FFF7FEFF 		bl	VXISI2CWrite
 5033              	.LVL659:
3460:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);
 5034              		.loc 1 3460 0
 5035 0630 3F21     		movs	r1, #63
 5036 0632 D320     		movs	r0, #211
 5037 0634 FFF7FEFF 		bl	VXISI2CWrite
 5038              	.LVL660:
3461:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);
 5039              		.loc 1 3461 0
 5040 0638 0021     		movs	r1, #0
 5041 063a D420     		movs	r0, #212
 5042 063c FFF7FEFF 		bl	VXISI2CWrite
 5043              	.LVL661:
ARM GAS  /tmp/ccQZgaDW.s 			page 178


3462:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);
 5044              		.loc 1 3462 0
 5045 0640 0021     		movs	r1, #0
 5046 0642 D520     		movs	r0, #213
 5047 0644 FFF7FEFF 		bl	VXISI2CWrite
 5048              	.LVL662:
3463:Src/main.c    **** 	VXISI2CWrite(0xD7,0x10);
 5049              		.loc 1 3463 0
 5050 0648 0021     		movs	r1, #0
 5051 064a D620     		movs	r0, #214
 5052 064c FFF7FEFF 		bl	VXISI2CWrite
 5053              	.LVL663:
3464:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);
 5054              		.loc 1 3464 0
 5055 0650 1021     		movs	r1, #16
 5056 0652 D720     		movs	r0, #215
 5057 0654 FFF7FEFF 		bl	VXISI2CWrite
 5058              	.LVL664:
3465:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);
 5059              		.loc 1 3465 0
 5060 0658 0021     		movs	r1, #0
 5061 065a D820     		movs	r0, #216
 5062 065c FFF7FEFF 		bl	VXISI2CWrite
 5063              	.LVL665:
3466:Src/main.c    **** 	VXISI2CWrite(0xDD,0x00);
 5064              		.loc 1 3466 0
 5065 0660 7721     		movs	r1, #119
 5066 0662 DC20     		movs	r0, #220
 5067 0664 FFF7FEFF 		bl	VXISI2CWrite
 5068              	.LVL666:
3467:Src/main.c    **** 	VXISI2CWrite(0xDE,0xAF);
 5069              		.loc 1 3467 0
 5070 0668 0021     		movs	r1, #0
 5071 066a DD20     		movs	r0, #221
 5072 066c FFF7FEFF 		bl	VXISI2CWrite
 5073              	.LVL667:
3468:Src/main.c    **** 	VXISI2CWrite(0xDF,0xEF);
 5074              		.loc 1 3468 0
 5075 0670 AF21     		movs	r1, #175
 5076 0672 DE20     		movs	r0, #222
 5077 0674 FFF7FEFF 		bl	VXISI2CWrite
 5078              	.LVL668:
3469:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);
 5079              		.loc 1 3469 0
 5080 0678 EF21     		movs	r1, #239
 5081 067a DF20     		movs	r0, #223
 5082 067c FFF7FEFF 		bl	VXISI2CWrite
 5083              	.LVL669:
3470:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);
 5084              		.loc 1 3470 0
 5085 0680 0021     		movs	r1, #0
 5086 0682 E020     		movs	r0, #224
 5087 0684 FFF7FEFF 		bl	VXISI2CWrite
 5088              	.LVL670:
3471:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);
 5089              		.loc 1 3471 0
 5090 0688 0021     		movs	r1, #0
ARM GAS  /tmp/ccQZgaDW.s 			page 179


 5091 068a E120     		movs	r0, #225
 5092 068c FFF7FEFF 		bl	VXISI2CWrite
 5093              	.LVL671:
3472:Src/main.c    **** 	VXISI2CWrite(0xE3,0x12);
 5094              		.loc 1 3472 0
 5095 0690 0021     		movs	r1, #0
 5096 0692 E220     		movs	r0, #226
 5097 0694 FFF7FEFF 		bl	VXISI2CWrite
 5098              	.LVL672:
3473:Src/main.c    **** 	VXISI2CWrite(0xE4,0xE2);
 5099              		.loc 1 3473 0
 5100 0698 1221     		movs	r1, #18
 5101 069a E320     		movs	r0, #227
 5102 069c FFF7FEFF 		bl	VXISI2CWrite
 5103              	.LVL673:
3474:Src/main.c    **** 	VXISI2CWrite(0xE5,0xD0);
 5104              		.loc 1 3474 0
 5105 06a0 E221     		movs	r1, #226
 5106 06a2 E420     		movs	r0, #228
 5107 06a4 FFF7FEFF 		bl	VXISI2CWrite
 5108              	.LVL674:
3475:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);
 5109              		.loc 1 3475 0
 5110 06a8 D021     		movs	r1, #208
 5111 06aa E520     		movs	r0, #229
 5112 06ac FFF7FEFF 		bl	VXISI2CWrite
 5113              	.LVL675:
3476:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);
 5114              		.loc 1 3476 0
 5115 06b0 0021     		movs	r1, #0
 5116 06b2 E620     		movs	r0, #230
 5117 06b4 FFF7FEFF 		bl	VXISI2CWrite
 5118              	.LVL676:
3477:Src/main.c    **** 	VXISI2CWrite(0xE8,0x0F);
 5119              		.loc 1 3477 0
 5120 06b8 0021     		movs	r1, #0
 5121 06ba E720     		movs	r0, #231
 5122 06bc FFF7FEFF 		bl	VXISI2CWrite
 5123              	.LVL677:
3478:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);
 5124              		.loc 1 3478 0
 5125 06c0 0F21     		movs	r1, #15
 5126 06c2 E820     		movs	r0, #232
 5127 06c4 FFF7FEFF 		bl	VXISI2CWrite
 5128              	.LVL678:
3479:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);
 5129              		.loc 1 3479 0
 5130 06c8 0021     		movs	r1, #0
 5131 06ca E920     		movs	r0, #233
 5132 06cc FFF7FEFF 		bl	VXISI2CWrite
 5133              	.LVL679:
3480:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);
 5134              		.loc 1 3480 0
 5135 06d0 0021     		movs	r1, #0
 5136 06d2 EA20     		movs	r0, #234
 5137 06d4 FFF7FEFF 		bl	VXISI2CWrite
 5138              	.LVL680:
ARM GAS  /tmp/ccQZgaDW.s 			page 180


3481:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);
 5139              		.loc 1 3481 0
 5140 06d8 0021     		movs	r1, #0
 5141 06da EB20     		movs	r0, #235
 5142 06dc FFF7FEFF 		bl	VXISI2CWrite
 5143              	.LVL681:
3482:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);
 5144              		.loc 1 3482 0
 5145 06e0 8821     		movs	r1, #136
 5146 06e2 EC20     		movs	r0, #236
 5147 06e4 FFF7FEFF 		bl	VXISI2CWrite
 5148              	.LVL682:
3483:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);
 5149              		.loc 1 3483 0
 5150 06e8 0021     		movs	r1, #0
 5151 06ea ED20     		movs	r0, #237
 5152 06ec FFF7FEFF 		bl	VXISI2CWrite
 5153              	.LVL683:
3484:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);
 5154              		.loc 1 3484 0
 5155 06f0 0021     		movs	r1, #0
 5156 06f2 EE20     		movs	r0, #238
 5157 06f4 FFF7FEFF 		bl	VXISI2CWrite
 5158              	.LVL684:
3485:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);
 5159              		.loc 1 3485 0
 5160 06f8 0021     		movs	r1, #0
 5161 06fa EF20     		movs	r0, #239
 5162 06fc FFF7FEFF 		bl	VXISI2CWrite
 5163              	.LVL685:
3486:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);
 5164              		.loc 1 3486 0
 5165 0700 3021     		movs	r1, #48
 5166 0702 F020     		movs	r0, #240
 5167 0704 FFF7FEFF 		bl	VXISI2CWrite
 5168              	.LVL686:
3487:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);
 5169              		.loc 1 3487 0
 5170 0708 4321     		movs	r1, #67
 5171 070a F120     		movs	r0, #241
 5172 070c FFF7FEFF 		bl	VXISI2CWrite
 5173              	.LVL687:
3488:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);
 5174              		.loc 1 3488 0
 5175 0710 1F21     		movs	r1, #31
 5176 0712 F220     		movs	r0, #242
 5177 0714 FFF7FEFF 		bl	VXISI2CWrite
 5178              	.LVL688:
3489:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);
 5179              		.loc 1 3489 0
 5180 0718 1F21     		movs	r1, #31
 5181 071a F320     		movs	r0, #243
 5182 071c FFF7FEFF 		bl	VXISI2CWrite
 5183              	.LVL689:
3490:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);
 5184              		.loc 1 3490 0
 5185 0720 2221     		movs	r1, #34
ARM GAS  /tmp/ccQZgaDW.s 			page 181


 5186 0722 F420     		movs	r0, #244
 5187 0724 FFF7FEFF 		bl	VXISI2CWrite
 5188              	.LVL690:
3491:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);
 5189              		.loc 1 3491 0
 5190 0728 7321     		movs	r1, #115
 5191 072a F520     		movs	r0, #245
 5192 072c FFF7FEFF 		bl	VXISI2CWrite
 5193              	.LVL691:
3492:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);
 5194              		.loc 1 3492 0
 5195 0730 5321     		movs	r1, #83
 5196 0732 F620     		movs	r0, #246
 5197 0734 FFF7FEFF 		bl	VXISI2CWrite
 5198              	.LVL692:
3493:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);
 5199              		.loc 1 3493 0
 5200 0738 8021     		movs	r1, #128
 5201 073a F720     		movs	r0, #247
 5202 073c FFF7FEFF 		bl	VXISI2CWrite
 5203              	.LVL693:
3494:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);
 5204              		.loc 1 3494 0
 5205 0740 0121     		movs	r1, #1
 5206 0742 F820     		movs	r0, #248
 5207 0744 FFF7FEFF 		bl	VXISI2CWrite
 5208              	.LVL694:
3495:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);
 5209              		.loc 1 3495 0
 5210 0748 0121     		movs	r1, #1
 5211 074a F920     		movs	r0, #249
 5212 074c FFF7FEFF 		bl	VXISI2CWrite
 5213              	.LVL695:
3496:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);
 5214              		.loc 1 3496 0
 5215 0750 0021     		movs	r1, #0
 5216 0752 FA20     		movs	r0, #250
 5217 0754 FFF7FEFF 		bl	VXISI2CWrite
 5218              	.LVL696:
3497:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);
 5219              		.loc 1 3497 0
 5220 0758 0021     		movs	r1, #0
 5221 075a FB20     		movs	r0, #251
 5222 075c FFF7FEFF 		bl	VXISI2CWrite
 5223              	.LVL697:
3498:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);
 5224              		.loc 1 3498 0
 5225 0760 0021     		movs	r1, #0
 5226 0762 FC20     		movs	r0, #252
 5227 0764 FFF7FEFF 		bl	VXISI2CWrite
 5228              	.LVL698:
3499:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);
 5229              		.loc 1 3499 0
 5230 0768 7021     		movs	r1, #112
 5231 076a FD20     		movs	r0, #253
 5232 076c FFF7FEFF 		bl	VXISI2CWrite
 5233              	.LVL699:
ARM GAS  /tmp/ccQZgaDW.s 			page 182


3500:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);
 5234              		.loc 1 3500 0
 5235 0770 4021     		movs	r1, #64
 5236 0772 FE20     		movs	r0, #254
 5237 0774 FFF7FEFF 		bl	VXISI2CWrite
 5238              	.LVL700:
3501:Src/main.c    **** 			 
 5239              		.loc 1 3501 0
 5240 0778 0721     		movs	r1, #7
 5241 077a FF20     		movs	r0, #255
 5242 077c FFF7FEFF 		bl	VXISI2CWrite
 5243              	.LVL701:
3503:Src/main.c    **** 
 5244              		.loc 1 3503 0
 5245 0780 08BD     		pop	{r3, pc}
 5246              		.cfi_endproc
 5247              	.LFE92:
 5249 0782 00BF     		.section	.text.SET_AHD_MDOE,"ax",%progbits
 5250              		.align	1
 5251              		.global	SET_AHD_MDOE
 5252              		.syntax unified
 5253              		.thumb
 5254              		.thumb_func
 5255              		.fpu softvfp
 5257              	SET_AHD_MDOE:
 5258              	.LFB93:
3506:Src/main.c    **** 	Printf("\r\nSET_AHD_MDOE...");
 5259              		.loc 1 3506 0
 5260              		.cfi_startproc
 5261              		@ args = 0, pretend = 0, frame = 0
 5262              		@ frame_needed = 0, uses_anonymous_args = 0
 5263 0000 08B5     		push	{r3, lr}
 5264              	.LCFI38:
 5265              		.cfi_def_cfa_offset 8
 5266              		.cfi_offset 3, -8
 5267              		.cfi_offset 14, -4
3507:Src/main.c    **** 
 5268              		.loc 1 3507 0
 5269 0002 FE48     		ldr	r0, .L198
 5270 0004 FFF7FEFF 		bl	Printf
 5271              	.LVL702:
3509:Src/main.c    **** 	VXISI2CWrite(0x01,0x00);
 5272              		.loc 1 3509 0
 5273 0008 4221     		movs	r1, #66
 5274 000a 0020     		movs	r0, #0
 5275 000c FFF7FEFF 		bl	VXISI2CWrite
 5276              	.LVL703:
3510:Src/main.c    **** 	VXISI2CWrite(0x02,0x00);
 5277              		.loc 1 3510 0
 5278 0010 0021     		movs	r1, #0
 5279 0012 0120     		movs	r0, #1
 5280 0014 FFF7FEFF 		bl	VXISI2CWrite
 5281              	.LVL704:
3511:Src/main.c    **** 	VXISI2CWrite(0x03,0x75);
 5282              		.loc 1 3511 0
 5283 0018 0021     		movs	r1, #0
 5284 001a 0220     		movs	r0, #2
ARM GAS  /tmp/ccQZgaDW.s 			page 183


 5285 001c FFF7FEFF 		bl	VXISI2CWrite
 5286              	.LVL705:
3512:Src/main.c    **** 	VXISI2CWrite(0x04,0x18);
 5287              		.loc 1 3512 0
 5288 0020 7521     		movs	r1, #117
 5289 0022 0320     		movs	r0, #3
 5290 0024 FFF7FEFF 		bl	VXISI2CWrite
 5291              	.LVL706:
3513:Src/main.c    **** 	VXISI2CWrite(0x05,0x80);
 5292              		.loc 1 3513 0
 5293 0028 1821     		movs	r1, #24
 5294 002a 0420     		movs	r0, #4
 5295 002c FFF7FEFF 		bl	VXISI2CWrite
 5296              	.LVL707:
3514:Src/main.c    **** 	VXISI2CWrite(0x06,0x20);
 5297              		.loc 1 3514 0
 5298 0030 8021     		movs	r1, #128
 5299 0032 0520     		movs	r0, #5
 5300 0034 FFF7FEFF 		bl	VXISI2CWrite
 5301              	.LVL708:
3515:Src/main.c    **** 	VXISI2CWrite(0x07,0x0C);
 5302              		.loc 1 3515 0
 5303 0038 2021     		movs	r1, #32
 5304 003a 0620     		movs	r0, #6
 5305 003c FFF7FEFF 		bl	VXISI2CWrite
 5306              	.LVL709:
3516:Src/main.c    **** 	VXISI2CWrite(0x08,0x40);
 5307              		.loc 1 3516 0
 5308 0040 0C21     		movs	r1, #12
 5309 0042 0720     		movs	r0, #7
 5310 0044 FFF7FEFF 		bl	VXISI2CWrite
 5311              	.LVL710:
3517:Src/main.c    **** 	VXISI2CWrite(0x09,0x0A);
 5312              		.loc 1 3517 0
 5313 0048 4021     		movs	r1, #64
 5314 004a 0820     		movs	r0, #8
 5315 004c FFF7FEFF 		bl	VXISI2CWrite
 5316              	.LVL711:
3518:Src/main.c    **** 	VXISI2CWrite(0x0A,0x40);
 5317              		.loc 1 3518 0
 5318 0050 0A21     		movs	r1, #10
 5319 0052 0920     		movs	r0, #9
 5320 0054 FFF7FEFF 		bl	VXISI2CWrite
 5321              	.LVL712:
3519:Src/main.c    **** 	VXISI2CWrite(0x0B,0x0A);
 5322              		.loc 1 3519 0
 5323 0058 4021     		movs	r1, #64
 5324 005a 0A20     		movs	r0, #10
 5325 005c FFF7FEFF 		bl	VXISI2CWrite
 5326              	.LVL713:
3520:Src/main.c    **** 	VXISI2CWrite(0x0C,0x00);
 5327              		.loc 1 3520 0
 5328 0060 0A21     		movs	r1, #10
 5329 0062 0B20     		movs	r0, #11
 5330 0064 FFF7FEFF 		bl	VXISI2CWrite
 5331              	.LVL714:
3521:Src/main.c    **** 	VXISI2CWrite(0x0D,0x20);
ARM GAS  /tmp/ccQZgaDW.s 			page 184


 5332              		.loc 1 3521 0
 5333 0068 0021     		movs	r1, #0
 5334 006a 0C20     		movs	r0, #12
 5335 006c FFF7FEFF 		bl	VXISI2CWrite
 5336              	.LVL715:
3522:Src/main.c    **** 	VXISI2CWrite(0x0E,0x10);
 5337              		.loc 1 3522 0
 5338 0070 2021     		movs	r1, #32
 5339 0072 0D20     		movs	r0, #13
 5340 0074 FFF7FEFF 		bl	VXISI2CWrite
 5341              	.LVL716:
3523:Src/main.c    **** 	VXISI2CWrite(0x0F,0x00);
 5342              		.loc 1 3523 0
 5343 0078 1021     		movs	r1, #16
 5344 007a 0E20     		movs	r0, #14
 5345 007c FFF7FEFF 		bl	VXISI2CWrite
 5346              	.LVL717:
3524:Src/main.c    **** 	VXISI2CWrite(0x10,0x81);
 5347              		.loc 1 3524 0
 5348 0080 0021     		movs	r1, #0
 5349 0082 0F20     		movs	r0, #15
 5350 0084 FFF7FEFF 		bl	VXISI2CWrite
 5351              	.LVL718:
3525:Src/main.c    **** 	VXISI2CWrite(0x11,0x82);
 5352              		.loc 1 3525 0
 5353 0088 8121     		movs	r1, #129
 5354 008a 1020     		movs	r0, #16
 5355 008c FFF7FEFF 		bl	VXISI2CWrite
 5356              	.LVL719:
3526:Src/main.c    **** 	VXISI2CWrite(0x12,0x74);
 5357              		.loc 1 3526 0
 5358 0090 8221     		movs	r1, #130
 5359 0092 1120     		movs	r0, #17
 5360 0094 FFF7FEFF 		bl	VXISI2CWrite
 5361              	.LVL720:
3527:Src/main.c    **** 	VXISI2CWrite(0x13,0x80);
 5362              		.loc 1 3527 0
 5363 0098 7421     		movs	r1, #116
 5364 009a 1220     		movs	r0, #18
 5365 009c FFF7FEFF 		bl	VXISI2CWrite
 5366              	.LVL721:
3528:Src/main.c    **** 	VXISI2CWrite(0x14,0x38);
 5367              		.loc 1 3528 0
 5368 00a0 8021     		movs	r1, #128
 5369 00a2 1320     		movs	r0, #19
 5370 00a4 FFF7FEFF 		bl	VXISI2CWrite
 5371              	.LVL722:
3529:Src/main.c    **** 	VXISI2CWrite(0x15,0x78);
 5372              		.loc 1 3529 0
 5373 00a8 3821     		movs	r1, #56
 5374 00aa 1420     		movs	r0, #20
 5375 00ac FFF7FEFF 		bl	VXISI2CWrite
 5376              	.LVL723:
3530:Src/main.c    **** 	VXISI2CWrite(0x16,0xFE);
 5377              		.loc 1 3530 0
 5378 00b0 7821     		movs	r1, #120
 5379 00b2 1520     		movs	r0, #21
ARM GAS  /tmp/ccQZgaDW.s 			page 185


 5380 00b4 FFF7FEFF 		bl	VXISI2CWrite
 5381              	.LVL724:
3531:Src/main.c    **** 	VXISI2CWrite(0x17,0x00);
 5382              		.loc 1 3531 0
 5383 00b8 FE21     		movs	r1, #254
 5384 00ba 1620     		movs	r0, #22
 5385 00bc FFF7FEFF 		bl	VXISI2CWrite
 5386              	.LVL725:
3532:Src/main.c    **** 	VXISI2CWrite(0x18,0xC0);
 5387              		.loc 1 3532 0
 5388 00c0 0021     		movs	r1, #0
 5389 00c2 1720     		movs	r0, #23
 5390 00c4 FFF7FEFF 		bl	VXISI2CWrite
 5391              	.LVL726:
3533:Src/main.c    **** 	VXISI2CWrite(0x19,0x01);
 5392              		.loc 1 3533 0
 5393 00c8 C021     		movs	r1, #192
 5394 00ca 1820     		movs	r0, #24
 5395 00cc FFF7FEFF 		bl	VXISI2CWrite
 5396              	.LVL727:
3534:Src/main.c    **** 	VXISI2CWrite(0x1A,0x20);
 5397              		.loc 1 3534 0
 5398 00d0 0121     		movs	r1, #1
 5399 00d2 1920     		movs	r0, #25
 5400 00d4 FFF7FEFF 		bl	VXISI2CWrite
 5401              	.LVL728:
3535:Src/main.c    **** 	VXISI2CWrite(0x1B,0x30);
 5402              		.loc 1 3535 0
 5403 00d8 2021     		movs	r1, #32
 5404 00da 1A20     		movs	r0, #26
 5405 00dc FFF7FEFF 		bl	VXISI2CWrite
 5406              	.LVL729:
3536:Src/main.c    **** 	VXISI2CWrite(0x1C,0x00);
 5407              		.loc 1 3536 0
 5408 00e0 3021     		movs	r1, #48
 5409 00e2 1B20     		movs	r0, #27
 5410 00e4 FFF7FEFF 		bl	VXISI2CWrite
 5411              	.LVL730:
3537:Src/main.c    **** 	VXISI2CWrite(0x1D,0x00);
 5412              		.loc 1 3537 0
 5413 00e8 0021     		movs	r1, #0
 5414 00ea 1C20     		movs	r0, #28
 5415 00ec FFF7FEFF 		bl	VXISI2CWrite
 5416              	.LVL731:
3538:Src/main.c    **** 	VXISI2CWrite(0x1E,0x20);
 5417              		.loc 1 3538 0
 5418 00f0 0021     		movs	r1, #0
 5419 00f2 1D20     		movs	r0, #29
 5420 00f4 FFF7FEFF 		bl	VXISI2CWrite
 5421              	.LVL732:
3539:Src/main.c    **** 	VXISI2CWrite(0x1F,0xA4);
 5422              		.loc 1 3539 0
 5423 00f8 2021     		movs	r1, #32
 5424 00fa 1E20     		movs	r0, #30
 5425 00fc FFF7FEFF 		bl	VXISI2CWrite
 5426              	.LVL733:
3540:Src/main.c    **** 	VXISI2CWrite(0x20,0x50);
ARM GAS  /tmp/ccQZgaDW.s 			page 186


 5427              		.loc 1 3540 0
 5428 0100 A421     		movs	r1, #164
 5429 0102 1F20     		movs	r0, #31
 5430 0104 FFF7FEFF 		bl	VXISI2CWrite
 5431              	.LVL734:
3541:Src/main.c    **** 	VXISI2CWrite(0x21,0xE2);
 5432              		.loc 1 3541 0
 5433 0108 5021     		movs	r1, #80
 5434 010a 2020     		movs	r0, #32
 5435 010c FFF7FEFF 		bl	VXISI2CWrite
 5436              	.LVL735:
3542:Src/main.c    **** 	VXISI2CWrite(0x22,0x87);
 5437              		.loc 1 3542 0
 5438 0110 E221     		movs	r1, #226
 5439 0112 2120     		movs	r0, #33
 5440 0114 FFF7FEFF 		bl	VXISI2CWrite
 5441              	.LVL736:
3543:Src/main.c    **** 	VXISI2CWrite(0x23,0x98);
 5442              		.loc 1 3543 0
 5443 0118 8721     		movs	r1, #135
 5444 011a 2220     		movs	r0, #34
 5445 011c FFF7FEFF 		bl	VXISI2CWrite
 5446              	.LVL737:
3544:Src/main.c    **** 	VXISI2CWrite(0x24,0x80);
 5447              		.loc 1 3544 0
 5448 0120 9821     		movs	r1, #152
 5449 0122 2320     		movs	r0, #35
 5450 0124 FFF7FEFF 		bl	VXISI2CWrite
 5451              	.LVL738:
3545:Src/main.c    **** 	VXISI2CWrite(0x25,0x44);
 5452              		.loc 1 3545 0
 5453 0128 8021     		movs	r1, #128
 5454 012a 2420     		movs	r0, #36
 5455 012c FFF7FEFF 		bl	VXISI2CWrite
 5456              	.LVL739:
3546:Src/main.c    **** 	VXISI2CWrite(0x26,0x65);
 5457              		.loc 1 3546 0
 5458 0130 4421     		movs	r1, #68
 5459 0132 2520     		movs	r0, #37
 5460 0134 FFF7FEFF 		bl	VXISI2CWrite
 5461              	.LVL740:
3547:Src/main.c    **** 	VXISI2CWrite(0x27,0x38);
 5462              		.loc 1 3547 0
 5463 0138 6521     		movs	r1, #101
 5464 013a 2620     		movs	r0, #38
 5465 013c FFF7FEFF 		bl	VXISI2CWrite
 5466              	.LVL741:
3548:Src/main.c    **** 	VXISI2CWrite(0x28,0xF0);
 5467              		.loc 1 3548 0
 5468 0140 3821     		movs	r1, #56
 5469 0142 2720     		movs	r0, #39
 5470 0144 FFF7FEFF 		bl	VXISI2CWrite
 5471              	.LVL742:
3549:Src/main.c    **** 	VXISI2CWrite(0x29,0x00);
 5472              		.loc 1 3549 0
 5473 0148 F021     		movs	r1, #240
 5474 014a 2820     		movs	r0, #40
ARM GAS  /tmp/ccQZgaDW.s 			page 187


 5475 014c FFF7FEFF 		bl	VXISI2CWrite
 5476              	.LVL743:
3550:Src/main.c    **** 	VXISI2CWrite(0x2A,0x00);
 5477              		.loc 1 3550 0
 5478 0150 0021     		movs	r1, #0
 5479 0152 2920     		movs	r0, #41
 5480 0154 FFF7FEFF 		bl	VXISI2CWrite
 5481              	.LVL744:
3551:Src/main.c    **** 	VXISI2CWrite(0x2B,0x11);
 5482              		.loc 1 3551 0
 5483 0158 0021     		movs	r1, #0
 5484 015a 2A20     		movs	r0, #42
 5485 015c FFF7FEFF 		bl	VXISI2CWrite
 5486              	.LVL745:
3552:Src/main.c    **** 	VXISI2CWrite(0x2C,0x00);
 5487              		.loc 1 3552 0
 5488 0160 1121     		movs	r1, #17
 5489 0162 2B20     		movs	r0, #43
 5490 0164 FFF7FEFF 		bl	VXISI2CWrite
 5491              	.LVL746:
3553:Src/main.c    **** 	VXISI2CWrite(0x2D,0x00);
 5492              		.loc 1 3553 0
 5493 0168 0021     		movs	r1, #0
 5494 016a 2C20     		movs	r0, #44
 5495 016c FFF7FEFF 		bl	VXISI2CWrite
 5496              	.LVL747:
3554:Src/main.c    **** 	VXISI2CWrite(0x2E,0x47);
 5497              		.loc 1 3554 0
 5498 0170 0021     		movs	r1, #0
 5499 0172 2D20     		movs	r0, #45
 5500 0174 FFF7FEFF 		bl	VXISI2CWrite
 5501              	.LVL748:
3555:Src/main.c    **** 	VXISI2CWrite(0x2F,0x80);
 5502              		.loc 1 3555 0
 5503 0178 4721     		movs	r1, #71
 5504 017a 2E20     		movs	r0, #46
 5505 017c FFF7FEFF 		bl	VXISI2CWrite
 5506              	.LVL749:
3556:Src/main.c    **** 	VXISI2CWrite(0x30,0x38);
 5507              		.loc 1 3556 0
 5508 0180 8021     		movs	r1, #128
 5509 0182 2F20     		movs	r0, #47
 5510 0184 FFF7FEFF 		bl	VXISI2CWrite
 5511              	.LVL750:
3557:Src/main.c    **** 	VXISI2CWrite(0x31,0x80);
 5512              		.loc 1 3557 0
 5513 0188 3821     		movs	r1, #56
 5514 018a 3020     		movs	r0, #48
 5515 018c FFF7FEFF 		bl	VXISI2CWrite
 5516              	.LVL751:
3558:Src/main.c    **** 	VXISI2CWrite(0x32,0x80);
 5517              		.loc 1 3558 0
 5518 0190 8021     		movs	r1, #128
 5519 0192 3120     		movs	r0, #49
 5520 0194 FFF7FEFF 		bl	VXISI2CWrite
 5521              	.LVL752:
3559:Src/main.c    **** 	VXISI2CWrite(0x33,0x80);
ARM GAS  /tmp/ccQZgaDW.s 			page 188


 5522              		.loc 1 3559 0
 5523 0198 8021     		movs	r1, #128
 5524 019a 3220     		movs	r0, #50
 5525 019c FFF7FEFF 		bl	VXISI2CWrite
 5526              	.LVL753:
3560:Src/main.c    **** 	VXISI2CWrite(0x34,0xA0);
 5527              		.loc 1 3560 0
 5528 01a0 8021     		movs	r1, #128
 5529 01a2 3320     		movs	r0, #51
 5530 01a4 FFF7FEFF 		bl	VXISI2CWrite
 5531              	.LVL754:
3561:Src/main.c    **** 	VXISI2CWrite(0x35,0x18);
 5532              		.loc 1 3561 0
 5533 01a8 A021     		movs	r1, #160
 5534 01aa 3420     		movs	r0, #52
 5535 01ac FFF7FEFF 		bl	VXISI2CWrite
 5536              	.LVL755:
3562:Src/main.c    **** 	VXISI2CWrite(0x36,0x46);
 5537              		.loc 1 3562 0
 5538 01b0 1821     		movs	r1, #24
 5539 01b2 3520     		movs	r0, #53
 5540 01b4 FFF7FEFF 		bl	VXISI2CWrite
 5541              	.LVL756:
3563:Src/main.c    **** 	VXISI2CWrite(0x37,0x64);
 5542              		.loc 1 3563 0
 5543 01b8 4621     		movs	r1, #70
 5544 01ba 3620     		movs	r0, #54
 5545 01bc FFF7FEFF 		bl	VXISI2CWrite
 5546              	.LVL757:
3564:Src/main.c    **** 	VXISI2CWrite(0x38,0x00);
 5547              		.loc 1 3564 0
 5548 01c0 6421     		movs	r1, #100
 5549 01c2 3720     		movs	r0, #55
 5550 01c4 FFF7FEFF 		bl	VXISI2CWrite
 5551              	.LVL758:
3565:Src/main.c    **** 	VXISI2CWrite(0x39,0xFF);
 5552              		.loc 1 3565 0
 5553 01c8 0021     		movs	r1, #0
 5554 01ca 3820     		movs	r0, #56
 5555 01cc FFF7FEFF 		bl	VXISI2CWrite
 5556              	.LVL759:
3566:Src/main.c    **** 	VXISI2CWrite(0x3A,0x73);
 5557              		.loc 1 3566 0
 5558 01d0 FF21     		movs	r1, #255
 5559 01d2 3920     		movs	r0, #57
 5560 01d4 FFF7FEFF 		bl	VXISI2CWrite
 5561              	.LVL760:
3567:Src/main.c    **** 	VXISI2CWrite(0x3B,0x80);
 5562              		.loc 1 3567 0
 5563 01d8 7321     		movs	r1, #115
 5564 01da 3A20     		movs	r0, #58
 5565 01dc FFF7FEFF 		bl	VXISI2CWrite
 5566              	.LVL761:
3568:Src/main.c    **** 	VXISI2CWrite(0x3C,0x80);
 5567              		.loc 1 3568 0
 5568 01e0 8021     		movs	r1, #128
 5569 01e2 3B20     		movs	r0, #59
ARM GAS  /tmp/ccQZgaDW.s 			page 189


 5570 01e4 FFF7FEFF 		bl	VXISI2CWrite
 5571              	.LVL762:
3569:Src/main.c    **** 	VXISI2CWrite(0x3D,0x80);
 5572              		.loc 1 3569 0
 5573 01e8 8021     		movs	r1, #128
 5574 01ea 3C20     		movs	r0, #60
 5575 01ec FFF7FEFF 		bl	VXISI2CWrite
 5576              	.LVL763:
3570:Src/main.c    **** 	VXISI2CWrite(0x3E,0x80);
 5577              		.loc 1 3570 0
 5578 01f0 8021     		movs	r1, #128
 5579 01f2 3D20     		movs	r0, #61
 5580 01f4 FFF7FEFF 		bl	VXISI2CWrite
 5581              	.LVL764:
3571:Src/main.c    **** 	VXISI2CWrite(0x3F,0x80);
 5582              		.loc 1 3571 0
 5583 01f8 8021     		movs	r1, #128
 5584 01fa 3E20     		movs	r0, #62
 5585 01fc FFF7FEFF 		bl	VXISI2CWrite
 5586              	.LVL765:
3572:Src/main.c    **** 	VXISI2CWrite(0x40,0x80);
 5587              		.loc 1 3572 0
 5588 0200 8021     		movs	r1, #128
 5589 0202 3F20     		movs	r0, #63
 5590 0204 FFF7FEFF 		bl	VXISI2CWrite
 5591              	.LVL766:
3573:Src/main.c    **** 	VXISI2CWrite(0x41,0x60);
 5592              		.loc 1 3573 0
 5593 0208 8021     		movs	r1, #128
 5594 020a 4020     		movs	r0, #64
 5595 020c FFF7FEFF 		bl	VXISI2CWrite
 5596              	.LVL767:
3574:Src/main.c    **** 	VXISI2CWrite(0x42,0x5F);
 5597              		.loc 1 3574 0
 5598 0210 6021     		movs	r1, #96
 5599 0212 4120     		movs	r0, #65
 5600 0214 FFF7FEFF 		bl	VXISI2CWrite
 5601              	.LVL768:
3575:Src/main.c    **** 	VXISI2CWrite(0x43,0x37);
 5602              		.loc 1 3575 0
 5603 0218 5F21     		movs	r1, #95
 5604 021a 4220     		movs	r0, #66
 5605 021c FFF7FEFF 		bl	VXISI2CWrite
 5606              	.LVL769:
3576:Src/main.c    **** 	VXISI2CWrite(0x44,0x14);
 5607              		.loc 1 3576 0
 5608 0220 3721     		movs	r1, #55
 5609 0222 4320     		movs	r0, #67
 5610 0224 FFF7FEFF 		bl	VXISI2CWrite
 5611              	.LVL770:
3577:Src/main.c    **** 	VXISI2CWrite(0x45,0x00);
 5612              		.loc 1 3577 0
 5613 0228 1421     		movs	r1, #20
 5614 022a 4420     		movs	r0, #68
 5615 022c FFF7FEFF 		bl	VXISI2CWrite
 5616              	.LVL771:
3578:Src/main.c    **** 	VXISI2CWrite(0x46,0x00);
ARM GAS  /tmp/ccQZgaDW.s 			page 190


 5617              		.loc 1 3578 0
 5618 0230 0021     		movs	r1, #0
 5619 0232 4520     		movs	r0, #69
 5620 0234 FFF7FEFF 		bl	VXISI2CWrite
 5621              	.LVL772:
3579:Src/main.c    **** 	VXISI2CWrite(0x47,0x00);
 5622              		.loc 1 3579 0
 5623 0238 0021     		movs	r1, #0
 5624 023a 4620     		movs	r0, #70
 5625 023c FFF7FEFF 		bl	VXISI2CWrite
 5626              	.LVL773:
3580:Src/main.c    **** 	VXISI2CWrite(0x48,0x00);
 5627              		.loc 1 3580 0
 5628 0240 0021     		movs	r1, #0
 5629 0242 4720     		movs	r0, #71
 5630 0244 FFF7FEFF 		bl	VXISI2CWrite
 5631              	.LVL774:
3581:Src/main.c    **** 	VXISI2CWrite(0x49,0x00);
 5632              		.loc 1 3581 0
 5633 0248 0021     		movs	r1, #0
 5634 024a 4820     		movs	r0, #72
 5635 024c FFF7FEFF 		bl	VXISI2CWrite
 5636              	.LVL775:
3582:Src/main.c    **** 	VXISI2CWrite(0x4A,0x00);
 5637              		.loc 1 3582 0
 5638 0250 0021     		movs	r1, #0
 5639 0252 4920     		movs	r0, #73
 5640 0254 FFF7FEFF 		bl	VXISI2CWrite
 5641              	.LVL776:
3583:Src/main.c    **** 	VXISI2CWrite(0x4B,0x20);
 5642              		.loc 1 3583 0
 5643 0258 0021     		movs	r1, #0
 5644 025a 4A20     		movs	r0, #74
 5645 025c FFF7FEFF 		bl	VXISI2CWrite
 5646              	.LVL777:
3584:Src/main.c    **** 	VXISI2CWrite(0x4C,0x00);
 5647              		.loc 1 3584 0
 5648 0260 2021     		movs	r1, #32
 5649 0262 4B20     		movs	r0, #75
 5650 0264 FFF7FEFF 		bl	VXISI2CWrite
 5651              	.LVL778:
3585:Src/main.c    **** 	VXISI2CWrite(0x4D,0x00);
 5652              		.loc 1 3585 0
 5653 0268 0021     		movs	r1, #0
 5654 026a 4C20     		movs	r0, #76
 5655 026c FFF7FEFF 		bl	VXISI2CWrite
 5656              	.LVL779:
3586:Src/main.c    **** 	VXISI2CWrite(0x4E,0x00);
 5657              		.loc 1 3586 0
 5658 0270 0021     		movs	r1, #0
 5659 0272 4D20     		movs	r0, #77
 5660 0274 FFF7FEFF 		bl	VXISI2CWrite
 5661              	.LVL780:
3587:Src/main.c    **** 	VXISI2CWrite(0x4F,0x7F);
 5662              		.loc 1 3587 0
 5663 0278 0021     		movs	r1, #0
 5664 027a 4E20     		movs	r0, #78
ARM GAS  /tmp/ccQZgaDW.s 			page 191


 5665 027c FFF7FEFF 		bl	VXISI2CWrite
 5666              	.LVL781:
3588:Src/main.c    **** 	VXISI2CWrite(0x50,0x20);
 5667              		.loc 1 3588 0
 5668 0280 7F21     		movs	r1, #127
 5669 0282 4F20     		movs	r0, #79
 5670 0284 FFF7FEFF 		bl	VXISI2CWrite
 5671              	.LVL782:
3589:Src/main.c    **** 	VXISI2CWrite(0x51,0x00);
 5672              		.loc 1 3589 0
 5673 0288 2021     		movs	r1, #32
 5674 028a 5020     		movs	r0, #80
 5675 028c FFF7FEFF 		bl	VXISI2CWrite
 5676              	.LVL783:
3590:Src/main.c    **** 	VXISI2CWrite(0x52,0xA4);
 5677              		.loc 1 3590 0
 5678 0290 0021     		movs	r1, #0
 5679 0292 5120     		movs	r0, #81
 5680 0294 FFF7FEFF 		bl	VXISI2CWrite
 5681              	.LVL784:
3591:Src/main.c    **** 	VXISI2CWrite(0x53,0xC0);
 5682              		.loc 1 3591 0
 5683 0298 A421     		movs	r1, #164
 5684 029a 5220     		movs	r0, #82
 5685 029c FFF7FEFF 		bl	VXISI2CWrite
 5686              	.LVL785:
3592:Src/main.c    **** 	VXISI2CWrite(0x54,0x42);
 5687              		.loc 1 3592 0
 5688 02a0 C021     		movs	r1, #192
 5689 02a2 5320     		movs	r0, #83
 5690 02a4 FFF7FEFF 		bl	VXISI2CWrite
 5691              	.LVL786:
3593:Src/main.c    **** 	VXISI2CWrite(0x55,0x60);
 5692              		.loc 1 3593 0
 5693 02a8 4221     		movs	r1, #66
 5694 02aa 5420     		movs	r0, #84
 5695 02ac FFF7FEFF 		bl	VXISI2CWrite
 5696              	.LVL787:
3594:Src/main.c    **** 	VXISI2CWrite(0x56,0x5C);
 5697              		.loc 1 3594 0
 5698 02b0 6021     		movs	r1, #96
 5699 02b2 5520     		movs	r0, #85
 5700 02b4 FFF7FEFF 		bl	VXISI2CWrite
 5701              	.LVL788:
3595:Src/main.c    **** 	VXISI2CWrite(0x57,0x04);
 5702              		.loc 1 3595 0
 5703 02b8 5C21     		movs	r1, #92
 5704 02ba 5620     		movs	r0, #86
 5705 02bc FFF7FEFF 		bl	VXISI2CWrite
 5706              	.LVL789:
3596:Src/main.c    **** 	VXISI2CWrite(0x58,0x00);
 5707              		.loc 1 3596 0
 5708 02c0 0421     		movs	r1, #4
 5709 02c2 5720     		movs	r0, #87
 5710 02c4 FFF7FEFF 		bl	VXISI2CWrite
 5711              	.LVL790:
3597:Src/main.c    **** 	VXISI2CWrite(0x59,0x08);
ARM GAS  /tmp/ccQZgaDW.s 			page 192


 5712              		.loc 1 3597 0
 5713 02c8 0021     		movs	r1, #0
 5714 02ca 5820     		movs	r0, #88
 5715 02cc FFF7FEFF 		bl	VXISI2CWrite
 5716              	.LVL791:
3598:Src/main.c    **** 	VXISI2CWrite(0x5A,0x10);
 5717              		.loc 1 3598 0
 5718 02d0 0821     		movs	r1, #8
 5719 02d2 5920     		movs	r0, #89
 5720 02d4 FFF7FEFF 		bl	VXISI2CWrite
 5721              	.LVL792:
3599:Src/main.c    **** 	VXISI2CWrite(0x5B,0x00);
 5722              		.loc 1 3599 0
 5723 02d8 1021     		movs	r1, #16
 5724 02da 5A20     		movs	r0, #90
 5725 02dc FFF7FEFF 		bl	VXISI2CWrite
 5726              	.LVL793:
3600:Src/main.c    **** 	VXISI2CWrite(0x5C,0x68);
 5727              		.loc 1 3600 0
 5728 02e0 0021     		movs	r1, #0
 5729 02e2 5B20     		movs	r0, #91
 5730 02e4 FFF7FEFF 		bl	VXISI2CWrite
 5731              	.LVL794:
3601:Src/main.c    **** 	VXISI2CWrite(0x5D,0xA8);
 5732              		.loc 1 3601 0
 5733 02e8 6821     		movs	r1, #104
 5734 02ea 5C20     		movs	r0, #92
 5735 02ec FFF7FEFF 		bl	VXISI2CWrite
 5736              	.LVL795:
3602:Src/main.c    **** 	VXISI2CWrite(0x5E,0xC0);
 5737              		.loc 1 3602 0
 5738 02f0 A821     		movs	r1, #168
 5739 02f2 5D20     		movs	r0, #93
 5740 02f4 FFF7FEFF 		bl	VXISI2CWrite
 5741              	.LVL796:
3603:Src/main.c    **** 	VXISI2CWrite(0x5F,0x53);
 5742              		.loc 1 3603 0
 5743 02f8 C021     		movs	r1, #192
 5744 02fa 5E20     		movs	r0, #94
 5745 02fc FFF7FEFF 		bl	VXISI2CWrite
 5746              	.LVL797:
3604:Src/main.c    **** 	VXISI2CWrite(0x60,0xE0);
 5747              		.loc 1 3604 0
 5748 0300 5321     		movs	r1, #83
 5749 0302 5F20     		movs	r0, #95
 5750 0304 FFF7FEFF 		bl	VXISI2CWrite
 5751              	.LVL798:
3605:Src/main.c    **** 	VXISI2CWrite(0x61,0xCC);
 5752              		.loc 1 3605 0
 5753 0308 E021     		movs	r1, #224
 5754 030a 6020     		movs	r0, #96
 5755 030c FFF7FEFF 		bl	VXISI2CWrite
 5756              	.LVL799:
3606:Src/main.c    **** 	VXISI2CWrite(0x62,0x33);
 5757              		.loc 1 3606 0
 5758 0310 CC21     		movs	r1, #204
 5759 0312 6120     		movs	r0, #97
ARM GAS  /tmp/ccQZgaDW.s 			page 193


 5760 0314 FFF7FEFF 		bl	VXISI2CWrite
 5761              	.LVL800:
3607:Src/main.c    **** 	VXISI2CWrite(0x63,0x01);
 5762              		.loc 1 3607 0
 5763 0318 3321     		movs	r1, #51
 5764 031a 6220     		movs	r0, #98
 5765 031c FFF7FEFF 		bl	VXISI2CWrite
 5766              	.LVL801:
3608:Src/main.c    **** 	VXISI2CWrite(0x64,0xFF);
 5767              		.loc 1 3608 0
 5768 0320 0121     		movs	r1, #1
 5769 0322 6320     		movs	r0, #99
 5770 0324 FFF7FEFF 		bl	VXISI2CWrite
 5771              	.LVL802:
3609:Src/main.c    **** 	VXISI2CWrite(0x65,0x01);
 5772              		.loc 1 3609 0
 5773 0328 FF21     		movs	r1, #255
 5774 032a 6420     		movs	r0, #100
 5775 032c FFF7FEFF 		bl	VXISI2CWrite
 5776              	.LVL803:
3610:Src/main.c    **** 	VXISI2CWrite(0x66,0xFF);
 5777              		.loc 1 3610 0
 5778 0330 0121     		movs	r1, #1
 5779 0332 6520     		movs	r0, #101
 5780 0334 FFF7FEFF 		bl	VXISI2CWrite
 5781              	.LVL804:
3611:Src/main.c    **** 	VXISI2CWrite(0x67,0x89);
 5782              		.loc 1 3611 0
 5783 0338 FF21     		movs	r1, #255
 5784 033a 6620     		movs	r0, #102
 5785 033c FFF7FEFF 		bl	VXISI2CWrite
 5786              	.LVL805:
3612:Src/main.c    **** 	VXISI2CWrite(0x68,0xAB);
 5787              		.loc 1 3612 0
 5788 0340 8921     		movs	r1, #137
 5789 0342 6720     		movs	r0, #103
 5790 0344 FFF7FEFF 		bl	VXISI2CWrite
 5791              	.LVL806:
3613:Src/main.c    **** 	VXISI2CWrite(0x69,0x88);
 5792              		.loc 1 3613 0
 5793 0348 AB21     		movs	r1, #171
 5794 034a 6820     		movs	r0, #104
 5795 034c FFF7FEFF 		bl	VXISI2CWrite
 5796              	.LVL807:
3614:Src/main.c    **** 	VXISI2CWrite(0x6A,0x6E);
 5797              		.loc 1 3614 0
 5798 0350 8821     		movs	r1, #136
 5799 0352 6920     		movs	r0, #105
 5800 0354 FFF7FEFF 		bl	VXISI2CWrite
 5801              	.LVL808:
3615:Src/main.c    **** 	VXISI2CWrite(0x6B,0x6E);
 5802              		.loc 1 3615 0
 5803 0358 6E21     		movs	r1, #110
 5804 035a 6A20     		movs	r0, #106
 5805 035c FFF7FEFF 		bl	VXISI2CWrite
 5806              	.LVL809:
3616:Src/main.c    **** 	VXISI2CWrite(0x6C,0x6E);
ARM GAS  /tmp/ccQZgaDW.s 			page 194


 5807              		.loc 1 3616 0
 5808 0360 6E21     		movs	r1, #110
 5809 0362 6B20     		movs	r0, #107
 5810 0364 FFF7FEFF 		bl	VXISI2CWrite
 5811              	.LVL810:
3617:Src/main.c    **** 	VXISI2CWrite(0x6D,0x00);
 5812              		.loc 1 3617 0
 5813 0368 6E21     		movs	r1, #110
 5814 036a 6C20     		movs	r0, #108
 5815 036c FFF7FEFF 		bl	VXISI2CWrite
 5816              	.LVL811:
3618:Src/main.c    **** 	VXISI2CWrite(0x6E,0x00);
 5817              		.loc 1 3618 0
 5818 0370 0021     		movs	r1, #0
 5819 0372 6D20     		movs	r0, #109
 5820 0374 FFF7FEFF 		bl	VXISI2CWrite
 5821              	.LVL812:
3619:Src/main.c    **** 	VXISI2CWrite(0x6F,0x00);
 5822              		.loc 1 3619 0
 5823 0378 0021     		movs	r1, #0
 5824 037a 6E20     		movs	r0, #110
 5825 037c FFF7FEFF 		bl	VXISI2CWrite
 5826              	.LVL813:
3620:Src/main.c    **** 	VXISI2CWrite(0x70,0x00);
 5827              		.loc 1 3620 0
 5828 0380 0021     		movs	r1, #0
 5829 0382 6F20     		movs	r0, #111
 5830 0384 FFF7FEFF 		bl	VXISI2CWrite
 5831              	.LVL814:
3621:Src/main.c    **** 	VXISI2CWrite(0x71,0x00);
 5832              		.loc 1 3621 0
 5833 0388 0021     		movs	r1, #0
 5834 038a 7020     		movs	r0, #112
 5835 038c FFF7FEFF 		bl	VXISI2CWrite
 5836              	.LVL815:
3622:Src/main.c    **** 	VXISI2CWrite(0x72,0x00);
 5837              		.loc 1 3622 0
 5838 0390 0021     		movs	r1, #0
 5839 0392 7120     		movs	r0, #113
 5840 0394 FFF7FEFF 		bl	VXISI2CWrite
 5841              	.LVL816:
3623:Src/main.c    **** 	VXISI2CWrite(0x73,0x00);
 5842              		.loc 1 3623 0
 5843 0398 0021     		movs	r1, #0
 5844 039a 7220     		movs	r0, #114
 5845 039c FFF7FEFF 		bl	VXISI2CWrite
 5846              	.LVL817:
3624:Src/main.c    **** 	VXISI2CWrite(0x74,0x06);
 5847              		.loc 1 3624 0
 5848 03a0 0021     		movs	r1, #0
 5849 03a2 7320     		movs	r0, #115
 5850 03a4 FFF7FEFF 		bl	VXISI2CWrite
 5851              	.LVL818:
3625:Src/main.c    **** 	VXISI2CWrite(0x75,0xFF);
 5852              		.loc 1 3625 0
 5853 03a8 0621     		movs	r1, #6
 5854 03aa 7420     		movs	r0, #116
ARM GAS  /tmp/ccQZgaDW.s 			page 195


 5855 03ac FFF7FEFF 		bl	VXISI2CWrite
 5856              	.LVL819:
3626:Src/main.c    **** 	VXISI2CWrite(0x76,0xFF);
 5857              		.loc 1 3626 0
 5858 03b0 FF21     		movs	r1, #255
 5859 03b2 7520     		movs	r0, #117
 5860 03b4 FFF7FEFF 		bl	VXISI2CWrite
 5861              	.LVL820:
3627:Src/main.c    **** 	VXISI2CWrite(0x77,0xFF);
 5862              		.loc 1 3627 0
 5863 03b8 FF21     		movs	r1, #255
 5864 03ba 7620     		movs	r0, #118
 5865 03bc FFF7FEFF 		bl	VXISI2CWrite
 5866              	.LVL821:
3628:Src/main.c    **** 	VXISI2CWrite(0x78,0xFF);
 5867              		.loc 1 3628 0
 5868 03c0 FF21     		movs	r1, #255
 5869 03c2 7720     		movs	r0, #119
 5870 03c4 FFF7FEFF 		bl	VXISI2CWrite
 5871              	.LVL822:
3629:Src/main.c    **** 	VXISI2CWrite(0x79,0xFF);
 5872              		.loc 1 3629 0
 5873 03c8 FF21     		movs	r1, #255
 5874 03ca 7820     		movs	r0, #120
 5875 03cc FFF7FEFF 		bl	VXISI2CWrite
 5876              	.LVL823:
3630:Src/main.c    **** 	VXISI2CWrite(0x7A,0xFF);
 5877              		.loc 1 3630 0
 5878 03d0 FF21     		movs	r1, #255
 5879 03d2 7920     		movs	r0, #121
 5880 03d4 FFF7FEFF 		bl	VXISI2CWrite
 5881              	.LVL824:
3631:Src/main.c    **** 	VXISI2CWrite(0x7B,0xFF);
 5882              		.loc 1 3631 0
 5883 03d8 FF21     		movs	r1, #255
 5884 03da 7A20     		movs	r0, #122
 5885 03dc FFF7FEFF 		bl	VXISI2CWrite
 5886              	.LVL825:
3632:Src/main.c    **** 	VXISI2CWrite(0x7C,0xFF);
 5887              		.loc 1 3632 0
 5888 03e0 FF21     		movs	r1, #255
 5889 03e2 7B20     		movs	r0, #123
 5890 03e4 FFF7FEFF 		bl	VXISI2CWrite
 5891              	.LVL826:
3633:Src/main.c    **** 	VXISI2CWrite(0x7D,0xF0);
 5892              		.loc 1 3633 0
 5893 03e8 FF21     		movs	r1, #255
 5894 03ea 7C20     		movs	r0, #124
 5895 03ec FFF7FEFF 		bl	VXISI2CWrite
 5896              	.LVL827:
3634:Src/main.c    **** 	VXISI2CWrite(0x7E,0x80);
 5897              		.loc 1 3634 0
 5898 03f0 F021     		movs	r1, #240
 5899 03f2 7D20     		movs	r0, #125
 5900 03f4 FFF7FEFF 		bl	VXISI2CWrite
 5901              	.LVL828:
 5902 03f8 02E0     		b	.L199
ARM GAS  /tmp/ccQZgaDW.s 			page 196


 5903              	.L200:
 5904 03fa 00BF     		.align	2
 5905              	.L198:
 5906 03fc 00000000 		.word	.LC36
 5907              	.L199:
3635:Src/main.c    **** 	VXISI2CWrite(0x7F,0x00);
 5908              		.loc 1 3635 0
 5909 0400 8021     		movs	r1, #128
 5910 0402 7E20     		movs	r0, #126
 5911 0404 FFF7FEFF 		bl	VXISI2CWrite
 5912              	.LVL829:
3636:Src/main.c    **** 	VXISI2CWrite(0x80,0x01);
 5913              		.loc 1 3636 0
 5914 0408 0021     		movs	r1, #0
 5915 040a 7F20     		movs	r0, #127
 5916 040c FFF7FEFF 		bl	VXISI2CWrite
 5917              	.LVL830:
3637:Src/main.c    **** 	VXISI2CWrite(0x81,0x15);
 5918              		.loc 1 3637 0
 5919 0410 0121     		movs	r1, #1
 5920 0412 8020     		movs	r0, #128
 5921 0414 FFF7FEFF 		bl	VXISI2CWrite
 5922              	.LVL831:
3638:Src/main.c    **** 	VXISI2CWrite(0x82,0x40);
 5923              		.loc 1 3638 0
 5924 0418 1521     		movs	r1, #21
 5925 041a 8120     		movs	r0, #129
 5926 041c FFF7FEFF 		bl	VXISI2CWrite
 5927              	.LVL832:
3639:Src/main.c    **** 	VXISI2CWrite(0x83,0x2D);
 5928              		.loc 1 3639 0
 5929 0420 4021     		movs	r1, #64
 5930 0422 8220     		movs	r0, #130
 5931 0424 FFF7FEFF 		bl	VXISI2CWrite
 5932              	.LVL833:
3640:Src/main.c    **** 	VXISI2CWrite(0x84,0x57);
 5933              		.loc 1 3640 0
 5934 0428 2D21     		movs	r1, #45
 5935 042a 8320     		movs	r0, #131
 5936 042c FFF7FEFF 		bl	VXISI2CWrite
 5937              	.LVL834:
3641:Src/main.c    **** 	VXISI2CWrite(0x85,0xFD);
 5938              		.loc 1 3641 0
 5939 0430 5721     		movs	r1, #87
 5940 0432 8420     		movs	r0, #132
 5941 0434 FFF7FEFF 		bl	VXISI2CWrite
 5942              	.LVL835:
3642:Src/main.c    **** 	VXISI2CWrite(0x86,0x00);
 5943              		.loc 1 3642 0
 5944 0438 FD21     		movs	r1, #253
 5945 043a 8520     		movs	r0, #133
 5946 043c FFF7FEFF 		bl	VXISI2CWrite
 5947              	.LVL836:
3643:Src/main.c    **** 	VXISI2CWrite(0x87,0x00);
 5948              		.loc 1 3643 0
 5949 0440 0021     		movs	r1, #0
 5950 0442 8620     		movs	r0, #134
ARM GAS  /tmp/ccQZgaDW.s 			page 197


 5951 0444 FFF7FEFF 		bl	VXISI2CWrite
 5952              	.LVL837:
3644:Src/main.c    **** 	VXISI2CWrite(0x88,0x00);
 5953              		.loc 1 3644 0
 5954 0448 0021     		movs	r1, #0
 5955 044a 8720     		movs	r0, #135
 5956 044c FFF7FEFF 		bl	VXISI2CWrite
 5957              	.LVL838:
3645:Src/main.c    **** 	VXISI2CWrite(0x89,0x00);
 5958              		.loc 1 3645 0
 5959 0450 0021     		movs	r1, #0
 5960 0452 8820     		movs	r0, #136
 5961 0454 FFF7FEFF 		bl	VXISI2CWrite
 5962              	.LVL839:
3646:Src/main.c    **** 	VXISI2CWrite(0x8A,0x00);
 5963              		.loc 1 3646 0
 5964 0458 0021     		movs	r1, #0
 5965 045a 8920     		movs	r0, #137
 5966 045c FFF7FEFF 		bl	VXISI2CWrite
 5967              	.LVL840:
3647:Src/main.c    **** 	VXISI2CWrite(0x8B,0x7E);
 5968              		.loc 1 3647 0
 5969 0460 0021     		movs	r1, #0
 5970 0462 8A20     		movs	r0, #138
 5971 0464 FFF7FEFF 		bl	VXISI2CWrite
 5972              	.LVL841:
3648:Src/main.c    **** 	VXISI2CWrite(0x8C,0x03);
 5973              		.loc 1 3648 0
 5974 0468 7E21     		movs	r1, #126
 5975 046a 8B20     		movs	r0, #139
 5976 046c FFF7FEFF 		bl	VXISI2CWrite
 5977              	.LVL842:
3649:Src/main.c    **** 	VXISI2CWrite(0x8D,0x17);
 5978              		.loc 1 3649 0
 5979 0470 0321     		movs	r1, #3
 5980 0472 8C20     		movs	r0, #140
 5981 0474 FFF7FEFF 		bl	VXISI2CWrite
 5982              	.LVL843:
3650:Src/main.c    **** 	VXISI2CWrite(0x8E,0x8C);
 5983              		.loc 1 3650 0
 5984 0478 1721     		movs	r1, #23
 5985 047a 8D20     		movs	r0, #141
 5986 047c FFF7FEFF 		bl	VXISI2CWrite
 5987              	.LVL844:
3651:Src/main.c    **** 	VXISI2CWrite(0x8F,0x00);
 5988              		.loc 1 3651 0
 5989 0480 8C21     		movs	r1, #140
 5990 0482 8E20     		movs	r0, #142
 5991 0484 FFF7FEFF 		bl	VXISI2CWrite
 5992              	.LVL845:
3652:Src/main.c    **** 	VXISI2CWrite(0x90,0xCC);
 5993              		.loc 1 3652 0
 5994 0488 0021     		movs	r1, #0
 5995 048a 8F20     		movs	r0, #143
 5996 048c FFF7FEFF 		bl	VXISI2CWrite
 5997              	.LVL846:
3653:Src/main.c    **** 	VXISI2CWrite(0x91,0x41);
ARM GAS  /tmp/ccQZgaDW.s 			page 198


 5998              		.loc 1 3653 0
 5999 0490 CC21     		movs	r1, #204
 6000 0492 9020     		movs	r0, #144
 6001 0494 FFF7FEFF 		bl	VXISI2CWrite
 6002              	.LVL847:
3654:Src/main.c    **** 	VXISI2CWrite(0x92,0xC4);
 6003              		.loc 1 3654 0
 6004 0498 4121     		movs	r1, #65
 6005 049a 9120     		movs	r0, #145
 6006 049c FFF7FEFF 		bl	VXISI2CWrite
 6007              	.LVL848:
3655:Src/main.c    **** 	VXISI2CWrite(0x93,0x84);
 6008              		.loc 1 3655 0
 6009 04a0 C421     		movs	r1, #196
 6010 04a2 9220     		movs	r0, #146
 6011 04a4 FFF7FEFF 		bl	VXISI2CWrite
 6012              	.LVL849:
3656:Src/main.c    **** 	VXISI2CWrite(0x94,0x98);
 6013              		.loc 1 3656 0
 6014 04a8 8421     		movs	r1, #132
 6015 04aa 9320     		movs	r0, #147
 6016 04ac FFF7FEFF 		bl	VXISI2CWrite
 6017              	.LVL850:
3657:Src/main.c    **** 	VXISI2CWrite(0x95,0x80);
 6018              		.loc 1 3657 0
 6019 04b0 9821     		movs	r1, #152
 6020 04b2 9420     		movs	r0, #148
 6021 04b4 FFF7FEFF 		bl	VXISI2CWrite
 6022              	.LVL851:
3658:Src/main.c    **** 	VXISI2CWrite(0x96,0x65);
 6023              		.loc 1 3658 0
 6024 04b8 8021     		movs	r1, #128
 6025 04ba 9520     		movs	r0, #149
 6026 04bc FFF7FEFF 		bl	VXISI2CWrite
 6027              	.LVL852:
3659:Src/main.c    **** 	VXISI2CWrite(0x97,0x70);
 6028              		.loc 1 3659 0
 6029 04c0 6521     		movs	r1, #101
 6030 04c2 9620     		movs	r0, #150
 6031 04c4 FFF7FEFF 		bl	VXISI2CWrite
 6032              	.LVL853:
3660:Src/main.c    **** 	VXISI2CWrite(0x98,0x29);
 6033              		.loc 1 3660 0
 6034 04c8 7021     		movs	r1, #112
 6035 04ca 9720     		movs	r0, #151
 6036 04cc FFF7FEFF 		bl	VXISI2CWrite
 6037              	.LVL854:
3661:Src/main.c    **** 	VXISI2CWrite(0x99,0x90);
 6038              		.loc 1 3661 0
 6039 04d0 2921     		movs	r1, #41
 6040 04d2 9820     		movs	r0, #152
 6041 04d4 FFF7FEFF 		bl	VXISI2CWrite
 6042              	.LVL855:
3662:Src/main.c    **** 	VXISI2CWrite(0x9A,0x00);
 6043              		.loc 1 3662 0
 6044 04d8 9021     		movs	r1, #144
 6045 04da 9920     		movs	r0, #153
ARM GAS  /tmp/ccQZgaDW.s 			page 199


 6046 04dc FFF7FEFF 		bl	VXISI2CWrite
 6047              	.LVL856:
3663:Src/main.c    **** 	VXISI2CWrite(0x9B,0x04);
 6048              		.loc 1 3663 0
 6049 04e0 0021     		movs	r1, #0
 6050 04e2 9A20     		movs	r0, #154
 6051 04e4 FFF7FEFF 		bl	VXISI2CWrite
 6052              	.LVL857:
3664:Src/main.c    **** 	VXISI2CWrite(0x9C,0x00);
 6053              		.loc 1 3664 0
 6054 04e8 0421     		movs	r1, #4
 6055 04ea 9B20     		movs	r0, #155
 6056 04ec FFF7FEFF 		bl	VXISI2CWrite
 6057              	.LVL858:
3665:Src/main.c    **** 	VXISI2CWrite(0x9D,0x00);
 6058              		.loc 1 3665 0
 6059 04f0 0021     		movs	r1, #0
 6060 04f2 9C20     		movs	r0, #156
 6061 04f4 FFF7FEFF 		bl	VXISI2CWrite
 6062              	.LVL859:
3666:Src/main.c    **** 	VXISI2CWrite(0x9E,0x04);
 6063              		.loc 1 3666 0
 6064 04f8 0021     		movs	r1, #0
 6065 04fa 9D20     		movs	r0, #157
 6066 04fc FFF7FEFF 		bl	VXISI2CWrite
 6067              	.LVL860:
3667:Src/main.c    **** 	VXISI2CWrite(0x9F,0x65);
 6068              		.loc 1 3667 0
 6069 0500 0421     		movs	r1, #4
 6070 0502 9E20     		movs	r0, #158
 6071 0504 FFF7FEFF 		bl	VXISI2CWrite
 6072              	.LVL861:
3668:Src/main.c    **** 	VXISI2CWrite(0xA0,0x80);
 6073              		.loc 1 3668 0
 6074 0508 6521     		movs	r1, #101
 6075 050a 9F20     		movs	r0, #159
 6076 050c FFF7FEFF 		bl	VXISI2CWrite
 6077              	.LVL862:
3669:Src/main.c    **** 	VXISI2CWrite(0xA1,0xD8);
 6078              		.loc 1 3669 0
 6079 0510 8021     		movs	r1, #128
 6080 0512 A020     		movs	r0, #160
 6081 0514 FFF7FEFF 		bl	VXISI2CWrite
 6082              	.LVL863:
3670:Src/main.c    **** 	VXISI2CWrite(0xA2,0x98);
 6083              		.loc 1 3670 0
 6084 0518 D821     		movs	r1, #216
 6085 051a A120     		movs	r0, #161
 6086 051c FFF7FEFF 		bl	VXISI2CWrite
 6087              	.LVL864:
3671:Src/main.c    **** 	VXISI2CWrite(0xA3,0x87);
 6088              		.loc 1 3671 0
 6089 0520 9821     		movs	r1, #152
 6090 0522 A220     		movs	r0, #162
 6091 0524 FFF7FEFF 		bl	VXISI2CWrite
 6092              	.LVL865:
3672:Src/main.c    **** 	VXISI2CWrite(0xA4,0x00);
ARM GAS  /tmp/ccQZgaDW.s 			page 200


 6093              		.loc 1 3672 0
 6094 0528 8721     		movs	r1, #135
 6095 052a A320     		movs	r0, #163
 6096 052c FFF7FEFF 		bl	VXISI2CWrite
 6097              	.LVL866:
3673:Src/main.c    **** 	VXISI2CWrite(0xA5,0x80);
 6098              		.loc 1 3673 0
 6099 0530 0021     		movs	r1, #0
 6100 0532 A420     		movs	r0, #164
 6101 0534 FFF7FEFF 		bl	VXISI2CWrite
 6102              	.LVL867:
3674:Src/main.c    **** 	VXISI2CWrite(0xA6,0x00);
 6103              		.loc 1 3674 0
 6104 0538 8021     		movs	r1, #128
 6105 053a A520     		movs	r0, #165
 6106 053c FFF7FEFF 		bl	VXISI2CWrite
 6107              	.LVL868:
3675:Src/main.c    **** 	VXISI2CWrite(0xA7,0x70);
 6108              		.loc 1 3675 0
 6109 0540 0021     		movs	r1, #0
 6110 0542 A620     		movs	r0, #166
 6111 0544 FFF7FEFF 		bl	VXISI2CWrite
 6112              	.LVL869:
3676:Src/main.c    **** 	VXISI2CWrite(0xA8,0x40);
 6113              		.loc 1 3676 0
 6114 0548 7021     		movs	r1, #112
 6115 054a A720     		movs	r0, #167
 6116 054c FFF7FEFF 		bl	VXISI2CWrite
 6117              	.LVL870:
3677:Src/main.c    **** 	VXISI2CWrite(0xA9,0x1E);
 6118              		.loc 1 3677 0
 6119 0550 4021     		movs	r1, #64
 6120 0552 A820     		movs	r0, #168
 6121 0554 FFF7FEFF 		bl	VXISI2CWrite
 6122              	.LVL871:
3678:Src/main.c    **** 	VXISI2CWrite(0xAA,0x2C);
 6123              		.loc 1 3678 0
 6124 0558 1E21     		movs	r1, #30
 6125 055a A920     		movs	r0, #169
 6126 055c FFF7FEFF 		bl	VXISI2CWrite
 6127              	.LVL872:
3679:Src/main.c    **** 	VXISI2CWrite(0xAB,0x00);
 6128              		.loc 1 3679 0
 6129 0560 2C21     		movs	r1, #44
 6130 0562 AA20     		movs	r0, #170
 6131 0564 FFF7FEFF 		bl	VXISI2CWrite
 6132              	.LVL873:
3680:Src/main.c    **** 	VXISI2CWrite(0xAC,0x90);
 6133              		.loc 1 3680 0
 6134 0568 0021     		movs	r1, #0
 6135 056a AB20     		movs	r0, #171
 6136 056c FFF7FEFF 		bl	VXISI2CWrite
 6137              	.LVL874:
3681:Src/main.c    **** 	VXISI2CWrite(0xAD,0x65);
 6138              		.loc 1 3681 0
 6139 0570 9021     		movs	r1, #144
 6140 0572 AC20     		movs	r0, #172
ARM GAS  /tmp/ccQZgaDW.s 			page 201


 6141 0574 FFF7FEFF 		bl	VXISI2CWrite
 6142              	.LVL875:
3682:Src/main.c    **** 	VXISI2CWrite(0xAE,0x65);
 6143              		.loc 1 3682 0
 6144 0578 6521     		movs	r1, #101
 6145 057a AD20     		movs	r0, #173
 6146 057c FFF7FEFF 		bl	VXISI2CWrite
 6147              	.LVL876:
3683:Src/main.c    **** 	VXISI2CWrite(0xAF,0x99);
 6148              		.loc 1 3683 0
 6149 0580 6521     		movs	r1, #101
 6150 0582 AE20     		movs	r0, #174
 6151 0584 FFF7FEFF 		bl	VXISI2CWrite
 6152              	.LVL877:
3684:Src/main.c    **** 	VXISI2CWrite(0xB0,0x00);
 6153              		.loc 1 3684 0
 6154 0588 9921     		movs	r1, #153
 6155 058a AF20     		movs	r0, #175
 6156 058c FFF7FEFF 		bl	VXISI2CWrite
 6157              	.LVL878:
3685:Src/main.c    **** 	VXISI2CWrite(0xB1,0x00);
 6158              		.loc 1 3685 0
 6159 0590 0021     		movs	r1, #0
 6160 0592 B020     		movs	r0, #176
 6161 0594 FFF7FEFF 		bl	VXISI2CWrite
 6162              	.LVL879:
3686:Src/main.c    **** 	VXISI2CWrite(0xB2,0x00);
 6163              		.loc 1 3686 0
 6164 0598 0021     		movs	r1, #0
 6165 059a B120     		movs	r0, #177
 6166 059c FFF7FEFF 		bl	VXISI2CWrite
 6167              	.LVL880:
3687:Src/main.c    **** 	VXISI2CWrite(0xB3,0x00);
 6168              		.loc 1 3687 0
 6169 05a0 0021     		movs	r1, #0
 6170 05a2 B220     		movs	r0, #178
 6171 05a4 FFF7FEFF 		bl	VXISI2CWrite
 6172              	.LVL881:
3688:Src/main.c    **** 	VXISI2CWrite(0xB4,0x00);
 6173              		.loc 1 3688 0
 6174 05a8 0021     		movs	r1, #0
 6175 05aa B320     		movs	r0, #179
 6176 05ac FFF7FEFF 		bl	VXISI2CWrite
 6177              	.LVL882:
3689:Src/main.c    **** 	VXISI2CWrite(0xB5,0x00);
 6178              		.loc 1 3689 0
 6179 05b0 0021     		movs	r1, #0
 6180 05b2 B420     		movs	r0, #180
 6181 05b4 FFF7FEFF 		bl	VXISI2CWrite
 6182              	.LVL883:
3690:Src/main.c    **** 	VXISI2CWrite(0xB6,0x00);
 6183              		.loc 1 3690 0
 6184 05b8 0021     		movs	r1, #0
 6185 05ba B520     		movs	r0, #181
 6186 05bc FFF7FEFF 		bl	VXISI2CWrite
 6187              	.LVL884:
3691:Src/main.c    **** 	VXISI2CWrite(0xB7,0x00);
ARM GAS  /tmp/ccQZgaDW.s 			page 202


 6188              		.loc 1 3691 0
 6189 05c0 0021     		movs	r1, #0
 6190 05c2 B620     		movs	r0, #182
 6191 05c4 FFF7FEFF 		bl	VXISI2CWrite
 6192              	.LVL885:
3692:Src/main.c    **** 	VXISI2CWrite(0xB8,0x80);
 6193              		.loc 1 3692 0
 6194 05c8 0021     		movs	r1, #0
 6195 05ca B720     		movs	r0, #183
 6196 05cc FFF7FEFF 		bl	VXISI2CWrite
 6197              	.LVL886:
3693:Src/main.c    **** 	VXISI2CWrite(0xB9,0x00);
 6198              		.loc 1 3693 0
 6199 05d0 8021     		movs	r1, #128
 6200 05d2 B820     		movs	r0, #184
 6201 05d4 FFF7FEFF 		bl	VXISI2CWrite
 6202              	.LVL887:
3694:Src/main.c    **** 	VXISI2CWrite(0xBA,0x01);
 6203              		.loc 1 3694 0
 6204 05d8 0021     		movs	r1, #0
 6205 05da B920     		movs	r0, #185
 6206 05dc FFF7FEFF 		bl	VXISI2CWrite
 6207              	.LVL888:
3695:Src/main.c    **** 	VXISI2CWrite(0xBB,0x00);
 6208              		.loc 1 3695 0
 6209 05e0 0121     		movs	r1, #1
 6210 05e2 BA20     		movs	r0, #186
 6211 05e4 FFF7FEFF 		bl	VXISI2CWrite
 6212              	.LVL889:
3696:Src/main.c    **** 	VXISI2CWrite(0xBC,0x90);
 6213              		.loc 1 3696 0
 6214 05e8 0021     		movs	r1, #0
 6215 05ea BB20     		movs	r0, #187
 6216 05ec FFF7FEFF 		bl	VXISI2CWrite
 6217              	.LVL890:
3697:Src/main.c    **** 	VXISI2CWrite(0xBD,0x01);
 6218              		.loc 1 3697 0
 6219 05f0 9021     		movs	r1, #144
 6220 05f2 BC20     		movs	r0, #188
 6221 05f4 FFF7FEFF 		bl	VXISI2CWrite
 6222              	.LVL891:
3698:Src/main.c    **** 	VXISI2CWrite(0xBE,0x2C);
 6223              		.loc 1 3698 0
 6224 05f8 0121     		movs	r1, #1
 6225 05fa BD20     		movs	r0, #189
 6226 05fc FFF7FEFF 		bl	VXISI2CWrite
 6227              	.LVL892:
3699:Src/main.c    **** 	VXISI2CWrite(0xBF,0x00);
 6228              		.loc 1 3699 0
 6229 0600 2C21     		movs	r1, #44
 6230 0602 BE20     		movs	r0, #190
 6231 0604 FFF7FEFF 		bl	VXISI2CWrite
 6232              	.LVL893:
3700:Src/main.c    **** 	VXISI2CWrite(0xC0,0x00);
 6233              		.loc 1 3700 0
 6234 0608 0021     		movs	r1, #0
 6235 060a BF20     		movs	r0, #191
ARM GAS  /tmp/ccQZgaDW.s 			page 203


 6236 060c FFF7FEFF 		bl	VXISI2CWrite
 6237              	.LVL894:
3701:Src/main.c    **** 	VXISI2CWrite(0xC1,0x20);
 6238              		.loc 1 3701 0
 6239 0610 0021     		movs	r1, #0
 6240 0612 C020     		movs	r0, #192
 6241 0614 FFF7FEFF 		bl	VXISI2CWrite
 6242              	.LVL895:
3702:Src/main.c    **** 	VXISI2CWrite(0xC2,0x20);
 6243              		.loc 1 3702 0
 6244 0618 2021     		movs	r1, #32
 6245 061a C120     		movs	r0, #193
 6246 061c FFF7FEFF 		bl	VXISI2CWrite
 6247              	.LVL896:
3703:Src/main.c    **** 	VXISI2CWrite(0xC3,0x20);
 6248              		.loc 1 3703 0
 6249 0620 2021     		movs	r1, #32
 6250 0622 C220     		movs	r0, #194
 6251 0624 FFF7FEFF 		bl	VXISI2CWrite
 6252              	.LVL897:
3704:Src/main.c    **** 	VXISI2CWrite(0xC4,0x20);
 6253              		.loc 1 3704 0
 6254 0628 2021     		movs	r1, #32
 6255 062a C320     		movs	r0, #195
 6256 062c FFF7FEFF 		bl	VXISI2CWrite
 6257              	.LVL898:
3705:Src/main.c    **** 	VXISI2CWrite(0xC5,0x20);
 6258              		.loc 1 3705 0
 6259 0630 2021     		movs	r1, #32
 6260 0632 C420     		movs	r0, #196
 6261 0634 FFF7FEFF 		bl	VXISI2CWrite
 6262              	.LVL899:
3706:Src/main.c    **** 	VXISI2CWrite(0xC6,0x00);
 6263              		.loc 1 3706 0
 6264 0638 2021     		movs	r1, #32
 6265 063a C520     		movs	r0, #197
 6266 063c FFF7FEFF 		bl	VXISI2CWrite
 6267              	.LVL900:
3707:Src/main.c    **** 	VXISI2CWrite(0xC7,0x00);
 6268              		.loc 1 3707 0
 6269 0640 0021     		movs	r1, #0
 6270 0642 C620     		movs	r0, #198
 6271 0644 FFF7FEFF 		bl	VXISI2CWrite
 6272              	.LVL901:
3708:Src/main.c    **** 	VXISI2CWrite(0xC8,0x00);
 6273              		.loc 1 3708 0
 6274 0648 0021     		movs	r1, #0
 6275 064a C720     		movs	r0, #199
 6276 064c FFF7FEFF 		bl	VXISI2CWrite
 6277              	.LVL902:
3709:Src/main.c    **** 	VXISI2CWrite(0xC9,0x00);
 6278              		.loc 1 3709 0
 6279 0650 0021     		movs	r1, #0
 6280 0652 C820     		movs	r0, #200
 6281 0654 FFF7FEFF 		bl	VXISI2CWrite
 6282              	.LVL903:
3710:Src/main.c    **** 	VXISI2CWrite(0xCA,0x00);
ARM GAS  /tmp/ccQZgaDW.s 			page 204


 6283              		.loc 1 3710 0
 6284 0658 0021     		movs	r1, #0
 6285 065a C920     		movs	r0, #201
 6286 065c FFF7FEFF 		bl	VXISI2CWrite
 6287              	.LVL904:
3711:Src/main.c    **** 	VXISI2CWrite(0xCB,0x00);
 6288              		.loc 1 3711 0
 6289 0660 0021     		movs	r1, #0
 6290 0662 CA20     		movs	r0, #202
 6291 0664 FFF7FEFF 		bl	VXISI2CWrite
 6292              	.LVL905:
3712:Src/main.c    **** 	VXISI2CWrite(0xCC,0x00);
 6293              		.loc 1 3712 0
 6294 0668 0021     		movs	r1, #0
 6295 066a CB20     		movs	r0, #203
 6296 066c FFF7FEFF 		bl	VXISI2CWrite
 6297              	.LVL906:
3713:Src/main.c    **** 	VXISI2CWrite(0xCD,0x00);
 6298              		.loc 1 3713 0
 6299 0670 0021     		movs	r1, #0
 6300 0672 CC20     		movs	r0, #204
 6301 0674 FFF7FEFF 		bl	VXISI2CWrite
 6302              	.LVL907:
3714:Src/main.c    **** 	VXISI2CWrite(0xCE,0x00);
 6303              		.loc 1 3714 0
 6304 0678 0021     		movs	r1, #0
 6305 067a CD20     		movs	r0, #205
 6306 067c FFF7FEFF 		bl	VXISI2CWrite
 6307              	.LVL908:
3715:Src/main.c    **** 	VXISI2CWrite(0xCF,0x00);
 6308              		.loc 1 3715 0
 6309 0680 0021     		movs	r1, #0
 6310 0682 CE20     		movs	r0, #206
 6311 0684 FFF7FEFF 		bl	VXISI2CWrite
 6312              	.LVL909:
3716:Src/main.c    **** 	VXISI2CWrite(0xD0,0xFF);
 6313              		.loc 1 3716 0
 6314 0688 0021     		movs	r1, #0
 6315 068a CF20     		movs	r0, #207
 6316 068c FFF7FEFF 		bl	VXISI2CWrite
 6317              	.LVL910:
3717:Src/main.c    **** 	VXISI2CWrite(0xD1,0x3F);
 6318              		.loc 1 3717 0
 6319 0690 FF21     		movs	r1, #255
 6320 0692 D020     		movs	r0, #208
 6321 0694 FFF7FEFF 		bl	VXISI2CWrite
 6322              	.LVL911:
3718:Src/main.c    **** 	VXISI2CWrite(0xD2,0xC2);
 6323              		.loc 1 3718 0
 6324 0698 3F21     		movs	r1, #63
 6325 069a D120     		movs	r0, #209
 6326 069c FFF7FEFF 		bl	VXISI2CWrite
 6327              	.LVL912:
3719:Src/main.c    **** 	VXISI2CWrite(0xD3,0x3F);
 6328              		.loc 1 3719 0
 6329 06a0 C221     		movs	r1, #194
 6330 06a2 D220     		movs	r0, #210
ARM GAS  /tmp/ccQZgaDW.s 			page 205


 6331 06a4 FFF7FEFF 		bl	VXISI2CWrite
 6332              	.LVL913:
3720:Src/main.c    **** 	VXISI2CWrite(0xD4,0x00);
 6333              		.loc 1 3720 0
 6334 06a8 3F21     		movs	r1, #63
 6335 06aa D320     		movs	r0, #211
 6336 06ac FFF7FEFF 		bl	VXISI2CWrite
 6337              	.LVL914:
3721:Src/main.c    **** 	VXISI2CWrite(0xD5,0x00);
 6338              		.loc 1 3721 0
 6339 06b0 0021     		movs	r1, #0
 6340 06b2 D420     		movs	r0, #212
 6341 06b4 FFF7FEFF 		bl	VXISI2CWrite
 6342              	.LVL915:
3722:Src/main.c    **** 	VXISI2CWrite(0xD6,0x00);
 6343              		.loc 1 3722 0
 6344 06b8 0021     		movs	r1, #0
 6345 06ba D520     		movs	r0, #213
 6346 06bc FFF7FEFF 		bl	VXISI2CWrite
 6347              	.LVL916:
3723:Src/main.c    **** 	VXISI2CWrite(0xD7,0x0F);
 6348              		.loc 1 3723 0
 6349 06c0 0021     		movs	r1, #0
 6350 06c2 D620     		movs	r0, #214
 6351 06c4 FFF7FEFF 		bl	VXISI2CWrite
 6352              	.LVL917:
3724:Src/main.c    **** 	VXISI2CWrite(0xD8,0x00);
 6353              		.loc 1 3724 0
 6354 06c8 0F21     		movs	r1, #15
 6355 06ca D720     		movs	r0, #215
 6356 06cc FFF7FEFF 		bl	VXISI2CWrite
 6357              	.LVL918:
3725:Src/main.c    **** 	VXISI2CWrite(0xD9,0x00);
 6358              		.loc 1 3725 0
 6359 06d0 0021     		movs	r1, #0
 6360 06d2 D820     		movs	r0, #216
 6361 06d4 FFF7FEFF 		bl	VXISI2CWrite
 6362              	.LVL919:
3726:Src/main.c    **** 	VXISI2CWrite(0xDA,0x00);
 6363              		.loc 1 3726 0
 6364 06d8 0021     		movs	r1, #0
 6365 06da D920     		movs	r0, #217
 6366 06dc FFF7FEFF 		bl	VXISI2CWrite
 6367              	.LVL920:
3727:Src/main.c    **** 	VXISI2CWrite(0xDB,0x00);
 6368              		.loc 1 3727 0
 6369 06e0 0021     		movs	r1, #0
 6370 06e2 DA20     		movs	r0, #218
 6371 06e4 FFF7FEFF 		bl	VXISI2CWrite
 6372              	.LVL921:
3728:Src/main.c    **** 	VXISI2CWrite(0xDC,0x77);
 6373              		.loc 1 3728 0
 6374 06e8 0021     		movs	r1, #0
 6375 06ea DB20     		movs	r0, #219
 6376 06ec FFF7FEFF 		bl	VXISI2CWrite
 6377              	.LVL922:
3729:Src/main.c    **** 	VXISI2CWrite(0xDD,0x01);
ARM GAS  /tmp/ccQZgaDW.s 			page 206


 6378              		.loc 1 3729 0
 6379 06f0 7721     		movs	r1, #119
 6380 06f2 DC20     		movs	r0, #220
 6381 06f4 FFF7FEFF 		bl	VXISI2CWrite
 6382              	.LVL923:
3730:Src/main.c    **** 	VXISI2CWrite(0xDE,0x5F);
 6383              		.loc 1 3730 0
 6384 06f8 0121     		movs	r1, #1
 6385 06fa DD20     		movs	r0, #221
 6386 06fc FFF7FEFF 		bl	VXISI2CWrite
 6387              	.LVL924:
3731:Src/main.c    **** 	VXISI2CWrite(0xDF,0x96);
 6388              		.loc 1 3731 0
 6389 0700 5F21     		movs	r1, #95
 6390 0702 DE20     		movs	r0, #222
 6391 0704 FFF7FEFF 		bl	VXISI2CWrite
 6392              	.LVL925:
3732:Src/main.c    **** 	VXISI2CWrite(0xE0,0x00);
 6393              		.loc 1 3732 0
 6394 0708 9621     		movs	r1, #150
 6395 070a DF20     		movs	r0, #223
 6396 070c FFF7FEFF 		bl	VXISI2CWrite
 6397              	.LVL926:
3733:Src/main.c    **** 	VXISI2CWrite(0xE1,0x00);
 6398              		.loc 1 3733 0
 6399 0710 0021     		movs	r1, #0
 6400 0712 E020     		movs	r0, #224
 6401 0714 FFF7FEFF 		bl	VXISI2CWrite
 6402              	.LVL927:
3734:Src/main.c    **** 	VXISI2CWrite(0xE2,0x00);
 6403              		.loc 1 3734 0
 6404 0718 0021     		movs	r1, #0
 6405 071a E120     		movs	r0, #225
 6406 071c FFF7FEFF 		bl	VXISI2CWrite
 6407              	.LVL928:
3735:Src/main.c    **** 	VXISI2CWrite(0xE3,0x47);
 6408              		.loc 1 3735 0
 6409 0720 0021     		movs	r1, #0
 6410 0722 E220     		movs	r0, #226
 6411 0724 FFF7FEFF 		bl	VXISI2CWrite
 6412              	.LVL929:
3736:Src/main.c    **** 	VXISI2CWrite(0xE4,0x3C);
 6413              		.loc 1 3736 0
 6414 0728 4721     		movs	r1, #71
 6415 072a E320     		movs	r0, #227
 6416 072c FFF7FEFF 		bl	VXISI2CWrite
 6417              	.LVL930:
3737:Src/main.c    **** 	VXISI2CWrite(0xE5,0x80);
 6418              		.loc 1 3737 0
 6419 0730 3C21     		movs	r1, #60
 6420 0732 E420     		movs	r0, #228
 6421 0734 FFF7FEFF 		bl	VXISI2CWrite
 6422              	.LVL931:
3738:Src/main.c    **** 	VXISI2CWrite(0xE6,0x00);
 6423              		.loc 1 3738 0
 6424 0738 8021     		movs	r1, #128
 6425 073a E520     		movs	r0, #229
ARM GAS  /tmp/ccQZgaDW.s 			page 207


 6426 073c FFF7FEFF 		bl	VXISI2CWrite
 6427              	.LVL932:
3739:Src/main.c    **** 	VXISI2CWrite(0xE7,0x00);
 6428              		.loc 1 3739 0
 6429 0740 0021     		movs	r1, #0
 6430 0742 E620     		movs	r0, #230
 6431 0744 FFF7FEFF 		bl	VXISI2CWrite
 6432              	.LVL933:
3740:Src/main.c    **** 	VXISI2CWrite(0xE8,0x00);
 6433              		.loc 1 3740 0
 6434 0748 0021     		movs	r1, #0
 6435 074a E720     		movs	r0, #231
 6436 074c FFF7FEFF 		bl	VXISI2CWrite
 6437              	.LVL934:
3741:Src/main.c    **** 	VXISI2CWrite(0xE9,0x00);
 6438              		.loc 1 3741 0
 6439 0750 0021     		movs	r1, #0
 6440 0752 E820     		movs	r0, #232
 6441 0754 FFF7FEFF 		bl	VXISI2CWrite
 6442              	.LVL935:
3742:Src/main.c    **** 	VXISI2CWrite(0xEA,0x00);
 6443              		.loc 1 3742 0
 6444 0758 0021     		movs	r1, #0
 6445 075a E920     		movs	r0, #233
 6446 075c FFF7FEFF 		bl	VXISI2CWrite
 6447              	.LVL936:
3743:Src/main.c    **** 	VXISI2CWrite(0xEB,0x00);
 6448              		.loc 1 3743 0
 6449 0760 0021     		movs	r1, #0
 6450 0762 EA20     		movs	r0, #234
 6451 0764 FFF7FEFF 		bl	VXISI2CWrite
 6452              	.LVL937:
3744:Src/main.c    **** 	VXISI2CWrite(0xEC,0x88);
 6453              		.loc 1 3744 0
 6454 0768 0021     		movs	r1, #0
 6455 076a EB20     		movs	r0, #235
 6456 076c FFF7FEFF 		bl	VXISI2CWrite
 6457              	.LVL938:
3745:Src/main.c    **** 	VXISI2CWrite(0xED,0x00);
 6458              		.loc 1 3745 0
 6459 0770 8821     		movs	r1, #136
 6460 0772 EC20     		movs	r0, #236
 6461 0774 FFF7FEFF 		bl	VXISI2CWrite
 6462              	.LVL939:
3746:Src/main.c    **** 	VXISI2CWrite(0xEE,0x00);
 6463              		.loc 1 3746 0
 6464 0778 0021     		movs	r1, #0
 6465 077a ED20     		movs	r0, #237
 6466 077c FFF7FEFF 		bl	VXISI2CWrite
 6467              	.LVL940:
3747:Src/main.c    **** 	VXISI2CWrite(0xEF,0x00);
 6468              		.loc 1 3747 0
 6469 0780 0021     		movs	r1, #0
 6470 0782 EE20     		movs	r0, #238
 6471 0784 FFF7FEFF 		bl	VXISI2CWrite
 6472              	.LVL941:
3748:Src/main.c    **** 	VXISI2CWrite(0xF0,0x30);
ARM GAS  /tmp/ccQZgaDW.s 			page 208


 6473              		.loc 1 3748 0
 6474 0788 0021     		movs	r1, #0
 6475 078a EF20     		movs	r0, #239
 6476 078c FFF7FEFF 		bl	VXISI2CWrite
 6477              	.LVL942:
3749:Src/main.c    **** 	VXISI2CWrite(0xF1,0x43);
 6478              		.loc 1 3749 0
 6479 0790 3021     		movs	r1, #48
 6480 0792 F020     		movs	r0, #240
 6481 0794 FFF7FEFF 		bl	VXISI2CWrite
 6482              	.LVL943:
3750:Src/main.c    **** 	VXISI2CWrite(0xF2,0x1F);
 6483              		.loc 1 3750 0
 6484 0798 4321     		movs	r1, #67
 6485 079a F120     		movs	r0, #241
 6486 079c FFF7FEFF 		bl	VXISI2CWrite
 6487              	.LVL944:
3751:Src/main.c    **** 	VXISI2CWrite(0xF3,0x1F);
 6488              		.loc 1 3751 0
 6489 07a0 1F21     		movs	r1, #31
 6490 07a2 F220     		movs	r0, #242
 6491 07a4 FFF7FEFF 		bl	VXISI2CWrite
 6492              	.LVL945:
3752:Src/main.c    **** 	VXISI2CWrite(0xF4,0x22);
 6493              		.loc 1 3752 0
 6494 07a8 1F21     		movs	r1, #31
 6495 07aa F320     		movs	r0, #243
 6496 07ac FFF7FEFF 		bl	VXISI2CWrite
 6497              	.LVL946:
3753:Src/main.c    **** 	VXISI2CWrite(0xF5,0x73);
 6498              		.loc 1 3753 0
 6499 07b0 2221     		movs	r1, #34
 6500 07b2 F420     		movs	r0, #244
 6501 07b4 FFF7FEFF 		bl	VXISI2CWrite
 6502              	.LVL947:
3754:Src/main.c    **** 	VXISI2CWrite(0xF6,0x53);
 6503              		.loc 1 3754 0
 6504 07b8 7321     		movs	r1, #115
 6505 07ba F520     		movs	r0, #245
 6506 07bc FFF7FEFF 		bl	VXISI2CWrite
 6507              	.LVL948:
3755:Src/main.c    **** 	VXISI2CWrite(0xF7,0x80);
 6508              		.loc 1 3755 0
 6509 07c0 5321     		movs	r1, #83
 6510 07c2 F620     		movs	r0, #246
 6511 07c4 FFF7FEFF 		bl	VXISI2CWrite
 6512              	.LVL949:
3756:Src/main.c    **** 	VXISI2CWrite(0xF8,0x01);
 6513              		.loc 1 3756 0
 6514 07c8 8021     		movs	r1, #128
 6515 07ca F720     		movs	r0, #247
 6516 07cc FFF7FEFF 		bl	VXISI2CWrite
 6517              	.LVL950:
3757:Src/main.c    **** 	VXISI2CWrite(0xF9,0x01);
 6518              		.loc 1 3757 0
 6519 07d0 0121     		movs	r1, #1
 6520 07d2 F820     		movs	r0, #248
ARM GAS  /tmp/ccQZgaDW.s 			page 209


 6521 07d4 FFF7FEFF 		bl	VXISI2CWrite
 6522              	.LVL951:
3758:Src/main.c    **** 	VXISI2CWrite(0xFA,0x00);
 6523              		.loc 1 3758 0
 6524 07d8 0121     		movs	r1, #1
 6525 07da F920     		movs	r0, #249
 6526 07dc FFF7FEFF 		bl	VXISI2CWrite
 6527              	.LVL952:
3759:Src/main.c    **** 	VXISI2CWrite(0xFB,0x00);
 6528              		.loc 1 3759 0
 6529 07e0 0021     		movs	r1, #0
 6530 07e2 FA20     		movs	r0, #250
 6531 07e4 FFF7FEFF 		bl	VXISI2CWrite
 6532              	.LVL953:
3760:Src/main.c    **** 	VXISI2CWrite(0xFC,0x00);
 6533              		.loc 1 3760 0
 6534 07e8 0021     		movs	r1, #0
 6535 07ea FB20     		movs	r0, #251
 6536 07ec FFF7FEFF 		bl	VXISI2CWrite
 6537              	.LVL954:
3761:Src/main.c    **** 	VXISI2CWrite(0xFD,0x70);
 6538              		.loc 1 3761 0
 6539 07f0 0021     		movs	r1, #0
 6540 07f2 FC20     		movs	r0, #252
 6541 07f4 FFF7FEFF 		bl	VXISI2CWrite
 6542              	.LVL955:
3762:Src/main.c    **** 	VXISI2CWrite(0xFE,0x40);
 6543              		.loc 1 3762 0
 6544 07f8 7021     		movs	r1, #112
 6545 07fa FD20     		movs	r0, #253
 6546 07fc FFF7FEFF 		bl	VXISI2CWrite
 6547              	.LVL956:
3763:Src/main.c    **** 	VXISI2CWrite(0xFF,0x07);
 6548              		.loc 1 3763 0
 6549 0800 4021     		movs	r1, #64
 6550 0802 FE20     		movs	r0, #254
 6551 0804 FFF7FEFF 		bl	VXISI2CWrite
 6552              	.LVL957:
3764:Src/main.c    **** 
 6553              		.loc 1 3764 0
 6554 0808 0721     		movs	r1, #7
 6555 080a FF20     		movs	r0, #255
 6556 080c FFF7FEFF 		bl	VXISI2CWrite
 6557              	.LVL958:
3766:Src/main.c    **** /**
 6558              		.loc 1 3766 0
 6559 0810 08BD     		pop	{r3, pc}
 6560              		.cfi_endproc
 6561              	.LFE93:
 6563 0812 00BF     		.section	.text.SystemClock_Config,"ax",%progbits
 6564              		.align	1
 6565              		.global	SystemClock_Config
 6566              		.syntax unified
 6567              		.thumb
 6568              		.thumb_func
 6569              		.fpu softvfp
 6571              	SystemClock_Config:
ARM GAS  /tmp/ccQZgaDW.s 			page 210


 6572              	.LFB94:
3808:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 6573              		.loc 1 3808 0
 6574              		.cfi_startproc
 6575              		@ args = 0, pretend = 0, frame = 64
 6576              		@ frame_needed = 0, uses_anonymous_args = 0
 6577 0000 70B5     		push	{r4, r5, r6, lr}
 6578              	.LCFI39:
 6579              		.cfi_def_cfa_offset 16
 6580              		.cfi_offset 4, -16
 6581              		.cfi_offset 5, -12
 6582              		.cfi_offset 6, -8
 6583              		.cfi_offset 14, -4
 6584 0002 90B0     		sub	sp, sp, #64
 6585              	.LCFI40:
 6586              		.cfi_def_cfa_offset 80
3809:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 6587              		.loc 1 3809 0
 6588 0004 2022     		movs	r2, #32
 6589 0006 0021     		movs	r1, #0
 6590 0008 07A8     		add	r0, sp, #28
 6591 000a FFF7FEFF 		bl	memset
 6592              	.LVL959:
3810:Src/main.c    **** 
 6593              		.loc 1 3810 0
 6594 000e 0024     		movs	r4, #0
 6595 0010 0194     		str	r4, [sp, #4]
 6596 0012 0294     		str	r4, [sp, #8]
 6597 0014 0394     		str	r4, [sp, #12]
 6598 0016 0494     		str	r4, [sp, #16]
 6599 0018 0594     		str	r4, [sp, #20]
3814:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 6600              		.loc 1 3814 0
 6601 001a 0225     		movs	r5, #2
 6602 001c 0695     		str	r5, [sp, #24]
3815:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 6603              		.loc 1 3815 0
 6604 001e 0126     		movs	r6, #1
 6605 0020 0A96     		str	r6, [sp, #40]
3816:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 6606              		.loc 1 3816 0
 6607 0022 1023     		movs	r3, #16
 6608 0024 0B93     		str	r3, [sp, #44]
3817:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 6609              		.loc 1 3817 0
 6610 0026 0D95     		str	r5, [sp, #52]
3819:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 6611              		.loc 1 3819 0
 6612 0028 4FF4E013 		mov	r3, #1835008
 6613 002c 0F93     		str	r3, [sp, #60]
3820:Src/main.c    ****   {
 6614              		.loc 1 3820 0
 6615 002e 06A8     		add	r0, sp, #24
 6616 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 6617              	.LVL960:
3826:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 6618              		.loc 1 3826 0
ARM GAS  /tmp/ccQZgaDW.s 			page 211


 6619 0034 0F23     		movs	r3, #15
 6620 0036 0193     		str	r3, [sp, #4]
3828:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 6621              		.loc 1 3828 0
 6622 0038 0295     		str	r5, [sp, #8]
3829:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 6623              		.loc 1 3829 0
 6624 003a 0394     		str	r4, [sp, #12]
3830:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 6625              		.loc 1 3830 0
 6626 003c 0494     		str	r4, [sp, #16]
3831:Src/main.c    **** 
 6627              		.loc 1 3831 0
 6628 003e 0594     		str	r4, [sp, #20]
3833:Src/main.c    ****   {
 6629              		.loc 1 3833 0
 6630 0040 3146     		mov	r1, r6
 6631 0042 01A8     		add	r0, sp, #4
 6632 0044 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 6633              	.LVL961:
3837:Src/main.c    **** #endif
 6634              		.loc 1 3837 0
 6635 0048 10B0     		add	sp, sp, #64
 6636              	.LCFI41:
 6637              		.cfi_def_cfa_offset 16
 6638              		@ sp needed
 6639 004a 70BD     		pop	{r4, r5, r6, pc}
 6640              		.cfi_endproc
 6641              	.LFE94:
 6643              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 6644              		.align	1
 6645              		.global	HAL_TIM_PeriodElapsedCallback
 6646              		.syntax unified
 6647              		.thumb
 6648              		.thumb_func
 6649              		.fpu softvfp
 6651              	HAL_TIM_PeriodElapsedCallback:
 6652              	.LFB99:
4196:Src/main.c    **** 
4197:Src/main.c    **** /* USER CODE BEGIN 4 */
4198:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
4199:Src/main.c    **** {
 6653              		.loc 1 4199 0
 6654              		.cfi_startproc
 6655              		@ args = 0, pretend = 0, frame = 0
 6656              		@ frame_needed = 0, uses_anonymous_args = 0
 6657              		@ link register save eliminated.
 6658              	.LVL962:
4200:Src/main.c    **** //	BYTE TempKey=0;
4201:Src/main.c    **** 
4202:Src/main.c    ****     //10us
4203:Src/main.c    ****     if (htim->Instance == TIM3)
 6659              		.loc 1 4203 0
 6660 0000 0268     		ldr	r2, [r0]
 6661 0002 184B     		ldr	r3, .L207
 6662 0004 9A42     		cmp	r2, r3
 6663 0006 00D0     		beq	.L206
ARM GAS  /tmp/ccQZgaDW.s 			page 212


 6664              	.L203:
4204:Src/main.c    ****     {
4205:Src/main.c    **** 	
4206:Src/main.c    **** 	// Timer Counter 
4207:Src/main.c    **** 	tic02++;
4208:Src/main.c    **** 	tic03++;
4209:Src/main.c    **** 	tic04++;
4210:Src/main.c    **** //	tic05++;
4211:Src/main.c    **** 	
4212:Src/main.c    **** 	if(tic02>=100)   
4213:Src/main.c    **** 	{
4214:Src/main.c    **** 	g_usTimerCounter += 1;     ///per 10us  interrupt
4215:Src/main.c    **** 	tic02=0;
4216:Src/main.c    **** 	g_bNotifyTimer0Int=_TRUE;
4217:Src/main.c    **** 	}	
4218:Src/main.c    **** /*
4219:Src/main.c    **** 	if(tic05>=100)////1ms
4220:Src/main.c    **** 	{
4221:Src/main.c    **** 	ucTickCount++;	//for IT66021
4222:Src/main.c    **** 	tic05=0;
4223:Src/main.c    **** 	}
4224:Src/main.c    **** 	*/
4225:Src/main.c    ****         tim3count++ ;
4226:Src/main.c    ****         if (tim3count > 100000 )
4227:Src/main.c    ****         {
4228:Src/main.c    ****             tim3count = 0 ;
4229:Src/main.c    ****             //Test_tim3_printf_Flg  = 1;
4230:Src/main.c    ****             if (OSDStateFlg ==1 )
4231:Src/main.c    ****             {
4232:Src/main.c    ****                 //static tByte enOSD10secOff = 1;   //En16wNumberOSD=1
4233:Src/main.c    ****                 OSDSecCount++ ;
4234:Src/main.c    ****             }
4235:Src/main.c    ****         }
4236:Src/main.c    **** #if 0
4237:Src/main.c    **** 
4238:Src/main.c    **** 		//Kane @HS 2007 0814 Ver1.31>>>>
4239:Src/main.c    **** 	//	if(Time5ms)
4240:Src/main.c    **** 	//	Time5ms--;
4241:Src/main.c    **** 		//if(Time5ms==0)
4242:Src/main.c    **** 		{
4243:Src/main.c    **** 			//if(HAL_GPIO_ReadPin(UP_KEY_GPIO_Port,UP_KEY_Pin)==_FALSE)
4244:Src/main.c    **** 			//	TempKey|=0x01;
4245:Src/main.c    **** 			//if(HAL_GPIO_ReadPin(DOWN_KEY_GPIO_Port,DOWN_KEY_Pin)==_FALSE)
4246:Src/main.c    **** 			//	TempKey|=0x02;
4247:Src/main.c    **** 			//TempKey=(( (P2&0x60) >> 5) & 0x03);
4248:Src/main.c    **** //			TempKey=((~GPIOB->IDR)&(UP_KEY_Pin|DOWN_KEY_Pin))>>14;
4249:Src/main.c    **** 			TempKey=(((~GPIOB->IDR)&(UP_KEY_Pin|DOWN_KEY_Pin))>>14)&0x03;
4250:Src/main.c    **** 
4251:Src/main.c    **** 			if(updn_reg[3] != TempKey )  // (( (P2&0x60) >> 5) & 0x03))    //Abel for HS SW key ......951102
4252:Src/main.c    **** 			{																						   
4253:Src/main.c    **** 				updn_reg[0] = updn_reg[1];																
4254:Src/main.c    **** 				updn_reg[1] = updn_reg[2];																
4255:Src/main.c    **** 				updn_reg[2] = updn_reg[3];																
4256:Src/main.c    **** 				updn_reg[3] = TempKey;// ( (P2&0x60) >> 5) & 0x03; 
4257:Src/main.c    **** 				ChangeKey = 1;		
4258:Src/main.c    **** 				//else			//william-v1.42-961130
4259:Src/main.c    **** 				//ChangeKey=0;	//william-v1.42-961130
ARM GAS  /tmp/ccQZgaDW.s 			page 213


4260:Src/main.c    **** 			//Time5ms = (48-8);
4261:Src/main.c    **** 			//Time5ms = (48+100);
4262:Src/main.c    **** 			
4263:Src/main.c    **** 				
4264:Src/main.c    **** 			}
4265:Src/main.c    **** 		}
4266:Src/main.c    **** 		#endif
4267:Src/main.c    **** #if 0
4268:Src/main.c    ****         if (IR_IRQFlg == 1)
4269:Src/main.c    ****         {
4270:Src/main.c    ****             if (PreIR_IRQ_Index == IR_IRQ_Index )
4271:Src/main.c    ****             {
4272:Src/main.c    ****                 IR_PlusTimeVal++ ;
4273:Src/main.c    **** 
4274:Src/main.c    ****                 //9.2xms + 4.5xms = 13.8ms
4275:Src/main.c    ****                 if (IR_PlusTimeVal > 15000)  //10us
4276:Src/main.c    ****                 {
4277:Src/main.c    **** //                    IR_PlusTimeVal = 0  ;
4278:Src/main.c    **** //                    PreIR_IRQ_Index = 0 ;
4279:Src/main.c    **** //                    IR_IRQ_Index = 0 ;
4280:Src/main.c    **** //                    IR_IRQFlg = 0 ;
4281:Src/main.c    **** 
4282:Src/main.c    ****                     if (IR_ShiftCount >= 32 )
4283:Src/main.c    ****                     {
4284:Src/main.c    ****                         u16Vendor = (tWord)(IR_4BYTE & 0x0000FFFF) ;
4285:Src/main.c    ****                         if (u16Vendor == IR_Vendor_Code_ )
4286:Src/main.c    ****                         {
4287:Src/main.c    ****                             u8IRcode = (tByte)((IR_4BYTE & 0x00FF0000 ) >> 16)  ;
4288:Src/main.c    ****                             u8IRCheckcode  = 0xFF - (tByte)((IR_4BYTE & 0xFF000000 ) >> 24)  ;
4289:Src/main.c    ****                             IR_END_Flg = 1 ;
4290:Src/main.c    ****                         }
4291:Src/main.c    ****                     }
4292:Src/main.c    **** 
4293:Src/main.c    ****                     IR_ShiftCount = 0 ;
4294:Src/main.c    ****                     IR_PlusTimeVal = 0  ;
4295:Src/main.c    ****                     PreIR_IRQ_Index = 0 ;
4296:Src/main.c    ****                     IR_IRQ_Index = 0 ;
4297:Src/main.c    ****                     IR_IRQFlg = 0 ;
4298:Src/main.c    ****                     //memset(aIR_PlusTime , 0 , 40 )  ;
4299:Src/main.c    ****                     IR_4BYTE = 0 ;
4300:Src/main.c    ****                     IR_StartFlg = 0 ;
4301:Src/main.c    ****                 }
4302:Src/main.c    ****             }
4303:Src/main.c    ****             else
4304:Src/main.c    ****             {
4305:Src/main.c    ****                 if (PreIR_IRQ_Index <= 33)
4306:Src/main.c    ****                 {
4307:Src/main.c    ****                     //aIR_PlusTime[PreIR_IRQ_Index] = IR_PlusTimeVal ;
4308:Src/main.c    ****                     if (IR_StartFlg == 1 )
4309:Src/main.c    ****                     {
4310:Src/main.c    ****                         if (IR_PlusTimeVal >90 )
4311:Src/main.c    ****                         {
4312:Src/main.c    ****                             //IR_4BYTE = IR_4BYTE << 1 ;
4313:Src/main.c    ****                             IR_4BYTE = IR_4BYTE >> 1 ;
4314:Src/main.c    **** 
4315:Src/main.c    ****                             if (IR_PlusTimeVal > 160 )
4316:Src/main.c    ****                             {
ARM GAS  /tmp/ccQZgaDW.s 			page 214


4317:Src/main.c    ****                                 //IR_4BYTE = IR_4BYTE | 0x01 ;
4318:Src/main.c    ****                                 IR_4BYTE = IR_4BYTE | 0x80000000 ;
4319:Src/main.c    ****                             }
4320:Src/main.c    ****                             else
4321:Src/main.c    ****                             {
4322:Src/main.c    ****                                 //IR_4BYTE = IR_4BYTE | 0x01 ;
4323:Src/main.c    ****                             }
4324:Src/main.c    ****                             IR_ShiftCount++ ;
4325:Src/main.c    ****                         }
4326:Src/main.c    ****                     }
4327:Src/main.c    **** 
4328:Src/main.c    ****                     if((IR_PlusTimeVal >1250 )&&(IR_PlusTimeVal < 1450))
4329:Src/main.c    ****                     {
4330:Src/main.c    ****                         IR_StartFlg =1 ;
4331:Src/main.c    ****                     }
4332:Src/main.c    ****                 }
4333:Src/main.c    ****                 IR_PlusTimeVal = 0 ;
4334:Src/main.c    ****                 PreIR_IRQ_Index = IR_IRQ_Index ;
4335:Src/main.c    ****             }
4336:Src/main.c    ****         }
4337:Src/main.c    **** #endif
4338:Src/main.c    **** 		///////////////////////////////////////////
4339:Src/main.c    **** 	/*
4340:Src/main.c    **** 		TempKey=0;
4341:Src/main.c    **** 		if(HAL_GPIO_ReadPin(MENU_KEY_GPIO_Port,MENU_KEY_Pin)==_FALSE)
4342:Src/main.c    **** 			TempKey|=0x08;
4343:Src/main.c    **** 		if(HAL_GPIO_ReadPin(POWER_KEY_GPIO_Port,POWER_KEY_Pin)==_FALSE)
4344:Src/main.c    **** 			TempKey|=0x04;
4345:Src/main.c    **** 		if(HAL_GPIO_ReadPin(POWER_KEY_GPIO_Port,POWER_KEY_Pin)==_FALSE)
4346:Src/main.c    **** 			TempKey|=0x04;
4347:Src/main.c    **** 		if(HAL_GPIO_ReadPin(JUMP_KEY_GPIO_Port,JUMP_KEY_Pin)==_FALSE)
4348:Src/main.c    **** 			TempKey|=0x10;
4349:Src/main.c    **** 		if(HAL_GPIO_ReadPin(SOURCE_KEY_GPIO_Port,SOURCE_KEY_Pin)==_FALSE)
4350:Src/main.c    **** 			Te			mpKey|=0x80;
4351:Src/main.c    **** */
4352:Src/main.c    **** #if 0
4353:Src/main.c    **** 	if(tic03==1000)
4354:Src/main.c    **** 		{
4355:Src/main.c    **** 		tic03=0;
4356:Src/main.c    **** 		if(_ReadKey() ) {
4357:Src/main.c    **** 			
4358:Src/main.c    **** 			if( keytic==3 ) {
4359:Src/main.c    **** 				Key = _ReadKey();
4360:Src/main.c    **** 				RepeatKey = 0;
4361:Src/main.c    **** 				KeyReady = 1;
4362:Src/main.c    **** 			}
4363:Src/main.c    **** 			else if( keytic==100 ) {
4364:Src/main.c    **** 				Key = _ReadKey();
4365:Src/main.c    **** 				KeyReady = 1;
4366:Src/main.c    **** 				keytic = 80-70;
4367:Src/main.c    **** 
4368:Src/main.c    **** 			}
4369:Src/main.c    **** 			keytic++;
4370:Src/main.c    **** 		
4371:Src/main.c    **** 		}
4372:Src/main.c    **** 		else 
4373:Src/main.c    **** 		{
ARM GAS  /tmp/ccQZgaDW.s 			page 215


4374:Src/main.c    **** 			keytic = 0;
4375:Src/main.c    **** 			Key=0;
4376:Src/main.c    **** 		}
4377:Src/main.c    **** 		}	
4378:Src/main.c    **** 
4379:Src/main.c    **** 	if(tic04==1000)
4380:Src/main.c    **** 		{
4381:Src/main.c    **** 		tic04=0;
4382:Src/main.c    **** 				if(TP_PRES_DOWN ) {
4383:Src/main.c    **** 					
4384:Src/main.c    **** 					if( tptic==3) {
4385:Src/main.c    **** 						TouchP=TP_PRES_DOWN;
4386:Src/main.c    **** 					}
4387:Src/main.c    **** 					else if(tptic==150)
4388:Src/main.c    **** 						{
4389:Src/main.c    **** 						TouchP=TP_PRES_DOWN;						
4390:Src/main.c    **** 						
4391:Src/main.c    **** 						tptic=4;						
4392:Src/main.c    **** 						}
4393:Src/main.c    **** 				tptic++;
4394:Src/main.c    **** 				}
4395:Src/main.c    **** 				else 
4396:Src/main.c    **** 				{
4397:Src/main.c    **** 					tptic = 0;
4398:Src/main.c    **** 					TouchP=0;
4399:Src/main.c    **** 				}
4400:Src/main.c    **** 
4401:Src/main.c    **** 		}
4402:Src/main.c    **** 	#endif
4403:Src/main.c    ****     }
4404:Src/main.c    **** }
 6665              		.loc 1 4404 0
 6666 0008 7047     		bx	lr
 6667              	.L206:
4207:Src/main.c    **** 	tic03++;
 6668              		.loc 1 4207 0
 6669 000a 174A     		ldr	r2, .L207+4
 6670 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 6671 000e 0133     		adds	r3, r3, #1
 6672 0010 DBB2     		uxtb	r3, r3
 6673 0012 1370     		strb	r3, [r2]
4208:Src/main.c    **** 	tic04++;
 6674              		.loc 1 4208 0
 6675 0014 1549     		ldr	r1, .L207+8
 6676 0016 0A68     		ldr	r2, [r1]
 6677 0018 0132     		adds	r2, r2, #1
 6678 001a 0A60     		str	r2, [r1]
4209:Src/main.c    **** //	tic05++;
 6679              		.loc 1 4209 0
 6680 001c 1449     		ldr	r1, .L207+12
 6681 001e 0A68     		ldr	r2, [r1]
 6682 0020 0132     		adds	r2, r2, #1
 6683 0022 0A60     		str	r2, [r1]
4212:Src/main.c    **** 	{
 6684              		.loc 1 4212 0
 6685 0024 632B     		cmp	r3, #99
 6686 0026 09D9     		bls	.L205
ARM GAS  /tmp/ccQZgaDW.s 			page 216


4214:Src/main.c    **** 	tic02=0;
 6687              		.loc 1 4214 0
 6688 0028 124A     		ldr	r2, .L207+16
 6689 002a 1368     		ldr	r3, [r2]
 6690 002c 0133     		adds	r3, r3, #1
 6691 002e 1360     		str	r3, [r2]
4215:Src/main.c    **** 	g_bNotifyTimer0Int=_TRUE;
 6692              		.loc 1 4215 0
 6693 0030 0D4B     		ldr	r3, .L207+4
 6694 0032 0022     		movs	r2, #0
 6695 0034 1A70     		strb	r2, [r3]
4216:Src/main.c    **** 	}	
 6696              		.loc 1 4216 0
 6697 0036 104B     		ldr	r3, .L207+20
 6698 0038 0122     		movs	r2, #1
 6699 003a 1A60     		str	r2, [r3]
 6700              	.L205:
4225:Src/main.c    ****         if (tim3count > 100000 )
 6701              		.loc 1 4225 0
 6702 003c 0F4B     		ldr	r3, .L207+24
 6703 003e 1A68     		ldr	r2, [r3]
 6704 0040 0132     		adds	r2, r2, #1
 6705 0042 1A60     		str	r2, [r3]
4226:Src/main.c    ****         {
 6706              		.loc 1 4226 0
 6707 0044 1A68     		ldr	r2, [r3]
 6708 0046 0E4B     		ldr	r3, .L207+28
 6709 0048 9A42     		cmp	r2, r3
 6710 004a DDD9     		bls	.L203
4228:Src/main.c    ****             //Test_tim3_printf_Flg  = 1;
 6711              		.loc 1 4228 0
 6712 004c 0B4B     		ldr	r3, .L207+24
 6713 004e 0022     		movs	r2, #0
 6714 0050 1A60     		str	r2, [r3]
4230:Src/main.c    ****             {
 6715              		.loc 1 4230 0
 6716 0052 0C4B     		ldr	r3, .L207+32
 6717 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6718 0056 012B     		cmp	r3, #1
 6719 0058 D6D1     		bne	.L203
4233:Src/main.c    ****             }
 6720              		.loc 1 4233 0
 6721 005a 0B4A     		ldr	r2, .L207+36
 6722 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 6723 005e 0133     		adds	r3, r3, #1
 6724 0060 1370     		strb	r3, [r2]
 6725              		.loc 1 4404 0
 6726 0062 D1E7     		b	.L203
 6727              	.L208:
 6728              		.align	2
 6729              	.L207:
 6730 0064 00040040 		.word	1073742848
 6731 0068 00000000 		.word	tic02
 6732 006c 00000000 		.word	tic03
 6733 0070 00000000 		.word	tic04
 6734 0074 00000000 		.word	g_usTimerCounter
 6735 0078 00000000 		.word	g_bNotifyTimer0Int
ARM GAS  /tmp/ccQZgaDW.s 			page 217


 6736 007c 00000000 		.word	.LANCHOR21
 6737 0080 A0860100 		.word	100000
 6738 0084 00000000 		.word	.LANCHOR7
 6739 0088 00000000 		.word	.LANCHOR8
 6740              		.cfi_endproc
 6741              	.LFE99:
 6743              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 6744              		.align	1
 6745              		.global	HAL_UART_RxCpltCallback
 6746              		.syntax unified
 6747              		.thumb
 6748              		.thumb_func
 6749              		.fpu softvfp
 6751              	HAL_UART_RxCpltCallback:
 6752              	.LFB100:
4405:Src/main.c    **** 
4406:Src/main.c    **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
4407:Src/main.c    **** {
 6753              		.loc 1 4407 0
 6754              		.cfi_startproc
 6755              		@ args = 0, pretend = 0, frame = 0
 6756              		@ frame_needed = 0, uses_anonymous_args = 0
 6757              	.LVL963:
 6758 0000 10B5     		push	{r4, lr}
 6759              	.LCFI42:
 6760              		.cfi_def_cfa_offset 8
 6761              		.cfi_offset 4, -8
 6762              		.cfi_offset 14, -4
 6763 0002 0446     		mov	r4, r0
4408:Src/main.c    ****     if (huart->Instance == USART1)	//current UART
 6764              		.loc 1 4408 0
 6765 0004 0268     		ldr	r2, [r0]
 6766 0006 184B     		ldr	r3, .L217
 6767 0008 9A42     		cmp	r2, r3
 6768 000a 04D0     		beq	.L215
 6769              	.LVL964:
 6770              	.L210:
4409:Src/main.c    ****     {
4410:Src/main.c    **** 
4411:Src/main.c    **** /*
4412:Src/main.c    **** 		if (Rx_indx==0)
4413:Src/main.c    ****         {
4414:Src/main.c    ****             memset(Rx_Buffer , 0  , RXBUFMAX ) ;
4415:Src/main.c    ****         }
4416:Src/main.c    **** 
4417:Src/main.c    ****         if (Rx_data[0] >= 0x30)
4418:Src/main.c    ****         {
4419:Src/main.c    ****             Rx_Buffer[Rx_indx]=Rx_data[0];	//add data to Rx_Buffer
4420:Src/main.c    ****             Rx_indx++ ;
4421:Src/main.c    ****             if (Rx_indx >= RXBUFMAX )
4422:Src/main.c    ****                 Rx_indx = 0 ;
4423:Src/main.c    ****         }
4424:Src/main.c    ****         else if ((Rx_data[0] == 0x0d) || (Rx_data[0] == 0xa))//if received data = 13
4425:Src/main.c    ****         {
4426:Src/main.c    ****             RxBufIndex = Rx_indx ;
4427:Src/main.c    ****             memcpy(gRxbuf ,Rx_Buffer, Rx_indx ) ;
4428:Src/main.c    ****             Rx_indx=0;
ARM GAS  /tmp/ccQZgaDW.s 			page 218


4429:Src/main.c    ****             Transfer_cplt=1;//transfer complete, data is ready to read
4430:Src/main.c    ****         }
4431:Src/main.c    **** */
4432:Src/main.c    **** #if 1
4433:Src/main.c    ****        RS_buf [RS_in++] = Rx_data[0];//USART_ReceiveData(USART1);	
4434:Src/main.c    ****     if( RS_in >= BUF_MAX)  RS_in = 0;
4435:Src/main.c    **** 		
4436:Src/main.c    **** 		//RS_tx(Rx_data[0]);
4437:Src/main.c    **** 
4438:Src/main.c    **** 
4439:Src/main.c    **** //HAL_UART_Receive_IT(&huart1,(uint8_t*)Rx_data, 1);	//activate UART receive interrupt every time
4440:Src/main.c    **** 	HAL_UART_Receive_IT(&huart1,(uint8_t*)Rx_data, 1);	 //activate UART receive interrupt every time
4441:Src/main.c    **** 	#endif
4442:Src/main.c    ****     }
4443:Src/main.c    **** #if 1
4444:Src/main.c    **** if (huart->Instance == USART2)	//current UART2
 6771              		.loc 1 4444 0
 6772 000c 2268     		ldr	r2, [r4]
 6773 000e 174B     		ldr	r3, .L217+4
 6774 0010 9A42     		cmp	r2, r3
 6775 0012 14D0     		beq	.L216
 6776              	.L209:
4445:Src/main.c    ****     {
4446:Src/main.c    **** 
4447:Src/main.c    ****        RS2_buf [RS2_in++] = Rx2_data[0];//USART_ReceiveData(USART1);	
4448:Src/main.c    ****     if( RS2_in >= TOA_BUF_MAX)  RS2_in = 0;
4449:Src/main.c    **** 	HAL_UART_Receive_IT(&huart2,(uint8_t*)Rx2_data, 1);	 //activate UART receive interrupt every time
4450:Src/main.c    ****     }	
4451:Src/main.c    **** #endif
4452:Src/main.c    **** }
 6777              		.loc 1 4452 0
 6778 0014 10BD     		pop	{r4, pc}
 6779              	.LVL965:
 6780              	.L215:
4433:Src/main.c    ****     if( RS_in >= BUF_MAX)  RS_in = 0;
 6781              		.loc 1 4433 0
 6782 0016 1649     		ldr	r1, .L217+8
 6783 0018 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 6784 001a 531C     		adds	r3, r2, #1
 6785 001c DBB2     		uxtb	r3, r3
 6786 001e 0B70     		strb	r3, [r1]
 6787 0020 1449     		ldr	r1, .L217+12
 6788 0022 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 6789              	.LVL966:
 6790 0024 1449     		ldr	r1, .L217+16
 6791 0026 8854     		strb	r0, [r1, r2]
4434:Src/main.c    **** 		
 6792              		.loc 1 4434 0
 6793 0028 1D2B     		cmp	r3, #29
 6794 002a 02D9     		bls	.L211
4434:Src/main.c    **** 		
 6795              		.loc 1 4434 0 is_stmt 0 discriminator 1
 6796 002c 104B     		ldr	r3, .L217+8
 6797 002e 0022     		movs	r2, #0
 6798 0030 1A70     		strb	r2, [r3]
 6799              	.L211:
4440:Src/main.c    **** 	#endif
ARM GAS  /tmp/ccQZgaDW.s 			page 219


 6800              		.loc 1 4440 0 is_stmt 1
 6801 0032 0122     		movs	r2, #1
 6802 0034 0F49     		ldr	r1, .L217+12
 6803 0036 1148     		ldr	r0, .L217+20
 6804 0038 FFF7FEFF 		bl	HAL_UART_Receive_IT
 6805              	.LVL967:
 6806 003c E6E7     		b	.L210
 6807              	.L216:
4447:Src/main.c    ****     if( RS2_in >= TOA_BUF_MAX)  RS2_in = 0;
 6808              		.loc 1 4447 0
 6809 003e 1049     		ldr	r1, .L217+24
 6810 0040 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 6811 0042 531C     		adds	r3, r2, #1
 6812 0044 DBB2     		uxtb	r3, r3
 6813 0046 0B70     		strb	r3, [r1]
 6814 0048 0E49     		ldr	r1, .L217+28
 6815 004a 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 6816 004c 0E49     		ldr	r1, .L217+32
 6817 004e 8854     		strb	r0, [r1, r2]
4448:Src/main.c    **** 	HAL_UART_Receive_IT(&huart2,(uint8_t*)Rx2_data, 1);	 //activate UART receive interrupt every time
 6818              		.loc 1 4448 0
 6819 0050 C72B     		cmp	r3, #199
 6820 0052 02D9     		bls	.L213
4448:Src/main.c    **** 	HAL_UART_Receive_IT(&huart2,(uint8_t*)Rx2_data, 1);	 //activate UART receive interrupt every time
 6821              		.loc 1 4448 0 is_stmt 0 discriminator 1
 6822 0054 0A4B     		ldr	r3, .L217+24
 6823 0056 0022     		movs	r2, #0
 6824 0058 1A70     		strb	r2, [r3]
 6825              	.L213:
4449:Src/main.c    ****     }	
 6826              		.loc 1 4449 0 is_stmt 1
 6827 005a 0122     		movs	r2, #1
 6828 005c 0949     		ldr	r1, .L217+28
 6829 005e 0B48     		ldr	r0, .L217+36
 6830 0060 FFF7FEFF 		bl	HAL_UART_Receive_IT
 6831              	.LVL968:
 6832              		.loc 1 4452 0
 6833 0064 D6E7     		b	.L209
 6834              	.L218:
 6835 0066 00BF     		.align	2
 6836              	.L217:
 6837 0068 00380140 		.word	1073821696
 6838 006c 00440040 		.word	1073759232
 6839 0070 00000000 		.word	RS_in
 6840 0074 00000000 		.word	.LANCHOR22
 6841 0078 00000000 		.word	RS_buf
 6842 007c 00000000 		.word	huart1
 6843 0080 00000000 		.word	RS2_in
 6844 0084 00000000 		.word	.LANCHOR23
 6845 0088 00000000 		.word	RS2_buf
 6846 008c 00000000 		.word	huart2
 6847              		.cfi_endproc
 6848              	.LFE100:
 6850              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 6851              		.align	1
 6852              		.global	HAL_GPIO_EXTI_Callback
 6853              		.syntax unified
ARM GAS  /tmp/ccQZgaDW.s 			page 220


 6854              		.thumb
 6855              		.thumb_func
 6856              		.fpu softvfp
 6858              	HAL_GPIO_EXTI_Callback:
 6859              	.LFB101:
4453:Src/main.c    **** 
4454:Src/main.c    **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
4455:Src/main.c    **** {
 6860              		.loc 1 4455 0
 6861              		.cfi_startproc
 6862              		@ args = 0, pretend = 0, frame = 0
 6863              		@ frame_needed = 0, uses_anonymous_args = 0
 6864              		@ link register save eliminated.
 6865              	.LVL969:
4456:Src/main.c    **** /*
4457:Src/main.c    ****     if(GPIO_Pin == IR_IN_Pin  )
4458:Src/main.c    ****     {
4459:Src/main.c    ****         IR_IRQFlg =1 ;
4460:Src/main.c    **** 
4461:Src/main.c    ****         IR_IRQ_Index++ ;
4462:Src/main.c    ****     }
4463:Src/main.c    **** 	*/
4464:Src/main.c    **** }
 6866              		.loc 1 4464 0
 6867 0000 7047     		bx	lr
 6868              		.cfi_endproc
 6869              	.LFE101:
 6871              		.section	.text.HS_Select_Win,"ax",%progbits
 6872              		.align	1
 6873              		.global	HS_Select_Win
 6874              		.syntax unified
 6875              		.thumb
 6876              		.thumb_func
 6877              		.fpu softvfp
 6879              	HS_Select_Win:
 6880              	.LFB102:
4465:Src/main.c    **** 
4466:Src/main.c    **** void HS_Select_Win(unsigned char WinNum)	//20201214-02
4467:Src/main.c    **** {
 6881              		.loc 1 4467 0
 6882              		.cfi_startproc
 6883              		@ args = 0, pretend = 0, frame = 0
 6884              		@ frame_needed = 0, uses_anonymous_args = 0
 6885              	.LVL970:
 6886 0000 38B5     		push	{r3, r4, r5, lr}
 6887              	.LCFI43:
 6888              		.cfi_def_cfa_offset 16
 6889              		.cfi_offset 3, -16
 6890              		.cfi_offset 4, -12
 6891              		.cfi_offset 5, -8
 6892              		.cfi_offset 14, -4
4468:Src/main.c    **** 
4469:Src/main.c    **** 	
4470:Src/main.c    **** 	switch (WinNum)
 6893              		.loc 1 4470 0
 6894 0002 0128     		cmp	r0, #1
 6895 0004 25D0     		beq	.L222
ARM GAS  /tmp/ccQZgaDW.s 			page 221


4471:Src/main.c    **** 	{
4472:Src/main.c    **** 		default:
4473:Src/main.c    **** 		case 0:
4474:Src/main.c    **** 			VXISI2CWrite( 0x32, 0x00 );
 6896              		.loc 1 4474 0
 6897 0006 0021     		movs	r1, #0
 6898 0008 3220     		movs	r0, #50
 6899              	.LVL971:
 6900 000a FFF7FEFF 		bl	VXISI2CWrite
 6901              	.LVL972:
4475:Src/main.c    **** 			VXISI2CWrite( 0x19, 0x00 );
 6902              		.loc 1 4475 0
 6903 000e 0021     		movs	r1, #0
 6904 0010 1920     		movs	r0, #25
 6905 0012 FFF7FEFF 		bl	VXISI2CWrite
 6906              	.LVL973:
4476:Src/main.c    **** 			SelectInputMode=0;
 6907              		.loc 1 4476 0
 6908 0016 0024     		movs	r4, #0
 6909 0018 394B     		ldr	r3, .L241
 6910 001a 1C70     		strb	r4, [r3]
4477:Src/main.c    **** 			printf("Selected window 0\r\n");
 6911              		.loc 1 4477 0
 6912 001c 3948     		ldr	r0, .L241+4
 6913 001e FFF7FEFF 		bl	puts
 6914              	.LVL974:
4478:Src/main.c    **** 			pVS4210_MutiWindows1.OutputMode =VS4210_1080P_MODE0_w0;						
 6915              		.loc 1 4478 0
 6916 0022 3948     		ldr	r0, .L241+8
 6917 0024 0470     		strb	r4, [r0]
4479:Src/main.c    **** 			pVS4210_MutiWindows1.WindowMap.WMap0 = 1 ;			
 6918              		.loc 1 4479 0
 6919 0026 0123     		movs	r3, #1
 6920 0028 4370     		strb	r3, [r0, #1]
4480:Src/main.c    **** 			VS4210_SetMutiWindows(&pVS4210_MutiWindows1) ;	
 6921              		.loc 1 4480 0
 6922 002a FFF7FEFF 		bl	VS4210_SetMutiWindows
 6923              	.LVL975:
4481:Src/main.c    **** 			//#if (_External_Sync==ON)
4482:Src/main.c    **** 			//VXISI2CWrite( 0x32, 0x00 );
4483:Src/main.c    **** 			  VXISI2CWrite( 0x19, 0x00 );
 6924              		.loc 1 4483 0
 6925 002e 2146     		mov	r1, r4
 6926 0030 1920     		movs	r0, #25
 6927 0032 FFF7FEFF 		bl	VXISI2CWrite
 6928              	.LVL976:
4484:Src/main.c    **** 			//#endif
4485:Src/main.c    **** 			//msleep(100) ;
4486:Src/main.c    **** 		//	VXISI2CWrite( 0x32, 0x80 );
4487:Src/main.c    **** 
4488:Src/main.c    **** 			if(bSignal[0]==1)
 6929              		.loc 1 4488 0
 6930 0036 354B     		ldr	r3, .L241+12
 6931 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6932 003a 012B     		cmp	r3, #1
 6933 003c 04D0     		beq	.L233
4489:Src/main.c    **** 				{
ARM GAS  /tmp/ccQZgaDW.s 			page 222


4490:Src/main.c    **** 				Set_Video_Loss_OSD(0,OFF);
4491:Src/main.c    **** 				}
4492:Src/main.c    **** 			else
4493:Src/main.c    **** 				{
4494:Src/main.c    **** 				Set_Video_Loss_OSD(0,ON);
 6934              		.loc 1 4494 0
 6935 003e 0121     		movs	r1, #1
 6936 0040 0020     		movs	r0, #0
 6937 0042 FFF7FEFF 		bl	Set_Video_Loss_OSD
 6938              	.LVL977:
 6939 0046 23E0     		b	.L224
 6940              	.L233:
4490:Src/main.c    **** 				}
 6941              		.loc 1 4490 0
 6942 0048 2146     		mov	r1, r4
 6943 004a 2046     		mov	r0, r4
 6944 004c FFF7FEFF 		bl	Set_Video_Loss_OSD
 6945              	.LVL978:
 6946 0050 1EE0     		b	.L224
 6947              	.LVL979:
 6948              	.L222:
4495:Src/main.c    **** 				}
4496:Src/main.c    **** 
4497:Src/main.c    **** 			#if (_External_Sync==OFF)
4498:Src/main.c    **** 				//SET_HDMI_SYNC_PARA();			
4499:Src/main.c    **** 			#endif
4500:Src/main.c    **** 			break;
4501:Src/main.c    **** 		
4502:Src/main.c    **** 		case 1:
4503:Src/main.c    **** 			VXISI2CWrite( 0x32, 0x00 );
 6949              		.loc 1 4503 0
 6950 0052 0021     		movs	r1, #0
 6951 0054 3220     		movs	r0, #50
 6952              	.LVL980:
 6953 0056 FFF7FEFF 		bl	VXISI2CWrite
 6954              	.LVL981:
4504:Src/main.c    **** 			SelectInputMode=1;
 6955              		.loc 1 4504 0
 6956 005a 294C     		ldr	r4, .L241
 6957 005c 0125     		movs	r5, #1
 6958 005e 2570     		strb	r5, [r4]
4505:Src/main.c    **** 			printf("Selected window 1\r\n");
 6959              		.loc 1 4505 0
 6960 0060 2B48     		ldr	r0, .L241+16
 6961 0062 FFF7FEFF 		bl	puts
 6962              	.LVL982:
4506:Src/main.c    **** 			pVS4210_MutiWindows1.OutputMode =VS4210_1080P_MODE0_w1;
 6963              		.loc 1 4506 0
 6964 0066 2848     		ldr	r0, .L241+8
 6965 0068 0570     		strb	r5, [r0]
4507:Src/main.c    **** 			pVS4210_MutiWindows1.WindowMap.WMap0 = 2 ;
 6966              		.loc 1 4507 0
 6967 006a 0223     		movs	r3, #2
 6968 006c 4370     		strb	r3, [r0, #1]
4508:Src/main.c    **** 			VS4210_SetMutiWindows(&pVS4210_MutiWindows1) ;		
 6969              		.loc 1 4508 0
 6970 006e FFF7FEFF 		bl	VS4210_SetMutiWindows
ARM GAS  /tmp/ccQZgaDW.s 			page 223


 6971              	.LVL983:
4509:Src/main.c    **** 			VXISI2CWrite( 0x19, 0x04 );
 6972              		.loc 1 4509 0
 6973 0072 0421     		movs	r1, #4
 6974 0074 1920     		movs	r0, #25
 6975 0076 FFF7FEFF 		bl	VXISI2CWrite
 6976              	.LVL984:
4510:Src/main.c    **** 
4511:Src/main.c    **** 		if(SelectInputMode==1)
 6977              		.loc 1 4511 0
 6978 007a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 6979 007c AB42     		cmp	r3, r5
 6980 007e 0ED0     		beq	.L234
 6981              	.L225:
4512:Src/main.c    **** 		{
4513:Src/main.c    **** 			if(  mode[0]==7 )
4514:Src/main.c    **** 				{
4515:Src/main.c    **** 			
4516:Src/main.c    **** 				TP_bt1120_1080P_1080P_mode0_w0();
4517:Src/main.c    **** 					printf("(=1)");
4518:Src/main.c    **** 				//VXISI2CWrite(0x10,0x01);
4519:Src/main.c    **** 				//VXISI2CWrite(0x9c,0x0A);
4520:Src/main.c    **** 				Set_Video_Loss_OSD(1,ON);
4521:Src/main.c    **** 
4522:Src/main.c    **** 			}
4523:Src/main.c    **** 			else
4524:Src/main.c    **** 				{
4525:Src/main.c    **** 				
4526:Src/main.c    **** 				printf("(=2)");
4527:Src/main.c    **** 								if(TP_InputMode==5)
4528:Src/main.c    **** 									{
4529:Src/main.c    **** 									TP_bt1120_720P_1080P_mode0_w0();
4530:Src/main.c    **** 									}
4531:Src/main.c    **** 								else if(TP_InputMode==6)
4532:Src/main.c    **** 									{
4533:Src/main.c    **** 									TP_bt1120_1080P_1080P_mode0_w0();
4534:Src/main.c    **** 									}
4535:Src/main.c    **** 								else if(TP_InputMode==0)
4536:Src/main.c    **** 									{
4537:Src/main.c    **** 									TP_bt1120_NTSC_1080P_mode0_w0();
4538:Src/main.c    **** 									}
4539:Src/main.c    **** 								else if(TP_InputMode==1)
4540:Src/main.c    **** 									{
4541:Src/main.c    **** 									TP_bt1120_PAL_1080P_mode0_w0();
4542:Src/main.c    **** 									}
4543:Src/main.c    **** 								else
4544:Src/main.c    **** 									VXISI2CWrite(0x10,0x01);
4545:Src/main.c    **** 
4546:Src/main.c    **** 										
4547:Src/main.c    **** 				}
4548:Src/main.c    **** 
4549:Src/main.c    **** 			#if (_External_Sync==OFF)
4550:Src/main.c    **** 			//SET_AHD_SYNC_PARA();
4551:Src/main.c    **** 			#endif
4552:Src/main.c    **** 		}	
4553:Src/main.c    **** 		// msleep(100) ;
4554:Src/main.c    **** 
ARM GAS  /tmp/ccQZgaDW.s 			page 224


4555:Src/main.c    **** 
4556:Src/main.c    **** 
4557:Src/main.c    **** 		
4558:Src/main.c    **** 			if(bSignal[1]==1)
 6982              		.loc 1 4558 0
 6983 0080 224B     		ldr	r3, .L241+12
 6984 0082 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6985 0084 012B     		cmp	r3, #1
 6986 0086 35D0     		beq	.L235
4559:Src/main.c    **** 				Set_Video_Loss_OSD(1,OFF);
4560:Src/main.c    **** 			else
4561:Src/main.c    **** 				Set_Video_Loss_OSD(1,ON);
 6987              		.loc 1 4561 0
 6988 0088 0121     		movs	r1, #1
 6989 008a 0846     		mov	r0, r1
 6990 008c FFF7FEFF 		bl	Set_Video_Loss_OSD
 6991              	.LVL985:
 6992              	.L224:
4562:Src/main.c    **** 			
4563:Src/main.c    **** 			break;
4564:Src/main.c    **** 		}
4565:Src/main.c    **** 	
4566:Src/main.c    **** 	
4567:Src/main.c    **** 
4568:Src/main.c    ****   		OSDSecCount = 0 ;
 6993              		.loc 1 4568 0
 6994 0090 204B     		ldr	r3, .L241+20
 6995 0092 0022     		movs	r2, #0
 6996 0094 1A70     		strb	r2, [r3]
4569:Src/main.c    **** 		   OSDStateFlg = 1 ;		
 6997              		.loc 1 4569 0
 6998 0096 204B     		ldr	r3, .L241+24
 6999 0098 0122     		movs	r2, #1
 7000 009a 1A70     		strb	r2, [r3]
4570:Src/main.c    **** }
 7001              		.loc 1 4570 0
 7002 009c 38BD     		pop	{r3, r4, r5, pc}
 7003              	.L234:
4513:Src/main.c    **** 				{
 7004              		.loc 1 4513 0
 7005 009e 1F4B     		ldr	r3, .L241+28
 7006 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7007 00a2 072B     		cmp	r3, #7
 7008 00a4 10D0     		beq	.L236
4526:Src/main.c    **** 								if(TP_InputMode==5)
 7009              		.loc 1 4526 0
 7010 00a6 1E48     		ldr	r0, .L241+32
 7011 00a8 FFF7FEFF 		bl	printf
 7012              	.LVL986:
4527:Src/main.c    **** 									{
 7013              		.loc 1 4527 0
 7014 00ac 1D4B     		ldr	r3, .L241+36
 7015 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7016 00b0 052B     		cmp	r3, #5
 7017 00b2 13D0     		beq	.L237
4531:Src/main.c    **** 									{
 7018              		.loc 1 4531 0
ARM GAS  /tmp/ccQZgaDW.s 			page 225


 7019 00b4 062B     		cmp	r3, #6
 7020 00b6 14D0     		beq	.L238
4535:Src/main.c    **** 									{
 7021              		.loc 1 4535 0
 7022 00b8 B3B1     		cbz	r3, .L239
4539:Src/main.c    **** 									{
 7023              		.loc 1 4539 0
 7024 00ba 012B     		cmp	r3, #1
 7025 00bc 17D0     		beq	.L240
4544:Src/main.c    **** 
 7026              		.loc 1 4544 0
 7027 00be 0121     		movs	r1, #1
 7028 00c0 1020     		movs	r0, #16
 7029 00c2 FFF7FEFF 		bl	VXISI2CWrite
 7030              	.LVL987:
 7031 00c6 DBE7     		b	.L225
 7032              	.L236:
4516:Src/main.c    **** 					printf("(=1)");
 7033              		.loc 1 4516 0
 7034 00c8 FFF7FEFF 		bl	TP_bt1120_1080P_1080P_mode0_w0
 7035              	.LVL988:
4517:Src/main.c    **** 				//VXISI2CWrite(0x10,0x01);
 7036              		.loc 1 4517 0
 7037 00cc 1648     		ldr	r0, .L241+40
 7038 00ce FFF7FEFF 		bl	printf
 7039              	.LVL989:
4520:Src/main.c    **** 
 7040              		.loc 1 4520 0
 7041 00d2 2946     		mov	r1, r5
 7042 00d4 2846     		mov	r0, r5
 7043 00d6 FFF7FEFF 		bl	Set_Video_Loss_OSD
 7044              	.LVL990:
 7045 00da D1E7     		b	.L225
 7046              	.L237:
4529:Src/main.c    **** 									}
 7047              		.loc 1 4529 0
 7048 00dc FFF7FEFF 		bl	TP_bt1120_720P_1080P_mode0_w0
 7049              	.LVL991:
 7050 00e0 CEE7     		b	.L225
 7051              	.L238:
4533:Src/main.c    **** 									}
 7052              		.loc 1 4533 0
 7053 00e2 FFF7FEFF 		bl	TP_bt1120_1080P_1080P_mode0_w0
 7054              	.LVL992:
 7055 00e6 CBE7     		b	.L225
 7056              	.L239:
4537:Src/main.c    **** 									}
 7057              		.loc 1 4537 0
 7058 00e8 FFF7FEFF 		bl	TP_bt1120_NTSC_1080P_mode0_w0
 7059              	.LVL993:
 7060 00ec C8E7     		b	.L225
 7061              	.L240:
4541:Src/main.c    **** 									}
 7062              		.loc 1 4541 0
 7063 00ee FFF7FEFF 		bl	TP_bt1120_PAL_1080P_mode0_w0
 7064              	.LVL994:
 7065 00f2 C5E7     		b	.L225
ARM GAS  /tmp/ccQZgaDW.s 			page 226


 7066              	.L235:
4559:Src/main.c    **** 			else
 7067              		.loc 1 4559 0
 7068 00f4 0021     		movs	r1, #0
 7069 00f6 0120     		movs	r0, #1
 7070 00f8 FFF7FEFF 		bl	Set_Video_Loss_OSD
 7071              	.LVL995:
 7072 00fc C8E7     		b	.L224
 7073              	.L242:
 7074 00fe 00BF     		.align	2
 7075              	.L241:
 7076 0100 00000000 		.word	.LANCHOR10
 7077 0104 00000000 		.word	.LC37
 7078 0108 00000000 		.word	pVS4210_MutiWindows1
 7079 010c 00000000 		.word	.LANCHOR2
 7080 0110 14000000 		.word	.LC38
 7081 0114 00000000 		.word	.LANCHOR8
 7082 0118 00000000 		.word	.LANCHOR7
 7083 011c 00000000 		.word	mode
 7084 0120 30000000 		.word	.LC40
 7085 0124 00000000 		.word	TP_InputMode
 7086 0128 28000000 		.word	.LC39
 7087              		.cfi_endproc
 7088              	.LFE102:
 7090              		.section	.text.main_loop,"ax",%progbits
 7091              		.align	1
 7092              		.global	main_loop
 7093              		.syntax unified
 7094              		.thumb
 7095              		.thumb_func
 7096              		.fpu softvfp
 7098              	main_loop:
 7099              	.LFB85:
2033:Src/main.c    **** 
 7100              		.loc 1 2033 0
 7101              		.cfi_startproc
 7102              		@ Volatile: function does not return.
 7103              		@ args = 0, pretend = 0, frame = 0
 7104              		@ frame_needed = 0, uses_anonymous_args = 0
 7105 0000 00B5     		push	{lr}
 7106              	.LCFI44:
 7107              		.cfi_def_cfa_offset 4
 7108              		.cfi_offset 14, -4
 7109 0002 83B0     		sub	sp, sp, #12
 7110              	.LCFI45:
 7111              		.cfi_def_cfa_offset 16
 7112 0004 67E0     		b	.L259
 7113              	.L261:
2053:Src/main.c    **** 		HDMITX_DevLoopProc() ;
 7114              		.loc 1 2053 0
 7115 0006 1346     		mov	r3, r2
 7116 0008 0022     		movs	r2, #0
 7117 000a 1A70     		strb	r2, [r3]
2054:Src/main.c    **** 	}
 7118              		.loc 1 2054 0
 7119 000c FFF7FEFF 		bl	HDMITX_DevLoopProc
 7120              	.LVL996:
ARM GAS  /tmp/ccQZgaDW.s 			page 227


 7121 0010 70E0     		b	.L245
 7122              	.L262:
2089:Src/main.c    **** 			   if (gMode0LoopSecCount > gMode0LoopSecCmpVal)
 7123              		.loc 1 2089 0
 7124 0012 5E4A     		ldr	r2, .L267
 7125 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 7126 0016 0133     		adds	r3, r3, #1
 7127 0018 DBB2     		uxtb	r3, r3
 7128 001a 1370     		strb	r3, [r2]
2090:Src/main.c    **** 			   {
 7129              		.loc 1 2090 0
 7130 001c 5C4A     		ldr	r2, .L267+4
 7131 001e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7132 0020 9342     		cmp	r3, r2
 7133 0022 40F28580 		bls	.L248
2092:Src/main.c    **** 				   pVS4210_MutiWindows1.OutputMode = VS4210_FULL_MODE0 ;
 7134              		.loc 1 2092 0
 7135 0026 0021     		movs	r1, #0
 7136 0028 584B     		ldr	r3, .L267
 7137 002a 1970     		strb	r1, [r3]
2093:Src/main.c    **** 				   if (pVS4210_MutiWindows1.WindowMap.WMap0 < 4)
 7138              		.loc 1 2093 0
 7139 002c 594B     		ldr	r3, .L267+8
 7140 002e 1970     		strb	r1, [r3]
2094:Src/main.c    **** 				   {
 7141              		.loc 1 2094 0
 7142 0030 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7143 0032 032B     		cmp	r3, #3
 7144 0034 14D8     		bhi	.L249
2096:Src/main.c    **** 				   }
 7145              		.loc 1 2096 0
 7146 0036 0133     		adds	r3, r3, #1
 7147 0038 5649     		ldr	r1, .L267+8
 7148 003a 4B70     		strb	r3, [r1, #1]
 7149              	.L250:
2101:Src/main.c    **** 				   VS4210_SetMutiWindows(&pVS4210_MutiWindows1) ;
 7150              		.loc 1 2101 0
 7151 003c 554C     		ldr	r4, .L267+8
 7152 003e 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 7153 0040 0192     		str	r2, [sp, #4]
 7154 0042 0093     		str	r3, [sp]
 7155 0044 40F63503 		movw	r3, #2101
 7156 0048 534A     		ldr	r2, .L267+12
 7157 004a 5449     		ldr	r1, .L267+16
 7158 004c 5448     		ldr	r0, .L267+20
 7159 004e FFF7FEFF 		bl	printf
 7160              	.LVL997:
2102:Src/main.c    **** 				   OSDSecCount = 0 ;
 7161              		.loc 1 2102 0
 7162 0052 2046     		mov	r0, r4
 7163 0054 FFF7FEFF 		bl	VS4210_SetMutiWindows
 7164              	.LVL998:
2103:Src/main.c    **** 			   }
 7165              		.loc 1 2103 0
 7166 0058 524B     		ldr	r3, .L267+24
 7167 005a 0022     		movs	r2, #0
 7168 005c 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccQZgaDW.s 			page 228


 7169 005e 67E0     		b	.L248
 7170              	.L249:
2099:Src/main.c    **** 				   }
 7171              		.loc 1 2099 0
 7172 0060 4C4B     		ldr	r3, .L267+8
 7173 0062 0121     		movs	r1, #1
 7174 0064 5970     		strb	r1, [r3, #1]
 7175 0066 E9E7     		b	.L250
 7176              	.L263:
2109:Src/main.c    **** 		   }
 7177              		.loc 1 2109 0
 7178 0068 4A4B     		ldr	r3, .L267+8
 7179 006a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7180 006c 4D4A     		ldr	r2, .L267+24
 7181 006e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7182 0070 0192     		str	r2, [sp, #4]
 7183 0072 0093     		str	r3, [sp]
 7184 0074 40F63D03 		movw	r3, #2109
 7185 0078 474A     		ldr	r2, .L267+12
 7186 007a 4849     		ldr	r1, .L267+16
 7187 007c 4A48     		ldr	r0, .L267+28
 7188 007e FFF7FEFF 		bl	printf
 7189              	.LVL999:
 7190 0082 59E0     		b	.L251
 7191              	.L264:
2118:Src/main.c    **** 			   {
 7192              		.loc 1 2118 0
 7193 0084 474B     		ldr	r3, .L267+24
 7194 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7195 0088 092B     		cmp	r3, #9
 7196 008a 59D9     		bls	.L252
2120:Src/main.c    **** 				   OSDStateFlg = 0 ;
 7197              		.loc 1 2120 0
 7198 008c 0023     		movs	r3, #0
 7199 008e 454A     		ldr	r2, .L267+24
 7200 0090 1370     		strb	r3, [r2]
2121:Src/main.c    **** 				   OSD_Clear_All();
 7201              		.loc 1 2121 0
 7202 0092 464A     		ldr	r2, .L267+32
 7203 0094 1370     		strb	r3, [r2]
2122:Src/main.c    **** 				   ////VXIS_fSetContentOsdOnOff(0) ;
 7204              		.loc 1 2122 0
 7205 0096 FFF7FEFF 		bl	OSD_Clear_All
 7206              	.LVL1000:
 7207 009a 51E0     		b	.L252
 7208              	.L265:
2128:Src/main.c    **** 		   
 7209              		.loc 1 2128 0
 7210 009c 8021     		movs	r1, #128
 7211 009e 3220     		movs	r0, #50
 7212 00a0 FFF7FEFF 		bl	VXISI2CWrite
 7213              	.LVL1001:
 7214 00a4 51E0     		b	.L247
 7215              	.L266:
2164:Src/main.c    **** 				else
 7216              		.loc 1 2164 0
 7217 00a6 FFF7FEFF 		bl	HS_Select_Win
ARM GAS  /tmp/ccQZgaDW.s 			page 229


 7218              	.LVL1002:
 7219 00aa 01E0     		b	.L254
 7220              	.L255:
2178:Src/main.c    **** 	}while(AccessEnable == 0);
 7221              		.loc 1 2178 0 discriminator 2
 7222 00ac FFF7FEFF 		bl	Monitor
 7223              	.LVL1003:
 7224              	.L254:
2178:Src/main.c    **** 	}while(AccessEnable == 0);
 7225              		.loc 1 2178 0 is_stmt 0 discriminator 1
 7226 00b0 FFF7FEFF 		bl	RS_ready
 7227              	.LVL1004:
 7228 00b4 0028     		cmp	r0, #0
 7229 00b6 F9D1     		bne	.L255
2179:Src/main.c    **** 	#endif
 7230              		.loc 1 2179 0 is_stmt 1
 7231 00b8 3D4B     		ldr	r3, .L267+36
 7232 00ba 1B68     		ldr	r3, [r3]
 7233 00bc 002B     		cmp	r3, #0
 7234 00be F7D0     		beq	.L254
 7235 00c0 01E0     		b	.L257
 7236              	.L258:
2182:Src/main.c    **** 		
 7237              		.loc 1 2182 0 discriminator 2
 7238 00c2 FFF7FEFF 		bl	TOAReceivePaser
 7239              	.LVL1005:
 7240              	.L257:
2182:Src/main.c    **** 		
 7241              		.loc 1 2182 0 is_stmt 0 discriminator 1
 7242 00c6 FFF7FEFF 		bl	RS2_ready
 7243              	.LVL1006:
 7244 00ca 0028     		cmp	r0, #0
 7245 00cc F9D1     		bne	.L258
2184:Src/main.c    **** 
 7246              		.loc 1 2184 0 is_stmt 1
 7247 00ce FFF7FEFF 		bl	SysTimerHandler
 7248              	.LVL1007:
2186:Src/main.c    **** 
 7249              		.loc 1 2186 0
 7250 00d2 FFF7FEFF 		bl	Get_2824cIrq
 7251              	.LVL1008:
 7252              	.L259:
2044:Src/main.c    **** 	#endif
 7253              		.loc 1 2044 0
 7254 00d6 364B     		ldr	r3, .L267+36
 7255 00d8 1B68     		ldr	r3, [r3]
 7256 00da 012B     		cmp	r3, #1
 7257 00dc E8D1     		bne	.L254
2047:Src/main.c    **** 	HDMI_AudioModeDetect() ;
 7258              		.loc 1 2047 0
 7259 00de FFF7FEFF 		bl	HDMI_VideoModeDetect
 7260              	.LVL1009:
2048:Src/main.c    **** 
 7261              		.loc 1 2048 0
 7262 00e2 FFF7FEFF 		bl	HDMI_AudioModeDetect
 7263              	.LVL1010:
2050:Src/main.c    **** 	if (TxCount > 10 )
ARM GAS  /tmp/ccQZgaDW.s 			page 230


 7264              		.loc 1 2050 0
 7265 00e6 334A     		ldr	r2, .L267+40
 7266 00e8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 7267 00ea 0133     		adds	r3, r3, #1
 7268 00ec DBB2     		uxtb	r3, r3
 7269 00ee 1370     		strb	r3, [r2]
2051:Src/main.c    **** 	{
 7270              		.loc 1 2051 0
 7271 00f0 0A2B     		cmp	r3, #10
 7272 00f2 88D8     		bhi	.L261
 7273              	.L245:
2075:Src/main.c    **** 
 7274              		.loc 1 2075 0
 7275 00f4 0A20     		movs	r0, #10
 7276 00f6 FFF7FEFF 		bl	msleep
 7277              	.LVL1011:
2077:Src/main.c    **** 	   if (gMode0LoopCount > 100 )
 7278              		.loc 1 2077 0
 7279 00fa 2F4A     		ldr	r2, .L267+44
 7280 00fc 1388     		ldrh	r3, [r2]
 7281 00fe 0133     		adds	r3, r3, #1
 7282 0100 9BB2     		uxth	r3, r3
 7283 0102 1380     		strh	r3, [r2]	@ movhi
2078:Src/main.c    **** 	   {
 7284              		.loc 1 2078 0
 7285 0104 642B     		cmp	r3, #100
 7286 0106 06D9     		bls	.L246
2080:Src/main.c    **** 		   OSDSecCount = OSDSecCount +1 ;
 7287              		.loc 1 2080 0
 7288 0108 1346     		mov	r3, r2
 7289 010a 0022     		movs	r2, #0
 7290 010c 1A80     		strh	r2, [r3]	@ movhi
2081:Src/main.c    **** 	   }
 7291              		.loc 1 2081 0
 7292 010e 254A     		ldr	r2, .L267+24
 7293 0110 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 7294 0112 0133     		adds	r3, r3, #1
 7295 0114 1370     		strb	r3, [r2]
 7296              	.L246:
2084:Src/main.c    **** 	   {
 7297              		.loc 1 2084 0
 7298 0116 234B     		ldr	r3, .L267+24
 7299 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7300 011a 284A     		ldr	r2, .L267+48
 7301 011c 1268     		ldr	r2, [r2]
 7302 011e 9342     		cmp	r3, r2
 7303 0120 13D0     		beq	.L247
2086:Src/main.c    **** 		   if (gMode0LoopFlg == 1)
 7304              		.loc 1 2086 0
 7305 0122 264A     		ldr	r2, .L267+48
 7306 0124 1360     		str	r3, [r2]
2087:Src/main.c    **** 		   {
 7307              		.loc 1 2087 0
 7308 0126 264B     		ldr	r3, .L267+52
 7309 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7310 012a 012B     		cmp	r3, #1
 7311 012c 3FF471AF 		beq	.L262
ARM GAS  /tmp/ccQZgaDW.s 			page 231


 7312              	.L248:
2107:Src/main.c    **** 		   {
 7313              		.loc 1 2107 0
 7314 0130 234B     		ldr	r3, .L267+52
 7315 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7316 0134 012B     		cmp	r3, #1
 7317 0136 97D0     		beq	.L263
 7318              	.L251:
2116:Src/main.c    **** 		   {
 7319              		.loc 1 2116 0
 7320 0138 1C4B     		ldr	r3, .L267+32
 7321 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7322 013c 012B     		cmp	r3, #1
 7323 013e A1D0     		beq	.L264
 7324              	.L252:
2127:Src/main.c    **** 			VXISI2CWrite(0x32,0x80);
 7325              		.loc 1 2127 0
 7326 0140 3220     		movs	r0, #50
 7327 0142 FFF7FEFF 		bl	VXISI2CRead
 7328              	.LVL1012:
 7329 0146 0028     		cmp	r0, #0
 7330 0148 A8D0     		beq	.L265
 7331              	.L247:
2133:Src/main.c    **** 	
 7332              		.loc 1 2133 0
 7333 014a FFF7FEFF 		bl	EQ_Detect
 7334              	.LVL1013:
2151:Src/main.c    **** 		if((CheckSelectInputMode!=SelectInputMode)/*&&(BOOT_ISSUE==0)*/)
 7335              		.loc 1 2151 0
 7336 014e 1021     		movs	r1, #16
 7337 0150 1C48     		ldr	r0, .L267+56
 7338 0152 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 7339              	.LVL1014:
 7340 0156 1C4B     		ldr	r3, .L267+60
 7341 0158 1870     		strb	r0, [r3]
2152:Src/main.c    **** 		{
 7342              		.loc 1 2152 0
 7343 015a 1C4B     		ldr	r3, .L267+64
 7344 015c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7345 015e 9842     		cmp	r0, r3
 7346 0160 A6D0     		beq	.L254
2154:Src/main.c    **** 			CheckSelectInputMode=HDMI_SELECT_GET();
 7347              		.loc 1 2154 0
 7348 0162 3220     		movs	r0, #50
 7349 0164 FFF7FEFF 		bl	msleep
 7350              	.LVL1015:
2155:Src/main.c    **** 
 7351              		.loc 1 2155 0
 7352 0168 1021     		movs	r1, #16
 7353 016a 1648     		ldr	r0, .L267+56
 7354 016c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 7355              	.LVL1016:
 7356 0170 154B     		ldr	r3, .L267+60
 7357 0172 1870     		strb	r0, [r3]
2157:Src/main.c    **** 				{
 7358              		.loc 1 2157 0
 7359 0174 154B     		ldr	r3, .L267+64
ARM GAS  /tmp/ccQZgaDW.s 			page 232


 7360 0176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7361 0178 9842     		cmp	r0, r3
 7362 017a 99D0     		beq	.L254
2159:Src/main.c    **** 
 7363              		.loc 1 2159 0
 7364 017c 134B     		ldr	r3, .L267+64
 7365 017e 1870     		strb	r0, [r3]
2163:Src/main.c    **** 					HS_Select_Win(1);
 7366              		.loc 1 2163 0
 7367 0180 0128     		cmp	r0, #1
 7368 0182 90D0     		beq	.L266
2166:Src/main.c    **** 				}
 7369              		.loc 1 2166 0
 7370 0184 0020     		movs	r0, #0
 7371 0186 FFF7FEFF 		bl	HS_Select_Win
 7372              	.LVL1017:
 7373 018a 91E7     		b	.L254
 7374              	.L268:
 7375              		.align	2
 7376              	.L267:
 7377 018c 00000000 		.word	.LANCHOR28
 7378 0190 00000000 		.word	.LANCHOR29
 7379 0194 00000000 		.word	pVS4210_MutiWindows1
 7380 0198 00000000 		.word	.LANCHOR30
 7381 019c 00000000 		.word	.LC1
 7382 01a0 00000000 		.word	.LC41
 7383 01a4 00000000 		.word	.LANCHOR8
 7384 01a8 24000000 		.word	.LC42
 7385 01ac 00000000 		.word	.LANCHOR7
 7386 01b0 00000000 		.word	AccessEnable
 7387 01b4 00000000 		.word	.LANCHOR24
 7388 01b8 00000000 		.word	.LANCHOR25
 7389 01bc 00000000 		.word	.LANCHOR26
 7390 01c0 00000000 		.word	.LANCHOR27
 7391 01c4 00080140 		.word	1073809408
 7392 01c8 00000000 		.word	.LANCHOR31
 7393 01cc 00000000 		.word	.LANCHOR10
 7394              		.cfi_endproc
 7395              	.LFE85:
 7397              		.section	.text.main,"ax",%progbits
 7398              		.align	1
 7399              		.global	main
 7400              		.syntax unified
 7401              		.thumb
 7402              		.thumb_func
 7403              		.fpu softvfp
 7405              	main:
 7406              	.LFB84:
1722:Src/main.c    ****   /* USER CODE BEGIN 1 */
 7407              		.loc 1 1722 0
 7408              		.cfi_startproc
 7409              		@ args = 0, pretend = 0, frame = 0
 7410              		@ frame_needed = 0, uses_anonymous_args = 0
 7411 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 7412              	.LCFI46:
 7413              		.cfi_def_cfa_offset 28
 7414              		.cfi_offset 4, -28
ARM GAS  /tmp/ccQZgaDW.s 			page 233


 7415              		.cfi_offset 5, -24
 7416              		.cfi_offset 6, -20
 7417              		.cfi_offset 7, -16
 7418              		.cfi_offset 8, -12
 7419              		.cfi_offset 9, -8
 7420              		.cfi_offset 14, -4
 7421 0004 83B0     		sub	sp, sp, #12
 7422              	.LCFI47:
 7423              		.cfi_def_cfa_offset 40
1741:Src/main.c    ****   
 7424              		.loc 1 1741 0
 7425 0006 FFF7FEFF 		bl	HAL_Init
 7426              	.LVL1018:
1748:Src/main.c    **** 
 7427              		.loc 1 1748 0
 7428 000a FFF7FEFF 		bl	SystemClock_Config
 7429              	.LVL1019:
1752:Src/main.c    **** 
 7430              		.loc 1 1752 0
 7431 000e FFF7FEFF 		bl	InitialTimerEvent
 7432              	.LVL1020:
1757:Src/main.c    ****  // LCDPowerOFF();
 7433              		.loc 1 1757 0
 7434 0012 FFF7FEFF 		bl	MX_GPIO_Init
 7435              	.LVL1021:
1772:Src/main.c    ****   MX_USART1_UART_Init();
 7436              		.loc 1 1772 0
 7437 0016 FFF7FEFF 		bl	MX_TIM3_Init
 7438              	.LVL1022:
1773:Src/main.c    ****   MX_USART2_UART_Init();
 7439              		.loc 1 1773 0
 7440 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 7441              	.LVL1023:
1774:Src/main.c    **** //  MX_ADC1_Init();
 7442              		.loc 1 1774 0
 7443 001e FFF7FEFF 		bl	MX_USART2_UART_Init
 7444              	.LVL1024:
1781:Src/main.c    ****  SW_I2C1_Init() ;
 7445              		.loc 1 1781 0
 7446 0022 FFF7FEFF 		bl	SW_I2C0_Init
 7447              	.LVL1025:
1782:Src/main.c    ****  SW_I2C2_Init() ;
 7448              		.loc 1 1782 0
 7449 0026 FFF7FEFF 		bl	SW_I2C1_Init
 7450              	.LVL1026:
1783:Src/main.c    ****  SW_I2C3_Init() ;
 7451              		.loc 1 1783 0
 7452 002a FFF7FEFF 		bl	SW_I2C2_Init
 7453              	.LVL1027:
1784:Src/main.c    **** 
 7454              		.loc 1 1784 0
 7455 002e FFF7FEFF 		bl	SW_I2C3_Init
 7456              	.LVL1028:
1791:Src/main.c    **** SET_Audio_Mute(ON);
 7457              		.loc 1 1791 0
 7458 0032 0121     		movs	r1, #1
 7459 0034 0020     		movs	r0, #0
ARM GAS  /tmp/ccQZgaDW.s 			page 234


 7460 0036 FFF7FEFF 		bl	Set_Video_Loss_OSD
 7461              	.LVL1029:
1792:Src/main.c    **** 
 7462              		.loc 1 1792 0
 7463 003a 0120     		movs	r0, #1
 7464 003c FFF7FEFF 		bl	SET_Audio_Mute
 7465              	.LVL1030:
1797:Src/main.c    ****   HAL_UART_Receive_IT(&huart1,(uint8_t*)Rx_data, 1);	//activate UART receive interrupt every time
 7466              		.loc 1 1797 0
 7467 0040 3220     		movs	r0, #50
 7468 0042 FFF7FEFF 		bl	msleep
 7469              	.LVL1031:
1798:Src/main.c    ****   HAL_UART_Receive_IT(&huart2,(uint8_t*)Rx2_data, 1);	//activate UART receive interrupt every time
 7470              		.loc 1 1798 0
 7471 0046 0122     		movs	r2, #1
 7472 0048 5749     		ldr	r1, .L276
 7473 004a 5848     		ldr	r0, .L276+4
 7474 004c FFF7FEFF 		bl	HAL_UART_Receive_IT
 7475              	.LVL1032:
1799:Src/main.c    **** 
 7476              		.loc 1 1799 0
 7477 0050 0122     		movs	r2, #1
 7478 0052 5749     		ldr	r1, .L276+8
 7479 0054 5748     		ldr	r0, .L276+12
 7480 0056 FFF7FEFF 		bl	HAL_UART_Receive_IT
 7481              	.LVL1033:
1803:Src/main.c    ****  TP2824_SET_REST(0);
 7482              		.loc 1 1803 0
 7483 005a 574D     		ldr	r5, .L276+16
 7484 005c 0022     		movs	r2, #0
 7485 005e 4FF48051 		mov	r1, #4096
 7486 0062 2846     		mov	r0, r5
 7487 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 7488              	.LVL1034:
1804:Src/main.c    **** 
 7489              		.loc 1 1804 0
 7490 0068 544C     		ldr	r4, .L276+20
 7491 006a 0022     		movs	r2, #0
 7492 006c 0221     		movs	r1, #2
 7493 006e 2046     		mov	r0, r4
 7494 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 7495              	.LVL1035:
1806:Src/main.c    ****   //HAL_GPIO_WritePin(TP2824_RST_GPIO_Port, VS_RST_Pin, 1); //VS4210 RST
 7496              		.loc 1 1806 0
 7497 0074 6420     		movs	r0, #100
 7498 0076 FFF7FEFF 		bl	msleep
 7499              	.LVL1036:
1809:Src/main.c    ****  TP2824_SET_REST(1);
 7500              		.loc 1 1809 0
 7501 007a 0122     		movs	r2, #1
 7502 007c 4FF48051 		mov	r1, #4096
 7503 0080 2846     		mov	r0, r5
 7504 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 7505              	.LVL1037:
1810:Src/main.c    **** 
 7506              		.loc 1 1810 0
 7507 0086 0122     		movs	r2, #1
ARM GAS  /tmp/ccQZgaDW.s 			page 235


 7508 0088 0221     		movs	r1, #2
 7509 008a 2046     		mov	r0, r4
 7510 008c FFF7FEFF 		bl	HAL_GPIO_WritePin
 7511              	.LVL1038:
1824:Src/main.c    ****   {
 7512              		.loc 1 1824 0
 7513 0090 0024     		movs	r4, #0
 7514 0092 20E0     		b	.L270
 7515              	.LVL1039:
 7516              	.L271:
1826:Src/main.c    ****       dbg_Printf("Init HDMI RX,Chip(%d)....\r\n",(int)i ) ;
 7517              		.loc 1 1826 0 discriminator 3
 7518 0094 4A4B     		ldr	r3, .L276+24
 7519 0096 1C70     		strb	r4, [r3]
1827:Src/main.c    ****       InitHDMIRX(0);
 7520              		.loc 1 1827 0 discriminator 3
 7521 0098 4A4E     		ldr	r6, .L276+28
 7522 009a 4B4D     		ldr	r5, .L276+32
 7523 009c 0094     		str	r4, [sp]
 7524 009e 40F22373 		movw	r3, #1827
 7525 00a2 3246     		mov	r2, r6
 7526 00a4 2946     		mov	r1, r5
 7527 00a6 4948     		ldr	r0, .L276+36
 7528 00a8 FFF7FEFF 		bl	printf
 7529              	.LVL1040:
1828:Src/main.c    ****       HDMIRX_WriteI2C_Byte(0x89 ,0x80);
 7530              		.loc 1 1828 0 discriminator 3
 7531 00ac 0020     		movs	r0, #0
 7532 00ae FFF7FEFF 		bl	InitHDMIRX
 7533              	.LVL1041:
1829:Src/main.c    **** 
 7534              		.loc 1 1829 0 discriminator 3
 7535 00b2 8021     		movs	r1, #128
 7536 00b4 8920     		movs	r0, #137
 7537 00b6 FFF7FEFF 		bl	HDMIRX_WriteI2C_Byte
 7538              	.LVL1042:
1832:Src/main.c    ****       dbg_Printf("IT66021 chip num=%d , 02reg=0x%02x\r\n", (int )i , (int)val ) ;
 7539              		.loc 1 1832 0 discriminator 3
 7540 00ba 0220     		movs	r0, #2
 7541 00bc FFF7FEFF 		bl	HDMIRX_ReadI2C_Byte
 7542              	.LVL1043:
1833:Src/main.c    **** #endif
 7543              		.loc 1 1833 0 discriminator 3
 7544 00c0 0190     		str	r0, [sp, #4]
 7545 00c2 0094     		str	r4, [sp]
 7546 00c4 40F22973 		movw	r3, #1833
 7547 00c8 3246     		mov	r2, r6
 7548 00ca 2946     		mov	r1, r5
 7549 00cc 4048     		ldr	r0, .L276+40
 7550              	.LVL1044:
 7551 00ce FFF7FEFF 		bl	printf
 7552              	.LVL1045:
1824:Src/main.c    ****   {
 7553              		.loc 1 1824 0 discriminator 3
 7554 00d2 0134     		adds	r4, r4, #1
 7555              	.LVL1046:
 7556 00d4 E4B2     		uxtb	r4, r4
ARM GAS  /tmp/ccQZgaDW.s 			page 236


 7557              	.LVL1047:
 7558              	.L270:
1824:Src/main.c    ****   {
 7559              		.loc 1 1824 0 is_stmt 0 discriminator 1
 7560 00d6 012C     		cmp	r4, #1
 7561 00d8 DCD9     		bls	.L271
1846:Src/main.c    **** 	  #endif
 7562              		.loc 1 1846 0 is_stmt 1
 7563 00da 3E4C     		ldr	r4, .L276+44
 7564              	.LVL1048:
 7565 00dc 0025     		movs	r5, #0
 7566 00de 2570     		strb	r5, [r4]
1849:Src/main.c    ****   pVS4210_MutiWindows1.OutputSize = _OUTPUT_1080P60 ;
 7567              		.loc 1 1849 0
 7568 00e0 6571     		strb	r5, [r4, #5]
1850:Src/main.c    **** 	#ifdef VS4210_SELECT_WIN1	//20201211-02
 7569              		.loc 1 1850 0
 7570 00e2 0126     		movs	r6, #1
 7571 00e4 A671     		strb	r6, [r4, #6]
1857:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap1 = 2 ; //set ch2 = video2
 7572              		.loc 1 1857 0
 7573 00e6 6670     		strb	r6, [r4, #1]
1858:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap2 = 3 ; //set ch3 = video3
 7574              		.loc 1 1858 0
 7575 00e8 0223     		movs	r3, #2
 7576 00ea A370     		strb	r3, [r4, #2]
1859:Src/main.c    ****   pVS4210_MutiWindows1.WindowMap.WMap3 = 4 ; //set ch4 = video4
 7577              		.loc 1 1859 0
 7578 00ec 0327     		movs	r7, #3
 7579 00ee E770     		strb	r7, [r4, #3]
1860:Src/main.c    **** 	#endif
 7580              		.loc 1 1860 0
 7581 00f0 0423     		movs	r3, #4
 7582 00f2 2371     		strb	r3, [r4, #4]
1864:Src/main.c    **** 
 7583              		.loc 1 1864 0
 7584 00f4 3849     		ldr	r1, .L276+48
 7585 00f6 0F20     		movs	r0, #15
 7586 00f8 FFF7FEFF 		bl	VXOSD_UseFont_init
 7587              	.LVL1049:
1866:Src/main.c    **** #endif
 7588              		.loc 1 1866 0
 7589 00fc FFF7FEFF 		bl	main_init
 7590              	.LVL1050:
1874:Src/main.c    **** 
 7591              		.loc 1 1874 0
 7592 0100 FFF7FEFF 		bl	Init_TP280x_RegSet
 7593              	.LVL1051:
1878:Src/main.c    ****    dbg_Printf("VS4210 chip ID = 0x%02x\r\n",(int)val) ;
 7594              		.loc 1 1878 0
 7595 0104 2846     		mov	r0, r5
 7596 0106 FFF7FEFF 		bl	VXISI2CRead
 7597              	.LVL1052:
1879:Src/main.c    ****    dbg_Printf("VS4210 Init. (Startting...)\r\n") ;
 7598              		.loc 1 1879 0
 7599 010a DFF8B890 		ldr	r9, .L276+28
 7600 010e DFF8B880 		ldr	r8, .L276+32
ARM GAS  /tmp/ccQZgaDW.s 			page 237


 7601 0112 0090     		str	r0, [sp]
 7602 0114 40F25773 		movw	r3, #1879
 7603 0118 4A46     		mov	r2, r9
 7604 011a 4146     		mov	r1, r8
 7605 011c 2F48     		ldr	r0, .L276+52
 7606              	.LVL1053:
 7607 011e FFF7FEFF 		bl	printf
 7608              	.LVL1054:
1880:Src/main.c    **** #endif
 7609              		.loc 1 1880 0
 7610 0122 4FF4EB63 		mov	r3, #1880
 7611 0126 4A46     		mov	r2, r9
 7612 0128 4146     		mov	r1, r8
 7613 012a 2D48     		ldr	r0, .L276+56
 7614 012c FFF7FEFF 		bl	printf
 7615              	.LVL1055:
1883:Src/main.c    ****   //pVS4210_MutiWindows1.DrawOSDFlg = 0x00 ;  //Enable OSD, bit1=Title, bit0 = bar
 7616              		.loc 1 1883 0
 7617 0130 E771     		strb	r7, [r4, #7]
1893:Src/main.c    ****   //pVS4210_MutiWindows1.OutputSize = _OUTPUT_720P60 ;
 7618              		.loc 1 1893 0
 7619 0132 A671     		strb	r6, [r4, #6]
1896:Src/main.c    ****   pVS4210_MutiWindows1.DrawBoxColor= _EN_DRAWBOX_COLOR_White ;
 7620              		.loc 1 1896 0
 7621 0134 2572     		strb	r5, [r4, #8]
1897:Src/main.c    ****   VXIS_fSetOsdx2(0) ;
 7622              		.loc 1 1897 0
 7623 0136 6572     		strb	r5, [r4, #9]
1898:Src/main.c    **** 
 7624              		.loc 1 1898 0
 7625 0138 2846     		mov	r0, r5
 7626 013a FFF7FEFF 		bl	VXIS_fSetOsdx2
 7627              	.LVL1056:
1900:Src/main.c    **** 
 7628              		.loc 1 1900 0
 7629 013e 2046     		mov	r0, r4
 7630 0140 FFF7FEFF 		bl	VS4210_SetMutiWindows
 7631              	.LVL1057:
1902:Src/main.c    ****   {
 7632              		.loc 1 1902 0
 7633 0144 E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
 7634 0146 3BB1     		cbz	r3, .L272
1904:Src/main.c    ****         Tim1_count = 0 ;
 7635              		.loc 1 1904 0
 7636 0148 264B     		ldr	r3, .L276+60
 7637 014a 1E60     		str	r6, [r3]
1905:Src/main.c    ****         OSDStateFlg = 1 ;
 7638              		.loc 1 1905 0
 7639 014c 2649     		ldr	r1, .L276+64
 7640 014e 0D60     		str	r5, [r1]
1906:Src/main.c    ****         OSDSecCount = 0 ;
 7641              		.loc 1 1906 0
 7642 0150 2649     		ldr	r1, .L276+68
 7643 0152 0E70     		strb	r6, [r1]
1907:Src/main.c    ****   }  
 7644              		.loc 1 1907 0
 7645 0154 264A     		ldr	r2, .L276+72
ARM GAS  /tmp/ccQZgaDW.s 			page 238


 7646 0156 1570     		strb	r5, [r2]
 7647              	.L272:
1910:Src/main.c    **** memset(&ExOsdContent[1] ,_spc , (EXTERNOSDNUMBER+1) *2 ) ;
 7648              		.loc 1 1910 0
 7649 0158 2648     		ldr	r0, .L276+76
 7650 015a 5D23     		movs	r3, #93
 7651 015c 00F8013B 		strb	r3, [r0], #1
1911:Src/main.c    **** exosdLen = 4*EXTERNOSDNUMBER + 4  ;
 7652              		.loc 1 1911 0
 7653 0160 2022     		movs	r2, #32
 7654 0162 6D21     		movs	r1, #109
 7655 0164 FFF7FEFF 		bl	memset
 7656              	.LVL1058:
1914:Src/main.c    **** for (i = exosdStart ; i <= exosdLen ;i = i+2 )
 7657              		.loc 1 1914 0
 7658 0168 0122     		movs	r2, #1
1915:Src/main.c    **** {
 7659              		.loc 1 1915 0
 7660 016a 2123     		movs	r3, #33
 7661 016c 0AE0     		b	.L273
 7662              	.LVL1059:
 7663              	.L274:
1917:Src/main.c    **** 	ExOsdContent[i+1] = _spc ;
 7664              		.loc 1 1917 0 discriminator 3
 7665 016e 02F17F00 		add	r0, r2, #127
 7666 0172 2049     		ldr	r1, .L276+76
 7667 0174 C854     		strb	r0, [r1, r3]
1918:Src/main.c    **** 	j++ ;
 7668              		.loc 1 1918 0 discriminator 3
 7669 0176 581C     		adds	r0, r3, #1
 7670 0178 6D24     		movs	r4, #109
 7671 017a 0C54     		strb	r4, [r1, r0]
1919:Src/main.c    **** }
 7672              		.loc 1 1919 0 discriminator 3
 7673 017c 0132     		adds	r2, r2, #1
 7674              	.LVL1060:
 7675 017e D2B2     		uxtb	r2, r2
 7676              	.LVL1061:
1915:Src/main.c    **** {
 7677              		.loc 1 1915 0 discriminator 3
 7678 0180 0233     		adds	r3, r3, #2
 7679              	.LVL1062:
 7680 0182 DBB2     		uxtb	r3, r3
 7681              	.LVL1063:
 7682              	.L273:
1915:Src/main.c    **** {
 7683              		.loc 1 1915 0 is_stmt 0 discriminator 1
 7684 0184 402B     		cmp	r3, #64
 7685 0186 F2D9     		bls	.L274
1921:Src/main.c    ****   exosdLen = EXTERNOSDNUMBER *2  ;
 7686              		.loc 1 1921 0 is_stmt 1
 7687 0188 1F22     		movs	r2, #31
 7688              	.LVL1064:
 7689 018a 6D21     		movs	r1, #109
 7690 018c 1A48     		ldr	r0, .L276+80
 7691 018e FFF7FEFF 		bl	memset
 7692              	.LVL1065:
ARM GAS  /tmp/ccQZgaDW.s 			page 239


1924:Src/main.c    **** //test@end
 7693              		.loc 1 1924 0
 7694 0192 0020     		movs	r0, #0
 7695 0194 FFF7FEFF 		bl	Audio_Sel
 7696              	.LVL1066:
1987:Src/main.c    ****   /* USER CODE END 2 */
 7697              		.loc 1 1987 0
 7698 0198 1848     		ldr	r0, .L276+84
 7699 019a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 7700              	.LVL1067:
2004:Src/main.c    **** 
 7701              		.loc 1 2004 0
 7702 019e 1848     		ldr	r0, .L276+88
 7703 01a0 FFF7FEFF 		bl	printf
 7704              	.LVL1068:
2017:Src/main.c    **** 	
 7705              		.loc 1 2017 0
 7706 01a4 FFF7FEFF 		bl	main_loop
 7707              	.LVL1069:
 7708              	.L277:
 7709              		.align	2
 7710              	.L276:
 7711 01a8 00000000 		.word	.LANCHOR22
 7712 01ac 00000000 		.word	huart1
 7713 01b0 00000000 		.word	.LANCHOR23
 7714 01b4 00000000 		.word	huart2
 7715 01b8 000C0140 		.word	1073810432
 7716 01bc 00100140 		.word	1073811456
 7717 01c0 00000000 		.word	gHDMI_Index
 7718 01c4 00000000 		.word	.LANCHOR32
 7719 01c8 00000000 		.word	.LC1
 7720 01cc 00000000 		.word	.LC43
 7721 01d0 28000000 		.word	.LC44
 7722 01d4 00000000 		.word	pVS4210_MutiWindows1
 7723 01d8 00000000 		.word	UserDefineFont1
 7724 01dc 58000000 		.word	.LC45
 7725 01e0 7C000000 		.word	.LC46
 7726 01e4 00000000 		.word	.LANCHOR5
 7727 01e8 00000000 		.word	.LANCHOR6
 7728 01ec 00000000 		.word	.LANCHOR7
 7729 01f0 00000000 		.word	.LANCHOR8
 7730 01f4 00000000 		.word	ExOsdContent
 7731 01f8 3F000000 		.word	ExOsdContent+63
 7732 01fc 00000000 		.word	htim3
 7733 0200 A4000000 		.word	.LC47
 7734              		.cfi_endproc
 7735              	.LFE84:
 7737              		.section	.text.Error_Handler,"ax",%progbits
 7738              		.align	1
 7739              		.global	Error_Handler
 7740              		.syntax unified
 7741              		.thumb
 7742              		.thumb_func
 7743              		.fpu softvfp
 7745              	Error_Handler:
 7746              	.LFB103:
4571:Src/main.c    **** 
ARM GAS  /tmp/ccQZgaDW.s 			page 240


4572:Src/main.c    **** /* USER CODE END 4 */
4573:Src/main.c    **** 
4574:Src/main.c    **** /**
4575:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
4576:Src/main.c    ****   * @retval None
4577:Src/main.c    ****   */
4578:Src/main.c    **** void Error_Handler(void)
4579:Src/main.c    **** {
 7747              		.loc 1 4579 0
 7748              		.cfi_startproc
 7749              		@ args = 0, pretend = 0, frame = 0
 7750              		@ frame_needed = 0, uses_anonymous_args = 0
 7751              		@ link register save eliminated.
4580:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
4581:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
4582:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
4583:Src/main.c    **** }
 7752              		.loc 1 4583 0
 7753 0000 7047     		bx	lr
 7754              		.cfi_endproc
 7755              	.LFE103:
 7757              		.global	OSDStateFlg
 7758              		.global	OSDSecCount
 7759              		.comm	pVS4210_JointKind1,10,4
 7760              		.global	gRxLoopFlg
 7761              		.comm	gabVXIS_Input_mirrorH,4,4
 7762              		.global	OSD_Show_Flg
 7763              		.global	Tim1_count
 7764              		.comm	pVS4210_MutiWindows1,10,4
 7765              		.global	TxCount
 7766              		.global	bSignal
 7767              		.global	gMode0LoopSecCmpVal
 7768              		.global	gMode0LoopSecCount
 7769              		.global	gMode0LoopFlg
 7770              		.global	gMode0LoopCount
 7771              		.global	gbAUDO_INDEX
 7772              		.comm	gPrebAUDO_INDEX,1,1
 7773              		.comm	gPreAudioSampleFreq,1,1
 7774              		.global	CheckSelectInputMode
 7775              		.global	SelectInputMode
 7776              		.global	OSDPreSecCount
 7777              		.global	PrebVXIS_InputMode
 7778              		.comm	ExOsdContent,256,4
 7779              		.global	CURRENT_CH
 7780              		.global	BOOT_ISSUE
 7781              		.global	OSD_SPEAKER
 7782              		.global	OSD_MIRROR
 7783              		.comm	CAMR_M,1,1
 7784              		.comm	CAMC_M,1,1
 7785              		.comm	CAMB_M,1,1
 7786              		.comm	CAMA_M,1,1
 7787              		.comm	Priority,1,1
 7788              		.comm	SelectModeType,1,1
 7789              		.global	tptic
 7790              		.global	keytic
 7791              		.global	PowerFlag
 7792              		.comm	TimeStep,1,1
ARM GAS  /tmp/ccQZgaDW.s 			page 241


 7793              		.global	PWMLevel
 7794              		.global	AutoDayNightDelay
 7795              		.global	LightSensor_ADC
 7796              		.global	DayNightLevel
 7797              		.comm	DebugLevel,1,1
 7798              		.global	half_scaler
 7799              		.comm	ManVidRes,1,1
 7800              		.global	VS8812_ADDR
 7801              		.global	VS4210_ADDR
 7802              		.comm	htim2,64,4
 7803              		.comm	hadc1,48,4
 7804              		.comm	huart2,64,4
 7805              		.comm	huart1,64,4
 7806              		.comm	htim3,64,4
 7807              		.comm	newInRes,4,4
 7808              		.section	.bss.AutoDayNightDelay,"aw",%nobits
 7809              		.set	.LANCHOR19,. + 0
 7812              	AutoDayNightDelay:
 7813 0000 00       		.space	1
 7814              		.section	.bss.CURRENT_CH,"aw",%nobits
 7815              		.set	.LANCHOR16,. + 0
 7818              	CURRENT_CH:
 7819 0000 00       		.space	1
 7820              		.section	.bss.CheckSelectInputMode,"aw",%nobits
 7821              		.set	.LANCHOR31,. + 0
 7824              	CheckSelectInputMode:
 7825 0000 00       		.space	1
 7826              		.section	.bss.DayNightLevel,"aw",%nobits
 7827              		.set	.LANCHOR17,. + 0
 7830              	DayNightLevel:
 7831 0000 00       		.space	1
 7832              		.section	.bss.DebugFlg,"aw",%nobits
 7833              		.align	2
 7836              	DebugFlg:
 7837 0000 00000000 		.space	4
 7838              		.section	.bss.IR_4BYTE,"aw",%nobits
 7839              		.align	2
 7842              	IR_4BYTE:
 7843 0000 00000000 		.space	4
 7844              		.section	.bss.IR_Code,"aw",%nobits
 7847              	IR_Code:
 7848 0000 00       		.space	1
 7849              		.section	.bss.IR_END_Flg,"aw",%nobits
 7852              	IR_END_Flg:
 7853 0000 00       		.space	1
 7854              		.section	.bss.IR_IRQFlg,"aw",%nobits
 7857              	IR_IRQFlg:
 7858 0000 00       		.space	1
 7859              		.section	.bss.IR_IRQ_Index,"aw",%nobits
 7862              	IR_IRQ_Index:
 7863 0000 00       		.space	1
 7864              		.section	.bss.IR_PlusTimeVal,"aw",%nobits
 7865              		.align	1
 7868              	IR_PlusTimeVal:
 7869 0000 0000     		.space	2
 7870              		.section	.bss.IR_ShiftCount,"aw",%nobits
 7873              	IR_ShiftCount:
ARM GAS  /tmp/ccQZgaDW.s 			page 242


 7874 0000 00       		.space	1
 7875              		.section	.bss.IR_StartFlg,"aw",%nobits
 7878              	IR_StartFlg:
 7879 0000 00       		.space	1
 7880              		.section	.bss.LightSensor_ADC,"aw",%nobits
 7881              		.align	1
 7884              	LightSensor_ADC:
 7885 0000 0000     		.space	2
 7886              		.section	.bss.OSDSecCount,"aw",%nobits
 7887              		.set	.LANCHOR8,. + 0
 7890              	OSDSecCount:
 7891 0000 00       		.space	1
 7892              		.section	.bss.OSD_MIRROR,"aw",%nobits
 7893              		.align	2
 7894              		.set	.LANCHOR14,. + 0
 7897              	OSD_MIRROR:
 7898 0000 00000000 		.space	4
 7899              		.section	.bss.OSD_SPEAKER,"aw",%nobits
 7900              		.align	2
 7901              		.set	.LANCHOR15,. + 0
 7904              	OSD_SPEAKER:
 7905 0000 00000000 		.space	4
 7906              		.section	.bss.OSD_Show_Flg,"aw",%nobits
 7907              		.align	2
 7908              		.set	.LANCHOR5,. + 0
 7911              	OSD_Show_Flg:
 7912 0000 00000000 		.space	4
 7913              		.section	.bss.PreIR_Code,"aw",%nobits
 7916              	PreIR_Code:
 7917 0000 00       		.space	1
 7918              		.section	.bss.PreIR_IRQ_Index,"aw",%nobits
 7921              	PreIR_IRQ_Index:
 7922 0000 00       		.space	1
 7923              		.section	.bss.Rx2_data,"aw",%nobits
 7924              		.align	2
 7925              		.set	.LANCHOR23,. + 0
 7928              	Rx2_data:
 7929 0000 0000     		.space	2
 7930              		.section	.bss.RxBufIndex,"aw",%nobits
 7931              		.align	2
 7932              		.set	.LANCHOR12,. + 0
 7935              	RxBufIndex:
 7936 0000 00000000 		.space	4
 7937              		.section	.bss.Rx_data,"aw",%nobits
 7938              		.align	2
 7939              		.set	.LANCHOR22,. + 0
 7942              	Rx_data:
 7943 0000 0000     		.space	2
 7944              		.section	.bss.Rx_indx,"aw",%nobits
 7945              		.align	2
 7948              	Rx_indx:
 7949 0000 00000000 		.space	4
 7950              		.section	.bss.RxiCount,"aw",%nobits
 7951              		.align	2
 7954              	RxiCount:
 7955 0000 00000000 		.space	4
 7956              		.section	.bss.SelectInputMode,"aw",%nobits
ARM GAS  /tmp/ccQZgaDW.s 			page 243


 7957              		.set	.LANCHOR10,. + 0
 7960              	SelectInputMode:
 7961 0000 00       		.space	1
 7962              		.section	.bss.Tim1_count,"aw",%nobits
 7963              		.align	2
 7964              		.set	.LANCHOR6,. + 0
 7967              	Tim1_count:
 7968 0000 00000000 		.space	4
 7969              		.section	.bss.Transfer_cplt,"aw",%nobits
 7970              		.set	.LANCHOR11,. + 0
 7973              	Transfer_cplt:
 7974 0000 00       		.space	1
 7975              		.section	.bss.TxCount,"aw",%nobits
 7976              		.set	.LANCHOR24,. + 0
 7979              	TxCount:
 7980 0000 00       		.space	1
 7981              		.section	.bss.TxiCount,"aw",%nobits
 7982              		.align	2
 7985              	TxiCount:
 7986 0000 00000000 		.space	4
 7987              		.section	.bss.bOldSignal,"aw",%nobits
 7988              		.align	2
 7989              		.set	.LANCHOR3,. + 0
 7992              	bOldSignal:
 7993 0000 00000000 		.space	4
 7994              		.section	.bss.bSignal,"aw",%nobits
 7995              		.align	2
 7996              		.set	.LANCHOR2,. + 0
 7999              	bSignal:
 8000 0000 00000000 		.space	4
 8001              		.section	.bss.gAudioSampleFreq,"aw",%nobits
 8002              		.align	2
 8003              		.set	.LANCHOR1,. + 0
 8006              	gAudioSampleFreq:
 8007 0000 00000000 		.space	4
 8008              		.section	.bss.gMode0LoopCount,"aw",%nobits
 8009              		.align	1
 8010              		.set	.LANCHOR25,. + 0
 8013              	gMode0LoopCount:
 8014 0000 0000     		.space	2
 8015              		.section	.bss.gMode0LoopFlg,"aw",%nobits
 8016              		.set	.LANCHOR27,. + 0
 8019              	gMode0LoopFlg:
 8020 0000 00       		.space	1
 8021              		.section	.bss.gMode0LoopSecCount,"aw",%nobits
 8022              		.set	.LANCHOR28,. + 0
 8025              	gMode0LoopSecCount:
 8026 0000 00       		.space	1
 8027              		.section	.bss.gRxbuf,"aw",%nobits
 8028              		.align	2
 8029              		.set	.LANCHOR13,. + 0
 8032              	gRxbuf:
 8033 0000 00000000 		.space	50
 8033      00000000 
 8033      00000000 
 8033      00000000 
 8033      00000000 
ARM GAS  /tmp/ccQZgaDW.s 			page 244


 8034              		.section	.bss.gbAUDO_INDEX,"aw",%nobits
 8035              		.set	.LANCHOR0,. + 0
 8038              	gbAUDO_INDEX:
 8039 0000 00       		.space	1
 8040              		.section	.bss.half_scaler,"aw",%nobits
 8043              	half_scaler:
 8044 0000 00       		.space	1
 8045              		.section	.bss.keytic,"aw",%nobits
 8048              	keytic:
 8049 0000 00       		.space	1
 8050              		.section	.bss.tim3count,"aw",%nobits
 8051              		.align	2
 8052              		.set	.LANCHOR21,. + 0
 8055              	tim3count:
 8056 0000 00000000 		.space	4
 8057              		.section	.bss.tptic,"aw",%nobits
 8060              	tptic:
 8061 0000 00       		.space	1
 8062              		.section	.bss.u16Vendor,"aw",%nobits
 8063              		.align	1
 8066              	u16Vendor:
 8067 0000 0000     		.space	2
 8068              		.section	.bss.u8IRCheckcode,"aw",%nobits
 8071              	u8IRCheckcode:
 8072 0000 00       		.space	1
 8073              		.section	.bss.u8IRcode,"aw",%nobits
 8076              	u8IRcode:
 8077 0000 00       		.space	1
 8078              		.section	.bss.u8PowerFlg,"aw",%nobits
 8081              	u8PowerFlg:
 8082 0000 00       		.space	1
 8083              		.section	.data.BOOT_ISSUE,"aw",%progbits
 8086              	BOOT_ISSUE:
 8087 0000 01       		.byte	1
 8088              		.section	.data.OSDPreSecCount,"aw",%progbits
 8089              		.align	2
 8090              		.set	.LANCHOR26,. + 0
 8093              	OSDPreSecCount:
 8094 0000 FFFFFFFF 		.word	-1
 8095              		.section	.data.OSDStateFlg,"aw",%progbits
 8096              		.set	.LANCHOR7,. + 0
 8099              	OSDStateFlg:
 8100 0000 01       		.byte	1
 8101              		.section	.data.PWMLevel,"aw",%progbits
 8102              		.set	.LANCHOR18,. + 0
 8105              	PWMLevel:
 8106 0000 80       		.byte	-128
 8107              		.section	.data.PowerFlag,"aw",%progbits
 8108              		.set	.LANCHOR20,. + 0
 8111              	PowerFlag:
 8112 0000 01       		.byte	1
 8113              		.section	.data.PrebVXIS_InputMode,"aw",%progbits
 8114              		.align	2
 8115              		.set	.LANCHOR9,. + 0
 8118              	PrebVXIS_InputMode:
 8119 0000 FA       		.byte	-6
 8120 0001 FA       		.byte	-6
ARM GAS  /tmp/ccQZgaDW.s 			page 245


 8121 0002 FA       		.byte	-6
 8122 0003 FA       		.byte	-6
 8123              		.section	.data.VS4210_ADDR,"aw",%progbits
 8126              	VS4210_ADDR:
 8127 0000 40       		.byte	64
 8128              		.section	.data.VS8812_ADDR,"aw",%progbits
 8131              	VS8812_ADDR:
 8132 0000 12       		.byte	18
 8133              		.section	.data.gMode0LoopSecCmpVal,"aw",%progbits
 8134              		.set	.LANCHOR29,. + 0
 8137              	gMode0LoopSecCmpVal:
 8138 0000 0A       		.byte	10
 8139              		.section	.data.gRxLoopFlg,"aw",%progbits
 8142              	gRxLoopFlg:
 8143 0000 01       		.byte	1
 8144              		.section	.rodata.GetRS232_CMD.str1.4,"aMS",%progbits,1
 8145              		.align	2
 8146              	.LC4:
 8147 0000 52784275 		.ascii	"RxBufIndex=%d,str=%s\015\012\000"
 8147      66496E64 
 8147      65783D25 
 8147      642C7374 
 8147      723D2573 
 8148 0017 00       		.space	1
 8149              	.LC5:
 8150 0018 49724E75 		.ascii	"IrNum=0x%02x\015\012\000"
 8150      6D3D3078 
 8150      25303278 
 8150      0D0A00
 8151              		.section	.rodata.HDMI_VideoModeDetect.str1.4,"aMS",%progbits,1
 8152              		.align	2
 8153              	.LC1:
 8154 0000 5372632F 		.ascii	"Src/main.c\000"
 8154      6D61696E 
 8154      2E6300
 8155 000b 00       		.space	1
 8156              	.LC2:
 8157 000c 25732C25 		.ascii	"%s,%s,%d:##ch%d, VS4210_Rx_NoSignal\015\012\000"
 8157      732C2564 
 8157      3A232363 
 8157      6825642C 
 8157      20565334 
 8158 0032 0000     		.space	2
 8159              	.LC3:
 8160 0034 25732C25 		.ascii	"%s,%s,%d:ch%d, InputMode=%d \015\012\000"
 8160      732C2564 
 8160      3A636825 
 8160      642C2049 
 8160      6E707574 
 8161              		.section	.rodata.HS_Select_Win.str1.4,"aMS",%progbits,1
 8162              		.align	2
 8163              	.LC37:
 8164 0000 53656C65 		.ascii	"Selected window 0\015\000"
 8164      63746564 
 8164      2077696E 
 8164      646F7720 
 8164      300D00
ARM GAS  /tmp/ccQZgaDW.s 			page 246


 8165 0013 00       		.space	1
 8166              	.LC38:
 8167 0014 53656C65 		.ascii	"Selected window 1\015\000"
 8167      63746564 
 8167      2077696E 
 8167      646F7720 
 8167      310D00
 8168 0027 00       		.space	1
 8169              	.LC39:
 8170 0028 283D3129 		.ascii	"(=1)\000"
 8170      00
 8171 002d 000000   		.space	3
 8172              	.LC40:
 8173 0030 283D3229 		.ascii	"(=2)\000"
 8173      00
 8174              		.section	.rodata.SET_AHD_MDOE.str1.4,"aMS",%progbits,1
 8175              		.align	2
 8176              	.LC36:
 8177 0000 0D0A5345 		.ascii	"\015\012SET_AHD_MDOE...\000"
 8177      545F4148 
 8177      445F4D44 
 8177      4F452E2E 
 8177      2E00
 8178              		.section	.rodata.SET_Audio_Mute.str1.4,"aMS",%progbits,1
 8179              		.align	2
 8180              	.LC0:
 8181 0000 282A5345 		.ascii	"(*SET_Audio_Mute=%d)\000"
 8181      545F4175 
 8181      64696F5F 
 8181      4D757465 
 8181      3D256429 
 8182              		.section	.rodata.SET_VS4210_1280_720_out.str1.4,"aMS",%progbits,1
 8183              		.align	2
 8184              	.LC35:
 8185 0000 0D0A5345 		.ascii	"\015\012SET_VS4210_1280_720_out\000"
 8185      545F5653 
 8185      34323130 
 8185      5F313238 
 8185      305F3732 
 8186              		.section	.rodata.SET_VS4210_720_480_out.str1.4,"aMS",%progbits,1
 8187              		.align	2
 8188              	.LC34:
 8189 0000 0D0A5345 		.ascii	"\015\012SET_VS4210_720_480_out \000"
 8189      545F5653 
 8189      34323130 
 8189      5F373230 
 8189      5F343830 
 8190              		.section	.rodata.TP_bt1120_1080P_1080P_mode0_w0.str1.4,"aMS",%progbits,1
 8191              		.align	2
 8192              	.LC30:
 8193 0000 0D0A4C6F 		.ascii	"\015\012Loading VS4210 AHD table 1080P... \000"
 8193      6164696E 
 8193      67205653 
 8193      34323130 
 8193      20414844 
 8194              		.section	.rodata.TP_bt1120_720P_1080P_mode0_w0.str1.4,"aMS",%progbits,1
 8195              		.align	2
ARM GAS  /tmp/ccQZgaDW.s 			page 247


 8196              	.LC31:
 8197 0000 0D0A4C6F 		.ascii	"\015\012Loading VS4210 AHD table 720P... \000"
 8197      6164696E 
 8197      67205653 
 8197      34323130 
 8197      20414844 
 8198              		.section	.rodata.TP_bt1120_NTSC_1080P_mode0_w0.str1.4,"aMS",%progbits,1
 8199              		.align	2
 8200              	.LC32:
 8201 0000 0D0A4C6F 		.ascii	"\015\012Loading VS4210 AHD table NTSC... \000"
 8201      6164696E 
 8201      67205653 
 8201      34323130 
 8201      20414844 
 8202              		.section	.rodata.TP_bt1120_PAL_1080P_mode0_w0.str1.4,"aMS",%progbits,1
 8203              		.align	2
 8204              	.LC33:
 8205 0000 0D0A4C6F 		.ascii	"\015\012Loading VS4210 AHD table PAL... \000"
 8205      6164696E 
 8205      67205653 
 8205      34323130 
 8205      20414844 
 8206              		.section	.rodata.WaitPowerOn.str1.4,"aMS",%progbits,1
 8207              		.align	2
 8208              	.LC28:
 8209 0000 0D0A2850 		.ascii	"\015\012(Power off..)\000"
 8209      6F776572 
 8209      206F6666 
 8209      2E2E2900 
 8210              	.LC29:
 8211 0010 0D0A2850 		.ascii	"\015\012(Power ON..)\000"
 8211      6F776572 
 8211      204F4E2E 
 8211      2E2900
 8212              		.section	.rodata.__FUNCTION__.9357,"a",%progbits
 8213              		.align	2
 8214              		.set	.LANCHOR4,. + 0
 8217              	__FUNCTION__.9357:
 8218 0000 48444D49 		.ascii	"HDMI_VideoModeDetect\000"
 8218      5F566964 
 8218      656F4D6F 
 8218      64654465 
 8218      74656374 
 8219              		.section	.rodata.__FUNCTION__.9404,"a",%progbits
 8220              		.align	2
 8221              		.set	.LANCHOR32,. + 0
 8224              	__FUNCTION__.9404:
 8225 0000 6D61696E 		.ascii	"main\000"
 8225      00
 8226              		.section	.rodata.__FUNCTION__.9415,"a",%progbits
 8227              		.align	2
 8228              		.set	.LANCHOR30,. + 0
 8231              	__FUNCTION__.9415:
 8232 0000 6D61696E 		.ascii	"main_loop\000"
 8232      5F6C6F6F 
 8232      7000
 8233              		.section	.rodata.main.str1.4,"aMS",%progbits,1
ARM GAS  /tmp/ccQZgaDW.s 			page 248


 8234              		.align	2
 8235              	.LC43:
 8236 0000 25732C25 		.ascii	"%s,%s,%d:Init HDMI RX,Chip(%d)....\015\012\000"
 8236      732C2564 
 8236      3A496E69 
 8236      74204844 
 8236      4D492052 
 8237 0025 000000   		.space	3
 8238              	.LC44:
 8239 0028 25732C25 		.ascii	"%s,%s,%d:IT66021 chip num=%d , 02reg=0x%02x\015\012"
 8239      732C2564 
 8239      3A495436 
 8239      36303231 
 8239      20636869 
 8240 0055 00       		.ascii	"\000"
 8241 0056 0000     		.space	2
 8242              	.LC45:
 8243 0058 25732C25 		.ascii	"%s,%s,%d:VS4210 chip ID = 0x%02x\015\012\000"
 8243      732C2564 
 8243      3A565334 
 8243      32313020 
 8243      63686970 
 8244 007b 00       		.space	1
 8245              	.LC46:
 8246 007c 25732C25 		.ascii	"%s,%s,%d:VS4210 Init. (Startting...)\015\012\000"
 8246      732C2564 
 8246      3A565334 
 8246      32313020 
 8246      496E6974 
 8247 00a3 00       		.space	1
 8248              	.LC47:
 8249 00a4 0D0A4D61 		.ascii	"\015\012Main Loop...\000"
 8249      696E204C 
 8249      6F6F702E 
 8249      2E2E00
 8250              		.section	.rodata.main_init.str1.4,"aMS",%progbits,1
 8251              		.align	2
 8252              	.LC23:
 8253 0000 0D0A5072 		.ascii	"\015\012Prev.FW:%04x\015\012\000"
 8253      65762E46 
 8253      573A2530 
 8253      34780D0A 
 8253      00
 8254 0011 000000   		.space	3
 8255              	.LC24:
 8256 0014 0D0A4375 		.ascii	"\015\012Curr.FW:%04x\000"
 8256      72722E46 
 8256      573A2530 
 8256      347800
 8257 0023 00       		.space	1
 8258              	.LC25:
 8259 0024 0D0A5B4D 		.ascii	"\015\012[MSG]main_init()=> rev != FWVER & call Clea"
 8259      53475D6D 
 8259      61696E5F 
 8259      696E6974 
 8259      28293D3E 
 8260 0051 72426173 		.ascii	"rBasicEE()\015\012\000"
ARM GAS  /tmp/ccQZgaDW.s 			page 249


 8260      69634545 
 8260      28290D0A 
 8260      00
 8261 005e 0000     		.space	2
 8262              	.LC26:
 8263 0060 0D0A4361 		.ascii	"\015\012Cannot access EEPROM!!!!\000"
 8263      6E6E6F74 
 8263      20616363 
 8263      65737320 
 8263      45455052 
 8264 007b 00       		.space	1
 8265              	.LC27:
 8266 007c 0D0A4E6F 		.ascii	"\015\012No initialize\000"
 8266      20696E69 
 8266      7469616C 
 8266      697A6500 
 8267              		.section	.rodata.main_loop.str1.4,"aMS",%progbits,1
 8268              		.align	2
 8269              	.LC41:
 8270 0000 25732C25 		.ascii	"%s,%s,%d:LOOP CH=%d,SMP Sec=%d\015\012\000"
 8270      732C2564 
 8270      3A4C4F4F 
 8270      50204348 
 8270      3D25642C 
 8271 0021 000000   		.space	3
 8272              	.LC42:
 8273 0024 25732C25 		.ascii	"%s,%s,%d:Loop CH=%d,SecCount=%d\015\012\000"
 8273      732C2564 
 8273      3A4C6F6F 
 8273      70204348 
 8273      3D25642C 
 8274              		.section	.rodata.setloopoutmode.str1.4,"aMS",%progbits,1
 8275              		.align	2
 8276              	.LC6:
 8277 0000 56533432 		.ascii	"VS4210_MODE0_w0\015\000"
 8277      31305F4D 
 8277      4F444530 
 8277      5F77300D 
 8277      00
 8278 0011 000000   		.space	3
 8279              	.LC7:
 8280 0014 56533432 		.ascii	"VS4210_MODE0_w1\015\000"
 8280      31305F4D 
 8280      4F444530 
 8280      5F77310D 
 8280      00
 8281 0025 000000   		.space	3
 8282              	.LC8:
 8283 0028 56533432 		.ascii	"VS4210_MODE0_w2\015\000"
 8283      31305F4D 
 8283      4F444530 
 8283      5F77320D 
 8283      00
 8284 0039 000000   		.space	3
 8285              	.LC9:
 8286 003c 56533432 		.ascii	"VS4210_MODE0_w3\015\000"
 8286      31305F4D 
ARM GAS  /tmp/ccQZgaDW.s 			page 250


 8286      4F444530 
 8286      5F77330D 
 8286      00
 8287 004d 000000   		.space	3
 8288              	.LC10:
 8289 0050 56533432 		.ascii	"VS4210_MODE1\015\000"
 8289      31305F4D 
 8289      4F444531 
 8289      0D00
 8290 005e 0000     		.space	2
 8291              	.LC11:
 8292 0060 56533432 		.ascii	"VS4210_MODE2\015\000"
 8292      31305F4D 
 8292      4F444532 
 8292      0D00
 8293 006e 0000     		.space	2
 8294              	.LC12:
 8295 0070 56533432 		.ascii	"VS4210_MODE12 ch1 ch2\015\000"
 8295      31305F4D 
 8295      4F444531 
 8295      32206368 
 8295      31206368 
 8296 0087 00       		.space	1
 8297              	.LC13:
 8298 0088 56533432 		.ascii	"VS4210_MODE12 ch1 ch4\015\000"
 8298      31305F4D 
 8298      4F444531 
 8298      32206368 
 8298      31206368 
 8299 009f 00       		.space	1
 8300              	.LC14:
 8301 00a0 56533432 		.ascii	"VS4210_MODE12 ch4 ch2\015\000"
 8301      31305F4D 
 8301      4F444531 
 8301      32206368 
 8301      34206368 
 8302 00b7 00       		.space	1
 8303              	.LC15:
 8304 00b8 56533432 		.ascii	"VS4210_MODE12 ch4 ch3\015\000"
 8304      31305F4D 
 8304      4F444531 
 8304      32206368 
 8304      34206368 
 8305 00cf 00       		.space	1
 8306              	.LC16:
 8307 00d0 56533432 		.ascii	"VS4210_MODE12 ch2 ch1\015\000"
 8307      31305F4D 
 8307      4F444531 
 8307      32206368 
 8307      32206368 
 8308 00e7 00       		.space	1
 8309              	.LC17:
 8310 00e8 56533432 		.ascii	"VS4210_MODE12 ch2 ch3\015\000"
 8310      31305F4D 
 8310      4F444531 
 8310      32206368 
 8310      32206368 
ARM GAS  /tmp/ccQZgaDW.s 			page 251


 8311 00ff 00       		.space	1
 8312              	.LC18:
 8313 0100 56533432 		.ascii	"VS4210_MODE12 ch2 ch4\015\000"
 8313      31305F4D 
 8313      4F444531 
 8313      32206368 
 8313      32206368 
 8314 0117 00       		.space	1
 8315              	.LC19:
 8316 0118 56533432 		.ascii	"VS4210_MODE12 ch1 ch3\015\000"
 8316      31305F4D 
 8316      4F444531 
 8316      32206368 
 8316      31206368 
 8317 012f 00       		.space	1
 8318              	.LC20:
 8319 0130 56533432 		.ascii	"VS4210_MODE12 ch3 ch2\015\000"
 8319      31305F4D 
 8319      4F444531 
 8319      32206368 
 8319      33206368 
 8320 0147 00       		.space	1
 8321              	.LC21:
 8322 0148 56533432 		.ascii	"VS4210_MODE12 ch3 ch4\015\000"
 8322      31305F4D 
 8322      4F444531 
 8322      32206368 
 8322      33206368 
 8323 015f 00       		.space	1
 8324              	.LC22:
 8325 0160 56533432 		.ascii	"VS4210_MODE12 ch3 ch1\015\000"
 8325      31305F4D 
 8325      4F444531 
 8325      32206368 
 8325      33206368 
 8326              		.text
 8327              	.Letext0:
 8328              		.file 2 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_
 8329              		.file 3 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 8330              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 8331              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 8332              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 8333              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 8334              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 8335              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 8336              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 8337              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 8338              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 8339              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 8340              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 8341              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 8342              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 8343              		.file 17 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 8344              		.file 18 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 8345              		.file 19 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/st
 8346              		.file 20 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 8347              		.file 21 "VS4210/VXIS_Extern_Define.h"
ARM GAS  /tmp/ccQZgaDW.s 			page 252


 8348              		.file 22 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 8349              		.file 23 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/ctype.h"
 8350              		.file 24 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/errno.h"
 8351              		.file 25 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/unistd.h"
 8352              		.file 26 "sw_i2c/VX_swi2c.h"
 8353              		.file 27 "VS4210/VS4210.h"
 8354              		.file 28 "TP2824/tpinc/TP2802.h"
 8355              		.file 29 "VS4210/audio.h"
 8356              		.file 30 "VS4210/GT911.h"
 8357              		.file 31 "VS4210/VX_OSD_Simple.h"
 8358              		.file 32 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdio.h"
 8359              		.file 33 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 8360              		.file 34 "<built-in>"
 8361              		.file 35 "VS4210/Printf.h"
 8362              		.file 36 "VS4210/ite66121.h"
 8363              		.file 37 "VS4210/monitor.h"
 8364              		.file 38 "VS4210/TOA_Protocol.h"
 8365              		.file 39 "sw_i2c/sw_i2c0.h"
 8366              		.file 40 "sw_i2c/sw_i2c1.h"
 8367              		.file 41 "sw_i2c/sw_i2c2.h"
 8368              		.file 42 "Inc/main.h"
 8369              		.file 43 "VS4210/HDMI_RX_lib.h"
 8370              		.file 44 "/home/ryan/xun/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/string.h"
 8371              		.file 45 "VS4210/keyremo.h"
 8372              		.file 46 "VS4210/Etc_eep.h"
ARM GAS  /tmp/ccQZgaDW.s 			page 253


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccQZgaDW.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccQZgaDW.s:22     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccQZgaDW.s:171    .text.MX_GPIO_Init:00000000000000c8 $d
     /tmp/ccQZgaDW.s:179    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccQZgaDW.s:185    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccQZgaDW.s:256    .text.MX_TIM3_Init:000000000000004c $d
                            *COM*:0000000000000040 htim3
     /tmp/ccQZgaDW.s:262    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccQZgaDW.s:268    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccQZgaDW.s:308    .text.MX_USART1_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart1
     /tmp/ccQZgaDW.s:314    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccQZgaDW.s:320    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccQZgaDW.s:360    .text.MX_USART2_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart2
     /tmp/ccQZgaDW.s:366    .text.HDMI_AudioModeDetect:0000000000000000 $t
     /tmp/ccQZgaDW.s:372    .text.HDMI_AudioModeDetect:0000000000000000 HDMI_AudioModeDetect
     /tmp/ccQZgaDW.s:436    .text.HDMI_AudioModeDetect:0000000000000050 $d
                            *COM*:0000000000000001 gPreAudioSampleFreq
     /tmp/ccQZgaDW.s:444    .text._write:0000000000000000 $t
     /tmp/ccQZgaDW.s:451    .text._write:0000000000000000 _write
     /tmp/ccQZgaDW.s:503    .text._write:0000000000000030 $d
     /tmp/ccQZgaDW.s:508    .text.Audio_Sel:0000000000000000 $t
     /tmp/ccQZgaDW.s:515    .text.Audio_Sel:0000000000000000 Audio_Sel
     /tmp/ccQZgaDW.s:537    .text.Audio_Sel:000000000000000e $d
     /tmp/ccQZgaDW.s:767    .text.Audio_Sel:0000000000000170 $d
     /tmp/ccQZgaDW.s:776    .text.SET_Audio_Mute:0000000000000000 $t
     /tmp/ccQZgaDW.s:783    .text.SET_Audio_Mute:0000000000000000 SET_Audio_Mute
     /tmp/ccQZgaDW.s:827    .text.SET_Audio_Mute:0000000000000028 $d
     /tmp/ccQZgaDW.s:833    .text.HDMI_VideoModeDetect:0000000000000000 $t
     /tmp/ccQZgaDW.s:839    .text.HDMI_VideoModeDetect:0000000000000000 HDMI_VideoModeDetect
     /tmp/ccQZgaDW.s:1157   .text.HDMI_VideoModeDetect:00000000000001c4 $d
                            *COM*:0000000000000004 newInRes
                            *COM*:000000000000000a pVS4210_MutiWindows1
     /tmp/ccQZgaDW.s:1183   .text.InitialTimerEvent:0000000000000000 $t
     /tmp/ccQZgaDW.s:1190   .text.InitialTimerEvent:0000000000000000 InitialTimerEvent
     /tmp/ccQZgaDW.s:1210   .text.GetRS232_CMD:0000000000000000 $t
     /tmp/ccQZgaDW.s:1217   .text.GetRS232_CMD:0000000000000000 GetRS232_CMD
     /tmp/ccQZgaDW.s:1299   .text.GetRS232_CMD:0000000000000060 $d
     /tmp/ccQZgaDW.s:1308   .text.setloopoutmode:0000000000000000 $t
     /tmp/ccQZgaDW.s:1315   .text.setloopoutmode:0000000000000000 setloopoutmode
     /tmp/ccQZgaDW.s:1335   .text.setloopoutmode:000000000000000c $d
     /tmp/ccQZgaDW.s:1355   .text.setloopoutmode:0000000000000034 $t
     /tmp/ccQZgaDW.s:1899   .text.setloopoutmode:00000000000002f0 $d
                            *COM*:000000000000000a pVS4210_JointKind1
                            *COM*:0000000000000001 CAMA_M
                            *COM*:0000000000000004 gabVXIS_Input_mirrorH
                            *COM*:0000000000000001 CAMB_M
                            *COM*:0000000000000001 CAMC_M
                            *COM*:0000000000000001 CAMR_M
     /tmp/ccQZgaDW.s:1925   .text.setloopoutmode:000000000000034c $t
     /tmp/ccQZgaDW.s:2044   .text.setloopoutmode:00000000000003e8 $d
     /tmp/ccQZgaDW.s:2059   .text.main_init:0000000000000000 $t
     /tmp/ccQZgaDW.s:2066   .text.main_init:0000000000000000 main_init
     /tmp/ccQZgaDW.s:2161   .text.main_init:0000000000000074 $d
ARM GAS  /tmp/ccQZgaDW.s 			page 254


                            *COM*:0000000000000001 DebugLevel
     /tmp/ccQZgaDW.s:2171   .text.LCDPowerON:0000000000000000 $t
     /tmp/ccQZgaDW.s:2178   .text.LCDPowerON:0000000000000000 LCDPowerON
     /tmp/ccQZgaDW.s:2191   .text.LCDPowerOFF:0000000000000000 $t
     /tmp/ccQZgaDW.s:2198   .text.LCDPowerOFF:0000000000000000 LCDPowerOFF
     /tmp/ccQZgaDW.s:2211   .text.uComOnChipInitial:0000000000000000 $t
     /tmp/ccQZgaDW.s:2218   .text.uComOnChipInitial:0000000000000000 uComOnChipInitial
     /tmp/ccQZgaDW.s:2253   .text.uComOnChipInitial:0000000000000024 $d
     /tmp/ccQZgaDW.s:2258   .text.user_pwm_setvalue:0000000000000000 $t
     /tmp/ccQZgaDW.s:2265   .text.user_pwm_setvalue:0000000000000000 user_pwm_setvalue
     /tmp/ccQZgaDW.s:2312   .text.user_pwm_setvalue:0000000000000028 $d
                            *COM*:0000000000000040 htim2
     /tmp/ccQZgaDW.s:2317   .text.AdjustAutoDayNight:0000000000000000 $t
     /tmp/ccQZgaDW.s:2324   .text.AdjustAutoDayNight:0000000000000000 AdjustAutoDayNight
     /tmp/ccQZgaDW.s:2447   .text.AdjustAutoDayNight:000000000000008c $d
     /tmp/ccQZgaDW.s:2454   .text.LoadEEPROM:0000000000000000 $t
     /tmp/ccQZgaDW.s:2461   .text.LoadEEPROM:0000000000000000 LoadEEPROM
     /tmp/ccQZgaDW.s:2474   .text.WaitPowerOn:0000000000000000 $t
     /tmp/ccQZgaDW.s:2481   .text.WaitPowerOn:0000000000000000 WaitPowerOn
     /tmp/ccQZgaDW.s:2586   .text.WaitPowerOn:0000000000000084 $d
     /tmp/ccQZgaDW.s:2593   .text.VS4210_FULL88init2:0000000000000000 $t
     /tmp/ccQZgaDW.s:2600   .text.VS4210_FULL88init2:0000000000000000 VS4210_FULL88init2
     /tmp/ccQZgaDW.s:2644   .text.VS4210_FULL88init2:000000000000001c $d
     /tmp/ccQZgaDW.s:2649   .text.TP_bt1120_1080P_1080P_mode0_w0:0000000000000000 $t
     /tmp/ccQZgaDW.s:2656   .text.TP_bt1120_1080P_1080P_mode0_w0:0000000000000000 TP_bt1120_1080P_1080P_mode0_w0
     /tmp/ccQZgaDW.s:2680   .text.TP_bt1120_1080P_1080P_mode0_w0:0000000000000010 $d
     /tmp/ccQZgaDW.s:2686   .text.TP_bt1120_720P_1080P_mode0_w0:0000000000000000 $t
     /tmp/ccQZgaDW.s:2693   .text.TP_bt1120_720P_1080P_mode0_w0:0000000000000000 TP_bt1120_720P_1080P_mode0_w0
     /tmp/ccQZgaDW.s:2722   .text.TP_bt1120_720P_1080P_mode0_w0:0000000000000018 $d
     /tmp/ccQZgaDW.s:2728   .text.TP_bt1120_NTSC_1080P_mode0_w0:0000000000000000 $t
     /tmp/ccQZgaDW.s:2735   .text.TP_bt1120_NTSC_1080P_mode0_w0:0000000000000000 TP_bt1120_NTSC_1080P_mode0_w0
     /tmp/ccQZgaDW.s:2759   .text.TP_bt1120_NTSC_1080P_mode0_w0:0000000000000010 $d
     /tmp/ccQZgaDW.s:2765   .text.TP_bt1120_PAL_1080P_mode0_w0:0000000000000000 $t
     /tmp/ccQZgaDW.s:2772   .text.TP_bt1120_PAL_1080P_mode0_w0:0000000000000000 TP_bt1120_PAL_1080P_mode0_w0
     /tmp/ccQZgaDW.s:2796   .text.TP_bt1120_PAL_1080P_mode0_w0:0000000000000010 $d
     /tmp/ccQZgaDW.s:2802   .text.SET_VS4210_720_480_out:0000000000000000 $t
     /tmp/ccQZgaDW.s:2809   .text.SET_VS4210_720_480_out:0000000000000000 SET_VS4210_720_480_out
     /tmp/ccQZgaDW.s:3458   .text.SET_VS4210_720_480_out:00000000000003fc $d
     /tmp/ccQZgaDW.s:3461   .text.SET_VS4210_720_480_out:0000000000000400 $t
     /tmp/ccQZgaDW.s:4026   .text.SET_VS4210_1280_720_out:0000000000000000 $t
     /tmp/ccQZgaDW.s:4033   .text.SET_VS4210_1280_720_out:0000000000000000 SET_VS4210_1280_720_out
     /tmp/ccQZgaDW.s:4682   .text.SET_VS4210_1280_720_out:00000000000003fc $d
     /tmp/ccQZgaDW.s:4685   .text.SET_VS4210_1280_720_out:0000000000000400 $t
     /tmp/ccQZgaDW.s:5250   .text.SET_AHD_MDOE:0000000000000000 $t
     /tmp/ccQZgaDW.s:5257   .text.SET_AHD_MDOE:0000000000000000 SET_AHD_MDOE
     /tmp/ccQZgaDW.s:5906   .text.SET_AHD_MDOE:00000000000003fc $d
     /tmp/ccQZgaDW.s:5909   .text.SET_AHD_MDOE:0000000000000400 $t
     /tmp/ccQZgaDW.s:6564   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccQZgaDW.s:6571   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccQZgaDW.s:6644   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccQZgaDW.s:6651   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccQZgaDW.s:6730   .text.HAL_TIM_PeriodElapsedCallback:0000000000000064 $d
     /tmp/ccQZgaDW.s:6744   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccQZgaDW.s:6751   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccQZgaDW.s:6837   .text.HAL_UART_RxCpltCallback:0000000000000068 $d
     /tmp/ccQZgaDW.s:6851   .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/ccQZgaDW.s:6858   .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
ARM GAS  /tmp/ccQZgaDW.s 			page 255


     /tmp/ccQZgaDW.s:6872   .text.HS_Select_Win:0000000000000000 $t
     /tmp/ccQZgaDW.s:6879   .text.HS_Select_Win:0000000000000000 HS_Select_Win
     /tmp/ccQZgaDW.s:7076   .text.HS_Select_Win:0000000000000100 $d
     /tmp/ccQZgaDW.s:7091   .text.main_loop:0000000000000000 $t
     /tmp/ccQZgaDW.s:7098   .text.main_loop:0000000000000000 main_loop
     /tmp/ccQZgaDW.s:7377   .text.main_loop:000000000000018c $d
     /tmp/ccQZgaDW.s:7398   .text.main:0000000000000000 $t
     /tmp/ccQZgaDW.s:7405   .text.main:0000000000000000 main
     /tmp/ccQZgaDW.s:7711   .text.main:00000000000001a8 $d
                            *COM*:0000000000000100 ExOsdContent
     /tmp/ccQZgaDW.s:7738   .text.Error_Handler:0000000000000000 $t
     /tmp/ccQZgaDW.s:7745   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccQZgaDW.s:8099   .data.OSDStateFlg:0000000000000000 OSDStateFlg
     /tmp/ccQZgaDW.s:7890   .bss.OSDSecCount:0000000000000000 OSDSecCount
     /tmp/ccQZgaDW.s:8142   .data.gRxLoopFlg:0000000000000000 gRxLoopFlg
     /tmp/ccQZgaDW.s:7911   .bss.OSD_Show_Flg:0000000000000000 OSD_Show_Flg
     /tmp/ccQZgaDW.s:7967   .bss.Tim1_count:0000000000000000 Tim1_count
     /tmp/ccQZgaDW.s:7979   .bss.TxCount:0000000000000000 TxCount
     /tmp/ccQZgaDW.s:7999   .bss.bSignal:0000000000000000 bSignal
     /tmp/ccQZgaDW.s:8137   .data.gMode0LoopSecCmpVal:0000000000000000 gMode0LoopSecCmpVal
     /tmp/ccQZgaDW.s:8025   .bss.gMode0LoopSecCount:0000000000000000 gMode0LoopSecCount
     /tmp/ccQZgaDW.s:8019   .bss.gMode0LoopFlg:0000000000000000 gMode0LoopFlg
     /tmp/ccQZgaDW.s:8013   .bss.gMode0LoopCount:0000000000000000 gMode0LoopCount
     /tmp/ccQZgaDW.s:8038   .bss.gbAUDO_INDEX:0000000000000000 gbAUDO_INDEX
                            *COM*:0000000000000001 gPrebAUDO_INDEX
     /tmp/ccQZgaDW.s:7824   .bss.CheckSelectInputMode:0000000000000000 CheckSelectInputMode
     /tmp/ccQZgaDW.s:7960   .bss.SelectInputMode:0000000000000000 SelectInputMode
     /tmp/ccQZgaDW.s:8093   .data.OSDPreSecCount:0000000000000000 OSDPreSecCount
     /tmp/ccQZgaDW.s:8118   .data.PrebVXIS_InputMode:0000000000000000 PrebVXIS_InputMode
     /tmp/ccQZgaDW.s:7818   .bss.CURRENT_CH:0000000000000000 CURRENT_CH
     /tmp/ccQZgaDW.s:8086   .data.BOOT_ISSUE:0000000000000000 BOOT_ISSUE
     /tmp/ccQZgaDW.s:7904   .bss.OSD_SPEAKER:0000000000000000 OSD_SPEAKER
     /tmp/ccQZgaDW.s:7897   .bss.OSD_MIRROR:0000000000000000 OSD_MIRROR
                            *COM*:0000000000000001 Priority
                            *COM*:0000000000000001 SelectModeType
     /tmp/ccQZgaDW.s:8060   .bss.tptic:0000000000000000 tptic
     /tmp/ccQZgaDW.s:8048   .bss.keytic:0000000000000000 keytic
     /tmp/ccQZgaDW.s:8111   .data.PowerFlag:0000000000000000 PowerFlag
                            *COM*:0000000000000001 TimeStep
     /tmp/ccQZgaDW.s:8105   .data.PWMLevel:0000000000000000 PWMLevel
     /tmp/ccQZgaDW.s:7812   .bss.AutoDayNightDelay:0000000000000000 AutoDayNightDelay
     /tmp/ccQZgaDW.s:7884   .bss.LightSensor_ADC:0000000000000000 LightSensor_ADC
     /tmp/ccQZgaDW.s:7830   .bss.DayNightLevel:0000000000000000 DayNightLevel
     /tmp/ccQZgaDW.s:8043   .bss.half_scaler:0000000000000000 half_scaler
                            *COM*:0000000000000001 ManVidRes
     /tmp/ccQZgaDW.s:8131   .data.VS8812_ADDR:0000000000000000 VS8812_ADDR
     /tmp/ccQZgaDW.s:8126   .data.VS4210_ADDR:0000000000000000 VS4210_ADDR
                            *COM*:0000000000000030 hadc1
     /tmp/ccQZgaDW.s:7813   .bss.AutoDayNightDelay:0000000000000000 $d
     /tmp/ccQZgaDW.s:7819   .bss.CURRENT_CH:0000000000000000 $d
     /tmp/ccQZgaDW.s:7825   .bss.CheckSelectInputMode:0000000000000000 $d
     /tmp/ccQZgaDW.s:7831   .bss.DayNightLevel:0000000000000000 $d
     /tmp/ccQZgaDW.s:7833   .bss.DebugFlg:0000000000000000 $d
     /tmp/ccQZgaDW.s:7836   .bss.DebugFlg:0000000000000000 DebugFlg
     /tmp/ccQZgaDW.s:7839   .bss.IR_4BYTE:0000000000000000 $d
     /tmp/ccQZgaDW.s:7842   .bss.IR_4BYTE:0000000000000000 IR_4BYTE
     /tmp/ccQZgaDW.s:7847   .bss.IR_Code:0000000000000000 IR_Code
ARM GAS  /tmp/ccQZgaDW.s 			page 256


     /tmp/ccQZgaDW.s:7848   .bss.IR_Code:0000000000000000 $d
     /tmp/ccQZgaDW.s:7852   .bss.IR_END_Flg:0000000000000000 IR_END_Flg
     /tmp/ccQZgaDW.s:7853   .bss.IR_END_Flg:0000000000000000 $d
     /tmp/ccQZgaDW.s:7857   .bss.IR_IRQFlg:0000000000000000 IR_IRQFlg
     /tmp/ccQZgaDW.s:7858   .bss.IR_IRQFlg:0000000000000000 $d
     /tmp/ccQZgaDW.s:7862   .bss.IR_IRQ_Index:0000000000000000 IR_IRQ_Index
     /tmp/ccQZgaDW.s:7863   .bss.IR_IRQ_Index:0000000000000000 $d
     /tmp/ccQZgaDW.s:7865   .bss.IR_PlusTimeVal:0000000000000000 $d
     /tmp/ccQZgaDW.s:7868   .bss.IR_PlusTimeVal:0000000000000000 IR_PlusTimeVal
     /tmp/ccQZgaDW.s:7873   .bss.IR_ShiftCount:0000000000000000 IR_ShiftCount
     /tmp/ccQZgaDW.s:7874   .bss.IR_ShiftCount:0000000000000000 $d
     /tmp/ccQZgaDW.s:7878   .bss.IR_StartFlg:0000000000000000 IR_StartFlg
     /tmp/ccQZgaDW.s:7879   .bss.IR_StartFlg:0000000000000000 $d
     /tmp/ccQZgaDW.s:7881   .bss.LightSensor_ADC:0000000000000000 $d
     /tmp/ccQZgaDW.s:7891   .bss.OSDSecCount:0000000000000000 $d
     /tmp/ccQZgaDW.s:7893   .bss.OSD_MIRROR:0000000000000000 $d
     /tmp/ccQZgaDW.s:7900   .bss.OSD_SPEAKER:0000000000000000 $d
     /tmp/ccQZgaDW.s:7907   .bss.OSD_Show_Flg:0000000000000000 $d
     /tmp/ccQZgaDW.s:7916   .bss.PreIR_Code:0000000000000000 PreIR_Code
     /tmp/ccQZgaDW.s:7917   .bss.PreIR_Code:0000000000000000 $d
     /tmp/ccQZgaDW.s:7921   .bss.PreIR_IRQ_Index:0000000000000000 PreIR_IRQ_Index
     /tmp/ccQZgaDW.s:7922   .bss.PreIR_IRQ_Index:0000000000000000 $d
     /tmp/ccQZgaDW.s:7924   .bss.Rx2_data:0000000000000000 $d
     /tmp/ccQZgaDW.s:7928   .bss.Rx2_data:0000000000000000 Rx2_data
     /tmp/ccQZgaDW.s:7931   .bss.RxBufIndex:0000000000000000 $d
     /tmp/ccQZgaDW.s:7935   .bss.RxBufIndex:0000000000000000 RxBufIndex
     /tmp/ccQZgaDW.s:7938   .bss.Rx_data:0000000000000000 $d
     /tmp/ccQZgaDW.s:7942   .bss.Rx_data:0000000000000000 Rx_data
     /tmp/ccQZgaDW.s:7945   .bss.Rx_indx:0000000000000000 $d
     /tmp/ccQZgaDW.s:7948   .bss.Rx_indx:0000000000000000 Rx_indx
     /tmp/ccQZgaDW.s:7951   .bss.RxiCount:0000000000000000 $d
     /tmp/ccQZgaDW.s:7954   .bss.RxiCount:0000000000000000 RxiCount
     /tmp/ccQZgaDW.s:7961   .bss.SelectInputMode:0000000000000000 $d
     /tmp/ccQZgaDW.s:7963   .bss.Tim1_count:0000000000000000 $d
     /tmp/ccQZgaDW.s:7973   .bss.Transfer_cplt:0000000000000000 Transfer_cplt
     /tmp/ccQZgaDW.s:7974   .bss.Transfer_cplt:0000000000000000 $d
     /tmp/ccQZgaDW.s:7980   .bss.TxCount:0000000000000000 $d
     /tmp/ccQZgaDW.s:7982   .bss.TxiCount:0000000000000000 $d
     /tmp/ccQZgaDW.s:7985   .bss.TxiCount:0000000000000000 TxiCount
     /tmp/ccQZgaDW.s:7988   .bss.bOldSignal:0000000000000000 $d
     /tmp/ccQZgaDW.s:7992   .bss.bOldSignal:0000000000000000 bOldSignal
     /tmp/ccQZgaDW.s:7995   .bss.bSignal:0000000000000000 $d
     /tmp/ccQZgaDW.s:8002   .bss.gAudioSampleFreq:0000000000000000 $d
     /tmp/ccQZgaDW.s:8006   .bss.gAudioSampleFreq:0000000000000000 gAudioSampleFreq
     /tmp/ccQZgaDW.s:8009   .bss.gMode0LoopCount:0000000000000000 $d
     /tmp/ccQZgaDW.s:8020   .bss.gMode0LoopFlg:0000000000000000 $d
     /tmp/ccQZgaDW.s:8026   .bss.gMode0LoopSecCount:0000000000000000 $d
     /tmp/ccQZgaDW.s:8028   .bss.gRxbuf:0000000000000000 $d
     /tmp/ccQZgaDW.s:8032   .bss.gRxbuf:0000000000000000 gRxbuf
     /tmp/ccQZgaDW.s:8039   .bss.gbAUDO_INDEX:0000000000000000 $d
     /tmp/ccQZgaDW.s:8044   .bss.half_scaler:0000000000000000 $d
     /tmp/ccQZgaDW.s:8049   .bss.keytic:0000000000000000 $d
     /tmp/ccQZgaDW.s:8051   .bss.tim3count:0000000000000000 $d
     /tmp/ccQZgaDW.s:8055   .bss.tim3count:0000000000000000 tim3count
     /tmp/ccQZgaDW.s:8061   .bss.tptic:0000000000000000 $d
     /tmp/ccQZgaDW.s:8063   .bss.u16Vendor:0000000000000000 $d
     /tmp/ccQZgaDW.s:8066   .bss.u16Vendor:0000000000000000 u16Vendor
ARM GAS  /tmp/ccQZgaDW.s 			page 257


     /tmp/ccQZgaDW.s:8071   .bss.u8IRCheckcode:0000000000000000 u8IRCheckcode
     /tmp/ccQZgaDW.s:8072   .bss.u8IRCheckcode:0000000000000000 $d
     /tmp/ccQZgaDW.s:8076   .bss.u8IRcode:0000000000000000 u8IRcode
     /tmp/ccQZgaDW.s:8077   .bss.u8IRcode:0000000000000000 $d
     /tmp/ccQZgaDW.s:8081   .bss.u8PowerFlg:0000000000000000 u8PowerFlg
     /tmp/ccQZgaDW.s:8082   .bss.u8PowerFlg:0000000000000000 $d
     /tmp/ccQZgaDW.s:8089   .data.OSDPreSecCount:0000000000000000 $d
     /tmp/ccQZgaDW.s:8114   .data.PrebVXIS_InputMode:0000000000000000 $d
     /tmp/ccQZgaDW.s:8145   .rodata.GetRS232_CMD.str1.4:0000000000000000 $d
     /tmp/ccQZgaDW.s:8152   .rodata.HDMI_VideoModeDetect.str1.4:0000000000000000 $d
     /tmp/ccQZgaDW.s:8162   .rodata.HS_Select_Win.str1.4:0000000000000000 $d
     /tmp/ccQZgaDW.s:8175   .rodata.SET_AHD_MDOE.str1.4:0000000000000000 $d
     /tmp/ccQZgaDW.s:8179   .rodata.SET_Audio_Mute.str1.4:0000000000000000 $d
     /tmp/ccQZgaDW.s:8183   .rodata.SET_VS4210_1280_720_out.str1.4:0000000000000000 $d
     /tmp/ccQZgaDW.s:8187   .rodata.SET_VS4210_720_480_out.str1.4:0000000000000000 $d
     /tmp/ccQZgaDW.s:8191   .rodata.TP_bt1120_1080P_1080P_mode0_w0.str1.4:0000000000000000 $d
     /tmp/ccQZgaDW.s:8195   .rodata.TP_bt1120_720P_1080P_mode0_w0.str1.4:0000000000000000 $d
     /tmp/ccQZgaDW.s:8199   .rodata.TP_bt1120_NTSC_1080P_mode0_w0.str1.4:0000000000000000 $d
     /tmp/ccQZgaDW.s:8203   .rodata.TP_bt1120_PAL_1080P_mode0_w0.str1.4:0000000000000000 $d
     /tmp/ccQZgaDW.s:8207   .rodata.WaitPowerOn.str1.4:0000000000000000 $d
     /tmp/ccQZgaDW.s:8213   .rodata.__FUNCTION__.9357:0000000000000000 $d
     /tmp/ccQZgaDW.s:8217   .rodata.__FUNCTION__.9357:0000000000000000 __FUNCTION__.9357
     /tmp/ccQZgaDW.s:8220   .rodata.__FUNCTION__.9404:0000000000000000 $d
     /tmp/ccQZgaDW.s:8224   .rodata.__FUNCTION__.9404:0000000000000000 __FUNCTION__.9404
     /tmp/ccQZgaDW.s:8227   .rodata.__FUNCTION__.9415:0000000000000000 $d
     /tmp/ccQZgaDW.s:8231   .rodata.__FUNCTION__.9415:0000000000000000 __FUNCTION__.9415
     /tmp/ccQZgaDW.s:8234   .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccQZgaDW.s:8251   .rodata.main_init.str1.4:0000000000000000 $d
     /tmp/ccQZgaDW.s:8268   .rodata.main_loop.str1.4:0000000000000000 $d
     /tmp/ccQZgaDW.s:8275   .rodata.setloopoutmode.str1.4:0000000000000000 $d
     /tmp/ccQZgaDW.s:542    .text.Audio_Sel:0000000000000013 $d
     /tmp/ccQZgaDW.s:542    .text.Audio_Sel:0000000000000014 $t

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_UART_Init
getHDMIRXAudioInfo
HDMI_Tx_SetAudioFs
gHDMI_Index
HAL_UART_Transmit
__errno
Printf
VS4210_Rx_NoSignal
printf
Set_Video_Loss_OSD
GetHDMI_InputMode
VXISI2CWrite
CheckHDMIRX
VS4210_SetInModeOutMode
VS4210_SetInputSizeHV
MCUTimerActiveTimerEvent
gbVXIS_InputMode
PreVState
ARM GAS  /tmp/ccQZgaDW.s 			page 258


VState
gHTotal
gVActive
gHActive
gVTotal
MCUTimerInitialTimerEvent
strtol
puts
VS4210_SetMutiWindows
AudioMute
MCUTimerCancelTimerEvent
AUDIO_SELECT
GetFWRevEE
delay
SaveFWRevEE
ClearBasicEE
HAL_TIM_PWM_ConfigChannel
HAL_TIM_PWM_Start
PowerLED
WriteEEP
TriggerHandler
SysTimerHandler
EQ_Detect
GT9147_Scan
CheckKeyIn
CheckTrigger
VS4210_Addr_88param
VS4210_TP_bt1120_1080P_1080P_mode0_w0_88param
VS4210_TP_bt1120_720P_1080P_mode0_w0_88param
VS4210_TP_bt1120_NTSC_1080P_mode0_w0_88param
VS4210_TP_bt1120_PAL_1080P_mode0_w0_88param
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
tic02
tic03
tic04
g_usTimerCounter
g_bNotifyTimer0Int
HAL_UART_Receive_IT
RS_in
RS_buf
RS2_in
RS2_buf
mode
TP_InputMode
HDMITX_DevLoopProc
OSD_Clear_All
Monitor
RS_ready
TOAReceivePaser
RS2_ready
Get_2824cIrq
msleep
VXISI2CRead
HAL_GPIO_ReadPin
AccessEnable
ARM GAS  /tmp/ccQZgaDW.s 			page 259


HAL_Init
SW_I2C0_Init
SW_I2C1_Init
SW_I2C2_Init
SW_I2C3_Init
InitHDMIRX
HDMIRX_WriteI2C_Byte
HDMIRX_ReadI2C_Byte
VXOSD_UseFont_init
Init_TP280x_RegSet
VXIS_fSetOsdx2
HAL_TIM_Base_Start_IT
UserDefineFont1
